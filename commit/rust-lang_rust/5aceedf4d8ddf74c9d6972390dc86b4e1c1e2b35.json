{"sha": "5aceedf4d8ddf74c9d6972390dc86b4e1c1e2b35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhY2VlZGY0ZDhkZGY3NGM5ZDY5NzIzOTBkYzg2YjRlMWMxZTJiMzU=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2016-11-26T13:02:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-26T13:02:14Z"}, "message": "Rollup merge of #37963 - bluss:iterator-docs, r=alexcrichton\n\nFix two small issues in iterator docs\n\n- `collect()` is a regular method, not an adaptor (does not return an Iterator). I just randomly picked `filter` as a third common adaptor to mention instead.\n- Fix example in `Map`'s docs so that it uses the DoubleEndedIterator implementation", "tree": {"sha": "f8e67624a176ba63b64ac83fe931b6f4efb7ab30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8e67624a176ba63b64ac83fe931b6f4efb7ab30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5aceedf4d8ddf74c9d6972390dc86b4e1c1e2b35", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5aceedf4d8ddf74c9d6972390dc86b4e1c1e2b35", "html_url": "https://github.com/rust-lang/rust/commit/5aceedf4d8ddf74c9d6972390dc86b4e1c1e2b35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5aceedf4d8ddf74c9d6972390dc86b4e1c1e2b35/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a809749fdf0fc283794a5132ea2f1b950b07f6fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/a809749fdf0fc283794a5132ea2f1b950b07f6fb", "html_url": "https://github.com/rust-lang/rust/commit/a809749fdf0fc283794a5132ea2f1b950b07f6fb"}, {"sha": "557369ed2eadc3861ce32c53ef0c207bc112abc0", "url": "https://api.github.com/repos/rust-lang/rust/commits/557369ed2eadc3861ce32c53ef0c207bc112abc0", "html_url": "https://github.com/rust-lang/rust/commit/557369ed2eadc3861ce32c53ef0c207bc112abc0"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "3999db0d63c99ac8770076f537e8807d5a8e33cc", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5aceedf4d8ddf74c9d6972390dc86b4e1c1e2b35/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5aceedf4d8ddf74c9d6972390dc86b4e1c1e2b35/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=5aceedf4d8ddf74c9d6972390dc86b4e1c1e2b35", "patch": "@@ -225,12 +225,12 @@\n //! often called 'iterator adapters', as they're a form of the 'adapter\n //! pattern'.\n //!\n-//! Common iterator adapters include [`map()`], [`take()`], and [`collect()`].\n+//! Common iterator adapters include [`map()`], [`take()`], and [`filter()`].\n //! For more, see their documentation.\n //!\n //! [`map()`]: trait.Iterator.html#method.map\n //! [`take()`]: trait.Iterator.html#method.take\n-//! [`collect()`]: trait.Iterator.html#method.collect\n+//! [`filter()`]: trait.Iterator.html#method.filter\n //!\n //! # Laziness\n //!\n@@ -268,7 +268,7 @@\n //! [`map()`]: trait.Iterator.html#method.map\n //!\n //! The two most common ways to evaluate an iterator are to use a `for` loop\n-//! like this, or using the [`collect()`] adapter to produce a new collection.\n+//! like this, or using the [`collect()`] method to produce a new collection.\n //!\n //! [`collect()`]: trait.Iterator.html#method.collect\n //!\n@@ -937,7 +937,7 @@ unsafe impl<A, B> TrustedLen for Zip<A, B>\n /// you can also [`map()`] backwards:\n ///\n /// ```rust\n-/// let v: Vec<i32> = vec![1, 2, 3].into_iter().rev().map(|x| x + 1).collect();\n+/// let v: Vec<i32> = vec![1, 2, 3].into_iter().map(|x| x + 1).rev().collect();\n ///\n /// assert_eq!(v, [4, 3, 2]);\n /// ```"}]}