{"sha": "ced971ee9f877d866456bd0e34734056595b1a57", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlZDk3MWVlOWY4NzdkODY2NDU2YmQwZTM0NzM0MDU2NTk1YjFhNTc=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-05-20T16:31:41Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-05-21T18:40:29Z"}, "message": "Fix crash with int vars in canonicalization", "tree": {"sha": "ecada644ef5a0270689036d266d90eee899da560", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecada644ef5a0270689036d266d90eee899da560"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ced971ee9f877d866456bd0e34734056595b1a57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ced971ee9f877d866456bd0e34734056595b1a57", "html_url": "https://github.com/rust-lang/rust/commit/ced971ee9f877d866456bd0e34734056595b1a57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ced971ee9f877d866456bd0e34734056595b1a57/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f613c48d2e2afa1761623d186d11c1719f9ef3f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f613c48d2e2afa1761623d186d11c1719f9ef3f7", "html_url": "https://github.com/rust-lang/rust/commit/f613c48d2e2afa1761623d186d11c1719f9ef3f7"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "bc971972584eb8e13d7668a12739ea8d224ebaa5", "filename": "crates/ra_hir/src/ty/infer/unify.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/ced971ee9f877d866456bd0e34734056595b1a57/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ced971ee9f877d866456bd0e34734056595b1a57/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Finfer%2Funify.rs?ref=ced971ee9f877d866456bd0e34734056595b1a57", "patch": "@@ -56,7 +56,12 @@ where\n                     self.var_stack.pop();\n                     result\n                 } else {\n-                    let free_var = InferTy::TypeVar(self.ctx.var_unification_table.find(inner));\n+                    let root = self.ctx.var_unification_table.find(inner);\n+                    let free_var = match tv {\n+                        InferTy::TypeVar(_) => InferTy::TypeVar(root),\n+                        InferTy::IntVar(_) => InferTy::IntVar(root),\n+                        InferTy::FloatVar(_) => InferTy::FloatVar(root),\n+                    };\n                     let position = self.add(free_var);\n                     Ty::Bound(position as u32)\n                 }"}]}