{"sha": "a419cedb1cc661349a022262c8b03993e063252f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0MTljZWRiMWNjNjYxMzQ5YTAyMjI2MmM4YjAzOTkzZTA2MzI1MmY=", "commit": {"author": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-05-23T13:31:56Z"}, "committer": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-05-31T00:10:23Z"}, "message": "Fix tests, apply code review proposals", "tree": {"sha": "0ecbd647606acdd5680c61f6b2d03b870a2c3a03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ecbd647606acdd5680c61f6b2d03b870a2c3a03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a419cedb1cc661349a022262c8b03993e063252f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a419cedb1cc661349a022262c8b03993e063252f", "html_url": "https://github.com/rust-lang/rust/commit/a419cedb1cc661349a022262c8b03993e063252f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a419cedb1cc661349a022262c8b03993e063252f/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "030d78345fa79af07f8ebd89a9d244576fac992b", "url": "https://api.github.com/repos/rust-lang/rust/commits/030d78345fa79af07f8ebd89a9d244576fac992b", "html_url": "https://github.com/rust-lang/rust/commit/030d78345fa79af07f8ebd89a9d244576fac992b"}], "stats": {"total": 36, "additions": 22, "deletions": 14}, "files": [{"sha": "e1da335f5f6edcc99b1fec4abab0ee098a9a36e2", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a419cedb1cc661349a022262c8b03993e063252f/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/a419cedb1cc661349a022262c8b03993e063252f/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=a419cedb1cc661349a022262c8b03993e063252f", "patch": "@@ -1119,6 +1119,7 @@ dependencies = [\n  \"memmap\",\n  \"ra_mbe\",\n  \"ra_proc_macro\",\n+ \"ra_toolchain\",\n  \"ra_tt\",\n  \"serde_derive\",\n  \"test_utils\","}, {"sha": "5821029450f5b0062bdbab907c684695c7f8609d", "filename": "crates/ra_proc_macro_srv/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a419cedb1cc661349a022262c8b03993e063252f/crates%2Fra_proc_macro_srv%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a419cedb1cc661349a022262c8b03993e063252f/crates%2Fra_proc_macro_srv%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2FCargo.toml?ref=a419cedb1cc661349a022262c8b03993e063252f", "patch": "@@ -22,3 +22,4 @@ cargo_metadata = \"0.10.0\"\n difference = \"2.0.0\"\n # used as proc macro test target\n serde_derive = \"1.0.106\"\n+ra_toolchain = { path = \"../ra_toolchain\" }"}, {"sha": "8d85f2d8a77521d40c396c3fb55a9f0a22853694", "filename": "crates/ra_proc_macro_srv/src/tests/utils.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a419cedb1cc661349a022262c8b03993e063252f/crates%2Fra_proc_macro_srv%2Fsrc%2Ftests%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a419cedb1cc661349a022262c8b03993e063252f/crates%2Fra_proc_macro_srv%2Fsrc%2Ftests%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_proc_macro_srv%2Fsrc%2Ftests%2Futils.rs?ref=a419cedb1cc661349a022262c8b03993e063252f", "patch": "@@ -2,7 +2,6 @@\n \n use crate::dylib;\n use crate::ProcMacroSrv;\n-pub use difference::Changeset as __Changeset;\n use ra_proc_macro::ListMacrosTask;\n use std::str::FromStr;\n use test_utils::assert_eq_text;\n@@ -13,7 +12,7 @@ mod fixtures {\n \n     // Use current project metadata to get the proc-macro dylib path\n     pub fn dylib_path(crate_name: &str, version: &str) -> std::path::PathBuf {\n-        let command = Command::new(\"cargo\")\n+        let command = Command::new(ra_toolchain::cargo())\n             .args(&[\"check\", \"--message-format\", \"json\"])\n             .output()\n             .unwrap()"}, {"sha": "d42cfa30004e8e5d9c87aec9cf1c59350f36a71d", "filename": "crates/rust-analyzer/src/main_loop/handlers.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a419cedb1cc661349a022262c8b03993e063252f/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a419cedb1cc661349a022262c8b03993e063252f/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=a419cedb1cc661349a022262c8b03993e063252f", "patch": "@@ -427,7 +427,7 @@ pub fn handle_runnables(\n                 res.push(lsp_ext::Runnable {\n                     range: Default::default(),\n                     label: format!(\"cargo {} -p {}\", cmd, spec.package),\n-                    bin: \"cargo\".to_string(),\n+                    bin: cargo_path()?,\n                     args: vec![cmd.to_string(), \"--package\".to_string(), spec.package.clone()],\n                     extra_args: Vec::new(),\n                     env: FxHashMap::default(),\n@@ -439,7 +439,7 @@ pub fn handle_runnables(\n             res.push(lsp_ext::Runnable {\n                 range: Default::default(),\n                 label: \"cargo check --workspace\".to_string(),\n-                bin: \"cargo\".to_string(),\n+                bin: cargo_path()?,\n                 args: vec![\"check\".to_string(), \"--workspace\".to_string()],\n                 extra_args: Vec::new(),\n                 env: FxHashMap::default(),\n@@ -450,6 +450,13 @@ pub fn handle_runnables(\n     Ok(res)\n }\n \n+fn cargo_path() -> Result<String> {\n+    Ok(ra_toolchain::cargo()\n+        .to_str()\n+        .context(\"Path to `cargo` executable contains invalid UTF8 characters\")?\n+        .to_owned())\n+}\n+\n pub fn handle_completion(\n     world: WorldSnapshot,\n     params: lsp_types::CompletionParams,\n@@ -983,15 +990,11 @@ fn to_lsp_runnable(\n             target.map_or_else(|| \"run binary\".to_string(), |t| format!(\"run {}\", t))\n         }\n     };\n-    let cargo_path = ra_toolchain::cargo()\n-        .to_str()\n-        .context(\"Path to cargo executable contains invalid UTF8 characters\")?\n-        .to_owned();\n \n     Ok(lsp_ext::Runnable {\n         range: to_proto::range(&line_index, runnable.range),\n         label,\n-        bin: cargo_path,\n+        bin: cargo_path()?,\n         args,\n         extra_args,\n         env: {"}, {"sha": "a31580c867c303c25b30b6b601266072676a0e15", "filename": "crates/rust-analyzer/tests/heavy_tests/main.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a419cedb1cc661349a022262c8b03993e063252f/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a419cedb1cc661349a022262c8b03993e063252f/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fheavy_tests%2Fmain.rs?ref=a419cedb1cc661349a022262c8b03993e063252f", "patch": "@@ -58,6 +58,10 @@ use std::collections::Spam;\n     eprintln!(\"completion took {:?}\", completion_start.elapsed());\n }\n \n+fn cargo_path() -> String {\n+    ra_toolchain::cargo().to_str().unwrap().to_owned()\n+}\n+\n #[test]\n fn test_runnables_no_project() {\n     if skip_slow_tests() {\n@@ -79,7 +83,7 @@ fn foo() {\n           {\n             \"args\": [ \"test\" ],\n             \"extraArgs\": [ \"foo\", \"--nocapture\" ],\n-            \"bin\": \"cargo\",\n+            \"bin\": cargo_path(),\n             \"env\": { \"RUST_BACKTRACE\": \"short\" },\n             \"cwd\": null,\n             \"label\": \"test foo\",\n@@ -91,7 +95,7 @@ fn foo() {\n           {\n             \"args\": [\"check\", \"--workspace\"],\n             \"extraArgs\": [],\n-            \"bin\": \"cargo\",\n+            \"bin\": cargo_path(),\n             \"env\": {},\n             \"cwd\": null,\n             \"label\": \"cargo check --workspace\",\n@@ -141,7 +145,7 @@ fn main() {}\n             {\n               \"args\": [ \"test\", \"--package\", \"foo\", \"--test\", \"spam\" ],\n               \"extraArgs\": [ \"test_eggs\", \"--exact\", \"--nocapture\" ],\n-              \"bin\": \"cargo\",\n+              \"bin\": cargo_path(),\n               \"env\": { \"RUST_BACKTRACE\": \"short\" },\n               \"label\": \"test test_eggs\",\n               \"range\": {\n@@ -153,7 +157,7 @@ fn main() {}\n             {\n               \"args\": [ \"check\", \"--package\", \"foo\" ],\n               \"extraArgs\": [],\n-              \"bin\": \"cargo\",\n+              \"bin\": cargo_path(),\n               \"env\": {},\n               \"label\": \"cargo check -p foo\",\n               \"range\": {\n@@ -165,7 +169,7 @@ fn main() {}\n             {\n               \"args\": [ \"test\", \"--package\", \"foo\" ],\n               \"extraArgs\": [],\n-              \"bin\": \"cargo\",\n+              \"bin\": cargo_path(),\n               \"env\": {},\n               \"label\": \"cargo test -p foo\",\n               \"range\": {"}]}