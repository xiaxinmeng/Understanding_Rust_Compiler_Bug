{"sha": "feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlYWFjMTlmMTcxMGViY2ZlY2M3ODNkNTFmNTJhOWIwZDhlOTk4ZjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-27T07:59:24Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-27T07:59:24Z"}, "message": "Auto merge of #83547 - JohnTitor:rollup-qh7j6hg, r=JohnTitor\n\nRollup of 9 pull requests\n\nSuccessful merges:\n\n - #83239 (Remove/replace some outdated crates from the dependency tree)\n - #83328 (Fixes to inline assmebly tests)\n - #83343 (Simplify and fix byte skipping in format! string parser)\n - #83388 (Make # pretty print format easier to discover)\n - #83431 (Tell GitHub to highlight `config.toml.example` as TOML)\n - #83508 (Use the direct link to the platform support page)\n - #83511 (compiletest: handle llvm_version with suffix like \"12.0.0libcxx\")\n - #83524 (Document that the SocketAddr memory representation is not stable)\n - #83525 (fix doc comment for `ty::Dynamic`)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "44502d0676b2b73cc6c5c4377338d5309134d7ca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/44502d0676b2b73cc6c5c4377338d5309134d7ca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "html_url": "https://github.com/rust-lang/rust/commit/feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f811f14006fa46030f1af714f7d640580d3ad822", "url": "https://api.github.com/repos/rust-lang/rust/commits/f811f14006fa46030f1af714f7d640580d3ad822", "html_url": "https://github.com/rust-lang/rust/commit/f811f14006fa46030f1af714f7d640580d3ad822"}, {"sha": "1b01e0d36a1498ffe69dad46168efbf762bf0bb8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b01e0d36a1498ffe69dad46168efbf762bf0bb8", "html_url": "https://github.com/rust-lang/rust/commit/1b01e0d36a1498ffe69dad46168efbf762bf0bb8"}], "stats": {"total": 139, "additions": 82, "deletions": 57}, "files": [{"sha": "51a670b5fbefdaf7904f1d304ea482b0543bc9a9", "filename": ".gitattributes", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/.gitattributes", "raw_url": "https://github.com/rust-lang/rust/raw/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/.gitattributes", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitattributes?ref=feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "patch": "@@ -9,6 +9,7 @@\n src/etc/installer/gfx/* binary\n src/vendor/** -text\n Cargo.lock linguist-generated=false\n+config.toml.example linguist-language=TOML\n \n # Older git versions try to fix line endings on images and fonts, this prevents it.\n *.png binary"}, {"sha": "284a1ba548262bd0658b899b9a5e3f745ecb3c10", "filename": "Cargo.lock", "status": "modified", "additions": 19, "deletions": 22, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "patch": "@@ -254,11 +254,11 @@ checksum = \"e3b5ca7a04898ad4bcd41c90c5285445ff5b791899bb1b0abdd2a2aa791211d7\"\n \n [[package]]\n name = \"bytecount\"\n-version = \"0.6.0\"\n+version = \"0.6.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b0017894339f586ccb943b01b9555de56770c11cda818e7e3d8bd93f4ed7f46e\"\n+checksum = \"72feb31ffc86498dacdbd0fcebb56138e7177a8cc5cea4516031d15ae85a742e\"\n dependencies = [\n- \"packed_simd\",\n+ \"packed_simd_2\",\n ]\n \n [[package]]\n@@ -629,15 +629,6 @@ dependencies = [\n  \"unicode-normalization\",\n ]\n \n-[[package]]\n-name = \"cloudabi\"\n-version = \"0.1.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"4344512281c643ae7638bbabc3af17a11307803ec8f0fcad9fae512a8bf36467\"\n-dependencies = [\n- \"bitflags\",\n-]\n-\n [[package]]\n name = \"cmake\"\n version = \"0.1.44\"\n@@ -1939,6 +1930,12 @@ dependencies = [\n  \"pkg-config\",\n ]\n \n+[[package]]\n+name = \"libm\"\n+version = \"0.1.4\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"7fc7aa29613bd6a620df431842069224d8bc9011086b1db4c0e0cd47fa03ec9a\"\n+\n [[package]]\n name = \"libnghttp2-sys\"\n version = \"0.1.4+1.41.0\"\n@@ -2482,12 +2479,13 @@ dependencies = [\n ]\n \n [[package]]\n-name = \"packed_simd\"\n-version = \"0.3.3\"\n+name = \"packed_simd_2\"\n+version = \"0.3.4\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a85ea9fc0d4ac0deb6fe7911d38786b32fc11119afd9e9d38b84ff691ce64220\"\n+checksum = \"3278e0492f961fd4ae70909f56b2723a7e8d01a228427294e19cdfdebda89a17\"\n dependencies = [\n  \"cfg-if 0.1.10\",\n+ \"libm\",\n ]\n \n [[package]]\n@@ -2530,9 +2528,9 @@ dependencies = [\n \n [[package]]\n name = \"parking_lot\"\n-version = \"0.11.0\"\n+version = \"0.11.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a4893845fa2ca272e647da5d0e46660a314ead9c2fdd9a883aabc32e481a8733\"\n+checksum = \"6d7744ac029df22dca6284efe4e898991d28e3085c706c972bcd7da4a27a15eb\"\n dependencies = [\n  \"instant\",\n  \"lock_api\",\n@@ -2541,15 +2539,14 @@ dependencies = [\n \n [[package]]\n name = \"parking_lot_core\"\n-version = \"0.8.0\"\n+version = \"0.8.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"c361aa727dd08437f2f1447be8b59a33b0edd15e0fcee698f935613d9efbca9b\"\n+checksum = \"fa7a782938e745763fe6907fc6ba86946d72f49fe7e21de074e08128a99fb018\"\n dependencies = [\n- \"cfg-if 0.1.10\",\n- \"cloudabi\",\n+ \"cfg-if 1.0.0\",\n  \"instant\",\n  \"libc\",\n- \"redox_syscall 0.1.57\",\n+ \"redox_syscall 0.2.5\",\n  \"smallvec 1.6.1\",\n  \"winapi 0.3.9\",\n ]"}, {"sha": "2fcb94cf0a63dd337b35f467ee262f28644dd092", "filename": "RELEASES.md", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "patch": "@@ -35,7 +35,7 @@ Compiler\n - [Added tier 3 support for `i386-unknown-linux-gnu` and `i486-unknown-linux-gnu` targets.][80662]\n - [The `target-cpu=native` option will now detect individual features of CPUs.][80749]\n \n-\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n information on Rust's tiered platform support.\n \n Libraries\n@@ -183,7 +183,7 @@ Compiler\n - [The `x86_64-unknown-freebsd` is now built with the full toolset.][79484]\n - [Dropped support for all cloudabi targets.][78439]\n \n-\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n information on Rust's tiered platform support.\n \n Libraries\n@@ -360,7 +360,7 @@ Compiler\n - [Output from threads spawned in tests is now captured.][78227]\n - [Change os and vendor values to \"none\" and \"unknown\" for some targets][78951]\n \n-\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n information on Rust's tiered platform support.\n \n Libraries\n@@ -465,7 +465,7 @@ Compiler\n   Note: If you're using cargo you must explicitly pass the `--target` flag.\n - [Added tier 2\\* support for `aarch64-unknown-linux-musl`.][76420]\n \n-\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n information on Rust's tiered platform support.\n \n Libraries\n@@ -604,7 +604,7 @@ Compiler\n - [Upgrade the FreeBSD toolchain to version 11.4][75204]\n - [`RUST_BACKTRACE`'s output is now more compact.][75048]\n \n-\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n information on Rust's tiered platform support.\n \n Libraries\n@@ -889,7 +889,7 @@ Compiler\n - [Added tier 3 support for the `thumbv7a-uwp-windows-msvc` target.][72133]\n - [Upgraded to LLVM 10.][67759]\n \n-\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n information on Rust's tiered platform support.\n \n \n@@ -1398,7 +1398,7 @@ Compiler\n    pointing to the location where they were called, rather than\n    `core`'s internals. ][67887]\n \n-\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n information on Rust's tiered platform support.\n \n Libraries\n@@ -1496,7 +1496,7 @@ Compiler\n - [You can now provide `--extern` flag without a path, indicating that it is\n   available from the search path or specified with an `-L` flag.][64882]\n \n-\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n information on Rust's tiered platform support.\n \n [argfile-docs]: https://doc.rust-lang.org/nightly/rustc/command-line-arguments.html#path-load-command-line-flags-from-a-path\n@@ -1620,7 +1620,7 @@ Compiler\n - [Added tier 3 support for the `mips64-unknown-linux-muslabi64`, and\n   `mips64el-unknown-linux-muslabi64` targets.][65843]\n \n-\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n   information on Rust's tiered platform support.\n \n Libraries\n@@ -1770,7 +1770,7 @@ Compiler\n   output of successful tests.][62600]\n \n \n-\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n information on Rust's tiered platform support.\n \n Libraries\n@@ -1864,7 +1864,7 @@ Compiler\n - [Added tier 3 support for the `riscv32i-unknown-none-elf` target.][62784]\n - [Upgraded to LLVM 9.][62592]\n \n-\\* Refer to Rust's [platform support page][forge-platform-support] for more\n+\\* Refer to Rust's [platform support page][platform-support-doc] for more\n information on Rust's tiered platform support.\n \n Libraries\n@@ -1951,7 +1951,7 @@ Compatibility Notes\n [`Duration::mul_f32`]: https://doc.rust-lang.org/std/time/struct.Duration.html#method.mul_f32\n [`Duration::mul_f64`]: https://doc.rust-lang.org/std/time/struct.Duration.html#method.mul_f64\n [`any::type_name`]: https://doc.rust-lang.org/std/any/fn.type_name.html\n-[forge-platform-support]: https://forge.rust-lang.org/release/platform-support.html\n+[platform-support-doc]: https://doc.rust-lang.org/nightly/rustc/platform-support.html\n [pipeline-internals]: https://internals.rust-lang.org/t/evaluating-pipelined-rustc-compilation/10199\n \n Version 1.37.0 (2019-08-15)"}, {"sha": "e78e928398f8ad99a76fd2bb5a00195ad2f842a9", "filename": "compiler/rustc_middle/src/ty/sty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fsty.rs?ref=feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "patch": "@@ -160,7 +160,7 @@ pub enum TyKind<'tcx> {\n     /// ```\n     FnPtr(PolyFnSig<'tcx>),\n \n-    /// A trait, defined with `trait`.\n+    /// A trait object. Written as `dyn for<'b> Trait<'b, Assoc = u32> + Send + 'a`.\n     Dynamic(&'tcx List<Binder<ExistentialPredicate<'tcx>>>, ty::Region<'tcx>),\n \n     /// The anonymous type of a closure. Used to represent the type of"}, {"sha": "a5fdf064e949b28a1f404746bb871490b36a77b0", "filename": "compiler/rustc_parse_format/src/lib.rs", "status": "modified", "additions": 9, "deletions": 14, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse_format%2Fsrc%2Flib.rs?ref=feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "patch": "@@ -735,25 +735,24 @@ fn find_skips_from_snippet(\n     };\n \n     fn find_skips(snippet: &str, is_raw: bool) -> Vec<usize> {\n-        let mut eat_ws = false;\n         let mut s = snippet.char_indices().peekable();\n         let mut skips = vec![];\n         while let Some((pos, c)) = s.next() {\n             match (c, s.peek()) {\n                 // skip whitespace and empty lines ending in '\\\\'\n                 ('\\\\', Some((next_pos, '\\n'))) if !is_raw => {\n-                    eat_ws = true;\n                     skips.push(pos);\n                     skips.push(*next_pos);\n                     let _ = s.next();\n-                }\n-                ('\\\\', Some((next_pos, '\\n' | 'n' | 't'))) if eat_ws => {\n-                    skips.push(pos);\n-                    skips.push(*next_pos);\n-                    let _ = s.next();\n-                }\n-                (' ' | '\\n' | '\\t', _) if eat_ws => {\n-                    skips.push(pos);\n+\n+                    while let Some((pos, c)) = s.peek() {\n+                        if matches!(c, ' ' | '\\n' | '\\t') {\n+                            skips.push(*pos);\n+                            let _ = s.next();\n+                        } else {\n+                            break;\n+                        }\n+                    }\n                 }\n                 ('\\\\', Some((next_pos, 'n' | 't' | 'r' | '0' | '\\\\' | '\\'' | '\\\"'))) => {\n                     skips.push(*next_pos);\n@@ -804,10 +803,6 @@ fn find_skips_from_snippet(\n                         }\n                     }\n                 }\n-                _ if eat_ws => {\n-                    // `take_while(|c| c.is_whitespace())`\n-                    eat_ws = false;\n-                }\n                 _ => {}\n             }\n         }"}, {"sha": "e765fa9d14cc586c2da426c7f9ca1213cfbf1f13", "filename": "library/alloc/src/fmt.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/library%2Falloc%2Fsrc%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/library%2Falloc%2Fsrc%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Ffmt.rs?ref=feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "patch": "@@ -19,6 +19,10 @@\n //! format!(\"{value}\", value=4);      // => \"4\"\n //! format!(\"{} {}\", 1, 2);           // => \"1 2\"\n //! format!(\"{:04}\", 42);             // => \"0042\" with leading zeros\n+//! format!(\"{:#?}\", (100, 200));     // => \"(\n+//!                                   //       100,\n+//!                                   //       200,\n+//!                                   //     )\"\n //! ```\n //!\n //! From these, you can see that the first argument is a format string. It is\n@@ -163,7 +167,7 @@\n //! * `-` - Currently not used\n //! * `#` - This flag indicates that the \"alternate\" form of printing should\n //!         be used. The alternate forms are:\n-//!     * `#?` - pretty-print the [`Debug`] formatting\n+//!     * `#?` - pretty-print the [`Debug`] formatting (adds linebreaks and indentation)\n //!     * `#x` - precedes the argument with a `0x`\n //!     * `#X` - precedes the argument with a `0x`\n //!     * `#b` - precedes the argument with a `0b`"}, {"sha": "55546a5b03771a1cbadc851a38f9e92af7ee2065", "filename": "library/std/src/net/addr.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/library%2Fstd%2Fsrc%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/library%2Fstd%2Fsrc%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fnet%2Faddr.rs?ref=feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "patch": "@@ -57,7 +57,8 @@ pub enum SocketAddr {\n /// See [`SocketAddr`] for a type encompassing both IPv4 and IPv6 socket addresses.\n ///\n /// The size of a `SocketAddrV4` struct may vary depending on the target operating\n-/// system.\n+/// system. Do not assume that this type has the same memory layout as the underlying\n+/// system representation.\n ///\n /// [IETF RFC 793]: https://tools.ietf.org/html/rfc793\n /// [`IPv4` address]: Ipv4Addr\n@@ -76,6 +77,8 @@ pub enum SocketAddr {\n #[derive(Copy)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct SocketAddrV4 {\n+    // Do not assume that this struct is implemented as the underlying system representation.\n+    // The memory layout is not part of the stable interface that std exposes.\n     inner: c::sockaddr_in,\n }\n \n@@ -88,7 +91,8 @@ pub struct SocketAddrV4 {\n /// See [`SocketAddr`] for a type encompassing both IPv4 and IPv6 socket addresses.\n ///\n /// The size of a `SocketAddrV6` struct may vary depending on the target operating\n-/// system.\n+/// system. Do not assume that this type has the same memory layout as the underlying\n+/// system representation.\n ///\n /// [IETF RFC 2553, Section 3.3]: https://tools.ietf.org/html/rfc2553#section-3.3\n /// [`IPv6` address]: Ipv6Addr\n@@ -107,6 +111,8 @@ pub struct SocketAddrV4 {\n #[derive(Copy)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct SocketAddrV6 {\n+    // Do not assume that this struct is implemented as the underlying system representation.\n+    // The memory layout is not part of the stable interface that std exposes.\n     inner: c::sockaddr_in6,\n }\n "}, {"sha": "ed8cefc58b727e8f4b793f2761844ebc4d59abc9", "filename": "src/test/ui/asm/srcloc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/src%2Ftest%2Fui%2Fasm%2Fsrcloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/src%2Ftest%2Fui%2Fasm%2Fsrcloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fsrcloc.rs?ref=feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "patch": "@@ -1,7 +1,7 @@\n // min-llvm-version: 10.0.1\n // only-x86_64\n // build-fail\n-\n+// compile-flags: -Ccodegen-units=1\n #![feature(asm)]\n \n // Checks that inline asm errors are mapped to the correct line in the source code."}, {"sha": "634ef010e6feaa96405a8ac6c5807711314b51cf", "filename": "src/test/ui/asm/sym.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/src%2Ftest%2Fui%2Fasm%2Fsym.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/src%2Ftest%2Fui%2Fasm%2Fsym.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasm%2Fsym.rs?ref=feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "patch": "@@ -76,5 +76,5 @@ fn main() {\n     std::thread::spawn(|| {\n         assert_eq!(static_addr!(S1), &S1 as *const u32);\n         assert_eq!(static_tls_addr!(S2), &S2 as *const u32);\n-    });\n+    }).join().unwrap();\n }"}, {"sha": "d26200295cdcf41414b989a94063b09972c01d08", "filename": "src/test/ui/macros/issue-83340.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/src%2Ftest%2Fui%2Fmacros%2Fissue-83340.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/src%2Ftest%2Fui%2Fmacros%2Fissue-83340.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-83340.rs?ref=feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "patch": "@@ -0,0 +1,8 @@\n+// check-fail\n+\n+fn main() {\n+    println!(\n+        \"\\\n+\\n {} \u2502\", //~ ERROR: 1 positional argument in format string, but no arguments were given\n+    );\n+}"}, {"sha": "1935de02b57a978bea5600d1e78594dc0c8fede5", "filename": "src/test/ui/macros/issue-83340.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/src%2Ftest%2Fui%2Fmacros%2Fissue-83340.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/src%2Ftest%2Fui%2Fmacros%2Fissue-83340.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fissue-83340.stderr?ref=feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "patch": "@@ -0,0 +1,8 @@\n+error: 1 positional argument in format string, but no arguments were given\n+  --> $DIR/issue-83340.rs:6:4\n+   |\n+LL | \\n {} \u2502\",\n+   |    ^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "83ea676e8f4ee1c6bb1a47a4b8748c5e6eb9c616", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "patch": "@@ -973,7 +973,11 @@ fn parse_normalization_string(line: &mut &str) -> Option<String> {\n }\n \n pub fn extract_llvm_version(version: &str) -> Option<u32> {\n-    let version_without_suffix = version.trim_end_matches(\"git\").split('-').next().unwrap();\n+    let pat = |c: char| !c.is_ascii_digit() && c != '.';\n+    let version_without_suffix = match version.find(pat) {\n+        Some(pos) => &version[..pos],\n+        None => version,\n+    };\n     let components: Vec<u32> = version_without_suffix\n         .split('.')\n         .map(|s| s.parse().expect(\"Malformed version component\"))"}, {"sha": "233f2e648dc94ddf8580629887925ab4de3e9ba3", "filename": "src/tools/compiletest/src/tests.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/src%2Ftools%2Fcompiletest%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/src%2Ftools%2Fcompiletest%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Ftests.rs?ref=feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "patch": "@@ -68,4 +68,8 @@ fn test_extract_llvm_version() {\n     assert_eq!(extract_llvm_version(\"9.0.1-rust-1.43.0-dev\"), Some(90001));\n     assert_eq!(extract_llvm_version(\"9.3.1-rust-1.43.0-dev\"), Some(90301));\n     assert_eq!(extract_llvm_version(\"10.0.0-rust\"), Some(100000));\n+    assert_eq!(extract_llvm_version(\"11.1.0\"), Some(110100));\n+    assert_eq!(extract_llvm_version(\"12.0.0libcxx\"), Some(120000));\n+    assert_eq!(extract_llvm_version(\"12.0.0-rc3\"), Some(120000));\n+    assert_eq!(extract_llvm_version(\"13.0.0git\"), Some(130000));\n }"}, {"sha": "51f48d8f2ecc7b9a0d6c9357085e841fdfe0f191", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/feaac19f1710ebcfecc783d51f52a9b0d8e998f5/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=feaac19f1710ebcfecc783d51f52a9b0d8e998f5", "patch": "@@ -32,7 +32,6 @@ const EXCEPTIONS: &[(&str, &str)] = &[\n     (\"fuchsia-zircon\", \"BSD-3-Clause\"), // rustdoc, rustc, cargo (jobserver & tempdir)\n     (\"colored\", \"MPL-2.0\"),             // rustfmt\n     (\"ordslice\", \"Apache-2.0\"),         // rls\n-    (\"cloudabi\", \"BSD-2-Clause\"),       // (rls -> crossbeam-channel 0.2 -> rand 0.5)\n     (\"ryu\", \"Apache-2.0 OR BSL-1.0\"),   // rls/cargo/... (because of serde)\n     (\"bytesize\", \"Apache-2.0\"),         // cargo\n     (\"im-rc\", \"MPL-2.0+\"),              // cargo\n@@ -76,7 +75,6 @@ const PERMITTED_DEPENDENCIES: &[&str] = &[\n     \"cfg-if\",\n     \"chalk-derive\",\n     \"chalk-ir\",\n-    \"cloudabi\",\n     \"cmake\",\n     \"compiler_builtins\",\n     \"cpuid-bool\","}]}