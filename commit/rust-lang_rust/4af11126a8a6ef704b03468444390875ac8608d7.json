{"sha": "4af11126a8a6ef704b03468444390875ac8608d7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhZjExMTI2YThhNmVmNzA0YjAzNDY4NDQ0MzkwODc1YWM4NjA4ZDc=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2021-01-01T18:09:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-01T18:09:56Z"}, "message": "Update `bool` and `!` docs", "tree": {"sha": "0379b989f85eda271c793769d10d17b3fbfc5d8a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0379b989f85eda271c793769d10d17b3fbfc5d8a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4af11126a8a6ef704b03468444390875ac8608d7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf72V0CRBK7hj4Ov3rIwAAdHIIAJoDNrPldLHCLYP8QL10Lcfv\nbIaA7tOCUCRCineswoQroV3j3wT4kosRlWTWoLSR2NChMoDUBc70IoAwU6E7+KYe\nDXzHwCrxbuaNd4WNlTGPXu9B5KWH9zx2HT6egrp25YCdd3asWrYHh15CO32rYvHO\n0xaQRkLzoxbyb6f8jRiwe/4IADoKq0f8U//nHB/qeeB6BNoT67bwPeFtujm7LSkH\n9CgFSVGnFlH6E6AbpFolyvBf1PZ5hUWaGZ1gqaLIwQ56HLARTa6Hj12mmrj2af6E\nUClXlMCbCYN+XUw3D6abryLKSlx99aUxl8hTy/gDp1JwLf0KaHpDpE85mdU5eLs=\n=0P5Z\n-----END PGP SIGNATURE-----\n", "payload": "tree 0379b989f85eda271c793769d10d17b3fbfc5d8a\nparent 44e3daf5eee8263dfc3a2509e78ddd1f6f783a0e\nauthor Camelid <camelidcamel@gmail.com> 1609524596 -0800\ncommitter GitHub <noreply@github.com> 1609524596 -0800\n\nUpdate `bool` and `!` docs"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4af11126a8a6ef704b03468444390875ac8608d7", "html_url": "https://github.com/rust-lang/rust/commit/4af11126a8a6ef704b03468444390875ac8608d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4af11126a8a6ef704b03468444390875ac8608d7/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44e3daf5eee8263dfc3a2509e78ddd1f6f783a0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/44e3daf5eee8263dfc3a2509e78ddd1f6f783a0e", "html_url": "https://github.com/rust-lang/rust/commit/44e3daf5eee8263dfc3a2509e78ddd1f6f783a0e"}], "stats": {"total": 13, "additions": 7, "deletions": 6}, "files": [{"sha": "a27971e9dcec8e6c4a82d6f9bc2d7112a893f30d", "filename": "library/std/src/primitive_docs.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/4af11126a8a6ef704b03468444390875ac8608d7/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4af11126a8a6ef704b03468444390875ac8608d7/library%2Fstd%2Fsrc%2Fprimitive_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fprimitive_docs.rs?ref=4af11126a8a6ef704b03468444390875ac8608d7", "patch": "@@ -11,8 +11,9 @@\n /// `bool` implements various traits, such as [`BitAnd`], [`BitOr`], [`Not`], etc.,\n /// which allow us to perform boolean operations using `&`, `|` and `!`.\n ///\n-/// `if` always demands a `bool` value. [`assert!`], which is an important macro in testing,\n-/// checks whether an expression returns `true` and panics if it isn't.\n+/// `if` always demands a `bool` value as its conditional. [`assert!`], which is an\n+/// important macro in testing, checks whether an expression is `true` and panics\n+/// if it isn't.\n ///\n /// ```\n /// let bool_val = true & false | false;\n@@ -25,7 +26,7 @@\n ///\n /// # Examples\n ///\n-/// A trivial example of the usage of `bool`,\n+/// A trivial example of the usage of `bool`:\n ///\n /// ```\n /// let praise_the_borrow_checker = true;\n@@ -122,9 +123,9 @@ mod prim_bool {}\n /// `!`, if we have to call [`String::from_str`] for some reason the result will be a\n /// [`Result<String, !>`] which we can unpack like this:\n ///\n-/// ```ignore (string-from-str-error-type-is-not-never-yet)\n-/// #[feature(exhaustive_patterns)]\n-/// // NOTE: this does not work today!\n+/// ```\n+/// #![feature(exhaustive_patterns)]\n+/// use std::str::FromStr;\n /// let Ok(s) = String::from_str(\"hello\");\n /// ```\n ///"}]}