{"sha": "6c7835e4410f820c2bcdcd3d34fa48f0053af7d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjNzgzNWU0NDEwZjgyMGMyYmNkY2QzZDM0ZmE0OGYwMDUzYWY3ZDQ=", "commit": {"author": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2020-11-20T20:29:00Z"}, "committer": {"name": "Stein Somers", "email": "git@steinsomers.be", "date": "2020-12-14T10:25:34Z"}, "message": "BTreeSet: simplify implementation of pop_first/pop_last", "tree": {"sha": "ac7182dfa837d8ce4ae4fa601371d27540a167f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac7182dfa837d8ce4ae4fa601371d27540a167f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6c7835e4410f820c2bcdcd3d34fa48f0053af7d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6c7835e4410f820c2bcdcd3d34fa48f0053af7d4", "html_url": "https://github.com/rust-lang/rust/commit/6c7835e4410f820c2bcdcd3d34fa48f0053af7d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6c7835e4410f820c2bcdcd3d34fa48f0053af7d4/comments", "author": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ssomers", "id": 10174877, "node_id": "MDQ6VXNlcjEwMTc0ODc3", "avatar_url": "https://avatars.githubusercontent.com/u/10174877?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ssomers", "html_url": "https://github.com/ssomers", "followers_url": "https://api.github.com/users/ssomers/followers", "following_url": "https://api.github.com/users/ssomers/following{/other_user}", "gists_url": "https://api.github.com/users/ssomers/gists{/gist_id}", "starred_url": "https://api.github.com/users/ssomers/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ssomers/subscriptions", "organizations_url": "https://api.github.com/users/ssomers/orgs", "repos_url": "https://api.github.com/users/ssomers/repos", "events_url": "https://api.github.com/users/ssomers/events{/privacy}", "received_events_url": "https://api.github.com/users/ssomers/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7feab000b283139b5b7ba131a2495515bc80c627", "url": "https://api.github.com/repos/rust-lang/rust/commits/7feab000b283139b5b7ba131a2495515bc80c627", "html_url": "https://github.com/rust-lang/rust/commit/7feab000b283139b5b7ba131a2495515bc80c627"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "f63c3dd58040866339c66f66ad4914a2c03899be", "filename": "library/alloc/src/collections/btree/set.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6c7835e4410f820c2bcdcd3d34fa48f0053af7d4/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6c7835e4410f820c2bcdcd3d34fa48f0053af7d4/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbtree%2Fset.rs?ref=6c7835e4410f820c2bcdcd3d34fa48f0053af7d4", "patch": "@@ -679,7 +679,7 @@ impl<T: Ord> BTreeSet<T> {\n     /// ```\n     #[unstable(feature = \"map_first_last\", issue = \"62924\")]\n     pub fn pop_first(&mut self) -> Option<T> {\n-        self.map.first_entry().map(|entry| entry.remove_entry().0)\n+        self.map.pop_first().map(|kv| kv.0)\n     }\n \n     /// Removes the last value from the set and returns it, if any.\n@@ -701,7 +701,7 @@ impl<T: Ord> BTreeSet<T> {\n     /// ```\n     #[unstable(feature = \"map_first_last\", issue = \"62924\")]\n     pub fn pop_last(&mut self) -> Option<T> {\n-        self.map.last_entry().map(|entry| entry.remove_entry().0)\n+        self.map.pop_last().map(|kv| kv.0)\n     }\n \n     /// Adds a value to the set."}]}