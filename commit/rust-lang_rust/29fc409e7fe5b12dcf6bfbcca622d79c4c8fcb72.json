{"sha": "29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5ZmM0MDllN2ZlNWIxMmRjZjZiZmJjY2E2MjJkNzljNGM4ZmNiNzI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-04-25T10:16:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-25T10:16:02Z"}, "message": "Merge #4131\n\n4131: Switch to text-size r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "e42f7bd1490bca66e0786d5bf2b3194aeaa57a93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e42f7bd1490bca66e0786d5bf2b3194aeaa57a93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJepA3iCRBK7hj4Ov3rIwAAdHIIABn8yY/lzCjSPlZMiRvegs59\n4uLYQehnm9UTeMRo9Df6ZVUmFc96lSwhymVfAXcBsqCsqITARY/H96oFNVSckycp\nGIcW4PrnhUlBGUvhfNg/V4R0kbONSu6NsTuImg45x5pXnFYDjptGisLMMQa/pAKw\nyc2RkpnfQJ3AyHUwGV5kR8Gc8C8kgpXglgLZmohQC9NEsAS4buRX27n1H4ArwK+p\nKvNKlnjpAb5Lq9xyoLf2msh1pKYQ27OYTR/7emY8uyygaB/LCLUqhZGEwoI6FpVW\ndksotQdcNsZ9rb95DmHum5yzCLrJ6URKAlVKDjTy5rlMcxOaiwss1fI3RdvEE3A=\n=vR0P\n-----END PGP SIGNATURE-----\n", "payload": "tree e42f7bd1490bca66e0786d5bf2b3194aeaa57a93\nparent 27a7718880d93f55f905da606d108d3b3c682ab4\nparent e87346950039a54c3f0b02d6056cbb92ca38eb28\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1587809762 +0000\ncommitter GitHub <noreply@github.com> 1587809762 +0000\n\nMerge #4131\n\n4131: Switch to text-size r=matklad a=matklad\n\n\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "html_url": "https://github.com/rust-lang/rust/commit/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27a7718880d93f55f905da606d108d3b3c682ab4", "url": "https://api.github.com/repos/rust-lang/rust/commits/27a7718880d93f55f905da606d108d3b3c682ab4", "html_url": "https://github.com/rust-lang/rust/commit/27a7718880d93f55f905da606d108d3b3c682ab4"}, {"sha": "e87346950039a54c3f0b02d6056cbb92ca38eb28", "url": "https://api.github.com/repos/rust-lang/rust/commits/e87346950039a54c3f0b02d6056cbb92ca38eb28", "html_url": "https://github.com/rust-lang/rust/commit/e87346950039a54c3f0b02d6056cbb92ca38eb28"}], "stats": {"total": 53950, "additions": 26954, "deletions": 26996}, "files": [{"sha": "20e6cd540300a4020330f4e39b04ea207f800a5e", "filename": "Cargo.lock", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1180,7 +1180,7 @@ dependencies = [\n name = \"ra_text_edit\"\n version = \"0.1.0\"\n dependencies = [\n- \"text_unit\",\n+ \"text-size\",\n ]\n \n [[package]]\n@@ -1322,13 +1322,13 @@ dependencies = [\n \n [[package]]\n name = \"rowan\"\n-version = \"0.9.1\"\n+version = \"0.10.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"1ea7cadf87a9d8432e85cb4eb86bd2e765ace60c24ef86e79084dcae5d1c5a19\"\n+checksum = \"1e081ed6eacce09e243b619ab90f069c27b0cff8a6d0eb8ad2ec935b65853798\"\n dependencies = [\n  \"rustc-hash\",\n  \"smol_str\",\n- \"text_unit\",\n+ \"text-size\",\n  \"thin-dst\",\n ]\n \n@@ -1620,14 +1620,14 @@ version = \"0.1.0\"\n dependencies = [\n  \"difference\",\n  \"serde_json\",\n- \"text_unit\",\n+ \"text-size\",\n ]\n \n [[package]]\n-name = \"text_unit\"\n-version = \"0.1.10\"\n+name = \"text-size\"\n+version = \"1.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"20431e104bfecc1a40872578dbc390e10290a0e9c35fffe3ce6f73c15a9dbfc2\"\n+checksum = \"f03e7efdedc3bc78cb2337f1e2785c39e45f5ef762d9e4ebb137fff7380a6d8a\"\n \n [[package]]\n name = \"thin-dst\""}, {"sha": "2fe7c3de3d1424ae5fe927d4b7efde645fe2ea2c", "filename": "crates/ra_assists/src/assist_ctx.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassist_ctx.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -5,7 +5,7 @@ use ra_fmt::{leading_indent, reindent};\n use ra_ide_db::RootDatabase;\n use ra_syntax::{\n     algo::{self, find_covering_element, find_node_at_offset},\n-    AstNode, SourceFile, SyntaxElement, SyntaxKind, SyntaxNode, SyntaxToken, TextRange, TextUnit,\n+    AstNode, SourceFile, SyntaxElement, SyntaxKind, SyntaxNode, SyntaxToken, TextRange, TextSize,\n     TokenAtOffset,\n };\n use ra_text_edit::TextEditBuilder;\n@@ -178,7 +178,7 @@ impl<'a> AssistGroup<'a> {\n #[derive(Default)]\n pub(crate) struct ActionBuilder {\n     edit: TextEditBuilder,\n-    cursor_position: Option<TextUnit>,\n+    cursor_position: Option<TextSize>,\n     target: Option<TextRange>,\n     file: AssistFile,\n }\n@@ -211,12 +211,12 @@ impl ActionBuilder {\n     }\n \n     /// Append specified `text` at the given `offset`\n-    pub(crate) fn insert(&mut self, offset: TextUnit, text: impl Into<String>) {\n+    pub(crate) fn insert(&mut self, offset: TextSize, text: impl Into<String>) {\n         self.edit.insert(offset, text.into())\n     }\n \n     /// Specify desired position of the cursor after the assist is applied.\n-    pub(crate) fn set_cursor(&mut self, offset: TextUnit) {\n+    pub(crate) fn set_cursor(&mut self, offset: TextSize) {\n         self.cursor_position = Some(offset)\n     }\n "}, {"sha": "4ea26a55082c7dc77b3d80b170876f6d155e799d", "filename": "crates/ra_assists/src/handlers/add_custom_impl.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_custom_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_custom_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_custom_impl.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -2,7 +2,7 @@ use ra_syntax::{\n     ast::{self, AstNode},\n     Direction, SmolStr,\n     SyntaxKind::{IDENT, WHITESPACE},\n-    TextRange, TextUnit,\n+    TextRange, TextSize,\n };\n use stdx::SepBy;\n \n@@ -60,7 +60,6 @@ pub(crate) fn add_custom_impl(ctx: AssistCtx) -> Option<Assist> {\n             .collect::<Vec<SmolStr>>();\n         let has_more_derives = !new_attr_input.is_empty();\n         let new_attr_input = new_attr_input.iter().sep_by(\", \").surround_with(\"(\", \")\").to_string();\n-        let new_attr_input_len = new_attr_input.len();\n \n         let mut buf = String::new();\n         buf.push_str(\"\\n\\nimpl \");\n@@ -70,8 +69,9 @@ pub(crate) fn add_custom_impl(ctx: AssistCtx) -> Option<Assist> {\n         buf.push_str(\" {\\n\");\n \n         let cursor_delta = if has_more_derives {\n+            let delta = input.syntax().text_range().len() - TextSize::of(&new_attr_input);\n             edit.replace(input.syntax().text_range(), new_attr_input);\n-            input.syntax().text_range().len() - TextUnit::from_usize(new_attr_input_len)\n+            delta\n         } else {\n             let attr_range = attr.syntax().text_range();\n             edit.delete(attr_range);\n@@ -81,13 +81,13 @@ pub(crate) fn add_custom_impl(ctx: AssistCtx) -> Option<Assist> {\n                 .next_sibling_or_token()\n                 .filter(|t| t.kind() == WHITESPACE)\n                 .map(|t| t.text_range())\n-                .unwrap_or_else(|| TextRange::from_to(TextUnit::from(0), TextUnit::from(0)));\n+                .unwrap_or_else(|| TextRange::new(TextSize::from(0), TextSize::from(0)));\n             edit.delete(line_break_range);\n \n             attr_range.len() + line_break_range.len()\n         };\n \n-        edit.set_cursor(start_offset + TextUnit::of_str(&buf) - cursor_delta);\n+        edit.set_cursor(start_offset + TextSize::of(&buf) - cursor_delta);\n         buf.push_str(\"\\n}\");\n         edit.insert(start_offset, buf);\n     })"}, {"sha": "6254eb7c41eb487da9b76e587ac52241f9b8daf0", "filename": "crates/ra_assists/src/handlers/add_derive.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_derive.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,7 +1,7 @@\n use ra_syntax::{\n     ast::{self, AstNode, AttrsOwner},\n     SyntaxKind::{COMMENT, WHITESPACE},\n-    TextUnit,\n+    TextSize,\n };\n \n use crate::{Assist, AssistCtx, AssistId};\n@@ -37,17 +37,17 @@ pub(crate) fn add_derive(ctx: AssistCtx) -> Option<Assist> {\n         let offset = match derive_attr {\n             None => {\n                 edit.insert(node_start, \"#[derive()]\\n\");\n-                node_start + TextUnit::of_str(\"#[derive(\")\n+                node_start + TextSize::of(\"#[derive(\")\n             }\n-            Some(tt) => tt.syntax().text_range().end() - TextUnit::of_char(')'),\n+            Some(tt) => tt.syntax().text_range().end() - TextSize::of(')'),\n         };\n         edit.target(nominal.syntax().text_range());\n         edit.set_cursor(offset)\n     })\n }\n \n // Insert `derive` after doc comments.\n-fn derive_insertion_offset(nominal: &ast::NominalDef) -> Option<TextUnit> {\n+fn derive_insertion_offset(nominal: &ast::NominalDef) -> Option<TextSize> {\n     let non_ws_child = nominal\n         .syntax()\n         .children_with_tokens()"}, {"sha": "bc313782be9c91576d6bd70d73f9896f0d519288", "filename": "crates/ra_assists/src/handlers/add_explicit_type.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_explicit_type.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -37,8 +37,8 @@ pub(crate) fn add_explicit_type(ctx: AssistCtx) -> Option<Assist> {\n     let stmt_range = stmt.syntax().text_range();\n     let eq_range = stmt.eq_token()?.text_range();\n     // Assist should only be applicable if cursor is between 'let' and '='\n-    let let_range = TextRange::from_to(stmt_range.start(), eq_range.start());\n-    let cursor_in_range = ctx.frange.range.is_subrange(&let_range);\n+    let let_range = TextRange::new(stmt_range.start(), eq_range.start());\n+    let cursor_in_range = let_range.contains_range(ctx.frange.range);\n     if !cursor_in_range {\n         return None;\n     }"}, {"sha": "03806724a3ace8b32bfe16af0090cc50db3e56ed", "filename": "crates/ra_assists/src/handlers/add_from_impl_for_enum.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_from_impl_for_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_from_impl_for_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_from_impl_for_enum.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,6 +1,6 @@\n use ra_syntax::{\n     ast::{self, AstNode, NameOwner},\n-    TextUnit,\n+    TextSize,\n };\n use stdx::format_to;\n \n@@ -65,7 +65,7 @@ impl From<{0}> for {1} {{\n                 variant_name\n             );\n             edit.insert(start_offset, buf);\n-            edit.set_cursor(start_offset + TextUnit::of_str(\"\\n\\n\"));\n+            edit.set_cursor(start_offset + TextSize::of(\"\\n\\n\"));\n         },\n     )\n }"}, {"sha": "6c7456579fe4d63e5cf28fcddd2e7106d2c7cec4", "filename": "crates/ra_assists/src/handlers/add_function.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_function.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_function.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_function.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,6 +1,6 @@\n use ra_syntax::{\n     ast::{self, AstNode},\n-    SyntaxKind, SyntaxNode, TextUnit,\n+    SyntaxKind, SyntaxNode, TextSize,\n };\n \n use crate::{Assist, AssistCtx, AssistFile, AssistId};\n@@ -69,8 +69,8 @@ pub(crate) fn add_function(ctx: AssistCtx) -> Option<Assist> {\n }\n \n struct FunctionTemplate {\n-    insert_offset: TextUnit,\n-    cursor_offset: TextUnit,\n+    insert_offset: TextSize,\n+    cursor_offset: TextSize,\n     fn_def: ast::SourceFile,\n     file: AssistFile,\n }\n@@ -129,7 +129,7 @@ impl FunctionBuilder {\n                 let fn_def = indent_once.increase_indent(fn_def);\n                 let fn_def = ast::make::add_trailing_newlines(1, fn_def);\n                 let fn_def = indent.increase_indent(fn_def);\n-                (fn_def, it.syntax().text_range().start() + TextUnit::from_usize(1))\n+                (fn_def, it.syntax().text_range().start() + TextSize::of('{'))\n             }\n         };\n "}, {"sha": "d26f8b93da005f4d1ff090a157b43e9d30c088c9", "filename": "crates/ra_assists/src/handlers/add_impl.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_impl.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,6 +1,6 @@\n use ra_syntax::{\n     ast::{self, AstNode, NameOwner, TypeParamsOwner},\n-    TextUnit,\n+    TextSize,\n };\n use stdx::{format_to, SepBy};\n \n@@ -51,7 +51,7 @@ pub(crate) fn add_impl(ctx: AssistCtx) -> Option<Assist> {\n             format_to!(buf, \"<{}>\", generic_params)\n         }\n         buf.push_str(\" {\\n\");\n-        edit.set_cursor(start_offset + TextUnit::of_str(&buf));\n+        edit.set_cursor(start_offset + TextSize::of(&buf));\n         buf.push_str(\"\\n}\");\n         edit.insert(start_offset, buf);\n     })"}, {"sha": "0f9174a299523d9ccabd87775d5aae763ec463f1", "filename": "crates/ra_assists/src/handlers/add_new.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fadd_new.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -3,7 +3,7 @@ use ra_syntax::{\n     ast::{\n         self, AstNode, NameOwner, StructKind, TypeAscriptionOwner, TypeParamsOwner, VisibilityOwner,\n     },\n-    TextUnit, T,\n+    TextSize, T,\n };\n use stdx::{format_to, SepBy};\n \n@@ -77,16 +77,16 @@ pub(crate) fn add_new(ctx: AssistCtx) -> Option<Assist> {\n                     .text_range()\n                     .end();\n \n-                Some((start, TextUnit::from_usize(1)))\n+                Some((start, TextSize::of(\"\\n\")))\n             })\n             .unwrap_or_else(|| {\n                 buf = generate_impl_text(&strukt, &buf);\n                 let start = strukt.syntax().text_range().end();\n \n-                (start, TextUnit::from_usize(3))\n+                (start, TextSize::of(\"\\n}\\n\"))\n             });\n \n-        edit.set_cursor(start_offset + TextUnit::of_str(&buf) - end_offset);\n+        edit.set_cursor(start_offset + TextSize::of(&buf) - end_offset);\n         edit.insert(start_offset, buf);\n     })\n }"}, {"sha": "260b9e0732055a60ba71964fd43dc2a579325ba3", "filename": "crates/ra_assists/src/handlers/apply_demorgan.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fapply_demorgan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fapply_demorgan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fapply_demorgan.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -26,7 +26,7 @@ pub(crate) fn apply_demorgan(ctx: AssistCtx) -> Option<Assist> {\n     let op = expr.op_kind()?;\n     let op_range = expr.op_token()?.text_range();\n     let opposite_op = opposite_logic_op(op)?;\n-    let cursor_in_range = ctx.frange.range.is_subrange(&op_range);\n+    let cursor_in_range = op_range.contains_range(ctx.frange.range);\n     if !cursor_in_range {\n         return None;\n     }"}, {"sha": "44f6a1dae02cd714e92d102c8835fcf388ff7784", "filename": "crates/ra_assists/src/handlers/change_visibility.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fchange_visibility.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -5,7 +5,7 @@ use ra_syntax::{\n         ATTR, COMMENT, CONST_DEF, ENUM_DEF, FN_DEF, MODULE, STRUCT_DEF, TRAIT_DEF, VISIBILITY,\n         WHITESPACE,\n     },\n-    SyntaxNode, TextUnit, T,\n+    SyntaxNode, TextSize, T,\n };\n \n use crate::{Assist, AssistCtx, AssistId};\n@@ -67,7 +67,7 @@ fn add_vis(ctx: AssistCtx) -> Option<Assist> {\n     })\n }\n \n-fn vis_offset(node: &SyntaxNode) -> TextUnit {\n+fn vis_offset(node: &SyntaxNode) -> TextSize {\n     node.children_with_tokens()\n         .skip_while(|it| match it.kind() {\n             WHITESPACE | COMMENT | ATTR => true,"}, {"sha": "8030efb3585454f2dfb2830ee9ce1d0b0e3e0434", "filename": "crates/ra_assists/src/handlers/flip_binexpr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fflip_binexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fflip_binexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fflip_binexpr.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -23,7 +23,7 @@ pub(crate) fn flip_binexpr(ctx: AssistCtx) -> Option<Assist> {\n     let rhs = expr.rhs()?.syntax().clone();\n     let op_range = expr.op_token()?.text_range();\n     // The assist should be applied only if the cursor is on the operator\n-    let cursor_in_range = ctx.frange.range.is_subrange(&op_range);\n+    let cursor_in_range = op_range.contains_range(ctx.frange.range);\n     if !cursor_in_range {\n         return None;\n     }"}, {"sha": "f5702f6e0c22b60fc7cb738edcaec5423955bd29", "filename": "crates/ra_assists/src/handlers/inline_local_variable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finline_local_variable.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -52,7 +52,7 @@ pub(crate) fn inline_local_variable(ctx: AssistCtx) -> Option<Assist> {\n         .next_sibling_or_token()\n         .and_then(|it| ast::Whitespace::cast(it.as_token()?.clone()))\n     {\n-        TextRange::from_to(\n+        TextRange::new(\n             let_stmt.syntax().text_range().start(),\n             whitespace.syntax().text_range().end(),\n         )"}, {"sha": "eda9ac296304c522e1a3e590c5f4fcb7945f0cdb", "filename": "crates/ra_assists/src/handlers/introduce_variable.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fintroduce_variable.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -4,7 +4,7 @@ use ra_syntax::{\n         BLOCK_EXPR, BREAK_EXPR, COMMENT, LAMBDA_EXPR, LOOP_EXPR, MATCH_ARM, PATH_EXPR, RETURN_EXPR,\n         WHITESPACE,\n     },\n-    SyntaxNode, TextUnit,\n+    SyntaxNode, TextSize,\n };\n use stdx::format_to;\n use test_utils::tested_by;\n@@ -47,10 +47,10 @@ pub(crate) fn introduce_variable(ctx: AssistCtx) -> Option<Assist> {\n \n         let cursor_offset = if wrap_in_block {\n             buf.push_str(\"{ let var_name = \");\n-            TextUnit::of_str(\"{ let \")\n+            TextSize::of(\"{ let \")\n         } else {\n             buf.push_str(\"let var_name = \");\n-            TextUnit::of_str(\"let \")\n+            TextSize::of(\"let \")\n         };\n         format_to!(buf, \"{}\", expr.syntax());\n         let full_stmt = ast::ExprStmt::cast(anchor_stmt.clone());"}, {"sha": "682e085120a3c0ea8134bd2ac2ccf8f74cc7e2aa", "filename": "crates/ra_assists/src/handlers/invert_if.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finvert_if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finvert_if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Finvert_if.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -28,7 +28,7 @@ pub(crate) fn invert_if(ctx: AssistCtx) -> Option<Assist> {\n     let if_keyword = ctx.find_token_at_offset(T![if])?;\n     let expr = ast::IfExpr::cast(if_keyword.parent())?;\n     let if_range = if_keyword.text_range();\n-    let cursor_in_range = ctx.frange.range.is_subrange(&if_range);\n+    let cursor_in_range = if_range.contains_range(ctx.frange.range);\n     if !cursor_in_range {\n         return None;\n     }"}, {"sha": "5a77d3dbceb51d3f59d9e155d02c65b976b5bfc9", "filename": "crates/ra_assists/src/handlers/merge_match_arms.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmerge_match_arms.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -3,7 +3,7 @@ use std::iter::successors;\n use ra_syntax::{\n     algo::neighbor,\n     ast::{self, AstNode},\n-    Direction, TextUnit,\n+    Direction, TextSize,\n };\n \n use crate::{Assist, AssistCtx, AssistId, TextRange};\n@@ -42,8 +42,8 @@ pub(crate) fn merge_match_arms(ctx: AssistCtx) -> Option<Assist> {\n     let current_text_range = current_arm.syntax().text_range();\n \n     enum CursorPos {\n-        InExpr(TextUnit),\n-        InPat(TextUnit),\n+        InExpr(TextSize),\n+        InPat(TextSize),\n     }\n     let cursor_pos = ctx.frange.range.start();\n     let cursor_pos = if current_expr.syntax().text_range().contains(cursor_pos) {\n@@ -89,10 +89,10 @@ pub(crate) fn merge_match_arms(ctx: AssistCtx) -> Option<Assist> {\n \n         edit.target(current_text_range);\n         edit.set_cursor(match cursor_pos {\n-            CursorPos::InExpr(back_offset) => start + TextUnit::from_usize(arm.len()) - back_offset,\n+            CursorPos::InExpr(back_offset) => start + TextSize::of(&arm) - back_offset,\n             CursorPos::InPat(offset) => offset,\n         });\n-        edit.replace(TextRange::from_to(start, end), arm);\n+        edit.replace(TextRange::new(start, end), arm);\n     })\n }\n "}, {"sha": "d5ccdd91cefaf6c321edef410a070d3a184fac4d", "filename": "crates/ra_assists/src/handlers/move_guard.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fmove_guard.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,7 +1,7 @@\n use ra_syntax::{\n     ast,\n     ast::{AstNode, AstToken, IfExpr, MatchArm},\n-    TextUnit,\n+    TextSize,\n };\n \n use crate::{Assist, AssistCtx, AssistId};\n@@ -49,16 +49,16 @@ pub(crate) fn move_guard_to_arm_body(ctx: AssistCtx) -> Option<Assist> {\n                     edit.delete(ele);\n                     ele.len()\n                 } else {\n-                    TextUnit::from(0)\n+                    TextSize::from(0)\n                 }\n             }\n-            _ => TextUnit::from(0),\n+            _ => TextSize::from(0),\n         };\n \n         edit.delete(guard.syntax().text_range());\n         edit.replace_node_and_indent(arm_expr.syntax(), buf);\n         edit.set_cursor(\n-            arm_expr.syntax().text_range().start() + TextUnit::from(3) - offseting_amount,\n+            arm_expr.syntax().text_range().start() + TextSize::from(3) - offseting_amount,\n         );\n     })\n }\n@@ -123,7 +123,7 @@ pub(crate) fn move_arm_cond_to_match_guard(ctx: AssistCtx) -> Option<Assist> {\n             }\n \n             edit.insert(match_pat.syntax().text_range().end(), buf);\n-            edit.set_cursor(match_pat.syntax().text_range().end() + TextUnit::from(1));\n+            edit.set_cursor(match_pat.syntax().text_range().end() + TextSize::from(1));\n         },\n     )\n }"}, {"sha": "567400b9c274bc90216ad01d04201901705e6359", "filename": "crates/ra_assists/src/handlers/raw_string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fraw_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fraw_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fraw_string.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -2,7 +2,7 @@ use ra_syntax::{\n     ast::{self, HasStringValue},\n     AstToken,\n     SyntaxKind::{RAW_STRING, STRING},\n-    TextUnit,\n+    TextSize,\n };\n \n use crate::{Assist, AssistCtx, AssistId};\n@@ -81,7 +81,7 @@ pub(crate) fn add_hash(ctx: AssistCtx) -> Option<Assist> {\n     let token = ctx.find_token_at_offset(RAW_STRING)?;\n     ctx.add_assist(AssistId(\"add_hash\"), \"Add # to raw string\", |edit| {\n         edit.target(token.text_range());\n-        edit.insert(token.text_range().start() + TextUnit::of_char('r'), \"#\");\n+        edit.insert(token.text_range().start() + TextSize::of('r'), \"#\");\n         edit.insert(token.text_range().end(), \"#\");\n     })\n }"}, {"sha": "4e5eb435052667284bbd54e55cec7514b04f95a0", "filename": "crates/ra_assists/src/handlers/remove_dbg.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fremove_dbg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fremove_dbg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fremove_dbg.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,6 +1,6 @@\n use ra_syntax::{\n     ast::{self, AstNode},\n-    TextUnit, T,\n+    TextSize, T,\n };\n \n use crate::{Assist, AssistCtx, AssistId};\n@@ -38,9 +38,9 @@ pub(crate) fn remove_dbg(ctx: AssistCtx) -> Option<Assist> {\n         let offset_start = file_range\n             .start()\n             .checked_sub(macro_range.start())\n-            .unwrap_or_else(|| TextUnit::from(0));\n+            .unwrap_or_else(|| TextSize::from(0));\n \n-        let dbg_size = TextUnit::of_str(\"dbg!(\");\n+        let dbg_size = TextSize::of(\"dbg!(\");\n \n         if offset_start > dbg_size {\n             file_range.start() - dbg_size\n@@ -53,7 +53,7 @@ pub(crate) fn remove_dbg(ctx: AssistCtx) -> Option<Assist> {\n         let macro_args = macro_call.token_tree()?.syntax().clone();\n \n         let text = macro_args.text();\n-        let without_parens = TextUnit::of_char('(')..text.len() - TextUnit::of_char(')');\n+        let without_parens = TextSize::of('(')..text.len() - TextSize::of(')');\n         text.slice(without_parens).to_string()\n     };\n "}, {"sha": "e598023b255751be0372b275273bfd6af12adda1", "filename": "crates/ra_assists/src/handlers/remove_mut.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fremove_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fremove_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Fremove_mut.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -27,6 +27,6 @@ pub(crate) fn remove_mut(ctx: AssistCtx) -> Option<Assist> {\n \n     ctx.add_assist(AssistId(\"remove_mut\"), \"Remove `mut` keyword\", |edit| {\n         edit.set_cursor(delete_from);\n-        edit.delete(TextRange::from_to(delete_from, delete_to));\n+        edit.delete(TextRange::new(delete_from, delete_to));\n     })\n }"}, {"sha": "2f02df3038c399695dca2fff30eb476973480e11", "filename": "crates/ra_assists/src/handlers/replace_qualified_name_with_use.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -43,7 +43,7 @@ pub(crate) fn replace_qualified_name_with_use(ctx: AssistCtx) -> Option<Assist>\n             if let Some(last) = path.segment() {\n                 // Here we are assuming the assist will provide a correct use statement\n                 // so we can delete the path qualifier\n-                edit.delete(TextRange::from_to(\n+                edit.delete(TextRange::new(\n                     path.syntax().text_range().start(),\n                     last.syntax().text_range().start(),\n                 ));"}, {"sha": "64bd87afbd47bbad1897ca0024a42dd2d8165120", "filename": "crates/ra_assists/src/lib.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_assists%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Flib.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -19,7 +19,7 @@ pub mod ast_transform;\n \n use ra_db::{FileId, FileRange};\n use ra_ide_db::RootDatabase;\n-use ra_syntax::{TextRange, TextUnit};\n+use ra_syntax::{TextRange, TextSize};\n use ra_text_edit::TextEdit;\n \n pub(crate) use crate::assist_ctx::{Assist, AssistCtx, AssistHandler};\n@@ -51,7 +51,7 @@ impl AssistLabel {\n #[derive(Debug, Clone)]\n pub struct AssistAction {\n     pub edit: TextEdit,\n-    pub cursor_position: Option<TextUnit>,\n+    pub cursor_position: Option<TextSize>,\n     // FIXME: This belongs to `AssistLabel`\n     pub target: Option<TextRange>,\n     pub file: AssistFile,\n@@ -104,7 +104,7 @@ pub fn resolved_assists(db: &RootDatabase, range: FileRange) -> Vec<ResolvedAssi\n         .flat_map(|it| it.0)\n         .map(|it| it.into_resolved().unwrap())\n         .collect::<Vec<_>>();\n-    a.sort_by_key(|it| it.action.target.map_or(TextUnit::from(!0u32), |it| it.len()));\n+    a.sort_by_key(|it| it.action.target.map_or(TextSize::from(!0u32), |it| it.len()));\n     a\n }\n \n@@ -308,8 +308,7 @@ mod tests {\n         let before = \"struct Foo { <|>bar: u32 }\";\n         let (before_cursor_pos, before) = extract_offset(before);\n         let (db, file_id) = helpers::with_single_file(&before);\n-        let frange =\n-            FileRange { file_id, range: TextRange::offset_len(before_cursor_pos, 0.into()) };\n+        let frange = FileRange { file_id, range: TextRange::empty(before_cursor_pos) };\n         let assists = resolved_assists(&db, frange);\n         let mut assists = assists.iter();\n "}, {"sha": "fd4280de2df48c054176ef29443d762e55b92e0b", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -6,7 +6,7 @@ pub mod fixture;\n use std::{panic, sync::Arc};\n \n use ra_prof::profile;\n-use ra_syntax::{ast, Parse, SourceFile, TextRange, TextUnit};\n+use ra_syntax::{ast, Parse, SourceFile, TextRange, TextSize};\n \n pub use crate::{\n     cancellation::Canceled,\n@@ -75,7 +75,7 @@ impl<T: salsa::Database> CheckCanceled for T {\n #[derive(Clone, Copy, Debug)]\n pub struct FilePosition {\n     pub file_id: FileId,\n-    pub offset: TextUnit,\n+    pub offset: TextSize,\n }\n \n #[derive(Clone, Copy, Debug)]"}, {"sha": "e09cf3185686fc0933dd229b4ccf00da311b8b73", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -14,7 +14,7 @@ use ra_db::{FileId, FileRange};\n use ra_prof::profile;\n use ra_syntax::{\n     algo::{find_node_at_offset, skip_trivia_token},\n-    ast, AstNode, Direction, SyntaxNode, SyntaxToken, TextRange, TextUnit,\n+    ast, AstNode, Direction, SyntaxNode, SyntaxToken, TextRange, TextSize,\n };\n use rustc_hash::{FxHashMap, FxHashSet};\n \n@@ -95,7 +95,7 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         let token = successors(Some(parent.with_value(token)), |token| {\n             let macro_call = token.value.ancestors().find_map(ast::MacroCall::cast)?;\n             let tt = macro_call.token_tree()?;\n-            if !token.value.text_range().is_subrange(&tt.syntax().text_range()) {\n+            if !tt.syntax().text_range().contains_range(token.value.text_range()) {\n                 return None;\n             }\n             let file_id = sa.expand(self.db, token.with_value(&macro_call))?;\n@@ -114,7 +114,7 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n     pub fn descend_node_at_offset<N: ast::AstNode>(\n         &self,\n         node: &SyntaxNode,\n-        offset: TextUnit,\n+        offset: TextSize,\n     ) -> Option<N> {\n         // Handle macro token cases\n         node.token_at_offset(offset)\n@@ -142,7 +142,7 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n     pub fn ancestors_at_offset_with_macros(\n         &self,\n         node: &SyntaxNode,\n-        offset: TextUnit,\n+        offset: TextSize,\n     ) -> impl Iterator<Item = SyntaxNode> + '_ {\n         node.token_at_offset(offset)\n             .map(|token| self.ancestors_with_macros(token.parent()))\n@@ -154,7 +154,7 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n     pub fn find_node_at_offset_with_macros<N: AstNode>(\n         &self,\n         node: &SyntaxNode,\n-        offset: TextUnit,\n+        offset: TextSize,\n     ) -> Option<N> {\n         self.ancestors_at_offset_with_macros(node, offset).find_map(N::cast)\n     }\n@@ -164,7 +164,7 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n     pub fn find_node_at_offset_with_descend<N: AstNode>(\n         &self,\n         node: &SyntaxNode,\n-        offset: TextUnit,\n+        offset: TextSize,\n     ) -> Option<N> {\n         if let Some(it) = find_node_at_offset(&node, offset) {\n             return Some(it);\n@@ -255,7 +255,7 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         SemanticsScope { db: self.db, resolver }\n     }\n \n-    pub fn scope_at_offset(&self, node: &SyntaxNode, offset: TextUnit) -> SemanticsScope<'db, DB> {\n+    pub fn scope_at_offset(&self, node: &SyntaxNode, offset: TextSize) -> SemanticsScope<'db, DB> {\n         let node = self.find_file(node.clone());\n         let resolver = self.analyze2(node.as_ref(), Some(offset)).resolver;\n         SemanticsScope { db: self.db, resolver }\n@@ -271,7 +271,7 @@ impl<'db, DB: HirDatabase> Semantics<'db, DB> {\n         self.analyze2(src.as_ref(), None)\n     }\n \n-    fn analyze2(&self, src: InFile<&SyntaxNode>, offset: Option<TextUnit>) -> SourceAnalyzer {\n+    fn analyze2(&self, src: InFile<&SyntaxNode>, offset: Option<TextSize>) -> SourceAnalyzer {\n         let _p = profile(\"Semantics::analyze2\");\n \n         let container = match self.with_ctx(|ctx| ctx.find_container(src)) {\n@@ -463,7 +463,7 @@ fn original_range_opt(\n             return None;\n         }\n \n-        Some(first.with_value(first.value.text_range().extend_to(&last.value.text_range())))\n+        Some(first.with_value(first.value.text_range().cover(last.value.text_range())))\n     })?)\n }\n "}, {"sha": "59a3a17d28f8450ca606838a63502a3b270ead25", "filename": "crates/ra_hir/src/source_analyzer.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -23,7 +23,7 @@ use hir_ty::{\n };\n use ra_syntax::{\n     ast::{self, AstNode},\n-    SyntaxNode, TextRange, TextUnit,\n+    SyntaxNode, TextRange, TextSize,\n };\n \n use crate::{\n@@ -50,7 +50,7 @@ impl SourceAnalyzer {\n         db: &dyn HirDatabase,\n         def: DefWithBodyId,\n         node: InFile<&SyntaxNode>,\n-        offset: Option<TextUnit>,\n+        offset: Option<TextSize>,\n     ) -> SourceAnalyzer {\n         let (body, source_map) = db.body_with_source_map(def);\n         let scopes = db.expr_scopes(def);\n@@ -318,7 +318,7 @@ fn scope_for_offset(\n     db: &dyn HirDatabase,\n     scopes: &ExprScopes,\n     source_map: &BodySourceMap,\n-    offset: InFile<TextUnit>,\n+    offset: InFile<TextSize>,\n ) -> Option<ScopeId> {\n     scopes\n         .scope_by_expr()\n@@ -354,7 +354,7 @@ fn adjust(\n     source_map: &BodySourceMap,\n     expr_range: TextRange,\n     file_id: HirFileId,\n-    offset: TextUnit,\n+    offset: TextSize,\n ) -> Option<ScopeId> {\n     let child_scopes = scopes\n         .scope_by_expr()\n@@ -369,15 +369,15 @@ fn adjust(\n             let node = source.value.to_node(&root);\n             Some((node.syntax().text_range(), scope))\n         })\n-        .filter(|(range, _)| {\n-            range.start() <= offset && range.is_subrange(&expr_range) && *range != expr_range\n+        .filter(|&(range, _)| {\n+            range.start() <= offset && expr_range.contains_range(range) && range != expr_range\n         });\n \n     child_scopes\n-        .max_by(|(r1, _), (r2, _)| {\n-            if r2.is_subrange(&r1) {\n+        .max_by(|&(r1, _), &(r2, _)| {\n+            if r1.contains_range(r2) {\n                 std::cmp::Ordering::Greater\n-            } else if r1.is_subrange(&r2) {\n+            } else if r2.contains_range(r1) {\n                 std::cmp::Ordering::Less\n             } else {\n                 r1.start().cmp(&r2.start())"}, {"sha": "86f953c802bcf98fa02b6e289bc08853be868d43", "filename": "crates/ra_hir_def/src/body/scope.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_def%2Fsrc%2Fbody%2Fscope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_def%2Fsrc%2Fbody%2Fscope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fbody%2Fscope.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -194,7 +194,7 @@ mod tests {\n         let (off, code) = extract_offset(code);\n         let code = {\n             let mut buf = String::new();\n-            let off = off.to_usize();\n+            let off: usize = off.into();\n             buf.push_str(&code[..off]);\n             buf.push_str(\"marker\");\n             buf.push_str(&code[off..]);"}, {"sha": "2ccebda282070575389a203ddf94cb5094994224", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -2,7 +2,7 @@\n use crate::db::AstDatabase;\n use crate::{\n     ast::{self, AstToken, HasStringValue},\n-    name, AstId, CrateId, MacroDefId, MacroDefKind, TextUnit,\n+    name, AstId, CrateId, MacroDefId, MacroDefKind, TextSize,\n };\n \n use crate::{quote, EagerMacroId, LazyMacroId, MacroCallId};\n@@ -127,7 +127,7 @@ fn stringify_expand(\n         let arg = loc.kind.arg(db).ok_or_else(|| mbe::ExpandError::UnexpectedToken)?;\n         let macro_args = arg;\n         let text = macro_args.text();\n-        let without_parens = TextUnit::of_char('(')..text.len() - TextUnit::of_char(')');\n+        let without_parens = TextSize::of('(')..text.len() - TextSize::of(')');\n         text.slice(without_parens).to_string()\n     };\n "}, {"sha": "754a0f005bae26f766929fc4e8645a89a83c0037", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -22,7 +22,7 @@ use ra_db::{impl_intern_key, salsa, CrateId, FileId};\n use ra_syntax::{\n     algo,\n     ast::{self, AstNode},\n-    SyntaxNode, SyntaxToken, TextUnit,\n+    SyntaxNode, SyntaxToken, TextSize,\n };\n \n use crate::ast_id_map::FileAstId;\n@@ -348,7 +348,7 @@ impl<N: AstNode> AstId<N> {\n ///\n /// * `InFile<SyntaxNode>` -- syntax node in a file\n /// * `InFile<ast::FnDef>` -- ast node in a file\n-/// * `InFile<TextUnit>` -- offset in a file\n+/// * `InFile<TextSize>` -- offset in a file\n #[derive(Debug, PartialEq, Eq, Clone, Copy, Hash)]\n pub struct InFile<T> {\n     pub file_id: HirFileId,"}, {"sha": "b6a96bb5ca5b512ae8dc31b545649f5768198d5b", "filename": "crates/ra_hir_ty/src/tests.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -117,7 +117,7 @@ fn infer_with_mismatches(content: &str, include_mismatches: bool) -> String {\n             let macro_prefix = if node.file_id != file_id.into() { \"!\" } else { \"\" };\n             format_to!(\n                 buf,\n-                \"{}{} '{}': {}\\n\",\n+                \"{}{:?} '{}': {}\\n\",\n                 macro_prefix,\n                 range,\n                 ellipsize(text, 15),\n@@ -134,7 +134,7 @@ fn infer_with_mismatches(content: &str, include_mismatches: bool) -> String {\n                 let macro_prefix = if src_ptr.file_id != file_id.into() { \"!\" } else { \"\" };\n                 format_to!(\n                     buf,\n-                    \"{}{}: expected {}, got {}\\n\",\n+                    \"{}{:?}: expected {}, got {}\\n\",\n                     macro_prefix,\n                     range,\n                     mismatch.expected.display(&db),"}, {"sha": "e6fb3e1231f6aed810b8a25d1072262627cf6b80", "filename": "crates/ra_hir_ty/src/tests/coercion.rs", "status": "modified", "additions": 291, "deletions": 291, "changes": 582, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fcoercion.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -29,10 +29,10 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [11; 41) '{     ...4 }; }': ()\n-    [21; 22) 'a': i32\n-    [30; 38) '{ 1i64 }': i64\n-    [32; 36) '1i64': i64\n+    11..41 '{     ...4 }; }': ()\n+    21..22 'a': i32\n+    30..38 '{ 1i64 }': i64\n+    32..36 '1i64': i64\n     \"###);\n }\n \n@@ -63,50 +63,50 @@ fn test2() {\n }\n \"#),\n         @r###\"\n-    [31; 32) '_': &[T]\n-    [45; 56) '{ loop {} }': T\n-    [47; 54) 'loop {}': !\n-    [52; 54) '{}': ()\n-    [65; 66) '_': S<&[T]>\n-    [82; 93) '{ loop {} }': T\n-    [84; 91) 'loop {}': !\n-    [89; 91) '{}': ()\n-    [122; 133) '{ loop {} }': *mut [T; _]\n-    [124; 131) 'loop {}': !\n-    [129; 131) '{}': ()\n-    [160; 173) '{     gen() }': *mut [U]\n-    [166; 169) 'gen': fn gen<U>() -> *mut [U; _]\n-    [166; 171) 'gen()': *mut [U; _]\n-    [186; 420) '{     ...rr); }': ()\n-    [196; 199) 'arr': &[u8; _]\n-    [212; 216) '&[1]': &[u8; _]\n-    [213; 216) '[1]': [u8; _]\n-    [214; 215) '1': u8\n-    [227; 228) 'a': &[u8]\n-    [237; 240) 'arr': &[u8; _]\n-    [250; 251) 'b': u8\n-    [254; 255) 'f': fn f<u8>(&[u8]) -> u8\n-    [254; 260) 'f(arr)': u8\n-    [256; 259) 'arr': &[u8; _]\n-    [270; 271) 'c': &[u8]\n-    [280; 287) '{ arr }': &[u8]\n-    [282; 285) 'arr': &[u8; _]\n-    [297; 298) 'd': u8\n-    [301; 302) 'g': fn g<u8>(S<&[u8]>) -> u8\n-    [301; 316) 'g(S { a: arr })': u8\n-    [303; 315) 'S { a: arr }': S<&[u8]>\n-    [310; 313) 'arr': &[u8; _]\n-    [326; 327) 'e': [&[u8]; _]\n-    [341; 346) '[arr]': [&[u8]; _]\n-    [342; 345) 'arr': &[u8; _]\n-    [356; 357) 'f': [&[u8]; _]\n-    [371; 379) '[arr; 2]': [&[u8]; _]\n-    [372; 375) 'arr': &[u8; _]\n-    [377; 378) '2': usize\n-    [389; 390) 'g': (&[u8], &[u8])\n-    [407; 417) '(arr, arr)': (&[u8], &[u8])\n-    [408; 411) 'arr': &[u8; _]\n-    [413; 416) 'arr': &[u8; _]\n+    31..32 '_': &[T]\n+    45..56 '{ loop {} }': T\n+    47..54 'loop {}': !\n+    52..54 '{}': ()\n+    65..66 '_': S<&[T]>\n+    82..93 '{ loop {} }': T\n+    84..91 'loop {}': !\n+    89..91 '{}': ()\n+    122..133 '{ loop {} }': *mut [T; _]\n+    124..131 'loop {}': !\n+    129..131 '{}': ()\n+    160..173 '{     gen() }': *mut [U]\n+    166..169 'gen': fn gen<U>() -> *mut [U; _]\n+    166..171 'gen()': *mut [U; _]\n+    186..420 '{     ...rr); }': ()\n+    196..199 'arr': &[u8; _]\n+    212..216 '&[1]': &[u8; _]\n+    213..216 '[1]': [u8; _]\n+    214..215 '1': u8\n+    227..228 'a': &[u8]\n+    237..240 'arr': &[u8; _]\n+    250..251 'b': u8\n+    254..255 'f': fn f<u8>(&[u8]) -> u8\n+    254..260 'f(arr)': u8\n+    256..259 'arr': &[u8; _]\n+    270..271 'c': &[u8]\n+    280..287 '{ arr }': &[u8]\n+    282..285 'arr': &[u8; _]\n+    297..298 'd': u8\n+    301..302 'g': fn g<u8>(S<&[u8]>) -> u8\n+    301..316 'g(S { a: arr })': u8\n+    303..315 'S { a: arr }': S<&[u8]>\n+    310..313 'arr': &[u8; _]\n+    326..327 'e': [&[u8]; _]\n+    341..346 '[arr]': [&[u8]; _]\n+    342..345 'arr': &[u8; _]\n+    356..357 'f': [&[u8]; _]\n+    371..379 '[arr; 2]': [&[u8]; _]\n+    372..375 'arr': &[u8; _]\n+    377..378 '2': usize\n+    389..390 'g': (&[u8], &[u8])\n+    407..417 '(arr, arr)': (&[u8], &[u8])\n+    408..411 'arr': &[u8; _]\n+    413..416 'arr': &[u8; _]\n     \"###\n     );\n }\n@@ -120,11 +120,11 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [11; 40) '{     ...[1]; }': ()\n-    [21; 22) 'x': &[i32]\n-    [33; 37) '&[1]': &[i32; _]\n-    [34; 37) '[1]': [i32; _]\n-    [35; 36) '1': i32\n+    11..40 '{     ...[1]; }': ()\n+    21..22 'x': &[i32]\n+    33..37 '&[1]': &[i32; _]\n+    34..37 '[1]': [i32; _]\n+    35..36 '1': i32\n     \"###);\n }\n \n@@ -150,31 +150,31 @@ fn test(a: A<[u8; 2]>, b: B<[u8; 2]>, c: C<[u8; 2]>) {\n }\n \"#),\n         @r###\"\n-    [258; 259) 'x': A<[T]>\n-    [279; 284) '{ x }': A<[T]>\n-    [281; 282) 'x': A<[T]>\n-    [296; 297) 'x': B<[T]>\n-    [317; 322) '{ x }': B<[T]>\n-    [319; 320) 'x': B<[T]>\n-    [334; 335) 'x': C<[T]>\n-    [355; 360) '{ x }': C<[T]>\n-    [357; 358) 'x': C<[T]>\n-    [370; 371) 'a': A<[u8; _]>\n-    [385; 386) 'b': B<[u8; _]>\n-    [400; 401) 'c': C<[u8; _]>\n-    [415; 481) '{     ...(c); }': ()\n-    [425; 426) 'd': A<[{unknown}]>\n-    [429; 433) 'foo1': fn foo1<{unknown}>(A<[{unknown}]>) -> A<[{unknown}]>\n-    [429; 436) 'foo1(a)': A<[{unknown}]>\n-    [434; 435) 'a': A<[u8; _]>\n-    [446; 447) 'e': B<[u8]>\n-    [450; 454) 'foo2': fn foo2<u8>(B<[u8]>) -> B<[u8]>\n-    [450; 457) 'foo2(b)': B<[u8]>\n-    [455; 456) 'b': B<[u8; _]>\n-    [467; 468) 'f': C<[u8]>\n-    [471; 475) 'foo3': fn foo3<u8>(C<[u8]>) -> C<[u8]>\n-    [471; 478) 'foo3(c)': C<[u8]>\n-    [476; 477) 'c': C<[u8; _]>\n+    258..259 'x': A<[T]>\n+    279..284 '{ x }': A<[T]>\n+    281..282 'x': A<[T]>\n+    296..297 'x': B<[T]>\n+    317..322 '{ x }': B<[T]>\n+    319..320 'x': B<[T]>\n+    334..335 'x': C<[T]>\n+    355..360 '{ x }': C<[T]>\n+    357..358 'x': C<[T]>\n+    370..371 'a': A<[u8; _]>\n+    385..386 'b': B<[u8; _]>\n+    400..401 'c': C<[u8; _]>\n+    415..481 '{     ...(c); }': ()\n+    425..426 'd': A<[{unknown}]>\n+    429..433 'foo1': fn foo1<{unknown}>(A<[{unknown}]>) -> A<[{unknown}]>\n+    429..436 'foo1(a)': A<[{unknown}]>\n+    434..435 'a': A<[u8; _]>\n+    446..447 'e': B<[u8]>\n+    450..454 'foo2': fn foo2<u8>(B<[u8]>) -> B<[u8]>\n+    450..457 'foo2(b)': B<[u8]>\n+    455..456 'b': B<[u8; _]>\n+    467..468 'f': C<[u8]>\n+    471..475 'foo3': fn foo3<u8>(C<[u8]>) -> C<[u8]>\n+    471..478 'foo3(c)': C<[u8]>\n+    476..477 'c': C<[u8; _]>\n     \"###\n     );\n }\n@@ -193,24 +193,24 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [11; 12) 'x': &[T]\n-    [28; 39) '{ loop {} }': &[T]\n-    [30; 37) 'loop {}': !\n-    [35; 37) '{}': ()\n-    [50; 126) '{     ...  }; }': ()\n-    [60; 61) 'x': &[i32]\n-    [64; 123) 'if tru...     }': &[i32]\n-    [67; 71) 'true': bool\n-    [72; 97) '{     ...     }': &[i32]\n-    [82; 85) 'foo': fn foo<i32>(&[i32]) -> &[i32]\n-    [82; 91) 'foo(&[1])': &[i32]\n-    [86; 90) '&[1]': &[i32; _]\n-    [87; 90) '[1]': [i32; _]\n-    [88; 89) '1': i32\n-    [103; 123) '{     ...     }': &[i32; _]\n-    [113; 117) '&[1]': &[i32; _]\n-    [114; 117) '[1]': [i32; _]\n-    [115; 116) '1': i32\n+    11..12 'x': &[T]\n+    28..39 '{ loop {} }': &[T]\n+    30..37 'loop {}': !\n+    35..37 '{}': ()\n+    50..126 '{     ...  }; }': ()\n+    60..61 'x': &[i32]\n+    64..123 'if tru...     }': &[i32]\n+    67..71 'true': bool\n+    72..97 '{     ...     }': &[i32]\n+    82..85 'foo': fn foo<i32>(&[i32]) -> &[i32]\n+    82..91 'foo(&[1])': &[i32]\n+    86..90 '&[1]': &[i32; _]\n+    87..90 '[1]': [i32; _]\n+    88..89 '1': i32\n+    103..123 '{     ...     }': &[i32; _]\n+    113..117 '&[1]': &[i32; _]\n+    114..117 '[1]': [i32; _]\n+    115..116 '1': i32\n     \"###\n     );\n }\n@@ -229,24 +229,24 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [11; 12) 'x': &[T]\n-    [28; 39) '{ loop {} }': &[T]\n-    [30; 37) 'loop {}': !\n-    [35; 37) '{}': ()\n-    [50; 126) '{     ...  }; }': ()\n-    [60; 61) 'x': &[i32]\n-    [64; 123) 'if tru...     }': &[i32]\n-    [67; 71) 'true': bool\n-    [72; 92) '{     ...     }': &[i32; _]\n-    [82; 86) '&[1]': &[i32; _]\n-    [83; 86) '[1]': [i32; _]\n-    [84; 85) '1': i32\n-    [98; 123) '{     ...     }': &[i32]\n-    [108; 111) 'foo': fn foo<i32>(&[i32]) -> &[i32]\n-    [108; 117) 'foo(&[1])': &[i32]\n-    [112; 116) '&[1]': &[i32; _]\n-    [113; 116) '[1]': [i32; _]\n-    [114; 115) '1': i32\n+    11..12 'x': &[T]\n+    28..39 '{ loop {} }': &[T]\n+    30..37 'loop {}': !\n+    35..37 '{}': ()\n+    50..126 '{     ...  }; }': ()\n+    60..61 'x': &[i32]\n+    64..123 'if tru...     }': &[i32]\n+    67..71 'true': bool\n+    72..92 '{     ...     }': &[i32; _]\n+    82..86 '&[1]': &[i32; _]\n+    83..86 '[1]': [i32; _]\n+    84..85 '1': i32\n+    98..123 '{     ...     }': &[i32]\n+    108..111 'foo': fn foo<i32>(&[i32]) -> &[i32]\n+    108..117 'foo(&[1])': &[i32]\n+    112..116 '&[1]': &[i32; _]\n+    113..116 '[1]': [i32; _]\n+    114..115 '1': i32\n     \"###\n     );\n }\n@@ -265,31 +265,31 @@ fn test(i: i32) {\n }\n \"#),\n         @r###\"\n-    [11; 12) 'x': &[T]\n-    [28; 39) '{ loop {} }': &[T]\n-    [30; 37) 'loop {}': !\n-    [35; 37) '{}': ()\n-    [48; 49) 'i': i32\n-    [56; 150) '{     ...  }; }': ()\n-    [66; 67) 'x': &[i32]\n-    [70; 147) 'match ...     }': &[i32]\n-    [76; 77) 'i': i32\n-    [88; 89) '2': i32\n-    [88; 89) '2': i32\n-    [93; 96) 'foo': fn foo<i32>(&[i32]) -> &[i32]\n-    [93; 102) 'foo(&[2])': &[i32]\n-    [97; 101) '&[2]': &[i32; _]\n-    [98; 101) '[2]': [i32; _]\n-    [99; 100) '2': i32\n-    [112; 113) '1': i32\n-    [112; 113) '1': i32\n-    [117; 121) '&[1]': &[i32; _]\n-    [118; 121) '[1]': [i32; _]\n-    [119; 120) '1': i32\n-    [131; 132) '_': i32\n-    [136; 140) '&[3]': &[i32; _]\n-    [137; 140) '[3]': [i32; _]\n-    [138; 139) '3': i32\n+    11..12 'x': &[T]\n+    28..39 '{ loop {} }': &[T]\n+    30..37 'loop {}': !\n+    35..37 '{}': ()\n+    48..49 'i': i32\n+    56..150 '{     ...  }; }': ()\n+    66..67 'x': &[i32]\n+    70..147 'match ...     }': &[i32]\n+    76..77 'i': i32\n+    88..89 '2': i32\n+    88..89 '2': i32\n+    93..96 'foo': fn foo<i32>(&[i32]) -> &[i32]\n+    93..102 'foo(&[2])': &[i32]\n+    97..101 '&[2]': &[i32; _]\n+    98..101 '[2]': [i32; _]\n+    99..100 '2': i32\n+    112..113 '1': i32\n+    112..113 '1': i32\n+    117..121 '&[1]': &[i32; _]\n+    118..121 '[1]': [i32; _]\n+    119..120 '1': i32\n+    131..132 '_': i32\n+    136..140 '&[3]': &[i32; _]\n+    137..140 '[3]': [i32; _]\n+    138..139 '3': i32\n     \"###\n     );\n }\n@@ -308,31 +308,31 @@ fn test(i: i32) {\n }\n \"#),\n         @r###\"\n-    [11; 12) 'x': &[T]\n-    [28; 39) '{ loop {} }': &[T]\n-    [30; 37) 'loop {}': !\n-    [35; 37) '{}': ()\n-    [48; 49) 'i': i32\n-    [56; 150) '{     ...  }; }': ()\n-    [66; 67) 'x': &[i32]\n-    [70; 147) 'match ...     }': &[i32]\n-    [76; 77) 'i': i32\n-    [88; 89) '1': i32\n-    [88; 89) '1': i32\n-    [93; 97) '&[1]': &[i32; _]\n-    [94; 97) '[1]': [i32; _]\n-    [95; 96) '1': i32\n-    [107; 108) '2': i32\n-    [107; 108) '2': i32\n-    [112; 115) 'foo': fn foo<i32>(&[i32]) -> &[i32]\n-    [112; 121) 'foo(&[2])': &[i32]\n-    [116; 120) '&[2]': &[i32; _]\n-    [117; 120) '[2]': [i32; _]\n-    [118; 119) '2': i32\n-    [131; 132) '_': i32\n-    [136; 140) '&[3]': &[i32; _]\n-    [137; 140) '[3]': [i32; _]\n-    [138; 139) '3': i32\n+    11..12 'x': &[T]\n+    28..39 '{ loop {} }': &[T]\n+    30..37 'loop {}': !\n+    35..37 '{}': ()\n+    48..49 'i': i32\n+    56..150 '{     ...  }; }': ()\n+    66..67 'x': &[i32]\n+    70..147 'match ...     }': &[i32]\n+    76..77 'i': i32\n+    88..89 '1': i32\n+    88..89 '1': i32\n+    93..97 '&[1]': &[i32; _]\n+    94..97 '[1]': [i32; _]\n+    95..96 '1': i32\n+    107..108 '2': i32\n+    107..108 '2': i32\n+    112..115 'foo': fn foo<i32>(&[i32]) -> &[i32]\n+    112..121 'foo(&[2])': &[i32]\n+    116..120 '&[2]': &[i32; _]\n+    117..120 '[2]': [i32; _]\n+    118..119 '2': i32\n+    131..132 '_': i32\n+    136..140 '&[3]': &[i32; _]\n+    137..140 '[3]': [i32; _]\n+    138..139 '3': i32\n     \"###\n     );\n }\n@@ -353,24 +353,24 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [11; 145) '{     ...  }; }': ()\n-    [21; 22) 't': &mut i32\n-    [25; 31) '&mut 1': &mut i32\n-    [30; 31) '1': i32\n-    [41; 42) 'x': *const i32\n-    [45; 142) 'match ...     }': *const i32\n-    [51; 52) '1': i32\n-    [63; 64) '1': i32\n-    [63; 64) '1': i32\n-    [68; 69) 't': &mut i32\n-    [68; 81) 't as *mut i32': *mut i32\n-    [91; 92) '2': i32\n-    [91; 92) '2': i32\n-    [96; 97) 't': &mut i32\n-    [96; 105) 't as &i32': &i32\n-    [115; 116) '_': i32\n-    [120; 121) 't': &mut i32\n-    [120; 135) 't as *const i32': *const i32\n+    11..145 '{     ...  }; }': ()\n+    21..22 't': &mut i32\n+    25..31 '&mut 1': &mut i32\n+    30..31 '1': i32\n+    41..42 'x': *const i32\n+    45..142 'match ...     }': *const i32\n+    51..52 '1': i32\n+    63..64 '1': i32\n+    63..64 '1': i32\n+    68..69 't': &mut i32\n+    68..81 't as *mut i32': *mut i32\n+    91..92 '2': i32\n+    91..92 '2': i32\n+    96..97 't': &mut i32\n+    96..105 't as &i32': &i32\n+    115..116 '_': i32\n+    120..121 't': &mut i32\n+    120..135 't as *const i32': *const i32\n     \"###\n     );\n }\n@@ -384,9 +384,9 @@ fn foo() -> u32 {\n }\n \"#, true),\n         @r###\"\n-    [17; 40) '{     ...own; }': !\n-    [23; 37) 'return unknown': !\n-    [30; 37) 'unknown': u32\n+    17..40 '{     ...own; }': !\n+    23..37 'return unknown': !\n+    30..37 'unknown': u32\n     \"###\n     );\n }\n@@ -404,24 +404,24 @@ fn test() {\n }\n \"#, true),\n         @r###\"\n-    [30; 31) 'x': &Foo\n-    [39; 41) '{}': ()\n-    [52; 133) '{     ...oo); }': ()\n-    [58; 71) 'takes_ref_foo': fn takes_ref_foo(&Foo)\n-    [58; 77) 'takes_...(&Foo)': ()\n-    [72; 76) '&Foo': &Foo\n-    [73; 76) 'Foo': Foo\n-    [83; 96) 'takes_ref_foo': fn takes_ref_foo(&Foo)\n-    [83; 103) 'takes_...&&Foo)': ()\n-    [97; 102) '&&Foo': &&Foo\n-    [98; 102) '&Foo': &Foo\n-    [99; 102) 'Foo': Foo\n-    [109; 122) 'takes_ref_foo': fn takes_ref_foo(&Foo)\n-    [109; 130) 'takes_...&&Foo)': ()\n-    [123; 129) '&&&Foo': &&&Foo\n-    [124; 129) '&&Foo': &&Foo\n-    [125; 129) '&Foo': &Foo\n-    [126; 129) 'Foo': Foo\n+    30..31 'x': &Foo\n+    39..41 '{}': ()\n+    52..133 '{     ...oo); }': ()\n+    58..71 'takes_ref_foo': fn takes_ref_foo(&Foo)\n+    58..77 'takes_...(&Foo)': ()\n+    72..76 '&Foo': &Foo\n+    73..76 'Foo': Foo\n+    83..96 'takes_ref_foo': fn takes_ref_foo(&Foo)\n+    83..103 'takes_...&&Foo)': ()\n+    97..102 '&&Foo': &&Foo\n+    98..102 '&Foo': &Foo\n+    99..102 'Foo': Foo\n+    109..122 'takes_ref_foo': fn takes_ref_foo(&Foo)\n+    109..130 'takes_...&&Foo)': ()\n+    123..129 '&&&Foo': &&&Foo\n+    124..129 '&&Foo': &&Foo\n+    125..129 '&Foo': &Foo\n+    126..129 'Foo': Foo\n     \"###\n     );\n }\n@@ -439,26 +439,26 @@ fn test() {\n }\n \"#, true),\n         @r###\"\n-    [29; 30) 'x': &T\n-    [41; 47) '{ *x }': T\n-    [43; 45) '*x': T\n-    [44; 45) 'x': &T\n-    [58; 127) '{     ...oo); }': ()\n-    [64; 73) 'takes_ref': fn takes_ref<Foo>(&Foo) -> Foo\n-    [64; 79) 'takes_ref(&Foo)': Foo\n-    [74; 78) '&Foo': &Foo\n-    [75; 78) 'Foo': Foo\n-    [85; 94) 'takes_ref': fn takes_ref<&Foo>(&&Foo) -> &Foo\n-    [85; 101) 'takes_...&&Foo)': &Foo\n-    [95; 100) '&&Foo': &&Foo\n-    [96; 100) '&Foo': &Foo\n-    [97; 100) 'Foo': Foo\n-    [107; 116) 'takes_ref': fn takes_ref<&&Foo>(&&&Foo) -> &&Foo\n-    [107; 124) 'takes_...&&Foo)': &&Foo\n-    [117; 123) '&&&Foo': &&&Foo\n-    [118; 123) '&&Foo': &&Foo\n-    [119; 123) '&Foo': &Foo\n-    [120; 123) 'Foo': Foo\n+    29..30 'x': &T\n+    41..47 '{ *x }': T\n+    43..45 '*x': T\n+    44..45 'x': &T\n+    58..127 '{     ...oo); }': ()\n+    64..73 'takes_ref': fn takes_ref<Foo>(&Foo) -> Foo\n+    64..79 'takes_ref(&Foo)': Foo\n+    74..78 '&Foo': &Foo\n+    75..78 'Foo': Foo\n+    85..94 'takes_ref': fn takes_ref<&Foo>(&&Foo) -> &Foo\n+    85..101 'takes_...&&Foo)': &Foo\n+    95..100 '&&Foo': &&Foo\n+    96..100 '&Foo': &Foo\n+    97..100 'Foo': Foo\n+    107..116 'takes_ref': fn takes_ref<&&Foo>(&&&Foo) -> &&Foo\n+    107..124 'takes_...&&Foo)': &&Foo\n+    117..123 '&&&Foo': &&&Foo\n+    118..123 '&&Foo': &&Foo\n+    119..123 '&Foo': &Foo\n+    120..123 'Foo': Foo\n     \"###\n     );\n }\n@@ -478,18 +478,18 @@ fn test() {\n }\n \"#, true),\n         @r###\"\n-    [127; 128) 'x': &str\n-    [136; 138) '{}': ()\n-    [169; 180) '{ loop {} }': String\n-    [171; 178) 'loop {}': !\n-    [176; 178) '{}': ()\n-    [191; 236) '{     ... }); }': ()\n-    [197; 210) 'takes_ref_str': fn takes_ref_str(&str)\n-    [197; 233) 'takes_...g() })': ()\n-    [211; 232) '&{ ret...ng() }': &String\n-    [212; 232) '{ retu...ng() }': String\n-    [214; 228) 'returns_string': fn returns_string() -> String\n-    [214; 230) 'return...ring()': String\n+    127..128 'x': &str\n+    136..138 '{}': ()\n+    169..180 '{ loop {} }': String\n+    171..178 'loop {}': !\n+    176..178 '{}': ()\n+    191..236 '{     ... }); }': ()\n+    197..210 'takes_ref_str': fn takes_ref_str(&str)\n+    197..233 'takes_...g() })': ()\n+    211..232 '&{ ret...ng() }': &String\n+    212..232 '{ retu...ng() }': String\n+    214..228 'returns_string': fn returns_string() -> String\n+    214..230 'return...ring()': String\n     \"###\n     );\n }\n@@ -508,19 +508,19 @@ fn foo() {\n }\n \"#, true),\n         @r###\"\n-    [10; 106) '{     ...  }; }': ()\n-    [20; 21) 'x': || -> &u32\n-    [24; 103) '|| {  ...     }': || -> &u32\n-    [27; 103) '{     ...     }': &u32\n-    [37; 82) 'if tru...     }': ()\n-    [40; 44) 'true': bool\n-    [45; 82) '{     ...     }': !\n-    [59; 71) 'return &1u32': !\n-    [66; 71) '&1u32': &u32\n-    [67; 71) '1u32': u32\n-    [91; 97) '&&1u32': &&u32\n-    [92; 97) '&1u32': &u32\n-    [93; 97) '1u32': u32\n+    10..106 '{     ...  }; }': ()\n+    20..21 'x': || -> &u32\n+    24..103 '|| {  ...     }': || -> &u32\n+    27..103 '{     ...     }': &u32\n+    37..82 'if tru...     }': ()\n+    40..44 'true': bool\n+    45..82 '{     ...     }': !\n+    59..71 'return &1u32': !\n+    66..71 '&1u32': &u32\n+    67..71 '1u32': u32\n+    91..97 '&&1u32': &&u32\n+    92..97 '&1u32': &u32\n+    93..97 '1u32': u32\n     \"###\n     );\n }\n@@ -535,12 +535,12 @@ fn test() {\n }\n \"#, true),\n         @r###\"\n-    [8; 9) 'x': u32\n-    [25; 30) '{ 1 }': isize\n-    [27; 28) '1': isize\n-    [41; 79) '{     ...foo; }': ()\n-    [51; 52) 'f': fn(u32) -> isize\n-    [73; 76) 'foo': fn foo(u32) -> isize\n+    8..9 'x': u32\n+    25..30 '{ 1 }': isize\n+    27..28 '1': isize\n+    41..79 '{     ...foo; }': ()\n+    51..52 'f': fn(u32) -> isize\n+    73..76 'foo': fn foo(u32) -> isize\n     \"###\n     );\n }\n@@ -554,12 +554,12 @@ fn test() {\n }\n \"#, true),\n         @r###\"\n-    [11; 55) '{     ...1 }; }': ()\n-    [21; 22) 'f': fn(u32) -> isize\n-    [43; 52) '|x| { 1 }': |u32| -> isize\n-    [44; 45) 'x': u32\n-    [47; 52) '{ 1 }': isize\n-    [49; 50) '1': isize\n+    11..55 '{     ...1 }; }': ()\n+    21..22 'f': fn(u32) -> isize\n+    43..52 '|x| { 1 }': |u32| -> isize\n+    44..45 'x': u32\n+    47..52 '{ 1 }': isize\n+    49..50 '1': isize\n     \"###\n     );\n }\n@@ -577,11 +577,11 @@ impl<TT> S<TT> {\n }\n \"#, true),\n         @r###\"\n-    [51; 55) 'self': &S<TT>\n-    [64; 87) '{     ...     }': &TT\n-    [74; 81) '&self.t': &TT\n-    [75; 79) 'self': &S<TT>\n-    [75; 81) 'self.t': TT\n+    51..55 'self': &S<TT>\n+    64..87 '{     ...     }': &TT\n+    74..81 '&self.t': &TT\n+    75..79 'self': &S<TT>\n+    75..81 'self.t': TT\n     \"###\n     );\n }\n@@ -602,13 +602,13 @@ fn test() {\n }\n \"#, true),\n         @r###\"\n-    [162; 199) '{     ... 3]; }': ()\n-    [172; 173) 'f': &[usize]\n-    [186; 196) '&[1, 2, 3]': &[usize; _]\n-    [187; 196) '[1, 2, 3]': [usize; _]\n-    [188; 189) '1': usize\n-    [191; 192) '2': usize\n-    [194; 195) '3': usize\n+    162..199 '{     ... 3]; }': ()\n+    172..173 'f': &[usize]\n+    186..196 '&[1, 2, 3]': &[usize; _]\n+    187..196 '[1, 2, 3]': [usize; _]\n+    188..189 '1': usize\n+    191..192 '2': usize\n+    194..195 '3': usize\n     \"###\n     );\n }\n@@ -642,19 +642,19 @@ fn test() {\n }\n \"#, true),\n         @r###\"\n-    [388; 573) '{     ...bj2; }': ()\n-    [398; 401) 'obj': &dyn Baz<i8, i16>\n-    [423; 425) '&S': &S<i8, i16>\n-    [424; 425) 'S': S<i8, i16>\n-    [435; 438) 'obj': &dyn Bar<usize, i8, i16>\n-    [460; 463) 'obj': &dyn Baz<i8, i16>\n-    [473; 476) 'obj': &dyn Foo<i8, usize>\n-    [495; 498) 'obj': &dyn Bar<usize, i8, i16>\n-    [508; 512) 'obj2': &dyn Baz<i8, i16>\n-    [534; 536) '&S': &S<i8, i16>\n-    [535; 536) 'S': S<i8, i16>\n-    [546; 547) '_': &dyn Foo<i8, usize>\n-    [566; 570) 'obj2': &dyn Baz<i8, i16>\n+    388..573 '{     ...bj2; }': ()\n+    398..401 'obj': &dyn Baz<i8, i16>\n+    423..425 '&S': &S<i8, i16>\n+    424..425 'S': S<i8, i16>\n+    435..438 'obj': &dyn Bar<usize, i8, i16>\n+    460..463 'obj': &dyn Baz<i8, i16>\n+    473..476 'obj': &dyn Foo<i8, usize>\n+    495..498 'obj': &dyn Bar<usize, i8, i16>\n+    508..512 'obj2': &dyn Baz<i8, i16>\n+    534..536 '&S': &S<i8, i16>\n+    535..536 'S': S<i8, i16>\n+    546..547 '_': &dyn Foo<i8, usize>\n+    566..570 'obj2': &dyn Baz<i8, i16>\n     \"###\n     );\n }\n@@ -687,12 +687,12 @@ fn test() {\n }\n \"#, true),\n         @r###\"\n-    [292; 348) '{     ...obj; }': ()\n-    [302; 305) 'obj': &dyn D\n-    [316; 318) '&S': &S\n-    [317; 318) 'S': S\n-    [328; 331) 'obj': &dyn A\n-    [342; 345) 'obj': &dyn D\n+    292..348 '{     ...obj; }': ()\n+    302..305 'obj': &dyn D\n+    316..318 '&S': &S\n+    317..318 'S': S\n+    328..331 'obj': &dyn A\n+    342..345 'obj': &dyn D\n     \"###\n     );\n }"}, {"sha": "6b5267232585cd24b61cf81354e9bc394d0019c6", "filename": "crates/ra_hir_ty/src/tests/macros.rs", "status": "modified", "additions": 101, "deletions": 101, "changes": 202, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmacros.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -67,12 +67,12 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    ![0; 17) '{Foo(v...,2,])}': Foo\n-    ![1; 4) 'Foo': Foo({unknown}) -> Foo\n-    ![1; 16) 'Foo(vec![1,2,])': Foo\n-    ![5; 15) 'vec![1,2,]': {unknown}\n-    [156; 182) '{     ...,2); }': ()\n-    [166; 167) 'x': Foo\n+    !0..17 '{Foo(v...,2,])}': Foo\n+    !1..4 'Foo': Foo({unknown}) -> Foo\n+    !1..16 'Foo(vec![1,2,])': Foo\n+    !5..15 'vec![1,2,]': {unknown}\n+    156..182 '{     ...,2); }': ()\n+    166..167 'x': Foo\n     \"###\n     );\n }\n@@ -100,14 +100,14 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    ![0; 17) '{Foo(v...,2,])}': Foo\n-    ![1; 4) 'Foo': Foo({unknown}) -> Foo\n-    ![1; 16) 'Foo(vec![1,2,])': Foo\n-    ![5; 15) 'vec![1,2,]': {unknown}\n-    [195; 251) '{     ...,2); }': ()\n-    [205; 206) 'x': Foo\n-    [228; 229) 'y': {unknown}\n-    [232; 248) 'crate:...!(1,2)': {unknown}\n+    !0..17 '{Foo(v...,2,])}': Foo\n+    !1..4 'Foo': Foo({unknown}) -> Foo\n+    !1..16 'Foo(vec![1,2,])': Foo\n+    !5..15 'vec![1,2,]': {unknown}\n+    195..251 '{     ...,2); }': ()\n+    205..206 'x': Foo\n+    228..229 'y': {unknown}\n+    232..248 'crate:...!(1,2)': {unknown}\n     \"###\n     );\n }\n@@ -131,11 +131,11 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    ![0; 5) '42i32': i32\n-    ![0; 5) '42i32': i32\n-    [111; 164) '{     ...!(); }': ()\n-    [121; 122) 'x': i32\n-    [148; 149) 'y': i32\n+    !0..5 '42i32': i32\n+    !0..5 '42i32': i32\n+    111..164 '{     ...!(); }': ()\n+    121..122 'x': i32\n+    148..149 'y': i32\n     \"###\n     );\n }\n@@ -172,51 +172,51 @@ fn spam() {\n }\n \"#),\n         @r###\"\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    ![0; 6) '1isize': isize\n-    [54; 457) '{     ...!(); }': !\n-    [88; 109) 'spam!(...am!())': {unknown}\n-    [115; 134) 'for _ ...!() {}': ()\n-    [119; 120) '_': {unknown}\n-    [132; 134) '{}': ()\n-    [139; 149) '|| spam!()': || -> isize\n-    [155; 171) 'while ...!() {}': ()\n-    [169; 171) '{}': ()\n-    [176; 189) 'break spam!()': !\n-    [195; 209) 'return spam!()': !\n-    [215; 269) 'match ...     }': isize\n-    [239; 240) '_': isize\n-    [274; 290) 'spam!(...am!())': {unknown}\n-    [296; 318) 'Spam {...m!() }': {unknown}\n-    [324; 340) 'spam!(...am!()]': {unknown}\n-    [365; 381) 'spam!(... usize': usize\n-    [387; 395) '&spam!()': &isize\n-    [401; 409) '-spam!()': isize\n-    [415; 431) 'spam!(...pam!()': {unknown}\n-    [437; 454) 'spam!(...pam!()': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    !0..6 '1isize': isize\n+    54..457 '{     ...!(); }': !\n+    88..109 'spam!(...am!())': {unknown}\n+    115..134 'for _ ...!() {}': ()\n+    119..120 '_': {unknown}\n+    132..134 '{}': ()\n+    139..149 '|| spam!()': || -> isize\n+    155..171 'while ...!() {}': ()\n+    169..171 '{}': ()\n+    176..189 'break spam!()': !\n+    195..209 'return spam!()': !\n+    215..269 'match ...     }': isize\n+    239..240 '_': isize\n+    274..290 'spam!(...am!())': {unknown}\n+    296..318 'Spam {...m!() }': {unknown}\n+    324..340 'spam!(...am!()]': {unknown}\n+    365..381 'spam!(... usize': usize\n+    387..395 '&spam!()': &isize\n+    401..409 '-spam!()': isize\n+    415..431 'spam!(...pam!()': {unknown}\n+    437..454 'spam!(...pam!()': isize\n     \"###\n     );\n }\n@@ -244,9 +244,9 @@ fn foo() {\n }\n \"#),\n         @r###\"\n-    ![0; 5) '42i32': i32\n-    [171; 206) '{     ...32); }': ()\n-    [181; 184) 'foo': i32\n+    !0..5 '42i32': i32\n+    171..206 '{     ...32); }': ()\n+    181..184 'foo': i32\n     \"###\n     );\n }\n@@ -357,12 +357,12 @@ fn main() {\n }\n \"#),\n         @r###\"\n-        [159; 164) '{ 0 }': u64\n-        [161; 162) '0': u64\n-        [175; 197) '{     ...f(); }': ()\n-        [185; 187) '_a': u64\n-        [191; 192) 'f': fn f() -> u64\n-        [191; 194) 'f()': u64\n+        159..164 '{ 0 }': u64\n+        161..162 '0': u64\n+        175..197 '{     ...f(); }': ()\n+        185..187 '_a': u64\n+        191..192 'f': fn f() -> u64\n+        191..194 'f()': u64\n     \"###\n     );\n }\n@@ -379,10 +379,10 @@ fn main() {\n }\n \"#),\n         @r###\"\n-        ![0; 6) '1usize': usize\n-        [11; 90) '{     ...!(); }': ()\n-        [17; 66) 'macro_...     }': {unknown}\n-        [75; 77) '_a': usize\n+        !0..6 '1usize': usize\n+        11..90 '{     ...!(); }': ()\n+        17..66 'macro_...     }': {unknown}\n+        75..77 '_a': usize\n     \"###\n     );\n }\n@@ -399,9 +399,9 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    ![0; 1) '0': i32\n-    [64; 88) '{     ...!(); }': ()\n-    [74; 75) 'x': i32\n+    !0..1 '0': i32\n+    64..88 '{     ...!(); }': ()\n+    74..75 'x': i32\n     \"###\n     );\n }\n@@ -418,9 +418,9 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    ![0; 2) '\"\"': &str\n-    [64; 88) '{     ...!(); }': ()\n-    [74; 75) 'x': &str\n+    !0..2 '\"\"': &str\n+    64..88 '{     ...!(); }': ()\n+    74..75 'x': &str\n     \"###\n     );\n }\n@@ -437,9 +437,9 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    ![0; 1) '0': i32\n-    [66; 92) '{     ...!(); }': ()\n-    [76; 77) 'x': i32\n+    !0..1 '0': i32\n+    66..92 '{     ...!(); }': ()\n+    76..77 'x': i32\n     \"###\n     );\n }\n@@ -456,9 +456,9 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    ![0; 13) '\"helloworld!\"': &str\n-    [66; 122) '{     ...\")); }': ()\n-    [76; 77) 'x': &str\n+    !0..13 '\"helloworld!\"': &str\n+    66..122 '{     ...\")); }': ()\n+    76..77 'x': &str\n     \"###\n     );\n }\n@@ -591,9 +591,9 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    ![0; 13) '\"helloworld!\"': &str\n-    [104; 161) '{     ...\")); }': ()\n-    [114; 115) 'x': &str\n+    !0..13 '\"helloworld!\"': &str\n+    104..161 '{     ...\")); }': ()\n+    114..115 'x': &str\n     \"###\n     );\n }\n@@ -611,9 +611,9 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    ![0; 5) '\"bar\"': &str\n-    [88; 116) '{     ...o\"); }': ()\n-    [98; 99) 'x': &str\n+    !0..5 '\"bar\"': &str\n+    88..116 '{     ...o\"); }': ()\n+    98..99 'x': &str\n     \"###\n     );\n }\n@@ -703,12 +703,12 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    [52; 111) '{     ...  }; }': ()\n-    [62; 63) 'x': u32\n-    [66; 108) 'match ...     }': u32\n-    [72; 74) '()': ()\n-    [85; 92) 'unit!()': ()\n-    [96; 101) '92u32': u32\n+    52..111 '{     ...  }; }': ()\n+    62..63 'x': u32\n+    66..108 'match ...     }': u32\n+    72..74 '()': ()\n+    85..92 'unit!()': ()\n+    96..101 '92u32': u32\n     \"###\n     );\n }"}, {"sha": "ab87f598a62b22071aa0da72605593a02d59b38a", "filename": "crates/ra_hir_ty/src/tests/method_resolution.rs", "status": "modified", "additions": 188, "deletions": 188, "changes": 376, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -22,14 +22,14 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [45; 49) 'self': &[T]\n-    [56; 79) '{     ...     }': T\n-    [66; 73) 'loop {}': !\n-    [71; 73) '{}': ()\n-    [133; 160) '{     ...o\"); }': ()\n-    [139; 149) '<[_]>::foo': fn foo<u8>(&[u8]) -> u8\n-    [139; 157) '<[_]>:...\"foo\")': u8\n-    [150; 156) 'b\"foo\"': &[u8]\n+    45..49 'self': &[T]\n+    56..79 '{     ...     }': T\n+    66..73 'loop {}': !\n+    71..73 '{}': ()\n+    133..160 '{     ...o\"); }': ()\n+    139..149 '<[_]>::foo': fn foo<u8>(&[u8]) -> u8\n+    139..157 '<[_]>:...\"foo\")': u8\n+    150..156 'b\"foo\"': &[u8]\n     \"###\n     );\n }\n@@ -51,15 +51,15 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [49; 75) '{     ...     }': A\n-    [59; 69) 'A { x: 0 }': A\n-    [66; 67) '0': u32\n-    [88; 122) '{     ...a.x; }': ()\n-    [98; 99) 'a': A\n-    [102; 108) 'A::new': fn new() -> A\n-    [102; 110) 'A::new()': A\n-    [116; 117) 'a': A\n-    [116; 119) 'a.x': u32\n+    49..75 '{     ...     }': A\n+    59..69 'A { x: 0 }': A\n+    66..67 '0': u32\n+    88..122 '{     ...a.x; }': ()\n+    98..99 'a': A\n+    102..108 'A::new': fn new() -> A\n+    102..110 'A::new()': A\n+    116..117 'a': A\n+    116..119 'a.x': u32\n     \"###\n     );\n }\n@@ -86,19 +86,19 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [47; 67) '{     ...     }': A\n-    [57; 61) 'A::B': A\n-    [88; 108) '{     ...     }': A\n-    [98; 102) 'A::C': A\n-    [121; 178) '{     ...  c; }': ()\n-    [131; 132) 'a': A\n-    [135; 139) 'A::b': fn b() -> A\n-    [135; 141) 'A::b()': A\n-    [147; 148) 'a': A\n-    [158; 159) 'c': A\n-    [162; 166) 'A::c': fn c() -> A\n-    [162; 168) 'A::c()': A\n-    [174; 175) 'c': A\n+    47..67 '{     ...     }': A\n+    57..61 'A::B': A\n+    88..108 '{     ...     }': A\n+    98..102 'A::C': A\n+    121..178 '{     ...  c; }': ()\n+    131..132 'a': A\n+    135..139 'A::b': fn b() -> A\n+    135..141 'A::b()': A\n+    147..148 'a': A\n+    158..159 'c': A\n+    162..166 'A::c': fn c() -> A\n+    162..168 'A::c()': A\n+    174..175 'c': A\n     \"###\n     );\n }\n@@ -130,22 +130,22 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [56; 64) '{ A {} }': A\n-    [58; 62) 'A {}': A\n-    [126; 132) '{ 99 }': u32\n-    [128; 130) '99': u32\n-    [202; 210) '{ C {} }': C\n-    [204; 208) 'C {}': C\n-    [241; 325) '{     ...g(); }': ()\n-    [251; 252) 'x': A\n-    [255; 266) 'a::A::thing': fn thing() -> A\n-    [255; 268) 'a::A::thing()': A\n-    [278; 279) 'y': u32\n-    [282; 293) 'b::B::thing': fn thing() -> u32\n-    [282; 295) 'b::B::thing()': u32\n-    [305; 306) 'z': C\n-    [309; 320) 'c::C::thing': fn thing() -> C\n-    [309; 322) 'c::C::thing()': C\n+    56..64 '{ A {} }': A\n+    58..62 'A {}': A\n+    126..132 '{ 99 }': u32\n+    128..130 '99': u32\n+    202..210 '{ C {} }': C\n+    204..208 'C {}': C\n+    241..325 '{     ...g(); }': ()\n+    251..252 'x': A\n+    255..266 'a::A::thing': fn thing() -> A\n+    255..268 'a::A::thing()': A\n+    278..279 'y': u32\n+    282..293 'b::B::thing': fn thing() -> u32\n+    282..295 'b::B::thing()': u32\n+    305..306 'z': C\n+    309..320 'c::C::thing': fn thing() -> C\n+    309..322 'c::C::thing()': C\n     \"###\n     );\n }\n@@ -169,15 +169,15 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [64; 67) 'val': T\n-    [82; 109) '{     ...     }': Gen<T>\n-    [92; 103) 'Gen { val }': Gen<T>\n-    [98; 101) 'val': T\n-    [123; 155) '{     ...32); }': ()\n-    [133; 134) 'a': Gen<u32>\n-    [137; 146) 'Gen::make': fn make<u32>(u32) -> Gen<u32>\n-    [137; 152) 'Gen::make(0u32)': Gen<u32>\n-    [147; 151) '0u32': u32\n+    64..67 'val': T\n+    82..109 '{     ...     }': Gen<T>\n+    92..103 'Gen { val }': Gen<T>\n+    98..101 'val': T\n+    123..155 '{     ...32); }': ()\n+    133..134 'a': Gen<u32>\n+    137..146 'Gen::make': fn make<u32>(u32) -> Gen<u32>\n+    137..152 'Gen::make(0u32)': Gen<u32>\n+    147..151 '0u32': u32\n     \"###\n     );\n }\n@@ -201,13 +201,13 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [80; 104) '{     ...     }': Gen<T>\n-    [90; 98) 'loop { }': !\n-    [95; 98) '{ }': ()\n-    [118; 146) '{     ...e(); }': ()\n-    [128; 129) 'a': Gen<u32>\n-    [132; 141) 'Gen::make': fn make<u32>() -> Gen<u32>\n-    [132; 143) 'Gen::make()': Gen<u32>\n+    80..104 '{     ...     }': Gen<T>\n+    90..98 'loop { }': !\n+    95..98 '{ }': ()\n+    118..146 '{     ...e(); }': ()\n+    128..129 'a': Gen<u32>\n+    132..141 'Gen::make': fn make<u32>() -> Gen<u32>\n+    132..143 'Gen::make()': Gen<u32>\n     \"###\n     );\n }\n@@ -255,13 +255,13 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [76; 100) '{     ...     }': Gen<T>\n-    [86; 94) 'loop { }': !\n-    [91; 94) '{ }': ()\n-    [114; 149) '{     ...e(); }': ()\n-    [124; 125) 'a': Gen<u32>\n-    [128; 144) 'Gen::<...::make': fn make<u32>() -> Gen<u32>\n-    [128; 146) 'Gen::<...make()': Gen<u32>\n+    76..100 '{     ...     }': Gen<T>\n+    86..94 'loop { }': !\n+    91..94 '{ }': ()\n+    114..149 '{     ...e(); }': ()\n+    124..125 'a': Gen<u32>\n+    128..144 'Gen::<...::make': fn make<u32>() -> Gen<u32>\n+    128..146 'Gen::<...make()': Gen<u32>\n     \"###\n     );\n }\n@@ -286,13 +286,13 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [102; 126) '{     ...     }': Gen<u32, T>\n-    [112; 120) 'loop { }': !\n-    [117; 120) '{ }': ()\n-    [140; 180) '{     ...e(); }': ()\n-    [150; 151) 'a': Gen<u32, u64>\n-    [154; 175) 'Gen::<...::make': fn make<u64>() -> Gen<u32, u64>\n-    [154; 177) 'Gen::<...make()': Gen<u32, u64>\n+    102..126 '{     ...     }': Gen<u32, T>\n+    112..120 'loop { }': !\n+    117..120 '{ }': ()\n+    140..180 '{     ...e(); }': ()\n+    150..151 'a': Gen<u32, u64>\n+    154..175 'Gen::<...::make': fn make<u64>() -> Gen<u32, u64>\n+    154..177 'Gen::<...make()': Gen<u32, u64>\n     \"###\n     );\n }\n@@ -340,13 +340,13 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [31; 35) 'self': &Self\n-    [110; 114) 'self': &Self\n-    [170; 228) '{     ...i128 }': ()\n-    [176; 178) 'S1': S1\n-    [176; 187) 'S1.method()': u32\n-    [203; 205) 'S2': S2\n-    [203; 214) 'S2.method()': i128\n+    31..35 'self': &Self\n+    110..114 'self': &Self\n+    170..228 '{     ...i128 }': ()\n+    176..178 'S1': S1\n+    176..187 'S1.method()': u32\n+    203..205 'S2': S2\n+    203..214 'S2.method()': i128\n     \"###\n     );\n }\n@@ -387,14 +387,14 @@ mod bar_test {\n }\n \"#),\n         @r###\"\n-    [63; 67) 'self': &Self\n-    [169; 173) 'self': &Self\n-    [300; 337) '{     ...     }': ()\n-    [310; 311) 'S': S\n-    [310; 320) 'S.method()': u32\n-    [416; 454) '{     ...     }': ()\n-    [426; 427) 'S': S\n-    [426; 436) 'S.method()': i128\n+    63..67 'self': &Self\n+    169..173 'self': &Self\n+    300..337 '{     ...     }': ()\n+    310..311 'S': S\n+    310..320 'S.method()': u32\n+    416..454 '{     ...     }': ()\n+    426..427 'S': S\n+    426..436 'S.method()': i128\n     \"###\n     );\n }\n@@ -414,10 +414,10 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [33; 37) 'self': &Self\n-    [92; 111) '{     ...d(); }': ()\n-    [98; 99) 'S': S\n-    [98; 108) 'S.method()': u32\n+    33..37 'self': &Self\n+    92..111 '{     ...d(); }': ()\n+    98..99 'S': S\n+    98..108 'S.method()': u32\n     \"###\n     );\n }\n@@ -443,17 +443,17 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [43; 47) 'self': &Self\n-    [82; 86) 'self': &Self\n-    [210; 361) '{     ..., i8 }': ()\n-    [216; 218) 'S1': S1\n-    [216; 228) 'S1.method1()': (u8, u16, u32)\n-    [250; 252) 'S1': S1\n-    [250; 262) 'S1.method2()': (u32, u16, u8)\n-    [284; 286) 'S2': S2\n-    [284; 296) 'S2.method1()': (i8, i16, {unknown})\n-    [324; 326) 'S2': S2\n-    [324; 336) 'S2.method2()': ({unknown}, i16, i8)\n+    43..47 'self': &Self\n+    82..86 'self': &Self\n+    210..361 '{     ..., i8 }': ()\n+    216..218 'S1': S1\n+    216..228 'S1.method1()': (u8, u16, u32)\n+    250..252 'S1': S1\n+    250..262 'S1.method2()': (u32, u16, u8)\n+    284..286 'S2': S2\n+    284..296 'S2.method1()': (i8, i16, {unknown})\n+    324..326 'S2': S2\n+    324..336 'S2.method2()': ({unknown}, i16, i8)\n     \"###\n     );\n }\n@@ -473,12 +473,12 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [33; 37) 'self': &Self\n-    [102; 127) '{     ...d(); }': ()\n-    [108; 109) 'S': S<u32>(u32) -> S<u32>\n-    [108; 115) 'S(1u32)': S<u32>\n-    [108; 124) 'S(1u32...thod()': u32\n-    [110; 114) '1u32': u32\n+    33..37 'self': &Self\n+    102..127 '{     ...d(); }': ()\n+    108..109 'S': S<u32>(u32) -> S<u32>\n+    108..115 'S(1u32)': S<u32>\n+    108..124 'S(1u32...thod()': u32\n+    110..114 '1u32': u32\n     \"###\n     );\n }\n@@ -499,16 +499,16 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [87; 193) '{     ...t(); }': ()\n-    [97; 99) 's1': S\n-    [105; 121) 'Defaul...efault': fn default<S>() -> S\n-    [105; 123) 'Defaul...ault()': S\n-    [133; 135) 's2': S\n-    [138; 148) 'S::default': fn default<S>() -> S\n-    [138; 150) 'S::default()': S\n-    [160; 162) 's3': S\n-    [165; 188) '<S as ...efault': fn default<S>() -> S\n-    [165; 190) '<S as ...ault()': S\n+    87..193 '{     ...t(); }': ()\n+    97..99 's1': S\n+    105..121 'Defaul...efault': fn default<S>() -> S\n+    105..123 'Defaul...ault()': S\n+    133..135 's2': S\n+    138..148 'S::default': fn default<S>() -> S\n+    138..150 'S::default()': S\n+    160..162 's3': S\n+    165..188 '<S as ...efault': fn default<S>() -> S\n+    165..190 '<S as ...ault()': S\n     \"###\n     );\n }\n@@ -531,16 +531,16 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [127; 211) '{     ...e(); }': ()\n-    [137; 138) 'a': u32\n-    [141; 148) 'S::make': fn make<S, u32>() -> u32\n-    [141; 150) 'S::make()': u32\n-    [160; 161) 'b': u64\n-    [164; 178) 'G::<u64>::make': fn make<G<u64>, u64>() -> u64\n-    [164; 180) 'G::<u6...make()': u64\n-    [190; 191) 'c': f64\n-    [199; 206) 'G::make': fn make<G<f64>, f64>() -> f64\n-    [199; 208) 'G::make()': f64\n+    127..211 '{     ...e(); }': ()\n+    137..138 'a': u32\n+    141..148 'S::make': fn make<S, u32>() -> u32\n+    141..150 'S::make()': u32\n+    160..161 'b': u64\n+    164..178 'G::<u64>::make': fn make<G<u64>, u64>() -> u64\n+    164..180 'G::<u6...make()': u64\n+    190..191 'c': f64\n+    199..206 'G::make': fn make<G<f64>, f64>() -> f64\n+    199..208 'G::make()': f64\n     \"###\n     );\n }\n@@ -565,22 +565,22 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [135; 313) '{     ...e(); }': ()\n-    [145; 146) 'a': (u32, i64)\n-    [149; 163) 'S::make::<i64>': fn make<S, u32, i64>() -> (u32, i64)\n-    [149; 165) 'S::mak...i64>()': (u32, i64)\n-    [175; 176) 'b': (u32, i64)\n-    [189; 196) 'S::make': fn make<S, u32, i64>() -> (u32, i64)\n-    [189; 198) 'S::make()': (u32, i64)\n-    [208; 209) 'c': (u32, i64)\n-    [212; 233) 'G::<u3...:<i64>': fn make<G<u32>, u32, i64>() -> (u32, i64)\n-    [212; 235) 'G::<u3...i64>()': (u32, i64)\n-    [245; 246) 'd': (u32, i64)\n-    [259; 273) 'G::make::<i64>': fn make<G<u32>, u32, i64>() -> (u32, i64)\n-    [259; 275) 'G::mak...i64>()': (u32, i64)\n-    [285; 286) 'e': (u32, i64)\n-    [301; 308) 'G::make': fn make<G<u32>, u32, i64>() -> (u32, i64)\n-    [301; 310) 'G::make()': (u32, i64)\n+    135..313 '{     ...e(); }': ()\n+    145..146 'a': (u32, i64)\n+    149..163 'S::make::<i64>': fn make<S, u32, i64>() -> (u32, i64)\n+    149..165 'S::mak...i64>()': (u32, i64)\n+    175..176 'b': (u32, i64)\n+    189..196 'S::make': fn make<S, u32, i64>() -> (u32, i64)\n+    189..198 'S::make()': (u32, i64)\n+    208..209 'c': (u32, i64)\n+    212..233 'G::<u3...:<i64>': fn make<G<u32>, u32, i64>() -> (u32, i64)\n+    212..235 'G::<u3...i64>()': (u32, i64)\n+    245..246 'd': (u32, i64)\n+    259..273 'G::make::<i64>': fn make<G<u32>, u32, i64>() -> (u32, i64)\n+    259..275 'G::mak...i64>()': (u32, i64)\n+    285..286 'e': (u32, i64)\n+    301..308 'G::make': fn make<G<u32>, u32, i64>() -> (u32, i64)\n+    301..310 'G::make()': (u32, i64)\n     \"###\n     );\n }\n@@ -599,10 +599,10 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [101; 127) '{     ...e(); }': ()\n-    [111; 112) 'a': (S<i32>, i64)\n-    [115; 122) 'S::make': fn make<S<i32>, i64>() -> (S<i32>, i64)\n-    [115; 124) 'S::make()': (S<i32>, i64)\n+    101..127 '{     ...e(); }': ()\n+    111..112 'a': (S<i32>, i64)\n+    115..122 'S::make': fn make<S<i32>, i64>() -> (S<i32>, i64)\n+    115..124 'S::make()': (S<i32>, i64)\n     \"###\n     );\n }\n@@ -623,13 +623,13 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [131; 203) '{     ...e(); }': ()\n-    [141; 142) 'a': (S<u64>, i64)\n-    [158; 165) 'S::make': fn make<S<u64>, i64>() -> (S<u64>, i64)\n-    [158; 167) 'S::make()': (S<u64>, i64)\n-    [177; 178) 'b': (S<u32>, i32)\n-    [191; 198) 'S::make': fn make<S<u32>, i32>() -> (S<u32>, i32)\n-    [191; 200) 'S::make()': (S<u32>, i32)\n+    131..203 '{     ...e(); }': ()\n+    141..142 'a': (S<u64>, i64)\n+    158..165 'S::make': fn make<S<u64>, i64>() -> (S<u64>, i64)\n+    158..167 'S::make()': (S<u64>, i64)\n+    177..178 'b': (S<u32>, i32)\n+    191..198 'S::make': fn make<S<u32>, i32>() -> (S<u32>, i32)\n+    191..200 'S::make()': (S<u32>, i32)\n     \"###\n     );\n }\n@@ -649,13 +649,13 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [107; 211) '{     ...>(); }': ()\n-    [117; 118) 'a': (S<u64>, i64, u8)\n-    [121; 150) '<S as ...::<u8>': fn make<S<u64>, i64, u8>() -> (S<u64>, i64, u8)\n-    [121; 152) '<S as ...<u8>()': (S<u64>, i64, u8)\n-    [162; 163) 'b': (S<u64>, i64, u8)\n-    [182; 206) 'Trait:...::<u8>': fn make<S<u64>, i64, u8>() -> (S<u64>, i64, u8)\n-    [182; 208) 'Trait:...<u8>()': (S<u64>, i64, u8)\n+    107..211 '{     ...>(); }': ()\n+    117..118 'a': (S<u64>, i64, u8)\n+    121..150 '<S as ...::<u8>': fn make<S<u64>, i64, u8>() -> (S<u64>, i64, u8)\n+    121..152 '<S as ...<u8>()': (S<u64>, i64, u8)\n+    162..163 'b': (S<u64>, i64, u8)\n+    182..206 'Trait:...::<u8>': fn make<S<u64>, i64, u8>() -> (S<u64>, i64, u8)\n+    182..208 'Trait:...<u8>()': (S<u64>, i64, u8)\n     \"###\n     );\n }\n@@ -672,11 +672,11 @@ fn test<T: Trait>(t: T) {\n }\n \"#),\n         @r###\"\n-    [30; 34) 'self': &Self\n-    [64; 65) 't': T\n-    [70; 89) '{     ...d(); }': ()\n-    [76; 77) 't': T\n-    [76; 86) 't.method()': u32\n+    30..34 'self': &Self\n+    64..65 't': T\n+    70..89 '{     ...d(); }': ()\n+    76..77 't': T\n+    76..86 't.method()': u32\n     \"###\n     );\n }\n@@ -693,11 +693,11 @@ fn test<U, T: Trait<U>>(t: T) {\n }\n \"#),\n         @r###\"\n-    [33; 37) 'self': &Self\n-    [71; 72) 't': T\n-    [77; 96) '{     ...d(); }': ()\n-    [83; 84) 't': T\n-    [83; 93) 't.method()': U\n+    33..37 'self': &Self\n+    71..72 't': T\n+    77..96 '{     ...d(); }': ()\n+    83..84 't': T\n+    83..93 't.method()': U\n     \"###\n     );\n }\n@@ -719,18 +719,18 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [29; 33) 'self': Self\n-    [111; 202) '{     ...(S); }': ()\n-    [121; 122) 'x': u32\n-    [130; 131) 'S': S\n-    [130; 138) 'S.into()': u32\n-    [148; 149) 'y': u64\n-    [157; 158) 'S': S\n-    [157; 165) 'S.into()': u64\n-    [175; 176) 'z': u64\n-    [179; 196) 'Into::...::into': fn into<S, u64>(S) -> u64\n-    [179; 199) 'Into::...nto(S)': u64\n-    [197; 198) 'S': S\n+    29..33 'self': Self\n+    111..202 '{     ...(S); }': ()\n+    121..122 'x': u32\n+    130..131 'S': S\n+    130..138 'S.into()': u32\n+    148..149 'y': u64\n+    157..158 'S': S\n+    157..165 'S.into()': u64\n+    175..176 'z': u64\n+    179..196 'Into::...::into': fn into<S, u64>(S) -> u64\n+    179..199 'Into::...nto(S)': u64\n+    197..198 'S': S\n     \"###\n     );\n }"}, {"sha": "af291092d30c9cfe62298117080697b38f505bd1", "filename": "crates/ra_hir_ty/src/tests/patterns.rs", "status": "modified", "additions": 240, "deletions": 240, "changes": 480, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fpatterns.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -30,54 +30,54 @@ fn test(x: &i32) {\n }\n \"#),\n         @r###\"\n-    [9; 10) 'x': &i32\n-    [18; 369) '{     ...o_x; }': ()\n-    [28; 29) 'y': &i32\n-    [32; 33) 'x': &i32\n-    [43; 45) '&z': &i32\n-    [44; 45) 'z': i32\n-    [48; 49) 'x': &i32\n-    [59; 60) 'a': i32\n-    [63; 64) 'z': i32\n-    [74; 80) '(c, d)': (i32, &str)\n-    [75; 76) 'c': i32\n-    [78; 79) 'd': &str\n-    [83; 95) '(1, \"hello\")': (i32, &str)\n-    [84; 85) '1': i32\n-    [87; 94) '\"hello\"': &str\n-    [102; 152) 'for (e...     }': ()\n-    [106; 112) '(e, f)': ({unknown}, {unknown})\n-    [107; 108) 'e': {unknown}\n-    [110; 111) 'f': {unknown}\n-    [116; 125) 'some_iter': {unknown}\n-    [126; 152) '{     ...     }': ()\n-    [140; 141) 'g': {unknown}\n-    [144; 145) 'e': {unknown}\n-    [158; 205) 'if let...     }': ()\n-    [165; 170) '[val]': [{unknown}]\n-    [166; 169) 'val': {unknown}\n-    [173; 176) 'opt': [{unknown}]\n-    [177; 205) '{     ...     }': ()\n-    [191; 192) 'h': {unknown}\n-    [195; 198) 'val': {unknown}\n-    [215; 221) 'lambda': |u64, u64, i32| -> i32\n-    [224; 256) '|a: u6...b; c }': |u64, u64, i32| -> i32\n-    [225; 226) 'a': u64\n-    [233; 234) 'b': u64\n-    [236; 237) 'c': i32\n-    [244; 256) '{ a + b; c }': i32\n-    [246; 247) 'a': u64\n-    [246; 251) 'a + b': u64\n-    [250; 251) 'b': u64\n-    [253; 254) 'c': i32\n-    [267; 279) 'ref ref_to_x': &&i32\n-    [282; 283) 'x': &i32\n-    [293; 302) 'mut mut_x': &i32\n-    [305; 306) 'x': &i32\n-    [316; 336) 'ref mu...f_to_x': &mut &i32\n-    [339; 340) 'x': &i32\n-    [350; 351) 'k': &mut &i32\n-    [354; 366) 'mut_ref_to_x': &mut &i32\n+    9..10 'x': &i32\n+    18..369 '{     ...o_x; }': ()\n+    28..29 'y': &i32\n+    32..33 'x': &i32\n+    43..45 '&z': &i32\n+    44..45 'z': i32\n+    48..49 'x': &i32\n+    59..60 'a': i32\n+    63..64 'z': i32\n+    74..80 '(c, d)': (i32, &str)\n+    75..76 'c': i32\n+    78..79 'd': &str\n+    83..95 '(1, \"hello\")': (i32, &str)\n+    84..85 '1': i32\n+    87..94 '\"hello\"': &str\n+    102..152 'for (e...     }': ()\n+    106..112 '(e, f)': ({unknown}, {unknown})\n+    107..108 'e': {unknown}\n+    110..111 'f': {unknown}\n+    116..125 'some_iter': {unknown}\n+    126..152 '{     ...     }': ()\n+    140..141 'g': {unknown}\n+    144..145 'e': {unknown}\n+    158..205 'if let...     }': ()\n+    165..170 '[val]': [{unknown}]\n+    166..169 'val': {unknown}\n+    173..176 'opt': [{unknown}]\n+    177..205 '{     ...     }': ()\n+    191..192 'h': {unknown}\n+    195..198 'val': {unknown}\n+    215..221 'lambda': |u64, u64, i32| -> i32\n+    224..256 '|a: u6...b; c }': |u64, u64, i32| -> i32\n+    225..226 'a': u64\n+    233..234 'b': u64\n+    236..237 'c': i32\n+    244..256 '{ a + b; c }': i32\n+    246..247 'a': u64\n+    246..251 'a + b': u64\n+    250..251 'b': u64\n+    253..254 'c': i32\n+    267..279 'ref ref_to_x': &&i32\n+    282..283 'x': &i32\n+    293..302 'mut mut_x': &i32\n+    305..306 'x': &i32\n+    316..336 'ref mu...f_to_x': &mut &i32\n+    339..340 'x': &i32\n+    350..351 'k': &mut &i32\n+    354..366 'mut_ref_to_x': &mut &i32\n     \"###\n     );\n }\n@@ -97,47 +97,47 @@ fn test(x: &i32) {\n }\n \"#, true),\n         @r###\"\n-    [18; 29) '{ loop {} }': T\n-    [20; 27) 'loop {}': !\n-    [25; 27) '{}': ()\n-    [38; 39) 'x': &i32\n-    [47; 209) '{     ...) {} }': ()\n-    [53; 76) 'if let...y() {}': ()\n-    [60; 65) '\"foo\"': &str\n-    [60; 65) '\"foo\"': &str\n-    [68; 71) 'any': fn any<&str>() -> &str\n-    [68; 73) 'any()': &str\n-    [74; 76) '{}': ()\n-    [81; 100) 'if let...y() {}': ()\n-    [88; 89) '1': i32\n-    [88; 89) '1': i32\n-    [92; 95) 'any': fn any<i32>() -> i32\n-    [92; 97) 'any()': i32\n-    [98; 100) '{}': ()\n-    [105; 127) 'if let...y() {}': ()\n-    [112; 116) '1u32': u32\n-    [112; 116) '1u32': u32\n-    [119; 122) 'any': fn any<u32>() -> u32\n-    [119; 124) 'any()': u32\n-    [125; 127) '{}': ()\n-    [132; 154) 'if let...y() {}': ()\n-    [139; 143) '1f32': f32\n-    [139; 143) '1f32': f32\n-    [146; 149) 'any': fn any<f32>() -> f32\n-    [146; 151) 'any()': f32\n-    [152; 154) '{}': ()\n-    [159; 180) 'if let...y() {}': ()\n-    [166; 169) '1.0': f64\n-    [166; 169) '1.0': f64\n-    [172; 175) 'any': fn any<f64>() -> f64\n-    [172; 177) 'any()': f64\n-    [178; 180) '{}': ()\n-    [185; 207) 'if let...y() {}': ()\n-    [192; 196) 'true': bool\n-    [192; 196) 'true': bool\n-    [199; 202) 'any': fn any<bool>() -> bool\n-    [199; 204) 'any()': bool\n-    [205; 207) '{}': ()\n+    18..29 '{ loop {} }': T\n+    20..27 'loop {}': !\n+    25..27 '{}': ()\n+    38..39 'x': &i32\n+    47..209 '{     ...) {} }': ()\n+    53..76 'if let...y() {}': ()\n+    60..65 '\"foo\"': &str\n+    60..65 '\"foo\"': &str\n+    68..71 'any': fn any<&str>() -> &str\n+    68..73 'any()': &str\n+    74..76 '{}': ()\n+    81..100 'if let...y() {}': ()\n+    88..89 '1': i32\n+    88..89 '1': i32\n+    92..95 'any': fn any<i32>() -> i32\n+    92..97 'any()': i32\n+    98..100 '{}': ()\n+    105..127 'if let...y() {}': ()\n+    112..116 '1u32': u32\n+    112..116 '1u32': u32\n+    119..122 'any': fn any<u32>() -> u32\n+    119..124 'any()': u32\n+    125..127 '{}': ()\n+    132..154 'if let...y() {}': ()\n+    139..143 '1f32': f32\n+    139..143 '1f32': f32\n+    146..149 'any': fn any<f32>() -> f32\n+    146..151 'any()': f32\n+    152..154 '{}': ()\n+    159..180 'if let...y() {}': ()\n+    166..169 '1.0': f64\n+    166..169 '1.0': f64\n+    172..175 'any': fn any<f64>() -> f64\n+    172..177 'any()': f64\n+    178..180 '{}': ()\n+    185..207 'if let...y() {}': ()\n+    192..196 'true': bool\n+    192..196 'true': bool\n+    199..202 'any': fn any<bool>() -> bool\n+    199..204 'any()': bool\n+    205..207 '{}': ()\n     \"###\n     );\n }\n@@ -152,16 +152,16 @@ fn test(x: &i32) {\n }\n \"#, true),\n         @r###\"\n-    [9; 10) 'x': &i32\n-    [18; 76) '{     ...2 {} }': ()\n-    [24; 46) 'if let...u32 {}': ()\n-    [31; 36) '1..76': u32\n-    [39; 43) '2u32': u32\n-    [44; 46) '{}': ()\n-    [51; 74) 'if let...u32 {}': ()\n-    [58; 64) '1..=76': u32\n-    [67; 71) '2u32': u32\n-    [72; 74) '{}': ()\n+    9..10 'x': &i32\n+    18..76 '{     ...2 {} }': ()\n+    24..46 'if let...u32 {}': ()\n+    31..36 '1..76': u32\n+    39..43 '2u32': u32\n+    44..46 '{}': ()\n+    51..74 'if let...u32 {}': ()\n+    58..64 '1..=76': u32\n+    67..71 '2u32': u32\n+    72..74 '{}': ()\n     \"###\n     );\n }\n@@ -178,19 +178,19 @@ fn test() {\n }\n \"#),\n     @r###\"\n-    [28; 79) '{     ...(1); }': ()\n-    [38; 42) 'A(n)': A<i32>\n-    [40; 41) 'n': &i32\n-    [45; 50) '&A(1)': &A<i32>\n-    [46; 47) 'A': A<i32>(i32) -> A<i32>\n-    [46; 50) 'A(1)': A<i32>\n-    [48; 49) '1': i32\n-    [60; 64) 'A(n)': A<i32>\n-    [62; 63) 'n': &mut i32\n-    [67; 76) '&mut A(1)': &mut A<i32>\n-    [72; 73) 'A': A<i32>(i32) -> A<i32>\n-    [72; 76) 'A(1)': A<i32>\n-    [74; 75) '1': i32\n+    28..79 '{     ...(1); }': ()\n+    38..42 'A(n)': A<i32>\n+    40..41 'n': &i32\n+    45..50 '&A(1)': &A<i32>\n+    46..47 'A': A<i32>(i32) -> A<i32>\n+    46..50 'A(1)': A<i32>\n+    48..49 '1': i32\n+    60..64 'A(n)': A<i32>\n+    62..63 'n': &mut i32\n+    67..76 '&mut A(1)': &mut A<i32>\n+    72..73 'A': A<i32>(i32) -> A<i32>\n+    72..76 'A(1)': A<i32>\n+    74..75 '1': i32\n     \"###\n     );\n }\n@@ -206,18 +206,18 @@ fn test() {\n }\n \"#),\n     @r###\"\n-    [11; 57) '{     ...= v; }': ()\n-    [21; 22) 'v': &(i32, &i32)\n-    [25; 33) '&(1, &2)': &(i32, &i32)\n-    [26; 33) '(1, &2)': (i32, &i32)\n-    [27; 28) '1': i32\n-    [30; 32) '&2': &i32\n-    [31; 32) '2': i32\n-    [43; 50) '(_, &w)': (i32, &i32)\n-    [44; 45) '_': i32\n-    [47; 49) '&w': &i32\n-    [48; 49) 'w': i32\n-    [53; 54) 'v': &(i32, &i32)\n+    11..57 '{     ...= v; }': ()\n+    21..22 'v': &(i32, &i32)\n+    25..33 '&(1, &2)': &(i32, &i32)\n+    26..33 '(1, &2)': (i32, &i32)\n+    27..28 '1': i32\n+    30..32 '&2': &i32\n+    31..32 '2': i32\n+    43..50 '(_, &w)': (i32, &i32)\n+    44..45 '_': i32\n+    47..49 '&w': &i32\n+    48..49 'w': i32\n+    53..54 'v': &(i32, &i32)\n     \"###\n     );\n }\n@@ -242,30 +242,30 @@ fn test() {\n }\n \"#),\n     @r###\"\n-    [11; 210) '{     ...   } }': ()\n-    [21; 26) 'slice': &[f64]\n-    [37; 43) '&[0.0]': &[f64; _]\n-    [38; 43) '[0.0]': [f64; _]\n-    [39; 42) '0.0': f64\n-    [49; 208) 'match ...     }': ()\n-    [55; 60) 'slice': &[f64]\n-    [71; 74) '&[]': &[f64]\n-    [72; 74) '[]': [f64]\n-    [78; 80) '{}': ()\n-    [90; 94) '&[a]': &[f64]\n-    [91; 94) '[a]': [f64]\n-    [92; 93) 'a': f64\n-    [98; 124) '{     ...     }': ()\n-    [112; 113) 'a': f64\n-    [134; 141) '&[b, c]': &[f64]\n-    [135; 141) '[b, c]': [f64]\n-    [136; 137) 'b': f64\n-    [139; 140) 'c': f64\n-    [145; 186) '{     ...     }': ()\n-    [159; 160) 'b': f64\n-    [174; 175) 'c': f64\n-    [195; 196) '_': &[f64]\n-    [200; 202) '{}': ()\n+    11..210 '{     ...   } }': ()\n+    21..26 'slice': &[f64]\n+    37..43 '&[0.0]': &[f64; _]\n+    38..43 '[0.0]': [f64; _]\n+    39..42 '0.0': f64\n+    49..208 'match ...     }': ()\n+    55..60 'slice': &[f64]\n+    71..74 '&[]': &[f64]\n+    72..74 '[]': [f64]\n+    78..80 '{}': ()\n+    90..94 '&[a]': &[f64]\n+    91..94 '[a]': [f64]\n+    92..93 'a': f64\n+    98..124 '{     ...     }': ()\n+    112..113 'a': f64\n+    134..141 '&[b, c]': &[f64]\n+    135..141 '[b, c]': [f64]\n+    136..137 'b': f64\n+    139..140 'c': f64\n+    145..186 '{     ...     }': ()\n+    159..160 'b': f64\n+    174..175 'c': f64\n+    195..196 '_': &[f64]\n+    200..202 '{}': ()\n     \"###\n     );\n }\n@@ -288,25 +288,25 @@ fn test() {\n }\n \"#),\n     @r###\"\n-    [11; 180) '{     ...   } }': ()\n-    [21; 24) 'arr': [f64; _]\n-    [37; 47) '[0.0, 1.0]': [f64; _]\n-    [38; 41) '0.0': f64\n-    [43; 46) '1.0': f64\n-    [53; 178) 'match ...     }': ()\n-    [59; 62) 'arr': [f64; _]\n-    [73; 81) '[1.0, a]': [f64; _]\n-    [74; 77) '1.0': f64\n-    [74; 77) '1.0': f64\n-    [79; 80) 'a': f64\n-    [85; 111) '{     ...     }': ()\n-    [99; 100) 'a': f64\n-    [121; 127) '[b, c]': [f64; _]\n-    [122; 123) 'b': f64\n-    [125; 126) 'c': f64\n-    [131; 172) '{     ...     }': ()\n-    [145; 146) 'b': f64\n-    [160; 161) 'c': f64\n+    11..180 '{     ...   } }': ()\n+    21..24 'arr': [f64; _]\n+    37..47 '[0.0, 1.0]': [f64; _]\n+    38..41 '0.0': f64\n+    43..46 '1.0': f64\n+    53..178 'match ...     }': ()\n+    59..62 'arr': [f64; _]\n+    73..81 '[1.0, a]': [f64; _]\n+    74..77 '1.0': f64\n+    74..77 '1.0': f64\n+    79..80 'a': f64\n+    85..111 '{     ...     }': ()\n+    99..100 'a': f64\n+    121..127 '[b, c]': [f64; _]\n+    122..123 'b': f64\n+    125..126 'c': f64\n+    131..172 '{     ...     }': ()\n+    145..146 'b': f64\n+    160..161 'c': f64\n     \"###\n     );\n }\n@@ -339,31 +339,31 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [68; 289) '{     ...  d; }': ()\n-    [78; 79) 'e': E\n-    [82; 95) 'E::A { x: 3 }': E\n-    [92; 93) '3': usize\n-    [106; 113) 'S(y, z)': S\n-    [108; 109) 'y': u32\n-    [111; 112) 'z': E\n-    [116; 119) 'foo': S\n-    [129; 148) 'E::A {..._var }': E\n-    [139; 146) 'new_var': usize\n-    [151; 152) 'e': E\n-    [159; 245) 'match ...     }': usize\n-    [165; 166) 'e': E\n-    [177; 187) 'E::A { x }': E\n-    [184; 185) 'x': usize\n-    [191; 192) 'x': usize\n-    [202; 206) 'E::B': E\n-    [210; 213) 'foo': bool\n-    [217; 218) '1': usize\n-    [228; 232) 'E::B': E\n-    [236; 238) '10': usize\n-    [256; 275) 'ref d ...{ .. }': &E\n-    [264; 275) 'E::A { .. }': E\n-    [278; 279) 'e': E\n-    [285; 286) 'd': &E\n+    68..289 '{     ...  d; }': ()\n+    78..79 'e': E\n+    82..95 'E::A { x: 3 }': E\n+    92..93 '3': usize\n+    106..113 'S(y, z)': S\n+    108..109 'y': u32\n+    111..112 'z': E\n+    116..119 'foo': S\n+    129..148 'E::A {..._var }': E\n+    139..146 'new_var': usize\n+    151..152 'e': E\n+    159..245 'match ...     }': usize\n+    165..166 'e': E\n+    177..187 'E::A { x }': E\n+    184..185 'x': usize\n+    191..192 'x': usize\n+    202..206 'E::B': E\n+    210..213 'foo': bool\n+    217..218 '1': usize\n+    228..232 'E::B': E\n+    236..238 '10': usize\n+    256..275 'ref d ...{ .. }': &E\n+    264..275 'E::A { .. }': E\n+    278..279 'e': E\n+    285..286 'd': &E\n     \"###\n     );\n }\n@@ -391,23 +391,23 @@ fn test(a1: A<u32>, o: Option<u64>) {\n }\n \"#),\n         @r###\"\n-    [79; 81) 'a1': A<u32>\n-    [91; 92) 'o': Option<u64>\n-    [107; 244) '{     ...  }; }': ()\n-    [117; 128) 'A { x: x2 }': A<u32>\n-    [124; 126) 'x2': u32\n-    [131; 133) 'a1': A<u32>\n-    [143; 161) 'A::<i6...: x3 }': A<i64>\n-    [157; 159) 'x3': i64\n-    [164; 174) 'A { x: 1 }': A<i64>\n-    [171; 172) '1': i64\n-    [180; 241) 'match ...     }': u64\n-    [186; 187) 'o': Option<u64>\n-    [198; 213) 'Option::Some(t)': Option<u64>\n-    [211; 212) 't': u64\n-    [217; 218) 't': u64\n-    [228; 229) '_': Option<u64>\n-    [233; 234) '1': u64\n+    79..81 'a1': A<u32>\n+    91..92 'o': Option<u64>\n+    107..244 '{     ...  }; }': ()\n+    117..128 'A { x: x2 }': A<u32>\n+    124..126 'x2': u32\n+    131..133 'a1': A<u32>\n+    143..161 'A::<i6...: x3 }': A<i64>\n+    157..159 'x3': i64\n+    164..174 'A { x: 1 }': A<i64>\n+    171..172 '1': i64\n+    180..241 'match ...     }': u64\n+    186..187 'o': Option<u64>\n+    198..213 'Option::Some(t)': Option<u64>\n+    211..212 't': u64\n+    217..218 't': u64\n+    228..229 '_': Option<u64>\n+    233..234 '1': u64\n     \"###\n     );\n }\n@@ -431,27 +431,27 @@ fn test() {\n }\n \"#, true),\n         @r###\"\n-    [74; 75) '1': usize\n-    [88; 310) '{     ...atch }': ()\n-    [98; 99) 'a': Option<u32>\n-    [115; 119) 'None': Option<u32>\n-    [129; 130) 'b': Option<i64>\n-    [146; 183) 'match ...     }': Option<i64>\n-    [152; 153) 'a': Option<u32>\n-    [164; 168) 'None': Option<u32>\n-    [172; 176) 'None': Option<i64>\n-    [193; 194) '_': ()\n-    [201; 224) 'match ... Foo }': Foo\n-    [207; 209) '()': ()\n-    [212; 215) 'Foo': Foo\n-    [219; 222) 'Foo': Foo\n-    [255; 256) '_': ()\n-    [263; 286) 'match ... Bar }': usize\n-    [269; 271) '()': ()\n-    [274; 277) 'Bar': usize\n-    [281; 284) 'Bar': usize\n-    [201; 224): expected (), got Foo\n-    [263; 286): expected (), got usize\n+    74..75 '1': usize\n+    88..310 '{     ...atch }': ()\n+    98..99 'a': Option<u32>\n+    115..119 'None': Option<u32>\n+    129..130 'b': Option<i64>\n+    146..183 'match ...     }': Option<i64>\n+    152..153 'a': Option<u32>\n+    164..168 'None': Option<u32>\n+    172..176 'None': Option<i64>\n+    193..194 '_': ()\n+    201..224 'match ... Foo }': Foo\n+    207..209 '()': ()\n+    212..215 'Foo': Foo\n+    219..222 'Foo': Foo\n+    255..256 '_': ()\n+    263..286 'match ... Bar }': usize\n+    269..271 '()': ()\n+    274..277 'Bar': usize\n+    281..284 'Bar': usize\n+    201..224: expected (), got Foo\n+    263..286: expected (), got usize\n     \"###\n     );\n }\n@@ -469,15 +469,15 @@ fn main() {\n     }\n }\n     \"#), @\"\n-        [28; 32) 'self': &S\n-        [42; 51) '{ false }': bool\n-        [44; 49) 'false': bool\n-        [65; 116) '{     ...   } }': ()\n-        [71; 114) 'match ...     }': ()\n-        [77; 78) 'S': S\n-        [89; 90) 's': S\n-        [94; 95) 's': S\n-        [94; 101) 's.foo()': bool\n-        [105; 107) '()': ()\n+        28..32 'self': &S\n+        42..51 '{ false }': bool\n+        44..49 'false': bool\n+        65..116 '{     ...   } }': ()\n+        71..114 'match ...     }': ()\n+        77..78 'S': S\n+        89..90 's': S\n+        94..95 's': S\n+        94..101 's.foo()': bool\n+        105..107 '()': ()\n     \")\n }"}, {"sha": "8a1292c7aa0e26ff75dc1e36a4ea89acaa78193a", "filename": "crates/ra_hir_ty/src/tests/regression.rs", "status": "modified", "additions": 139, "deletions": 139, "changes": 278, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -14,11 +14,11 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [11; 37) '{    l... {}; }': ()\n-    [20; 21) 'x': ()\n-    [24; 34) 'if true {}': ()\n-    [27; 31) 'true': bool\n-    [32; 34) '{}': ()\n+    11..37 '{    l... {}; }': ()\n+    20..21 'x': ()\n+    24..34 'if true {}': ()\n+    27..31 'true': bool\n+    32..34 '{}': ()\n     \"###\n     );\n }\n@@ -34,10 +34,10 @@ fn test(x: X) {\n }\n \"#),\n         @r###\"\n-    [20; 21) 'x': X\n-    [26; 47) '{     ...eld; }': ()\n-    [32; 33) 'x': X\n-    [32; 44) 'x.some_field': {unknown}\n+    20..21 'x': X\n+    26..47 '{     ...eld; }': ()\n+    32..33 'x': X\n+    32..44 'x.some_field': {unknown}\n     \"###\n     );\n }\n@@ -55,14 +55,14 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [11; 89) '{     ...   } }': ()\n-    [17; 21) 'X {}': {unknown}\n-    [27; 87) 'match ...     }': ()\n-    [33; 34) 'x': {unknown}\n-    [45; 52) 'A::B {}': {unknown}\n-    [56; 58) '()': ()\n-    [68; 74) 'A::Y()': {unknown}\n-    [78; 80) '()': ()\n+    11..89 '{     ...   } }': ()\n+    17..21 'X {}': {unknown}\n+    27..87 'match ...     }': ()\n+    33..34 'x': {unknown}\n+    45..52 'A::B {}': {unknown}\n+    56..58 '()': ()\n+    68..74 'A::Y()': {unknown}\n+    78..80 '()': ()\n     \"###\n     );\n }\n@@ -77,12 +77,12 @@ fn quux() {\n }\n \"#),\n         @r###\"\n-    [11; 41) '{     ...+ y; }': ()\n-    [21; 22) 'y': i32\n-    [25; 27) '92': i32\n-    [33; 34) '1': i32\n-    [33; 38) '1 + y': i32\n-    [37; 38) 'y': i32\n+    11..41 '{     ...+ y; }': ()\n+    21..22 'y': i32\n+    25..27 '92': i32\n+    33..34 '1': i32\n+    33..38 '1 + y': i32\n+    37..38 'y': i32\n     \"###\n     );\n }\n@@ -99,13 +99,13 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [11; 48) '{     ...&y]; }': ()\n-    [21; 22) 'y': &{unknown}\n-    [25; 32) 'unknown': &{unknown}\n-    [38; 45) '[y, &y]': [&&{unknown}; _]\n-    [39; 40) 'y': &{unknown}\n-    [42; 44) '&y': &&{unknown}\n-    [43; 44) 'y': &{unknown}\n+    11..48 '{     ...&y]; }': ()\n+    21..22 'y': &{unknown}\n+    25..32 'unknown': &{unknown}\n+    38..45 '[y, &y]': [&&{unknown}; _]\n+    39..40 'y': &{unknown}\n+    42..44 '&y': &&{unknown}\n+    43..44 'y': &{unknown}\n     \"###\n     );\n }\n@@ -123,20 +123,20 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [11; 80) '{     ...x)]; }': ()\n-    [21; 22) 'x': &&{unknown}\n-    [25; 32) 'unknown': &&{unknown}\n-    [42; 43) 'y': &&{unknown}\n-    [46; 53) 'unknown': &&{unknown}\n-    [59; 77) '[(x, y..., &x)]': [(&&&{unknown}, &&&{unknown}); _]\n-    [60; 66) '(x, y)': (&&&{unknown}, &&&{unknown})\n-    [61; 62) 'x': &&{unknown}\n-    [64; 65) 'y': &&{unknown}\n-    [68; 76) '(&y, &x)': (&&&{unknown}, &&&{unknown})\n-    [69; 71) '&y': &&&{unknown}\n-    [70; 71) 'y': &&{unknown}\n-    [73; 75) '&x': &&&{unknown}\n-    [74; 75) 'x': &&{unknown}\n+    11..80 '{     ...x)]; }': ()\n+    21..22 'x': &&{unknown}\n+    25..32 'unknown': &&{unknown}\n+    42..43 'y': &&{unknown}\n+    46..53 'unknown': &&{unknown}\n+    59..77 '[(x, y..., &x)]': [(&&&{unknown}, &&&{unknown}); _]\n+    60..66 '(x, y)': (&&&{unknown}, &&&{unknown})\n+    61..62 'x': &&{unknown}\n+    64..65 'y': &&{unknown}\n+    68..76 '(&y, &x)': (&&&{unknown}, &&&{unknown})\n+    69..71 '&y': &&&{unknown}\n+    70..71 'y': &&{unknown}\n+    73..75 '&x': &&&{unknown}\n+    74..75 'x': &&{unknown}\n     \"###\n     );\n }\n@@ -158,12 +158,12 @@ fn write() {\n }\n \"#),\n         @r###\"\n-    [54; 139) '{     ...   } }': ()\n-    [60; 137) 'match ...     }': ()\n-    [66; 83) 'someth...nknown': Maybe<{unknown}>\n-    [94; 124) 'Maybe:...thing)': Maybe<{unknown}>\n-    [106; 123) 'ref mu...ething': &mut {unknown}\n-    [128; 130) '()': ()\n+    54..139 '{     ...   } }': ()\n+    60..137 'match ...     }': ()\n+    66..83 'someth...nknown': Maybe<{unknown}>\n+    94..124 'Maybe:...thing)': Maybe<{unknown}>\n+    106..123 'ref mu...ething': &mut {unknown}\n+    128..130 '()': ()\n     \"###\n     );\n }\n@@ -179,13 +179,13 @@ fn test_line_buffer() {\n }\n \"#),\n         @r###\"\n-    [23; 53) '{     ...n']; }': ()\n-    [29; 50) '&[0, b...b'\\n']': &[u8; _]\n-    [30; 50) '[0, b'...b'\\n']': [u8; _]\n-    [31; 32) '0': u8\n-    [34; 39) 'b'\\n'': u8\n-    [41; 42) '1': u8\n-    [44; 49) 'b'\\n'': u8\n+    23..53 '{     ...n']; }': ()\n+    29..50 '&[0, b...b'\\n']': &[u8; _]\n+    30..50 '[0, b'...b'\\n']': [u8; _]\n+    31..32 '0': u8\n+    34..39 'b'\\n'': u8\n+    41..42 '1': u8\n+    44..49 'b'\\n'': u8\n     \"###\n     );\n }\n@@ -202,14 +202,14 @@ pub fn compute() {\n }\n \"#),\n         @r###\"\n-    [18; 108) '{     ...   } }': ()\n-    [24; 106) 'match ...     }': ()\n-    [30; 37) 'nope!()': {unknown}\n-    [48; 94) 'SizeSk...tail }': {unknown}\n-    [82; 86) 'true': bool\n-    [82; 86) 'true': bool\n-    [88; 92) 'tail': {unknown}\n-    [98; 100) '{}': ()\n+    18..108 '{     ...   } }': ()\n+    24..106 'match ...     }': ()\n+    30..37 'nope!()': {unknown}\n+    48..94 'SizeSk...tail }': {unknown}\n+    82..86 'true': bool\n+    82..86 'true': bool\n+    88..92 'tail': {unknown}\n+    98..100 '{}': ()\n     \"###\n     );\n }\n@@ -226,14 +226,14 @@ pub fn primitive_type() {\n }\n \"#),\n         @r###\"\n-    [25; 106) '{     ...   } }': ()\n-    [31; 104) 'match ...     }': ()\n-    [37; 42) '*self': {unknown}\n-    [38; 42) 'self': {unknown}\n-    [53; 91) 'Borrow...), ..}': {unknown}\n-    [74; 86) 'Primitive(p)': {unknown}\n-    [84; 85) 'p': {unknown}\n-    [95; 97) '{}': ()\n+    25..106 '{     ...   } }': ()\n+    31..104 'match ...     }': ()\n+    37..42 '*self': {unknown}\n+    38..42 'self': {unknown}\n+    53..91 'Borrow...), ..}': {unknown}\n+    74..86 'Primitive(p)': {unknown}\n+    84..85 'p': {unknown}\n+    95..97 '{}': ()\n     \"###\n     );\n }\n@@ -260,29 +260,29 @@ fn extra_compiler_flags() {\n }\n \"#),\n         @r###\"\n-    [27; 323) '{     ...   } }': ()\n-    [33; 321) 'for co...     }': ()\n-    [37; 44) 'content': &{unknown}\n-    [48; 61) 'doesnt_matter': {unknown}\n-    [62; 321) '{     ...     }': ()\n-    [76; 80) 'name': &&{unknown}\n-    [83; 167) 'if doe...     }': &&{unknown}\n-    [86; 99) 'doesnt_matter': bool\n-    [100; 129) '{     ...     }': &&{unknown}\n-    [114; 119) 'first': &&{unknown}\n-    [135; 167) '{     ...     }': &&{unknown}\n-    [149; 157) '&content': &&{unknown}\n-    [150; 157) 'content': &{unknown}\n-    [182; 189) 'content': &{unknown}\n-    [192; 314) 'if ICE...     }': &{unknown}\n-    [195; 232) 'ICE_RE..._VALUE': {unknown}\n-    [195; 248) 'ICE_RE...&name)': bool\n-    [242; 247) '&name': &&&{unknown}\n-    [243; 247) 'name': &&{unknown}\n-    [249; 277) '{     ...     }': &&{unknown}\n-    [263; 267) 'name': &&{unknown}\n-    [283; 314) '{     ...     }': &{unknown}\n-    [297; 304) 'content': &{unknown}\n+    27..323 '{     ...   } }': ()\n+    33..321 'for co...     }': ()\n+    37..44 'content': &{unknown}\n+    48..61 'doesnt_matter': {unknown}\n+    62..321 '{     ...     }': ()\n+    76..80 'name': &&{unknown}\n+    83..167 'if doe...     }': &&{unknown}\n+    86..99 'doesnt_matter': bool\n+    100..129 '{     ...     }': &&{unknown}\n+    114..119 'first': &&{unknown}\n+    135..167 '{     ...     }': &&{unknown}\n+    149..157 '&content': &&{unknown}\n+    150..157 'content': &{unknown}\n+    182..189 'content': &{unknown}\n+    192..314 'if ICE...     }': &{unknown}\n+    195..232 'ICE_RE..._VALUE': {unknown}\n+    195..248 'ICE_RE...&name)': bool\n+    242..247 '&name': &&&{unknown}\n+    243..247 'name': &&{unknown}\n+    249..277 '{     ...     }': &&{unknown}\n+    263..267 'name': &&{unknown}\n+    283..314 '{     ...     }': &{unknown}\n+    297..304 'content': &{unknown}\n     \"###\n     );\n }\n@@ -303,11 +303,11 @@ fn test<R>(query_response: Canonical<QueryResponse<R>>) {\n }\n \"#),\n         @r###\"\n-    [92; 106) 'query_response': Canonical<QueryResponse<R>>\n-    [137; 167) '{     ...lue; }': ()\n-    [143; 164) '&query....value': &QueryResponse<R>\n-    [144; 158) 'query_response': Canonical<QueryResponse<R>>\n-    [144; 164) 'query_....value': QueryResponse<R>\n+    92..106 'query_response': Canonical<QueryResponse<R>>\n+    137..167 '{     ...lue; }': ()\n+    143..164 '&query....value': &QueryResponse<R>\n+    144..158 'query_response': Canonical<QueryResponse<R>>\n+    144..164 'query_....value': QueryResponse<R>\n     \"###\n     );\n }\n@@ -322,9 +322,9 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    ![0; 4) '0u32': u32\n-    [45; 70) '{     ...()); }': ()\n-    [55; 56) 'a': u32\n+    !0..4 '0u32': u32\n+    45..70 '{     ...()); }': ()\n+    55..56 'a': u32\n         \"###\n     );\n }\n@@ -345,10 +345,10 @@ pub fn main_loop() {\n }\n \"#),\n     @r###\"\n-    [144; 146) '{}': ()\n-    [169; 198) '{     ...t(); }': ()\n-    [175; 193) 'FxHash...efault': fn default<{unknown}, FxHasher>() -> HashSet<{unknown}, FxHasher>\n-    [175; 195) 'FxHash...ault()': HashSet<{unknown}, FxHasher>\n+    144..146 '{}': ()\n+    169..198 '{     ...t(); }': ()\n+    175..193 'FxHash...efault': fn default<{unknown}, FxHasher>() -> HashSet<{unknown}, FxHasher>\n+    175..195 'FxHash...ault()': HashSet<{unknown}, FxHasher>\n     \"###\n     );\n }\n@@ -375,13 +375,13 @@ fn issue_2669() {\n     }\"#\n         ),\n         @r###\"\n-    [147; 262) '{     ...     }': ()\n-    [161; 164) 'end': fn end<{unknown}>()\n-    [161; 166) 'end()': ()\n-    [199; 252) '{     ...     }': ()\n-    [221; 223) '_x': !\n-    [230; 237) 'loop {}': !\n-    [235; 237) '{}': ()\n+    147..262 '{     ...     }': ()\n+    161..164 'end': fn end<{unknown}>()\n+    161..166 'end()': ()\n+    199..252 '{     ...     }': ()\n+    221..223 '_x': !\n+    230..237 'loop {}': !\n+    235..237 '{}': ()\n     \"###\n     )\n }\n@@ -396,9 +396,9 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [26; 53) '{     ...oo() }': ()\n-    [32; 49) '<Trait...>::foo': {unknown}\n-    [32; 51) '<Trait...:foo()': ()\n+    26..53 '{     ...oo() }': ()\n+    32..49 '<Trait...>::foo': {unknown}\n+    32..51 '<Trait...:foo()': ()\n     \"###\n     );\n }\n@@ -496,13 +496,13 @@ fn foo(params: &[usize]) {\n }\n \"#),\n         @r###\"\n-    [8; 14) 'params': &[usize]\n-    [26; 81) '{     ...   } }': ()\n-    [32; 79) 'match ...     }': ()\n-    [38; 44) 'params': &[usize]\n-    [55; 67) '[ps @ .., _]': [usize]\n-    [65; 66) '_': usize\n-    [71; 73) '{}': ()\n+    8..14 'params': &[usize]\n+    26..81 '{     ...   } }': ()\n+    32..79 'match ...     }': ()\n+    38..44 'params': &[usize]\n+    55..67 '[ps @ .., _]': [usize]\n+    65..66 '_': usize\n+    71..73 '{}': ()\n     \"###\n     );\n }\n@@ -523,13 +523,13 @@ fn foo(b: Bar) {\n }\n \"#),\n         @r###\"\n-    [36; 37) 'b': Bar\n-    [44; 96) '{     ...   } }': ()\n-    [50; 94) 'match ...     }': ()\n-    [56; 57) 'b': Bar\n-    [68; 81) 'Bar { a: .. }': Bar\n-    [77; 79) '..': bool\n-    [85; 87) '{}': ()\n+    36..37 'b': Bar\n+    44..96 '{     ...   } }': ()\n+    50..94 'match ...     }': ()\n+    56..57 'b': Bar\n+    68..81 'Bar { a: .. }': Bar\n+    77..79 '..': bool\n+    85..87 '{}': ()\n     \"###\n     );\n }\n@@ -564,13 +564,13 @@ where\n }\n \"#),\n         @r###\"\n-    [66; 70) 'self': Self\n-    [268; 272) 'self': Self\n-    [467; 471) 'self': SelectStatement<F, S, D, W, O, LOf, {unknown}, {unknown}>\n-    [489; 523) '{     ...     }': ()\n-    [499; 503) 'self': SelectStatement<F, S, D, W, O, LOf, {unknown}, {unknown}>\n-    [499; 509) 'self.order': O\n-    [499; 516) 'self.o...into()': dyn QueryFragment<DB>\n+    66..70 'self': Self\n+    268..272 'self': Self\n+    467..471 'self': SelectStatement<F, S, D, W, O, LOf, {unknown}, {unknown}>\n+    489..523 '{     ...     }': ()\n+    499..503 'self': SelectStatement<F, S, D, W, O, LOf, {unknown}, {unknown}>\n+    499..509 'self.order': O\n+    499..516 'self.o...into()': dyn QueryFragment<DB>\n     \"###\n     );\n }"}, {"sha": "56abc65b8c6546e8b3e1496784c04724fe94686f", "filename": "crates/ra_hir_ty/src/tests/simple.rs", "status": "modified", "additions": 680, "deletions": 680, "changes": 1360, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -64,9 +64,9 @@ impl S<u32> {\n }\n \"#,\n     ), @r###\"\n-    [63; 93) '{     ...     }': ()\n-    [73; 86) 'Self { x: 1 }': S<u32>\n-    [83; 84) '1': u32\n+    63..93 '{     ...     }': ()\n+    73..86 'Self { x: 1 }': S<u32>\n+    83..84 '1': u32\n     \"###);\n }\n \n@@ -85,9 +85,9 @@ fn foo() {\n \n \"#,\n     ), @r###\"\n-    [64; 84) '{     ...1 }; }': ()\n-    [70; 81) 'SS { x: 1 }': S<u32>\n-    [78; 79) '1': u32\n+    64..84 '{     ...1 }; }': ()\n+    70..81 'SS { x: 1 }': S<u32>\n+    78..79 '1': u32\n     \"###);\n }\n \n@@ -175,19 +175,19 @@ fn test(a: u32, b: isize, c: !, d: &str) {\n     1.0f32;\n }\"#),\n         @r###\"\n-    [9; 10) 'a': u32\n-    [17; 18) 'b': isize\n-    [27; 28) 'c': !\n-    [33; 34) 'd': &str\n-    [42; 121) '{     ...f32; }': !\n-    [48; 49) 'a': u32\n-    [55; 56) 'b': isize\n-    [62; 63) 'c': !\n-    [69; 70) 'd': &str\n-    [76; 82) '1usize': usize\n-    [88; 94) '1isize': isize\n-    [100; 106) '\"test\"': &str\n-    [112; 118) '1.0f32': f32\n+    9..10 'a': u32\n+    17..18 'b': isize\n+    27..28 'c': !\n+    33..34 'd': &str\n+    42..121 '{     ...f32; }': !\n+    48..49 'a': u32\n+    55..56 'b': isize\n+    62..63 'c': !\n+    69..70 'd': &str\n+    76..82 '1usize': usize\n+    88..94 '1isize': isize\n+    100..106 '\"test\"': &str\n+    112..118 '1.0f32': f32\n     \"###\n     );\n }\n@@ -206,17 +206,17 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [11; 118) '{     ...= e; }': ()\n-    [21; 22) 'a': isize\n-    [25; 31) '1isize': isize\n-    [41; 42) 'b': usize\n-    [52; 53) '1': usize\n-    [63; 64) 'c': usize\n-    [67; 68) 'b': usize\n-    [78; 79) 'd': u32\n-    [94; 95) 'e': i32\n-    [105; 106) 'f': i32\n-    [114; 115) 'e': i32\n+    11..118 '{     ...= e; }': ()\n+    21..22 'a': isize\n+    25..31 '1isize': isize\n+    41..42 'b': usize\n+    52..53 '1': usize\n+    63..64 'c': usize\n+    67..68 'b': usize\n+    78..79 'd': u32\n+    94..95 'e': i32\n+    105..106 'f': i32\n+    114..115 'e': i32\n     \"###\n     );\n }\n@@ -237,15 +237,15 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [15; 20) '{ 1 }': u32\n-    [17; 18) '1': u32\n-    [48; 53) '{ 1 }': u32\n-    [50; 51) '1': u32\n-    [67; 91) '{     ...c(); }': ()\n-    [73; 74) 'a': fn a() -> u32\n-    [73; 76) 'a()': u32\n-    [82; 86) 'b::c': fn c() -> u32\n-    [82; 88) 'b::c()': u32\n+    15..20 '{ 1 }': u32\n+    17..18 '1': u32\n+    48..53 '{ 1 }': u32\n+    50..51 '1': u32\n+    67..91 '{     ...c(); }': ()\n+    73..74 'a': fn a() -> u32\n+    73..76 'a()': u32\n+    82..86 'b::c': fn c() -> u32\n+    82..88 'b::c()': u32\n     \"###\n     );\n }\n@@ -266,13 +266,13 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [41; 46) '{ 1 }': i32\n-    [43; 44) '1': i32\n-    [60; 93) '{     ...o(); }': ()\n-    [66; 72) 'S::foo': fn foo() -> i32\n-    [66; 74) 'S::foo()': i32\n-    [80; 88) '<S>::foo': fn foo() -> i32\n-    [80; 90) '<S>::foo()': i32\n+    41..46 '{ 1 }': i32\n+    43..44 '1': i32\n+    60..93 '{     ...o(); }': ()\n+    66..72 'S::foo': fn foo() -> i32\n+    66..74 'S::foo()': i32\n+    80..88 '<S>::foo': fn foo() -> i32\n+    80..90 '<S>::foo()': i32\n     \"###\n     );\n }\n@@ -297,22 +297,22 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [72; 154) '{     ...a.c; }': ()\n-    [82; 83) 'c': C\n-    [86; 87) 'C': C(usize) -> C\n-    [86; 90) 'C(1)': C\n-    [88; 89) '1': usize\n-    [96; 97) 'B': B\n-    [107; 108) 'a': A\n-    [114; 133) 'A { b:...C(1) }': A\n-    [121; 122) 'B': B\n-    [127; 128) 'C': C(usize) -> C\n-    [127; 131) 'C(1)': C\n-    [129; 130) '1': usize\n-    [139; 140) 'a': A\n-    [139; 142) 'a.b': B\n-    [148; 149) 'a': A\n-    [148; 151) 'a.c': C\n+    72..154 '{     ...a.c; }': ()\n+    82..83 'c': C\n+    86..87 'C': C(usize) -> C\n+    86..90 'C(1)': C\n+    88..89 '1': usize\n+    96..97 'B': B\n+    107..108 'a': A\n+    114..133 'A { b:...C(1) }': A\n+    121..122 'B': B\n+    127..128 'C': C(usize) -> C\n+    127..131 'C(1)': C\n+    129..130 '1': usize\n+    139..140 'a': A\n+    139..142 'a.b': B\n+    148..149 'a': A\n+    148..151 'a.c': C\n     \"###\n     );\n }\n@@ -330,10 +330,10 @@ fn test() {\n   E::V2;\n }\"#),\n         @r###\"\n-    [48; 82) '{   E:...:V2; }': ()\n-    [52; 70) 'E::V1 ...d: 1 }': E\n-    [67; 68) '1': u32\n-    [74; 79) 'E::V2': E\n+    48..82 '{   E:...:V2; }': ()\n+    52..70 'E::V1 ...d: 1 }': E\n+    67..68 '1': u32\n+    74..79 'E::V2': E\n     \"###\n     );\n }\n@@ -357,29 +357,29 @@ fn test(a: &u32, b: &mut u32, c: *const u32, d: *mut u32) {\n }\n \"#),\n         @r###\"\n-    [9; 10) 'a': &u32\n-    [18; 19) 'b': &mut u32\n-    [31; 32) 'c': *const u32\n-    [46; 47) 'd': *mut u32\n-    [59; 150) '{     ... *d; }': ()\n-    [65; 66) 'a': &u32\n-    [72; 74) '*a': u32\n-    [73; 74) 'a': &u32\n-    [80; 82) '&a': &&u32\n-    [81; 82) 'a': &u32\n-    [88; 94) '&mut a': &mut &u32\n-    [93; 94) 'a': &u32\n-    [100; 101) 'b': &mut u32\n-    [107; 109) '*b': u32\n-    [108; 109) 'b': &mut u32\n-    [115; 117) '&b': &&mut u32\n-    [116; 117) 'b': &mut u32\n-    [123; 124) 'c': *const u32\n-    [130; 132) '*c': u32\n-    [131; 132) 'c': *const u32\n-    [138; 139) 'd': *mut u32\n-    [145; 147) '*d': u32\n-    [146; 147) 'd': *mut u32\n+    9..10 'a': &u32\n+    18..19 'b': &mut u32\n+    31..32 'c': *const u32\n+    46..47 'd': *mut u32\n+    59..150 '{     ... *d; }': ()\n+    65..66 'a': &u32\n+    72..74 '*a': u32\n+    73..74 'a': &u32\n+    80..82 '&a': &&u32\n+    81..82 'a': &u32\n+    88..94 '&mut a': &mut &u32\n+    93..94 'a': &u32\n+    100..101 'b': &mut u32\n+    107..109 '*b': u32\n+    108..109 'b': &mut u32\n+    115..117 '&b': &&mut u32\n+    116..117 'b': &mut u32\n+    123..124 'c': *const u32\n+    130..132 '*c': u32\n+    131..132 'c': *const u32\n+    138..139 'd': *mut u32\n+    145..147 '*d': u32\n+    146..147 'd': *mut u32\n     \"###\n     );\n }\n@@ -409,20 +409,20 @@ fn test() {\n }\n \"##),\n         @r###\"\n-    [11; 221) '{     ...o\"#; }': ()\n-    [17; 21) '5i32': i32\n-    [27; 31) '5f32': f32\n-    [37; 41) '5f64': f64\n-    [47; 54) '\"hello\"': &str\n-    [60; 68) 'b\"bytes\"': &[u8]\n-    [74; 77) ''c'': char\n-    [83; 87) 'b'b'': u8\n-    [93; 97) '3.14': f64\n-    [103; 107) '5000': i32\n-    [113; 118) 'false': bool\n-    [124; 128) 'true': bool\n-    [134; 202) 'r#\"   ...    \"#': &str\n-    [208; 218) 'br#\"yolo\"#': &[u8]\n+    11..221 '{     ...o\"#; }': ()\n+    17..21 '5i32': i32\n+    27..31 '5f32': f32\n+    37..41 '5f64': f64\n+    47..54 '\"hello\"': &str\n+    60..68 'b\"bytes\"': &[u8]\n+    74..77 ''c'': char\n+    83..87 'b'b'': u8\n+    93..97 '3.14': f64\n+    103..107 '5000': i32\n+    113..118 'false': bool\n+    124..128 'true': bool\n+    134..202 'r#\"   ...    \"#': &str\n+    208..218 'br#\"yolo\"#': &[u8]\n     \"###\n     );\n }\n@@ -452,47 +452,47 @@ fn test(x: SomeType) {\n }\n \"#),\n         @r###\"\n-    [27; 28) 'x': SomeType\n-    [40; 272) '{     ...lo\"; }': ()\n-    [50; 51) 'b': bool\n-    [54; 59) 'false': bool\n-    [69; 70) 'c': bool\n-    [73; 75) '!b': bool\n-    [74; 75) 'b': bool\n-    [85; 86) 'a': i128\n-    [89; 92) '100': i128\n-    [102; 103) 'd': i128\n-    [112; 114) '-a': i128\n-    [113; 114) 'a': i128\n-    [124; 125) 'e': i32\n-    [128; 132) '-100': i32\n-    [129; 132) '100': i32\n-    [142; 143) 'f': bool\n-    [146; 153) '!!!true': bool\n-    [147; 153) '!!true': bool\n-    [148; 153) '!true': bool\n-    [149; 153) 'true': bool\n-    [163; 164) 'g': i32\n-    [167; 170) '!42': i32\n-    [168; 170) '42': i32\n-    [180; 181) 'h': u32\n-    [184; 190) '!10u32': u32\n-    [185; 190) '10u32': u32\n-    [200; 201) 'j': i128\n-    [204; 206) '!a': i128\n-    [205; 206) 'a': i128\n-    [212; 217) '-3.14': f64\n-    [213; 217) '3.14': f64\n-    [223; 225) '!3': i32\n-    [224; 225) '3': i32\n-    [231; 233) '-x': {unknown}\n-    [232; 233) 'x': SomeType\n-    [239; 241) '!x': {unknown}\n-    [240; 241) 'x': SomeType\n-    [247; 255) '-\"hello\"': {unknown}\n-    [248; 255) '\"hello\"': &str\n-    [261; 269) '!\"hello\"': {unknown}\n-    [262; 269) '\"hello\"': &str\n+    27..28 'x': SomeType\n+    40..272 '{     ...lo\"; }': ()\n+    50..51 'b': bool\n+    54..59 'false': bool\n+    69..70 'c': bool\n+    73..75 '!b': bool\n+    74..75 'b': bool\n+    85..86 'a': i128\n+    89..92 '100': i128\n+    102..103 'd': i128\n+    112..114 '-a': i128\n+    113..114 'a': i128\n+    124..125 'e': i32\n+    128..132 '-100': i32\n+    129..132 '100': i32\n+    142..143 'f': bool\n+    146..153 '!!!true': bool\n+    147..153 '!!true': bool\n+    148..153 '!true': bool\n+    149..153 'true': bool\n+    163..164 'g': i32\n+    167..170 '!42': i32\n+    168..170 '42': i32\n+    180..181 'h': u32\n+    184..190 '!10u32': u32\n+    185..190 '10u32': u32\n+    200..201 'j': i128\n+    204..206 '!a': i128\n+    205..206 'a': i128\n+    212..217 '-3.14': f64\n+    213..217 '3.14': f64\n+    223..225 '!3': i32\n+    224..225 '3': i32\n+    231..233 '-x': {unknown}\n+    232..233 'x': SomeType\n+    239..241 '!x': {unknown}\n+    240..241 'x': SomeType\n+    247..255 '-\"hello\"': {unknown}\n+    248..255 '\"hello\"': &str\n+    261..269 '!\"hello\"': {unknown}\n+    262..269 '\"hello\"': &str\n     \"###\n     );\n }\n@@ -515,26 +515,26 @@ fn test() -> &mut &f64 {\n }\n \"#),\n         @r###\"\n-    [14; 15) 'x': u32\n-    [22; 24) '{}': ()\n-    [78; 231) '{     ...t &c }': &mut &f64\n-    [88; 89) 'a': u32\n-    [92; 108) 'unknow...nction': {unknown}\n-    [92; 110) 'unknow...tion()': u32\n-    [116; 125) 'takes_u32': fn takes_u32(u32)\n-    [116; 128) 'takes_u32(a)': ()\n-    [126; 127) 'a': u32\n-    [138; 139) 'b': i32\n-    [142; 158) 'unknow...nction': {unknown}\n-    [142; 160) 'unknow...tion()': i32\n-    [166; 184) 'S { i3...d: b }': S\n-    [181; 182) 'b': i32\n-    [194; 195) 'c': f64\n-    [198; 214) 'unknow...nction': {unknown}\n-    [198; 216) 'unknow...tion()': f64\n-    [222; 229) '&mut &c': &mut &f64\n-    [227; 229) '&c': &f64\n-    [228; 229) 'c': f64\n+    14..15 'x': u32\n+    22..24 '{}': ()\n+    78..231 '{     ...t &c }': &mut &f64\n+    88..89 'a': u32\n+    92..108 'unknow...nction': {unknown}\n+    92..110 'unknow...tion()': u32\n+    116..125 'takes_u32': fn takes_u32(u32)\n+    116..128 'takes_u32(a)': ()\n+    126..127 'a': u32\n+    138..139 'b': i32\n+    142..158 'unknow...nction': {unknown}\n+    142..160 'unknow...tion()': i32\n+    166..184 'S { i3...d: b }': S\n+    181..182 'b': i32\n+    194..195 'c': f64\n+    198..214 'unknow...nction': {unknown}\n+    198..216 'unknow...tion()': f64\n+    222..229 '&mut &c': &mut &f64\n+    227..229 '&c': &f64\n+    228..229 'c': f64\n     \"###\n     );\n }\n@@ -561,16 +561,16 @@ impl S {\n }\n \"#),\n         @r###\"\n-    [34; 38) 'self': &S\n-    [40; 61) '{     ...     }': ()\n-    [50; 54) 'self': &S\n-    [75; 79) 'self': &S\n-    [88; 109) '{     ...     }': ()\n-    [98; 102) 'self': &S\n-    [133; 153) '{     ...     }': S\n-    [143; 147) 'S {}': S\n-    [177; 200) '{     ...     }': S\n-    [187; 194) 'Self {}': S\n+    34..38 'self': &S\n+    40..61 '{     ...     }': ()\n+    50..54 'self': &S\n+    75..79 'self': &S\n+    88..109 '{     ...     }': ()\n+    98..102 'self': &S\n+    133..153 '{     ...     }': S\n+    143..147 'S {}': S\n+    177..200 '{     ...     }': S\n+    187..194 'Self {}': S\n     \"###\n     );\n }\n@@ -600,56 +600,56 @@ fn test() -> bool {\n }\n \"#),\n         @r###\"\n-    [6; 7) 'x': bool\n-    [22; 34) '{     0i32 }': i32\n-    [28; 32) '0i32': i32\n-    [54; 370) '{     ... < 3 }': bool\n-    [64; 65) 'x': bool\n-    [68; 69) 'a': bool\n-    [68; 74) 'a && b': bool\n-    [73; 74) 'b': bool\n-    [84; 85) 'y': bool\n-    [88; 92) 'true': bool\n-    [88; 101) 'true || false': bool\n-    [96; 101) 'false': bool\n-    [111; 112) 'z': bool\n-    [115; 116) 'x': bool\n-    [115; 121) 'x == y': bool\n-    [120; 121) 'y': bool\n-    [131; 132) 't': bool\n-    [135; 136) 'x': bool\n-    [135; 141) 'x != y': bool\n-    [140; 141) 'y': bool\n-    [151; 162) 'minus_forty': isize\n-    [172; 180) '-40isize': isize\n-    [173; 180) '40isize': isize\n-    [190; 191) 'h': bool\n-    [194; 205) 'minus_forty': isize\n-    [194; 216) 'minus_...ONST_2': bool\n-    [209; 216) 'CONST_2': isize\n-    [226; 227) 'c': i32\n-    [230; 231) 'f': fn f(bool) -> i32\n-    [230; 239) 'f(z || y)': i32\n-    [230; 243) 'f(z || y) + 5': i32\n-    [232; 233) 'z': bool\n-    [232; 238) 'z || y': bool\n-    [237; 238) 'y': bool\n-    [242; 243) '5': i32\n-    [253; 254) 'd': {unknown}\n-    [257; 258) 'b': {unknown}\n-    [268; 269) 'g': ()\n-    [272; 283) 'minus_forty': isize\n-    [272; 288) 'minus_...y ^= i': ()\n-    [287; 288) 'i': isize\n-    [298; 301) 'ten': usize\n-    [311; 313) '10': usize\n-    [323; 336) 'ten_is_eleven': bool\n-    [339; 342) 'ten': usize\n-    [339; 354) 'ten == some_num': bool\n-    [346; 354) 'some_num': usize\n-    [361; 364) 'ten': usize\n-    [361; 368) 'ten < 3': bool\n-    [367; 368) '3': usize\n+    6..7 'x': bool\n+    22..34 '{     0i32 }': i32\n+    28..32 '0i32': i32\n+    54..370 '{     ... < 3 }': bool\n+    64..65 'x': bool\n+    68..69 'a': bool\n+    68..74 'a && b': bool\n+    73..74 'b': bool\n+    84..85 'y': bool\n+    88..92 'true': bool\n+    88..101 'true || false': bool\n+    96..101 'false': bool\n+    111..112 'z': bool\n+    115..116 'x': bool\n+    115..121 'x == y': bool\n+    120..121 'y': bool\n+    131..132 't': bool\n+    135..136 'x': bool\n+    135..141 'x != y': bool\n+    140..141 'y': bool\n+    151..162 'minus_forty': isize\n+    172..180 '-40isize': isize\n+    173..180 '40isize': isize\n+    190..191 'h': bool\n+    194..205 'minus_forty': isize\n+    194..216 'minus_...ONST_2': bool\n+    209..216 'CONST_2': isize\n+    226..227 'c': i32\n+    230..231 'f': fn f(bool) -> i32\n+    230..239 'f(z || y)': i32\n+    230..243 'f(z || y) + 5': i32\n+    232..233 'z': bool\n+    232..238 'z || y': bool\n+    237..238 'y': bool\n+    242..243 '5': i32\n+    253..254 'd': {unknown}\n+    257..258 'b': {unknown}\n+    268..269 'g': ()\n+    272..283 'minus_forty': isize\n+    272..288 'minus_...y ^= i': ()\n+    287..288 'i': isize\n+    298..301 'ten': usize\n+    311..313 '10': usize\n+    323..336 'ten_is_eleven': bool\n+    339..342 'ten': usize\n+    339..354 'ten == some_num': bool\n+    346..354 'some_num': usize\n+    361..364 'ten': usize\n+    361..368 'ten < 3': bool\n+    367..368 '3': usize\n     \"###\n     );\n }\n@@ -664,13 +664,13 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [11; 48) '{     ...5u8; }': ()\n-    [17; 21) '1u32': u32\n-    [17; 28) '1u32 << 5u8': u32\n-    [25; 28) '5u8': u8\n-    [34; 38) '1u32': u32\n-    [34; 45) '1u32 >> 5u8': u32\n-    [42; 45) '5u8': u8\n+    11..48 '{     ...5u8; }': ()\n+    17..21 '1u32': u32\n+    17..28 '1u32 << 5u8': u32\n+    25..28 '5u8': u8\n+    34..38 '1u32': u32\n+    34..45 '1u32 >> 5u8': u32\n+    42..45 '5u8': u8\n     \"###\n     );\n }\n@@ -703,49 +703,49 @@ fn test2(a1: *const A, a2: *mut A) {\n }\n \"#),\n         @r###\"\n-    [44; 45) 'a': A\n-    [50; 213) '{     ...5.b; }': ()\n-    [60; 62) 'a1': A\n-    [65; 66) 'a': A\n-    [72; 74) 'a1': A\n-    [72; 76) 'a1.b': B\n-    [86; 88) 'a2': &A\n-    [91; 93) '&a': &A\n-    [92; 93) 'a': A\n-    [99; 101) 'a2': &A\n-    [99; 103) 'a2.b': B\n-    [113; 115) 'a3': &mut A\n-    [118; 124) '&mut a': &mut A\n-    [123; 124) 'a': A\n-    [130; 132) 'a3': &mut A\n-    [130; 134) 'a3.b': B\n-    [144; 146) 'a4': &&&&&&&A\n-    [149; 157) '&&&&&&&a': &&&&&&&A\n-    [150; 157) '&&&&&&a': &&&&&&A\n-    [151; 157) '&&&&&a': &&&&&A\n-    [152; 157) '&&&&a': &&&&A\n-    [153; 157) '&&&a': &&&A\n-    [154; 157) '&&a': &&A\n-    [155; 157) '&a': &A\n-    [156; 157) 'a': A\n-    [163; 165) 'a4': &&&&&&&A\n-    [163; 167) 'a4.b': B\n-    [177; 179) 'a5': &mut &&mut &&mut A\n-    [182; 200) '&mut &...&mut a': &mut &&mut &&mut A\n-    [187; 200) '&&mut &&mut a': &&mut &&mut A\n-    [188; 200) '&mut &&mut a': &mut &&mut A\n-    [193; 200) '&&mut a': &&mut A\n-    [194; 200) '&mut a': &mut A\n-    [199; 200) 'a': A\n-    [206; 208) 'a5': &mut &&mut &&mut A\n-    [206; 210) 'a5.b': B\n-    [224; 226) 'a1': *const A\n-    [238; 240) 'a2': *mut A\n-    [250; 273) '{     ...2.b; }': ()\n-    [256; 258) 'a1': *const A\n-    [256; 260) 'a1.b': B\n-    [266; 268) 'a2': *mut A\n-    [266; 270) 'a2.b': B\n+    44..45 'a': A\n+    50..213 '{     ...5.b; }': ()\n+    60..62 'a1': A\n+    65..66 'a': A\n+    72..74 'a1': A\n+    72..76 'a1.b': B\n+    86..88 'a2': &A\n+    91..93 '&a': &A\n+    92..93 'a': A\n+    99..101 'a2': &A\n+    99..103 'a2.b': B\n+    113..115 'a3': &mut A\n+    118..124 '&mut a': &mut A\n+    123..124 'a': A\n+    130..132 'a3': &mut A\n+    130..134 'a3.b': B\n+    144..146 'a4': &&&&&&&A\n+    149..157 '&&&&&&&a': &&&&&&&A\n+    150..157 '&&&&&&a': &&&&&&A\n+    151..157 '&&&&&a': &&&&&A\n+    152..157 '&&&&a': &&&&A\n+    153..157 '&&&a': &&&A\n+    154..157 '&&a': &&A\n+    155..157 '&a': &A\n+    156..157 'a': A\n+    163..165 'a4': &&&&&&&A\n+    163..167 'a4.b': B\n+    177..179 'a5': &mut &&mut &&mut A\n+    182..200 '&mut &...&mut a': &mut &&mut &&mut A\n+    187..200 '&&mut &&mut a': &&mut &&mut A\n+    188..200 '&mut &&mut a': &mut &&mut A\n+    193..200 '&&mut a': &&mut A\n+    194..200 '&mut a': &mut A\n+    199..200 'a': A\n+    206..208 'a5': &mut &&mut &&mut A\n+    206..210 'a5.b': B\n+    224..226 'a1': *const A\n+    238..240 'a2': *mut A\n+    250..273 '{     ...2.b; }': ()\n+    256..258 'a1': *const A\n+    256..260 'a1.b': B\n+    266..268 'a2': *mut A\n+    266..270 'a2.b': B\n     \"###\n     );\n }\n@@ -782,30 +782,30 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [68; 72) 'self': &Self\n-    [139; 143) 'self': &A<T>\n-    [151; 174) '{     ...     }': &T\n-    [161; 168) '&self.0': &T\n-    [162; 166) 'self': &A<T>\n-    [162; 168) 'self.0': T\n-    [255; 259) 'self': &B<T>\n-    [278; 301) '{     ...     }': &T\n-    [288; 295) '&self.0': &T\n-    [289; 293) 'self': &B<T>\n-    [289; 295) 'self.0': T\n-    [315; 353) '{     ...))); }': ()\n-    [325; 326) 't': &i32\n-    [329; 335) 'A::foo': fn foo<i32>(&A<i32>) -> &i32\n-    [329; 350) 'A::foo...42))))': &i32\n-    [336; 349) '&&B(B(A(42)))': &&B<B<A<i32>>>\n-    [337; 349) '&B(B(A(42)))': &B<B<A<i32>>>\n-    [338; 339) 'B': B<B<A<i32>>>(B<A<i32>>) -> B<B<A<i32>>>\n-    [338; 349) 'B(B(A(42)))': B<B<A<i32>>>\n-    [340; 341) 'B': B<A<i32>>(A<i32>) -> B<A<i32>>\n-    [340; 348) 'B(A(42))': B<A<i32>>\n-    [342; 343) 'A': A<i32>(i32) -> A<i32>\n-    [342; 347) 'A(42)': A<i32>\n-    [344; 346) '42': i32\n+    68..72 'self': &Self\n+    139..143 'self': &A<T>\n+    151..174 '{     ...     }': &T\n+    161..168 '&self.0': &T\n+    162..166 'self': &A<T>\n+    162..168 'self.0': T\n+    255..259 'self': &B<T>\n+    278..301 '{     ...     }': &T\n+    288..295 '&self.0': &T\n+    289..293 'self': &B<T>\n+    289..295 'self.0': T\n+    315..353 '{     ...))); }': ()\n+    325..326 't': &i32\n+    329..335 'A::foo': fn foo<i32>(&A<i32>) -> &i32\n+    329..350 'A::foo...42))))': &i32\n+    336..349 '&&B(B(A(42)))': &&B<B<A<i32>>>\n+    337..349 '&B(B(A(42)))': &B<B<A<i32>>>\n+    338..339 'B': B<B<A<i32>>>(B<A<i32>>) -> B<B<A<i32>>>\n+    338..349 'B(B(A(42)))': B<B<A<i32>>>\n+    340..341 'B': B<A<i32>>(A<i32>) -> B<A<i32>>\n+    340..348 'B(A(42))': B<A<i32>>\n+    342..343 'A': A<i32>(i32) -> A<i32>\n+    342..347 'A(42)': A<i32>\n+    344..346 '42': i32\n     \"###\n     );\n }\n@@ -842,34 +842,34 @@ fn test(a: A<i32>) {\n }\n \"#),\n         @r###\"\n-    [68; 72) 'self': &Self\n-    [144; 148) 'self': &A<T>\n-    [150; 151) 'x': &A<T>\n-    [166; 187) '{     ...     }': &T\n-    [176; 181) '&*x.0': &T\n-    [177; 181) '*x.0': T\n-    [178; 179) 'x': &A<T>\n-    [178; 181) 'x.0': *mut T\n-    [268; 272) 'self': &B<T>\n-    [291; 314) '{     ...     }': &T\n-    [301; 308) '&self.0': &T\n-    [302; 306) 'self': &B<T>\n-    [302; 308) 'self.0': T\n-    [326; 327) 'a': A<i32>\n-    [337; 383) '{     ...))); }': ()\n-    [347; 348) 't': &i32\n-    [351; 352) 'A': A<i32>(*mut i32) -> A<i32>\n-    [351; 365) 'A(0 as *mut _)': A<i32>\n-    [351; 380) 'A(0 as...B(a)))': &i32\n-    [353; 354) '0': i32\n-    [353; 364) '0 as *mut _': *mut i32\n-    [370; 379) '&&B(B(a))': &&B<B<A<i32>>>\n-    [371; 379) '&B(B(a))': &B<B<A<i32>>>\n-    [372; 373) 'B': B<B<A<i32>>>(B<A<i32>>) -> B<B<A<i32>>>\n-    [372; 379) 'B(B(a))': B<B<A<i32>>>\n-    [374; 375) 'B': B<A<i32>>(A<i32>) -> B<A<i32>>\n-    [374; 378) 'B(a)': B<A<i32>>\n-    [376; 377) 'a': A<i32>\n+    68..72 'self': &Self\n+    144..148 'self': &A<T>\n+    150..151 'x': &A<T>\n+    166..187 '{     ...     }': &T\n+    176..181 '&*x.0': &T\n+    177..181 '*x.0': T\n+    178..179 'x': &A<T>\n+    178..181 'x.0': *mut T\n+    268..272 'self': &B<T>\n+    291..314 '{     ...     }': &T\n+    301..308 '&self.0': &T\n+    302..306 'self': &B<T>\n+    302..308 'self.0': T\n+    326..327 'a': A<i32>\n+    337..383 '{     ...))); }': ()\n+    347..348 't': &i32\n+    351..352 'A': A<i32>(*mut i32) -> A<i32>\n+    351..365 'A(0 as *mut _)': A<i32>\n+    351..380 'A(0 as...B(a)))': &i32\n+    353..354 '0': i32\n+    353..364 '0 as *mut _': *mut i32\n+    370..379 '&&B(B(a))': &&B<B<A<i32>>>\n+    371..379 '&B(B(a))': &B<B<A<i32>>>\n+    372..373 'B': B<B<A<i32>>>(B<A<i32>>) -> B<B<A<i32>>>\n+    372..379 'B(B(a))': B<B<A<i32>>>\n+    374..375 'B': B<A<i32>>(A<i32>) -> B<A<i32>>\n+    374..378 'B(a)': B<A<i32>>\n+    376..377 'a': A<i32>\n     \"###\n     );\n }\n@@ -888,16 +888,16 @@ fn main(foo: Foo) {\n }\n \"#),\n         @r###\"\n-    [35; 38) 'foo': Foo\n-    [45; 109) '{     ...   } }': ()\n-    [51; 107) 'if tru...     }': ()\n-    [54; 58) 'true': bool\n-    [59; 67) '{      }': ()\n-    [73; 107) 'if fal...     }': ()\n-    [76; 81) 'false': bool\n-    [82; 107) '{     ...     }': i32\n-    [92; 95) 'foo': Foo\n-    [92; 101) 'foo.field': i32\n+    35..38 'foo': Foo\n+    45..109 '{     ...   } }': ()\n+    51..107 'if tru...     }': ()\n+    54..58 'true': bool\n+    59..67 '{      }': ()\n+    73..107 'if fal...     }': ()\n+    76..81 'false': bool\n+    82..107 '{     ...     }': i32\n+    92..95 'foo': Foo\n+    92..101 'foo.field': i32\n     \"###\n     )\n }\n@@ -929,38 +929,38 @@ fn foo() {\n     };\n }\"#),\n         @r###\"\n-    [10; 323) '{     ...  }; }': ()\n-    [20; 23) '_x1': i32\n-    [26; 80) 'if tru...     }': i32\n-    [29; 33) 'true': bool\n-    [34; 51) '{     ...     }': i32\n-    [44; 45) '1': i32\n-    [57; 80) '{     ...     }': !\n-    [67; 73) 'return': !\n-    [90; 93) '_x2': i32\n-    [96; 149) 'if tru...     }': i32\n-    [99; 103) 'true': bool\n-    [104; 121) '{     ...     }': i32\n-    [114; 115) '2': i32\n-    [127; 149) '{     ...     }': !\n-    [137; 143) 'return': !\n-    [159; 162) '_x3': i32\n-    [165; 247) 'match ...     }': i32\n-    [171; 175) 'true': bool\n-    [186; 190) 'true': bool\n-    [186; 190) 'true': bool\n-    [194; 195) '3': i32\n-    [205; 206) '_': bool\n-    [210; 241) '{     ...     }': !\n-    [224; 230) 'return': !\n-    [257; 260) '_x4': i32\n-    [263; 320) 'match ...     }': i32\n-    [269; 273) 'true': bool\n-    [284; 288) 'true': bool\n-    [284; 288) 'true': bool\n-    [292; 293) '4': i32\n-    [303; 304) '_': bool\n-    [308; 314) 'return': !\n+    10..323 '{     ...  }; }': ()\n+    20..23 '_x1': i32\n+    26..80 'if tru...     }': i32\n+    29..33 'true': bool\n+    34..51 '{     ...     }': i32\n+    44..45 '1': i32\n+    57..80 '{     ...     }': !\n+    67..73 'return': !\n+    90..93 '_x2': i32\n+    96..149 'if tru...     }': i32\n+    99..103 'true': bool\n+    104..121 '{     ...     }': i32\n+    114..115 '2': i32\n+    127..149 '{     ...     }': !\n+    137..143 'return': !\n+    159..162 '_x3': i32\n+    165..247 'match ...     }': i32\n+    171..175 'true': bool\n+    186..190 'true': bool\n+    186..190 'true': bool\n+    194..195 '3': i32\n+    205..206 '_': bool\n+    210..241 '{     ...     }': !\n+    224..230 'return': !\n+    257..260 '_x4': i32\n+    263..320 'match ...     }': i32\n+    269..273 'true': bool\n+    284..288 'true': bool\n+    284..288 'true': bool\n+    292..293 '4': i32\n+    303..304 '_': bool\n+    308..314 'return': !\n     \"###\n     )\n }\n@@ -988,24 +988,24 @@ fn test(a: A) {\n }\n \"#),\n         @r###\"\n-    [32; 36) 'self': A\n-    [38; 39) 'x': u32\n-    [53; 55) '{}': ()\n-    [103; 107) 'self': &A\n-    [109; 110) 'x': u64\n-    [124; 126) '{}': ()\n-    [144; 145) 'a': A\n-    [150; 198) '{     ...(1); }': ()\n-    [156; 157) 'a': A\n-    [156; 164) 'a.foo(1)': i32\n-    [162; 163) '1': u32\n-    [170; 181) '(&a).bar(1)': i64\n-    [171; 173) '&a': &A\n-    [172; 173) 'a': A\n-    [179; 180) '1': u64\n-    [187; 188) 'a': A\n-    [187; 195) 'a.bar(1)': i64\n-    [193; 194) '1': u64\n+    32..36 'self': A\n+    38..39 'x': u32\n+    53..55 '{}': ()\n+    103..107 'self': &A\n+    109..110 'x': u64\n+    124..126 '{}': ()\n+    144..145 'a': A\n+    150..198 '{     ...(1); }': ()\n+    156..157 'a': A\n+    156..164 'a.foo(1)': i32\n+    162..163 '1': u32\n+    170..181 '(&a).bar(1)': i64\n+    171..173 '&a': &A\n+    172..173 'a': A\n+    179..180 '1': u64\n+    187..188 'a': A\n+    187..195 'a.bar(1)': i64\n+    193..194 '1': u64\n     \"###\n     );\n }\n@@ -1024,11 +1024,11 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [40; 44) 'self': &str\n-    [53; 55) '{}': ()\n-    [69; 89) '{     ...o(); }': ()\n-    [75; 80) '\"foo\"': &str\n-    [75; 86) '\"foo\".foo()': i32\n+    40..44 'self': &str\n+    53..55 '{}': ()\n+    69..89 '{     ...o(); }': ()\n+    75..80 '\"foo\"': &str\n+    75..86 '\"foo\".foo()': i32\n     \"###\n     );\n }\n@@ -1047,33 +1047,33 @@ fn test(x: &str, y: isize) {\n }\n \"#),\n         @r###\"\n-    [9; 10) 'x': &str\n-    [18; 19) 'y': isize\n-    [28; 170) '{     ...d\"); }': ()\n-    [38; 39) 'a': (u32, &str)\n-    [55; 63) '(1, \"a\")': (u32, &str)\n-    [56; 57) '1': u32\n-    [59; 62) '\"a\"': &str\n-    [73; 74) 'b': ((u32, &str), &str)\n-    [77; 83) '(a, x)': ((u32, &str), &str)\n-    [78; 79) 'a': (u32, &str)\n-    [81; 82) 'x': &str\n-    [93; 94) 'c': (isize, &str)\n-    [97; 103) '(y, x)': (isize, &str)\n-    [98; 99) 'y': isize\n-    [101; 102) 'x': &str\n-    [113; 114) 'd': ((isize, &str), &str)\n-    [117; 123) '(c, x)': ((isize, &str), &str)\n-    [118; 119) 'c': (isize, &str)\n-    [121; 122) 'x': &str\n-    [133; 134) 'e': (i32, &str)\n-    [137; 145) '(1, \"e\")': (i32, &str)\n-    [138; 139) '1': i32\n-    [141; 144) '\"e\"': &str\n-    [155; 156) 'f': ((i32, &str), &str)\n-    [159; 167) '(e, \"d\")': ((i32, &str), &str)\n-    [160; 161) 'e': (i32, &str)\n-    [163; 166) '\"d\"': &str\n+    9..10 'x': &str\n+    18..19 'y': isize\n+    28..170 '{     ...d\"); }': ()\n+    38..39 'a': (u32, &str)\n+    55..63 '(1, \"a\")': (u32, &str)\n+    56..57 '1': u32\n+    59..62 '\"a\"': &str\n+    73..74 'b': ((u32, &str), &str)\n+    77..83 '(a, x)': ((u32, &str), &str)\n+    78..79 'a': (u32, &str)\n+    81..82 'x': &str\n+    93..94 'c': (isize, &str)\n+    97..103 '(y, x)': (isize, &str)\n+    98..99 'y': isize\n+    101..102 'x': &str\n+    113..114 'd': ((isize, &str), &str)\n+    117..123 '(c, x)': ((isize, &str), &str)\n+    118..119 'c': (isize, &str)\n+    121..122 'x': &str\n+    133..134 'e': (i32, &str)\n+    137..145 '(1, \"e\")': (i32, &str)\n+    138..139 '1': i32\n+    141..144 '\"e\"': &str\n+    155..156 'f': ((i32, &str), &str)\n+    159..167 '(e, \"d\")': ((i32, &str), &str)\n+    160..161 'e': (i32, &str)\n+    163..166 '\"d\"': &str\n     \"###\n     );\n }\n@@ -1101,58 +1101,58 @@ fn test(x: &str, y: isize) {\n }\n \"#),\n         @r###\"\n-    [9; 10) 'x': &str\n-    [18; 19) 'y': isize\n-    [28; 293) '{     ... []; }': ()\n-    [38; 39) 'a': [&str; _]\n-    [42; 45) '[x]': [&str; _]\n-    [43; 44) 'x': &str\n-    [55; 56) 'b': [[&str; _]; _]\n-    [59; 65) '[a, a]': [[&str; _]; _]\n-    [60; 61) 'a': [&str; _]\n-    [63; 64) 'a': [&str; _]\n-    [75; 76) 'c': [[[&str; _]; _]; _]\n-    [79; 85) '[b, b]': [[[&str; _]; _]; _]\n-    [80; 81) 'b': [[&str; _]; _]\n-    [83; 84) 'b': [[&str; _]; _]\n-    [96; 97) 'd': [isize; _]\n-    [100; 112) '[y, 1, 2, 3]': [isize; _]\n-    [101; 102) 'y': isize\n-    [104; 105) '1': isize\n-    [107; 108) '2': isize\n-    [110; 111) '3': isize\n-    [122; 123) 'd': [isize; _]\n-    [126; 138) '[1, y, 2, 3]': [isize; _]\n-    [127; 128) '1': isize\n-    [130; 131) 'y': isize\n-    [133; 134) '2': isize\n-    [136; 137) '3': isize\n-    [148; 149) 'e': [isize; _]\n-    [152; 155) '[y]': [isize; _]\n-    [153; 154) 'y': isize\n-    [165; 166) 'f': [[isize; _]; _]\n-    [169; 175) '[d, d]': [[isize; _]; _]\n-    [170; 171) 'd': [isize; _]\n-    [173; 174) 'd': [isize; _]\n-    [185; 186) 'g': [[isize; _]; _]\n-    [189; 195) '[e, e]': [[isize; _]; _]\n-    [190; 191) 'e': [isize; _]\n-    [193; 194) 'e': [isize; _]\n-    [206; 207) 'h': [i32; _]\n-    [210; 216) '[1, 2]': [i32; _]\n-    [211; 212) '1': i32\n-    [214; 215) '2': i32\n-    [226; 227) 'i': [&str; _]\n-    [230; 240) '[\"a\", \"b\"]': [&str; _]\n-    [231; 234) '\"a\"': &str\n-    [236; 239) '\"b\"': &str\n-    [251; 252) 'b': [[&str; _]; _]\n-    [255; 265) '[a, [\"b\"]]': [[&str; _]; _]\n-    [256; 257) 'a': [&str; _]\n-    [259; 264) '[\"b\"]': [&str; _]\n-    [260; 263) '\"b\"': &str\n-    [275; 276) 'x': [u8; _]\n-    [288; 290) '[]': [u8; _]\n+    9..10 'x': &str\n+    18..19 'y': isize\n+    28..293 '{     ... []; }': ()\n+    38..39 'a': [&str; _]\n+    42..45 '[x]': [&str; _]\n+    43..44 'x': &str\n+    55..56 'b': [[&str; _]; _]\n+    59..65 '[a, a]': [[&str; _]; _]\n+    60..61 'a': [&str; _]\n+    63..64 'a': [&str; _]\n+    75..76 'c': [[[&str; _]; _]; _]\n+    79..85 '[b, b]': [[[&str; _]; _]; _]\n+    80..81 'b': [[&str; _]; _]\n+    83..84 'b': [[&str; _]; _]\n+    96..97 'd': [isize; _]\n+    100..112 '[y, 1, 2, 3]': [isize; _]\n+    101..102 'y': isize\n+    104..105 '1': isize\n+    107..108 '2': isize\n+    110..111 '3': isize\n+    122..123 'd': [isize; _]\n+    126..138 '[1, y, 2, 3]': [isize; _]\n+    127..128 '1': isize\n+    130..131 'y': isize\n+    133..134 '2': isize\n+    136..137 '3': isize\n+    148..149 'e': [isize; _]\n+    152..155 '[y]': [isize; _]\n+    153..154 'y': isize\n+    165..166 'f': [[isize; _]; _]\n+    169..175 '[d, d]': [[isize; _]; _]\n+    170..171 'd': [isize; _]\n+    173..174 'd': [isize; _]\n+    185..186 'g': [[isize; _]; _]\n+    189..195 '[e, e]': [[isize; _]; _]\n+    190..191 'e': [isize; _]\n+    193..194 'e': [isize; _]\n+    206..207 'h': [i32; _]\n+    210..216 '[1, 2]': [i32; _]\n+    211..212 '1': i32\n+    214..215 '2': i32\n+    226..227 'i': [&str; _]\n+    230..240 '[\"a\", \"b\"]': [&str; _]\n+    231..234 '\"a\"': &str\n+    236..239 '\"b\"': &str\n+    251..252 'b': [[&str; _]; _]\n+    255..265 '[a, [\"b\"]]': [[&str; _]; _]\n+    256..257 'a': [&str; _]\n+    259..264 '[\"b\"]': [&str; _]\n+    260..263 '\"b\"': &str\n+    275..276 'x': [u8; _]\n+    288..290 '[]': [u8; _]\n     \"###\n     );\n }\n@@ -1174,21 +1174,21 @@ fn test(a1: A<u32>, i: i32) {\n }\n \"#),\n         @r###\"\n-    [36; 38) 'a1': A<u32>\n-    [48; 49) 'i': i32\n-    [56; 147) '{     ...3.x; }': ()\n-    [62; 64) 'a1': A<u32>\n-    [62; 66) 'a1.x': u32\n-    [76; 78) 'a2': A<i32>\n-    [81; 91) 'A { x: i }': A<i32>\n-    [88; 89) 'i': i32\n-    [97; 99) 'a2': A<i32>\n-    [97; 101) 'a2.x': i32\n-    [111; 113) 'a3': A<i128>\n-    [116; 134) 'A::<i1...x: 1 }': A<i128>\n-    [131; 132) '1': i128\n-    [140; 142) 'a3': A<i128>\n-    [140; 144) 'a3.x': i128\n+    36..38 'a1': A<u32>\n+    48..49 'i': i32\n+    56..147 '{     ...3.x; }': ()\n+    62..64 'a1': A<u32>\n+    62..66 'a1.x': u32\n+    76..78 'a2': A<i32>\n+    81..91 'A { x: i }': A<i32>\n+    88..89 'i': i32\n+    97..99 'a2': A<i32>\n+    97..101 'a2.x': i32\n+    111..113 'a3': A<i128>\n+    116..134 'A::<i1...x: 1 }': A<i128>\n+    131..132 '1': i128\n+    140..142 'a3': A<i128>\n+    140..144 'a3.x': i128\n     \"###\n     );\n }\n@@ -1211,22 +1211,22 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [76; 184) '{     ...one; }': ()\n-    [82; 83) 'A': A<i32>(i32) -> A<i32>\n-    [82; 87) 'A(42)': A<i32>\n-    [84; 86) '42': i32\n-    [93; 94) 'A': A<u128>(u128) -> A<u128>\n-    [93; 102) 'A(42u128)': A<u128>\n-    [95; 101) '42u128': u128\n-    [108; 112) 'Some': Some<&str>(&str) -> Option<&str>\n-    [108; 117) 'Some(\"x\")': Option<&str>\n-    [113; 116) '\"x\"': &str\n-    [123; 135) 'Option::Some': Some<&str>(&str) -> Option<&str>\n-    [123; 140) 'Option...e(\"x\")': Option<&str>\n-    [136; 139) '\"x\"': &str\n-    [146; 150) 'None': Option<{unknown}>\n-    [160; 161) 'x': Option<i64>\n-    [177; 181) 'None': Option<i64>\n+    76..184 '{     ...one; }': ()\n+    82..83 'A': A<i32>(i32) -> A<i32>\n+    82..87 'A(42)': A<i32>\n+    84..86 '42': i32\n+    93..94 'A': A<u128>(u128) -> A<u128>\n+    93..102 'A(42u128)': A<u128>\n+    95..101 '42u128': u128\n+    108..112 'Some': Some<&str>(&str) -> Option<&str>\n+    108..117 'Some(\"x\")': Option<&str>\n+    113..116 '\"x\"': &str\n+    123..135 'Option::Some': Some<&str>(&str) -> Option<&str>\n+    123..140 'Option...e(\"x\")': Option<&str>\n+    136..139 '\"x\"': &str\n+    146..150 'None': Option<{unknown}>\n+    160..161 'x': Option<i64>\n+    177..181 'None': Option<i64>\n     \"###\n     );\n }\n@@ -1244,20 +1244,20 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [10; 11) 't': T\n-    [21; 26) '{ t }': T\n-    [23; 24) 't': T\n-    [38; 98) '{     ...(1); }': ()\n-    [44; 46) 'id': fn id<u32>(u32) -> u32\n-    [44; 52) 'id(1u32)': u32\n-    [47; 51) '1u32': u32\n-    [58; 68) 'id::<i128>': fn id<i128>(i128) -> i128\n-    [58; 71) 'id::<i128>(1)': i128\n-    [69; 70) '1': i128\n-    [81; 82) 'x': u64\n-    [90; 92) 'id': fn id<u64>(u64) -> u64\n-    [90; 95) 'id(1)': u64\n-    [93; 94) '1': u64\n+    10..11 't': T\n+    21..26 '{ t }': T\n+    23..24 't': T\n+    38..98 '{     ...(1); }': ()\n+    44..46 'id': fn id<u32>(u32) -> u32\n+    44..52 'id(1u32)': u32\n+    47..51 '1u32': u32\n+    58..68 'id::<i128>': fn id<i128>(i128) -> i128\n+    58..71 'id::<i128>(1)': i128\n+    69..70 '1': i128\n+    81..82 'x': u64\n+    90..92 'id': fn id<u64>(u64) -> u64\n+    90..95 'id(1)': u64\n+    93..94 '1': u64\n     \"###\n     );\n }\n@@ -1291,38 +1291,38 @@ fn test() -> i128 {\n }\n \"#),\n         @r###\"\n-    [74; 78) 'self': A<X, Y>\n-    [85; 107) '{     ...     }': X\n-    [95; 99) 'self': A<X, Y>\n-    [95; 101) 'self.x': X\n-    [117; 121) 'self': A<X, Y>\n-    [128; 150) '{     ...     }': Y\n-    [138; 142) 'self': A<X, Y>\n-    [138; 144) 'self.y': Y\n-    [163; 167) 'self': A<X, Y>\n-    [169; 170) 't': T\n-    [188; 223) '{     ...     }': (X, Y, T)\n-    [198; 217) '(self.....y, t)': (X, Y, T)\n-    [199; 203) 'self': A<X, Y>\n-    [199; 205) 'self.x': X\n-    [207; 211) 'self': A<X, Y>\n-    [207; 213) 'self.y': Y\n-    [215; 216) 't': T\n-    [245; 342) '{     ...(1); }': ()\n-    [255; 256) 'a': A<u64, i64>\n-    [259; 281) 'A { x:...1i64 }': A<u64, i64>\n-    [266; 270) '1u64': u64\n-    [275; 279) '1i64': i64\n-    [287; 288) 'a': A<u64, i64>\n-    [287; 292) 'a.x()': u64\n-    [298; 299) 'a': A<u64, i64>\n-    [298; 303) 'a.y()': i64\n-    [309; 310) 'a': A<u64, i64>\n-    [309; 319) 'a.z(1i128)': (u64, i64, i128)\n-    [313; 318) '1i128': i128\n-    [325; 326) 'a': A<u64, i64>\n-    [325; 339) 'a.z::<u128>(1)': (u64, i64, u128)\n-    [337; 338) '1': u128\n+    74..78 'self': A<X, Y>\n+    85..107 '{     ...     }': X\n+    95..99 'self': A<X, Y>\n+    95..101 'self.x': X\n+    117..121 'self': A<X, Y>\n+    128..150 '{     ...     }': Y\n+    138..142 'self': A<X, Y>\n+    138..144 'self.y': Y\n+    163..167 'self': A<X, Y>\n+    169..170 't': T\n+    188..223 '{     ...     }': (X, Y, T)\n+    198..217 '(self.....y, t)': (X, Y, T)\n+    199..203 'self': A<X, Y>\n+    199..205 'self.x': X\n+    207..211 'self': A<X, Y>\n+    207..213 'self.y': Y\n+    215..216 't': T\n+    245..342 '{     ...(1); }': ()\n+    255..256 'a': A<u64, i64>\n+    259..281 'A { x:...1i64 }': A<u64, i64>\n+    266..270 '1u64': u64\n+    275..279 '1i64': i64\n+    287..288 'a': A<u64, i64>\n+    287..292 'a.x()': u64\n+    298..299 'a': A<u64, i64>\n+    298..303 'a.y()': i64\n+    309..310 'a': A<u64, i64>\n+    309..319 'a.z(1i128)': (u64, i64, i128)\n+    313..318 '1i128': i128\n+    325..326 'a': A<u64, i64>\n+    325..339 'a.z::<u128>(1)': (u64, i64, u128)\n+    337..338 '1': u128\n     \"###\n     );\n }\n@@ -1344,15 +1344,15 @@ fn test(o: Option<u32>) {\n }\n \"#),\n         @r###\"\n-    [78; 82) 'self': &Option<T>\n-    [98; 100) '{}': ()\n-    [111; 112) 'o': Option<u32>\n-    [127; 165) '{     ...f(); }': ()\n-    [133; 146) '(&o).as_ref()': Option<&u32>\n-    [134; 136) '&o': &Option<u32>\n-    [135; 136) 'o': Option<u32>\n-    [152; 153) 'o': Option<u32>\n-    [152; 162) 'o.as_ref()': Option<&u32>\n+    78..82 'self': &Option<T>\n+    98..100 '{}': ()\n+    111..112 'o': Option<u32>\n+    127..165 '{     ...f(); }': ()\n+    133..146 '(&o).as_ref()': Option<&u32>\n+    134..136 '&o': &Option<u32>\n+    135..136 'o': Option<u32>\n+    152..153 'o': Option<u32>\n+    152..162 'o.as_ref()': Option<&u32>\n     \"###\n     );\n }\n@@ -1381,35 +1381,35 @@ fn test() -> i128 {\n }\n \"#),\n         @r###\"\n-    [53; 57) 'self': A<T2>\n-    [65; 87) '{     ...     }': T2\n-    [75; 79) 'self': A<T2>\n-    [75; 81) 'self.x': T2\n-    [99; 100) 't': T\n-    [110; 115) '{ t }': T\n-    [112; 113) 't': T\n-    [135; 261) '{     ....x() }': i128\n-    [146; 147) 'x': i128\n-    [150; 151) '1': i128\n-    [162; 163) 'y': i128\n-    [166; 168) 'id': fn id<i128>(i128) -> i128\n-    [166; 171) 'id(x)': i128\n-    [169; 170) 'x': i128\n-    [182; 183) 'a': A<i128>\n-    [186; 200) 'A { x: id(y) }': A<i128>\n-    [193; 195) 'id': fn id<i128>(i128) -> i128\n-    [193; 198) 'id(y)': i128\n-    [196; 197) 'y': i128\n-    [211; 212) 'z': i128\n-    [215; 217) 'id': fn id<i128>(i128) -> i128\n-    [215; 222) 'id(a.x)': i128\n-    [218; 219) 'a': A<i128>\n-    [218; 221) 'a.x': i128\n-    [233; 234) 'b': A<i128>\n-    [237; 247) 'A { x: z }': A<i128>\n-    [244; 245) 'z': i128\n-    [254; 255) 'b': A<i128>\n-    [254; 259) 'b.x()': i128\n+    53..57 'self': A<T2>\n+    65..87 '{     ...     }': T2\n+    75..79 'self': A<T2>\n+    75..81 'self.x': T2\n+    99..100 't': T\n+    110..115 '{ t }': T\n+    112..113 't': T\n+    135..261 '{     ....x() }': i128\n+    146..147 'x': i128\n+    150..151 '1': i128\n+    162..163 'y': i128\n+    166..168 'id': fn id<i128>(i128) -> i128\n+    166..171 'id(x)': i128\n+    169..170 'x': i128\n+    182..183 'a': A<i128>\n+    186..200 'A { x: id(y) }': A<i128>\n+    193..195 'id': fn id<i128>(i128) -> i128\n+    193..198 'id(y)': i128\n+    196..197 'y': i128\n+    211..212 'z': i128\n+    215..217 'id': fn id<i128>(i128) -> i128\n+    215..222 'id(a.x)': i128\n+    218..219 'a': A<i128>\n+    218..221 'a.x': i128\n+    233..234 'b': A<i128>\n+    237..247 'A { x: z }': A<i128>\n+    244..245 'z': i128\n+    254..255 'b': A<i128>\n+    254..259 'b.x()': i128\n     \"###\n     );\n }\n@@ -1447,16 +1447,16 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [52; 53) '1': u32\n-    [105; 106) '2': u32\n-    [213; 214) '5': u32\n-    [229; 307) '{     ...:ID; }': ()\n-    [239; 240) 'x': u32\n-    [243; 254) 'Struct::FOO': u32\n-    [264; 265) 'y': u32\n-    [268; 277) 'Enum::BAR': u32\n-    [287; 288) 'z': u32\n-    [291; 304) 'TraitTest::ID': u32\n+    52..53 '1': u32\n+    105..106 '2': u32\n+    213..214 '5': u32\n+    229..307 '{     ...:ID; }': ()\n+    239..240 'x': u32\n+    243..254 'Struct::FOO': u32\n+    264..265 'y': u32\n+    268..277 'Enum::BAR': u32\n+    287..288 'z': u32\n+    291..304 'TraitTest::ID': u32\n     \"###\n     );\n }\n@@ -1479,22 +1479,22 @@ fn test(x: Foo, y: Bar<&str>, z: Baz<i8, u8>) {\n }\n \"#),\n         @r###\"\n-    [116; 117) 'x': A<u32, i128>\n-    [124; 125) 'y': A<&str, u128>\n-    [138; 139) 'z': A<u8, i8>\n-    [154; 211) '{     ...z.y; }': ()\n-    [160; 161) 'x': A<u32, i128>\n-    [160; 163) 'x.x': u32\n-    [169; 170) 'x': A<u32, i128>\n-    [169; 172) 'x.y': i128\n-    [178; 179) 'y': A<&str, u128>\n-    [178; 181) 'y.x': &str\n-    [187; 188) 'y': A<&str, u128>\n-    [187; 190) 'y.y': u128\n-    [196; 197) 'z': A<u8, i8>\n-    [196; 199) 'z.x': u8\n-    [205; 206) 'z': A<u8, i8>\n-    [205; 208) 'z.y': i8\n+    116..117 'x': A<u32, i128>\n+    124..125 'y': A<&str, u128>\n+    138..139 'z': A<u8, i8>\n+    154..211 '{     ...z.y; }': ()\n+    160..161 'x': A<u32, i128>\n+    160..163 'x.x': u32\n+    169..170 'x': A<u32, i128>\n+    169..172 'x.y': i128\n+    178..179 'y': A<&str, u128>\n+    178..181 'y.x': &str\n+    187..188 'y': A<&str, u128>\n+    187..190 'y.y': u128\n+    196..197 'z': A<u8, i8>\n+    196..199 'z.x': u8\n+    205..206 'z': A<u8, i8>\n+    205..208 'z.y': i8\n     \"###\n     )\n }\n@@ -1509,8 +1509,8 @@ type Bar = A<Bar>;\n fn test(x: Foo) {}\n \"#),\n         @r###\"\n-    [59; 60) 'x': {unknown}\n-    [67; 69) '{}': ()\n+    59..60 'x': {unknown}\n+    67..69 '{}': ()\n     \"###\n     )\n }\n@@ -1535,26 +1535,26 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [10; 11) 'x': T\n-    [21; 30) '{     x }': T\n-    [27; 28) 'x': T\n-    [44; 45) 'x': &T\n-    [56; 66) '{     *x }': T\n-    [62; 64) '*x': T\n-    [63; 64) 'x': &T\n-    [78; 158) '{     ...(1); }': ()\n-    [88; 89) 'y': u32\n-    [92; 97) '10u32': u32\n-    [103; 105) 'id': fn id<u32>(u32) -> u32\n-    [103; 108) 'id(y)': u32\n-    [106; 107) 'y': u32\n-    [118; 119) 'x': bool\n-    [128; 133) 'clone': fn clone<bool>(&bool) -> bool\n-    [128; 136) 'clone(z)': bool\n-    [134; 135) 'z': &bool\n-    [142; 152) 'id::<i128>': fn id<i128>(i128) -> i128\n-    [142; 155) 'id::<i128>(1)': i128\n-    [153; 154) '1': i128\n+    10..11 'x': T\n+    21..30 '{     x }': T\n+    27..28 'x': T\n+    44..45 'x': &T\n+    56..66 '{     *x }': T\n+    62..64 '*x': T\n+    63..64 'x': &T\n+    78..158 '{     ...(1); }': ()\n+    88..89 'y': u32\n+    92..97 '10u32': u32\n+    103..105 'id': fn id<u32>(u32) -> u32\n+    103..108 'id(y)': u32\n+    106..107 'y': u32\n+    118..119 'x': bool\n+    128..133 'clone': fn clone<bool>(&bool) -> bool\n+    128..136 'clone(z)': bool\n+    134..135 'z': &bool\n+    142..152 'id::<i128>': fn id<i128>(i128) -> i128\n+    142..155 'id::<i128>(1)': i128\n+    153..154 '1': i128\n     \"###\n     );\n }\n@@ -1574,16 +1574,16 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [49; 50) '0': u32\n-    [80; 83) '101': u32\n-    [95; 213) '{     ...NST; }': ()\n-    [138; 139) 'x': u32\n-    [142; 153) 'LOCAL_CONST': u32\n-    [163; 164) 'z': u32\n-    [167; 179) 'GLOBAL_CONST': u32\n-    [189; 191) 'id': u32\n-    [194; 210) 'Foo::A..._CONST': u32\n-    [126; 128) '99': u32\n+    49..50 '0': u32\n+    80..83 '101': u32\n+    95..213 '{     ...NST; }': ()\n+    138..139 'x': u32\n+    142..153 'LOCAL_CONST': u32\n+    163..164 'z': u32\n+    167..179 'GLOBAL_CONST': u32\n+    189..191 'id': u32\n+    194..210 'Foo::A..._CONST': u32\n+    126..128 '99': u32\n     \"###\n     );\n }\n@@ -1604,19 +1604,19 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [29; 32) '101': u32\n-    [70; 73) '101': u32\n-    [85; 280) '{     ...MUT; }': ()\n-    [173; 174) 'x': u32\n-    [177; 189) 'LOCAL_STATIC': u32\n-    [199; 200) 'y': u32\n-    [203; 219) 'LOCAL_...IC_MUT': u32\n-    [229; 230) 'z': u32\n-    [233; 246) 'GLOBAL_STATIC': u32\n-    [256; 257) 'w': u32\n-    [260; 277) 'GLOBAL...IC_MUT': u32\n-    [118; 120) '99': u32\n-    [161; 163) '99': u32\n+    29..32 '101': u32\n+    70..73 '101': u32\n+    85..280 '{     ...MUT; }': ()\n+    173..174 'x': u32\n+    177..189 'LOCAL_STATIC': u32\n+    199..200 'y': u32\n+    203..219 'LOCAL_...IC_MUT': u32\n+    229..230 'z': u32\n+    233..246 'GLOBAL_STATIC': u32\n+    256..257 'w': u32\n+    260..277 'GLOBAL...IC_MUT': u32\n+    118..120 '99': u32\n+    161..163 '99': u32\n     \"###\n     );\n }\n@@ -1684,12 +1684,12 @@ fn foo() -> u32 {\n }\n \"#),\n         @r###\"\n-    [17; 59) '{     ...; }; }': ()\n-    [27; 28) 'x': || -> usize\n-    [31; 56) '|| -> ...n 1; }': || -> usize\n-    [43; 56) '{ return 1; }': !\n-    [45; 53) 'return 1': !\n-    [52; 53) '1': usize\n+    17..59 '{     ...; }; }': ()\n+    27..28 'x': || -> usize\n+    31..56 '|| -> ...n 1; }': || -> usize\n+    43..56 '{ return 1; }': !\n+    45..53 'return 1': !\n+    52..53 '1': usize\n     \"###\n     );\n }\n@@ -1703,11 +1703,11 @@ fn foo() -> u32 {\n }\n \"#),\n         @r###\"\n-    [17; 48) '{     ...; }; }': ()\n-    [27; 28) 'x': || -> ()\n-    [31; 45) '|| { return; }': || -> ()\n-    [34; 45) '{ return; }': !\n-    [36; 42) 'return': !\n+    17..48 '{     ...; }; }': ()\n+    27..28 'x': || -> ()\n+    31..45 '|| { return; }': || -> ()\n+    34..45 '{ return; }': !\n+    36..42 'return': !\n     \"###\n     );\n }\n@@ -1721,11 +1721,11 @@ fn foo() -> u32 {\n }\n \"#),\n         @r###\"\n-    [17; 47) '{     ...\" }; }': ()\n-    [27; 28) 'x': || -> &str\n-    [31; 44) '|| { \"test\" }': || -> &str\n-    [34; 44) '{ \"test\" }': &str\n-    [36; 42) '\"test\"': &str\n+    17..47 '{     ...\" }; }': ()\n+    27..28 'x': || -> &str\n+    31..44 '|| { \"test\" }': || -> &str\n+    34..44 '{ \"test\" }': &str\n+    36..42 '\"test\"': &str\n     \"###\n     );\n }\n@@ -1744,14 +1744,14 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    [48; 121) '{     ...hod; }': ()\n-    [58; 64) 'vtable': Vtable\n-    [67; 91) 'Vtable...| {} }': Vtable\n-    [84; 89) '|| {}': || -> ()\n-    [87; 89) '{}': ()\n-    [101; 102) 'm': fn()\n-    [105; 111) 'vtable': Vtable\n-    [105; 118) 'vtable.method': fn()\n+    48..121 '{     ...hod; }': ()\n+    58..64 'vtable': Vtable\n+    67..91 'Vtable...| {} }': Vtable\n+    84..89 '|| {}': || -> ()\n+    87..89 '{}': ()\n+    101..102 'm': fn()\n+    105..111 'vtable': Vtable\n+    105..118 'vtable.method': fn()\n     \"###\n     );\n }"}, {"sha": "f51cdd4964b56e1b48a581fdc6f12e79dd9df48b", "filename": "crates/ra_hir_ty/src/tests/traits.rs", "status": "modified", "additions": 553, "deletions": 553, "changes": 1106, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -256,16 +256,16 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [86; 87) 't': T\n-    [92; 94) '{}': ()\n-    [105; 144) '{     ...(s); }': ()\n-    [115; 116) 's': S<u32>\n-    [119; 120) 'S': S<u32>(u32) -> S<u32>\n-    [119; 129) 'S(unknown)': S<u32>\n-    [121; 128) 'unknown': u32\n-    [135; 138) 'foo': fn foo<S<u32>>(S<u32>)\n-    [135; 141) 'foo(s)': ()\n-    [139; 140) 's': S<u32>\n+    86..87 't': T\n+    92..94 '{}': ()\n+    105..144 '{     ...(s); }': ()\n+    115..116 's': S<u32>\n+    119..120 'S': S<u32>(u32) -> S<u32>\n+    119..129 'S(unknown)': S<u32>\n+    121..128 'unknown': u32\n+    135..138 'foo': fn foo<S<u32>>(S<u32>)\n+    135..141 'foo(s)': ()\n+    139..140 's': S<u32>\n     \"###\n     );\n }\n@@ -284,17 +284,17 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [87; 88) 't': T\n-    [98; 100) '{}': ()\n-    [111; 163) '{     ...(s); }': ()\n-    [121; 122) 's': S<u32>\n-    [125; 126) 'S': S<u32>(u32) -> S<u32>\n-    [125; 135) 'S(unknown)': S<u32>\n-    [127; 134) 'unknown': u32\n-    [145; 146) 'x': u32\n-    [154; 157) 'foo': fn foo<u32, S<u32>>(S<u32>) -> u32\n-    [154; 160) 'foo(s)': u32\n-    [158; 159) 's': S<u32>\n+    87..88 't': T\n+    98..100 '{}': ()\n+    111..163 '{     ...(s); }': ()\n+    121..122 's': S<u32>\n+    125..126 'S': S<u32>(u32) -> S<u32>\n+    125..135 'S(unknown)': S<u32>\n+    127..134 'unknown': u32\n+    145..146 'x': u32\n+    154..157 'foo': fn foo<u32, S<u32>>(S<u32>) -> u32\n+    154..160 'foo(s)': u32\n+    158..159 's': S<u32>\n     \"###\n     );\n }\n@@ -312,12 +312,12 @@ trait Trait {\n }\n \"#),\n         @r###\"\n-    [27; 31) 'self': &Self\n-    [53; 57) 'self': &Self\n-    [62; 97) '{     ...     }': ()\n-    [76; 77) 'x': i64\n-    [80; 84) 'self': &Self\n-    [80; 90) 'self.foo()': i64\n+    27..31 'self': &Self\n+    53..57 'self': &Self\n+    62..97 '{     ...     }': ()\n+    76..77 'x': i64\n+    80..84 'self': &Self\n+    80..90 'self.foo()': i64\n     \"###\n     );\n }\n@@ -337,12 +337,12 @@ trait Trait: SuperTrait {\n }\n \"#),\n         @r###\"\n-    [32; 36) 'self': &Self\n-    [86; 90) 'self': &Self\n-    [95; 130) '{     ...     }': ()\n-    [109; 110) 'x': i64\n-    [113; 117) 'self': &Self\n-    [113; 123) 'self.foo()': i64\n+    32..36 'self': &Self\n+    86..90 'self': &Self\n+    95..130 '{     ...     }': ()\n+    109..110 'x': i64\n+    113..117 'self': &Self\n+    113..123 'self.foo()': i64\n     \"###\n     );\n }\n@@ -364,15 +364,15 @@ fn test<T: Iterable>() {\n }\n \"#),\n         @r###\"\n-    [108; 261) '{     ...ter; }': ()\n-    [118; 119) 'x': u32\n-    [145; 146) '1': u32\n-    [156; 157) 'y': Iterable::Item<T>\n-    [183; 192) 'no_matter': Iterable::Item<T>\n-    [202; 203) 'z': Iterable::Item<T>\n-    [215; 224) 'no_matter': Iterable::Item<T>\n-    [234; 235) 'a': Iterable::Item<T>\n-    [249; 258) 'no_matter': Iterable::Item<T>\n+    108..261 '{     ...ter; }': ()\n+    118..119 'x': u32\n+    145..146 '1': u32\n+    156..157 'y': Iterable::Item<T>\n+    183..192 'no_matter': Iterable::Item<T>\n+    202..203 'z': Iterable::Item<T>\n+    215..224 'no_matter': Iterable::Item<T>\n+    234..235 'a': Iterable::Item<T>\n+    249..258 'no_matter': Iterable::Item<T>\n     \"###\n     );\n }\n@@ -396,25 +396,25 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [106; 107) 't': T\n-    [123; 125) '{}': ()\n-    [147; 148) 't': T\n-    [178; 180) '{}': ()\n-    [202; 203) 't': T\n-    [221; 223) '{}': ()\n-    [234; 300) '{     ...(S); }': ()\n-    [244; 245) 'x': u32\n-    [248; 252) 'foo1': fn foo1<S>(S) -> <S as Iterable>::Item\n-    [248; 255) 'foo1(S)': u32\n-    [253; 254) 'S': S\n-    [265; 266) 'y': u32\n-    [269; 273) 'foo2': fn foo2<S>(S) -> <S as Iterable>::Item\n-    [269; 276) 'foo2(S)': u32\n-    [274; 275) 'S': S\n-    [286; 287) 'z': u32\n-    [290; 294) 'foo3': fn foo3<S>(S) -> <S as Iterable>::Item\n-    [290; 297) 'foo3(S)': u32\n-    [295; 296) 'S': S\n+    106..107 't': T\n+    123..125 '{}': ()\n+    147..148 't': T\n+    178..180 '{}': ()\n+    202..203 't': T\n+    221..223 '{}': ()\n+    234..300 '{     ...(S); }': ()\n+    244..245 'x': u32\n+    248..252 'foo1': fn foo1<S>(S) -> <S as Iterable>::Item\n+    248..255 'foo1(S)': u32\n+    253..254 'S': S\n+    265..266 'y': u32\n+    269..273 'foo2': fn foo2<S>(S) -> <S as Iterable>::Item\n+    269..276 'foo2(S)': u32\n+    274..275 'S': S\n+    286..287 'z': u32\n+    290..294 'foo3': fn foo3<S>(S) -> <S as Iterable>::Item\n+    290..297 'foo3(S)': u32\n+    295..296 'S': S\n     \"###\n     );\n }\n@@ -431,9 +431,9 @@ fn test<T: Iterable<Item=u32>>() {\n }\n \"#),\n         @r###\"\n-    [67; 100) '{     ...own; }': ()\n-    [77; 78) 'y': u32\n-    [90; 97) 'unknown': u32\n+    67..100 '{     ...own; }': ()\n+    77..78 'y': u32\n+    90..97 'unknown': u32\n     \"###\n     );\n }\n@@ -446,13 +446,13 @@ const A: u32 = 1 + 1;\n static B: u64 = { let x = 1; x };\n \"#),\n         @r###\"\n-    [16; 17) '1': u32\n-    [16; 21) '1 + 1': u32\n-    [20; 21) '1': u32\n-    [39; 55) '{ let ...1; x }': u64\n-    [45; 46) 'x': u64\n-    [49; 50) '1': u64\n-    [52; 53) 'x': u64\n+    16..17 '1': u32\n+    16..21 '1 + 1': u32\n+    20..21 '1': u32\n+    39..55 '{ let ...1; x }': u64\n+    45..46 'x': u64\n+    49..50 '1': u64\n+    52..53 'x': u64\n     \"###\n     );\n }\n@@ -469,17 +469,17 @@ fn test() -> u64 {\n }\n \"#),\n         @r###\"\n-    [38; 87) '{     ... a.1 }': u64\n-    [48; 49) 'a': S\n-    [52; 53) 'S': S(i32, u64) -> S\n-    [52; 59) 'S(4, 6)': S\n-    [54; 55) '4': i32\n-    [57; 58) '6': u64\n-    [69; 70) 'b': i32\n-    [73; 74) 'a': S\n-    [73; 76) 'a.0': i32\n-    [82; 83) 'a': S\n-    [82; 85) 'a.1': u64\n+    38..87 '{     ... a.1 }': u64\n+    48..49 'a': S\n+    52..53 'S': S(i32, u64) -> S\n+    52..59 'S(4, 6)': S\n+    54..55 '4': i32\n+    57..58 '6': u64\n+    69..70 'b': i32\n+    73..74 'a': S\n+    73..76 'a.0': i32\n+    82..83 'a': S\n+    82..85 'a.1': u64\n     \"###\n     );\n }\n@@ -496,24 +496,24 @@ fn test() -> u64 {\n }\n \"#),\n         @r###\"\n-    [44; 102) '{     ...0(2) }': u64\n-    [54; 55) 'a': S\n-    [58; 59) 'S': S(fn(u32) -> u64) -> S\n-    [58; 68) 'S(|i| 2*i)': S\n-    [60; 67) '|i| 2*i': |u32| -> u64\n-    [61; 62) 'i': u32\n-    [64; 65) '2': u32\n-    [64; 67) '2*i': u32\n-    [66; 67) 'i': u32\n-    [78; 79) 'b': u64\n-    [82; 83) 'a': S\n-    [82; 85) 'a.0': fn(u32) -> u64\n-    [82; 88) 'a.0(4)': u64\n-    [86; 87) '4': u32\n-    [94; 95) 'a': S\n-    [94; 97) 'a.0': fn(u32) -> u64\n-    [94; 100) 'a.0(2)': u64\n-    [98; 99) '2': u32\n+    44..102 '{     ...0(2) }': u64\n+    54..55 'a': S\n+    58..59 'S': S(fn(u32) -> u64) -> S\n+    58..68 'S(|i| 2*i)': S\n+    60..67 '|i| 2*i': |u32| -> u64\n+    61..62 'i': u32\n+    64..65 '2': u32\n+    64..67 '2*i': u32\n+    66..67 'i': u32\n+    78..79 'b': u64\n+    82..83 'a': S\n+    82..85 'a.0': fn(u32) -> u64\n+    82..88 'a.0(4)': u64\n+    86..87 '4': u32\n+    94..95 'a': S\n+    94..97 'a.0': fn(u32) -> u64\n+    94..100 'a.0(2)': u64\n+    98..99 '2': u32\n     \"###\n     );\n }\n@@ -523,12 +523,12 @@ fn indexing_arrays() {\n     assert_snapshot!(\n         infer(\"fn main() { &mut [9][2]; }\"),\n         @r###\"\n-    [10; 26) '{ &mut...[2]; }': ()\n-    [12; 23) '&mut [9][2]': &mut {unknown}\n-    [17; 20) '[9]': [i32; _]\n-    [17; 23) '[9][2]': {unknown}\n-    [18; 19) '9': i32\n-    [21; 22) '2': i32\n+    10..26 '{ &mut...[2]; }': ()\n+    12..23 '&mut [9][2]': &mut {unknown}\n+    17..20 '[9]': [i32; _]\n+    17..23 '[9][2]': {unknown}\n+    18..19 '9': i32\n+    21..22 '2': i32\n     \"###\n     )\n }\n@@ -944,34 +944,34 @@ fn test(x: impl Trait<u64>, y: &impl Trait<u32>) {\n }\n \"#, true),\n         @r###\"\n-    [30; 34) 'self': &Self\n-    [55; 59) 'self': &Self\n-    [78; 79) 'x': impl Trait<u16>\n-    [98; 100) '{}': ()\n-    [155; 156) 'x': impl Trait<u64>\n-    [175; 176) 'y': &impl Trait<u32>\n-    [196; 324) '{     ...2(); }': ()\n-    [202; 203) 'x': impl Trait<u64>\n-    [209; 210) 'y': &impl Trait<u32>\n-    [220; 221) 'z': S<u16>\n-    [224; 225) 'S': S<u16>(u16) -> S<u16>\n-    [224; 228) 'S(1)': S<u16>\n-    [226; 227) '1': u16\n-    [234; 237) 'bar': fn bar(S<u16>)\n-    [234; 240) 'bar(z)': ()\n-    [238; 239) 'z': S<u16>\n-    [246; 247) 'x': impl Trait<u64>\n-    [246; 253) 'x.foo()': u64\n-    [259; 260) 'y': &impl Trait<u32>\n-    [259; 266) 'y.foo()': u32\n-    [272; 273) 'z': S<u16>\n-    [272; 279) 'z.foo()': u16\n-    [285; 286) 'x': impl Trait<u64>\n-    [285; 293) 'x.foo2()': i64\n-    [299; 300) 'y': &impl Trait<u32>\n-    [299; 307) 'y.foo2()': i64\n-    [313; 314) 'z': S<u16>\n-    [313; 321) 'z.foo2()': i64\n+    30..34 'self': &Self\n+    55..59 'self': &Self\n+    78..79 'x': impl Trait<u16>\n+    98..100 '{}': ()\n+    155..156 'x': impl Trait<u64>\n+    175..176 'y': &impl Trait<u32>\n+    196..324 '{     ...2(); }': ()\n+    202..203 'x': impl Trait<u64>\n+    209..210 'y': &impl Trait<u32>\n+    220..221 'z': S<u16>\n+    224..225 'S': S<u16>(u16) -> S<u16>\n+    224..228 'S(1)': S<u16>\n+    226..227 '1': u16\n+    234..237 'bar': fn bar(S<u16>)\n+    234..240 'bar(z)': ()\n+    238..239 'z': S<u16>\n+    246..247 'x': impl Trait<u64>\n+    246..253 'x.foo()': u64\n+    259..260 'y': &impl Trait<u32>\n+    259..266 'y.foo()': u32\n+    272..273 'z': S<u16>\n+    272..279 'z.foo()': u16\n+    285..286 'x': impl Trait<u64>\n+    285..293 'x.foo2()': i64\n+    299..300 'y': &impl Trait<u32>\n+    299..307 'y.foo2()': i64\n+    313..314 'z': S<u16>\n+    313..321 'z.foo2()': i64\n     \"###\n     );\n }\n@@ -1005,39 +1005,39 @@ fn test() {\n }\n \"#, true),\n         @r###\"\n-    [156; 157) 'x': impl Trait\n-    [176; 187) '{ loop {} }': T\n-    [178; 185) 'loop {}': !\n-    [183; 185) '{}': ()\n-    [200; 201) 'x': impl Trait\n-    [220; 231) '{ loop {} }': T\n-    [222; 229) 'loop {}': !\n-    [227; 229) '{}': ()\n-    [301; 510) '{     ... i32 }': ()\n-    [307; 315) 'Foo::bar': fn bar<{unknown}, {unknown}>(S) -> {unknown}\n-    [307; 318) 'Foo::bar(S)': {unknown}\n-    [316; 317) 'S': S\n-    [324; 339) '<F as Foo>::bar': fn bar<F, {unknown}>(S) -> {unknown}\n-    [324; 342) '<F as ...bar(S)': {unknown}\n-    [340; 341) 'S': S\n-    [348; 354) 'F::bar': fn bar<F, {unknown}>(S) -> {unknown}\n-    [348; 357) 'F::bar(S)': {unknown}\n-    [355; 356) 'S': S\n-    [363; 378) 'Foo::bar::<u32>': fn bar<{unknown}, u32>(S) -> u32\n-    [363; 381) 'Foo::b...32>(S)': u32\n-    [379; 380) 'S': S\n-    [387; 409) '<F as ...:<u32>': fn bar<F, u32>(S) -> u32\n-    [387; 412) '<F as ...32>(S)': u32\n-    [410; 411) 'S': S\n-    [419; 422) 'foo': fn foo<{unknown}>(S) -> {unknown}\n-    [419; 425) 'foo(S)': {unknown}\n-    [423; 424) 'S': S\n-    [431; 441) 'foo::<u32>': fn foo<u32>(S) -> u32\n-    [431; 444) 'foo::<u32>(S)': u32\n-    [442; 443) 'S': S\n-    [450; 465) 'foo::<u32, i32>': fn foo<u32>(S) -> u32\n-    [450; 468) 'foo::<...32>(S)': u32\n-    [466; 467) 'S': S\n+    156..157 'x': impl Trait\n+    176..187 '{ loop {} }': T\n+    178..185 'loop {}': !\n+    183..185 '{}': ()\n+    200..201 'x': impl Trait\n+    220..231 '{ loop {} }': T\n+    222..229 'loop {}': !\n+    227..229 '{}': ()\n+    301..510 '{     ... i32 }': ()\n+    307..315 'Foo::bar': fn bar<{unknown}, {unknown}>(S) -> {unknown}\n+    307..318 'Foo::bar(S)': {unknown}\n+    316..317 'S': S\n+    324..339 '<F as Foo>::bar': fn bar<F, {unknown}>(S) -> {unknown}\n+    324..342 '<F as ...bar(S)': {unknown}\n+    340..341 'S': S\n+    348..354 'F::bar': fn bar<F, {unknown}>(S) -> {unknown}\n+    348..357 'F::bar(S)': {unknown}\n+    355..356 'S': S\n+    363..378 'Foo::bar::<u32>': fn bar<{unknown}, u32>(S) -> u32\n+    363..381 'Foo::b...32>(S)': u32\n+    379..380 'S': S\n+    387..409 '<F as ...:<u32>': fn bar<F, u32>(S) -> u32\n+    387..412 '<F as ...32>(S)': u32\n+    410..411 'S': S\n+    419..422 'foo': fn foo<{unknown}>(S) -> {unknown}\n+    419..425 'foo(S)': {unknown}\n+    423..424 'S': S\n+    431..441 'foo::<u32>': fn foo<u32>(S) -> u32\n+    431..444 'foo::<u32>(S)': u32\n+    442..443 'S': S\n+    450..465 'foo::<u32, i32>': fn foo<u32>(S) -> u32\n+    450..468 'foo::<...32>(S)': u32\n+    466..467 'S': S\n     \"###\n     );\n }\n@@ -1062,24 +1062,24 @@ fn test() {\n }\n \"#, true),\n         @r###\"\n-    [88; 92) 'self': F<T>\n-    [94; 95) 'x': impl Trait\n-    [119; 130) '{ loop {} }': (T, U)\n-    [121; 128) 'loop {}': !\n-    [126; 128) '{}': ()\n-    [144; 284) '{     ...ored }': ()\n-    [150; 151) 'F': F<{unknown}>\n-    [150; 158) 'F.foo(S)': ({unknown}, {unknown})\n-    [156; 157) 'S': S\n-    [164; 172) 'F::<u32>': F<u32>\n-    [164; 179) 'F::<u32>.foo(S)': (u32, {unknown})\n-    [177; 178) 'S': S\n-    [185; 193) 'F::<u32>': F<u32>\n-    [185; 207) 'F::<u3...32>(S)': (u32, i32)\n-    [205; 206) 'S': S\n-    [213; 221) 'F::<u32>': F<u32>\n-    [213; 240) 'F::<u3...32>(S)': (u32, i32)\n-    [238; 239) 'S': S\n+    88..92 'self': F<T>\n+    94..95 'x': impl Trait\n+    119..130 '{ loop {} }': (T, U)\n+    121..128 'loop {}': !\n+    126..128 '{}': ()\n+    144..284 '{     ...ored }': ()\n+    150..151 'F': F<{unknown}>\n+    150..158 'F.foo(S)': ({unknown}, {unknown})\n+    156..157 'S': S\n+    164..172 'F::<u32>': F<u32>\n+    164..179 'F::<u32>.foo(S)': (u32, {unknown})\n+    177..178 'S': S\n+    185..193 'F::<u32>': F<u32>\n+    185..207 'F::<u3...32>(S)': (u32, i32)\n+    205..206 'S': S\n+    213..221 'F::<u32>': F<u32>\n+    213..240 'F::<u3...32>(S)': (u32, i32)\n+    238..239 'S': S\n     \"###\n     );\n }\n@@ -1098,13 +1098,13 @@ fn test() {\n }\n \"#, true),\n         @r###\"\n-    [23; 24) 'x': impl Trait\n-    [38; 49) '{ loop {} }': ()\n-    [40; 47) 'loop {}': !\n-    [45; 47) '{}': ()\n-    [91; 124) '{     ...foo; }': ()\n-    [101; 102) 'f': fn(S)\n-    [118; 121) 'foo': fn foo(S)\n+    23..24 'x': impl Trait\n+    38..49 '{ loop {} }': ()\n+    40..47 'loop {}': !\n+    45..47 '{}': ()\n+    91..124 '{     ...foo; }': ()\n+    101..102 'f': fn(S)\n+    118..121 'foo': fn foo(S)\n     \"###\n     );\n }\n@@ -1133,29 +1133,29 @@ fn test(x: impl Trait<u64>, y: &impl Trait<u64>) {\n }\n \"#),\n         @r###\"\n-    [30; 34) 'self': &Self\n-    [55; 59) 'self': &Self\n-    [99; 101) '{}': ()\n-    [111; 112) 'x': impl Trait<u64>\n-    [131; 132) 'y': &impl Trait<u64>\n-    [152; 269) '{     ...2(); }': ()\n-    [158; 159) 'x': impl Trait<u64>\n-    [165; 166) 'y': &impl Trait<u64>\n-    [176; 177) 'z': impl Trait<u64>\n-    [180; 183) 'bar': fn bar() -> impl Trait<u64>\n-    [180; 185) 'bar()': impl Trait<u64>\n-    [191; 192) 'x': impl Trait<u64>\n-    [191; 198) 'x.foo()': u64\n-    [204; 205) 'y': &impl Trait<u64>\n-    [204; 211) 'y.foo()': u64\n-    [217; 218) 'z': impl Trait<u64>\n-    [217; 224) 'z.foo()': u64\n-    [230; 231) 'x': impl Trait<u64>\n-    [230; 238) 'x.foo2()': i64\n-    [244; 245) 'y': &impl Trait<u64>\n-    [244; 252) 'y.foo2()': i64\n-    [258; 259) 'z': impl Trait<u64>\n-    [258; 266) 'z.foo2()': i64\n+    30..34 'self': &Self\n+    55..59 'self': &Self\n+    99..101 '{}': ()\n+    111..112 'x': impl Trait<u64>\n+    131..132 'y': &impl Trait<u64>\n+    152..269 '{     ...2(); }': ()\n+    158..159 'x': impl Trait<u64>\n+    165..166 'y': &impl Trait<u64>\n+    176..177 'z': impl Trait<u64>\n+    180..183 'bar': fn bar() -> impl Trait<u64>\n+    180..185 'bar()': impl Trait<u64>\n+    191..192 'x': impl Trait<u64>\n+    191..198 'x.foo()': u64\n+    204..205 'y': &impl Trait<u64>\n+    204..211 'y.foo()': u64\n+    217..218 'z': impl Trait<u64>\n+    217..224 'z.foo()': u64\n+    230..231 'x': impl Trait<u64>\n+    230..238 'x.foo2()': i64\n+    244..245 'y': &impl Trait<u64>\n+    244..252 'y.foo2()': i64\n+    258..259 'z': impl Trait<u64>\n+    258..266 'z.foo2()': i64\n     \"###\n     );\n }\n@@ -1183,29 +1183,29 @@ fn test(x: dyn Trait<u64>, y: &dyn Trait<u64>) {\n }\n \"#),\n         @r###\"\n-    [30; 34) 'self': &Self\n-    [55; 59) 'self': &Self\n-    [98; 100) '{}': ()\n-    [110; 111) 'x': dyn Trait<u64>\n-    [129; 130) 'y': &dyn Trait<u64>\n-    [149; 266) '{     ...2(); }': ()\n-    [155; 156) 'x': dyn Trait<u64>\n-    [162; 163) 'y': &dyn Trait<u64>\n-    [173; 174) 'z': dyn Trait<u64>\n-    [177; 180) 'bar': fn bar() -> dyn Trait<u64>\n-    [177; 182) 'bar()': dyn Trait<u64>\n-    [188; 189) 'x': dyn Trait<u64>\n-    [188; 195) 'x.foo()': u64\n-    [201; 202) 'y': &dyn Trait<u64>\n-    [201; 208) 'y.foo()': u64\n-    [214; 215) 'z': dyn Trait<u64>\n-    [214; 221) 'z.foo()': u64\n-    [227; 228) 'x': dyn Trait<u64>\n-    [227; 235) 'x.foo2()': i64\n-    [241; 242) 'y': &dyn Trait<u64>\n-    [241; 249) 'y.foo2()': i64\n-    [255; 256) 'z': dyn Trait<u64>\n-    [255; 263) 'z.foo2()': i64\n+    30..34 'self': &Self\n+    55..59 'self': &Self\n+    98..100 '{}': ()\n+    110..111 'x': dyn Trait<u64>\n+    129..130 'y': &dyn Trait<u64>\n+    149..266 '{     ...2(); }': ()\n+    155..156 'x': dyn Trait<u64>\n+    162..163 'y': &dyn Trait<u64>\n+    173..174 'z': dyn Trait<u64>\n+    177..180 'bar': fn bar() -> dyn Trait<u64>\n+    177..182 'bar()': dyn Trait<u64>\n+    188..189 'x': dyn Trait<u64>\n+    188..195 'x.foo()': u64\n+    201..202 'y': &dyn Trait<u64>\n+    201..208 'y.foo()': u64\n+    214..215 'z': dyn Trait<u64>\n+    214..221 'z.foo()': u64\n+    227..228 'x': dyn Trait<u64>\n+    227..235 'x.foo2()': i64\n+    241..242 'y': &dyn Trait<u64>\n+    241..249 'y.foo2()': i64\n+    255..256 'z': dyn Trait<u64>\n+    255..263 'z.foo2()': i64\n     \"###\n     );\n }\n@@ -1231,17 +1231,17 @@ fn test(s: S<u32, i32>) {\n }\n \"#),\n         @r###\"\n-    [33; 37) 'self': &Self\n-    [103; 107) 'self': &S<T, U>\n-    [129; 140) '{ loop {} }': &dyn Trait<T, U>\n-    [131; 138) 'loop {}': !\n-    [136; 138) '{}': ()\n-    [176; 180) 'self': &Self\n-    [252; 253) 's': S<u32, i32>\n-    [268; 290) '{     ...z(); }': ()\n-    [274; 275) 's': S<u32, i32>\n-    [274; 281) 's.bar()': &dyn Trait<u32, i32>\n-    [274; 287) 's.bar().baz()': (u32, i32)\n+    33..37 'self': &Self\n+    103..107 'self': &S<T, U>\n+    129..140 '{ loop {} }': &dyn Trait<T, U>\n+    131..138 'loop {}': !\n+    136..138 '{}': ()\n+    176..180 'self': &Self\n+    252..253 's': S<u32, i32>\n+    268..290 '{     ...z(); }': ()\n+    274..275 's': S<u32, i32>\n+    274..281 's.bar()': &dyn Trait<u32, i32>\n+    274..287 's.bar().baz()': (u32, i32)\n     \"###\n     );\n }\n@@ -1265,22 +1265,22 @@ fn test(x: Trait, y: &Trait) -> u64 {\n }\n \"#),\n         @r###\"\n-    [27; 31) 'self': &Self\n-    [61; 63) '{}': ()\n-    [73; 74) 'x': dyn Trait\n-    [83; 84) 'y': &dyn Trait\n-    [101; 176) '{     ...o(); }': ()\n-    [107; 108) 'x': dyn Trait\n-    [114; 115) 'y': &dyn Trait\n-    [125; 126) 'z': dyn Trait\n-    [129; 132) 'bar': fn bar() -> dyn Trait\n-    [129; 134) 'bar()': dyn Trait\n-    [140; 141) 'x': dyn Trait\n-    [140; 147) 'x.foo()': u64\n-    [153; 154) 'y': &dyn Trait\n-    [153; 160) 'y.foo()': u64\n-    [166; 167) 'z': dyn Trait\n-    [166; 173) 'z.foo()': u64\n+    27..31 'self': &Self\n+    61..63 '{}': ()\n+    73..74 'x': dyn Trait\n+    83..84 'y': &dyn Trait\n+    101..176 '{     ...o(); }': ()\n+    107..108 'x': dyn Trait\n+    114..115 'y': &dyn Trait\n+    125..126 'z': dyn Trait\n+    129..132 'bar': fn bar() -> dyn Trait\n+    129..134 'bar()': dyn Trait\n+    140..141 'x': dyn Trait\n+    140..147 'x.foo()': u64\n+    153..154 'y': &dyn Trait\n+    153..160 'y.foo()': u64\n+    166..167 'z': dyn Trait\n+    166..173 'z.foo()': u64\n     \"###\n     );\n }\n@@ -1294,13 +1294,13 @@ fn test(a: impl Trait + 'lifetime, b: impl 'lifetime, c: impl (Trait), d: impl (\n }\n \"#),\n         @r###\"\n-    [24; 25) 'a': impl Trait + {error}\n-    [51; 52) 'b': impl {error}\n-    [70; 71) 'c': impl Trait\n-    [87; 88) 'd': impl {error}\n-    [108; 109) 'e': impl {error}\n-    [124; 125) 'f': impl Trait + {error}\n-    [148; 151) '{ }': ()\n+    24..25 'a': impl Trait + {error}\n+    51..52 'b': impl {error}\n+    70..71 'c': impl Trait\n+    87..88 'd': impl {error}\n+    108..109 'e': impl {error}\n+    124..125 'f': impl Trait + {error}\n+    148..151 '{ }': ()\n     \"###\n     );\n }\n@@ -1349,41 +1349,41 @@ fn test<T: Trait<Type = u32>>(x: T, y: impl Trait<Type = i64>) {\n }\n \"#),\n         @r###\"\n-    [50; 51) 't': T\n-    [78; 80) '{}': ()\n-    [112; 113) 't': T\n-    [123; 125) '{}': ()\n-    [155; 156) 't': T\n-    [166; 169) '{t}': T\n-    [167; 168) 't': T\n-    [257; 258) 'x': T\n-    [263; 264) 'y': impl Trait<Type = i64>\n-    [290; 398) '{     ...r>); }': ()\n-    [296; 299) 'get': fn get<T>(T) -> <T as Trait>::Type\n-    [296; 302) 'get(x)': u32\n-    [300; 301) 'x': T\n-    [308; 312) 'get2': fn get2<u32, T>(T) -> u32\n-    [308; 315) 'get2(x)': u32\n-    [313; 314) 'x': T\n-    [321; 324) 'get': fn get<impl Trait<Type = i64>>(impl Trait<Type = i64>) -> <impl Trait<Type = i64> as Trait>::Type\n-    [321; 327) 'get(y)': i64\n-    [325; 326) 'y': impl Trait<Type = i64>\n-    [333; 337) 'get2': fn get2<i64, impl Trait<Type = i64>>(impl Trait<Type = i64>) -> i64\n-    [333; 340) 'get2(y)': i64\n-    [338; 339) 'y': impl Trait<Type = i64>\n-    [346; 349) 'get': fn get<S<u64>>(S<u64>) -> <S<u64> as Trait>::Type\n-    [346; 357) 'get(set(S))': u64\n-    [350; 353) 'set': fn set<S<u64>>(S<u64>) -> S<u64>\n-    [350; 356) 'set(S)': S<u64>\n-    [354; 355) 'S': S<u64>\n-    [363; 367) 'get2': fn get2<u64, S<u64>>(S<u64>) -> u64\n-    [363; 375) 'get2(set(S))': u64\n-    [368; 371) 'set': fn set<S<u64>>(S<u64>) -> S<u64>\n-    [368; 374) 'set(S)': S<u64>\n-    [372; 373) 'S': S<u64>\n-    [381; 385) 'get2': fn get2<str, S<str>>(S<str>) -> str\n-    [381; 395) 'get2(S::<str>)': str\n-    [386; 394) 'S::<str>': S<str>\n+    50..51 't': T\n+    78..80 '{}': ()\n+    112..113 't': T\n+    123..125 '{}': ()\n+    155..156 't': T\n+    166..169 '{t}': T\n+    167..168 't': T\n+    257..258 'x': T\n+    263..264 'y': impl Trait<Type = i64>\n+    290..398 '{     ...r>); }': ()\n+    296..299 'get': fn get<T>(T) -> <T as Trait>::Type\n+    296..302 'get(x)': u32\n+    300..301 'x': T\n+    308..312 'get2': fn get2<u32, T>(T) -> u32\n+    308..315 'get2(x)': u32\n+    313..314 'x': T\n+    321..324 'get': fn get<impl Trait<Type = i64>>(impl Trait<Type = i64>) -> <impl Trait<Type = i64> as Trait>::Type\n+    321..327 'get(y)': i64\n+    325..326 'y': impl Trait<Type = i64>\n+    333..337 'get2': fn get2<i64, impl Trait<Type = i64>>(impl Trait<Type = i64>) -> i64\n+    333..340 'get2(y)': i64\n+    338..339 'y': impl Trait<Type = i64>\n+    346..349 'get': fn get<S<u64>>(S<u64>) -> <S<u64> as Trait>::Type\n+    346..357 'get(set(S))': u64\n+    350..353 'set': fn set<S<u64>>(S<u64>) -> S<u64>\n+    350..356 'set(S)': S<u64>\n+    354..355 'S': S<u64>\n+    363..367 'get2': fn get2<u64, S<u64>>(S<u64>) -> u64\n+    363..375 'get2(set(S))': u64\n+    368..371 'set': fn set<S<u64>>(S<u64>) -> S<u64>\n+    368..374 'set(S)': S<u64>\n+    372..373 'S': S<u64>\n+    381..385 'get2': fn get2<str, S<str>>(S<str>) -> str\n+    381..395 'get2(S::<str>)': str\n+    386..394 'S::<str>': S<str>\n     \"###\n     );\n }\n@@ -1448,11 +1448,11 @@ fn test<T: Trait1<Type = u32>>(x: T) {\n }\n \"#),\n         @r###\"\n-    [62; 66) 'self': Self\n-    [164; 165) 'x': T\n-    [170; 186) '{     ...o(); }': ()\n-    [176; 177) 'x': T\n-    [176; 183) 'x.foo()': u32\n+    62..66 'self': Self\n+    164..165 'x': T\n+    170..186 '{     ...o(); }': ()\n+    176..177 'x': T\n+    176..183 'x.foo()': u32\n     \"###\n     );\n }\n@@ -1494,15 +1494,15 @@ fn test<T: Trait1, U: Trait2>(x: T, y: U) {\n }\n \"#),\n         @r###\"\n-    [50; 54) 'self': &Self\n-    [63; 65) '{}': ()\n-    [182; 183) 'x': T\n-    [188; 189) 'y': U\n-    [194; 223) '{     ...o(); }': ()\n-    [200; 201) 'x': T\n-    [200; 207) 'x.foo()': u32\n-    [213; 214) 'y': U\n-    [213; 220) 'y.foo()': u32\n+    50..54 'self': &Self\n+    63..65 '{}': ()\n+    182..183 'x': T\n+    188..189 'y': U\n+    194..223 '{     ...o(); }': ()\n+    200..201 'x': T\n+    200..207 'x.foo()': u32\n+    213..214 'y': U\n+    213..220 'y.foo()': u32\n     \"###\n     );\n }\n@@ -1523,12 +1523,12 @@ fn test(x: &impl Trait1) {\n }\n \"#),\n         @r###\"\n-    [50; 54) 'self': &Self\n-    [63; 65) '{}': ()\n-    [116; 117) 'x': &impl Trait1\n-    [133; 149) '{     ...o(); }': ()\n-    [139; 140) 'x': &impl Trait1\n-    [139; 146) 'x.foo()': u32\n+    50..54 'self': &Self\n+    63..65 '{}': ()\n+    116..117 'x': &impl Trait1\n+    133..149 '{     ...o(); }': ()\n+    139..140 'x': &impl Trait1\n+    139..146 'x.foo()': u32\n     \"###\n     );\n }\n@@ -1546,10 +1546,10 @@ fn test<T: A>(x: T) {\n }\n \"#),\n         @r###\"\n-    [44; 45) 'x': T\n-    [50; 66) '{     ...o(); }': ()\n-    [56; 57) 'x': T\n-    [56; 63) 'x.foo()': {unknown}\n+    44..45 'x': T\n+    50..66 '{     ...o(); }': ()\n+    56..57 'x': T\n+    56..63 'x.foo()': {unknown}\n     \"###\n     );\n }\n@@ -1573,17 +1573,17 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [103; 104) 't': T\n-    [114; 116) '{}': ()\n-    [146; 147) 't': T\n-    [157; 160) '{t}': T\n-    [158; 159) 't': T\n-    [259; 280) '{     ...S)); }': ()\n-    [265; 269) 'get2': fn get2<u64, S<u64>>(S<u64>) -> u64\n-    [265; 277) 'get2(set(S))': u64\n-    [270; 273) 'set': fn set<S<u64>>(S<u64>) -> S<u64>\n-    [270; 276) 'set(S)': S<u64>\n-    [274; 275) 'S': S<u64>\n+    103..104 't': T\n+    114..116 '{}': ()\n+    146..147 't': T\n+    157..160 '{t}': T\n+    158..159 't': T\n+    259..280 '{     ...S)); }': ()\n+    265..269 'get2': fn get2<u64, S<u64>>(S<u64>) -> u64\n+    265..277 'get2(set(S))': u64\n+    270..273 'set': fn set<S<u64>>(S<u64>) -> S<u64>\n+    270..276 'set(S)': S<u64>\n+    274..275 'S': S<u64>\n     \"###\n     );\n }\n@@ -1603,15 +1603,15 @@ fn test<F: FnOnce(u32, u64) -> u128>(f: F) {\n }\n \"#),\n         @r###\"\n-    [57; 61) 'self': Self\n-    [63; 67) 'args': Args\n-    [150; 151) 'f': F\n-    [156; 184) '{     ...2)); }': ()\n-    [162; 163) 'f': F\n-    [162; 181) 'f.call...1, 2))': u128\n-    [174; 180) '(1, 2)': (u32, u64)\n-    [175; 176) '1': u32\n-    [178; 179) '2': u64\n+    57..61 'self': Self\n+    63..67 'args': Args\n+    150..151 'f': F\n+    156..184 '{     ...2)); }': ()\n+    162..163 'f': F\n+    162..181 'f.call...1, 2))': u128\n+    174..180 '(1, 2)': (u32, u64)\n+    175..176 '1': u32\n+    178..179 '2': u64\n     \"###\n     );\n }\n@@ -1638,32 +1638,32 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [148; 152) 'self': Option<T>\n-    [154; 155) 'f': F\n-    [173; 175) '{}': ()\n-    [189; 308) '{     ... 1); }': ()\n-    [199; 200) 'x': Option<u32>\n-    [203; 215) 'Option::Some': Some<u32>(u32) -> Option<u32>\n-    [203; 221) 'Option...(1u32)': Option<u32>\n-    [216; 220) '1u32': u32\n-    [227; 228) 'x': Option<u32>\n-    [227; 243) 'x.map(...v + 1)': Option<u32>\n-    [233; 242) '|v| v + 1': |u32| -> u32\n-    [234; 235) 'v': u32\n-    [237; 238) 'v': u32\n-    [237; 242) 'v + 1': u32\n-    [241; 242) '1': u32\n-    [249; 250) 'x': Option<u32>\n-    [249; 265) 'x.map(... 1u64)': Option<u64>\n-    [255; 264) '|_v| 1u64': |u32| -> u64\n-    [256; 258) '_v': u32\n-    [260; 264) '1u64': u64\n-    [275; 276) 'y': Option<i64>\n-    [292; 293) 'x': Option<u32>\n-    [292; 305) 'x.map(|_v| 1)': Option<i64>\n-    [298; 304) '|_v| 1': |u32| -> i64\n-    [299; 301) '_v': u32\n-    [303; 304) '1': i64\n+    148..152 'self': Option<T>\n+    154..155 'f': F\n+    173..175 '{}': ()\n+    189..308 '{     ... 1); }': ()\n+    199..200 'x': Option<u32>\n+    203..215 'Option::Some': Some<u32>(u32) -> Option<u32>\n+    203..221 'Option...(1u32)': Option<u32>\n+    216..220 '1u32': u32\n+    227..228 'x': Option<u32>\n+    227..243 'x.map(...v + 1)': Option<u32>\n+    233..242 '|v| v + 1': |u32| -> u32\n+    234..235 'v': u32\n+    237..238 'v': u32\n+    237..242 'v + 1': u32\n+    241..242 '1': u32\n+    249..250 'x': Option<u32>\n+    249..265 'x.map(... 1u64)': Option<u64>\n+    255..264 '|_v| 1u64': |u32| -> u64\n+    256..258 '_v': u32\n+    260..264 '1u64': u64\n+    275..276 'y': Option<i64>\n+    292..293 'x': Option<u32>\n+    292..305 'x.map(|_v| 1)': Option<i64>\n+    298..304 '|_v| 1': |u32| -> i64\n+    299..301 '_v': u32\n+    303..304 '1': i64\n     \"###\n     );\n }\n@@ -1684,26 +1684,26 @@ fn test<F: FnOnce(u32) -> u64>(f: F) {\n }\n \"#),\n         @r###\"\n-    [73; 74) 'f': F\n-    [79; 155) '{     ...+ v; }': ()\n-    [85; 86) 'f': F\n-    [85; 89) 'f(1)': {unknown}\n-    [87; 88) '1': i32\n-    [99; 100) 'g': |u64| -> i32\n-    [103; 112) '|v| v + 1': |u64| -> i32\n-    [104; 105) 'v': u64\n-    [107; 108) 'v': u64\n-    [107; 112) 'v + 1': i32\n-    [111; 112) '1': i32\n-    [118; 119) 'g': |u64| -> i32\n-    [118; 125) 'g(1u64)': i32\n-    [120; 124) '1u64': u64\n-    [135; 136) 'h': |u128| -> u128\n-    [139; 152) '|v| 1u128 + v': |u128| -> u128\n-    [140; 141) 'v': u128\n-    [143; 148) '1u128': u128\n-    [143; 152) '1u128 + v': u128\n-    [151; 152) 'v': u128\n+    73..74 'f': F\n+    79..155 '{     ...+ v; }': ()\n+    85..86 'f': F\n+    85..89 'f(1)': {unknown}\n+    87..88 '1': i32\n+    99..100 'g': |u64| -> i32\n+    103..112 '|v| v + 1': |u64| -> i32\n+    104..105 'v': u64\n+    107..108 'v': u64\n+    107..112 'v + 1': i32\n+    111..112 '1': i32\n+    118..119 'g': |u64| -> i32\n+    118..125 'g(1u64)': i32\n+    120..124 '1u64': u64\n+    135..136 'h': |u128| -> u128\n+    139..152 '|v| 1u128 + v': |u128| -> u128\n+    140..141 'v': u128\n+    143..148 '1u128': u128\n+    143..152 '1u128 + v': u128\n+    151..152 'v': u128\n     \"###\n     );\n }\n@@ -1736,54 +1736,54 @@ fn test() {\n }\n \"#),\n         @r###\"\n-    [95; 96) 'x': T\n-    [101; 102) 'f': F\n-    [112; 114) '{}': ()\n-    [148; 149) 'f': F\n-    [154; 155) 'x': T\n-    [165; 167) '{}': ()\n-    [202; 206) 'self': S\n-    [254; 258) 'self': S\n-    [260; 261) 'x': T\n-    [266; 267) 'f': F\n-    [277; 279) '{}': ()\n-    [317; 321) 'self': S\n-    [323; 324) 'f': F\n-    [329; 330) 'x': T\n-    [340; 342) '{}': ()\n-    [356; 515) '{     ... S); }': ()\n-    [366; 368) 'x1': u64\n-    [371; 375) 'foo1': fn foo1<S, u64, |S| -> u64>(S, |S| -> u64) -> u64\n-    [371; 394) 'foo1(S...hod())': u64\n-    [376; 377) 'S': S\n-    [379; 393) '|s| s.method()': |S| -> u64\n-    [380; 381) 's': S\n-    [383; 384) 's': S\n-    [383; 393) 's.method()': u64\n-    [404; 406) 'x2': u64\n-    [409; 413) 'foo2': fn foo2<S, u64, |S| -> u64>(|S| -> u64, S) -> u64\n-    [409; 432) 'foo2(|...(), S)': u64\n-    [414; 428) '|s| s.method()': |S| -> u64\n-    [415; 416) 's': S\n-    [418; 419) 's': S\n-    [418; 428) 's.method()': u64\n-    [430; 431) 'S': S\n-    [442; 444) 'x3': u64\n-    [447; 448) 'S': S\n-    [447; 472) 'S.foo1...hod())': u64\n-    [454; 455) 'S': S\n-    [457; 471) '|s| s.method()': |S| -> u64\n-    [458; 459) 's': S\n-    [461; 462) 's': S\n-    [461; 471) 's.method()': u64\n-    [482; 484) 'x4': u64\n-    [487; 488) 'S': S\n-    [487; 512) 'S.foo2...(), S)': u64\n-    [494; 508) '|s| s.method()': |S| -> u64\n-    [495; 496) 's': S\n-    [498; 499) 's': S\n-    [498; 508) 's.method()': u64\n-    [510; 511) 'S': S\n+    95..96 'x': T\n+    101..102 'f': F\n+    112..114 '{}': ()\n+    148..149 'f': F\n+    154..155 'x': T\n+    165..167 '{}': ()\n+    202..206 'self': S\n+    254..258 'self': S\n+    260..261 'x': T\n+    266..267 'f': F\n+    277..279 '{}': ()\n+    317..321 'self': S\n+    323..324 'f': F\n+    329..330 'x': T\n+    340..342 '{}': ()\n+    356..515 '{     ... S); }': ()\n+    366..368 'x1': u64\n+    371..375 'foo1': fn foo1<S, u64, |S| -> u64>(S, |S| -> u64) -> u64\n+    371..394 'foo1(S...hod())': u64\n+    376..377 'S': S\n+    379..393 '|s| s.method()': |S| -> u64\n+    380..381 's': S\n+    383..384 's': S\n+    383..393 's.method()': u64\n+    404..406 'x2': u64\n+    409..413 'foo2': fn foo2<S, u64, |S| -> u64>(|S| -> u64, S) -> u64\n+    409..432 'foo2(|...(), S)': u64\n+    414..428 '|s| s.method()': |S| -> u64\n+    415..416 's': S\n+    418..419 's': S\n+    418..428 's.method()': u64\n+    430..431 'S': S\n+    442..444 'x3': u64\n+    447..448 'S': S\n+    447..472 'S.foo1...hod())': u64\n+    454..455 'S': S\n+    457..471 '|s| s.method()': |S| -> u64\n+    458..459 's': S\n+    461..462 's': S\n+    461..471 's.method()': u64\n+    482..484 'x4': u64\n+    487..488 'S': S\n+    487..512 'S.foo2...(), S)': u64\n+    494..508 '|s| s.method()': |S| -> u64\n+    495..496 's': S\n+    498..499 's': S\n+    498..508 's.method()': u64\n+    510..511 'S': S\n     \"###\n     );\n }\n@@ -1858,18 +1858,18 @@ impl Trait for S2 {\n }\n \"#,\n     ), @r###\"\n-    [54; 58) 'self': &Self\n-    [60; 61) 'x': Trait::Item<Self>\n-    [140; 144) 'self': &S\n-    [146; 147) 'x': u32\n-    [161; 175) '{ let y = x; }': ()\n-    [167; 168) 'y': u32\n-    [171; 172) 'x': u32\n-    [242; 246) 'self': &S2\n-    [248; 249) 'x': i32\n-    [265; 279) '{ let y = x; }': ()\n-    [271; 272) 'y': i32\n-    [275; 276) 'x': i32\n+    54..58 'self': &Self\n+    60..61 'x': Trait::Item<Self>\n+    140..144 'self': &S\n+    146..147 'x': u32\n+    161..175 '{ let y = x; }': ()\n+    167..168 'y': u32\n+    171..172 'x': u32\n+    242..246 'self': &S2\n+    248..249 'x': i32\n+    265..279 '{ let y = x; }': ()\n+    271..272 'y': i32\n+    275..276 'x': i32\n     \"###);\n }\n \n@@ -2077,15 +2077,15 @@ impl TokenStream for Rustc {\n }\n \"#, true),\n         @r###\"\n-    [1115; 1126) '{ loop {} }': T\n-    [1117; 1124) 'loop {}': !\n-    [1122; 1124) '{}': ()\n-    [1190; 1253) '{     ...     }': {unknown}\n-    [1204; 1209) 'group': {unknown}\n-    [1225; 1229) 'make': fn make<{unknown}>() -> {unknown}\n-    [1225; 1231) 'make()': {unknown}\n-    [1241; 1245) 'make': fn make<{unknown}>() -> {unknown}\n-    [1241; 1247) 'make()': {unknown}\n+    1115..1126 '{ loop {} }': T\n+    1117..1124 'loop {}': !\n+    1122..1124 '{}': ()\n+    1190..1253 '{     ...     }': {unknown}\n+    1204..1209 'group': {unknown}\n+    1225..1229 'make': fn make<{unknown}>() -> {unknown}\n+    1225..1231 'make()': {unknown}\n+    1241..1245 'make': fn make<{unknown}>() -> {unknown}\n+    1241..1247 'make()': {unknown}\n     \"###\n     );\n }\n@@ -2112,37 +2112,37 @@ fn test() -> impl Trait<i32> {\n }\n \"#, true),\n         @r###\"\n-    [27; 28) 'x': impl Trait<u32>\n-    [47; 58) '{ loop {} }': ()\n-    [49; 56) 'loop {}': !\n-    [54; 56) '{}': ()\n-    [69; 70) 'x': impl Trait<T>\n-    [92; 103) '{ loop {} }': T\n-    [94; 101) 'loop {}': !\n-    [99; 101) '{}': ()\n-    [172; 183) '{ loop {} }': T\n-    [174; 181) 'loop {}': !\n-    [179; 181) '{}': ()\n-    [214; 310) '{     ...t()) }': S<{unknown}>\n-    [224; 226) 's1': S<u32>\n-    [229; 230) 'S': S<u32>(u32) -> S<u32>\n-    [229; 241) 'S(default())': S<u32>\n-    [231; 238) 'default': fn default<u32>() -> u32\n-    [231; 240) 'default()': u32\n-    [247; 250) 'foo': fn foo(S<u32>)\n-    [247; 254) 'foo(s1)': ()\n-    [251; 253) 's1': S<u32>\n-    [264; 265) 'x': i32\n-    [273; 276) 'bar': fn bar<i32>(S<i32>) -> i32\n-    [273; 290) 'bar(S(...lt()))': i32\n-    [277; 278) 'S': S<i32>(i32) -> S<i32>\n-    [277; 289) 'S(default())': S<i32>\n-    [279; 286) 'default': fn default<i32>() -> i32\n-    [279; 288) 'default()': i32\n-    [296; 297) 'S': S<{unknown}>({unknown}) -> S<{unknown}>\n-    [296; 308) 'S(default())': S<{unknown}>\n-    [298; 305) 'default': fn default<{unknown}>() -> {unknown}\n-    [298; 307) 'default()': {unknown}\n+    27..28 'x': impl Trait<u32>\n+    47..58 '{ loop {} }': ()\n+    49..56 'loop {}': !\n+    54..56 '{}': ()\n+    69..70 'x': impl Trait<T>\n+    92..103 '{ loop {} }': T\n+    94..101 'loop {}': !\n+    99..101 '{}': ()\n+    172..183 '{ loop {} }': T\n+    174..181 'loop {}': !\n+    179..181 '{}': ()\n+    214..310 '{     ...t()) }': S<{unknown}>\n+    224..226 's1': S<u32>\n+    229..230 'S': S<u32>(u32) -> S<u32>\n+    229..241 'S(default())': S<u32>\n+    231..238 'default': fn default<u32>() -> u32\n+    231..240 'default()': u32\n+    247..250 'foo': fn foo(S<u32>)\n+    247..254 'foo(s1)': ()\n+    251..253 's1': S<u32>\n+    264..265 'x': i32\n+    273..276 'bar': fn bar<i32>(S<i32>) -> i32\n+    273..290 'bar(S(...lt()))': i32\n+    277..278 'S': S<i32>(i32) -> S<i32>\n+    277..289 'S(default())': S<i32>\n+    279..286 'default': fn default<i32>() -> i32\n+    279..288 'default()': i32\n+    296..297 'S': S<{unknown}>({unknown}) -> S<{unknown}>\n+    296..308 'S(default())': S<{unknown}>\n+    298..305 'default': fn default<{unknown}>() -> {unknown}\n+    298..307 'default()': {unknown}\n     \"###\n     );\n }\n@@ -2176,15 +2176,15 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    [147; 149) '_v': F\n-    [192; 195) '{ }': ()\n-    [207; 238) '{     ... }); }': ()\n-    [213; 223) 'f::<(), _>': fn f<(), |&()| -> ()>(|&()| -> ())\n-    [213; 235) 'f::<()... z; })': ()\n-    [224; 234) '|z| { z; }': |&()| -> ()\n-    [225; 226) 'z': &()\n-    [228; 234) '{ z; }': ()\n-    [230; 231) 'z': &()\n+    147..149 '_v': F\n+    192..195 '{ }': ()\n+    207..238 '{     ... }); }': ()\n+    213..223 'f::<(), _>': fn f<(), |&()| -> ()>(|&()| -> ())\n+    213..235 'f::<()... z; })': ()\n+    224..234 '|z| { z; }': |&()| -> ()\n+    225..226 'z': &()\n+    228..234 '{ z; }': ()\n+    230..231 'z': &()\n     \"###\n     );\n }\n@@ -2337,46 +2337,46 @@ fn main() {\n }\n \"#),\n         @r###\"\n-    [240; 244) 'self': Self\n-    [246; 247) 'f': F\n-    [331; 342) '{ loop {} }': FilterMap<Self, F>\n-    [333; 340) 'loop {}': !\n-    [338; 340) '{}': ()\n-    [363; 367) 'self': Self\n-    [369; 370) 'f': F\n-    [419; 430) '{ loop {} }': ()\n-    [421; 428) 'loop {}': !\n-    [426; 428) '{}': ()\n-    [539; 543) 'self': Self\n-    [868; 872) 'self': I\n-    [879; 899) '{     ...     }': I\n-    [889; 893) 'self': I\n-    [958; 969) '{ loop {} }': Vec<T>\n-    [960; 967) 'loop {}': !\n-    [965; 967) '{}': ()\n-    [1156; 1287) '{     ... }); }': ()\n-    [1162; 1177) 'Vec::<i32>::new': fn new<i32>() -> Vec<i32>\n-    [1162; 1179) 'Vec::<...:new()': Vec<i32>\n-    [1162; 1191) 'Vec::<...iter()': IntoIter<i32>\n-    [1162; 1256) 'Vec::<...one })': FilterMap<IntoIter<i32>, |i32| -> Option<u32>>\n-    [1162; 1284) 'Vec::<... y; })': ()\n-    [1210; 1255) '|x| if...None }': |i32| -> Option<u32>\n-    [1211; 1212) 'x': i32\n-    [1214; 1255) 'if x >...None }': Option<u32>\n-    [1217; 1218) 'x': i32\n-    [1217; 1222) 'x > 0': bool\n-    [1221; 1222) '0': i32\n-    [1223; 1241) '{ Some...u32) }': Option<u32>\n-    [1225; 1229) 'Some': Some<u32>(u32) -> Option<u32>\n-    [1225; 1239) 'Some(x as u32)': Option<u32>\n-    [1230; 1231) 'x': i32\n-    [1230; 1238) 'x as u32': u32\n-    [1247; 1255) '{ None }': Option<u32>\n-    [1249; 1253) 'None': Option<u32>\n-    [1273; 1283) '|y| { y; }': |u32| -> ()\n-    [1274; 1275) 'y': u32\n-    [1277; 1283) '{ y; }': ()\n-    [1279; 1280) 'y': u32\n+    240..244 'self': Self\n+    246..247 'f': F\n+    331..342 '{ loop {} }': FilterMap<Self, F>\n+    333..340 'loop {}': !\n+    338..340 '{}': ()\n+    363..367 'self': Self\n+    369..370 'f': F\n+    419..430 '{ loop {} }': ()\n+    421..428 'loop {}': !\n+    426..428 '{}': ()\n+    539..543 'self': Self\n+    868..872 'self': I\n+    879..899 '{     ...     }': I\n+    889..893 'self': I\n+    958..969 '{ loop {} }': Vec<T>\n+    960..967 'loop {}': !\n+    965..967 '{}': ()\n+    1156..1287 '{     ... }); }': ()\n+    1162..1177 'Vec::<i32>::new': fn new<i32>() -> Vec<i32>\n+    1162..1179 'Vec::<...:new()': Vec<i32>\n+    1162..1191 'Vec::<...iter()': IntoIter<i32>\n+    1162..1256 'Vec::<...one })': FilterMap<IntoIter<i32>, |i32| -> Option<u32>>\n+    1162..1284 'Vec::<... y; })': ()\n+    1210..1255 '|x| if...None }': |i32| -> Option<u32>\n+    1211..1212 'x': i32\n+    1214..1255 'if x >...None }': Option<u32>\n+    1217..1218 'x': i32\n+    1217..1222 'x > 0': bool\n+    1221..1222 '0': i32\n+    1223..1241 '{ Some...u32) }': Option<u32>\n+    1225..1229 'Some': Some<u32>(u32) -> Option<u32>\n+    1225..1239 'Some(x as u32)': Option<u32>\n+    1230..1231 'x': i32\n+    1230..1238 'x as u32': u32\n+    1247..1255 '{ None }': Option<u32>\n+    1249..1253 'None': Option<u32>\n+    1273..1283 '|y| { y; }': |u32| -> ()\n+    1274..1275 'y': u32\n+    1277..1283 '{ y; }': ()\n+    1279..1280 'y': u32\n     \"###\n     );\n }\n@@ -2428,13 +2428,13 @@ fn test(x: &dyn Foo) {\n }\n \"#, true),\n         @r###\"\n-    [22; 23) 'x': &dyn Foo\n-    [35; 37) '{}': ()\n-    [47; 48) 'x': &dyn Foo\n-    [60; 75) '{     foo(x); }': ()\n-    [66; 69) 'foo': fn foo(&dyn Foo)\n-    [66; 72) 'foo(x)': ()\n-    [70; 71) 'x': &dyn Foo\n+    22..23 'x': &dyn Foo\n+    35..37 '{}': ()\n+    47..48 'x': &dyn Foo\n+    60..75 '{     foo(x); }': ()\n+    66..69 'foo': fn foo(&dyn Foo)\n+    66..72 'foo(x)': ()\n+    70..71 'x': &dyn Foo\n     \"###\n     );\n }"}, {"sha": "85d1f0cb15e723fa0a35a1371ffc198dcbc99304", "filename": "crates/ra_ide/src/call_hierarchy.rs", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcall_hierarchy.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -183,8 +183,8 @@ mod tests {\n                 call<|>ee();\n             }\n             \"#,\n-            \"callee FN_DEF FileId(1) [0; 14) [3; 9)\",\n-            &[\"caller FN_DEF FileId(1) [15; 44) [18; 24) : [[33; 39)]\"],\n+            \"callee FN_DEF FileId(1) 0..14 3..9\",\n+            &[\"caller FN_DEF FileId(1) 15..44 18..24 : [33..39]\"],\n             &[],\n         );\n     }\n@@ -199,8 +199,8 @@ mod tests {\n                 callee();\n             }\n             \"#,\n-            \"callee FN_DEF FileId(1) [0; 14) [3; 9)\",\n-            &[\"caller FN_DEF FileId(1) [15; 44) [18; 24) : [[33; 39)]\"],\n+            \"callee FN_DEF FileId(1) 0..14 3..9\",\n+            &[\"caller FN_DEF FileId(1) 15..44 18..24 : [33..39]\"],\n             &[],\n         );\n     }\n@@ -216,8 +216,8 @@ mod tests {\n                 callee();\n             }\n             \"#,\n-            \"callee FN_DEF FileId(1) [0; 14) [3; 9)\",\n-            &[\"caller FN_DEF FileId(1) [15; 58) [18; 24) : [[33; 39), [47; 53)]\"],\n+            \"callee FN_DEF FileId(1) 0..14 3..9\",\n+            &[\"caller FN_DEF FileId(1) 15..58 18..24 : [33..39, 47..53]\"],\n             &[],\n         );\n     }\n@@ -236,10 +236,10 @@ mod tests {\n                 callee();\n             }\n             \"#,\n-            \"callee FN_DEF FileId(1) [0; 14) [3; 9)\",\n+            \"callee FN_DEF FileId(1) 0..14 3..9\",\n             &[\n-                \"caller1 FN_DEF FileId(1) [15; 45) [18; 25) : [[34; 40)]\",\n-                \"caller2 FN_DEF FileId(1) [46; 76) [49; 56) : [[65; 71)]\",\n+                \"caller1 FN_DEF FileId(1) 15..45 18..25 : [34..40]\",\n+                \"caller2 FN_DEF FileId(1) 46..76 49..56 : [65..71]\",\n             ],\n             &[],\n         );\n@@ -260,8 +260,8 @@ mod tests {\n             //- /foo/mod.rs\n             pub fn callee() {}\n             \"#,\n-            \"callee FN_DEF FileId(2) [0; 18) [7; 13)\",\n-            &[\"caller FN_DEF FileId(1) [26; 55) [29; 35) : [[44; 50)]\"],\n+            \"callee FN_DEF FileId(2) 0..18 7..13\",\n+            &[\"caller FN_DEF FileId(1) 26..55 29..35 : [44..50]\"],\n             &[],\n         );\n     }\n@@ -277,9 +277,9 @@ mod tests {\n                 callee();\n             }\n             \"#,\n-            \"caller FN_DEF FileId(1) [15; 58) [18; 24)\",\n+            \"caller FN_DEF FileId(1) 15..58 18..24\",\n             &[],\n-            &[\"callee FN_DEF FileId(1) [0; 14) [3; 9) : [[33; 39), [47; 53)]\"],\n+            &[\"callee FN_DEF FileId(1) 0..14 3..9 : [33..39, 47..53]\"],\n         );\n     }\n \n@@ -298,9 +298,9 @@ mod tests {\n             //- /foo/mod.rs\n             pub fn callee() {}\n             \"#,\n-            \"caller FN_DEF FileId(1) [26; 55) [29; 35)\",\n+            \"caller FN_DEF FileId(1) 26..55 29..35\",\n             &[],\n-            &[\"callee FN_DEF FileId(2) [0; 18) [7; 13) : [[44; 50)]\"],\n+            &[\"callee FN_DEF FileId(2) 0..18 7..13 : [44..50]\"],\n         );\n     }\n \n@@ -321,9 +321,9 @@ mod tests {\n \n             }\n             \"#,\n-            \"caller2 FN_DEF FileId(1) [32; 63) [35; 42)\",\n-            &[\"caller1 FN_DEF FileId(1) [0; 31) [3; 10) : [[19; 26)]\"],\n-            &[\"caller3 FN_DEF FileId(1) [64; 80) [67; 74) : [[51; 58)]\"],\n+            \"caller2 FN_DEF FileId(1) 32..63 35..42\",\n+            &[\"caller1 FN_DEF FileId(1) 0..31 3..10 : [19..26]\"],\n+            &[\"caller3 FN_DEF FileId(1) 64..80 67..74 : [51..58]\"],\n         );\n     }\n }"}, {"sha": "780a03c1380e5cbf6fca89996b78eee1d614c489", "filename": "crates/ra_ide/src/call_info.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcall_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcall_info.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -126,7 +126,7 @@ impl FnCallNode {\n                     ast::CallExpr(it) => Some(FnCallNode::CallExpr(it)),\n                     ast::MethodCallExpr(it) => {\n                         let arg_list = it.arg_list()?;\n-                        if !syntax.text_range().is_subrange(&arg_list.syntax().text_range()) {\n+                        if !arg_list.syntax().text_range().contains_range(syntax.text_range()) {\n                             return None;\n                         }\n                         Some(FnCallNode::MethodCallExpr(it))"}, {"sha": "8bf9527980e2ef67552373faeb346c3bcd53bd40", "filename": "crates/ra_ide/src/completion/complete_attribute.rs", "status": "modified", "additions": 120, "deletions": 120, "changes": 240, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_attribute.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -147,190 +147,190 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"allow\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"allow(${0:lint})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"cfg\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"cfg(${0:predicate})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"cfg_attr\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"cfg_attr(${1:predicate}, ${0:attr})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"deny\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"deny(${0:lint})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"deprecated\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"deprecated = \\\"${0:reason}\\\"\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"derive\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"derive(${0:Debug})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"doc\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"doc = \\\"${0:docs}\\\"\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"forbid\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"forbid(${0:lint})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"ignore\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"ignore(${0:lint})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"inline\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"inline(${0:lint})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"link\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"link\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"link_name\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"link_name = \\\"${0:symbol_name}\\\"\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"macro_export\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"macro_export\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"macro_use\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"macro_use\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"must_use\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"must_use = \\\"${0:reason}\\\"\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"no_mangle\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"no_mangle\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"non_exhaustive\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"non_exhaustive\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"path\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"path =\\\"${0:path}\\\"\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"proc_macro\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"proc_macro\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"proc_macro_attribute\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"proc_macro_attribute\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"proc_macro_derive\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"proc_macro_derive(${0:Trait})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"repr\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"repr(${0:C})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"should_panic\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"expected = \\\"${0:reason}\\\"\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"target_feature\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"target_feature = \\\"${0:feature}\\\"\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"test\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"test\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"used\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"used\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"warn\",\n-                source_range: [19; 19),\n-                delete: [19; 19),\n+                source_range: 19..19,\n+                delete: 19..19,\n                 insert: \"warn(${0:lint})\",\n                 kind: Attribute,\n             },\n@@ -351,232 +351,232 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"allow\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"allow(${0:lint})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"cfg\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"cfg(${0:predicate})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"cfg_attr\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"cfg_attr(${1:predicate}, ${0:attr})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"deny\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"deny(${0:lint})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"deprecated\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"deprecated = \\\"${0:reason}\\\"\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"derive\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"derive(${0:Debug})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"doc\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"doc = \\\"${0:docs}\\\"\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"feature\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"feature(${0:flag})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"forbid\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"forbid(${0:lint})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"global_allocator\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"global_allocator\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"ignore\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"ignore(${0:lint})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"inline\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"inline(${0:lint})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"link\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"link\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"link_name\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"link_name = \\\"${0:symbol_name}\\\"\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"macro_export\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"macro_export\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"macro_use\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"macro_use\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"must_use\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"must_use = \\\"${0:reason}\\\"\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"no_mangle\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"no_mangle\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"no_std\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"no_std\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"non_exhaustive\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"non_exhaustive\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"panic_handler\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"panic_handler\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"path\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"path =\\\"${0:path}\\\"\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"proc_macro\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"proc_macro\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"proc_macro_attribute\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"proc_macro_attribute\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"proc_macro_derive\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"proc_macro_derive(${0:Trait})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"recursion_limit\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"recursion_limit = ${0:128}\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"repr\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"repr(${0:C})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"should_panic\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"expected = \\\"${0:reason}\\\"\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"target_feature\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"target_feature = \\\"${0:feature}\\\"\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"test\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"test\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"used\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"used\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"warn\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"warn(${0:lint})\",\n                 kind: Attribute,\n             },\n             CompletionItem {\n                 label: \"windows_subsystem\",\n-                source_range: [20; 20),\n-                delete: [20; 20),\n+                source_range: 20..20,\n+                delete: 20..20,\n                 insert: \"windows_subsystem = \\\"${0:subsystem}\\\"\",\n                 kind: Attribute,\n             },"}, {"sha": "814354ffa6ab171c1b630ec2ae3056f21df16363", "filename": "crates/ra_ide/src/completion/complete_dot.rs", "status": "modified", "additions": 56, "deletions": 56, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -94,8 +94,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [94; 94),\n-                delete: [94; 94),\n+                source_range: 94..94,\n+                delete: 94..94,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -125,17 +125,17 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo()\",\n-                source_range: [187; 187),\n-                delete: [187; 187),\n+                source_range: 187..187,\n+                delete: 187..187,\n                 insert: \"foo()$0\",\n                 kind: Method,\n                 lookup: \"foo\",\n                 detail: \"fn foo(self)\",\n             },\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [187; 187),\n-                delete: [187; 187),\n+                source_range: 187..187,\n+                delete: 187..187,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"(u32,)\",\n@@ -165,17 +165,17 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo()\",\n-                source_range: [126; 126),\n-                delete: [126; 126),\n+                source_range: 126..126,\n+                delete: 126..126,\n                 insert: \"foo()$0\",\n                 kind: Method,\n                 lookup: \"foo\",\n                 detail: \"fn foo(&self)\",\n             },\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [126; 126),\n-                delete: [126; 126),\n+                source_range: 126..126,\n+                delete: 126..126,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"(u32, i32)\",\n@@ -222,24 +222,24 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"crate_field\",\n-                source_range: [313; 313),\n-                delete: [313; 313),\n+                source_range: 313..313,\n+                delete: 313..313,\n                 insert: \"crate_field\",\n                 kind: Field,\n                 detail: \"u32\",\n             },\n             CompletionItem {\n                 label: \"pub_field\",\n-                source_range: [313; 313),\n-                delete: [313; 313),\n+                source_range: 313..313,\n+                delete: 313..313,\n                 insert: \"pub_field\",\n                 kind: Field,\n                 detail: \"u32\",\n             },\n             CompletionItem {\n                 label: \"super_field\",\n-                source_range: [313; 313),\n-                delete: [313; 313),\n+                source_range: 313..313,\n+                delete: 313..313,\n                 insert: \"super_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -267,8 +267,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_method()\",\n-                source_range: [144; 144),\n-                delete: [144; 144),\n+                source_range: 144..144,\n+                delete: 144..144,\n                 insert: \"the_method()$0\",\n                 kind: Method,\n                 lookup: \"the_method\",\n@@ -300,8 +300,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_method()\",\n-                source_range: [243; 243),\n-                delete: [243; 243),\n+                source_range: 243..243,\n+                delete: 243..243,\n                 insert: \"the_method()$0\",\n                 kind: Method,\n                 lookup: \"the_method\",\n@@ -333,8 +333,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_method()\",\n-                source_range: [256; 256),\n-                delete: [256; 256),\n+                source_range: 256..256,\n+                delete: 256..256,\n                 insert: \"the_method()$0\",\n                 kind: Method,\n                 lookup: \"the_method\",\n@@ -362,8 +362,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_method()\",\n-                source_range: [151; 151),\n-                delete: [151; 151),\n+                source_range: 151..151,\n+                delete: 151..151,\n                 insert: \"the_method()$0\",\n                 kind: Method,\n                 lookup: \"the_method\",\n@@ -391,8 +391,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_method()\",\n-                source_range: [155; 155),\n-                delete: [155; 155),\n+                source_range: 155..155,\n+                delete: 155..155,\n                 insert: \"the_method()$0\",\n                 kind: Method,\n                 lookup: \"the_method\",\n@@ -423,8 +423,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_method()\",\n-                source_range: [219; 219),\n-                delete: [219; 219),\n+                source_range: 219..219,\n+                delete: 219..219,\n                 insert: \"the_method()$0\",\n                 kind: Method,\n                 lookup: \"the_method\",\n@@ -475,8 +475,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_method()\",\n-                source_range: [249; 249),\n-                delete: [249; 249),\n+                source_range: 249..249,\n+                delete: 249..249,\n                 insert: \"the_method()$0\",\n                 kind: Method,\n                 lookup: \"the_method\",\n@@ -502,16 +502,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"0\",\n-                source_range: [75; 75),\n-                delete: [75; 75),\n+                source_range: 75..75,\n+                delete: 75..75,\n                 insert: \"0\",\n                 kind: Field,\n                 detail: \"i32\",\n             },\n             CompletionItem {\n                 label: \"1\",\n-                source_range: [75; 75),\n-                delete: [75; 75),\n+                source_range: 75..75,\n+                delete: 75..75,\n                 insert: \"1\",\n                 kind: Field,\n                 detail: \"f64\",\n@@ -545,8 +545,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"blah()\",\n-                source_range: [299; 300),\n-                delete: [299; 300),\n+                source_range: 299..300,\n+                delete: 299..300,\n                 insert: \"blah()$0\",\n                 kind: Method,\n                 lookup: \"blah\",\n@@ -572,8 +572,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [106; 106),\n-                delete: [106; 106),\n+                source_range: 106..106,\n+                delete: 106..106,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -606,8 +606,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"await\",\n-                source_range: [74; 74),\n-                delete: [74; 74),\n+                source_range: 74..74,\n+                delete: 74..74,\n                 insert: \"await\",\n                 detail: \"expr.await\",\n             },\n@@ -638,15 +638,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"A\",\n-                source_range: [217; 217),\n-                delete: [217; 217),\n+                source_range: 217..217,\n+                delete: 217..217,\n                 insert: \"A\",\n                 kind: Const,\n             },\n             CompletionItem {\n                 label: \"b\",\n-                source_range: [217; 217),\n-                delete: [217; 217),\n+                source_range: 217..217,\n+                delete: 217..217,\n                 insert: \"b\",\n                 kind: Module,\n             },\n@@ -671,8 +671,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [156; 157),\n-                delete: [156; 157),\n+                source_range: 156..157,\n+                delete: 156..157,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -698,8 +698,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [156; 157),\n-                delete: [156; 157),\n+                source_range: 156..157,\n+                delete: 156..157,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -726,8 +726,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [156; 156),\n-                delete: [156; 156),\n+                source_range: 156..156,\n+                delete: 156..156,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -753,8 +753,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [162; 163),\n-                delete: [162; 163),\n+                source_range: 162..163,\n+                delete: 162..163,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -790,8 +790,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [552; 552),\n-                delete: [552; 552),\n+                source_range: 552..552,\n+                delete: 552..552,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -820,8 +820,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_method()\",\n-                source_range: [201; 201),\n-                delete: [201; 201),\n+                source_range: 201..201,\n+                delete: 201..201,\n                 insert: \"the_method()$0\",\n                 kind: Method,\n                 lookup: \"the_method\","}, {"sha": "a661932a3117151243ec101b4bcd0ae062af35f6", "filename": "crates/ra_ide/src/completion/complete_fn_param.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_fn_param.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -75,8 +75,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"file_id: FileId\",\n-                source_range: [110; 114),\n-                delete: [110; 114),\n+                source_range: 110..114,\n+                delete: 110..114,\n                 insert: \"file_id: FileId\",\n                 lookup: \"file_id\",\n             },\n@@ -99,8 +99,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"file_id: FileId\",\n-                source_range: [110; 114),\n-                delete: [110; 114),\n+                source_range: 110..114,\n+                delete: 110..114,\n                 insert: \"file_id: FileId\",\n                 lookup: \"file_id\",\n             },\n@@ -126,8 +126,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"file_id: FileId\",\n-                source_range: [289; 293),\n-                delete: [289; 293),\n+                source_range: 289..293,\n+                delete: 289..293,\n                 insert: \"file_id: FileId\",\n                 lookup: \"file_id\",\n             },"}, {"sha": "fd95bc4103c2835a31ce746bcfe3fd12fe29beb2", "filename": "crates/ra_ide/src/completion/complete_keyword.rs", "status": "modified", "additions": 127, "deletions": 127, "changes": 254, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_keyword.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -97,7 +97,7 @@ fn is_in_loop_body(leaf: &SyntaxToken) -> bool {\n             }\n         };\n         if let Some(body) = loop_body {\n-            if leaf.text_range().is_subrange(&body.syntax().text_range()) {\n+            if body.syntax().text_range().contains_range(leaf.text_range()) {\n                 return true;\n             }\n         }\n@@ -140,22 +140,22 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"crate\",\n-                source_range: [21; 21),\n-                delete: [21; 21),\n+                source_range: 21..21,\n+                delete: 21..21,\n                 insert: \"crate::\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"self\",\n-                source_range: [21; 21),\n-                delete: [21; 21),\n+                source_range: 21..21,\n+                delete: 21..21,\n                 insert: \"self\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"super\",\n-                source_range: [21; 21),\n-                delete: [21; 21),\n+                source_range: 21..21,\n+                delete: 21..21,\n                 insert: \"super::\",\n                 kind: Keyword,\n             },\n@@ -173,15 +173,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"self\",\n-                source_range: [24; 24),\n-                delete: [24; 24),\n+                source_range: 24..24,\n+                delete: 24..24,\n                 insert: \"self\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"super\",\n-                source_range: [24; 24),\n-                delete: [24; 24),\n+                source_range: 24..24,\n+                delete: 24..24,\n                 insert: \"super::\",\n                 kind: Keyword,\n             },\n@@ -199,15 +199,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"self\",\n-                source_range: [28; 28),\n-                delete: [28; 28),\n+                source_range: 28..28,\n+                delete: 28..28,\n                 insert: \"self\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"super\",\n-                source_range: [28; 28),\n-                delete: [28; 28),\n+                source_range: 28..28,\n+                delete: 28..28,\n                 insert: \"super::\",\n                 kind: Keyword,\n             },\n@@ -230,36 +230,36 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"if\",\n-                source_range: [49; 49),\n-                delete: [49; 49),\n+                source_range: 49..49,\n+                delete: 49..49,\n                 insert: \"if $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"loop\",\n-                source_range: [49; 49),\n-                delete: [49; 49),\n+                source_range: 49..49,\n+                delete: 49..49,\n                 insert: \"loop {$0}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [49; 49),\n-                delete: [49; 49),\n+                source_range: 49..49,\n+                delete: 49..49,\n                 insert: \"match $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"return\",\n-                source_range: [49; 49),\n-                delete: [49; 49),\n+                source_range: 49..49,\n+                delete: 49..49,\n                 insert: \"return;\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"while\",\n-                source_range: [49; 49),\n-                delete: [49; 49),\n+                source_range: 49..49,\n+                delete: 49..49,\n                 insert: \"while $0 {}\",\n                 kind: Keyword,\n             },\n@@ -284,50 +284,50 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"else\",\n-                source_range: [108; 108),\n-                delete: [108; 108),\n+                source_range: 108..108,\n+                delete: 108..108,\n                 insert: \"else {$0}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"else if\",\n-                source_range: [108; 108),\n-                delete: [108; 108),\n+                source_range: 108..108,\n+                delete: 108..108,\n                 insert: \"else if $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"if\",\n-                source_range: [108; 108),\n-                delete: [108; 108),\n+                source_range: 108..108,\n+                delete: 108..108,\n                 insert: \"if $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"loop\",\n-                source_range: [108; 108),\n-                delete: [108; 108),\n+                source_range: 108..108,\n+                delete: 108..108,\n                 insert: \"loop {$0}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [108; 108),\n-                delete: [108; 108),\n+                source_range: 108..108,\n+                delete: 108..108,\n                 insert: \"match $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"return\",\n-                source_range: [108; 108),\n-                delete: [108; 108),\n+                source_range: 108..108,\n+                delete: 108..108,\n                 insert: \"return;\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"while\",\n-                source_range: [108; 108),\n-                delete: [108; 108),\n+                source_range: 108..108,\n+                delete: 108..108,\n                 insert: \"while $0 {}\",\n                 kind: Keyword,\n             },\n@@ -351,36 +351,36 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"if\",\n-                source_range: [56; 56),\n-                delete: [56; 56),\n+                source_range: 56..56,\n+                delete: 56..56,\n                 insert: \"if $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"loop\",\n-                source_range: [56; 56),\n-                delete: [56; 56),\n+                source_range: 56..56,\n+                delete: 56..56,\n                 insert: \"loop {$0}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [56; 56),\n-                delete: [56; 56),\n+                source_range: 56..56,\n+                delete: 56..56,\n                 insert: \"match $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"return\",\n-                source_range: [56; 56),\n-                delete: [56; 56),\n+                source_range: 56..56,\n+                delete: 56..56,\n                 insert: \"return $0;\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"while\",\n-                source_range: [56; 56),\n-                delete: [56; 56),\n+                source_range: 56..56,\n+                delete: 56..56,\n                 insert: \"while $0 {}\",\n                 kind: Keyword,\n             },\n@@ -400,36 +400,36 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"if\",\n-                source_range: [49; 49),\n-                delete: [49; 49),\n+                source_range: 49..49,\n+                delete: 49..49,\n                 insert: \"if $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"loop\",\n-                source_range: [49; 49),\n-                delete: [49; 49),\n+                source_range: 49..49,\n+                delete: 49..49,\n                 insert: \"loop {$0}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [49; 49),\n-                delete: [49; 49),\n+                source_range: 49..49,\n+                delete: 49..49,\n                 insert: \"match $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"return\",\n-                source_range: [49; 49),\n-                delete: [49; 49),\n+                source_range: 49..49,\n+                delete: 49..49,\n                 insert: \"return;\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"while\",\n-                source_range: [49; 49),\n-                delete: [49; 49),\n+                source_range: 49..49,\n+                delete: 49..49,\n                 insert: \"while $0 {}\",\n                 kind: Keyword,\n             },\n@@ -454,36 +454,36 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"if\",\n-                source_range: [97; 97),\n-                delete: [97; 97),\n+                source_range: 97..97,\n+                delete: 97..97,\n                 insert: \"if $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"loop\",\n-                source_range: [97; 97),\n-                delete: [97; 97),\n+                source_range: 97..97,\n+                delete: 97..97,\n                 insert: \"loop {$0}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [97; 97),\n-                delete: [97; 97),\n+                source_range: 97..97,\n+                delete: 97..97,\n                 insert: \"match $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"return\",\n-                source_range: [97; 97),\n-                delete: [97; 97),\n+                source_range: 97..97,\n+                delete: 97..97,\n                 insert: \"return $0\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"while\",\n-                source_range: [97; 97),\n-                delete: [97; 97),\n+                source_range: 97..97,\n+                delete: 97..97,\n                 insert: \"while $0 {}\",\n                 kind: Keyword,\n             },\n@@ -508,36 +508,36 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"if\",\n-                source_range: [95; 95),\n-                delete: [95; 95),\n+                source_range: 95..95,\n+                delete: 95..95,\n                 insert: \"if $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"loop\",\n-                source_range: [95; 95),\n-                delete: [95; 95),\n+                source_range: 95..95,\n+                delete: 95..95,\n                 insert: \"loop {$0}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [95; 95),\n-                delete: [95; 95),\n+                source_range: 95..95,\n+                delete: 95..95,\n                 insert: \"match $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"return\",\n-                source_range: [95; 95),\n-                delete: [95; 95),\n+                source_range: 95..95,\n+                delete: 95..95,\n                 insert: \"return $0;\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"while\",\n-                source_range: [95; 95),\n-                delete: [95; 95),\n+                source_range: 95..95,\n+                delete: 95..95,\n                 insert: \"while $0 {}\",\n                 kind: Keyword,\n             },\n@@ -560,36 +560,36 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"if\",\n-                source_range: [95; 95),\n-                delete: [95; 95),\n+                source_range: 95..95,\n+                delete: 95..95,\n                 insert: \"if $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"loop\",\n-                source_range: [95; 95),\n-                delete: [95; 95),\n+                source_range: 95..95,\n+                delete: 95..95,\n                 insert: \"loop {$0}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [95; 95),\n-                delete: [95; 95),\n+                source_range: 95..95,\n+                delete: 95..95,\n                 insert: \"match $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"return\",\n-                source_range: [95; 95),\n-                delete: [95; 95),\n+                source_range: 95..95,\n+                delete: 95..95,\n                 insert: \"return $0;\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"while\",\n-                source_range: [95; 95),\n-                delete: [95; 95),\n+                source_range: 95..95,\n+                delete: 95..95,\n                 insert: \"while $0 {}\",\n                 kind: Keyword,\n             },\n@@ -612,50 +612,50 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"break\",\n-                source_range: [63; 63),\n-                delete: [63; 63),\n+                source_range: 63..63,\n+                delete: 63..63,\n                 insert: \"break;\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"continue\",\n-                source_range: [63; 63),\n-                delete: [63; 63),\n+                source_range: 63..63,\n+                delete: 63..63,\n                 insert: \"continue;\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"if\",\n-                source_range: [63; 63),\n-                delete: [63; 63),\n+                source_range: 63..63,\n+                delete: 63..63,\n                 insert: \"if $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"loop\",\n-                source_range: [63; 63),\n-                delete: [63; 63),\n+                source_range: 63..63,\n+                delete: 63..63,\n                 insert: \"loop {$0}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [63; 63),\n-                delete: [63; 63),\n+                source_range: 63..63,\n+                delete: 63..63,\n                 insert: \"match $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"return\",\n-                source_range: [63; 63),\n-                delete: [63; 63),\n+                source_range: 63..63,\n+                delete: 63..63,\n                 insert: \"return $0;\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"while\",\n-                source_range: [63; 63),\n-                delete: [63; 63),\n+                source_range: 63..63,\n+                delete: 63..63,\n                 insert: \"while $0 {}\",\n                 kind: Keyword,\n             },\n@@ -676,36 +676,36 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"if\",\n-                source_range: [68; 68),\n-                delete: [68; 68),\n+                source_range: 68..68,\n+                delete: 68..68,\n                 insert: \"if $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"loop\",\n-                source_range: [68; 68),\n-                delete: [68; 68),\n+                source_range: 68..68,\n+                delete: 68..68,\n                 insert: \"loop {$0}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [68; 68),\n-                delete: [68; 68),\n+                source_range: 68..68,\n+                delete: 68..68,\n                 insert: \"match $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"return\",\n-                source_range: [68; 68),\n-                delete: [68; 68),\n+                source_range: 68..68,\n+                delete: 68..68,\n                 insert: \"return $0;\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"while\",\n-                source_range: [68; 68),\n-                delete: [68; 68),\n+                source_range: 68..68,\n+                delete: 68..68,\n                 insert: \"while $0 {}\",\n                 kind: Keyword,\n             },\n@@ -732,50 +732,50 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"break\",\n-                source_range: [122; 124),\n-                delete: [122; 124),\n+                source_range: 122..124,\n+                delete: 122..124,\n                 insert: \"break\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"continue\",\n-                source_range: [122; 124),\n-                delete: [122; 124),\n+                source_range: 122..124,\n+                delete: 122..124,\n                 insert: \"continue\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"if\",\n-                source_range: [122; 124),\n-                delete: [122; 124),\n+                source_range: 122..124,\n+                delete: 122..124,\n                 insert: \"if $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"loop\",\n-                source_range: [122; 124),\n-                delete: [122; 124),\n+                source_range: 122..124,\n+                delete: 122..124,\n                 insert: \"loop {$0}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [122; 124),\n-                delete: [122; 124),\n+                source_range: 122..124,\n+                delete: 122..124,\n                 insert: \"match $0 {}\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"return\",\n-                source_range: [122; 124),\n-                delete: [122; 124),\n+                source_range: 122..124,\n+                delete: 122..124,\n                 insert: \"return\",\n                 kind: Keyword,\n             },\n             CompletionItem {\n                 label: \"while\",\n-                source_range: [122; 124),\n-                delete: [122; 124),\n+                source_range: 122..124,\n+                delete: 122..124,\n                 insert: \"while $0 {}\",\n                 kind: Keyword,\n             },"}, {"sha": "d9bb5fd25e36cc1178054cf593cb531618169516", "filename": "crates/ra_ide/src/completion/complete_macro_in_item_position.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_macro_in_item_position.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -42,8 +42,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo!(\u2026)\",\n-                source_range: [46; 46),\n-                delete: [46; 46),\n+                source_range: 46..46,\n+                delete: 46..46,\n                 insert: \"foo!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! foo\",\n@@ -82,8 +82,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"vec![\u2026]\",\n-                source_range: [280; 280),\n-                delete: [280; 280),\n+                source_range: 280..280,\n+                delete: 280..280,\n                 insert: \"vec![$0]\",\n                 kind: Macro,\n                 detail: \"macro_rules! vec\",\n@@ -119,8 +119,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo! {\u2026}\",\n-                source_range: [163; 163),\n-                delete: [163; 163),\n+                source_range: 163..163,\n+                delete: 163..163,\n                 insert: \"foo! {$0}\",\n                 kind: Macro,\n                 detail: \"macro_rules! foo\",\n@@ -130,8 +130,8 @@ mod tests {\n             },\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: [163; 163),\n-                delete: [163; 163),\n+                source_range: 163..163,\n+                delete: 163..163,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\","}, {"sha": "fdd9e928b279aa8c59b7dda3fcaa5718918956ba", "filename": "crates/ra_ide/src/completion/complete_pattern.rs", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_pattern.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -63,37 +63,37 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Bar\",\n-                source_range: [246; 246),\n-                delete: [246; 246),\n+                source_range: 246..246,\n+                delete: 246..246,\n                 insert: \"Bar\",\n                 kind: Struct,\n             },\n             CompletionItem {\n                 label: \"E\",\n-                source_range: [246; 246),\n-                delete: [246; 246),\n+                source_range: 246..246,\n+                delete: 246..246,\n                 insert: \"E\",\n                 kind: Enum,\n             },\n             CompletionItem {\n                 label: \"X\",\n-                source_range: [246; 246),\n-                delete: [246; 246),\n+                source_range: 246..246,\n+                delete: 246..246,\n                 insert: \"X\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n             },\n             CompletionItem {\n                 label: \"Z\",\n-                source_range: [246; 246),\n-                delete: [246; 246),\n+                source_range: 246..246,\n+                delete: 246..246,\n                 insert: \"Z\",\n                 kind: Const,\n             },\n             CompletionItem {\n                 label: \"m\",\n-                source_range: [246; 246),\n-                delete: [246; 246),\n+                source_range: 246..246,\n+                delete: 246..246,\n                 insert: \"m\",\n                 kind: Module,\n             },\n@@ -119,15 +119,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"E\",\n-                source_range: [151; 151),\n-                delete: [151; 151),\n+                source_range: 151..151,\n+                delete: 151..151,\n                 insert: \"E\",\n                 kind: Enum,\n             },\n             CompletionItem {\n                 label: \"m!(\u2026)\",\n-                source_range: [151; 151),\n-                delete: [151; 151),\n+                source_range: 151..151,\n+                delete: 151..151,\n                 insert: \"m!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! m\","}, {"sha": "6a0f0c72e2fa8b945517f52346b38342f7e5e36e", "filename": "crates/ra_ide/src/completion/complete_postfix.rs", "status": "modified", "additions": 67, "deletions": 67, "changes": 134, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_postfix.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -2,7 +2,7 @@\n \n use ra_syntax::{\n     ast::{self, AstNode},\n-    TextRange, TextUnit,\n+    TextRange, TextSize,\n };\n use ra_text_edit::TextEdit;\n \n@@ -115,7 +115,7 @@ pub(super) fn complete_postfix(acc: &mut Completions, ctx: &CompletionContext) {\n fn get_receiver_text(receiver: &ast::Expr, receiver_is_ambiguous_float_literal: bool) -> String {\n     if receiver_is_ambiguous_float_literal {\n         let text = receiver.syntax().text();\n-        let without_dot = ..text.len() - TextUnit::of_char('.');\n+        let without_dot = ..text.len() - TextSize::of('.');\n         text.slice(without_dot).to_string()\n     } else {\n         receiver.to_string()\n@@ -143,7 +143,7 @@ fn postfix_snippet(\n     let edit = {\n         let receiver_syntax = receiver.syntax();\n         let receiver_range = ctx.sema.original_range(receiver_syntax).range;\n-        let delete_range = TextRange::from_to(receiver_range.start(), ctx.source_range().end());\n+        let delete_range = TextRange::new(receiver_range.start(), ctx.source_range().end());\n         TextEdit::replace(delete_range, snippet.to_string())\n     };\n     CompletionItem::new(CompletionKind::Postfix, ctx.source_range(), label)\n@@ -176,57 +176,57 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"box\",\n-                source_range: [89; 89),\n-                delete: [85; 89),\n+                source_range: 89..89,\n+                delete: 85..89,\n                 insert: \"Box::new(bar)\",\n                 detail: \"Box::new(expr)\",\n             },\n             CompletionItem {\n                 label: \"dbg\",\n-                source_range: [89; 89),\n-                delete: [85; 89),\n+                source_range: 89..89,\n+                delete: 85..89,\n                 insert: \"dbg!(bar)\",\n                 detail: \"dbg!(expr)\",\n             },\n             CompletionItem {\n                 label: \"if\",\n-                source_range: [89; 89),\n-                delete: [85; 89),\n+                source_range: 89..89,\n+                delete: 85..89,\n                 insert: \"if bar {$0}\",\n                 detail: \"if expr {}\",\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [89; 89),\n-                delete: [85; 89),\n+                source_range: 89..89,\n+                delete: 85..89,\n                 insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n                 detail: \"match expr {}\",\n             },\n             CompletionItem {\n                 label: \"not\",\n-                source_range: [89; 89),\n-                delete: [85; 89),\n+                source_range: 89..89,\n+                delete: 85..89,\n                 insert: \"!bar\",\n                 detail: \"!expr\",\n             },\n             CompletionItem {\n                 label: \"ref\",\n-                source_range: [89; 89),\n-                delete: [85; 89),\n+                source_range: 89..89,\n+                delete: 85..89,\n                 insert: \"&bar\",\n                 detail: \"&expr\",\n             },\n             CompletionItem {\n                 label: \"refm\",\n-                source_range: [89; 89),\n-                delete: [85; 89),\n+                source_range: 89..89,\n+                delete: 85..89,\n                 insert: \"&mut bar\",\n                 detail: \"&mut expr\",\n             },\n             CompletionItem {\n                 label: \"while\",\n-                source_range: [89; 89),\n-                delete: [85; 89),\n+                source_range: 89..89,\n+                delete: 85..89,\n                 insert: \"while bar {\\n$0\\n}\",\n                 detail: \"while expr {}\",\n             },\n@@ -250,43 +250,43 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"box\",\n-                source_range: [91; 91),\n-                delete: [87; 91),\n+                source_range: 91..91,\n+                delete: 87..91,\n                 insert: \"Box::new(bar)\",\n                 detail: \"Box::new(expr)\",\n             },\n             CompletionItem {\n                 label: \"dbg\",\n-                source_range: [91; 91),\n-                delete: [87; 91),\n+                source_range: 91..91,\n+                delete: 87..91,\n                 insert: \"dbg!(bar)\",\n                 detail: \"dbg!(expr)\",\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [91; 91),\n-                delete: [87; 91),\n+                source_range: 91..91,\n+                delete: 87..91,\n                 insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n                 detail: \"match expr {}\",\n             },\n             CompletionItem {\n                 label: \"not\",\n-                source_range: [91; 91),\n-                delete: [87; 91),\n+                source_range: 91..91,\n+                delete: 87..91,\n                 insert: \"!bar\",\n                 detail: \"!expr\",\n             },\n             CompletionItem {\n                 label: \"ref\",\n-                source_range: [91; 91),\n-                delete: [87; 91),\n+                source_range: 91..91,\n+                delete: 87..91,\n                 insert: \"&bar\",\n                 detail: \"&expr\",\n             },\n             CompletionItem {\n                 label: \"refm\",\n-                source_range: [91; 91),\n-                delete: [87; 91),\n+                source_range: 91..91,\n+                delete: 87..91,\n                 insert: \"&mut bar\",\n                 detail: \"&mut expr\",\n             },\n@@ -309,43 +309,43 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"box\",\n-                source_range: [52; 52),\n-                delete: [49; 52),\n+                source_range: 52..52,\n+                delete: 49..52,\n                 insert: \"Box::new(42)\",\n                 detail: \"Box::new(expr)\",\n             },\n             CompletionItem {\n                 label: \"dbg\",\n-                source_range: [52; 52),\n-                delete: [49; 52),\n+                source_range: 52..52,\n+                delete: 49..52,\n                 insert: \"dbg!(42)\",\n                 detail: \"dbg!(expr)\",\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [52; 52),\n-                delete: [49; 52),\n+                source_range: 52..52,\n+                delete: 49..52,\n                 insert: \"match 42 {\\n    ${1:_} => {$0\\\\},\\n}\",\n                 detail: \"match expr {}\",\n             },\n             CompletionItem {\n                 label: \"not\",\n-                source_range: [52; 52),\n-                delete: [49; 52),\n+                source_range: 52..52,\n+                delete: 49..52,\n                 insert: \"!42\",\n                 detail: \"!expr\",\n             },\n             CompletionItem {\n                 label: \"ref\",\n-                source_range: [52; 52),\n-                delete: [49; 52),\n+                source_range: 52..52,\n+                delete: 49..52,\n                 insert: \"&42\",\n                 detail: \"&expr\",\n             },\n             CompletionItem {\n                 label: \"refm\",\n-                source_range: [52; 52),\n-                delete: [49; 52),\n+                source_range: 52..52,\n+                delete: 49..52,\n                 insert: \"&mut 42\",\n                 detail: \"&mut expr\",\n             },\n@@ -370,43 +370,43 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"box\",\n-                source_range: [149; 150),\n-                delete: [145; 150),\n+                source_range: 149..150,\n+                delete: 145..150,\n                 insert: \"Box::new(bar)\",\n                 detail: \"Box::new(expr)\",\n             },\n             CompletionItem {\n                 label: \"dbg\",\n-                source_range: [149; 150),\n-                delete: [145; 150),\n+                source_range: 149..150,\n+                delete: 145..150,\n                 insert: \"dbg!(bar)\",\n                 detail: \"dbg!(expr)\",\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [149; 150),\n-                delete: [145; 150),\n+                source_range: 149..150,\n+                delete: 145..150,\n                 insert: \"match bar {\\n    ${1:_} => {$0\\\\},\\n}\",\n                 detail: \"match expr {}\",\n             },\n             CompletionItem {\n                 label: \"not\",\n-                source_range: [149; 150),\n-                delete: [145; 150),\n+                source_range: 149..150,\n+                delete: 145..150,\n                 insert: \"!bar\",\n                 detail: \"!expr\",\n             },\n             CompletionItem {\n                 label: \"ref\",\n-                source_range: [149; 150),\n-                delete: [145; 150),\n+                source_range: 149..150,\n+                delete: 145..150,\n                 insert: \"&bar\",\n                 detail: \"&expr\",\n             },\n             CompletionItem {\n                 label: \"refm\",\n-                source_range: [149; 150),\n-                delete: [145; 150),\n+                source_range: 149..150,\n+                delete: 145..150,\n                 insert: \"&mut bar\",\n                 detail: \"&mut expr\",\n             },\n@@ -429,43 +429,43 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"box\",\n-                source_range: [56; 56),\n-                delete: [49; 56),\n+                source_range: 56..56,\n+                delete: 49..56,\n                 insert: \"Box::new(&&&&42)\",\n                 detail: \"Box::new(expr)\",\n             },\n             CompletionItem {\n                 label: \"dbg\",\n-                source_range: [56; 56),\n-                delete: [49; 56),\n+                source_range: 56..56,\n+                delete: 49..56,\n                 insert: \"dbg!(&&&&42)\",\n                 detail: \"dbg!(expr)\",\n             },\n             CompletionItem {\n                 label: \"match\",\n-                source_range: [56; 56),\n-                delete: [49; 56),\n+                source_range: 56..56,\n+                delete: 49..56,\n                 insert: \"match &&&&42 {\\n    ${1:_} => {$0\\\\},\\n}\",\n                 detail: \"match expr {}\",\n             },\n             CompletionItem {\n                 label: \"not\",\n-                source_range: [56; 56),\n-                delete: [53; 56),\n+                source_range: 56..56,\n+                delete: 53..56,\n                 insert: \"!42\",\n                 detail: \"!expr\",\n             },\n             CompletionItem {\n                 label: \"ref\",\n-                source_range: [56; 56),\n-                delete: [53; 56),\n+                source_range: 56..56,\n+                delete: 53..56,\n                 insert: \"&42\",\n                 detail: \"&expr\",\n             },\n             CompletionItem {\n                 label: \"refm\",\n-                source_range: [56; 56),\n-                delete: [53; 56),\n+                source_range: 56..56,\n+                delete: 53..56,\n                 insert: \"&mut 42\",\n                 detail: \"&mut expr\",\n             },"}, {"sha": "dd10f74e6d9ea3d801aaf02bef4f1c5b0f6359de", "filename": "crates/ra_ide/src/completion/complete_qualified_path.rs", "status": "modified", "additions": 78, "deletions": 78, "changes": 156, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_qualified_path.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -162,8 +162,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"my\",\n-                source_range: [27; 29),\n-                delete: [27; 29),\n+                source_range: 27..29,\n+                delete: 27..29,\n                 insert: \"my\",\n                 kind: Module,\n                 documentation: Documentation(\n@@ -193,15 +193,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Foo\",\n-                source_range: [31; 31),\n-                delete: [31; 31),\n+                source_range: 31..31,\n+                delete: 31..31,\n                 insert: \"Foo\",\n                 kind: Struct,\n             },\n             CompletionItem {\n                 label: \"PublicBar\",\n-                source_range: [31; 31),\n-                delete: [31; 31),\n+                source_range: 31..31,\n+                delete: 31..31,\n                 insert: \"PublicBar\",\n                 kind: Struct,\n             },\n@@ -226,8 +226,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Bar\",\n-                source_range: [30; 30),\n-                delete: [30; 30),\n+                source_range: 30..30,\n+                delete: 30..30,\n                 insert: \"Bar\",\n                 kind: Struct,\n             },\n@@ -252,15 +252,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Spam\",\n-                source_range: [11; 13),\n-                delete: [11; 13),\n+                source_range: 11..13,\n+                delete: 11..13,\n                 insert: \"Spam\",\n                 kind: Struct,\n             },\n             CompletionItem {\n                 label: \"foo\",\n-                source_range: [11; 13),\n-                delete: [11; 13),\n+                source_range: 11..13,\n+                delete: 11..13,\n                 insert: \"foo\",\n                 kind: Module,\n             },\n@@ -285,15 +285,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Spam\",\n-                source_range: [12; 14),\n-                delete: [12; 14),\n+                source_range: 12..14,\n+                delete: 12..14,\n                 insert: \"Spam\",\n                 kind: Struct,\n             },\n             CompletionItem {\n                 label: \"foo\",\n-                source_range: [12; 14),\n-                delete: [12; 14),\n+                source_range: 12..14,\n+                delete: 12..14,\n                 insert: \"foo\",\n                 kind: Module,\n             },\n@@ -322,8 +322,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Spam\",\n-                source_range: [23; 25),\n-                delete: [23; 25),\n+                source_range: 23..25,\n+                delete: 23..25,\n                 insert: \"Spam\",\n                 kind: Struct,\n             },\n@@ -352,8 +352,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Bar(\u2026)\",\n-                source_range: [116; 116),\n-                delete: [116; 116),\n+                source_range: 116..116,\n+                delete: 116..116,\n                 insert: \"Bar($0)\",\n                 kind: EnumVariant,\n                 lookup: \"Bar\",\n@@ -365,8 +365,8 @@ mod tests {\n             },\n             CompletionItem {\n                 label: \"Foo\",\n-                source_range: [116; 116),\n-                delete: [116; 116),\n+                source_range: 116..116,\n+                delete: 116..116,\n                 insert: \"Foo\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n@@ -402,8 +402,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Bar(\u2026)\",\n-                source_range: [180; 180),\n-                delete: [180; 180),\n+                source_range: 180..180,\n+                delete: 180..180,\n                 insert: \"Bar($0)\",\n                 kind: EnumVariant,\n                 lookup: \"Bar\",\n@@ -415,8 +415,8 @@ mod tests {\n             },\n             CompletionItem {\n                 label: \"Foo\",\n-                source_range: [180; 180),\n-                delete: [180; 180),\n+                source_range: 180..180,\n+                delete: 180..180,\n                 insert: \"Foo\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n@@ -426,8 +426,8 @@ mod tests {\n             },\n             CompletionItem {\n                 label: \"S(\u2026)\",\n-                source_range: [180; 180),\n-                delete: [180; 180),\n+                source_range: 180..180,\n+                delete: 180..180,\n                 insert: \"S($0)\",\n                 kind: EnumVariant,\n                 lookup: \"S\",\n@@ -463,8 +463,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"m()\",\n-                source_range: [100; 100),\n-                delete: [100; 100),\n+                source_range: 100..100,\n+                delete: 100..100,\n                 insert: \"m()$0\",\n                 kind: Function,\n                 lookup: \"m\",\n@@ -499,8 +499,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"m()\",\n-                source_range: [105; 105),\n-                delete: [105; 105),\n+                source_range: 105..105,\n+                delete: 105..105,\n                 insert: \"m()$0\",\n                 kind: Method,\n                 lookup: \"m\",\n@@ -535,8 +535,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"C\",\n-                source_range: [107; 107),\n-                delete: [107; 107),\n+                source_range: 107..107,\n+                delete: 107..107,\n                 insert: \"C\",\n                 kind: Const,\n                 detail: \"const C: i32 = 42;\",\n@@ -570,8 +570,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"T\",\n-                source_range: [101; 101),\n-                delete: [101; 101),\n+                source_range: 101..101,\n+                delete: 101..101,\n                 insert: \"T\",\n                 kind: TypeAlias,\n                 detail: \"type T = i32;\",\n@@ -610,24 +610,24 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"PUBLIC_CONST\",\n-                source_range: [302; 302),\n-                delete: [302; 302),\n+                source_range: 302..302,\n+                delete: 302..302,\n                 insert: \"PUBLIC_CONST\",\n                 kind: Const,\n                 detail: \"pub(super) const PUBLIC_CONST: u32 = 1;\",\n             },\n             CompletionItem {\n                 label: \"PublicType\",\n-                source_range: [302; 302),\n-                delete: [302; 302),\n+                source_range: 302..302,\n+                delete: 302..302,\n                 insert: \"PublicType\",\n                 kind: TypeAlias,\n                 detail: \"pub(super) type PublicType = u32;\",\n             },\n             CompletionItem {\n                 label: \"public_method()\",\n-                source_range: [302; 302),\n-                delete: [302; 302),\n+                source_range: 302..302,\n+                delete: 302..302,\n                 insert: \"public_method()$0\",\n                 kind: Function,\n                 lookup: \"public_method\",\n@@ -659,8 +659,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"m()\",\n-                source_range: [100; 100),\n-                delete: [100; 100),\n+                source_range: 100..100,\n+                delete: 100..100,\n                 insert: \"m()$0\",\n                 kind: Function,\n                 lookup: \"m\",\n@@ -695,8 +695,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"m()\",\n-                source_range: [101; 101),\n-                delete: [101; 101),\n+                source_range: 101..101,\n+                delete: 101..101,\n                 insert: \"m()$0\",\n                 kind: Function,\n                 lookup: \"m\",\n@@ -728,8 +728,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"bar\",\n-                source_range: [9; 9),\n-                delete: [9; 9),\n+                source_range: 9..9,\n+                delete: 9..9,\n                 insert: \"bar\",\n                 kind: Module,\n             },\n@@ -756,8 +756,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"m()\",\n-                source_range: [73; 73),\n-                delete: [73; 73),\n+                source_range: 73..73,\n+                delete: 73..73,\n                 insert: \"m()$0\",\n                 kind: Function,\n                 lookup: \"m\",\n@@ -792,8 +792,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"m()\",\n-                source_range: [99; 99),\n-                delete: [99; 99),\n+                source_range: 99..99,\n+                delete: 99..99,\n                 insert: \"m()$0\",\n                 kind: Function,\n                 lookup: \"m\",\n@@ -828,8 +828,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"m()\",\n-                source_range: [110; 110),\n-                delete: [110; 110),\n+                source_range: 110..110,\n+                delete: 110..110,\n                 insert: \"m()$0\",\n                 kind: Function,\n                 lookup: \"m\",\n@@ -862,17 +862,17 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"bar()\",\n-                source_range: [185; 185),\n-                delete: [185; 185),\n+                source_range: 185..185,\n+                delete: 185..185,\n                 insert: \"bar()$0\",\n                 kind: Function,\n                 lookup: \"bar\",\n                 detail: \"fn bar()\",\n             },\n             CompletionItem {\n                 label: \"foo()\",\n-                source_range: [185; 185),\n-                delete: [185; 185),\n+                source_range: 185..185,\n+                delete: 185..185,\n                 insert: \"foo()$0\",\n                 kind: Function,\n                 lookup: \"foo\",\n@@ -902,16 +902,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo!(\u2026)\",\n-                source_range: [179; 179),\n-                delete: [179; 179),\n+                source_range: 179..179,\n+                delete: 179..179,\n                 insert: \"foo!($0)\",\n                 kind: Macro,\n                 detail: \"#[macro_export]\\nmacro_rules! foo\",\n             },\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: [179; 179),\n-                delete: [179; 179),\n+                source_range: 179..179,\n+                delete: 179..179,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\",\n@@ -947,22 +947,22 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"RIGHT_CONST\",\n-                source_range: [57; 57),\n-                delete: [57; 57),\n+                source_range: 57..57,\n+                delete: 57..57,\n                 insert: \"RIGHT_CONST\",\n                 kind: Const,\n             },\n             CompletionItem {\n                 label: \"RightType\",\n-                source_range: [57; 57),\n-                delete: [57; 57),\n+                source_range: 57..57,\n+                delete: 57..57,\n                 insert: \"RightType\",\n                 kind: Struct,\n             },\n             CompletionItem {\n                 label: \"right_fn()\",\n-                source_range: [57; 57),\n-                delete: [57; 57),\n+                source_range: 57..57,\n+                delete: 57..57,\n                 insert: \"right_fn()$0\",\n                 kind: Function,\n                 lookup: \"right_fn\",\n@@ -986,17 +986,17 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo()\",\n-                source_range: [93; 94),\n-                delete: [93; 94),\n+                source_range: 93..94,\n+                delete: 93..94,\n                 insert: \"foo()$0\",\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo()\",\n             },\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: [93; 94),\n-                delete: [93; 94),\n+                source_range: 93..94,\n+                delete: 93..94,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\",\n@@ -1025,15 +1025,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"z\",\n-                source_range: [57; 57),\n-                delete: [57; 57),\n+                source_range: 57..57,\n+                delete: 57..57,\n                 insert: \"z\",\n                 kind: Module,\n             },\n             CompletionItem {\n                 label: \"z()\",\n-                source_range: [57; 57),\n-                delete: [57; 57),\n+                source_range: 57..57,\n+                delete: 57..57,\n                 insert: \"z()$0\",\n                 kind: Function,\n                 lookup: \"z\",\n@@ -1064,8 +1064,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"new()\",\n-                source_range: [292; 292),\n-                delete: [292; 292),\n+                source_range: 292..292,\n+                delete: 292..292,\n                 insert: \"new()$0\",\n                 kind: Function,\n                 lookup: \"new\","}, {"sha": "b7ab654c5275dfaa8fbb6f38810275e3a1c42a71", "filename": "crates/ra_ide/src/completion/complete_record.rs", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_record.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -44,8 +44,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo\",\n-                source_range: [117; 118),\n-                delete: [117; 118),\n+                source_range: 117..118,\n+                delete: 117..118,\n                 insert: \"foo\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -73,16 +73,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"bar\",\n-                source_range: [161; 161),\n-                delete: [161; 161),\n+                source_range: 161..161,\n+                delete: 161..161,\n                 insert: \"bar\",\n                 kind: Field,\n                 detail: \"()\",\n             },\n             CompletionItem {\n                 label: \"foo\",\n-                source_range: [161; 161),\n-                delete: [161; 161),\n+                source_range: 161..161,\n+                delete: 161..161,\n                 insert: \"foo\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -109,8 +109,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo\",\n-                source_range: [171; 172),\n-                delete: [171; 172),\n+                source_range: 171..172,\n+                delete: 171..172,\n                 insert: \"foo\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -145,16 +145,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"bar\",\n-                source_range: [372; 372),\n-                delete: [372; 372),\n+                source_range: 372..372,\n+                delete: 372..372,\n                 insert: \"bar\",\n                 kind: Field,\n                 detail: \"u32\",\n             },\n             CompletionItem {\n                 label: \"baz\",\n-                source_range: [372; 372),\n-                delete: [372; 372),\n+                source_range: 372..372,\n+                delete: 372..372,\n                 insert: \"baz\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -190,8 +190,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [142; 145),\n-                delete: [142; 145),\n+                source_range: 142..145,\n+                delete: 142..145,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -215,8 +215,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [83; 86),\n-                delete: [83; 86),\n+                source_range: 83..86,\n+                delete: 83..86,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -241,8 +241,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"a\",\n-                source_range: [119; 119),\n-                delete: [119; 119),\n+                source_range: 119..119,\n+                delete: 119..119,\n                 insert: \"a\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -267,8 +267,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"b\",\n-                source_range: [119; 119),\n-                delete: [119; 119),\n+                source_range: 119..119,\n+                delete: 119..119,\n                 insert: \"b\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -292,8 +292,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"a\",\n-                source_range: [93; 93),\n-                delete: [93; 93),\n+                source_range: 93..93,\n+                delete: 93..93,\n                 insert: \"a\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -317,8 +317,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [137; 140),\n-                delete: [137; 140),\n+                source_range: 137..140,\n+                delete: 137..140,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -352,16 +352,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"bar\",\n-                source_range: [302; 302),\n-                delete: [302; 302),\n+                source_range: 302..302,\n+                delete: 302..302,\n                 insert: \"bar\",\n                 kind: Field,\n                 detail: \"u32\",\n             },\n             CompletionItem {\n                 label: \"baz\",\n-                source_range: [302; 302),\n-                delete: [302; 302),\n+                source_range: 302..302,\n+                delete: 302..302,\n                 insert: \"baz\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -393,8 +393,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo2\",\n-                source_range: [221; 221),\n-                delete: [221; 221),\n+                source_range: 221..221,\n+                delete: 221..221,\n                 insert: \"foo2\",\n                 kind: Field,\n                 detail: \"u32\","}, {"sha": "a3f5d1b6a0172d125a2daba74b7b4ffab5c00960", "filename": "crates/ra_ide/src/completion/complete_snippet.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_snippet.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -67,15 +67,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"pd\",\n-                source_range: [17; 17),\n-                delete: [17; 17),\n+                source_range: 17..17,\n+                delete: 17..17,\n                 insert: \"eprintln!(\\\"$0 = {:?}\\\", $0);\",\n                 kind: Snippet,\n             },\n             CompletionItem {\n                 label: \"ppd\",\n-                source_range: [17; 17),\n-                delete: [17; 17),\n+                source_range: 17..17,\n+                delete: 17..17,\n                 insert: \"eprintln!(\\\"$0 = {:#?}\\\", $0);\",\n                 kind: Snippet,\n             },\n@@ -111,23 +111,23 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Test function\",\n-                source_range: [78; 78),\n-                delete: [78; 78),\n+                source_range: 78..78,\n+                delete: 78..78,\n                 insert: \"#[test]\\nfn ${1:feature}() {\\n    $0\\n}\",\n                 kind: Snippet,\n                 lookup: \"tfn\",\n             },\n             CompletionItem {\n                 label: \"macro_rules\",\n-                source_range: [78; 78),\n-                delete: [78; 78),\n+                source_range: 78..78,\n+                delete: 78..78,\n                 insert: \"macro_rules! $1 {\\n\\t($2) => {\\n\\t\\t$0\\n\\t};\\n}\",\n                 kind: Snippet,\n             },\n             CompletionItem {\n                 label: \"pub(crate)\",\n-                source_range: [78; 78),\n-                delete: [78; 78),\n+                source_range: 78..78,\n+                delete: 78..78,\n                 insert: \"pub(crate) $0\",\n                 kind: Snippet,\n             },"}, {"sha": "ee32d1ff600b66c52b9d083fa5c9e56d12fda8d9", "filename": "crates/ra_ide/src/completion/complete_trait_impl.rs", "status": "modified", "additions": 26, "deletions": 27, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_trait_impl.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -141,7 +141,7 @@ fn add_function_impl(\n     } else {\n         CompletionItemKind::Function\n     };\n-    let range = TextRange::from_to(fn_def_node.text_range().start(), ctx.source_range().end());\n+    let range = TextRange::new(fn_def_node.text_range().start(), ctx.source_range().end());\n \n     match ctx.config.snippet_cap {\n         Some(cap) => {\n@@ -167,7 +167,7 @@ fn add_type_alias_impl(\n \n     let snippet = format!(\"type {} = \", alias_name);\n \n-    let range = TextRange::from_to(type_def_node.text_range().start(), ctx.source_range().end());\n+    let range = TextRange::new(type_def_node.text_range().start(), ctx.source_range().end());\n \n     CompletionItem::new(CompletionKind::Magic, ctx.source_range(), snippet.clone())\n         .text_edit(TextEdit::replace(range, snippet))\n@@ -188,8 +188,7 @@ fn add_const_impl(\n     if let Some(const_name) = const_name {\n         let snippet = make_const_compl_syntax(&const_.source(ctx.db).value);\n \n-        let range =\n-            TextRange::from_to(const_def_node.text_range().start(), ctx.source_range().end());\n+        let range = TextRange::new(const_def_node.text_range().start(), ctx.source_range().end());\n \n         CompletionItem::new(CompletionKind::Magic, ctx.source_range(), snippet.clone())\n             .text_edit(TextEdit::replace(range, snippet))\n@@ -216,7 +215,7 @@ fn make_const_compl_syntax(const_: &ast::ConstDef) -> String {\n         .map_or(const_end, |f| f.text_range().start());\n \n     let len = end - start;\n-    let range = TextRange::from_to(0.into(), len);\n+    let range = TextRange::new(0.into(), len);\n \n     let syntax = const_.syntax().text().slice(range).to_string();\n \n@@ -254,24 +253,24 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"const TEST_CONST: u16 = \",\n-                source_range: [209; 210),\n-                delete: [209; 210),\n+                source_range: 209..210,\n+                delete: 209..210,\n                 insert: \"const TEST_CONST: u16 = \",\n                 kind: Const,\n                 lookup: \"TEST_CONST\",\n             },\n             CompletionItem {\n                 label: \"fn test()\",\n-                source_range: [209; 210),\n-                delete: [209; 210),\n+                source_range: 209..210,\n+                delete: 209..210,\n                 insert: \"fn test() {\\n    $0\\n}\",\n                 kind: Function,\n                 lookup: \"test\",\n             },\n             CompletionItem {\n                 label: \"type TestType = \",\n-                source_range: [209; 210),\n-                delete: [209; 210),\n+                source_range: 209..210,\n+                delete: 209..210,\n                 insert: \"type TestType = \",\n                 kind: TypeAlias,\n                 lookup: \"TestType\",\n@@ -320,8 +319,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"fn test()\",\n-                source_range: [139; 140),\n-                delete: [139; 140),\n+                source_range: 139..140,\n+                delete: 139..140,\n                 insert: \"fn test() {\\n    $0\\n}\",\n                 kind: Function,\n                 lookup: \"test\",\n@@ -349,8 +348,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"fn foo()\",\n-                source_range: [141; 142),\n-                delete: [138; 142),\n+                source_range: 141..142,\n+                delete: 138..142,\n                 insert: \"fn foo() {\\n    $0\\n}\",\n                 kind: Function,\n                 lookup: \"foo\",\n@@ -381,8 +380,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"fn foo_bar()\",\n-                source_range: [200; 201),\n-                delete: [197; 201),\n+                source_range: 200..201,\n+                delete: 197..201,\n                 insert: \"fn foo_bar() {\\n    $0\\n}\",\n                 kind: Function,\n                 lookup: \"foo_bar\",\n@@ -432,8 +431,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"fn foo()\",\n-                source_range: [144; 145),\n-                delete: [141; 145),\n+                source_range: 144..145,\n+                delete: 141..145,\n                 insert: \"fn foo<T>() {\\n    $0\\n}\",\n                 kind: Function,\n                 lookup: \"foo\",\n@@ -461,8 +460,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"fn foo()\",\n-                source_range: [166; 167),\n-                delete: [163; 167),\n+                source_range: 166..167,\n+                delete: 163..167,\n                 insert: \"fn foo<T>()\\nwhere T: Into<String> {\\n    $0\\n}\",\n                 kind: Function,\n                 lookup: \"foo\",\n@@ -488,8 +487,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"type SomeType = \",\n-                source_range: [124; 125),\n-                delete: [119; 125),\n+                source_range: 124..125,\n+                delete: 119..125,\n                 insert: \"type SomeType = \",\n                 kind: TypeAlias,\n                 lookup: \"SomeType\",\n@@ -515,8 +514,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"const SOME_CONST: u16 = \",\n-                source_range: [133; 134),\n-                delete: [127; 134),\n+                source_range: 133..134,\n+                delete: 127..134,\n                 insert: \"const SOME_CONST: u16 = \",\n                 kind: Const,\n                 lookup: \"SOME_CONST\",\n@@ -542,8 +541,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"const SOME_CONST: u16 = \",\n-                source_range: [138; 139),\n-                delete: [132; 139),\n+                source_range: 138..139,\n+                delete: 132..139,\n                 insert: \"const SOME_CONST: u16 = \",\n                 kind: Const,\n                 lookup: \"SOME_CONST\","}, {"sha": "56cd086c68e2d6d717a81c026b7831d307d89eba", "filename": "crates/ra_ide/src/completion/complete_unqualified_path.rs", "status": "modified", "additions": 160, "deletions": 160, "changes": 320, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_unqualified_path.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -85,8 +85,8 @@ mod tests {\n             [\n                 CompletionItem {\n                     label: \"collections\",\n-                    source_range: [21; 24),\n-                    delete: [21; 24),\n+                    source_range: 21..24,\n+                    delete: 21..24,\n                     insert: \"collections\",\n                 },\n             ]\n@@ -157,8 +157,8 @@ mod tests {\n             [\n                 CompletionItem {\n                     label: \"Enum\",\n-                    source_range: [231; 233),\n-                    delete: [231; 233),\n+                    source_range: 231..233,\n+                    delete: 231..233,\n                     insert: \"Enum\",\n                     kind: Enum,\n                 },\n@@ -183,8 +183,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"quux(\u2026)\",\n-                source_range: [91; 91),\n-                delete: [91; 91),\n+                source_range: 91..91,\n+                delete: 91..91,\n                 insert: \"quux(${1:x})$0\",\n                 kind: Function,\n                 lookup: \"quux\",\n@@ -193,16 +193,16 @@ mod tests {\n             },\n             CompletionItem {\n                 label: \"x\",\n-                source_range: [91; 91),\n-                delete: [91; 91),\n+                source_range: 91..91,\n+                delete: 91..91,\n                 insert: \"x\",\n                 kind: Binding,\n                 detail: \"i32\",\n             },\n             CompletionItem {\n                 label: \"y\",\n-                source_range: [91; 91),\n-                delete: [91; 91),\n+                source_range: 91..91,\n+                delete: 91..91,\n                 insert: \"y\",\n                 kind: Binding,\n                 detail: \"i32\",\n@@ -232,23 +232,23 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"a\",\n-                source_range: [242; 242),\n-                delete: [242; 242),\n+                source_range: 242..242,\n+                delete: 242..242,\n                 insert: \"a\",\n                 kind: Binding,\n             },\n             CompletionItem {\n                 label: \"b\",\n-                source_range: [242; 242),\n-                delete: [242; 242),\n+                source_range: 242..242,\n+                delete: 242..242,\n                 insert: \"b\",\n                 kind: Binding,\n                 detail: \"i32\",\n             },\n             CompletionItem {\n                 label: \"quux()\",\n-                source_range: [242; 242),\n-                delete: [242; 242),\n+                source_range: 242..242,\n+                delete: 242..242,\n                 insert: \"quux()$0\",\n                 kind: Function,\n                 lookup: \"quux\",\n@@ -275,17 +275,17 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"quux()\",\n-                source_range: [95; 95),\n-                delete: [95; 95),\n+                source_range: 95..95,\n+                delete: 95..95,\n                 insert: \"quux()$0\",\n                 kind: Function,\n                 lookup: \"quux\",\n                 detail: \"fn quux()\",\n             },\n             CompletionItem {\n                 label: \"x\",\n-                source_range: [95; 95),\n-                delete: [95; 95),\n+                source_range: 95..95,\n+                delete: 95..95,\n                 insert: \"x\",\n                 kind: Binding,\n             },\n@@ -308,15 +308,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"T\",\n-                source_range: [52; 52),\n-                delete: [52; 52),\n+                source_range: 52..52,\n+                delete: 52..52,\n                 insert: \"T\",\n                 kind: TypeParam,\n             },\n             CompletionItem {\n                 label: \"quux()\",\n-                source_range: [52; 52),\n-                delete: [52; 52),\n+                source_range: 52..52,\n+                delete: 52..52,\n                 insert: \"quux()$0\",\n                 kind: Function,\n                 lookup: \"quux\",\n@@ -341,22 +341,22 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Self\",\n-                source_range: [54; 54),\n-                delete: [54; 54),\n+                source_range: 54..54,\n+                delete: 54..54,\n                 insert: \"Self\",\n                 kind: TypeParam,\n             },\n             CompletionItem {\n                 label: \"T\",\n-                source_range: [54; 54),\n-                delete: [54; 54),\n+                source_range: 54..54,\n+                delete: 54..54,\n                 insert: \"T\",\n                 kind: TypeParam,\n             },\n             CompletionItem {\n                 label: \"X<\u2026>\",\n-                source_range: [54; 54),\n-                delete: [54; 54),\n+                source_range: 54..54,\n+                delete: 54..54,\n                 insert: \"X<$0>\",\n                 kind: Struct,\n                 lookup: \"X\",\n@@ -380,15 +380,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Self\",\n-                source_range: [48; 48),\n-                delete: [48; 48),\n+                source_range: 48..48,\n+                delete: 48..48,\n                 insert: \"Self\",\n                 kind: TypeParam,\n             },\n             CompletionItem {\n                 label: \"X\",\n-                source_range: [48; 48),\n-                delete: [48; 48),\n+                source_range: 48..48,\n+                delete: 48..48,\n                 insert: \"X\",\n                 kind: Enum,\n             },\n@@ -413,22 +413,22 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Baz\",\n-                source_range: [105; 105),\n-                delete: [105; 105),\n+                source_range: 105..105,\n+                delete: 105..105,\n                 insert: \"Baz\",\n                 kind: Enum,\n             },\n             CompletionItem {\n                 label: \"Foo\",\n-                source_range: [105; 105),\n-                delete: [105; 105),\n+                source_range: 105..105,\n+                delete: 105..105,\n                 insert: \"Foo\",\n                 kind: Struct,\n             },\n             CompletionItem {\n                 label: \"quux()\",\n-                source_range: [105; 105),\n-                delete: [105; 105),\n+                source_range: 105..105,\n+                delete: 105..105,\n                 insert: \"quux()$0\",\n                 kind: Function,\n                 lookup: \"quux\",\n@@ -455,8 +455,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"other_crate\",\n-                source_range: [4; 4),\n-                delete: [4; 4),\n+                source_range: 4..4,\n+                delete: 4..4,\n                 insert: \"other_crate\",\n                 kind: Module,\n             },\n@@ -481,15 +481,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Bar\",\n-                source_range: [117; 117),\n-                delete: [117; 117),\n+                source_range: 117..117,\n+                delete: 117..117,\n                 insert: \"Bar\",\n                 kind: Struct,\n             },\n             CompletionItem {\n                 label: \"quux()\",\n-                source_range: [117; 117),\n-                delete: [117; 117),\n+                source_range: 117..117,\n+                delete: 117..117,\n                 insert: \"quux()$0\",\n                 kind: Function,\n                 lookup: \"quux\",\n@@ -513,15 +513,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Foo\",\n-                source_range: [55; 55),\n-                delete: [55; 55),\n+                source_range: 55..55,\n+                delete: 55..55,\n                 insert: \"Foo\",\n                 kind: Struct,\n             },\n             CompletionItem {\n                 label: \"x()\",\n-                source_range: [55; 55),\n-                delete: [55; 55),\n+                source_range: 55..55,\n+                delete: 55..55,\n                 insert: \"x()$0\",\n                 kind: Function,\n                 lookup: \"x\",\n@@ -550,16 +550,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"bar\",\n-                source_range: [146; 146),\n-                delete: [146; 146),\n+                source_range: 146..146,\n+                delete: 146..146,\n                 insert: \"bar\",\n                 kind: Binding,\n                 detail: \"i32\",\n             },\n             CompletionItem {\n                 label: \"foo()\",\n-                source_range: [146; 146),\n-                delete: [146; 146),\n+                source_range: 146..146,\n+                delete: 146..146,\n                 insert: \"foo()$0\",\n                 kind: Function,\n                 lookup: \"foo\",\n@@ -578,15 +578,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Self\",\n-                source_range: [25; 25),\n-                delete: [25; 25),\n+                source_range: 25..25,\n+                delete: 25..25,\n                 insert: \"Self\",\n                 kind: TypeParam,\n             },\n             CompletionItem {\n                 label: \"self\",\n-                source_range: [25; 25),\n-                delete: [25; 25),\n+                source_range: 25..25,\n+                delete: 25..25,\n                 insert: \"self\",\n                 kind: Binding,\n                 detail: \"&{unknown}\",\n@@ -617,24 +617,24 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Option\",\n-                source_range: [18; 18),\n-                delete: [18; 18),\n+                source_range: 18..18,\n+                delete: 18..18,\n                 insert: \"Option\",\n                 kind: Struct,\n             },\n             CompletionItem {\n                 label: \"foo()\",\n-                source_range: [18; 18),\n-                delete: [18; 18),\n+                source_range: 18..18,\n+                delete: 18..18,\n                 insert: \"foo()$0\",\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo()\",\n             },\n             CompletionItem {\n                 label: \"std\",\n-                source_range: [18; 18),\n-                delete: [18; 18),\n+                source_range: 18..18,\n+                delete: 18..18,\n                 insert: \"std\",\n                 kind: Module,\n             },\n@@ -672,31 +672,31 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"String\",\n-                source_range: [18; 18),\n-                delete: [18; 18),\n+                source_range: 18..18,\n+                delete: 18..18,\n                 insert: \"String\",\n                 kind: Struct,\n             },\n             CompletionItem {\n                 label: \"core\",\n-                source_range: [18; 18),\n-                delete: [18; 18),\n+                source_range: 18..18,\n+                delete: 18..18,\n                 insert: \"core\",\n                 kind: Module,\n             },\n             CompletionItem {\n                 label: \"foo()\",\n-                source_range: [18; 18),\n-                delete: [18; 18),\n+                source_range: 18..18,\n+                delete: 18..18,\n                 insert: \"foo()$0\",\n                 kind: Function,\n                 lookup: \"foo\",\n                 detail: \"fn foo()\",\n             },\n             CompletionItem {\n                 label: \"std\",\n-                source_range: [18; 18),\n-                delete: [18; 18),\n+                source_range: 18..18,\n+                delete: 18..18,\n                 insert: \"std\",\n                 kind: Module,\n             },\n@@ -742,46 +742,46 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"bar!(\u2026)\",\n-                source_range: [252; 252),\n-                delete: [252; 252),\n+                source_range: 252..252,\n+                delete: 252..252,\n                 insert: \"bar!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! bar\",\n             },\n             CompletionItem {\n                 label: \"baz!(\u2026)\",\n-                source_range: [252; 252),\n-                delete: [252; 252),\n+                source_range: 252..252,\n+                delete: 252..252,\n                 insert: \"baz!($0)\",\n                 kind: Macro,\n                 detail: \"#[macro_export]\\nmacro_rules! baz\",\n             },\n             CompletionItem {\n                 label: \"foo!(\u2026)\",\n-                source_range: [252; 252),\n-                delete: [252; 252),\n+                source_range: 252..252,\n+                delete: 252..252,\n                 insert: \"foo!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! foo\",\n             },\n             CompletionItem {\n                 label: \"m1\",\n-                source_range: [252; 252),\n-                delete: [252; 252),\n+                source_range: 252..252,\n+                delete: 252..252,\n                 insert: \"m1\",\n                 kind: Module,\n             },\n             CompletionItem {\n                 label: \"m2\",\n-                source_range: [252; 252),\n-                delete: [252; 252),\n+                source_range: 252..252,\n+                delete: 252..252,\n                 insert: \"m2\",\n                 kind: Module,\n             },\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: [252; 252),\n-                delete: [252; 252),\n+                source_range: 252..252,\n+                delete: 252..252,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\",\n@@ -811,16 +811,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo!(\u2026)\",\n-                source_range: [49; 49),\n-                delete: [49; 49),\n+                source_range: 49..49,\n+                delete: 49..49,\n                 insert: \"foo!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! foo\",\n             },\n             CompletionItem {\n                 label: \"foo()\",\n-                source_range: [49; 49),\n-                delete: [49; 49),\n+                source_range: 49..49,\n+                delete: 49..49,\n                 insert: \"foo()$0\",\n                 kind: Function,\n                 lookup: \"foo\",\n@@ -850,16 +850,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo!(\u2026)\",\n-                source_range: [57; 57),\n-                delete: [57; 57),\n+                source_range: 57..57,\n+                delete: 57..57,\n                 insert: \"foo!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! foo\",\n             },\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: [57; 57),\n-                delete: [57; 57),\n+                source_range: 57..57,\n+                delete: 57..57,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\",\n@@ -889,16 +889,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo!(\u2026)\",\n-                source_range: [50; 50),\n-                delete: [50; 50),\n+                source_range: 50..50,\n+                delete: 50..50,\n                 insert: \"foo!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! foo\",\n             },\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: [50; 50),\n-                delete: [50; 50),\n+                source_range: 50..50,\n+                delete: 50..50,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\",\n@@ -925,17 +925,17 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"frobnicate()\",\n-                source_range: [23; 24),\n-                delete: [23; 24),\n+                source_range: 23..24,\n+                delete: 23..24,\n                 insert: \"frobnicate()$0\",\n                 kind: Function,\n                 lookup: \"frobnicate\",\n                 detail: \"fn frobnicate()\",\n             },\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: [23; 24),\n-                delete: [23; 24),\n+                source_range: 23..24,\n+                delete: 23..24,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\",\n@@ -962,16 +962,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"m!(\u2026)\",\n-                source_range: [145; 145),\n-                delete: [145; 145),\n+                source_range: 145..145,\n+                delete: 145..145,\n                 insert: \"m!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! m\",\n             },\n             CompletionItem {\n                 label: \"quux(\u2026)\",\n-                source_range: [145; 145),\n-                delete: [145; 145),\n+                source_range: 145..145,\n+                delete: 145..145,\n                 insert: \"quux(${1:x})$0\",\n                 kind: Function,\n                 lookup: \"quux\",\n@@ -980,16 +980,16 @@ mod tests {\n             },\n             CompletionItem {\n                 label: \"x\",\n-                source_range: [145; 145),\n-                delete: [145; 145),\n+                source_range: 145..145,\n+                delete: 145..145,\n                 insert: \"x\",\n                 kind: Binding,\n                 detail: \"i32\",\n             },\n             CompletionItem {\n                 label: \"y\",\n-                source_range: [145; 145),\n-                delete: [145; 145),\n+                source_range: 145..145,\n+                delete: 145..145,\n                 insert: \"y\",\n                 kind: Binding,\n                 detail: \"i32\",\n@@ -1015,16 +1015,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"m!(\u2026)\",\n-                source_range: [145; 146),\n-                delete: [145; 146),\n+                source_range: 145..146,\n+                delete: 145..146,\n                 insert: \"m!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! m\",\n             },\n             CompletionItem {\n                 label: \"quux(\u2026)\",\n-                source_range: [145; 146),\n-                delete: [145; 146),\n+                source_range: 145..146,\n+                delete: 145..146,\n                 insert: \"quux(${1:x})$0\",\n                 kind: Function,\n                 lookup: \"quux\",\n@@ -1033,16 +1033,16 @@ mod tests {\n             },\n             CompletionItem {\n                 label: \"x\",\n-                source_range: [145; 146),\n-                delete: [145; 146),\n+                source_range: 145..146,\n+                delete: 145..146,\n                 insert: \"x\",\n                 kind: Binding,\n                 detail: \"i32\",\n             },\n             CompletionItem {\n                 label: \"y\",\n-                source_range: [145; 146),\n-                delete: [145; 146),\n+                source_range: 145..146,\n+                delete: 145..146,\n                 insert: \"y\",\n                 kind: Binding,\n                 detail: \"i32\",\n@@ -1068,16 +1068,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"m!(\u2026)\",\n-                source_range: [145; 146),\n-                delete: [145; 146),\n+                source_range: 145..146,\n+                delete: 145..146,\n                 insert: \"m!($0)\",\n                 kind: Macro,\n                 detail: \"macro_rules! m\",\n             },\n             CompletionItem {\n                 label: \"quux(\u2026)\",\n-                source_range: [145; 146),\n-                delete: [145; 146),\n+                source_range: 145..146,\n+                delete: 145..146,\n                 insert: \"quux(${1:x})$0\",\n                 kind: Function,\n                 lookup: \"quux\",\n@@ -1086,16 +1086,16 @@ mod tests {\n             },\n             CompletionItem {\n                 label: \"x\",\n-                source_range: [145; 146),\n-                delete: [145; 146),\n+                source_range: 145..146,\n+                delete: 145..146,\n                 insert: \"x\",\n                 kind: Binding,\n                 detail: \"i32\",\n             },\n             CompletionItem {\n                 label: \"y\",\n-                source_range: [145; 146),\n-                delete: [145; 146),\n+                source_range: 145..146,\n+                delete: 145..146,\n                 insert: \"y\",\n                 kind: Binding,\n                 detail: \"i32\",\n@@ -1121,14 +1121,14 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Quux\",\n-                source_range: [82; 82),\n-                delete: [82; 82),\n+                source_range: 82..82,\n+                delete: 82..82,\n                 insert: \"Quux\",\n             },\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: [82; 82),\n-                delete: [82; 82),\n+                source_range: 82..82,\n+                delete: 82..82,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\",\n@@ -1162,31 +1162,31 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Foo\",\n-                source_range: [248; 250),\n-                delete: [248; 250),\n+                source_range: 248..250,\n+                delete: 248..250,\n                 insert: \"Foo\",\n                 kind: Enum,\n             },\n             CompletionItem {\n                 label: \"Foo::Bar\",\n-                source_range: [248; 250),\n-                delete: [248; 250),\n+                source_range: 248..250,\n+                delete: 248..250,\n                 insert: \"Foo::Bar\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n             },\n             CompletionItem {\n                 label: \"Foo::Baz\",\n-                source_range: [248; 250),\n-                delete: [248; 250),\n+                source_range: 248..250,\n+                delete: 248..250,\n                 insert: \"Foo::Baz\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n             },\n             CompletionItem {\n                 label: \"Foo::Quux\",\n-                source_range: [248; 250),\n-                delete: [248; 250),\n+                source_range: 248..250,\n+                delete: 248..250,\n                 insert: \"Foo::Quux\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n@@ -1220,31 +1220,31 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Foo\",\n-                source_range: [219; 221),\n-                delete: [219; 221),\n+                source_range: 219..221,\n+                delete: 219..221,\n                 insert: \"Foo\",\n                 kind: Enum,\n             },\n             CompletionItem {\n                 label: \"Foo::Bar\",\n-                source_range: [219; 221),\n-                delete: [219; 221),\n+                source_range: 219..221,\n+                delete: 219..221,\n                 insert: \"Foo::Bar\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n             },\n             CompletionItem {\n                 label: \"Foo::Baz\",\n-                source_range: [219; 221),\n-                delete: [219; 221),\n+                source_range: 219..221,\n+                delete: 219..221,\n                 insert: \"Foo::Baz\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n             },\n             CompletionItem {\n                 label: \"Foo::Quux\",\n-                source_range: [219; 221),\n-                delete: [219; 221),\n+                source_range: 219..221,\n+                delete: 219..221,\n                 insert: \"Foo::Quux\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n@@ -1274,39 +1274,39 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Foo\",\n-                source_range: [185; 186),\n-                delete: [185; 186),\n+                source_range: 185..186,\n+                delete: 185..186,\n                 insert: \"Foo\",\n                 kind: Enum,\n             },\n             CompletionItem {\n                 label: \"Foo::Bar\",\n-                source_range: [185; 186),\n-                delete: [185; 186),\n+                source_range: 185..186,\n+                delete: 185..186,\n                 insert: \"Foo::Bar\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n             },\n             CompletionItem {\n                 label: \"Foo::Baz\",\n-                source_range: [185; 186),\n-                delete: [185; 186),\n+                source_range: 185..186,\n+                delete: 185..186,\n                 insert: \"Foo::Baz\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n             },\n             CompletionItem {\n                 label: \"Foo::Quux\",\n-                source_range: [185; 186),\n-                delete: [185; 186),\n+                source_range: 185..186,\n+                delete: 185..186,\n                 insert: \"Foo::Quux\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n             },\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: [185; 186),\n-                delete: [185; 186),\n+                source_range: 185..186,\n+                delete: 185..186,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\",\n@@ -1333,24 +1333,24 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"f()\",\n-                source_range: [98; 99),\n-                delete: [98; 99),\n+                source_range: 98..99,\n+                delete: 98..99,\n                 insert: \"f()$0\",\n                 kind: Function,\n                 lookup: \"f\",\n                 detail: \"fn f() -> m::E\",\n             },\n             CompletionItem {\n                 label: \"m\",\n-                source_range: [98; 99),\n-                delete: [98; 99),\n+                source_range: 98..99,\n+                delete: 98..99,\n                 insert: \"m\",\n                 kind: Module,\n             },\n             CompletionItem {\n                 label: \"m::E::V\",\n-                source_range: [98; 99),\n-                delete: [98; 99),\n+                source_range: 98..99,\n+                delete: 98..99,\n                 insert: \"m::E::V\",\n                 kind: EnumVariant,\n                 detail: \"()\","}, {"sha": "5f2797e4188fa077455ac173da514fcf9455c6aa", "filename": "crates/ra_ide/src/completion/completion_context.rs", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcompletion_context.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -7,7 +7,7 @@ use ra_syntax::{\n     algo::{find_covering_element, find_node_at_offset},\n     ast, AstNode,\n     SyntaxKind::*,\n-    SyntaxNode, SyntaxToken, TextRange, TextUnit,\n+    SyntaxNode, SyntaxToken, TextRange, TextSize,\n };\n use ra_text_edit::AtomTextEdit;\n \n@@ -20,7 +20,7 @@ pub(crate) struct CompletionContext<'a> {\n     pub(super) sema: Semantics<'a, RootDatabase>,\n     pub(super) db: &'a RootDatabase,\n     pub(super) config: &'a CompletionConfig,\n-    pub(super) offset: TextUnit,\n+    pub(super) offset: TextSize,\n     /// The token before the cursor, in the original file.\n     pub(super) original_token: SyntaxToken,\n     /// The token before the cursor, in the macro-expanded file.\n@@ -167,7 +167,7 @@ impl<'a> CompletionContext<'a> {\n         match self.token.kind() {\n             // workaroud when completion is triggered by trigger characters.\n             IDENT => self.original_token.text_range(),\n-            _ => TextRange::offset_len(self.offset, 0.into()),\n+            _ => TextRange::empty(self.offset),\n         }\n     }\n \n@@ -190,7 +190,7 @@ impl<'a> CompletionContext<'a> {\n         &mut self,\n         original_file: &SyntaxNode,\n         file_with_fake_ident: SyntaxNode,\n-        offset: TextUnit,\n+        offset: TextSize,\n     ) {\n         // First, let's try to complete a reference to some declaration.\n         if let Some(name_ref) = find_node_at_offset::<ast::NameRef>(&file_with_fake_ident, offset) {\n@@ -224,7 +224,8 @@ impl<'a> CompletionContext<'a> {\n                 }\n                 if let Some(let_stmt) = bind_pat.syntax().ancestors().find_map(ast::LetStmt::cast) {\n                     if let Some(pat) = let_stmt.pat() {\n-                        if bind_pat.syntax().text_range().is_subrange(&pat.syntax().text_range()) {\n+                        if pat.syntax().text_range().contains_range(bind_pat.syntax().text_range())\n+                        {\n                             self.is_pat_binding_or_const = false;\n                         }\n                     }\n@@ -246,7 +247,7 @@ impl<'a> CompletionContext<'a> {\n         &mut self,\n         original_file: &SyntaxNode,\n         name_ref: ast::NameRef,\n-        offset: TextUnit,\n+        offset: TextSize,\n     ) {\n         self.name_ref_syntax =\n             find_node_at_offset(&original_file, name_ref.syntax().text_range().start());"}, {"sha": "9f9f06bf051d90f9104c8a2f81d318c1377ac565", "filename": "crates/ra_ide/src/completion/presentation.rs", "status": "modified", "additions": 100, "deletions": 100, "changes": 200, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -452,8 +452,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Foo\",\n-                source_range: [121; 123),\n-                delete: [121; 123),\n+                source_range: 121..123,\n+                delete: 121..123,\n                 insert: \"Foo\",\n                 kind: EnumVariant,\n                 detail: \"{ x: i32, y: i32 }\",\n@@ -478,8 +478,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Foo(\u2026)\",\n-                source_range: [115; 117),\n-                delete: [115; 117),\n+                source_range: 115..117,\n+                delete: 115..117,\n                 insert: \"Foo($0)\",\n                 kind: EnumVariant,\n                 lookup: \"Foo\",\n@@ -506,8 +506,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Foo\",\n-                source_range: [104; 106),\n-                delete: [104; 106),\n+                source_range: 104..106,\n+                delete: 104..106,\n                 insert: \"Foo\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n@@ -534,17 +534,17 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: [203; 206),\n-                delete: [203; 206),\n+                source_range: 203..206,\n+                delete: 203..206,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\",\n                 detail: \"fn main()\",\n             },\n             CompletionItem {\n                 label: \"something_deprecated()\",\n-                source_range: [203; 206),\n-                delete: [203; 206),\n+                source_range: 203..206,\n+                delete: 203..206,\n                 insert: \"something_deprecated()$0\",\n                 kind: Function,\n                 lookup: \"something_deprecated\",\n@@ -553,8 +553,8 @@ mod tests {\n             },\n             CompletionItem {\n                 label: \"something_else_deprecated()\",\n-                source_range: [203; 206),\n-                delete: [203; 206),\n+                source_range: 203..206,\n+                delete: 203..206,\n                 insert: \"something_else_deprecated()$0\",\n                 kind: Function,\n                 lookup: \"something_else_deprecated\",\n@@ -580,17 +580,17 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: [61; 64),\n-                delete: [61; 64),\n+                source_range: 61..64,\n+                delete: 61..64,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\",\n                 detail: \"fn main()\",\n             },\n             CompletionItem {\n                 label: \"no_args()\",\n-                source_range: [61; 64),\n-                delete: [61; 64),\n+                source_range: 61..64,\n+                delete: 61..64,\n                 insert: \"no_args()$0\",\n                 kind: Function,\n                 lookup: \"no_args\",\n@@ -610,17 +610,17 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: [80; 85),\n-                delete: [80; 85),\n+                source_range: 80..85,\n+                delete: 80..85,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\",\n                 detail: \"fn main()\",\n             },\n             CompletionItem {\n                 label: \"with_args(\u2026)\",\n-                source_range: [80; 85),\n-                delete: [80; 85),\n+                source_range: 80..85,\n+                delete: 80..85,\n                 insert: \"with_args(${1:x}, ${2:y})$0\",\n                 kind: Function,\n                 lookup: \"with_args\",\n@@ -646,8 +646,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo()\",\n-                source_range: [163; 164),\n-                delete: [163; 164),\n+                source_range: 163..164,\n+                delete: 163..164,\n                 insert: \"foo()$0\",\n                 kind: Method,\n                 lookup: \"foo\",\n@@ -674,23 +674,23 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"None\",\n-                source_range: [144; 147),\n-                delete: [144; 147),\n+                source_range: 144..147,\n+                delete: 144..147,\n                 insert: \"None\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n             },\n             CompletionItem {\n                 label: \"Option\",\n-                source_range: [144; 147),\n-                delete: [144; 147),\n+                source_range: 144..147,\n+                delete: 144..147,\n                 insert: \"Option\",\n                 kind: Enum,\n             },\n             CompletionItem {\n                 label: \"Some(\u2026)\",\n-                source_range: [144; 147),\n-                delete: [144; 147),\n+                source_range: 144..147,\n+                delete: 144..147,\n                 insert: \"Some($0)\",\n                 kind: EnumVariant,\n                 lookup: \"Some\",\n@@ -699,8 +699,8 @@ mod tests {\n             },\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: [144; 147),\n-                delete: [144; 147),\n+                source_range: 144..147,\n+                delete: 144..147,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\",\n@@ -725,23 +725,23 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"None\",\n-                source_range: [185; 188),\n-                delete: [185; 188),\n+                source_range: 185..188,\n+                delete: 185..188,\n                 insert: \"None\",\n                 kind: EnumVariant,\n                 detail: \"()\",\n             },\n             CompletionItem {\n                 label: \"Option\",\n-                source_range: [185; 188),\n-                delete: [185; 188),\n+                source_range: 185..188,\n+                delete: 185..188,\n                 insert: \"Option\",\n                 kind: Enum,\n             },\n             CompletionItem {\n                 label: \"Some(\u2026)\",\n-                source_range: [185; 188),\n-                delete: [185; 188),\n+                source_range: 185..188,\n+                delete: 185..188,\n                 insert: \"Some($0)\",\n                 kind: EnumVariant,\n                 lookup: \"Some\",\n@@ -771,8 +771,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo(\u2026)\",\n-                source_range: [171; 172),\n-                delete: [171; 172),\n+                source_range: 171..172,\n+                delete: 171..172,\n                 insert: \"foo(${1:x})$0\",\n                 kind: Method,\n                 lookup: \"foo\",\n@@ -806,8 +806,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo(\u2026)\",\n-                source_range: [171; 172),\n-                delete: [171; 172),\n+                source_range: 171..172,\n+                delete: 171..172,\n                 insert: \"foo($0)\",\n                 kind: Method,\n                 lookup: \"foo\",\n@@ -833,8 +833,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"foo\",\n-                source_range: [40; 41),\n-                delete: [40; 41),\n+                source_range: 40..41,\n+                delete: 40..41,\n                 insert: \"foo\",\n                 kind: Function,\n                 detail: \"pub fn foo()\",\n@@ -860,16 +860,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"frobnicate\",\n-                source_range: [35; 39),\n-                delete: [35; 39),\n+                source_range: 35..39,\n+                delete: 35..39,\n                 insert: \"frobnicate\",\n                 kind: Function,\n                 detail: \"fn frobnicate()\",\n             },\n             CompletionItem {\n                 label: \"main\",\n-                source_range: [35; 39),\n-                delete: [35; 39),\n+                source_range: 35..39,\n+                delete: 35..39,\n                 insert: \"main\",\n                 kind: Function,\n                 detail: \"fn main()\",\n@@ -892,8 +892,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"new\",\n-                source_range: [67; 69),\n-                delete: [67; 69),\n+                source_range: 67..69,\n+                delete: 67..69,\n                 insert: \"new\",\n                 kind: Function,\n                 detail: \"fn new() -> Foo\",\n@@ -917,16 +917,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Vec<\u2026>\",\n-                source_range: [61; 63),\n-                delete: [61; 63),\n+                source_range: 61..63,\n+                delete: 61..63,\n                 insert: \"Vec<$0>\",\n                 kind: Struct,\n                 lookup: \"Vec\",\n             },\n             CompletionItem {\n                 label: \"foo(\u2026)\",\n-                source_range: [61; 63),\n-                delete: [61; 63),\n+                source_range: 61..63,\n+                delete: 61..63,\n                 insert: \"foo(${1:xs})$0\",\n                 kind: Function,\n                 lookup: \"foo\",\n@@ -947,16 +947,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Vec<\u2026>\",\n-                source_range: [64; 66),\n-                delete: [64; 66),\n+                source_range: 64..66,\n+                delete: 64..66,\n                 insert: \"Vec<$0>\",\n                 kind: TypeAlias,\n                 lookup: \"Vec\",\n             },\n             CompletionItem {\n                 label: \"foo(\u2026)\",\n-                source_range: [64; 66),\n-                delete: [64; 66),\n+                source_range: 64..66,\n+                delete: 64..66,\n                 insert: \"foo(${1:xs})$0\",\n                 kind: Function,\n                 lookup: \"foo\",\n@@ -977,15 +977,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Vec\",\n-                source_range: [68; 70),\n-                delete: [68; 70),\n+                source_range: 68..70,\n+                delete: 68..70,\n                 insert: \"Vec\",\n                 kind: Struct,\n             },\n             CompletionItem {\n                 label: \"foo(\u2026)\",\n-                source_range: [68; 70),\n-                delete: [68; 70),\n+                source_range: 68..70,\n+                delete: 68..70,\n                 insert: \"foo(${1:xs})$0\",\n                 kind: Function,\n                 lookup: \"foo\",\n@@ -1006,15 +1006,15 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"Vec\",\n-                source_range: [61; 63),\n-                delete: [61; 63),\n+                source_range: 61..63,\n+                delete: 61..63,\n                 insert: \"Vec\",\n                 kind: Struct,\n             },\n             CompletionItem {\n                 label: \"foo(\u2026)\",\n-                source_range: [61; 63),\n-                delete: [61; 63),\n+                source_range: 61..63,\n+                delete: 61..63,\n                 insert: \"foo(${1:xs})$0\",\n                 kind: Function,\n                 lookup: \"foo\",\n@@ -1046,8 +1046,8 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"frobnicate!\",\n-                source_range: [9; 9),\n-                delete: [9; 9),\n+                source_range: 9..9,\n+                delete: 9..9,\n                 insert: \"frobnicate\",\n                 kind: Macro,\n                 detail: \"#[macro_export]\\nmacro_rules! frobnicate\",\n@@ -1072,16 +1072,16 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"frobnicate!\",\n-                source_range: [56; 60),\n-                delete: [56; 60),\n+                source_range: 56..60,\n+                delete: 56..60,\n                 insert: \"frobnicate\",\n                 kind: Macro,\n                 detail: \"macro_rules! frobnicate\",\n             },\n             CompletionItem {\n                 label: \"main()\",\n-                source_range: [56; 60),\n-                delete: [56; 60),\n+                source_range: 56..60,\n+                delete: 56..60,\n                 insert: \"main()$0\",\n                 kind: Function,\n                 lookup: \"main\",\n@@ -1109,24 +1109,24 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"another_field\",\n-                source_range: [201; 201),\n-                delete: [201; 201),\n+                source_range: 201..201,\n+                delete: 201..201,\n                 insert: \"another_field\",\n                 kind: Field,\n                 detail: \"i64\",\n             },\n             CompletionItem {\n                 label: \"my_string\",\n-                source_range: [201; 201),\n-                delete: [201; 201),\n+                source_range: 201..201,\n+                delete: 201..201,\n                 insert: \"my_string\",\n                 kind: Field,\n                 detail: \"{unknown}\",\n             },\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [201; 201),\n-                delete: [201; 201),\n+                source_range: 201..201,\n+                delete: 201..201,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -1153,25 +1153,25 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"another_field\",\n-                source_range: [208; 208),\n-                delete: [208; 208),\n+                source_range: 208..208,\n+                delete: 208..208,\n                 insert: \"another_field\",\n                 kind: Field,\n                 detail: \"i64\",\n             },\n             CompletionItem {\n                 label: \"another_good_type\",\n-                source_range: [208; 208),\n-                delete: [208; 208),\n+                source_range: 208..208,\n+                delete: 208..208,\n                 insert: \"another_good_type\",\n                 kind: Field,\n                 detail: \"u32\",\n                 score: TypeMatch,\n             },\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [208; 208),\n-                delete: [208; 208),\n+                source_range: 208..208,\n+                delete: 208..208,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -1201,25 +1201,25 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"another_field\",\n-                source_range: [270; 270),\n-                delete: [270; 270),\n+                source_range: 270..270,\n+                delete: 270..270,\n                 insert: \"another_field\",\n                 kind: Field,\n                 detail: \"i64\",\n             },\n             CompletionItem {\n                 label: \"another_good_type\",\n-                source_range: [270; 270),\n-                delete: [270; 270),\n+                source_range: 270..270,\n+                delete: 270..270,\n                 insert: \"another_good_type\",\n                 kind: Field,\n                 detail: \"u32\",\n                 score: TypeMatch,\n             },\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [270; 270),\n-                delete: [270; 270),\n+                source_range: 270..270,\n+                delete: 270..270,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -1249,25 +1249,25 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"another_field\",\n-                source_range: [336; 336),\n-                delete: [336; 336),\n+                source_range: 336..336,\n+                delete: 336..336,\n                 insert: \"another_field\",\n                 kind: Field,\n                 detail: \"i64\",\n                 score: TypeMatch,\n             },\n             CompletionItem {\n                 label: \"another_good_type\",\n-                source_range: [336; 336),\n-                delete: [336; 336),\n+                source_range: 336..336,\n+                delete: 336..336,\n                 insert: \"another_good_type\",\n                 kind: Field,\n                 detail: \"u32\",\n             },\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [336; 336),\n-                delete: [336; 336),\n+                source_range: 336..336,\n+                delete: 336..336,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\",\n@@ -1296,25 +1296,25 @@ mod tests {\n         [\n             CompletionItem {\n                 label: \"another_field\",\n-                source_range: [328; 328),\n-                delete: [328; 328),\n+                source_range: 328..328,\n+                delete: 328..328,\n                 insert: \"another_field\",\n                 kind: Field,\n                 detail: \"i64\",\n             },\n             CompletionItem {\n                 label: \"another_good_type\",\n-                source_range: [328; 328),\n-                delete: [328; 328),\n+                source_range: 328..328,\n+                delete: 328..328,\n                 insert: \"another_good_type\",\n                 kind: Field,\n                 detail: \"u32\",\n                 score: TypeMatch,\n             },\n             CompletionItem {\n                 label: \"the_field\",\n-                source_range: [328; 328),\n-                delete: [328; 328),\n+                source_range: 328..328,\n+                delete: 328..328,\n                 insert: \"the_field\",\n                 kind: Field,\n                 detail: \"u32\","}, {"sha": "a6b4c2c284701c4d8410cfd13673fa0943b7e1d4", "filename": "crates/ra_ide/src/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdiagnostics.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -171,7 +171,7 @@ fn text_edit_for_remove_unnecessary_braces_with_self_in_use_statement(\n     if single_use_tree.path()?.segment()?.syntax().first_child_or_token()?.kind() == T![self] {\n         let start = use_tree_list_node.prev_sibling_or_token()?.text_range().start();\n         let end = use_tree_list_node.text_range().end();\n-        let range = TextRange::from_to(start, end);\n+        let range = TextRange::new(start, end);\n         return Some(TextEdit::delete(range));\n     }\n     None\n@@ -277,7 +277,7 @@ mod tests {\n         assert!(\n             diagnostic.range.start() <= file_position.offset\n                 && diagnostic.range.end() >= file_position.offset,\n-            \"diagnostic range {} does not touch cursor position {}\",\n+            \"diagnostic range {:?} does not touch cursor position {:?}\",\n             diagnostic.range,\n             file_position.offset\n         );\n@@ -603,7 +603,7 @@ mod tests {\n         [\n             Diagnostic {\n                 message: \"unresolved module\",\n-                range: [0; 8),\n+                range: 0..8,\n                 fix: Some(\n                     SourceChange {\n                         label: \"create module\",\n@@ -652,7 +652,7 @@ mod tests {\n         [\n             Diagnostic {\n                 message: \"Missing structure fields:\\n- b\",\n-                range: [224; 233),\n+                range: 224..233,\n                 fix: Some(\n                     SourceChange {\n                         label: \"fill struct fields\",\n@@ -664,7 +664,7 @@ mod tests {\n                                 edit: TextEdit {\n                                     atoms: [\n                                         AtomTextEdit {\n-                                            delete: [3; 9),\n+                                            delete: 3..9,\n                                             insert: \"{a:42, b: ()}\",\n                                         },\n                                     ],"}, {"sha": "967eee5d2328f020c64804262bd40acc6b5958ef", "filename": "crates/ra_ide/src/display/structure.rs", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fstructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fstructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fdisplay%2Fstructure.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -224,8 +224,8 @@ fn very_obsolete() {}\n             StructureNode {\n                 parent: None,\n                 label: \"Foo\",\n-                navigation_range: [8; 11),\n-                node_range: [1; 26),\n+                navigation_range: 8..11,\n+                node_range: 1..26,\n                 kind: STRUCT_DEF,\n                 detail: None,\n                 deprecated: false,\n@@ -235,8 +235,8 @@ fn very_obsolete() {}\n                     0,\n                 ),\n                 label: \"x\",\n-                navigation_range: [18; 19),\n-                node_range: [18; 24),\n+                navigation_range: 18..19,\n+                node_range: 18..24,\n                 kind: RECORD_FIELD_DEF,\n                 detail: Some(\n                     \"i32\",\n@@ -246,8 +246,8 @@ fn very_obsolete() {}\n             StructureNode {\n                 parent: None,\n                 label: \"m\",\n-                navigation_range: [32; 33),\n-                node_range: [28; 158),\n+                navigation_range: 32..33,\n+                node_range: 28..158,\n                 kind: MODULE,\n                 detail: None,\n                 deprecated: false,\n@@ -257,8 +257,8 @@ fn very_obsolete() {}\n                     2,\n                 ),\n                 label: \"bar1\",\n-                navigation_range: [43; 47),\n-                node_range: [40; 52),\n+                navigation_range: 43..47,\n+                node_range: 40..52,\n                 kind: FN_DEF,\n                 detail: Some(\n                     \"fn()\",\n@@ -270,8 +270,8 @@ fn very_obsolete() {}\n                     2,\n                 ),\n                 label: \"bar2\",\n-                navigation_range: [60; 64),\n-                node_range: [57; 81),\n+                navigation_range: 60..64,\n+                node_range: 57..81,\n                 kind: FN_DEF,\n                 detail: Some(\n                     \"fn<T>(t: T) -> T\",\n@@ -283,8 +283,8 @@ fn very_obsolete() {}\n                     2,\n                 ),\n                 label: \"bar3\",\n-                navigation_range: [89; 93),\n-                node_range: [86; 156),\n+                navigation_range: 89..93,\n+                node_range: 86..156,\n                 kind: FN_DEF,\n                 detail: Some(\n                     \"fn<A, B>(a: A, b: B) -> Vec< u32 >\",\n@@ -294,8 +294,8 @@ fn very_obsolete() {}\n             StructureNode {\n                 parent: None,\n                 label: \"E\",\n-                navigation_range: [165; 166),\n-                node_range: [160; 180),\n+                navigation_range: 165..166,\n+                node_range: 160..180,\n                 kind: ENUM_DEF,\n                 detail: None,\n                 deprecated: false,\n@@ -305,8 +305,8 @@ fn very_obsolete() {}\n                     6,\n                 ),\n                 label: \"X\",\n-                navigation_range: [169; 170),\n-                node_range: [169; 170),\n+                navigation_range: 169..170,\n+                node_range: 169..170,\n                 kind: ENUM_VARIANT,\n                 detail: None,\n                 deprecated: false,\n@@ -316,17 +316,17 @@ fn very_obsolete() {}\n                     6,\n                 ),\n                 label: \"Y\",\n-                navigation_range: [172; 173),\n-                node_range: [172; 178),\n+                navigation_range: 172..173,\n+                node_range: 172..178,\n                 kind: ENUM_VARIANT,\n                 detail: None,\n                 deprecated: false,\n             },\n             StructureNode {\n                 parent: None,\n                 label: \"T\",\n-                navigation_range: [186; 187),\n-                node_range: [181; 193),\n+                navigation_range: 186..187,\n+                node_range: 181..193,\n                 kind: TYPE_ALIAS_DEF,\n                 detail: Some(\n                     \"()\",\n@@ -336,8 +336,8 @@ fn very_obsolete() {}\n             StructureNode {\n                 parent: None,\n                 label: \"S\",\n-                navigation_range: [201; 202),\n-                node_range: [194; 213),\n+                navigation_range: 201..202,\n+                node_range: 194..213,\n                 kind: STATIC_DEF,\n                 detail: Some(\n                     \"i32\",\n@@ -347,8 +347,8 @@ fn very_obsolete() {}\n             StructureNode {\n                 parent: None,\n                 label: \"C\",\n-                navigation_range: [220; 221),\n-                node_range: [214; 232),\n+                navigation_range: 220..221,\n+                node_range: 214..232,\n                 kind: CONST_DEF,\n                 detail: Some(\n                     \"i32\",\n@@ -358,53 +358,53 @@ fn very_obsolete() {}\n             StructureNode {\n                 parent: None,\n                 label: \"impl E\",\n-                navigation_range: [239; 240),\n-                node_range: [234; 243),\n+                navigation_range: 239..240,\n+                node_range: 234..243,\n                 kind: IMPL_DEF,\n                 detail: None,\n                 deprecated: false,\n             },\n             StructureNode {\n                 parent: None,\n                 label: \"impl fmt::Debug for E\",\n-                navigation_range: [265; 266),\n-                node_range: [245; 269),\n+                navigation_range: 265..266,\n+                node_range: 245..269,\n                 kind: IMPL_DEF,\n                 detail: None,\n                 deprecated: false,\n             },\n             StructureNode {\n                 parent: None,\n                 label: \"mc\",\n-                navigation_range: [284; 286),\n-                node_range: [271; 303),\n+                navigation_range: 284..286,\n+                node_range: 271..303,\n                 kind: MACRO_CALL,\n                 detail: None,\n                 deprecated: false,\n             },\n             StructureNode {\n                 parent: None,\n                 label: \"mcexp\",\n-                navigation_range: [334; 339),\n-                node_range: [305; 356),\n+                navigation_range: 334..339,\n+                node_range: 305..356,\n                 kind: MACRO_CALL,\n                 detail: None,\n                 deprecated: false,\n             },\n             StructureNode {\n                 parent: None,\n                 label: \"mcexp\",\n-                navigation_range: [387; 392),\n-                node_range: [358; 409),\n+                navigation_range: 387..392,\n+                node_range: 358..409,\n                 kind: MACRO_CALL,\n                 detail: None,\n                 deprecated: false,\n             },\n             StructureNode {\n                 parent: None,\n                 label: \"obsolete\",\n-                navigation_range: [428; 436),\n-                node_range: [411; 441),\n+                navigation_range: 428..436,\n+                node_range: 411..441,\n                 kind: FN_DEF,\n                 detail: Some(\n                     \"fn()\",\n@@ -414,8 +414,8 @@ fn very_obsolete() {}\n             StructureNode {\n                 parent: None,\n                 label: \"very_obsolete\",\n-                navigation_range: [481; 494),\n-                node_range: [443; 499),\n+                navigation_range: 481..494,\n+                node_range: 443..499,\n                 kind: FN_DEF,\n                 detail: Some(\n                     \"fn()\","}, {"sha": "554594a436ce36bdec18f0cb127a63ae945be2b4", "filename": "crates/ra_ide/src/extend_selection.rs", "status": "modified", "additions": 19, "deletions": 25, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fextend_selection.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -9,7 +9,7 @@ use ra_syntax::{\n     ast::{self, AstNode, AstToken},\n     Direction, NodeOrToken,\n     SyntaxKind::{self, *},\n-    SyntaxNode, SyntaxToken, TextRange, TextUnit, TokenAtOffset, T,\n+    SyntaxNode, SyntaxToken, TextRange, TextSize, TokenAtOffset, T,\n };\n \n use crate::FileRange;\n@@ -121,10 +121,10 @@ fn extend_tokens_from_range(\n     let mut first_token = skip_trivia_token(first_token, Direction::Next)?;\n     let mut last_token = skip_trivia_token(last_token, Direction::Prev)?;\n \n-    while !first_token.text_range().is_subrange(&original_range) {\n+    while !original_range.contains_range(first_token.text_range()) {\n         first_token = skip_trivia_token(first_token.next_token()?, Direction::Next)?;\n     }\n-    while !last_token.text_range().is_subrange(&original_range) {\n+    while !original_range.contains_range(last_token.text_range()) {\n         last_token = skip_trivia_token(last_token.prev_token()?, Direction::Prev)?;\n     }\n \n@@ -161,8 +161,8 @@ fn extend_tokens_from_range(\n     .take_while(validate)\n     .last()?;\n \n-    let range = first.text_range().extend_to(&last.text_range());\n-    if original_range.is_subrange(&range) && original_range != range {\n+    let range = first.text_range().cover(last.text_range());\n+    if range.contains_range(original_range) && original_range != range {\n         Some(range)\n     } else {\n         None\n@@ -176,7 +176,7 @@ fn shallowest_node(node: &SyntaxNode) -> SyntaxNode {\n \n fn extend_single_word_in_comment_or_string(\n     leaf: &SyntaxToken,\n-    offset: TextUnit,\n+    offset: TextSize,\n ) -> Option<TextRange> {\n     let text: &str = leaf.text();\n     let cursor_position: u32 = (offset - leaf.text_range().start()).into();\n@@ -190,35 +190,35 @@ fn extend_single_word_in_comment_or_string(\n     let start_idx = before.rfind(non_word_char)? as u32;\n     let end_idx = after.find(non_word_char).unwrap_or_else(|| after.len()) as u32;\n \n-    let from: TextUnit = (start_idx + 1).into();\n-    let to: TextUnit = (cursor_position + end_idx).into();\n+    let from: TextSize = (start_idx + 1).into();\n+    let to: TextSize = (cursor_position + end_idx).into();\n \n-    let range = TextRange::from_to(from, to);\n+    let range = TextRange::new(from, to);\n     if range.is_empty() {\n         None\n     } else {\n         Some(range + leaf.text_range().start())\n     }\n }\n \n-fn extend_ws(root: &SyntaxNode, ws: SyntaxToken, offset: TextUnit) -> TextRange {\n+fn extend_ws(root: &SyntaxNode, ws: SyntaxToken, offset: TextSize) -> TextRange {\n     let ws_text = ws.text();\n-    let suffix = TextRange::from_to(offset, ws.text_range().end()) - ws.text_range().start();\n-    let prefix = TextRange::from_to(ws.text_range().start(), offset) - ws.text_range().start();\n+    let suffix = TextRange::new(offset, ws.text_range().end()) - ws.text_range().start();\n+    let prefix = TextRange::new(ws.text_range().start(), offset) - ws.text_range().start();\n     let ws_suffix = &ws_text.as_str()[suffix];\n     let ws_prefix = &ws_text.as_str()[prefix];\n     if ws_text.contains('\\n') && !ws_suffix.contains('\\n') {\n         if let Some(node) = ws.next_sibling_or_token() {\n             let start = match ws_prefix.rfind('\\n') {\n-                Some(idx) => ws.text_range().start() + TextUnit::from((idx + 1) as u32),\n+                Some(idx) => ws.text_range().start() + TextSize::from((idx + 1) as u32),\n                 None => node.text_range().start(),\n             };\n             let end = if root.text().char_at(node.text_range().end()) == Some('\\n') {\n-                node.text_range().end() + TextUnit::of_char('\\n')\n+                node.text_range().end() + TextSize::of('\\n')\n             } else {\n                 node.text_range().end()\n             };\n-            return TextRange::from_to(start, end);\n+            return TextRange::new(start, end);\n         }\n     }\n     ws.text_range()\n@@ -270,13 +270,10 @@ fn extend_list_item(node: &SyntaxNode) -> Option<TextRange> {\n             .filter(|node| is_single_line_ws(node))\n             .unwrap_or(delimiter_node);\n \n-        return Some(TextRange::from_to(node.text_range().start(), final_node.text_range().end()));\n+        return Some(TextRange::new(node.text_range().start(), final_node.text_range().end()));\n     }\n     if let Some(delimiter_node) = nearby_delimiter(delimiter, node, Direction::Prev) {\n-        return Some(TextRange::from_to(\n-            delimiter_node.text_range().start(),\n-            node.text_range().end(),\n-        ));\n+        return Some(TextRange::new(delimiter_node.text_range().start(), node.text_range().end()));\n     }\n \n     None\n@@ -286,10 +283,7 @@ fn extend_comments(comment: ast::Comment) -> Option<TextRange> {\n     let prev = adj_comments(&comment, Direction::Prev);\n     let next = adj_comments(&comment, Direction::Next);\n     if prev != next {\n-        Some(TextRange::from_to(\n-            prev.syntax().text_range().start(),\n-            next.syntax().text_range().end(),\n-        ))\n+        Some(TextRange::new(prev.syntax().text_range().start(), next.syntax().text_range().end()))\n     } else {\n         None\n     }\n@@ -322,7 +316,7 @@ mod tests {\n     fn do_check(before: &str, afters: &[&str]) {\n         let (cursor, before) = extract_offset(before);\n         let (analysis, file_id) = single_file(&before);\n-        let range = TextRange::offset_len(cursor, 0.into());\n+        let range = TextRange::empty(cursor);\n         let mut frange = FileRange { file_id, range };\n \n         for &after in afters {"}, {"sha": "4379005aa64554714900d55a838ae40bad9daa9d", "filename": "crates/ra_ide/src/folding_ranges.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Ffolding_ranges.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Ffolding_ranges.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ffolding_ranges.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -141,7 +141,7 @@ fn contiguous_range_for_group_unless(\n     }\n \n     if first != &last {\n-        Some(TextRange::from_to(first.text_range().start(), last.text_range().end()))\n+        Some(TextRange::new(first.text_range().start(), last.text_range().end()))\n     } else {\n         // The group consists of only one element, therefore it cannot be folded\n         None\n@@ -187,10 +187,7 @@ fn contiguous_range_for_comment(\n     }\n \n     if first != last {\n-        Some(TextRange::from_to(\n-            first.syntax().text_range().start(),\n-            last.syntax().text_range().end(),\n-        ))\n+        Some(TextRange::new(first.syntax().text_range().start(), last.syntax().text_range().end()))\n     } else {\n         // The group consists of only one element, therefore it cannot be folded\n         None"}, {"sha": "1dfca819d5672657ed8c70aa561f99a0720c56bc", "filename": "crates/ra_ide/src/goto_definition.rs", "status": "modified", "additions": 45, "deletions": 45, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_definition.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -140,7 +140,7 @@ mod tests {\n             struct Foo;\n             enum E { X(Foo<|>) }\n             \",\n-            \"Foo STRUCT_DEF FileId(1) [0; 11) [7; 10)\",\n+            \"Foo STRUCT_DEF FileId(1) 0..11 7..10\",\n             \"struct Foo;|Foo\",\n         );\n     }\n@@ -153,7 +153,7 @@ mod tests {\n             struct Foo;\n             enum E { X(<|>Foo) }\n             \",\n-            \"Foo STRUCT_DEF FileId(1) [0; 11) [7; 10)\",\n+            \"Foo STRUCT_DEF FileId(1) 0..11 7..10\",\n             \"struct Foo;|Foo\",\n         );\n     }\n@@ -174,7 +174,7 @@ mod tests {\n             //- /b.rs\n             struct Foo;\n             \",\n-            \"Foo STRUCT_DEF FileId(2) [0; 11) [7; 10)\",\n+            \"Foo STRUCT_DEF FileId(2) 0..11 7..10\",\n             \"struct Foo;|Foo\",\n         );\n     }\n@@ -189,7 +189,7 @@ mod tests {\n             //- /foo.rs\n             // empty\n             \",\n-            \"foo SOURCE_FILE FileId(2) [0; 10)\",\n+            \"foo SOURCE_FILE FileId(2) 0..10\",\n             \"// empty\\n\\n\",\n         );\n \n@@ -201,7 +201,7 @@ mod tests {\n             //- /foo/mod.rs\n             // empty\n             \",\n-            \"foo SOURCE_FILE FileId(2) [0; 10)\",\n+            \"foo SOURCE_FILE FileId(2) 0..10\",\n             \"// empty\\n\\n\",\n         );\n     }\n@@ -218,7 +218,7 @@ mod tests {\n                 <|>foo!();\n             }\n             \",\n-            \"foo MACRO_CALL FileId(1) [0; 33) [13; 16)\",\n+            \"foo MACRO_CALL FileId(1) 0..33 13..16\",\n             \"macro_rules! foo { () => { () } }|foo\",\n         );\n     }\n@@ -238,7 +238,7 @@ mod tests {\n             #[macro_export]\n             macro_rules! foo { () => { () } }\n             \",\n-            \"foo MACRO_CALL FileId(2) [0; 49) [29; 32)\",\n+            \"foo MACRO_CALL FileId(2) 0..49 29..32\",\n             \"#[macro_export]\\nmacro_rules! foo { () => { () } }|foo\",\n         );\n     }\n@@ -254,7 +254,7 @@ mod tests {\n             #[macro_export]\n             macro_rules! foo { () => { () } }\n             \",\n-            \"foo MACRO_CALL FileId(2) [0; 49) [29; 32)\",\n+            \"foo MACRO_CALL FileId(2) 0..49 29..32\",\n             \"#[macro_export]\\nmacro_rules! foo { () => { () } }|foo\",\n         );\n     }\n@@ -274,7 +274,7 @@ mod tests {\n                <|>foo();\n             }\n             \",\n-            \"foo FN_DEF FileId(1) [64; 80) [75; 78)\",\n+            \"foo FN_DEF FileId(1) 64..80 75..78\",\n             \"define_fn!(foo);|foo\",\n         );\n     }\n@@ -294,7 +294,7 @@ mod tests {\n                <|>foo();\n             }\n             \",\n-            \"foo FN_DEF FileId(1) [51; 64) [51; 64)\",\n+            \"foo FN_DEF FileId(1) 51..64 51..64\",\n             \"define_fn!();|define_fn!();\",\n         );\n     }\n@@ -312,7 +312,7 @@ mod tests {\n                 }\n             }\n             \",\n-            \"foo MACRO_CALL FileId(1) [0; 28) [13; 16)\",\n+            \"foo MACRO_CALL FileId(1) 0..28 13..16\",\n             \"macro_rules! foo {() => {0}}|foo\",\n         );\n     }\n@@ -330,7 +330,7 @@ mod tests {\n                 }\n             }\n             \",\n-            \"foo MACRO_CALL FileId(1) [0; 28) [13; 16)\",\n+            \"foo MACRO_CALL FileId(1) 0..28 13..16\",\n             \"macro_rules! foo {() => {0}}|foo\",\n         );\n     }\n@@ -350,7 +350,7 @@ mod tests {\n                 foo.frobnicate<|>();\n             }\n             \",\n-            \"frobnicate FN_DEF FileId(1) [27; 51) [30; 40)\",\n+            \"frobnicate FN_DEF FileId(1) 27..51 30..40\",\n             \"fn frobnicate(&self) { }|frobnicate\",\n         );\n     }\n@@ -369,7 +369,7 @@ mod tests {\n                 foo.spam<|>;\n             }\n             \",\n-            \"spam RECORD_FIELD_DEF FileId(1) [17; 26) [17; 21)\",\n+            \"spam RECORD_FIELD_DEF FileId(1) 17..26 17..21\",\n             \"spam: u32|spam\",\n         );\n     }\n@@ -390,7 +390,7 @@ mod tests {\n                 }\n             }\n             \",\n-            \"spam RECORD_FIELD_DEF FileId(1) [17; 26) [17; 21)\",\n+            \"spam RECORD_FIELD_DEF FileId(1) 17..26 17..21\",\n             \"spam: u32|spam\",\n         );\n     }\n@@ -409,7 +409,7 @@ mod tests {\n                 let Foo { spam<|>: _, } = foo\n             }\n             \",\n-            \"spam RECORD_FIELD_DEF FileId(1) [17; 26) [17; 21)\",\n+            \"spam RECORD_FIELD_DEF FileId(1) 17..26 17..21\",\n             \"spam: u32|spam\",\n         );\n     }\n@@ -426,7 +426,7 @@ mod tests {\n                 Foo { spam<|>: m!() }\n             }\n             \",\n-            \"spam RECORD_FIELD_DEF FileId(1) [45; 54) [45; 49)\",\n+            \"spam RECORD_FIELD_DEF FileId(1) 45..54 45..49\",\n             \"spam: u32|spam\",\n         );\n     }\n@@ -443,7 +443,7 @@ mod tests {\n                 foo.<|>0;\n             }\n             \",\n-            \"TUPLE_FIELD_DEF FileId(1) [11; 14)\",\n+            \"TUPLE_FIELD_DEF FileId(1) 11..14\",\n             \"u32\",\n         );\n     }\n@@ -462,7 +462,7 @@ mod tests {\n                 Foo::frobnicate<|>();\n             }\n             \",\n-            \"frobnicate FN_DEF FileId(1) [27; 46) [30; 40)\",\n+            \"frobnicate FN_DEF FileId(1) 27..46 30..40\",\n             \"fn frobnicate() { }|frobnicate\",\n         );\n     }\n@@ -480,7 +480,7 @@ mod tests {\n                 Foo::frobnicate<|>();\n             }\n             \",\n-            \"frobnicate FN_DEF FileId(1) [16; 32) [19; 29)\",\n+            \"frobnicate FN_DEF FileId(1) 16..32 19..29\",\n             \"fn frobnicate();|frobnicate\",\n         );\n     }\n@@ -500,7 +500,7 @@ mod tests {\n                 Foo::frobnicate<|>();\n             }\n             \",\n-            \"frobnicate FN_DEF FileId(1) [30; 46) [33; 43)\",\n+            \"frobnicate FN_DEF FileId(1) 30..46 33..43\",\n             \"fn frobnicate();|frobnicate\",\n         );\n     }\n@@ -517,7 +517,7 @@ mod tests {\n                 }\n             }\n             \",\n-            \"impl IMPL_DEF FileId(1) [12; 73)\",\n+            \"impl IMPL_DEF FileId(1) 12..73\",\n             \"impl Foo {...}\",\n         );\n \n@@ -531,7 +531,7 @@ mod tests {\n                 }\n             }\n             \",\n-            \"impl IMPL_DEF FileId(1) [12; 73)\",\n+            \"impl IMPL_DEF FileId(1) 12..73\",\n             \"impl Foo {...}\",\n         );\n \n@@ -545,7 +545,7 @@ mod tests {\n                 }\n             }\n             \",\n-            \"impl IMPL_DEF FileId(1) [15; 75)\",\n+            \"impl IMPL_DEF FileId(1) 15..75\",\n             \"impl Foo {...}\",\n         );\n \n@@ -558,7 +558,7 @@ mod tests {\n                 }\n             }\n             \",\n-            \"impl IMPL_DEF FileId(1) [15; 62)\",\n+            \"impl IMPL_DEF FileId(1) 15..62\",\n             \"impl Foo {...}\",\n         );\n     }\n@@ -578,7 +578,7 @@ mod tests {\n                 }\n             }\n             \",\n-            \"impl IMPL_DEF FileId(1) [49; 115)\",\n+            \"impl IMPL_DEF FileId(1) 49..115\",\n             \"impl Make for Foo {...}\",\n         );\n \n@@ -595,7 +595,7 @@ mod tests {\n                 }\n             }\n             \",\n-            \"impl IMPL_DEF FileId(1) [49; 115)\",\n+            \"impl IMPL_DEF FileId(1) 49..115\",\n             \"impl Make for Foo {...}\",\n         );\n     }\n@@ -607,7 +607,7 @@ mod tests {\n             //- /lib.rs\n             struct Foo<|> { value: u32 }\n             \",\n-            \"Foo STRUCT_DEF FileId(1) [0; 25) [7; 10)\",\n+            \"Foo STRUCT_DEF FileId(1) 0..25 7..10\",\n             \"struct Foo { value: u32 }|Foo\",\n         );\n \n@@ -618,7 +618,7 @@ mod tests {\n                 field<|>: string,\n             }\n             \"#,\n-            \"field RECORD_FIELD_DEF FileId(1) [17; 30) [17; 22)\",\n+            \"field RECORD_FIELD_DEF FileId(1) 17..30 17..22\",\n             \"field: string|field\",\n         );\n \n@@ -627,7 +627,7 @@ mod tests {\n             //- /lib.rs\n             fn foo_test<|>() { }\n             \",\n-            \"foo_test FN_DEF FileId(1) [0; 17) [3; 11)\",\n+            \"foo_test FN_DEF FileId(1) 0..17 3..11\",\n             \"fn foo_test() { }|foo_test\",\n         );\n \n@@ -638,7 +638,7 @@ mod tests {\n                 Variant,\n             }\n             \",\n-            \"Foo ENUM_DEF FileId(1) [0; 25) [5; 8)\",\n+            \"Foo ENUM_DEF FileId(1) 0..25 5..8\",\n             \"enum Foo {...}|Foo\",\n         );\n \n@@ -651,7 +651,7 @@ mod tests {\n                 Variant3,\n             }\n             \",\n-            \"Variant2 ENUM_VARIANT FileId(1) [29; 37) [29; 37)\",\n+            \"Variant2 ENUM_VARIANT FileId(1) 29..37 29..37\",\n             \"Variant2|Variant2\",\n         );\n \n@@ -660,7 +660,7 @@ mod tests {\n             //- /lib.rs\n             static INNER<|>: &str = \"\";\n             \"#,\n-            \"INNER STATIC_DEF FileId(1) [0; 24) [7; 12)\",\n+            \"INNER STATIC_DEF FileId(1) 0..24 7..12\",\n             \"static INNER: &str = \\\"\\\";|INNER\",\n         );\n \n@@ -669,7 +669,7 @@ mod tests {\n             //- /lib.rs\n             const INNER<|>: &str = \"\";\n             \"#,\n-            \"INNER CONST_DEF FileId(1) [0; 23) [6; 11)\",\n+            \"INNER CONST_DEF FileId(1) 0..23 6..11\",\n             \"const INNER: &str = \\\"\\\";|INNER\",\n         );\n \n@@ -678,7 +678,7 @@ mod tests {\n             //- /lib.rs\n             type Thing<|> = Option<()>;\n             \"#,\n-            \"Thing TYPE_ALIAS_DEF FileId(1) [0; 24) [5; 10)\",\n+            \"Thing TYPE_ALIAS_DEF FileId(1) 0..24 5..10\",\n             \"type Thing = Option<()>;|Thing\",\n         );\n \n@@ -687,7 +687,7 @@ mod tests {\n             //- /lib.rs\n             trait Foo<|> { }\n             \"#,\n-            \"Foo TRAIT_DEF FileId(1) [0; 13) [6; 9)\",\n+            \"Foo TRAIT_DEF FileId(1) 0..13 6..9\",\n             \"trait Foo { }|Foo\",\n         );\n \n@@ -696,7 +696,7 @@ mod tests {\n             //- /lib.rs\n             mod bar<|> { }\n             \"#,\n-            \"bar MODULE FileId(1) [0; 11) [4; 7)\",\n+            \"bar MODULE FileId(1) 0..11 4..7\",\n             \"mod bar { }|bar\",\n         );\n     }\n@@ -717,7 +717,7 @@ mod tests {\n             }\n             mod confuse_index { fn foo(); }\n             \",\n-            \"foo FN_DEF FileId(1) [52; 63) [55; 58)\",\n+            \"foo FN_DEF FileId(1) 52..63 55..58\",\n             \"fn foo() {}|foo\",\n         );\n     }\n@@ -746,7 +746,7 @@ mod tests {\n                 format!(\\\"{}\\\", fo<|>o())\n             }\n             \",\n-            \"foo FN_DEF FileId(1) [398; 415) [401; 404)\",\n+            \"foo FN_DEF FileId(1) 398..415 401..404\",\n             \"fn foo() -> i8 {}|foo\",\n         );\n     }\n@@ -760,7 +760,7 @@ mod tests {\n                 t: <|>T,\n             }\n             \",\n-            \"T TYPE_PARAM FileId(1) [11; 12)\",\n+            \"T TYPE_PARAM FileId(1) 11..12\",\n             \"T\",\n         );\n     }\n@@ -782,7 +782,7 @@ mod tests {\n                 });\n             }\n             \",\n-            \"x BIND_PAT FileId(1) [69; 70)\",\n+            \"x BIND_PAT FileId(1) 69..70\",\n             \"x\",\n         );\n \n@@ -801,7 +801,7 @@ mod tests {\n                 });\n             }\n             \",\n-            \"y BIND_PAT FileId(1) [98; 99)\",\n+            \"y BIND_PAT FileId(1) 98..99\",\n             \"y\",\n         );\n     }\n@@ -818,7 +818,7 @@ mod tests {\n                 }\n             }\n             \",\n-            \"x BIND_PAT FileId(1) [39; 40)\",\n+            \"x BIND_PAT FileId(1) 39..40\",\n             \"x\",\n         );\n     }\n@@ -833,7 +833,7 @@ mod tests {\n                 <|>foo!();\n             }\n             \",\n-            \"foo MACRO_CALL FileId(1) [15; 48) [28; 31)\",\n+            \"foo MACRO_CALL FileId(1) 15..48 28..31\",\n             \"macro_rules! foo { () => { () } }|foo\",\n         );\n     }\n@@ -850,7 +850,7 @@ mod tests {\n                 Foo { x<|> };\n             }\n             \",\n-            \"x BIND_PAT FileId(1) [42; 43)\",\n+            \"x BIND_PAT FileId(1) 42..43\",\n             \"x\",\n         )\n     }"}, {"sha": "a84637489e1f8c0fbe5b1f1082ae98eb8a7d9f58", "filename": "crates/ra_ide/src/goto_type_definition.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fgoto_type_definition.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -68,7 +68,7 @@ mod tests {\n                 f<|>\n             }\n             \",\n-            \"Foo STRUCT_DEF FileId(1) [0; 11) [7; 10)\",\n+            \"Foo STRUCT_DEF FileId(1) 0..11 7..10\",\n         );\n     }\n \n@@ -83,7 +83,7 @@ mod tests {\n                 f<|>\n             }\n             \",\n-            \"Foo STRUCT_DEF FileId(1) [0; 11) [7; 10)\",\n+            \"Foo STRUCT_DEF FileId(1) 0..11 7..10\",\n         );\n     }\n \n@@ -102,7 +102,7 @@ mod tests {\n                 }\n             }\n             \",\n-            \"Foo STRUCT_DEF FileId(1) [52; 65) [59; 62)\",\n+            \"Foo STRUCT_DEF FileId(1) 52..65 59..62\",\n         );\n     }\n \n@@ -114,7 +114,7 @@ mod tests {\n             struct Foo;\n             fn foo(<|>f: Foo) {}\n             \",\n-            \"Foo STRUCT_DEF FileId(1) [0; 11) [7; 10)\",\n+            \"Foo STRUCT_DEF FileId(1) 0..11 7..10\",\n         );\n     }\n \n@@ -130,7 +130,7 @@ mod tests {\n                 bar.<|>0;\n             }\n             \",\n-            \"Foo STRUCT_DEF FileId(1) [0; 11) [7; 10)\",\n+            \"Foo STRUCT_DEF FileId(1) 0..11 7..10\",\n         );\n     }\n }"}, {"sha": "fcc2ab7fba6e439f6fba5fc7d6fee5109690a0ab", "filename": "crates/ra_ide/src/hover.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fhover.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -275,7 +275,7 @@ mod tests {\n             \",\n         );\n         let hover = analysis.hover(position).unwrap().unwrap();\n-        assert_eq!(hover.range, TextRange::from_to(95.into(), 100.into()));\n+        assert_eq!(hover.range, TextRange::new(95.into(), 100.into()));\n         assert_eq!(trim_markup_opt(hover.info.first()), Some(\"u32\"));\n     }\n "}, {"sha": "ea2225f7072472227e54efe4a23d30bd1c1f6707", "filename": "crates/ra_ide/src/impls.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fimpls.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -86,7 +86,7 @@ mod tests {\n             struct Foo<|>;\n             impl Foo {}\n             \",\n-            &[\"impl IMPL_DEF FileId(1) [12; 23)\"],\n+            &[\"impl IMPL_DEF FileId(1) 12..23\"],\n         );\n     }\n \n@@ -99,7 +99,7 @@ mod tests {\n             impl Foo {}\n             impl Foo {}\n             \",\n-            &[\"impl IMPL_DEF FileId(1) [12; 23)\", \"impl IMPL_DEF FileId(1) [24; 35)\"],\n+            &[\"impl IMPL_DEF FileId(1) 12..23\", \"impl IMPL_DEF FileId(1) 24..35\"],\n         );\n     }\n \n@@ -116,7 +116,7 @@ mod tests {\n                 impl super::Foo {}\n             }\n             \",\n-            &[\"impl IMPL_DEF FileId(1) [24; 42)\", \"impl IMPL_DEF FileId(1) [57; 75)\"],\n+            &[\"impl IMPL_DEF FileId(1) 24..42\", \"impl IMPL_DEF FileId(1) 57..75\"],\n         );\n     }\n \n@@ -133,7 +133,7 @@ mod tests {\n             //- /b.rs\n             impl crate::Foo {}\n             \",\n-            &[\"impl IMPL_DEF FileId(2) [0; 18)\", \"impl IMPL_DEF FileId(3) [0; 18)\"],\n+            &[\"impl IMPL_DEF FileId(2) 0..18\", \"impl IMPL_DEF FileId(3) 0..18\"],\n         );\n     }\n \n@@ -146,7 +146,7 @@ mod tests {\n             struct Foo;\n             impl T for Foo {}\n             \",\n-            &[\"impl IMPL_DEF FileId(1) [23; 40)\"],\n+            &[\"impl IMPL_DEF FileId(1) 23..40\"],\n         );\n     }\n \n@@ -164,7 +164,7 @@ mod tests {\n             //- /b.rs\n             impl crate::T for crate::Foo {}\n             \",\n-            &[\"impl IMPL_DEF FileId(2) [0; 31)\", \"impl IMPL_DEF FileId(3) [0; 31)\"],\n+            &[\"impl IMPL_DEF FileId(2) 0..31\", \"impl IMPL_DEF FileId(3) 0..31\"],\n         );\n     }\n \n@@ -180,9 +180,9 @@ mod tests {\n             impl T for &Foo {}\n             \",\n             &[\n-                \"impl IMPL_DEF FileId(1) [23; 34)\",\n-                \"impl IMPL_DEF FileId(1) [35; 52)\",\n-                \"impl IMPL_DEF FileId(1) [53; 71)\",\n+                \"impl IMPL_DEF FileId(1) 23..34\",\n+                \"impl IMPL_DEF FileId(1) 35..52\",\n+                \"impl IMPL_DEF FileId(1) 53..71\",\n             ],\n         );\n     }\n@@ -195,7 +195,7 @@ mod tests {\n             #[derive(Copy)]\n             struct Foo<|>;\n             \",\n-            &[\"impl IMPL_DEF FileId(1) [0; 15)\"],\n+            &[\"impl IMPL_DEF FileId(1) 0..15\"],\n         );\n     }\n }"}, {"sha": "98483df32e46e20da2182858ae01ec047833a9c0", "filename": "crates/ra_ide/src/inlay_hints.rs", "status": "modified", "additions": 83, "deletions": 83, "changes": 166, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Finlay_hints.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -322,12 +322,12 @@ mod tests {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsConfig{ parameter_hints: true, type_hints: false, chaining_hints: false, max_length: None}).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [106; 107),\n+                range: 106..107,\n                 kind: ParameterHint,\n                 label: \"a\",\n             },\n             InlayHint {\n-                range: [109; 110),\n+                range: 109..110,\n                 kind: ParameterHint,\n                 label: \"b\",\n             },\n@@ -358,7 +358,7 @@ mod tests {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsConfig{ type_hints: true, parameter_hints: false, chaining_hints: false, max_length: None}).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [97; 99),\n+                range: 97..99,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n@@ -382,12 +382,12 @@ fn main() {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [69; 71),\n+                range: 69..71,\n                 kind: TypeHint,\n                 label: \"Test<i32>\",\n             },\n             InlayHint {\n-                range: [105; 111),\n+                range: 105..111,\n                 kind: TypeHint,\n                 label: \"&Test<i32>\",\n             },\n@@ -439,57 +439,57 @@ fn main() {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [193; 197),\n+                range: 193..197,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [236; 244),\n+                range: 236..244,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [275; 279),\n+                range: 275..279,\n                 kind: TypeHint,\n                 label: \"&str\",\n             },\n             InlayHint {\n-                range: [539; 543),\n+                range: 539..543,\n                 kind: TypeHint,\n                 label: \"(i32, char)\",\n             },\n             InlayHint {\n-                range: [566; 567),\n+                range: 566..567,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [570; 571),\n+                range: 570..571,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [573; 574),\n+                range: 573..574,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [577; 578),\n+                range: 577..578,\n                 kind: TypeHint,\n                 label: \"f64\",\n             },\n             InlayHint {\n-                range: [580; 581),\n+                range: 580..581,\n                 kind: TypeHint,\n                 label: \"f64\",\n             },\n             InlayHint {\n-                range: [584; 585),\n+                range: 584..585,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [627; 628),\n+                range: 627..628,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n@@ -519,47 +519,47 @@ fn main() {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [21; 30),\n+                range: 21..30,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [57; 66),\n+                range: 57..66,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [115; 123),\n+                range: 115..123,\n                 kind: TypeHint,\n                 label: \"|\u2026| -> i32\",\n             },\n             InlayHint {\n-                range: [127; 128),\n+                range: 127..128,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [130; 131),\n+                range: 130..131,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [133; 134),\n+                range: 133..134,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [136; 137),\n+                range: 136..137,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [201; 213),\n+                range: 201..213,\n                 kind: TypeHint,\n                 label: \"&|\u2026| -> i32\",\n             },\n             InlayHint {\n-                range: [236; 245),\n+                range: 236..245,\n                 kind: TypeHint,\n                 label: \"|| -> i32\",\n             },\n@@ -583,12 +583,12 @@ fn main() {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [21; 30),\n+                range: 21..30,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [44; 53),\n+                range: 44..53,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n@@ -633,57 +633,57 @@ fn main() {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [188; 192),\n+                range: 188..192,\n                 kind: TypeHint,\n                 label: \"CustomOption<Test>\",\n             },\n             InlayHint {\n-                range: [267; 271),\n+                range: 267..271,\n                 kind: TypeHint,\n                 label: \"&CustomOption<Test>\",\n             },\n             InlayHint {\n-                range: [300; 304),\n+                range: 300..304,\n                 kind: TypeHint,\n                 label: \"&Test\",\n             },\n             InlayHint {\n-                range: [341; 342),\n+                range: 341..342,\n                 kind: TypeHint,\n                 label: \"&CustomOption<u32>\",\n             },\n             InlayHint {\n-                range: [344; 345),\n+                range: 344..345,\n                 kind: TypeHint,\n                 label: \"&u8\",\n             },\n             InlayHint {\n-                range: [387; 388),\n+                range: 387..388,\n                 kind: TypeHint,\n                 label: \"&CustomOption<u32>\",\n             },\n             InlayHint {\n-                range: [393; 394),\n+                range: 393..394,\n                 kind: TypeHint,\n                 label: \"&u8\",\n             },\n             InlayHint {\n-                range: [441; 442),\n+                range: 441..442,\n                 kind: TypeHint,\n                 label: \"&u32\",\n             },\n             InlayHint {\n-                range: [448; 449),\n+                range: 448..449,\n                 kind: TypeHint,\n                 label: \"&u8\",\n             },\n             InlayHint {\n-                range: [500; 501),\n+                range: 500..501,\n                 kind: TypeHint,\n                 label: \"&u8\",\n             },\n             InlayHint {\n-                range: [543; 544),\n+                range: 543..544,\n                 kind: TypeHint,\n                 label: \"&u8\",\n             },\n@@ -728,57 +728,57 @@ fn main() {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [188; 192),\n+                range: 188..192,\n                 kind: TypeHint,\n                 label: \"CustomOption<Test>\",\n             },\n             InlayHint {\n-                range: [273; 277),\n+                range: 273..277,\n                 kind: TypeHint,\n                 label: \"&CustomOption<Test>\",\n             },\n             InlayHint {\n-                range: [309; 313),\n+                range: 309..313,\n                 kind: TypeHint,\n                 label: \"&Test\",\n             },\n             InlayHint {\n-                range: [353; 354),\n+                range: 353..354,\n                 kind: TypeHint,\n                 label: \"&CustomOption<u32>\",\n             },\n             InlayHint {\n-                range: [356; 357),\n+                range: 356..357,\n                 kind: TypeHint,\n                 label: \"&u8\",\n             },\n             InlayHint {\n-                range: [402; 403),\n+                range: 402..403,\n                 kind: TypeHint,\n                 label: \"&CustomOption<u32>\",\n             },\n             InlayHint {\n-                range: [408; 409),\n+                range: 408..409,\n                 kind: TypeHint,\n                 label: \"&u8\",\n             },\n             InlayHint {\n-                range: [459; 460),\n+                range: 459..460,\n                 kind: TypeHint,\n                 label: \"&u32\",\n             },\n             InlayHint {\n-                range: [466; 467),\n+                range: 466..467,\n                 kind: TypeHint,\n                 label: \"&u8\",\n             },\n             InlayHint {\n-                range: [521; 522),\n+                range: 521..522,\n                 kind: TypeHint,\n                 label: \"&u8\",\n             },\n             InlayHint {\n-                range: [567; 568),\n+                range: 567..568,\n                 kind: TypeHint,\n                 label: \"&u8\",\n             },\n@@ -823,52 +823,52 @@ fn main() {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [252; 256),\n+                range: 252..256,\n                 kind: TypeHint,\n                 label: \"CustomOption<Test>\",\n             },\n             InlayHint {\n-                range: [277; 281),\n+                range: 277..281,\n                 kind: TypeHint,\n                 label: \"Test\",\n             },\n             InlayHint {\n-                range: [310; 311),\n+                range: 310..311,\n                 kind: TypeHint,\n                 label: \"CustomOption<u32>\",\n             },\n             InlayHint {\n-                range: [313; 314),\n+                range: 313..314,\n                 kind: TypeHint,\n                 label: \"u8\",\n             },\n             InlayHint {\n-                range: [348; 349),\n+                range: 348..349,\n                 kind: TypeHint,\n                 label: \"CustomOption<u32>\",\n             },\n             InlayHint {\n-                range: [354; 355),\n+                range: 354..355,\n                 kind: TypeHint,\n                 label: \"u8\",\n             },\n             InlayHint {\n-                range: [394; 395),\n+                range: 394..395,\n                 kind: TypeHint,\n                 label: \"u32\",\n             },\n             InlayHint {\n-                range: [401; 402),\n+                range: 401..402,\n                 kind: TypeHint,\n                 label: \"u8\",\n             },\n             InlayHint {\n-                range: [445; 446),\n+                range: 445..446,\n                 kind: TypeHint,\n                 label: \"u8\",\n             },\n             InlayHint {\n-                range: [480; 481),\n+                range: 480..481,\n                 kind: TypeHint,\n                 label: \"u8\",\n             },\n@@ -895,17 +895,17 @@ fn main() {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsConfig { max_length: Some(8), ..Default::default() }).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [74; 75),\n+                range: 74..75,\n                 kind: TypeHint,\n                 label: \"Smol<u32>\",\n             },\n             InlayHint {\n-                range: [98; 99),\n+                range: 98..99,\n                 kind: TypeHint,\n                 label: \"VeryLongOuterName<\u2026>\",\n             },\n             InlayHint {\n-                range: [137; 138),\n+                range: 137..138,\n                 kind: TypeHint,\n                 label: \"Smol<Smol<\u2026>>\",\n             },\n@@ -983,77 +983,77 @@ fn main() {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsConfig::default()).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [798; 809),\n+                range: 798..809,\n                 kind: TypeHint,\n                 label: \"i32\",\n             },\n             InlayHint {\n-                range: [842; 843),\n+                range: 842..843,\n                 kind: ParameterHint,\n                 label: \"foo\",\n             },\n             InlayHint {\n-                range: [845; 846),\n+                range: 845..846,\n                 kind: ParameterHint,\n                 label: \"bar\",\n             },\n             InlayHint {\n-                range: [848; 855),\n+                range: 848..855,\n                 kind: ParameterHint,\n                 label: \"msg\",\n             },\n             InlayHint {\n-                range: [860; 871),\n+                range: 860..871,\n                 kind: ParameterHint,\n                 label: \"last\",\n             },\n             InlayHint {\n-                range: [914; 917),\n+                range: 914..917,\n                 kind: ParameterHint,\n                 label: \"param\",\n             },\n             InlayHint {\n-                range: [937; 939),\n+                range: 937..939,\n                 kind: ParameterHint,\n                 label: \"&self\",\n             },\n             InlayHint {\n-                range: [941; 945),\n+                range: 941..945,\n                 kind: ParameterHint,\n                 label: \"param\",\n             },\n             InlayHint {\n-                range: [980; 989),\n+                range: 980..989,\n                 kind: ParameterHint,\n                 label: \"file_id\",\n             },\n             InlayHint {\n-                range: [999; 1012),\n+                range: 999..1012,\n                 kind: ParameterHint,\n                 label: \"name\",\n             },\n             InlayHint {\n-                range: [1022; 1026),\n+                range: 1022..1026,\n                 kind: ParameterHint,\n                 label: \"focus_range\",\n             },\n             InlayHint {\n-                range: [1036; 1048),\n+                range: 1036..1048,\n                 kind: ParameterHint,\n                 label: \"full_range\",\n             },\n             InlayHint {\n-                range: [1058; 1071),\n+                range: 1058..1071,\n                 kind: ParameterHint,\n                 label: \"kind\",\n             },\n             InlayHint {\n-                range: [1081; 1085),\n+                range: 1081..1085,\n                 kind: ParameterHint,\n                 label: \"docs\",\n             },\n             InlayHint {\n-                range: [1095; 1099),\n+                range: 1095..1099,\n                 kind: ParameterHint,\n                 label: \"description\",\n             },\n@@ -1184,12 +1184,12 @@ fn main() {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsConfig{ parameter_hints: false, type_hints: false, chaining_hints: true, max_length: None}).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [232; 269),\n+                range: 232..269,\n                 kind: ChainingHint,\n                 label: \"B\",\n             },\n             InlayHint {\n-                range: [232; 239),\n+                range: 232..239,\n                 kind: ChainingHint,\n                 label: \"A\",\n             },\n@@ -1238,12 +1238,12 @@ fn main() {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsConfig{ parameter_hints: false, type_hints: false, chaining_hints: true, max_length: None}).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [252; 323),\n+                range: 252..323,\n                 kind: ChainingHint,\n                 label: \"C\",\n             },\n             InlayHint {\n-                range: [252; 300),\n+                range: 252..300,\n                 kind: ChainingHint,\n                 label: \"B\",\n             },\n@@ -1276,12 +1276,12 @@ fn main() {\n         assert_debug_snapshot!(analysis.inlay_hints(file_id, &InlayHintsConfig{ parameter_hints: false, type_hints: false, chaining_hints: true, max_length: None}).unwrap(), @r###\"\n         [\n             InlayHint {\n-                range: [403; 452),\n+                range: 403..452,\n                 kind: ChainingHint,\n                 label: \"B<X<i32, bool>>\",\n             },\n             InlayHint {\n-                range: [403; 422),\n+                range: 403..422,\n                 kind: ChainingHint,\n                 label: \"A<X<i32, bool>>\",\n             },"}, {"sha": "fde0bfa98b34d3820f2a80d2e7b760b432d72243", "filename": "crates/ra_ide/src/join_lines.rs", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fjoin_lines.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -7,7 +7,7 @@ use ra_syntax::{\n     ast::{self, AstNode, AstToken},\n     Direction, NodeOrToken, SourceFile,\n     SyntaxKind::{self, WHITESPACE},\n-    SyntaxNode, SyntaxToken, TextRange, TextUnit, T,\n+    SyntaxNode, SyntaxToken, TextRange, TextSize, T,\n };\n use ra_text_edit::{TextEdit, TextEditBuilder};\n \n@@ -19,7 +19,7 @@ pub fn join_lines(file: &SourceFile, range: TextRange) -> TextEdit {\n             None => return TextEditBuilder::default().finish(),\n             Some(pos) => pos,\n         };\n-        TextRange::offset_len(range.start() + pos, TextUnit::of_char('\\n'))\n+        TextRange::at(range.start() + pos, TextSize::of('\\n'))\n     } else {\n         range\n     };\n@@ -30,13 +30,13 @@ pub fn join_lines(file: &SourceFile, range: TextRange) -> TextEdit {\n     };\n     let mut edit = TextEditBuilder::default();\n     for token in node.descendants_with_tokens().filter_map(|it| it.into_token()) {\n-        let range = match range.intersection(&token.text_range()) {\n+        let range = match range.intersect(token.text_range()) {\n             Some(range) => range,\n             None => continue,\n         } - token.text_range().start();\n         let text = token.text();\n         for (pos, _) in text[range].bytes().enumerate().filter(|&(_, b)| b == b'\\n') {\n-            let pos: TextUnit = (pos as u32).into();\n+            let pos: TextSize = (pos as u32).into();\n             let off = token.text_range().start() + range.start() + pos;\n             if !edit.invalidates_offset(off) {\n                 remove_newline(&mut edit, &token, off);\n@@ -47,16 +47,16 @@ pub fn join_lines(file: &SourceFile, range: TextRange) -> TextEdit {\n     edit.finish()\n }\n \n-fn remove_newline(edit: &mut TextEditBuilder, token: &SyntaxToken, offset: TextUnit) {\n+fn remove_newline(edit: &mut TextEditBuilder, token: &SyntaxToken, offset: TextSize) {\n     if token.kind() != WHITESPACE || token.text().bytes().filter(|&b| b == b'\\n').count() != 1 {\n         // The node is either the first or the last in the file\n-        let suff = &token.text()[TextRange::from_to(\n-            offset - token.text_range().start() + TextUnit::of_char('\\n'),\n-            TextUnit::of_str(token.text()),\n+        let suff = &token.text()[TextRange::new(\n+            offset - token.text_range().start() + TextSize::of('\\n'),\n+            TextSize::of(token.text().as_str()),\n         )];\n         let spaces = suff.bytes().take_while(|&b| b == b' ').count();\n \n-        edit.replace(TextRange::offset_len(offset, ((spaces + 1) as u32).into()), \" \".to_string());\n+        edit.replace(TextRange::at(offset, ((spaces + 1) as u32).into()), \" \".to_string());\n         return;\n     }\n \n@@ -65,7 +65,7 @@ fn remove_newline(edit: &mut TextEditBuilder, token: &SyntaxToken, offset: TextU\n     let next = token.next_sibling_or_token().unwrap();\n     if is_trailing_comma(prev.kind(), next.kind()) {\n         // Removes: trailing comma, newline (incl. surrounding whitespace)\n-        edit.delete(TextRange::from_to(prev.text_range().start(), token.text_range().end()));\n+        edit.delete(TextRange::new(prev.text_range().start(), token.text_range().end()));\n         return;\n     }\n     if prev.kind() == T![,] && next.kind() == T!['}'] {\n@@ -76,7 +76,7 @@ fn remove_newline(edit: &mut TextEditBuilder, token: &SyntaxToken, offset: TextU\n             \" \"\n         };\n         edit.replace(\n-            TextRange::from_to(prev.text_range().start(), token.text_range().end()),\n+            TextRange::new(prev.text_range().start(), token.text_range().end()),\n             space.to_string(),\n         );\n         return;\n@@ -87,9 +87,9 @@ fn remove_newline(edit: &mut TextEditBuilder, token: &SyntaxToken, offset: TextU\n         next.as_token().cloned().and_then(ast::Comment::cast),\n     ) {\n         // Removes: newline (incl. surrounding whitespace), start of the next comment\n-        edit.delete(TextRange::from_to(\n+        edit.delete(TextRange::new(\n             token.text_range().start(),\n-            next.syntax().text_range().start() + TextUnit::of_str(next.prefix()),\n+            next.syntax().text_range().start() + TextSize::of(next.prefix()),\n         ));\n         return;\n     }\n@@ -170,7 +170,7 @@ mod tests {\n \n     fn check_join_lines(before: &str, after: &str) {\n         check_action(before, after, |file, offset| {\n-            let range = TextRange::offset_len(offset, 0.into());\n+            let range = TextRange::empty(offset);\n             let res = join_lines(file, range);\n             Some(res)\n         })\n@@ -420,10 +420,10 @@ fn foo() {\n         check_join_lines(\n             r\"\n <|>use ra_syntax::{\n-    TextUnit, TextRange,\n+    TextSize, TextRange,\n };\",\n             r\"\n-<|>use ra_syntax::{TextUnit, TextRange,\n+<|>use ra_syntax::{TextSize, TextRange,\n };\",\n         );\n     }\n@@ -434,11 +434,11 @@ fn foo() {\n         check_join_lines(\n             r\"\n use ra_syntax::{\n-<|>    TextUnit, TextRange\n+<|>    TextSize, TextRange\n };\",\n             r\"\n use ra_syntax::{\n-<|>    TextUnit, TextRange};\",\n+<|>    TextSize, TextRange};\",\n         );\n     }\n \n@@ -448,11 +448,11 @@ use ra_syntax::{\n         check_join_lines(\n             r\"\n use ra_syntax::{\n-<|>    TextUnit, TextRange,\n+<|>    TextSize, TextRange,\n };\",\n             r\"\n use ra_syntax::{\n-<|>    TextUnit, TextRange};\",\n+<|>    TextSize, TextRange};\",\n         );\n     }\n "}, {"sha": "09f602fe1b2266495dd0926120be39639097344b", "filename": "crates/ra_ide/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Flib.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -60,7 +60,7 @@ use ra_ide_db::{\n     symbol_index::{self, FileSymbol},\n     LineIndexDatabase,\n };\n-use ra_syntax::{SourceFile, TextRange, TextUnit};\n+use ra_syntax::{SourceFile, TextRange, TextSize};\n \n use crate::display::ToNav;\n \n@@ -265,7 +265,7 @@ impl Analysis {\n \n     /// Returns position of the matching brace (all types of braces are\n     /// supported).\n-    pub fn matching_brace(&self, position: FilePosition) -> Cancelable<Option<TextUnit>> {\n+    pub fn matching_brace(&self, position: FilePosition) -> Cancelable<Option<TextSize>> {\n         self.with_db(|db| {\n             let parse = db.parse(position.file_id);\n             let file = parse.tree();"}, {"sha": "b8534870604fa7cf7884b861b081a220db6f8e6f", "filename": "crates/ra_ide/src/matching_brace.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fmatching_brace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fmatching_brace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fmatching_brace.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,8 +1,8 @@\n //! FIXME: write short doc here\n \n-use ra_syntax::{ast::AstNode, SourceFile, SyntaxKind, TextUnit, T};\n+use ra_syntax::{ast::AstNode, SourceFile, SyntaxKind, TextSize, T};\n \n-pub fn matching_brace(file: &SourceFile, offset: TextUnit) -> Option<TextUnit> {\n+pub fn matching_brace(file: &SourceFile, offset: TextSize) -> Option<TextSize> {\n     const BRACES: &[SyntaxKind] =\n         &[T!['{'], T!['}'], T!['['], T![']'], T!['('], T![')'], T![<], T![>]];\n     let (brace_node, brace_idx) = file"}, {"sha": "aaf4460dfa34311ce11c6c824bd207aa6fa96e5c", "filename": "crates/ra_ide/src/parent_module.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fparent_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fparent_module.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -76,7 +76,7 @@ mod tests {\n             \",\n         );\n         let nav = analysis.parent_module(pos).unwrap().pop().unwrap();\n-        nav.assert_match(\"foo MODULE FileId(1) [0; 8)\");\n+        nav.assert_match(\"foo MODULE FileId(1) 0..8\");\n     }\n \n     #[test]\n@@ -95,7 +95,7 @@ mod tests {\n             \",\n         );\n         let nav = analysis.parent_module(pos).unwrap().pop().unwrap();\n-        nav.assert_match(\"foo MODULE FileId(1) [0; 8)\");\n+        nav.assert_match(\"foo MODULE FileId(1) 0..8\");\n     }\n \n     #[test]\n@@ -111,7 +111,7 @@ mod tests {\n             \",\n         );\n         let nav = analysis.parent_module(pos).unwrap().pop().unwrap();\n-        nav.assert_match(\"baz MODULE FileId(1) [32; 44)\");\n+        nav.assert_match(\"baz MODULE FileId(1) 32..44\");\n     }\n \n     #[test]"}, {"sha": "a3970bf830cd3edbfb4e874eb9aa8b8ced8f5e08", "filename": "crates/ra_ide/src/references.rs", "status": "modified", "additions": 37, "deletions": 53, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Freferences.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Freferences.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -214,8 +214,8 @@ mod tests {\n         let refs = get_all_refs(code);\n         check_result(\n             refs,\n-            \"Foo STRUCT_DEF FileId(1) [5; 39) [12; 15) Other\",\n-            &[\"FileId(1) [138; 141) StructLiteral\"],\n+            \"Foo STRUCT_DEF FileId(1) 5..39 12..15 Other\",\n+            &[\"FileId(1) 138..141 StructLiteral\"],\n         );\n     }\n \n@@ -231,8 +231,8 @@ mod tests {\n         let refs = get_all_refs(code);\n         check_result(\n             refs,\n-            \"Foo STRUCT_DEF FileId(1) [5; 18) [12; 15) Other\",\n-            &[\"FileId(1) [54; 57) Other\", \"FileId(1) [71; 74) StructLiteral\"],\n+            \"Foo STRUCT_DEF FileId(1) 5..18 12..15 Other\",\n+            &[\"FileId(1) 54..57 Other\", \"FileId(1) 71..74 StructLiteral\"],\n         );\n     }\n \n@@ -248,8 +248,8 @@ mod tests {\n         let refs = get_all_refs(code);\n         check_result(\n             refs,\n-            \"Foo STRUCT_DEF FileId(1) [5; 21) [12; 15) Other\",\n-            &[\"FileId(1) [81; 84) StructLiteral\"],\n+            \"Foo STRUCT_DEF FileId(1) 5..21 12..15 Other\",\n+            &[\"FileId(1) 81..84 StructLiteral\"],\n         );\n     }\n \n@@ -266,8 +266,8 @@ mod tests {\n         let refs = get_all_refs(code);\n         check_result(\n             refs,\n-            \"Foo STRUCT_DEF FileId(1) [5; 21) [12; 15) Other\",\n-            &[\"FileId(1) [71; 74) StructLiteral\"],\n+            \"Foo STRUCT_DEF FileId(1) 5..21 12..15 Other\",\n+            &[\"FileId(1) 71..74 StructLiteral\"],\n         );\n     }\n \n@@ -289,12 +289,12 @@ mod tests {\n         let refs = get_all_refs(code);\n         check_result(\n             refs,\n-            \"i BIND_PAT FileId(1) [33; 34) Other Write\",\n+            \"i BIND_PAT FileId(1) 33..34 Other Write\",\n             &[\n-                \"FileId(1) [67; 68) Other Write\",\n-                \"FileId(1) [71; 72) Other Read\",\n-                \"FileId(1) [101; 102) Other Write\",\n-                \"FileId(1) [127; 128) Other Write\",\n+                \"FileId(1) 67..68 Other Write\",\n+                \"FileId(1) 71..72 Other Read\",\n+                \"FileId(1) 101..102 Other Write\",\n+                \"FileId(1) 127..128 Other Write\",\n             ],\n         );\n     }\n@@ -315,8 +315,8 @@ mod tests {\n         let refs = get_all_refs(code);\n         check_result(\n             refs,\n-            \"spam BIND_PAT FileId(1) [44; 48) Other\",\n-            &[\"FileId(1) [71; 75) Other Read\", \"FileId(1) [78; 82) Other Read\"],\n+            \"spam BIND_PAT FileId(1) 44..48 Other\",\n+            &[\"FileId(1) 71..75 Other Read\", \"FileId(1) 78..82 Other Read\"],\n         );\n     }\n \n@@ -328,11 +328,7 @@ mod tests {\n     }\"#;\n \n         let refs = get_all_refs(code);\n-        check_result(\n-            refs,\n-            \"i BIND_PAT FileId(1) [12; 13) Other\",\n-            &[\"FileId(1) [38; 39) Other Read\"],\n-        );\n+        check_result(refs, \"i BIND_PAT FileId(1) 12..13 Other\", &[\"FileId(1) 38..39 Other Read\"]);\n     }\n \n     #[test]\n@@ -343,11 +339,7 @@ mod tests {\n     }\"#;\n \n         let refs = get_all_refs(code);\n-        check_result(\n-            refs,\n-            \"i BIND_PAT FileId(1) [12; 13) Other\",\n-            &[\"FileId(1) [38; 39) Other Read\"],\n-        );\n+        check_result(refs, \"i BIND_PAT FileId(1) 12..13 Other\", &[\"FileId(1) 38..39 Other Read\"]);\n     }\n \n     #[test]\n@@ -366,8 +358,8 @@ mod tests {\n         let refs = get_all_refs(code);\n         check_result(\n             refs,\n-            \"spam RECORD_FIELD_DEF FileId(1) [66; 79) [70; 74) Other\",\n-            &[\"FileId(1) [152; 156) Other Read\"],\n+            \"spam RECORD_FIELD_DEF FileId(1) 66..79 70..74 Other\",\n+            &[\"FileId(1) 152..156 Other Read\"],\n         );\n     }\n \n@@ -382,7 +374,7 @@ mod tests {\n         \"#;\n \n         let refs = get_all_refs(code);\n-        check_result(refs, \"f FN_DEF FileId(1) [88; 104) [91; 92) Other\", &[]);\n+        check_result(refs, \"f FN_DEF FileId(1) 88..104 91..92 Other\", &[]);\n     }\n \n     #[test]\n@@ -397,7 +389,7 @@ mod tests {\n         \"#;\n \n         let refs = get_all_refs(code);\n-        check_result(refs, \"B ENUM_VARIANT FileId(1) [83; 84) [83; 84) Other\", &[]);\n+        check_result(refs, \"B ENUM_VARIANT FileId(1) 83..84 83..84 Other\", &[]);\n     }\n \n     #[test]\n@@ -438,8 +430,8 @@ mod tests {\n         let refs = analysis.find_all_refs(pos, None).unwrap().unwrap();\n         check_result(\n             refs,\n-            \"Foo STRUCT_DEF FileId(2) [16; 50) [27; 30) Other\",\n-            &[\"FileId(1) [52; 55) StructLiteral\", \"FileId(3) [77; 80) StructLiteral\"],\n+            \"Foo STRUCT_DEF FileId(2) 16..50 27..30 Other\",\n+            &[\"FileId(1) 52..55 StructLiteral\", \"FileId(3) 77..80 StructLiteral\"],\n         );\n     }\n \n@@ -466,11 +458,7 @@ mod tests {\n \n         let (analysis, pos) = analysis_and_position(code);\n         let refs = analysis.find_all_refs(pos, None).unwrap().unwrap();\n-        check_result(\n-            refs,\n-            \"foo SOURCE_FILE FileId(2) [0; 35) Other\",\n-            &[\"FileId(1) [13; 16) Other\"],\n-        );\n+        check_result(refs, \"foo SOURCE_FILE FileId(2) 0..35 Other\", &[\"FileId(1) 13..16 Other\"]);\n     }\n \n     #[test]\n@@ -497,8 +485,8 @@ mod tests {\n         let refs = analysis.find_all_refs(pos, None).unwrap().unwrap();\n         check_result(\n             refs,\n-            \"Foo STRUCT_DEF FileId(3) [0; 41) [18; 21) Other\",\n-            &[\"FileId(2) [20; 23) Other\", \"FileId(2) [46; 49) StructLiteral\"],\n+            \"Foo STRUCT_DEF FileId(3) 0..41 18..21 Other\",\n+            &[\"FileId(2) 20..23 Other\", \"FileId(2) 46..49 StructLiteral\"],\n         );\n     }\n \n@@ -525,16 +513,16 @@ mod tests {\n         let refs = analysis.find_all_refs(pos, None).unwrap().unwrap();\n         check_result(\n             refs,\n-            \"quux FN_DEF FileId(1) [18; 34) [25; 29) Other\",\n-            &[\"FileId(2) [16; 20) StructLiteral\", \"FileId(3) [16; 20) StructLiteral\"],\n+            \"quux FN_DEF FileId(1) 18..34 25..29 Other\",\n+            &[\"FileId(2) 16..20 StructLiteral\", \"FileId(3) 16..20 StructLiteral\"],\n         );\n \n         let refs =\n             analysis.find_all_refs(pos, Some(SearchScope::single_file(bar))).unwrap().unwrap();\n         check_result(\n             refs,\n-            \"quux FN_DEF FileId(1) [18; 34) [25; 29) Other\",\n-            &[\"FileId(3) [16; 20) StructLiteral\"],\n+            \"quux FN_DEF FileId(1) 18..34 25..29 Other\",\n+            &[\"FileId(3) 16..20 StructLiteral\"],\n         );\n     }\n \n@@ -552,8 +540,8 @@ mod tests {\n         let refs = get_all_refs(code);\n         check_result(\n             refs,\n-            \"m1 MACRO_CALL FileId(1) [9; 63) [46; 48) Other\",\n-            &[\"FileId(1) [96; 98) StructLiteral\", \"FileId(1) [114; 116) StructLiteral\"],\n+            \"m1 MACRO_CALL FileId(1) 9..63 46..48 Other\",\n+            &[\"FileId(1) 96..98 StructLiteral\", \"FileId(1) 114..116 StructLiteral\"],\n         );\n     }\n \n@@ -568,8 +556,8 @@ mod tests {\n         let refs = get_all_refs(code);\n         check_result(\n             refs,\n-            \"i BIND_PAT FileId(1) [40; 41) Other Write\",\n-            &[\"FileId(1) [59; 60) Other Write\", \"FileId(1) [63; 64) Other Read\"],\n+            \"i BIND_PAT FileId(1) 40..41 Other Write\",\n+            &[\"FileId(1) 59..60 Other Write\", \"FileId(1) 63..64 Other Read\"],\n         );\n     }\n \n@@ -588,8 +576,8 @@ mod tests {\n         let refs = get_all_refs(code);\n         check_result(\n             refs,\n-            \"f RECORD_FIELD_DEF FileId(1) [32; 38) [32; 33) Other\",\n-            &[\"FileId(1) [96; 97) Other Read\", \"FileId(1) [117; 118) Other Write\"],\n+            \"f RECORD_FIELD_DEF FileId(1) 32..38 32..33 Other\",\n+            &[\"FileId(1) 96..97 Other Read\", \"FileId(1) 117..118 Other Write\"],\n         );\n     }\n \n@@ -602,11 +590,7 @@ mod tests {\n         }\"#;\n \n         let refs = get_all_refs(code);\n-        check_result(\n-            refs,\n-            \"i BIND_PAT FileId(1) [36; 37) Other\",\n-            &[\"FileId(1) [51; 52) Other Write\"],\n-        );\n+        check_result(refs, \"i BIND_PAT FileId(1) 36..37 Other\", &[\"FileId(1) 51..52 Other Write\"]);\n     }\n \n     fn get_all_refs(text: &str) -> ReferenceSearchResult {"}, {"sha": "a8f320e2fbd61233b287a1b1e7cb7946bb7192f9", "filename": "crates/ra_ide/src/references/rename.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Freferences%2Frename.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -54,15 +54,12 @@ fn source_edit_from_reference(reference: Reference, new_name: &str) -> SourceFil\n         ReferenceKind::StructFieldShorthandForField => {\n             replacement_text.push_str(new_name);\n             replacement_text.push_str(\": \");\n-            TextRange::from_to(\n-                reference.file_range.range.start(),\n-                reference.file_range.range.start(),\n-            )\n+            TextRange::new(reference.file_range.range.start(), reference.file_range.range.start())\n         }\n         ReferenceKind::StructFieldShorthandForLocal => {\n             replacement_text.push_str(\": \");\n             replacement_text.push_str(new_name);\n-            TextRange::from_to(reference.file_range.range.end(), reference.file_range.range.end())\n+            TextRange::new(reference.file_range.range.end(), reference.file_range.range.end())\n         }\n         _ => {\n             replacement_text.push_str(new_name);\n@@ -528,7 +525,7 @@ mod tests {\n @r###\"\n         Some(\n             RangeInfo {\n-                range: [4; 7),\n+                range: 4..7,\n                 info: SourceChange {\n                     label: \"rename\",\n                     source_file_edits: [\n@@ -539,7 +536,7 @@ mod tests {\n                             edit: TextEdit {\n                                 atoms: [\n                                     AtomTextEdit {\n-                                        delete: [4; 7),\n+                                        delete: 4..7,\n                                         insert: \"foo2\",\n                                     },\n                                 ],\n@@ -580,7 +577,7 @@ mod tests {\n         @r###\"\n         Some(\n             RangeInfo {\n-                range: [4; 7),\n+                range: 4..7,\n                 info: SourceChange {\n                     label: \"rename\",\n                     source_file_edits: [\n@@ -591,7 +588,7 @@ mod tests {\n                             edit: TextEdit {\n                                 atoms: [\n                                     AtomTextEdit {\n-                                        delete: [4; 7),\n+                                        delete: 4..7,\n                                         insert: \"foo2\",\n                                     },\n                                 ],\n@@ -663,7 +660,7 @@ mod tests {\n @r###\"\n         Some(\n             RangeInfo {\n-                range: [8; 11),\n+                range: 8..11,\n                 info: SourceChange {\n                     label: \"rename\",\n                     source_file_edits: [\n@@ -674,7 +671,7 @@ mod tests {\n                             edit: TextEdit {\n                                 atoms: [\n                                     AtomTextEdit {\n-                                        delete: [8; 11),\n+                                        delete: 8..11,\n                                         insert: \"foo2\",\n                                     },\n                                 ],\n@@ -687,7 +684,7 @@ mod tests {\n                             edit: TextEdit {\n                                 atoms: [\n                                     AtomTextEdit {\n-                                        delete: [27; 30),\n+                                        delete: 27..30,\n                                         insert: \"foo2\",\n                                     },\n                                 ],"}, {"sha": "38637c19c20381cf15f7d20ab2c4181837a5d17d", "filename": "crates/ra_ide/src/runnables.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Frunnables.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -164,11 +164,11 @@ mod tests {\n         @r###\"\n         [\n             Runnable {\n-                range: [1; 21),\n+                range: 1..21,\n                 kind: Bin,\n             },\n             Runnable {\n-                range: [22; 46),\n+                range: 22..46,\n                 kind: Test {\n                     test_id: Path(\n                         \"test_foo\",\n@@ -179,7 +179,7 @@ mod tests {\n                 },\n             },\n             Runnable {\n-                range: [47; 81),\n+                range: 47..81,\n                 kind: Test {\n                     test_id: Path(\n                         \"test_foo\",\n@@ -211,13 +211,13 @@ mod tests {\n         @r###\"\n         [\n             Runnable {\n-                range: [1; 59),\n+                range: 1..59,\n                 kind: TestMod {\n                     path: \"test_mod\",\n                 },\n             },\n             Runnable {\n-                range: [28; 57),\n+                range: 28..57,\n                 kind: Test {\n                     test_id: Path(\n                         \"test_mod::test_foo1\",\n@@ -251,13 +251,13 @@ mod tests {\n         @r###\"\n         [\n             Runnable {\n-                range: [23; 85),\n+                range: 23..85,\n                 kind: TestMod {\n                     path: \"foo::test_mod\",\n                 },\n             },\n             Runnable {\n-                range: [46; 79),\n+                range: 46..79,\n                 kind: Test {\n                     test_id: Path(\n                         \"foo::test_mod::test_foo1\",\n@@ -293,13 +293,13 @@ mod tests {\n         @r###\"\n         [\n             Runnable {\n-                range: [41; 115),\n+                range: 41..115,\n                 kind: TestMod {\n                     path: \"foo::bar::test_mod\",\n                 },\n             },\n             Runnable {\n-                range: [68; 105),\n+                range: 68..105,\n                 kind: Test {\n                     test_id: Path(\n                         \"foo::bar::test_mod::test_foo1\","}, {"sha": "71b0e8f757eda73f41c5bc92efcf599f6c8bbef0", "filename": "crates/ra_ide/src/source_change.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fsource_change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fsource_change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsource_change.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -6,7 +6,7 @@\n use ra_db::RelativePathBuf;\n use ra_text_edit::TextEdit;\n \n-use crate::{FileId, FilePosition, SourceRootId, TextUnit};\n+use crate::{FileId, FilePosition, SourceRootId, TextSize};\n \n #[derive(Debug)]\n pub struct SourceChange {\n@@ -104,7 +104,7 @@ pub enum FileSystemEdit {\n pub(crate) struct SingleFileChange {\n     pub label: String,\n     pub edit: TextEdit,\n-    pub cursor_position: Option<TextUnit>,\n+    pub cursor_position: Option<TextSize>,\n }\n \n impl SingleFileChange {"}, {"sha": "6f02614a602d4b7fd17a1c03ec1592328400c385", "filename": "crates/ra_ide/src/syntax_highlighting.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -61,16 +61,16 @@ impl HighlightedRangeStack {\n         let prev = self.stack.last_mut().unwrap();\n         let needs_flattening = !children.is_empty()\n             && !prev.is_empty()\n-            && children.first().unwrap().range.is_subrange(&prev.last().unwrap().range);\n+            && prev.last().unwrap().range.contains_range(children.first().unwrap().range);\n         if !needs_flattening {\n             prev.extend(children);\n         } else {\n             let mut parent = prev.pop().unwrap();\n             for ele in children {\n-                assert!(ele.range.is_subrange(&parent.range));\n+                assert!(parent.range.contains_range(ele.range));\n                 let mut cloned = parent.clone();\n-                parent.range = TextRange::from_to(parent.range.start(), ele.range.start());\n-                cloned.range = TextRange::from_to(ele.range.end(), cloned.range.end());\n+                parent.range = TextRange::new(parent.range.start(), ele.range.start());\n+                cloned.range = TextRange::new(ele.range.end(), cloned.range.end());\n                 if !parent.range.is_empty() {\n                     prev.push(parent);\n                 }\n@@ -152,7 +152,7 @@ pub(crate) fn highlight(\n         };\n \n         // Element outside of the viewport, no need to highlight\n-        if range_to_highlight.intersection(&event_range).is_none() {\n+        if range_to_highlight.intersect(event_range).is_none() {\n             continue;\n         }\n \n@@ -309,7 +309,7 @@ fn macro_call_range(macro_call: &ast::MacroCall) -> Option<TextRange> {\n         }\n     }\n \n-    Some(TextRange::from_to(range_start, range_end))\n+    Some(TextRange::new(range_start, range_end))\n }\n \n fn highlight_element("}, {"sha": "010db40175cc6d1a4b57914ea2a816f6ea927c75", "filename": "crates/ra_ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 6, "deletions": 8, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,11 +1,9 @@\n //! Renders a bit of code as HTML.\n \n use ra_db::SourceDatabase;\n-use ra_syntax::{AstNode, TextUnit};\n+use ra_syntax::{AstNode, TextRange, TextSize};\n \n-use crate::{FileId, RootDatabase};\n-\n-use super::highlight;\n+use crate::{syntax_highlighting::highlight, FileId, RootDatabase};\n \n pub(crate) fn highlight_as_html(db: &RootDatabase, file_id: FileId, rainbow: bool) -> String {\n     let parse = db.parse(file_id);\n@@ -23,17 +21,17 @@ pub(crate) fn highlight_as_html(db: &RootDatabase, file_id: FileId, rainbow: boo\n \n     let ranges = highlight(db, file_id, None);\n     let text = parse.tree().syntax().to_string();\n-    let mut prev_pos = TextUnit::from(0);\n+    let mut prev_pos = TextSize::from(0);\n     let mut buf = String::new();\n     buf.push_str(&STYLE);\n     buf.push_str(\"<pre><code>\");\n     for range in &ranges {\n         if range.range.start() > prev_pos {\n-            let curr = &text[prev_pos.to_usize()..range.range.start().to_usize()];\n+            let curr = &text[TextRange::new(prev_pos, range.range.start())];\n             let text = html_escape(curr);\n             buf.push_str(&text);\n         }\n-        let curr = &text[range.range.start().to_usize()..range.range.end().to_usize()];\n+        let curr = &text[TextRange::new(range.range.start(), range.range.end())];\n \n         let class = range.highlight.to_string().replace('.', \" \");\n         let color = match (rainbow, range.binding_hash) {\n@@ -47,7 +45,7 @@ pub(crate) fn highlight_as_html(db: &RootDatabase, file_id: FileId, rainbow: boo\n         prev_pos = range.range.end();\n     }\n     // Add the remaining (non-highlighted) text\n-    let curr = &text[prev_pos.to_usize()..];\n+    let curr = &text[TextRange::new(prev_pos, TextSize::of(&text))];\n     let text = html_escape(curr);\n     buf.push_str(&text);\n     buf.push_str(\"</code></pre>\");"}, {"sha": "d2926ba7802911d3434b2cba7e7613b0ee592ce1", "filename": "crates/ra_ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -126,7 +126,7 @@ fn test_ranges() {\n \n     // The \"x\"\n     let highlights = &analysis\n-        .highlight_range(FileRange { file_id, range: TextRange::offset_len(82.into(), 1.into()) })\n+        .highlight_range(FileRange { file_id, range: TextRange::at(82.into(), 1.into()) })\n         .unwrap();\n \n     assert_eq!(&highlights[0].highlight.to_string(), \"field.declaration\");"}, {"sha": "bf97f8c569c82c0c53878d40adda0d234d4ea65a", "filename": "crates/ra_ide/src/syntax_tree.rs", "status": "modified", "additions": 137, "deletions": 140, "changes": 277, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_tree.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -5,7 +5,7 @@ use ra_ide_db::RootDatabase;\n use ra_syntax::{\n     algo, AstNode, NodeOrToken, SourceFile,\n     SyntaxKind::{RAW_STRING, STRING},\n-    SyntaxToken, TextRange, TextUnit,\n+    SyntaxToken, TextRange, TextSize,\n };\n \n pub use ra_db::FileId;\n@@ -66,13 +66,10 @@ fn syntax_tree_for_token(node: &SyntaxToken, text_range: TextRange) -> Option<St\n     let len = len.min(node_len);\n \n     // Ensure our slice is inside the actual string\n-    let end = if start + len < TextUnit::of_str(&text) {\n-        start + len\n-    } else {\n-        TextUnit::of_str(&text) - start\n-    };\n+    let end =\n+        if start + len < TextSize::of(&text) { start + len } else { TextSize::of(&text) - start };\n \n-    let text = &text[TextRange::from_to(start, end)];\n+    let text = &text[TextRange::new(start, end)];\n \n     // Remove possible extra string quotes from the start\n     // and the end of the string\n@@ -112,20 +109,20 @@ mod tests {\n         assert_eq_text!(\n             syn.trim(),\n             r#\"\n-SOURCE_FILE@[0; 11)\n-  FN_DEF@[0; 11)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 8)\n-      L_PAREN@[6; 7) \"(\"\n-      R_PAREN@[7; 8) \")\"\n-    WHITESPACE@[8; 9) \" \"\n-    BLOCK_EXPR@[9; 11)\n-      BLOCK@[9; 11)\n-        L_CURLY@[9; 10) \"{\"\n-        R_CURLY@[10; 11) \"}\"\n+SOURCE_FILE@0..11\n+  FN_DEF@0..11\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..6\n+      IDENT@3..6 \"foo\"\n+    PARAM_LIST@6..8\n+      L_PAREN@6..7 \"(\"\n+      R_PAREN@7..8 \")\"\n+    WHITESPACE@8..9 \" \"\n+    BLOCK_EXPR@9..11\n+      BLOCK@9..11\n+        L_CURLY@9..10 \"{\"\n+        R_CURLY@10..11 \"}\"\n \"#\n             .trim()\n         );\n@@ -145,37 +142,37 @@ fn test() {\n         assert_eq_text!(\n             syn.trim(),\n             r#\"\n-SOURCE_FILE@[0; 60)\n-  FN_DEF@[0; 60)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 7)\n-      IDENT@[3; 7) \"test\"\n-    PARAM_LIST@[7; 9)\n-      L_PAREN@[7; 8) \"(\"\n-      R_PAREN@[8; 9) \")\"\n-    WHITESPACE@[9; 10) \" \"\n-    BLOCK_EXPR@[10; 60)\n-      BLOCK@[10; 60)\n-        L_CURLY@[10; 11) \"{\"\n-        WHITESPACE@[11; 16) \"\\n    \"\n-        EXPR_STMT@[16; 58)\n-          MACRO_CALL@[16; 57)\n-            PATH@[16; 22)\n-              PATH_SEGMENT@[16; 22)\n-                NAME_REF@[16; 22)\n-                  IDENT@[16; 22) \"assert\"\n-            BANG@[22; 23) \"!\"\n-            TOKEN_TREE@[23; 57)\n-              L_PAREN@[23; 24) \"(\"\n-              STRING@[24; 52) \"\\\"\\n    fn foo() {\\n     ...\"\n-              COMMA@[52; 53) \",\"\n-              WHITESPACE@[53; 54) \" \"\n-              STRING@[54; 56) \"\\\"\\\"\"\n-              R_PAREN@[56; 57) \")\"\n-          SEMICOLON@[57; 58) \";\"\n-        WHITESPACE@[58; 59) \"\\n\"\n-        R_CURLY@[59; 60) \"}\"\n+SOURCE_FILE@0..60\n+  FN_DEF@0..60\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..7\n+      IDENT@3..7 \"test\"\n+    PARAM_LIST@7..9\n+      L_PAREN@7..8 \"(\"\n+      R_PAREN@8..9 \")\"\n+    WHITESPACE@9..10 \" \"\n+    BLOCK_EXPR@10..60\n+      BLOCK@10..60\n+        L_CURLY@10..11 \"{\"\n+        WHITESPACE@11..16 \"\\n    \"\n+        EXPR_STMT@16..58\n+          MACRO_CALL@16..57\n+            PATH@16..22\n+              PATH_SEGMENT@16..22\n+                NAME_REF@16..22\n+                  IDENT@16..22 \"assert\"\n+            BANG@22..23 \"!\"\n+            TOKEN_TREE@23..57\n+              L_PAREN@23..24 \"(\"\n+              STRING@24..52 \"\\\"\\n    fn foo() {\\n     ...\"\n+              COMMA@52..53 \",\"\n+              WHITESPACE@53..54 \" \"\n+              STRING@54..56 \"\\\"\\\"\"\n+              R_PAREN@56..57 \")\"\n+          SEMICOLON@57..58 \";\"\n+        WHITESPACE@58..59 \"\\n\"\n+        R_CURLY@59..60 \"}\"\n \"#\n             .trim()\n         );\n@@ -189,19 +186,19 @@ SOURCE_FILE@[0; 60)\n         assert_eq_text!(\n             syn.trim(),\n             r#\"\n-FN_DEF@[0; 11)\n-  FN_KW@[0; 2) \"fn\"\n-  WHITESPACE@[2; 3) \" \"\n-  NAME@[3; 6)\n-    IDENT@[3; 6) \"foo\"\n-  PARAM_LIST@[6; 8)\n-    L_PAREN@[6; 7) \"(\"\n-    R_PAREN@[7; 8) \")\"\n-  WHITESPACE@[8; 9) \" \"\n-  BLOCK_EXPR@[9; 11)\n-    BLOCK@[9; 11)\n-      L_CURLY@[9; 10) \"{\"\n-      R_CURLY@[10; 11) \"}\"\n+FN_DEF@0..11\n+  FN_KW@0..2 \"fn\"\n+  WHITESPACE@2..3 \" \"\n+  NAME@3..6\n+    IDENT@3..6 \"foo\"\n+  PARAM_LIST@6..8\n+    L_PAREN@6..7 \"(\"\n+    R_PAREN@7..8 \")\"\n+  WHITESPACE@8..9 \" \"\n+  BLOCK_EXPR@9..11\n+    BLOCK@9..11\n+      L_CURLY@9..10 \"{\"\n+      R_CURLY@10..11 \"}\"\n \"#\n             .trim()\n         );\n@@ -220,21 +217,21 @@ FN_DEF@[0; 11)\n         assert_eq_text!(\n             syn.trim(),\n             r#\"\n-EXPR_STMT@[16; 58)\n-  MACRO_CALL@[16; 57)\n-    PATH@[16; 22)\n-      PATH_SEGMENT@[16; 22)\n-        NAME_REF@[16; 22)\n-          IDENT@[16; 22) \"assert\"\n-    BANG@[22; 23) \"!\"\n-    TOKEN_TREE@[23; 57)\n-      L_PAREN@[23; 24) \"(\"\n-      STRING@[24; 52) \"\\\"\\n    fn foo() {\\n     ...\"\n-      COMMA@[52; 53) \",\"\n-      WHITESPACE@[53; 54) \" \"\n-      STRING@[54; 56) \"\\\"\\\"\"\n-      R_PAREN@[56; 57) \")\"\n-  SEMICOLON@[57; 58) \";\"\n+EXPR_STMT@16..58\n+  MACRO_CALL@16..57\n+    PATH@16..22\n+      PATH_SEGMENT@16..22\n+        NAME_REF@16..22\n+          IDENT@16..22 \"assert\"\n+    BANG@22..23 \"!\"\n+    TOKEN_TREE@23..57\n+      L_PAREN@23..24 \"(\"\n+      STRING@24..52 \"\\\"\\n    fn foo() {\\n     ...\"\n+      COMMA@52..53 \",\"\n+      WHITESPACE@53..54 \" \"\n+      STRING@54..56 \"\\\"\\\"\"\n+      R_PAREN@56..57 \")\"\n+  SEMICOLON@57..58 \";\"\n \"#\n             .trim()\n         );\n@@ -257,21 +254,21 @@ fn bar() {\n         assert_eq_text!(\n             syn.trim(),\n             r#\"\n-SOURCE_FILE@[0; 12)\n-  FN_DEF@[0; 12)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 8)\n-      L_PAREN@[6; 7) \"(\"\n-      R_PAREN@[7; 8) \")\"\n-    WHITESPACE@[8; 9) \" \"\n-    BLOCK_EXPR@[9; 12)\n-      BLOCK@[9; 12)\n-        L_CURLY@[9; 10) \"{\"\n-        WHITESPACE@[10; 11) \"\\n\"\n-        R_CURLY@[11; 12) \"}\"\n+SOURCE_FILE@0..12\n+  FN_DEF@0..12\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..6\n+      IDENT@3..6 \"foo\"\n+    PARAM_LIST@6..8\n+      L_PAREN@6..7 \"(\"\n+      R_PAREN@7..8 \")\"\n+    WHITESPACE@8..9 \" \"\n+    BLOCK_EXPR@9..12\n+      BLOCK@9..12\n+        L_CURLY@9..10 \"{\"\n+        WHITESPACE@10..11 \"\\n\"\n+        R_CURLY@11..12 \"}\"\n \"#\n             .trim()\n         );\n@@ -292,21 +289,21 @@ fn bar() {\n         assert_eq_text!(\n             syn.trim(),\n             r#\"\n-SOURCE_FILE@[0; 12)\n-  FN_DEF@[0; 12)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 8)\n-      L_PAREN@[6; 7) \"(\"\n-      R_PAREN@[7; 8) \")\"\n-    WHITESPACE@[8; 9) \" \"\n-    BLOCK_EXPR@[9; 12)\n-      BLOCK@[9; 12)\n-        L_CURLY@[9; 10) \"{\"\n-        WHITESPACE@[10; 11) \"\\n\"\n-        R_CURLY@[11; 12) \"}\"\n+SOURCE_FILE@0..12\n+  FN_DEF@0..12\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..6\n+      IDENT@3..6 \"foo\"\n+    PARAM_LIST@6..8\n+      L_PAREN@6..7 \"(\"\n+      R_PAREN@7..8 \")\"\n+    WHITESPACE@8..9 \" \"\n+    BLOCK_EXPR@9..12\n+      BLOCK@9..12\n+        L_CURLY@9..10 \"{\"\n+        WHITESPACE@10..11 \"\\n\"\n+        R_CURLY@11..12 \"}\"\n \"#\n             .trim()\n         );\n@@ -326,36 +323,36 @@ fn bar() {\n         assert_eq_text!(\n             syn.trim(),\n             r#\"\n-SOURCE_FILE@[0; 25)\n-  FN_DEF@[0; 12)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 8)\n-      L_PAREN@[6; 7) \"(\"\n-      R_PAREN@[7; 8) \")\"\n-    WHITESPACE@[8; 9) \" \"\n-    BLOCK_EXPR@[9; 12)\n-      BLOCK@[9; 12)\n-        L_CURLY@[9; 10) \"{\"\n-        WHITESPACE@[10; 11) \"\\n\"\n-        R_CURLY@[11; 12) \"}\"\n-  WHITESPACE@[12; 13) \"\\n\"\n-  FN_DEF@[13; 25)\n-    FN_KW@[13; 15) \"fn\"\n-    WHITESPACE@[15; 16) \" \"\n-    NAME@[16; 19)\n-      IDENT@[16; 19) \"bar\"\n-    PARAM_LIST@[19; 21)\n-      L_PAREN@[19; 20) \"(\"\n-      R_PAREN@[20; 21) \")\"\n-    WHITESPACE@[21; 22) \" \"\n-    BLOCK_EXPR@[22; 25)\n-      BLOCK@[22; 25)\n-        L_CURLY@[22; 23) \"{\"\n-        WHITESPACE@[23; 24) \"\\n\"\n-        R_CURLY@[24; 25) \"}\"\n+SOURCE_FILE@0..25\n+  FN_DEF@0..12\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..6\n+      IDENT@3..6 \"foo\"\n+    PARAM_LIST@6..8\n+      L_PAREN@6..7 \"(\"\n+      R_PAREN@7..8 \")\"\n+    WHITESPACE@8..9 \" \"\n+    BLOCK_EXPR@9..12\n+      BLOCK@9..12\n+        L_CURLY@9..10 \"{\"\n+        WHITESPACE@10..11 \"\\n\"\n+        R_CURLY@11..12 \"}\"\n+  WHITESPACE@12..13 \"\\n\"\n+  FN_DEF@13..25\n+    FN_KW@13..15 \"fn\"\n+    WHITESPACE@15..16 \" \"\n+    NAME@16..19\n+      IDENT@16..19 \"bar\"\n+    PARAM_LIST@19..21\n+      L_PAREN@19..20 \"(\"\n+      R_PAREN@20..21 \")\"\n+    WHITESPACE@21..22 \" \"\n+    BLOCK_EXPR@22..25\n+      BLOCK@22..25\n+        L_CURLY@22..23 \"{\"\n+        WHITESPACE@23..24 \"\\n\"\n+        R_CURLY@24..25 \"}\"\n \"#\n             .trim()\n         );"}, {"sha": "f14533e14bb7295d74f2dfba982e78ef349b5dd3", "filename": "crates/ra_ide/src/test_utils.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftest_utils.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,11 +1,11 @@\n //! FIXME: write short doc here\n \n-use ra_syntax::{SourceFile, TextUnit};\n+use ra_syntax::{SourceFile, TextSize};\n use ra_text_edit::TextEdit;\n \n pub use test_utils::*;\n \n-pub fn check_action<F: Fn(&SourceFile, TextUnit) -> Option<TextEdit>>(\n+pub fn check_action<F: Fn(&SourceFile, TextSize) -> Option<TextEdit>>(\n     before: &str,\n     after: &str,\n     f: F,"}, {"sha": "2a8b4327f9c9e26793dff8a900409000e5c7e4f7", "filename": "crates/ra_ide/src/typing.rs", "status": "modified", "additions": 10, "deletions": 15, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -21,7 +21,7 @@ use ra_ide_db::RootDatabase;\n use ra_syntax::{\n     algo::find_node_at_offset,\n     ast::{self, AstToken},\n-    AstNode, SourceFile, TextRange, TextUnit,\n+    AstNode, SourceFile, TextRange, TextSize,\n };\n use ra_text_edit::TextEdit;\n \n@@ -45,7 +45,7 @@ pub(crate) fn on_char_typed(\n \n fn on_char_typed_inner(\n     file: &SourceFile,\n-    offset: TextUnit,\n+    offset: TextSize,\n     char_typed: char,\n ) -> Option<SingleFileChange> {\n     assert!(TRIGGER_CHARS.contains(char_typed));\n@@ -60,7 +60,7 @@ fn on_char_typed_inner(\n /// Returns an edit which should be applied after `=` was typed. Primarily,\n /// this works when adding `let =`.\n // FIXME: use a snippet completion instead of this hack here.\n-fn on_eq_typed(file: &SourceFile, offset: TextUnit) -> Option<SingleFileChange> {\n+fn on_eq_typed(file: &SourceFile, offset: TextSize) -> Option<SingleFileChange> {\n     assert_eq!(file.syntax().text().char_at(offset), Some('='));\n     let let_stmt: ast::LetStmt = find_node_at_offset(file.syntax(), offset)?;\n     if let_stmt.semicolon_token().is_some() {\n@@ -86,7 +86,7 @@ fn on_eq_typed(file: &SourceFile, offset: TextUnit) -> Option<SingleFileChange>\n }\n \n /// Returns an edit which should be applied when a dot ('.') is typed on a blank line, indenting the line appropriately.\n-fn on_dot_typed(file: &SourceFile, offset: TextUnit) -> Option<SingleFileChange> {\n+fn on_dot_typed(file: &SourceFile, offset: TextSize) -> Option<SingleFileChange> {\n     assert_eq!(file.syntax().text().char_at(offset), Some('.'));\n     let whitespace =\n         file.syntax().token_at_offset(offset).left_biased().and_then(ast::Whitespace::cast)?;\n@@ -96,34 +96,29 @@ fn on_dot_typed(file: &SourceFile, offset: TextUnit) -> Option<SingleFileChange>\n         let newline = text.rfind('\\n')?;\n         &text[newline + 1..]\n     };\n-    let current_indent_len = TextUnit::of_str(current_indent);\n+    let current_indent_len = TextSize::of(current_indent);\n \n     // Make sure dot is a part of call chain\n     let field_expr = ast::FieldExpr::cast(whitespace.syntax().parent())?;\n     let prev_indent = leading_indent(field_expr.syntax())?;\n     let target_indent = format!(\"    {}\", prev_indent);\n-    let target_indent_len = TextUnit::of_str(&target_indent);\n+    let target_indent_len = TextSize::of(&target_indent);\n     if current_indent_len == target_indent_len {\n         return None;\n     }\n \n     Some(SingleFileChange {\n         label: \"reindent dot\".to_string(),\n-        edit: TextEdit::replace(\n-            TextRange::from_to(offset - current_indent_len, offset),\n-            target_indent,\n-        ),\n-        cursor_position: Some(\n-            offset + target_indent_len - current_indent_len + TextUnit::of_char('.'),\n-        ),\n+        edit: TextEdit::replace(TextRange::new(offset - current_indent_len, offset), target_indent),\n+        cursor_position: Some(offset + target_indent_len - current_indent_len + TextSize::of('.')),\n     })\n }\n \n /// Adds a space after an arrow when `fn foo() { ... }` is turned into `fn foo() -> { ... }`\n-fn on_arrow_typed(file: &SourceFile, offset: TextUnit) -> Option<SingleFileChange> {\n+fn on_arrow_typed(file: &SourceFile, offset: TextSize) -> Option<SingleFileChange> {\n     let file_text = file.syntax().text();\n     assert_eq!(file_text.char_at(offset), Some('>'));\n-    let after_arrow = offset + TextUnit::of_char('>');\n+    let after_arrow = offset + TextSize::of('>');\n     if file_text.char_at(after_arrow) != Some('{') {\n         return None;\n     }"}, {"sha": "30c8c557201ea6c0a353bc6ea10d118d8cde59f0", "filename": "crates/ra_ide/src/typing/on_enter.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Ftyping%2Fon_enter.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -7,7 +7,7 @@ use ra_syntax::{\n     ast::{self, AstToken},\n     AstNode, SmolStr, SourceFile,\n     SyntaxKind::*,\n-    SyntaxToken, TextUnit, TokenAtOffset,\n+    SyntaxToken, TextSize, TokenAtOffset,\n };\n use ra_text_edit::TextEdit;\n \n@@ -28,7 +28,7 @@ pub(crate) fn on_enter(db: &RootDatabase, position: FilePosition) -> Option<Sour\n \n     let prefix = comment.prefix();\n     let comment_range = comment.syntax().text_range();\n-    if position.offset < comment_range.start() + TextUnit::of_str(prefix) {\n+    if position.offset < comment_range.start() + TextSize::of(prefix) {\n         return None;\n     }\n \n@@ -39,7 +39,7 @@ pub(crate) fn on_enter(db: &RootDatabase, position: FilePosition) -> Option<Sour\n \n     let indent = node_indent(&file, comment.syntax())?;\n     let inserted = format!(\"\\n{}{} \", indent, prefix);\n-    let cursor_position = position.offset + TextUnit::of_str(&inserted);\n+    let cursor_position = position.offset + TextSize::of(&inserted);\n     let edit = TextEdit::insert(position.offset, inserted);\n \n     Some("}, {"sha": "00ba95913c6ae1b00976552976e49ca364dbc816", "filename": "crates/ra_ide_db/src/line_index.rs", "status": "modified", "additions": 31, "deletions": 35, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide_db%2Fsrc%2Fline_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide_db%2Fsrc%2Fline_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fline_index.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,14 +1,14 @@\n-//! `LineIndex` maps flat `TextUnit` offsets into `(Line, Column)`\n+//! `LineIndex` maps flat `TextSize` offsets into `(Line, Column)`\n //! representation.\n use std::iter;\n \n-use ra_syntax::{TextRange, TextUnit};\n+use ra_syntax::{TextRange, TextSize};\n use rustc_hash::FxHashMap;\n use superslice::Ext;\n \n #[derive(Clone, Debug, PartialEq, Eq)]\n pub struct LineIndex {\n-    pub(crate) newlines: Vec<TextUnit>,\n+    pub(crate) newlines: Vec<TextSize>,\n     pub(crate) utf16_lines: FxHashMap<u32, Vec<Utf16Char>>,\n }\n \n@@ -22,12 +22,12 @@ pub struct LineCol {\n \n #[derive(Clone, Debug, Hash, PartialEq, Eq)]\n pub(crate) struct Utf16Char {\n-    pub(crate) start: TextUnit,\n-    pub(crate) end: TextUnit,\n+    pub(crate) start: TextSize,\n+    pub(crate) end: TextSize,\n }\n \n impl Utf16Char {\n-    fn len(&self) -> TextUnit {\n+    fn len(&self) -> TextSize {\n         self.end - self.start\n     }\n }\n@@ -42,7 +42,8 @@ impl LineIndex {\n         let mut curr_col = 0.into();\n         let mut line = 0;\n         for c in text.chars() {\n-            curr_row += TextUnit::of_char(c);\n+            let c_len = TextSize::of(c);\n+            curr_row += c_len;\n             if c == '\\n' {\n                 newlines.push(curr_row);\n \n@@ -58,12 +59,11 @@ impl LineIndex {\n                 continue;\n             }\n \n-            let char_len = TextUnit::of_char(c);\n-            if char_len > TextUnit::from_usize(1) {\n-                utf16_chars.push(Utf16Char { start: curr_col, end: curr_col + char_len });\n+            if !c.is_ascii() {\n+                utf16_chars.push(Utf16Char { start: curr_col, end: curr_col + c_len });\n             }\n \n-            curr_col += char_len;\n+            curr_col += c_len;\n         }\n \n         // Save any utf-16 characters seen in the last line\n@@ -74,15 +74,15 @@ impl LineIndex {\n         LineIndex { newlines, utf16_lines }\n     }\n \n-    pub fn line_col(&self, offset: TextUnit) -> LineCol {\n+    pub fn line_col(&self, offset: TextSize) -> LineCol {\n         let line = self.newlines.upper_bound(&offset) - 1;\n         let line_start_offset = self.newlines[line];\n         let col = offset - line_start_offset;\n \n         LineCol { line: line as u32, col_utf16: self.utf8_to_utf16_col(line as u32, col) as u32 }\n     }\n \n-    pub fn offset(&self, line_col: LineCol) -> TextUnit {\n+    pub fn offset(&self, line_col: LineCol) -> TextSize {\n         //FIXME: return Result\n         let col = self.utf16_to_utf8_col(line_col.line, line_col.col_utf16);\n         self.newlines[line_col.line as usize] + col\n@@ -97,35 +97,31 @@ impl LineIndex {\n \n         all.clone()\n             .zip(all.skip(1))\n-            .map(|(lo, hi)| TextRange::from_to(lo, hi))\n+            .map(|(lo, hi)| TextRange::new(lo, hi))\n             .filter(|it| !it.is_empty())\n     }\n \n-    fn utf8_to_utf16_col(&self, line: u32, col: TextUnit) -> usize {\n+    fn utf8_to_utf16_col(&self, line: u32, col: TextSize) -> usize {\n+        let mut res: usize = col.into();\n         if let Some(utf16_chars) = self.utf16_lines.get(&line) {\n-            let mut correction = 0;\n             for c in utf16_chars {\n-                if col >= c.end {\n-                    correction += c.len().to_usize() - 1;\n+                if c.end <= col {\n+                    res -= usize::from(c.len()) - 1;\n                 } else {\n                     // From here on, all utf16 characters come *after* the character we are mapping,\n                     // so we don't need to take them into account\n                     break;\n                 }\n             }\n-\n-            col.to_usize() - correction\n-        } else {\n-            col.to_usize()\n         }\n+        res\n     }\n \n-    fn utf16_to_utf8_col(&self, line: u32, col: u32) -> TextUnit {\n-        let mut col: TextUnit = col.into();\n+    fn utf16_to_utf8_col(&self, line: u32, mut col: u32) -> TextSize {\n         if let Some(utf16_chars) = self.utf16_lines.get(&line) {\n             for c in utf16_chars {\n-                if col >= c.start {\n-                    col += c.len() - TextUnit::from_usize(1);\n+                if col >= u32::from(c.start) {\n+                    col += u32::from(c.len()) - 1;\n                 } else {\n                     // From here on, all utf16 characters come *after* the character we are mapping,\n                     // so we don't need to take them into account\n@@ -134,12 +130,12 @@ impl LineIndex {\n             }\n         }\n \n-        col\n+        col.into()\n     }\n }\n \n #[cfg(test)]\n-mod test_line_index {\n+mod tests {\n     use super::*;\n \n     #[test]\n@@ -200,10 +196,10 @@ const C: char = '\u30e1';\n         assert_eq!(col_index.utf8_to_utf16_col(1, 22.into()), 20);\n \n         // UTF-16 to UTF-8, no changes\n-        assert_eq!(col_index.utf16_to_utf8_col(1, 15), TextUnit::from(15));\n+        assert_eq!(col_index.utf16_to_utf8_col(1, 15), TextSize::from(15));\n \n         // UTF-16 to UTF-8\n-        assert_eq!(col_index.utf16_to_utf8_col(1, 19), TextUnit::from(21));\n+        assert_eq!(col_index.utf16_to_utf8_col(1, 19), TextSize::from(21));\n     }\n \n     #[test]\n@@ -228,18 +224,18 @@ const C: char = \\\"\u30e1 \u30e1\\\";\n         assert!(col_index.utf8_to_utf16_col(2, 15.into()) == 15);\n \n         // UTF-16 to UTF-8\n-        assert_eq!(col_index.utf16_to_utf8_col(1, 15), TextUnit::from_usize(15));\n+        assert_eq!(col_index.utf16_to_utf8_col(1, 15), TextSize::from(15));\n \n-        assert_eq!(col_index.utf16_to_utf8_col(1, 18), TextUnit::from_usize(20));\n-        assert_eq!(col_index.utf16_to_utf8_col(1, 19), TextUnit::from_usize(23));\n+        assert_eq!(col_index.utf16_to_utf8_col(1, 18), TextSize::from(20));\n+        assert_eq!(col_index.utf16_to_utf8_col(1, 19), TextSize::from(23));\n \n-        assert_eq!(col_index.utf16_to_utf8_col(2, 15), TextUnit::from_usize(15));\n+        assert_eq!(col_index.utf16_to_utf8_col(2, 15), TextSize::from(15));\n     }\n \n     #[test]\n     fn test_splitlines() {\n         fn r(lo: u32, hi: u32) -> TextRange {\n-            TextRange::from_to(lo.into(), hi.into())\n+            TextRange::new(lo.into(), hi.into())\n         }\n \n         let text = \"a\\nbb\\nccc\\n\";"}, {"sha": "039a12c0d84823005e16b6246e176ce4aae6a9ab", "filename": "crates/ra_ide_db/src/line_index_utils.rs", "status": "modified", "additions": 27, "deletions": 24, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide_db%2Fsrc%2Fline_index_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide_db%2Fsrc%2Fline_index_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fline_index_utils.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,20 +1,22 @@\n //! Code actions can specify desirable final position of the cursor.\n //!\n-//! The position is specified as a `TextUnit` in the final file. We need to send\n+//! The position is specified as a `TextSize` in the final file. We need to send\n //! it in `(Line, Column)` coordinate though. However, we only have a LineIndex\n //! for a file pre-edit!\n //!\n //! Code in this module applies this \"to (Line, Column) after edit\"\n //! transformation.\n \n-use ra_syntax::{TextRange, TextUnit};\n+use std::convert::TryInto;\n+\n+use ra_syntax::{TextRange, TextSize};\n use ra_text_edit::{AtomTextEdit, TextEdit};\n \n use crate::line_index::{LineCol, LineIndex, Utf16Char};\n \n pub fn translate_offset_with_edit(\n     line_index: &LineIndex,\n-    offset: TextUnit,\n+    offset: TextSize,\n     text_edit: &TextEdit,\n ) -> LineCol {\n     let mut state = Edits::from_text_edit(&text_edit);\n@@ -84,15 +86,15 @@ pub fn translate_offset_with_edit(\n \n #[derive(Debug, Clone)]\n enum Step {\n-    Newline(TextUnit),\n+    Newline(TextSize),\n     Utf16Char(TextRange),\n }\n \n #[derive(Debug)]\n struct LineIndexStepIter<'a> {\n     line_index: &'a LineIndex,\n     next_newline_idx: usize,\n-    utf16_chars: Option<(TextUnit, std::slice::Iter<'a, Utf16Char>)>,\n+    utf16_chars: Option<(TextSize, std::slice::Iter<'a, Utf16Char>)>,\n }\n \n impl LineIndexStepIter<'_> {\n@@ -111,7 +113,7 @@ impl Iterator for LineIndexStepIter<'_> {\n             .as_mut()\n             .and_then(|(newline, x)| {\n                 let x = x.next()?;\n-                Some(Step::Utf16Char(TextRange::from_to(*newline + x.start, *newline + x.end)))\n+                Some(Step::Utf16Char(TextRange::new(*newline + x.start, *newline + x.end)))\n             })\n             .or_else(|| {\n                 let next_newline = *self.line_index.newlines.get(self.next_newline_idx)?;\n@@ -129,7 +131,7 @@ impl Iterator for LineIndexStepIter<'_> {\n #[derive(Debug)]\n struct OffsetStepIter<'a> {\n     text: &'a str,\n-    offset: TextUnit,\n+    offset: TextSize,\n }\n \n impl Iterator for OffsetStepIter<'_> {\n@@ -139,16 +141,17 @@ impl Iterator for OffsetStepIter<'_> {\n             .text\n             .char_indices()\n             .filter_map(|(i, c)| {\n+                let i: TextSize = i.try_into().unwrap();\n+                let char_len = TextSize::of(c);\n                 if c == '\\n' {\n-                    let next_offset = self.offset + TextUnit::from_usize(i + 1);\n+                    let next_offset = self.offset + i + char_len;\n                     let next = Step::Newline(next_offset);\n                     Some((next, next_offset))\n                 } else {\n-                    let char_len = TextUnit::of_char(c);\n-                    if char_len > TextUnit::from_usize(1) {\n-                        let start = self.offset + TextUnit::from_usize(i);\n+                    if !c.is_ascii() {\n+                        let start = self.offset + i;\n                         let end = start + char_len;\n-                        let next = Step::Utf16Char(TextRange::from_to(start, end));\n+                        let next = Step::Utf16Char(TextRange::new(start, end));\n                         let next_offset = end;\n                         Some((next, next_offset))\n                     } else {\n@@ -157,7 +160,7 @@ impl Iterator for OffsetStepIter<'_> {\n                 }\n             })\n             .next()?;\n-        let next_idx = (next_offset - self.offset).to_usize();\n+        let next_idx: usize = (next_offset - self.offset).into();\n         self.text = &self.text[next_idx..];\n         self.offset = next_offset;\n         Some(next)\n@@ -195,7 +198,7 @@ impl<'a> Edits<'a> {\n         match self.edits.split_first() {\n             Some((next, rest)) => {\n                 let delete = self.translate_range(next.delete);\n-                let diff = next.insert.len() as i64 - next.delete.len().to_usize() as i64;\n+                let diff = next.insert.len() as i64 - usize::from(next.delete.len()) as i64;\n                 self.current = Some(TranslatedEdit { delete, insert: &next.insert, diff });\n                 self.edits = rest;\n             }\n@@ -244,15 +247,15 @@ impl<'a> Edits<'a> {\n         } else {\n             let start = self.translate(range.start());\n             let end = self.translate(range.end());\n-            TextRange::from_to(start, end)\n+            TextRange::new(start, end)\n         }\n     }\n \n-    fn translate(&self, x: TextUnit) -> TextUnit {\n+    fn translate(&self, x: TextSize) -> TextSize {\n         if self.acc_diff == 0 {\n             x\n         } else {\n-            TextUnit::from((x.to_usize() as i64 + self.acc_diff) as u32)\n+            TextSize::from((usize::from(x) as i64 + self.acc_diff) as u32)\n         }\n     }\n \n@@ -271,29 +274,29 @@ impl<'a> Edits<'a> {\n #[derive(Debug)]\n struct RunningLineCol {\n     line: u32,\n-    last_newline: TextUnit,\n-    col_adjust: TextUnit,\n+    last_newline: TextSize,\n+    col_adjust: TextSize,\n }\n \n impl RunningLineCol {\n     fn new() -> RunningLineCol {\n-        RunningLineCol { line: 0, last_newline: TextUnit::from(0), col_adjust: TextUnit::from(0) }\n+        RunningLineCol { line: 0, last_newline: TextSize::from(0), col_adjust: TextSize::from(0) }\n     }\n \n-    fn to_line_col(&self, offset: TextUnit) -> LineCol {\n+    fn to_line_col(&self, offset: TextSize) -> LineCol {\n         LineCol {\n             line: self.line,\n             col_utf16: ((offset - self.last_newline) - self.col_adjust).into(),\n         }\n     }\n \n-    fn add_line(&mut self, newline: TextUnit) {\n+    fn add_line(&mut self, newline: TextSize) {\n         self.line += 1;\n         self.last_newline = newline;\n-        self.col_adjust = TextUnit::from(0);\n+        self.col_adjust = TextSize::from(0);\n     }\n \n     fn adjust_col(&mut self, range: TextRange) {\n-        self.col_adjust += range.len() - TextUnit::from(1);\n+        self.col_adjust += range.len() - TextSize::from(1);\n     }\n }"}, {"sha": "596f957b8c34a0c78db93783eabd68be4c68114a", "filename": "crates/ra_ide_db/src/search.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Fsearch.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -4,13 +4,13 @@\n //! get a super-set of matches. Then, we we confirm each match using precise\n //! name resolution.\n \n-use std::mem;\n+use std::{convert::TryInto, mem};\n \n use hir::{DefWithBody, HasSource, Module, ModuleSource, Semantics, Visibility};\n use once_cell::unsync::Lazy;\n use ra_db::{FileId, FileRange, SourceDatabaseExt};\n use ra_prof::profile;\n-use ra_syntax::{ast, match_ast, AstNode, TextRange, TextUnit};\n+use ra_syntax::{ast, match_ast, AstNode, TextRange, TextSize};\n use rustc_hash::FxHashMap;\n use test_utils::tested_by;\n \n@@ -85,7 +85,7 @@ impl SearchScope {\n             match (r1, r2) {\n                 (None, r) | (r, None) => Some(r),\n                 (Some(r1), Some(r2)) => {\n-                    let r = r1.intersection(&r2)?;\n+                    let r = r1.intersect(r2)?;\n                     Some(Some(r))\n                 }\n             }\n@@ -201,13 +201,13 @@ impl Definition {\n         for (file_id, search_range) in search_scope {\n             let text = db.file_text(file_id);\n             let search_range =\n-                search_range.unwrap_or(TextRange::offset_len(0.into(), TextUnit::of_str(&text)));\n+                search_range.unwrap_or(TextRange::up_to(TextSize::of(text.as_str())));\n \n             let sema = Semantics::new(db);\n             let tree = Lazy::new(|| sema.parse(file_id).syntax().clone());\n \n             for (idx, _) in text.match_indices(pat) {\n-                let offset = TextUnit::from_usize(idx);\n+                let offset: TextSize = idx.try_into().unwrap();\n                 if !search_range.contains_inclusive(offset) {\n                     tested_by!(search_filters_by_range; force);\n                     continue;"}, {"sha": "bb28acfd95d8e88e9f0a89a8a222f013996ffc43", "filename": "crates/ra_mbe/src/syntax_bridge.rs", "status": "modified", "additions": 33, "deletions": 36, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Fsyntax_bridge.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -5,7 +5,7 @@ use ra_syntax::{\n     ast::{self, make::tokens::doc_comment},\n     tokenize, AstToken, Parse, SmolStr, SyntaxKind,\n     SyntaxKind::*,\n-    SyntaxNode, SyntaxToken, SyntaxTreeBuilder, TextRange, TextUnit, Token as RawToken, T,\n+    SyntaxNode, SyntaxToken, SyntaxTreeBuilder, TextRange, TextSize, Token as RawToken, T,\n };\n use rustc_hash::FxHashMap;\n use tt::buffer::{Cursor, TokenBuffer};\n@@ -99,11 +99,11 @@ pub fn parse_to_token_tree(text: &str) -> Option<(tt::Subtree, TokenMap)> {\n \n     let mut conv = RawConvertor {\n         text,\n-        offset: TextUnit::default(),\n+        offset: TextSize::default(),\n         inner: tokens.iter(),\n         id_alloc: TokenIdAlloc {\n             map: Default::default(),\n-            global_offset: TextUnit::default(),\n+            global_offset: TextSize::default(),\n             next_id: 0,\n         },\n     };\n@@ -227,7 +227,7 @@ fn convert_doc_comment(token: &ra_syntax::SyntaxToken) -> Option<Vec<tt::TokenTr\n \n struct TokenIdAlloc {\n     map: TokenMap,\n-    global_offset: TextUnit,\n+    global_offset: TextSize,\n     next_id: u32,\n }\n \n@@ -266,7 +266,7 @@ impl TokenIdAlloc {\n /// A Raw Token (straightly from lexer) convertor\n struct RawConvertor<'a> {\n     text: &'a str,\n-    offset: TextUnit,\n+    offset: TextSize,\n     id_alloc: TokenIdAlloc,\n     inner: std::slice::Iter<'a, RawToken>,\n }\n@@ -314,7 +314,7 @@ trait TokenConvertor {\n         }\n \n         result.push(if k.is_punct() {\n-            assert_eq!(range.len().to_usize(), 1);\n+            assert_eq!(range.len(), TextSize::of('.'));\n             let delim = match k {\n                 T!['('] => Some((tt::DelimiterKind::Parenthesis, T![')'])),\n                 T!['{'] => Some((tt::DelimiterKind::Brace, T!['}'])),\n@@ -381,17 +381,16 @@ trait TokenConvertor {\n                 k if k.is_keyword() => make_leaf!(Ident),\n                 k if k.is_literal() => make_leaf!(Literal),\n                 LIFETIME => {\n-                    let char_unit = TextUnit::from_usize(1);\n-                    let r = TextRange::offset_len(range.start(), char_unit);\n+                    let char_unit = TextSize::of('\\'');\n+                    let r = TextRange::at(range.start(), char_unit);\n                     let apostrophe = tt::Leaf::from(tt::Punct {\n                         char: '\\'',\n                         spacing: tt::Spacing::Joint,\n                         id: self.id_alloc().alloc(r),\n                     });\n                     result.push(apostrophe.into());\n \n-                    let r =\n-                        TextRange::offset_len(range.start() + char_unit, range.len() - char_unit);\n+                    let r = TextRange::at(range.start() + char_unit, range.len() - char_unit);\n                     let ident = tt::Leaf::from(tt::Ident {\n                         text: SmolStr::new(&token.to_text()[1..]),\n                         id: self.id_alloc().alloc(r),\n@@ -440,7 +439,7 @@ impl<'a> TokenConvertor for RawConvertor<'a> {\n \n     fn bump(&mut self) -> Option<(Self::Token, TextRange)> {\n         let token = self.inner.next()?;\n-        let range = TextRange::offset_len(self.offset, token.len);\n+        let range = TextRange::at(self.offset, token.len);\n         self.offset += token.len;\n \n         Some(((*token, &self.text[range]), range))\n@@ -450,7 +449,7 @@ impl<'a> TokenConvertor for RawConvertor<'a> {\n         let token = self.inner.as_slice().get(0).cloned();\n \n         token.map(|it| {\n-            let range = TextRange::offset_len(self.offset, it.len);\n+            let range = TextRange::at(self.offset, it.len);\n             (it, &self.text[range])\n         })\n     }\n@@ -464,11 +463,11 @@ struct Convertor {\n     id_alloc: TokenIdAlloc,\n     current: Option<SyntaxToken>,\n     range: TextRange,\n-    punct_offset: Option<(SyntaxToken, TextUnit)>,\n+    punct_offset: Option<(SyntaxToken, TextSize)>,\n }\n \n impl Convertor {\n-    fn new(node: &SyntaxNode, global_offset: TextUnit) -> Convertor {\n+    fn new(node: &SyntaxNode, global_offset: TextSize) -> Convertor {\n         Convertor {\n             id_alloc: { TokenIdAlloc { map: TokenMap::default(), global_offset, next_id: 0 } },\n             current: node.first_token(),\n@@ -481,7 +480,7 @@ impl Convertor {\n #[derive(Debug)]\n enum SynToken {\n     Ordiniary(SyntaxToken),\n-    Punch(SyntaxToken, TextUnit),\n+    Punch(SyntaxToken, TextSize),\n }\n \n impl SynToken {\n@@ -500,7 +499,7 @@ impl SrcToken for SynToken {\n     fn to_char(&self) -> Option<char> {\n         match self {\n             SynToken::Ordiniary(_) => None,\n-            SynToken::Punch(it, i) => it.text().chars().nth(i.to_usize()),\n+            SynToken::Punch(it, i) => it.text().chars().nth((*i).into()),\n         }\n     }\n     fn to_text(&self) -> SmolStr {\n@@ -516,26 +515,26 @@ impl TokenConvertor for Convertor {\n \n     fn bump(&mut self) -> Option<(Self::Token, TextRange)> {\n         if let Some((punct, offset)) = self.punct_offset.clone() {\n-            if offset.to_usize() + 1 < punct.text().len() {\n-                let offset = offset + TextUnit::from_usize(1);\n+            if usize::from(offset) + 1 < punct.text().len() {\n+                let offset = offset + TextSize::of('.');\n                 let range = punct.text_range();\n                 self.punct_offset = Some((punct.clone(), offset));\n-                let range = TextRange::offset_len(range.start() + offset, TextUnit::from_usize(1));\n+                let range = TextRange::at(range.start() + offset, TextSize::of('.'));\n                 return Some((SynToken::Punch(punct, offset), range));\n             }\n         }\n \n         let curr = self.current.clone()?;\n-        if !curr.text_range().is_subrange(&self.range) {\n+        if !&self.range.contains_range(curr.text_range()) {\n             return None;\n         }\n         self.current = curr.next_token();\n \n         let token = if curr.kind().is_punct() {\n             let range = curr.text_range();\n-            let range = TextRange::offset_len(range.start(), TextUnit::from_usize(1));\n-            self.punct_offset = Some((curr.clone(), TextUnit::from_usize(0)));\n-            (SynToken::Punch(curr, TextUnit::from_usize(0)), range)\n+            let range = TextRange::at(range.start(), TextSize::of('.'));\n+            self.punct_offset = Some((curr.clone(), 0.into()));\n+            (SynToken::Punch(curr, 0.into()), range)\n         } else {\n             self.punct_offset = None;\n             let range = curr.text_range();\n@@ -547,19 +546,19 @@ impl TokenConvertor for Convertor {\n \n     fn peek(&self) -> Option<Self::Token> {\n         if let Some((punct, mut offset)) = self.punct_offset.clone() {\n-            offset = offset + TextUnit::from_usize(1);\n-            if offset.to_usize() < punct.text().len() {\n+            offset = offset + TextSize::of('.');\n+            if usize::from(offset) < punct.text().len() {\n                 return Some(SynToken::Punch(punct, offset));\n             }\n         }\n \n         let curr = self.current.clone()?;\n-        if !curr.text_range().is_subrange(&self.range) {\n+        if !self.range.contains_range(curr.text_range()) {\n             return None;\n         }\n \n         let token = if curr.kind().is_punct() {\n-            SynToken::Punch(curr, TextUnit::from_usize(0))\n+            SynToken::Punch(curr, 0.into())\n         } else {\n             SynToken::Ordiniary(curr)\n         };\n@@ -574,8 +573,8 @@ impl TokenConvertor for Convertor {\n struct TtTreeSink<'a> {\n     buf: String,\n     cursor: Cursor<'a>,\n-    open_delims: FxHashMap<tt::TokenId, TextUnit>,\n-    text_pos: TextUnit,\n+    open_delims: FxHashMap<tt::TokenId, TextSize>,\n+    text_pos: TextSize,\n     inner: SyntaxTreeBuilder,\n     token_map: TokenMap,\n \n@@ -641,7 +640,7 @@ impl<'a> TreeSink for TtTreeSink<'a> {\n                         }\n                         tt::Leaf::Literal(lit) => (lit.text.clone(), lit.id),\n                     };\n-                    let range = TextRange::offset_len(self.text_pos, TextUnit::of_str(&text));\n+                    let range = TextRange::at(self.text_pos, TextSize::of(text.as_str()));\n                     self.token_map.insert(id, range);\n                     self.cursor = self.cursor.bump();\n                     text\n@@ -658,10 +657,8 @@ impl<'a> TreeSink for TtTreeSink<'a> {\n                         self.cursor = self.cursor.bump();\n                         if let Some(id) = parent.delimiter.map(|it| it.id) {\n                             if let Some(open_delim) = self.open_delims.get(&id) {\n-                                let open_range =\n-                                    TextRange::offset_len(*open_delim, TextUnit::from_usize(1));\n-                                let close_range =\n-                                    TextRange::offset_len(self.text_pos, TextUnit::from_usize(1));\n+                                let open_range = TextRange::at(*open_delim, TextSize::of('('));\n+                                let close_range = TextRange::at(self.text_pos, TextSize::of('('));\n                                 self.token_map.insert_delim(id, open_range, close_range);\n                             }\n                         }\n@@ -672,7 +669,7 @@ impl<'a> TreeSink for TtTreeSink<'a> {\n                 }\n             };\n             self.buf += &text;\n-            self.text_pos += TextUnit::of_str(&text);\n+            self.text_pos += TextSize::of(text.as_str());\n         }\n \n         let text = SmolStr::new(self.buf.as_str());\n@@ -690,7 +687,7 @@ impl<'a> TreeSink for TtTreeSink<'a> {\n             // other parts of RA such that we don't add whitespace here.\n             if curr.spacing == tt::Spacing::Alone && curr.char != ';' {\n                 self.inner.token(WHITESPACE, \" \".into());\n-                self.text_pos += TextUnit::of_char(' ');\n+                self.text_pos += TextSize::of(' ');\n             }\n         }\n     }"}, {"sha": "bee59c5c49c39532e12ad90a9e095077cf464be5", "filename": "crates/ra_mbe/src/tests.rs", "status": "modified", "additions": 204, "deletions": 204, "changes": 408, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_mbe%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_mbe%2Fsrc%2Ftests.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -257,30 +257,30 @@ fn test_expr_order() {\n     let dump = format!(\"{:#?}\", expanded);\n     assert_eq_text!(\n         dump.trim(),\n-        r#\"MACRO_ITEMS@[0; 15)\n-  FN_DEF@[0; 15)\n-    FN_KW@[0; 2) \"fn\"\n-    NAME@[2; 5)\n-      IDENT@[2; 5) \"bar\"\n-    PARAM_LIST@[5; 7)\n-      L_PAREN@[5; 6) \"(\"\n-      R_PAREN@[6; 7) \")\"\n-    BLOCK_EXPR@[7; 15)\n-      BLOCK@[7; 15)\n-        L_CURLY@[7; 8) \"{\"\n-        EXPR_STMT@[8; 14)\n-          BIN_EXPR@[8; 13)\n-            BIN_EXPR@[8; 11)\n-              LITERAL@[8; 9)\n-                INT_NUMBER@[8; 9) \"1\"\n-              PLUS@[9; 10) \"+\"\n-              LITERAL@[10; 11)\n-                INT_NUMBER@[10; 11) \"1\"\n-            STAR@[11; 12) \"*\"\n-            LITERAL@[12; 13)\n-              INT_NUMBER@[12; 13) \"2\"\n-          SEMICOLON@[13; 14) \";\"\n-        R_CURLY@[14; 15) \"}\"\"#,\n+        r#\"MACRO_ITEMS@0..15\n+  FN_DEF@0..15\n+    FN_KW@0..2 \"fn\"\n+    NAME@2..5\n+      IDENT@2..5 \"bar\"\n+    PARAM_LIST@5..7\n+      L_PAREN@5..6 \"(\"\n+      R_PAREN@6..7 \")\"\n+    BLOCK_EXPR@7..15\n+      BLOCK@7..15\n+        L_CURLY@7..8 \"{\"\n+        EXPR_STMT@8..14\n+          BIN_EXPR@8..13\n+            BIN_EXPR@8..11\n+              LITERAL@8..9\n+                INT_NUMBER@8..9 \"1\"\n+              PLUS@9..10 \"+\"\n+              LITERAL@10..11\n+                INT_NUMBER@10..11 \"1\"\n+            STAR@11..12 \"*\"\n+            LITERAL@12..13\n+              INT_NUMBER@12..13 \"2\"\n+          SEMICOLON@13..14 \";\"\n+        R_CURLY@14..15 \"}\"\"#,\n     );\n }\n \n@@ -490,39 +490,39 @@ fn test_expand_to_item_list() {\n     assert_eq!(\n         format!(\"{:#?}\", tree).trim(),\n         r#\"\n-MACRO_ITEMS@[0; 40)\n-  STRUCT_DEF@[0; 20)\n-    STRUCT_KW@[0; 6) \"struct\"\n-    NAME@[6; 9)\n-      IDENT@[6; 9) \"Foo\"\n-    RECORD_FIELD_DEF_LIST@[9; 20)\n-      L_CURLY@[9; 10) \"{\"\n-      RECORD_FIELD_DEF@[10; 19)\n-        NAME@[10; 15)\n-          IDENT@[10; 15) \"field\"\n-        COLON@[15; 16) \":\"\n-        PATH_TYPE@[16; 19)\n-          PATH@[16; 19)\n-            PATH_SEGMENT@[16; 19)\n-              NAME_REF@[16; 19)\n-                IDENT@[16; 19) \"u32\"\n-      R_CURLY@[19; 20) \"}\"\n-  STRUCT_DEF@[20; 40)\n-    STRUCT_KW@[20; 26) \"struct\"\n-    NAME@[26; 29)\n-      IDENT@[26; 29) \"Bar\"\n-    RECORD_FIELD_DEF_LIST@[29; 40)\n-      L_CURLY@[29; 30) \"{\"\n-      RECORD_FIELD_DEF@[30; 39)\n-        NAME@[30; 35)\n-          IDENT@[30; 35) \"field\"\n-        COLON@[35; 36) \":\"\n-        PATH_TYPE@[36; 39)\n-          PATH@[36; 39)\n-            PATH_SEGMENT@[36; 39)\n-              NAME_REF@[36; 39)\n-                IDENT@[36; 39) \"u32\"\n-      R_CURLY@[39; 40) \"}\"\"#\n+MACRO_ITEMS@0..40\n+  STRUCT_DEF@0..20\n+    STRUCT_KW@0..6 \"struct\"\n+    NAME@6..9\n+      IDENT@6..9 \"Foo\"\n+    RECORD_FIELD_DEF_LIST@9..20\n+      L_CURLY@9..10 \"{\"\n+      RECORD_FIELD_DEF@10..19\n+        NAME@10..15\n+          IDENT@10..15 \"field\"\n+        COLON@15..16 \":\"\n+        PATH_TYPE@16..19\n+          PATH@16..19\n+            PATH_SEGMENT@16..19\n+              NAME_REF@16..19\n+                IDENT@16..19 \"u32\"\n+      R_CURLY@19..20 \"}\"\n+  STRUCT_DEF@20..40\n+    STRUCT_KW@20..26 \"struct\"\n+    NAME@26..29\n+      IDENT@26..29 \"Bar\"\n+    RECORD_FIELD_DEF_LIST@29..40\n+      L_CURLY@29..30 \"{\"\n+      RECORD_FIELD_DEF@30..39\n+        NAME@30..35\n+          IDENT@30..35 \"field\"\n+        COLON@35..36 \":\"\n+        PATH_TYPE@36..39\n+          PATH@36..39\n+            PATH_SEGMENT@36..39\n+              NAME_REF@36..39\n+                IDENT@36..39 \"u32\"\n+      R_CURLY@39..40 \"}\"\"#\n             .trim()\n     );\n }\n@@ -623,37 +623,37 @@ fn test_tt_to_stmts() {\n \n     assert_eq!(\n         format!(\"{:#?}\", stmts).trim(),\n-        r#\"MACRO_STMTS@[0; 15)\n-  LET_STMT@[0; 7)\n-    LET_KW@[0; 3) \"let\"\n-    BIND_PAT@[3; 4)\n-      NAME@[3; 4)\n-        IDENT@[3; 4) \"a\"\n-    EQ@[4; 5) \"=\"\n-    LITERAL@[5; 6)\n-      INT_NUMBER@[5; 6) \"0\"\n-    SEMICOLON@[6; 7) \";\"\n-  EXPR_STMT@[7; 14)\n-    BIN_EXPR@[7; 13)\n-      PATH_EXPR@[7; 8)\n-        PATH@[7; 8)\n-          PATH_SEGMENT@[7; 8)\n-            NAME_REF@[7; 8)\n-              IDENT@[7; 8) \"a\"\n-      EQ@[8; 9) \"=\"\n-      BIN_EXPR@[9; 13)\n-        LITERAL@[9; 11)\n-          INT_NUMBER@[9; 11) \"10\"\n-        PLUS@[11; 12) \"+\"\n-        LITERAL@[12; 13)\n-          INT_NUMBER@[12; 13) \"1\"\n-    SEMICOLON@[13; 14) \";\"\n-  EXPR_STMT@[14; 15)\n-    PATH_EXPR@[14; 15)\n-      PATH@[14; 15)\n-        PATH_SEGMENT@[14; 15)\n-          NAME_REF@[14; 15)\n-            IDENT@[14; 15) \"a\"\"#,\n+        r#\"MACRO_STMTS@0..15\n+  LET_STMT@0..7\n+    LET_KW@0..3 \"let\"\n+    BIND_PAT@3..4\n+      NAME@3..4\n+        IDENT@3..4 \"a\"\n+    EQ@4..5 \"=\"\n+    LITERAL@5..6\n+      INT_NUMBER@5..6 \"0\"\n+    SEMICOLON@6..7 \";\"\n+  EXPR_STMT@7..14\n+    BIN_EXPR@7..13\n+      PATH_EXPR@7..8\n+        PATH@7..8\n+          PATH_SEGMENT@7..8\n+            NAME_REF@7..8\n+              IDENT@7..8 \"a\"\n+      EQ@8..9 \"=\"\n+      BIN_EXPR@9..13\n+        LITERAL@9..11\n+          INT_NUMBER@9..11 \"10\"\n+        PLUS@11..12 \"+\"\n+        LITERAL@12..13\n+          INT_NUMBER@12..13 \"1\"\n+    SEMICOLON@13..14 \";\"\n+  EXPR_STMT@14..15\n+    PATH_EXPR@14..15\n+      PATH@14..15\n+        PATH_SEGMENT@14..15\n+          NAME_REF@14..15\n+            IDENT@14..15 \"a\"\"#,\n     );\n }\n \n@@ -974,20 +974,20 @@ fn test_tt_composite2() {\n     let res = format!(\"{:#?}\", &node);\n     assert_eq_text!(\n         res.trim(),\n-        r###\"MACRO_ITEMS@[0; 10)\n-  MACRO_CALL@[0; 10)\n-    PATH@[0; 3)\n-      PATH_SEGMENT@[0; 3)\n-        NAME_REF@[0; 3)\n-          IDENT@[0; 3) \"abs\"\n-    BANG@[3; 4) \"!\"\n-    TOKEN_TREE@[4; 10)\n-      L_PAREN@[4; 5) \"(\"\n-      EQ@[5; 6) \"=\"\n-      R_ANGLE@[6; 7) \">\"\n-      WHITESPACE@[7; 8) \" \"\n-      POUND@[8; 9) \"#\"\n-      R_PAREN@[9; 10) \")\"\"###\n+        r###\"MACRO_ITEMS@0..10\n+  MACRO_CALL@0..10\n+    PATH@0..3\n+      PATH_SEGMENT@0..3\n+        NAME_REF@0..3\n+          IDENT@0..3 \"abs\"\n+    BANG@3..4 \"!\"\n+    TOKEN_TREE@4..10\n+      L_PAREN@4..5 \"(\"\n+      EQ@5..6 \"=\"\n+      R_ANGLE@6..7 \">\"\n+      WHITESPACE@7..8 \" \"\n+      POUND@8..9 \"#\"\n+      R_PAREN@9..10 \")\"\"###\n     );\n }\n \n@@ -1113,69 +1113,69 @@ fn test_vec() {\n \n     assert_eq!(\n         format!(\"{:#?}\", tree).trim(),\n-        r#\"BLOCK_EXPR@[0; 45)\n-  BLOCK@[0; 45)\n-    L_CURLY@[0; 1) \"{\"\n-    LET_STMT@[1; 20)\n-      LET_KW@[1; 4) \"let\"\n-      BIND_PAT@[4; 8)\n-        MUT_KW@[4; 7) \"mut\"\n-        NAME@[7; 8)\n-          IDENT@[7; 8) \"v\"\n-      EQ@[8; 9) \"=\"\n-      CALL_EXPR@[9; 19)\n-        PATH_EXPR@[9; 17)\n-          PATH@[9; 17)\n-            PATH@[9; 12)\n-              PATH_SEGMENT@[9; 12)\n-                NAME_REF@[9; 12)\n-                  IDENT@[9; 12) \"Vec\"\n-            COLON2@[12; 14) \"::\"\n-            PATH_SEGMENT@[14; 17)\n-              NAME_REF@[14; 17)\n-                IDENT@[14; 17) \"new\"\n-        ARG_LIST@[17; 19)\n-          L_PAREN@[17; 18) \"(\"\n-          R_PAREN@[18; 19) \")\"\n-      SEMICOLON@[19; 20) \";\"\n-    EXPR_STMT@[20; 33)\n-      METHOD_CALL_EXPR@[20; 32)\n-        PATH_EXPR@[20; 21)\n-          PATH@[20; 21)\n-            PATH_SEGMENT@[20; 21)\n-              NAME_REF@[20; 21)\n-                IDENT@[20; 21) \"v\"\n-        DOT@[21; 22) \".\"\n-        NAME_REF@[22; 26)\n-          IDENT@[22; 26) \"push\"\n-        ARG_LIST@[26; 32)\n-          L_PAREN@[26; 27) \"(\"\n-          LITERAL@[27; 31)\n-            INT_NUMBER@[27; 31) \"1u32\"\n-          R_PAREN@[31; 32) \")\"\n-      SEMICOLON@[32; 33) \";\"\n-    EXPR_STMT@[33; 43)\n-      METHOD_CALL_EXPR@[33; 42)\n-        PATH_EXPR@[33; 34)\n-          PATH@[33; 34)\n-            PATH_SEGMENT@[33; 34)\n-              NAME_REF@[33; 34)\n-                IDENT@[33; 34) \"v\"\n-        DOT@[34; 35) \".\"\n-        NAME_REF@[35; 39)\n-          IDENT@[35; 39) \"push\"\n-        ARG_LIST@[39; 42)\n-          L_PAREN@[39; 40) \"(\"\n-          LITERAL@[40; 41)\n-            INT_NUMBER@[40; 41) \"2\"\n-          R_PAREN@[41; 42) \")\"\n-      SEMICOLON@[42; 43) \";\"\n-    PATH_EXPR@[43; 44)\n-      PATH@[43; 44)\n-        PATH_SEGMENT@[43; 44)\n-          NAME_REF@[43; 44)\n-            IDENT@[43; 44) \"v\"\n-    R_CURLY@[44; 45) \"}\"\"#\n+        r#\"BLOCK_EXPR@0..45\n+  BLOCK@0..45\n+    L_CURLY@0..1 \"{\"\n+    LET_STMT@1..20\n+      LET_KW@1..4 \"let\"\n+      BIND_PAT@4..8\n+        MUT_KW@4..7 \"mut\"\n+        NAME@7..8\n+          IDENT@7..8 \"v\"\n+      EQ@8..9 \"=\"\n+      CALL_EXPR@9..19\n+        PATH_EXPR@9..17\n+          PATH@9..17\n+            PATH@9..12\n+              PATH_SEGMENT@9..12\n+                NAME_REF@9..12\n+                  IDENT@9..12 \"Vec\"\n+            COLON2@12..14 \"::\"\n+            PATH_SEGMENT@14..17\n+              NAME_REF@14..17\n+                IDENT@14..17 \"new\"\n+        ARG_LIST@17..19\n+          L_PAREN@17..18 \"(\"\n+          R_PAREN@18..19 \")\"\n+      SEMICOLON@19..20 \";\"\n+    EXPR_STMT@20..33\n+      METHOD_CALL_EXPR@20..32\n+        PATH_EXPR@20..21\n+          PATH@20..21\n+            PATH_SEGMENT@20..21\n+              NAME_REF@20..21\n+                IDENT@20..21 \"v\"\n+        DOT@21..22 \".\"\n+        NAME_REF@22..26\n+          IDENT@22..26 \"push\"\n+        ARG_LIST@26..32\n+          L_PAREN@26..27 \"(\"\n+          LITERAL@27..31\n+            INT_NUMBER@27..31 \"1u32\"\n+          R_PAREN@31..32 \")\"\n+      SEMICOLON@32..33 \";\"\n+    EXPR_STMT@33..43\n+      METHOD_CALL_EXPR@33..42\n+        PATH_EXPR@33..34\n+          PATH@33..34\n+            PATH_SEGMENT@33..34\n+              NAME_REF@33..34\n+                IDENT@33..34 \"v\"\n+        DOT@34..35 \".\"\n+        NAME_REF@35..39\n+          IDENT@35..39 \"push\"\n+        ARG_LIST@39..42\n+          L_PAREN@39..40 \"(\"\n+          LITERAL@40..41\n+            INT_NUMBER@40..41 \"2\"\n+          R_PAREN@41..42 \")\"\n+      SEMICOLON@42..43 \";\"\n+    PATH_EXPR@43..44\n+      PATH@43..44\n+        PATH_SEGMENT@43..44\n+          NAME_REF@43..44\n+            IDENT@43..44 \"v\"\n+    R_CURLY@44..45 \"}\"\"#\n     );\n }\n \n@@ -1798,45 +1798,45 @@ fn test_no_space_after_semi_colon() {\n     let dump = format!(\"{:#?}\", expanded);\n     assert_eq_text!(\n         dump.trim(),\n-        r###\"MACRO_ITEMS@[0; 52)\n-  MODULE@[0; 26)\n-    ATTR@[0; 21)\n-      POUND@[0; 1) \"#\"\n-      L_BRACK@[1; 2) \"[\"\n-      PATH@[2; 5)\n-        PATH_SEGMENT@[2; 5)\n-          NAME_REF@[2; 5)\n-            IDENT@[2; 5) \"cfg\"\n-      TOKEN_TREE@[5; 20)\n-        L_PAREN@[5; 6) \"(\"\n-        IDENT@[6; 13) \"feature\"\n-        EQ@[13; 14) \"=\"\n-        STRING@[14; 19) \"\\\"std\\\"\"\n-        R_PAREN@[19; 20) \")\"\n-      R_BRACK@[20; 21) \"]\"\n-    MOD_KW@[21; 24) \"mod\"\n-    NAME@[24; 25)\n-      IDENT@[24; 25) \"m\"\n-    SEMICOLON@[25; 26) \";\"\n-  MODULE@[26; 52)\n-    ATTR@[26; 47)\n-      POUND@[26; 27) \"#\"\n-      L_BRACK@[27; 28) \"[\"\n-      PATH@[28; 31)\n-        PATH_SEGMENT@[28; 31)\n-          NAME_REF@[28; 31)\n-            IDENT@[28; 31) \"cfg\"\n-      TOKEN_TREE@[31; 46)\n-        L_PAREN@[31; 32) \"(\"\n-        IDENT@[32; 39) \"feature\"\n-        EQ@[39; 40) \"=\"\n-        STRING@[40; 45) \"\\\"std\\\"\"\n-        R_PAREN@[45; 46) \")\"\n-      R_BRACK@[46; 47) \"]\"\n-    MOD_KW@[47; 50) \"mod\"\n-    NAME@[50; 51)\n-      IDENT@[50; 51) \"f\"\n-    SEMICOLON@[51; 52) \";\"\"###,\n+        r###\"MACRO_ITEMS@0..52\n+  MODULE@0..26\n+    ATTR@0..21\n+      POUND@0..1 \"#\"\n+      L_BRACK@1..2 \"[\"\n+      PATH@2..5\n+        PATH_SEGMENT@2..5\n+          NAME_REF@2..5\n+            IDENT@2..5 \"cfg\"\n+      TOKEN_TREE@5..20\n+        L_PAREN@5..6 \"(\"\n+        IDENT@6..13 \"feature\"\n+        EQ@13..14 \"=\"\n+        STRING@14..19 \"\\\"std\\\"\"\n+        R_PAREN@19..20 \")\"\n+      R_BRACK@20..21 \"]\"\n+    MOD_KW@21..24 \"mod\"\n+    NAME@24..25\n+      IDENT@24..25 \"m\"\n+    SEMICOLON@25..26 \";\"\n+  MODULE@26..52\n+    ATTR@26..47\n+      POUND@26..27 \"#\"\n+      L_BRACK@27..28 \"[\"\n+      PATH@28..31\n+        PATH_SEGMENT@28..31\n+          NAME_REF@28..31\n+            IDENT@28..31 \"cfg\"\n+      TOKEN_TREE@31..46\n+        L_PAREN@31..32 \"(\"\n+        IDENT@32..39 \"feature\"\n+        EQ@39..40 \"=\"\n+        STRING@40..45 \"\\\"std\\\"\"\n+        R_PAREN@45..46 \")\"\n+      R_BRACK@46..47 \"]\"\n+    MOD_KW@47..50 \"mod\"\n+    NAME@50..51\n+      IDENT@50..51 \"f\"\n+    SEMICOLON@51..52 \";\"\"###,\n     );\n }\n "}, {"sha": "7ffe46c6994f41086a694474c57345f226cd1a05", "filename": "crates/ra_syntax/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2FCargo.toml?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -12,7 +12,7 @@ doctest = false\n \n [dependencies]\n itertools = \"0.9.0\"\n-rowan = \"0.9.1\"\n+rowan = \"0.10.0\"\n rustc_lexer = { version = \"652.0.0\", package = \"rustc-ap-rustc_lexer\" }\n rustc-hash = \"1.1.0\"\n arrayvec = \"0.5.1\""}, {"sha": "2a8dac757b617259b5e6fac77ce014aeb8f08525", "filename": "crates/ra_syntax/src/algo.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -11,7 +11,7 @@ use rustc_hash::FxHashMap;\n \n use crate::{\n     AstNode, Direction, NodeOrToken, SyntaxElement, SyntaxKind, SyntaxNode, SyntaxNodePtr,\n-    SyntaxToken, TextRange, TextUnit,\n+    SyntaxToken, TextRange, TextSize,\n };\n \n /// Returns ancestors of the node at the offset, sorted by length. This should\n@@ -21,7 +21,7 @@ use crate::{\n /// t.parent().ancestors())`.\n pub fn ancestors_at_offset(\n     node: &SyntaxNode,\n-    offset: TextUnit,\n+    offset: TextSize,\n ) -> impl Iterator<Item = SyntaxNode> {\n     node.token_at_offset(offset)\n         .map(|token| token.parent().ancestors())\n@@ -37,7 +37,7 @@ pub fn ancestors_at_offset(\n /// ```\n ///\n /// then the shorter node will be silently preferred.\n-pub fn find_node_at_offset<N: AstNode>(syntax: &SyntaxNode, offset: TextUnit) -> Option<N> {\n+pub fn find_node_at_offset<N: AstNode>(syntax: &SyntaxNode, offset: TextSize) -> Option<N> {\n     ancestors_at_offset(syntax, offset).find_map(N::cast)\n }\n \n@@ -180,7 +180,7 @@ fn _insert_children(\n     position: InsertPosition<SyntaxElement>,\n     to_insert: &mut dyn Iterator<Item = SyntaxElement>,\n ) -> SyntaxNode {\n-    let mut delta = TextUnit::default();\n+    let mut delta = TextSize::default();\n     let to_insert = to_insert.map(|element| {\n         delta += element.text_range().len();\n         to_green_element(element)\n@@ -347,15 +347,15 @@ fn with_children(\n     parent: &SyntaxNode,\n     new_children: Vec<NodeOrToken<rowan::GreenNode, rowan::GreenToken>>,\n ) -> SyntaxNode {\n-    let len = new_children.iter().map(|it| it.text_len()).sum::<TextUnit>();\n+    let len = new_children.iter().map(|it| it.text_len()).sum::<TextSize>();\n     let new_node = rowan::GreenNode::new(rowan::SyntaxKind(parent.kind() as u16), new_children);\n     let new_root_node = parent.replace_with(new_node);\n     let new_root_node = SyntaxNode::new_root(new_root_node);\n \n     // FIXME: use a more elegant way to re-fetch the node (#1185), make\n     // `range` private afterwards\n     let mut ptr = SyntaxNodePtr::new(parent);\n-    ptr.range = TextRange::offset_len(ptr.range.start(), len);\n+    ptr.range = TextRange::at(ptr.range.start(), len);\n     ptr.to_node(&new_root_node)\n }\n "}, {"sha": "8e04b0bbd6d7d98880e12228e3613721e76b0644", "filename": "crates/ra_syntax/src/ast/tokens.rs", "status": "modified", "additions": 15, "deletions": 21, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fast%2Ftokens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fast%2Ftokens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Ftokens.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,8 +1,10 @@\n //! There are many AstNodes, but only a few tokens, so we hand-write them here.\n \n+use std::convert::{TryFrom, TryInto};\n+\n use crate::{\n     ast::{AstToken, Comment, RawString, String, Whitespace},\n-    TextRange, TextUnit,\n+    TextRange, TextSize,\n };\n \n impl Comment {\n@@ -94,14 +96,14 @@ impl QuoteOffsets {\n             return None;\n         }\n \n-        let start = TextUnit::from(0);\n-        let left_quote = TextUnit::from_usize(left_quote) + TextUnit::of_char('\"');\n-        let right_quote = TextUnit::from_usize(right_quote);\n-        let end = TextUnit::of_str(literal);\n+        let start = TextSize::from(0);\n+        let left_quote = TextSize::try_from(left_quote).unwrap() + TextSize::of('\"');\n+        let right_quote = TextSize::try_from(right_quote).unwrap();\n+        let end = TextSize::of(literal);\n \n         let res = QuoteOffsets {\n-            quotes: [TextRange::from_to(start, left_quote), TextRange::from_to(right_quote, end)],\n-            contents: TextRange::from_to(left_quote, right_quote),\n+            quotes: [TextRange::new(start, left_quote), TextRange::new(right_quote, end)],\n+            contents: TextRange::new(left_quote, right_quote),\n         };\n         Some(res)\n     }\n@@ -168,7 +170,7 @@ impl HasStringValue for RawString {\n impl RawString {\n     pub fn map_range_up(&self, range: TextRange) -> Option<TextRange> {\n         let contents_range = self.text_range_between_quotes()?;\n-        assert!(range.is_subrange(&TextRange::offset_len(0.into(), contents_range.len())));\n+        assert!(TextRange::up_to(contents_range.len()).contains_range(range));\n         Some(range + contents_range.start())\n     }\n }\n@@ -459,7 +461,7 @@ pub trait HasFormatSpecifier: AstToken {\n             while let Some((r, Ok(next_char))) = chars.peek() {\n                 if next_char.is_ascii_digit() {\n                     chars.next();\n-                    range = range.extend_to(r);\n+                    range = range.cover(*r);\n                 } else {\n                     break;\n                 }\n@@ -477,7 +479,7 @@ pub trait HasFormatSpecifier: AstToken {\n             while let Some((r, Ok(next_char))) = chars.peek() {\n                 if *next_char == '_' || next_char.is_ascii_digit() || next_char.is_alphabetic() {\n                     chars.next();\n-                    range = range.extend_to(r);\n+                    range = range.cover(*r);\n                 } else {\n                     break;\n                 }\n@@ -498,10 +500,8 @@ impl HasFormatSpecifier for String {\n         let mut res = Vec::with_capacity(text.len());\n         rustc_lexer::unescape::unescape_str(text, &mut |range, unescaped_char| {\n             res.push((\n-                TextRange::from_to(\n-                    TextUnit::from_usize(range.start),\n-                    TextUnit::from_usize(range.end),\n-                ) + offset,\n+                TextRange::new(range.start.try_into().unwrap(), range.end.try_into().unwrap())\n+                    + offset,\n                 unescaped_char,\n             ))\n         });\n@@ -520,13 +520,7 @@ impl HasFormatSpecifier for RawString {\n \n         let mut res = Vec::with_capacity(text.len());\n         for (idx, c) in text.char_indices() {\n-            res.push((\n-                TextRange::from_to(\n-                    TextUnit::from_usize(idx),\n-                    TextUnit::from_usize(idx + c.len_utf8()),\n-                ) + offset,\n-                Ok(c),\n-            ));\n+            res.push((TextRange::at(idx.try_into().unwrap(), TextSize::of(c)) + offset, Ok(c)));\n         }\n         Some(res)\n     }"}, {"sha": "10fbe31768cbda7677daafe2e9e6fc5851da20c7", "filename": "crates/ra_syntax/src/fuzz.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Ffuzz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Ffuzz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Ffuzz.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,8 +1,13 @@\n //! FIXME: write short doc here\n \n-use crate::{validation, AstNode, SourceFile, TextRange, TextUnit};\n+use std::{\n+    convert::TryInto,\n+    str::{self, FromStr},\n+};\n+\n use ra_text_edit::AtomTextEdit;\n-use std::str::{self, FromStr};\n+\n+use crate::{validation, AstNode, SourceFile, TextRange};\n \n fn check_file_invariants(file: &SourceFile) {\n     let root = file.syntax();\n@@ -34,10 +39,8 @@ impl CheckReparse {\n         let text = lines.collect::<Vec<_>>().join(\"\\n\");\n         let text = format!(\"{}{}{}\", PREFIX, text, SUFFIX);\n         text.get(delete_start..delete_start.checked_add(delete_len)?)?; // make sure delete is a valid range\n-        let delete = TextRange::offset_len(\n-            TextUnit::from_usize(delete_start),\n-            TextUnit::from_usize(delete_len),\n-        );\n+        let delete =\n+            TextRange::at(delete_start.try_into().unwrap(), delete_len.try_into().unwrap());\n         let edited_text =\n             format!(\"{}{}{}\", &text[..delete_start], &insert, &text[delete_start + delete_len..]);\n         let edit = AtomTextEdit { delete, insert };"}, {"sha": "ceeb2bde9f3026800fffbfd6b05bb113f6098544", "filename": "crates/ra_syntax/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Flib.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -55,7 +55,7 @@ pub use crate::{\n     },\n };\n pub use ra_parser::{SyntaxKind, T};\n-pub use rowan::{SmolStr, SyntaxText, TextRange, TextUnit, TokenAtOffset, WalkEvent};\n+pub use rowan::{SmolStr, SyntaxText, TextRange, TextSize, TokenAtOffset, WalkEvent};\n \n /// `Parse` is the result of the parsing: a syntax tree and a collection of\n /// errors.\n@@ -266,7 +266,7 @@ fn api_walkthrough() {\n     assert_eq!(expr_syntax.kind(), SyntaxKind::BIN_EXPR);\n \n     // And text range:\n-    assert_eq!(expr_syntax.text_range(), TextRange::from_to(32.into(), 37.into()));\n+    assert_eq!(expr_syntax.text_range(), TextRange::new(32.into(), 37.into()));\n \n     // You can get node's text as a `SyntaxText` object, which will traverse the\n     // tree collecting token's text:"}, {"sha": "f450ef4a2c27c3d6cb7d83d38bc3aeef7dc9255b", "filename": "crates/ra_syntax/src/parsing/lexer.rs", "status": "modified", "additions": 17, "deletions": 15, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fparsing%2Flexer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fparsing%2Flexer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Flexer.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,10 +1,12 @@\n //! Lexer analyzes raw input string and produces lexemes (tokens).\n //! It is just a bridge to `rustc_lexer`.\n \n+use std::convert::TryInto;\n+\n use crate::{\n     SyntaxError,\n     SyntaxKind::{self, *},\n-    TextRange, TextUnit, T,\n+    TextRange, TextSize, T,\n };\n \n /// A token of Rust source.\n@@ -13,7 +15,7 @@ pub struct Token {\n     /// The kind of token.\n     pub kind: SyntaxKind,\n     /// The length of the token.\n-    pub len: TextUnit,\n+    pub len: TextSize,\n }\n \n /// Break a string up into its component tokens.\n@@ -28,18 +30,19 @@ pub fn tokenize(text: &str) -> (Vec<Token>, Vec<SyntaxError>) {\n     let mut tokens = Vec::new();\n     let mut errors = Vec::new();\n \n-    let mut offset: usize = rustc_lexer::strip_shebang(text)\n-        .map(|shebang_len| {\n-            tokens.push(Token { kind: SHEBANG, len: TextUnit::from_usize(shebang_len) });\n+    let mut offset = match rustc_lexer::strip_shebang(text) {\n+        Some(shebang_len) => {\n+            tokens.push(Token { kind: SHEBANG, len: shebang_len.try_into().unwrap() });\n             shebang_len\n-        })\n-        .unwrap_or(0);\n+        }\n+        None => 0,\n+    };\n \n     let text_without_shebang = &text[offset..];\n \n     for rustc_token in rustc_lexer::tokenize(text_without_shebang) {\n-        let token_len = TextUnit::from_usize(rustc_token.len);\n-        let token_range = TextRange::offset_len(TextUnit::from_usize(offset), token_len);\n+        let token_len: TextSize = rustc_token.len.try_into().unwrap();\n+        let token_range = TextRange::at(offset.try_into().unwrap(), token_len);\n \n         let (syntax_kind, err_message) =\n             rustc_token_kind_to_syntax_kind(&rustc_token.kind, &text[token_range]);\n@@ -65,7 +68,7 @@ pub fn tokenize(text: &str) -> (Vec<Token>, Vec<SyntaxError>) {\n /// Beware that unescape errors are not checked at tokenization time.\n pub fn lex_single_syntax_kind(text: &str) -> Option<(SyntaxKind, Option<SyntaxError>)> {\n     lex_first_token(text)\n-        .filter(|(token, _)| token.len == TextUnit::of_str(text))\n+        .filter(|(token, _)| token.len == TextSize::of(text))\n         .map(|(token, error)| (token.kind, error))\n }\n \n@@ -75,7 +78,7 @@ pub fn lex_single_syntax_kind(text: &str) -> Option<(SyntaxKind, Option<SyntaxEr\n /// Beware that unescape errors are not checked at tokenization time.\n pub fn lex_single_valid_syntax_kind(text: &str) -> Option<SyntaxKind> {\n     lex_first_token(text)\n-        .filter(|(token, error)| !error.is_some() && token.len == TextUnit::of_str(text))\n+        .filter(|(token, error)| !error.is_some() && token.len == TextSize::of(text))\n         .map(|(token, _error)| token.kind)\n }\n \n@@ -96,10 +99,9 @@ fn lex_first_token(text: &str) -> Option<(Token, Option<SyntaxError>)> {\n     let rustc_token = rustc_lexer::first_token(text);\n     let (syntax_kind, err_message) = rustc_token_kind_to_syntax_kind(&rustc_token.kind, text);\n \n-    let token = Token { kind: syntax_kind, len: TextUnit::from_usize(rustc_token.len) };\n-    let optional_error = err_message.map(|err_message| {\n-        SyntaxError::new(err_message, TextRange::from_to(0.into(), TextUnit::of_str(text)))\n-    });\n+    let token = Token { kind: syntax_kind, len: rustc_token.len.try_into().unwrap() };\n+    let optional_error = err_message\n+        .map(|err_message| SyntaxError::new(err_message, TextRange::up_to(TextSize::of(text))));\n \n     Some((token, optional_error))\n }"}, {"sha": "ffff0a7b2026a42a5c17492f49a8e2a10e99b5ee", "filename": "crates/ra_syntax/src/parsing/reparsing.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -19,7 +19,7 @@ use crate::{\n     syntax_node::{GreenNode, GreenToken, NodeOrToken, SyntaxElement, SyntaxNode},\n     SyntaxError,\n     SyntaxKind::*,\n-    TextRange, TextUnit, T,\n+    TextRange, TextSize, T,\n };\n \n pub(crate) fn incremental_reparse(\n@@ -176,7 +176,7 @@ fn merge_errors(\n         if old_err_range.end() <= range_before_reparse.start() {\n             res.push(old_err);\n         } else if old_err_range.start() >= range_before_reparse.end() {\n-            let inserted_len = TextUnit::of_str(&edit.insert);\n+            let inserted_len = TextSize::of(&edit.insert);\n             res.push(old_err.with_range((old_err_range + inserted_len) - edit.delete.len()));\n             // Note: extra parens are intentional to prevent uint underflow, HWAB (here was a bug)\n         }"}, {"sha": "7ddc2c2c39dd78f3b6ac609b4265dd2f1b2c8656", "filename": "crates/ra_syntax/src/parsing/text_token_source.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_token_source.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_token_source.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_token_source.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -3,7 +3,7 @@\n use ra_parser::Token as PToken;\n use ra_parser::TokenSource;\n \n-use crate::{parsing::lexer::Token, SyntaxKind::EOF, TextRange, TextUnit};\n+use crate::{parsing::lexer::Token, SyntaxKind::EOF, TextRange, TextSize};\n \n pub(crate) struct TextTokenSource<'t> {\n     text: &'t str,\n@@ -15,7 +15,7 @@ pub(crate) struct TextTokenSource<'t> {\n     /// 0      7  10\n     /// ```\n     /// (token, start_offset): `[(struct, 0), (Foo, 7), (;, 10)]`\n-    start_offsets: Vec<TextUnit>,\n+    start_offsets: Vec<TextSize>,\n     /// non-whitespace/comment tokens\n     /// ```non-rust\n     /// struct Foo {}\n@@ -51,12 +51,12 @@ impl<'t> TokenSource for TextTokenSource<'t> {\n         if pos >= self.tokens.len() {\n             return false;\n         }\n-        let range = TextRange::offset_len(self.start_offsets[pos], self.tokens[pos].len);\n+        let range = TextRange::at(self.start_offsets[pos], self.tokens[pos].len);\n         self.text[range] == *kw\n     }\n }\n \n-fn mk_token(pos: usize, start_offsets: &[TextUnit], tokens: &[Token]) -> PToken {\n+fn mk_token(pos: usize, start_offsets: &[TextSize], tokens: &[Token]) -> PToken {\n     let kind = tokens.get(pos).map(|t| t.kind).unwrap_or(EOF);\n     let is_jointed_to_next = if pos + 1 < start_offsets.len() {\n         start_offsets[pos] + tokens[pos].len == start_offsets[pos + 1]"}, {"sha": "22aed1db16d6fd53b23e1738e52b87cc649d0265", "filename": "crates/ra_syntax/src/parsing/text_tree_sink.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -9,7 +9,7 @@ use crate::{\n     syntax_node::GreenNode,\n     SmolStr, SyntaxError,\n     SyntaxKind::{self, *},\n-    SyntaxTreeBuilder, TextRange, TextUnit,\n+    SyntaxTreeBuilder, TextRange, TextSize,\n };\n \n /// Bridges the parser with our specific syntax tree representation.\n@@ -18,7 +18,7 @@ use crate::{\n pub(crate) struct TextTreeSink<'a> {\n     text: &'a str,\n     tokens: &'a [Token],\n-    text_pos: TextUnit,\n+    text_pos: TextSize,\n     token_pos: usize,\n     state: State,\n     inner: SyntaxTreeBuilder,\n@@ -42,7 +42,7 @@ impl<'a> TreeSink for TextTreeSink<'a> {\n         let len = self.tokens[self.token_pos..self.token_pos + n_tokens]\n             .iter()\n             .map(|it| it.len)\n-            .sum::<TextUnit>();\n+            .sum::<TextSize>();\n         self.do_token(kind, len, n_tokens);\n     }\n \n@@ -62,12 +62,12 @@ impl<'a> TreeSink for TextTreeSink<'a> {\n             self.tokens[self.token_pos..].iter().take_while(|it| it.kind.is_trivia()).count();\n         let leading_trivias = &self.tokens[self.token_pos..self.token_pos + n_trivias];\n         let mut trivia_end =\n-            self.text_pos + leading_trivias.iter().map(|it| it.len).sum::<TextUnit>();\n+            self.text_pos + leading_trivias.iter().map(|it| it.len).sum::<TextSize>();\n \n         let n_attached_trivias = {\n             let leading_trivias = leading_trivias.iter().rev().map(|it| {\n                 let next_end = trivia_end - it.len;\n-                let range = TextRange::from_to(next_end, trivia_end);\n+                let range = TextRange::new(next_end, trivia_end);\n                 trivia_end = next_end;\n                 (it.kind, &self.text[range])\n             });\n@@ -132,8 +132,8 @@ impl<'a> TextTreeSink<'a> {\n         }\n     }\n \n-    fn do_token(&mut self, kind: SyntaxKind, len: TextUnit, n_tokens: usize) {\n-        let range = TextRange::offset_len(self.text_pos, len);\n+    fn do_token(&mut self, kind: SyntaxKind, len: TextSize, n_tokens: usize) {\n+        let range = TextRange::at(self.text_pos, len);\n         let text: SmolStr = self.text[range].into();\n         self.text_pos += len;\n         self.token_pos += n_tokens;"}, {"sha": "62f03e93d0b8cc61aefde4f1fa93d671fb739a87", "filename": "crates/ra_syntax/src/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fptr.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -24,7 +24,7 @@ impl SyntaxNodePtr {\n     pub fn to_node(&self, root: &SyntaxNode) -> SyntaxNode {\n         assert!(root.parent().is_none());\n         successors(Some(root.clone()), |node| {\n-            node.children().find(|it| self.range.is_subrange(&it.text_range()))\n+            node.children().find(|it| it.text_range().contains_range(self.range))\n         })\n         .find(|it| it.text_range() == self.range && it.kind() == self.kind)\n         .unwrap_or_else(|| panic!(\"can't resolve local ptr to SyntaxNode: {:?}\", self))"}, {"sha": "7c4511fece06091ddc60ba427a7c6c52ece63fb8", "filename": "crates/ra_syntax/src/syntax_error.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fsyntax_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fsyntax_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_error.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -2,7 +2,7 @@\n \n use std::fmt;\n \n-use crate::{TextRange, TextUnit};\n+use crate::{TextRange, TextSize};\n \n /// Represents the result of unsuccessful tokenization, parsing\n /// or tree validation.\n@@ -23,8 +23,8 @@ impl SyntaxError {\n     pub fn new(message: impl Into<String>, range: TextRange) -> Self {\n         Self(message.into(), range)\n     }\n-    pub fn new_at_offset(message: impl Into<String>, offset: TextUnit) -> Self {\n-        Self(message.into(), TextRange::offset_len(offset, 0.into()))\n+    pub fn new_at_offset(message: impl Into<String>, offset: TextSize) -> Self {\n+        Self(message.into(), TextRange::empty(offset))\n     }\n \n     pub fn range(&self) -> TextRange {"}, {"sha": "f9d379abf3c1eddab868a5912f08c065538734b9", "filename": "crates/ra_syntax/src/syntax_node.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_node.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -8,7 +8,7 @@\n \n use rowan::{GreenNodeBuilder, Language};\n \n-use crate::{Parse, SmolStr, SyntaxError, SyntaxKind, TextUnit};\n+use crate::{Parse, SmolStr, SyntaxError, SyntaxKind, TextSize};\n \n pub(crate) use rowan::{GreenNode, GreenToken};\n \n@@ -69,7 +69,7 @@ impl SyntaxTreeBuilder {\n         self.inner.finish_node()\n     }\n \n-    pub fn error(&mut self, error: ra_parser::ParseError, text_pos: TextUnit) {\n+    pub fn error(&mut self, error: ra_parser::ParseError, text_pos: TextSize) {\n         self.errors.push(SyntaxError::new_at_offset(error.0, text_pos))\n     }\n }"}, {"sha": "aee57db62a32ecf1a9cfbc916668f71bb92f72a5", "filename": "crates/ra_syntax/src/tests.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Ftests.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -5,7 +5,7 @@ use std::{\n \n use test_utils::{collect_rust_files, dir_tests, project_dir, read_text};\n \n-use crate::{fuzz, tokenize, SourceFile, SyntaxError, TextRange, TextUnit, Token};\n+use crate::{fuzz, tokenize, SourceFile, SyntaxError, TextRange, TextSize, Token};\n \n #[test]\n fn lexer_tests() {\n@@ -121,12 +121,12 @@ fn assert_errors_are_absent(errors: &[SyntaxError], path: &Path) {\n \n fn dump_tokens_and_errors(tokens: &[Token], errors: &[SyntaxError], text: &str) -> String {\n     let mut acc = String::new();\n-    let mut offset = TextUnit::from_usize(0);\n+    let mut offset: TextSize = 0.into();\n     for token in tokens {\n         let token_len = token.len;\n-        let token_text = &text[TextRange::offset_len(offset, token.len)];\n+        let token_text = &text[TextRange::at(offset, token.len)];\n         offset += token.len;\n-        writeln!(acc, \"{:?} {} {:?}\", token.kind, token_len, token_text).unwrap();\n+        writeln!(acc, \"{:?} {:?} {:?}\", token.kind, token_len, token_text).unwrap();\n     }\n     for err in errors {\n         writeln!(acc, \"> error{:?} token({:?}) msg({})\", err.range(), &text[err.range()], err)"}, {"sha": "5e93895ec5de8fa9ba356704a76fbdf12228480a", "filename": "crates/ra_syntax/src/validation.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fvalidation.rs?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -2,12 +2,14 @@\n \n mod block;\n \n+use std::convert::TryFrom;\n+\n use rustc_lexer::unescape;\n \n use crate::{\n     ast, match_ast, AstNode, SyntaxError,\n     SyntaxKind::{BYTE, BYTE_STRING, CHAR, CONST_DEF, FN_DEF, INT_NUMBER, STRING, TYPE_ALIAS_DEF},\n-    SyntaxNode, SyntaxToken, TextUnit, T,\n+    SyntaxNode, SyntaxToken, TextSize, T,\n };\n \n fn rustc_unescape_error_to_string(err: unescape::EscapeError) -> &'static str {\n@@ -112,7 +114,7 @@ fn validate_literal(literal: ast::Literal, acc: &mut Vec<SyntaxError>) {\n \n     // FIXME: lift this lambda refactor to `fn` (https://github.com/rust-analyzer/rust-analyzer/pull/2834#discussion_r366199205)\n     let mut push_err = |prefix_len, (off, err): (usize, unescape::EscapeError)| {\n-        let off = token.text_range().start() + TextUnit::from_usize(off + prefix_len);\n+        let off = token.text_range().start() + TextSize::try_from(off + prefix_len).unwrap();\n         acc.push(SyntaxError::new_at_offset(rustc_unescape_error_to_string(err), off));\n     };\n "}, {"sha": "4d5ad74df571e42ec90ec855e3d8f72bd35a0c4f", "filename": "crates/ra_syntax/test_data/lexer/err/0001_unclosed_char_at_eof.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0001_unclosed_char_at_eof.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n CHAR 1 \"\\'\"\n-> error[0; 1) token(\"\\'\") msg(Missing trailing `'` symbol to terminate the character literal)\n+> error0..1 token(\"\\'\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "eafdb3c7c912030214a873fff32aaccb3de7d30b", "filename": "crates/ra_syntax/test_data/lexer/err/0002_unclosed_char_with_ferris.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0002_unclosed_char_with_ferris.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n CHAR 5 \"\\'\ud83e\udd80\"\n-> error[0; 5) token(\"\\'\ud83e\udd80\") msg(Missing trailing `'` symbol to terminate the character literal)\n+> error0..5 token(\"\\'\ud83e\udd80\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "cc2b4866a17aabbab14e1c1e9d41b9cc464a3fad", "filename": "crates/ra_syntax/test_data/lexer/err/0003_unclosed_char_with_ascii_escape.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0003_unclosed_char_with_ascii_escape.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n CHAR 5 \"\\'\\\\x7f\"\n-> error[0; 5) token(\"\\'\\\\x7f\") msg(Missing trailing `'` symbol to terminate the character literal)\n+> error0..5 token(\"\\'\\\\x7f\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "a6d422cb3d493ca4b9515460c29f156cfab4fba2", "filename": "crates/ra_syntax/test_data/lexer/err/0004_unclosed_char_with_unicode_escape.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0004_unclosed_char_with_unicode_escape.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n CHAR 9 \"\\'\\\\u{20AA}\"\n-> error[0; 9) token(\"\\'\\\\u{20AA}\") msg(Missing trailing `'` symbol to terminate the character literal)\n+> error0..9 token(\"\\'\\\\u{20AA}\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "47e7baa708a0fb5b9ef5b06f85971e1e19b013a7", "filename": "crates/ra_syntax/test_data/lexer/err/0005_unclosed_char_with_space.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0005_unclosed_char_with_space.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n CHAR 2 \"\\' \"\n-> error[0; 2) token(\"\\' \") msg(Missing trailing `'` symbol to terminate the character literal)\n+> error0..2 token(\"\\' \") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "511029d80789aa5c8db340c0b405c3f47881fbf4", "filename": "crates/ra_syntax/test_data/lexer/err/0006_unclosed_char_with_slash.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0006_unclosed_char_with_slash.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n CHAR 2 \"\\'\\\\\"\n-> error[0; 2) token(\"\\'\\\\\") msg(Missing trailing `'` symbol to terminate the character literal)\n+> error0..2 token(\"\\'\\\\\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "d2ba5742c67368b475e43a24e76bb7bcfef80a35", "filename": "crates/ra_syntax/test_data/lexer/err/0007_unclosed_char_with_slash_n.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0007_unclosed_char_with_slash_n.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n CHAR 3 \"\\'\\\\n\"\n-> error[0; 3) token(\"\\'\\\\n\") msg(Missing trailing `'` symbol to terminate the character literal)\n+> error0..3 token(\"\\'\\\\n\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "ae9a7f0e2a7780d27ab8899e6863934ebcdbcda6", "filename": "crates/ra_syntax/test_data/lexer/err/0008_unclosed_char_with_slash_single_quote.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0008_unclosed_char_with_slash_single_quote.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n CHAR 3 \"\\'\\\\\\'\"\n-> error[0; 3) token(\"\\'\\\\\\'\") msg(Missing trailing `'` symbol to terminate the character literal)\n+> error0..3 token(\"\\'\\\\\\'\") msg(Missing trailing `'` symbol to terminate the character literal)"}, {"sha": "ff15045920f03f2a648aa6e440abf594a9661e36", "filename": "crates/ra_syntax/test_data/lexer/err/0009_unclosed_byte_at_eof.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0009_unclosed_byte_at_eof.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE 2 \"b\\'\"\n-> error[0; 2) token(\"b\\'\") msg(Missing trailing `'` symbol to terminate the byte literal)\n+> error0..2 token(\"b\\'\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "34f7bd6d4074fc8a2c53aa141f13525f6ad38e3e", "filename": "crates/ra_syntax/test_data/lexer/err/0010_unclosed_byte_with_ferris.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0010_unclosed_byte_with_ferris.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE 6 \"b\\'\ud83e\udd80\"\n-> error[0; 6) token(\"b\\'\ud83e\udd80\") msg(Missing trailing `'` symbol to terminate the byte literal)\n+> error0..6 token(\"b\\'\ud83e\udd80\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "c964d0f00a5e1771d6c85f94e3971c4ec0fd1a92", "filename": "crates/ra_syntax/test_data/lexer/err/0011_unclosed_byte_with_ascii_escape.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0011_unclosed_byte_with_ascii_escape.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE 6 \"b\\'\\\\x7f\"\n-> error[0; 6) token(\"b\\'\\\\x7f\") msg(Missing trailing `'` symbol to terminate the byte literal)\n+> error0..6 token(\"b\\'\\\\x7f\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "cc65fb86f97396781c433c867efdfbf96fdb2426", "filename": "crates/ra_syntax/test_data/lexer/err/0012_unclosed_byte_with_unicode_escape.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0012_unclosed_byte_with_unicode_escape.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE 10 \"b\\'\\\\u{20AA}\"\n-> error[0; 10) token(\"b\\'\\\\u{20AA}\") msg(Missing trailing `'` symbol to terminate the byte literal)\n+> error0..10 token(\"b\\'\\\\u{20AA}\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "800834a144f661fcc7317dcc1c967357fe91fe32", "filename": "crates/ra_syntax/test_data/lexer/err/0013_unclosed_byte_with_space.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0013_unclosed_byte_with_space.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE 3 \"b\\' \"\n-> error[0; 3) token(\"b\\' \") msg(Missing trailing `'` symbol to terminate the byte literal)\n+> error0..3 token(\"b\\' \") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "7b85ee64634063530a2f2310527c39d7200962bf", "filename": "crates/ra_syntax/test_data/lexer/err/0014_unclosed_byte_with_slash.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0014_unclosed_byte_with_slash.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE 3 \"b\\'\\\\\"\n-> error[0; 3) token(\"b\\'\\\\\") msg(Missing trailing `'` symbol to terminate the byte literal)\n+> error0..3 token(\"b\\'\\\\\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "4b9a63117b5ead11e0da686a09da804d265d674e", "filename": "crates/ra_syntax/test_data/lexer/err/0015_unclosed_byte_with_slash_n.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0015_unclosed_byte_with_slash_n.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE 4 \"b\\'\\\\n\"\n-> error[0; 4) token(\"b\\'\\\\n\") msg(Missing trailing `'` symbol to terminate the byte literal)\n+> error0..4 token(\"b\\'\\\\n\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "fe337f8d3255b99651846fb1f9ce6e80cac162d9", "filename": "crates/ra_syntax/test_data/lexer/err/0016_unclosed_byte_with_slash_single_quote.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0016_unclosed_byte_with_slash_single_quote.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE 4 \"b\\'\\\\\\'\"\n-> error[0; 4) token(\"b\\'\\\\\\'\") msg(Missing trailing `'` symbol to terminate the byte literal)\n+> error0..4 token(\"b\\'\\\\\\'\") msg(Missing trailing `'` symbol to terminate the byte literal)"}, {"sha": "d11a8d880eaaac70568e15ca8b660643759ab9f0", "filename": "crates/ra_syntax/test_data/lexer/err/0017_unclosed_string_at_eof.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0017_unclosed_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0017_unclosed_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0017_unclosed_string_at_eof.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n STRING 1 \"\\\"\"\n-> error[0; 1) token(\"\\\"\") msg(Missing trailing `\"` symbol to terminate the string literal)\n+> error0..1 token(\"\\\"\") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "167f942d12c843a3c85c8ad490d93572739e02ab", "filename": "crates/ra_syntax/test_data/lexer/err/0018_unclosed_string_with_ferris.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0018_unclosed_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0018_unclosed_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0018_unclosed_string_with_ferris.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n STRING 5 \"\\\"\ud83e\udd80\"\n-> error[0; 5) token(\"\\\"\ud83e\udd80\") msg(Missing trailing `\"` symbol to terminate the string literal)\n+> error0..5 token(\"\\\"\ud83e\udd80\") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "224c653d26dc3bcdb28b1a36d7a82e7157aa5e42", "filename": "crates/ra_syntax/test_data/lexer/err/0019_unclosed_string_with_ascii_escape.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0019_unclosed_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0019_unclosed_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0019_unclosed_string_with_ascii_escape.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n STRING 5 \"\\\"\\\\x7f\"\n-> error[0; 5) token(\"\\\"\\\\x7f\") msg(Missing trailing `\"` symbol to terminate the string literal)\n+> error0..5 token(\"\\\"\\\\x7f\") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "48975bbcbc47ef2102b381177a5f91e275d8e5ec", "filename": "crates/ra_syntax/test_data/lexer/err/0020_unclosed_string_with_unicode_escape.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0020_unclosed_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0020_unclosed_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0020_unclosed_string_with_unicode_escape.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n STRING 9 \"\\\"\\\\u{20AA}\"\n-> error[0; 9) token(\"\\\"\\\\u{20AA}\") msg(Missing trailing `\"` symbol to terminate the string literal)\n+> error0..9 token(\"\\\"\\\\u{20AA}\") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "a823cca7a48f1450e45aa3083c305f037832a5bc", "filename": "crates/ra_syntax/test_data/lexer/err/0021_unclosed_string_with_space.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0021_unclosed_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0021_unclosed_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0021_unclosed_string_with_space.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n STRING 2 \"\\\" \"\n-> error[0; 2) token(\"\\\" \") msg(Missing trailing `\"` symbol to terminate the string literal)\n+> error0..2 token(\"\\\" \") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "0914f001f5515a3eb471556d702fb7e634ed9e0a", "filename": "crates/ra_syntax/test_data/lexer/err/0022_unclosed_string_with_slash.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0022_unclosed_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0022_unclosed_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0022_unclosed_string_with_slash.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n STRING 2 \"\\\"\\\\\"\n-> error[0; 2) token(\"\\\"\\\\\") msg(Missing trailing `\"` symbol to terminate the string literal)\n+> error0..2 token(\"\\\"\\\\\") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "5674b55fdfa8b57213aedd137d9edf9a1d2b2dd5", "filename": "crates/ra_syntax/test_data/lexer/err/0023_unclosed_string_with_slash_n.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0023_unclosed_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0023_unclosed_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0023_unclosed_string_with_slash_n.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n STRING 3 \"\\\"\\\\n\"\n-> error[0; 3) token(\"\\\"\\\\n\") msg(Missing trailing `\"` symbol to terminate the string literal)\n+> error0..3 token(\"\\\"\\\\n\") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "4c9a774e4664c114bffa9fa79554b0f5e232a43d", "filename": "crates/ra_syntax/test_data/lexer/err/0024_unclosed_string_with_slash_double_quote.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0024_unclosed_string_with_slash_double_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0024_unclosed_string_with_slash_double_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0024_unclosed_string_with_slash_double_quote.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n STRING 3 \"\\\"\\\\\\\"\"\n-> error[0; 3) token(\"\\\"\\\\\\\"\") msg(Missing trailing `\"` symbol to terminate the string literal)\n+> error0..3 token(\"\\\"\\\\\\\"\") msg(Missing trailing `\"` symbol to terminate the string literal)"}, {"sha": "04e6b0aa4f14e16523ba01df267b328125fab98a", "filename": "crates/ra_syntax/test_data/lexer/err/0025_unclosed_byte_string_at_eof.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0025_unclosed_byte_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0025_unclosed_byte_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0025_unclosed_byte_string_at_eof.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE_STRING 2 \"b\\\"\"\n-> error[0; 2) token(\"b\\\"\") msg(Missing trailing `\"` symbol to terminate the byte string literal)\n+> error0..2 token(\"b\\\"\") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "0576a0609a8bdb006072b4ea1803df7ed026722a", "filename": "crates/ra_syntax/test_data/lexer/err/0026_unclosed_byte_string_with_ferris.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0026_unclosed_byte_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0026_unclosed_byte_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0026_unclosed_byte_string_with_ferris.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE_STRING 6 \"b\\\"\ud83e\udd80\"\n-> error[0; 6) token(\"b\\\"\ud83e\udd80\") msg(Missing trailing `\"` symbol to terminate the byte string literal)\n+> error0..6 token(\"b\\\"\ud83e\udd80\") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "541a013d853a0295cd123b408e8ca959cd48332f", "filename": "crates/ra_syntax/test_data/lexer/err/0027_unclosed_byte_string_with_ascii_escape.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0027_unclosed_byte_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0027_unclosed_byte_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0027_unclosed_byte_string_with_ascii_escape.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE_STRING 6 \"b\\\"\\\\x7f\"\n-> error[0; 6) token(\"b\\\"\\\\x7f\") msg(Missing trailing `\"` symbol to terminate the byte string literal)\n+> error0..6 token(\"b\\\"\\\\x7f\") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "71b0fb2118ccfaf7d9a31c5f4b9b57acdba64044", "filename": "crates/ra_syntax/test_data/lexer/err/0028_unclosed_byte_string_with_unicode_escape.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0028_unclosed_byte_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0028_unclosed_byte_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0028_unclosed_byte_string_with_unicode_escape.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE_STRING 10 \"b\\\"\\\\u{20AA}\"\n-> error[0; 10) token(\"b\\\"\\\\u{20AA}\") msg(Missing trailing `\"` symbol to terminate the byte string literal)\n+> error0..10 token(\"b\\\"\\\\u{20AA}\") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "bd5058bc118b7e136d2e96afcfc393b0cb03f031", "filename": "crates/ra_syntax/test_data/lexer/err/0029_unclosed_byte_string_with_space.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0029_unclosed_byte_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0029_unclosed_byte_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0029_unclosed_byte_string_with_space.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE_STRING 3 \"b\\\" \"\n-> error[0; 3) token(\"b\\\" \") msg(Missing trailing `\"` symbol to terminate the byte string literal)\n+> error0..3 token(\"b\\\" \") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "7f94f10ba150819065f67cdcc608131733b47d08", "filename": "crates/ra_syntax/test_data/lexer/err/0030_unclosed_byte_string_with_slash.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0030_unclosed_byte_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0030_unclosed_byte_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0030_unclosed_byte_string_with_slash.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE_STRING 3 \"b\\\"\\\\\"\n-> error[0; 3) token(\"b\\\"\\\\\") msg(Missing trailing `\"` symbol to terminate the byte string literal)\n+> error0..3 token(\"b\\\"\\\\\") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "9c3c089d72446ff5a684f9dffb2c628b9c11794a", "filename": "crates/ra_syntax/test_data/lexer/err/0031_unclosed_byte_string_with_slash_n.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0031_unclosed_byte_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0031_unclosed_byte_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0031_unclosed_byte_string_with_slash_n.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE_STRING 4 \"b\\\"\\\\n\"\n-> error[0; 4) token(\"b\\\"\\\\n\") msg(Missing trailing `\"` symbol to terminate the byte string literal)\n+> error0..4 token(\"b\\\"\\\\n\") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "884b12c8ee060898e0bb847e66c540ed60b3d4bd", "filename": "crates/ra_syntax/test_data/lexer/err/0032_unclosed_byte_string_with_slash_double_quote.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0032_unclosed_byte_string_with_slash_double_quote.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0032_unclosed_byte_string_with_slash_double_quote.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0032_unclosed_byte_string_with_slash_double_quote.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n BYTE_STRING 4 \"b\\\"\\\\\\\"\"\n-> error[0; 4) token(\"b\\\"\\\\\\\"\") msg(Missing trailing `\"` symbol to terminate the byte string literal)\n+> error0..4 token(\"b\\\"\\\\\\\"\") msg(Missing trailing `\"` symbol to terminate the byte string literal)"}, {"sha": "6fd59ccc0279ca73f5c2ee7b80485e634eb6c1b0", "filename": "crates/ra_syntax/test_data/lexer/err/0033_unclosed_raw_string_at_eof.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0033_unclosed_raw_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0033_unclosed_raw_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0033_unclosed_raw_string_at_eof.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_STRING 4 \"r##\\\"\"\n-> error[0; 4) token(\"r##\\\"\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)\n+> error0..4 token(\"r##\\\"\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)"}, {"sha": "8d9ca0e8f12ca35e794bb6cd9594689fd7e17829", "filename": "crates/ra_syntax/test_data/lexer/err/0034_unclosed_raw_string_with_ferris.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0034_unclosed_raw_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0034_unclosed_raw_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0034_unclosed_raw_string_with_ferris.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_STRING 8 \"r##\\\"\ud83e\udd80\"\n-> error[0; 8) token(\"r##\\\"\ud83e\udd80\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)\n+> error0..8 token(\"r##\\\"\ud83e\udd80\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)"}, {"sha": "a906380c718a0dbfbe10d0a1a2010a205ce19699", "filename": "crates/ra_syntax/test_data/lexer/err/0035_unclosed_raw_string_with_ascii_escape.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0035_unclosed_raw_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0035_unclosed_raw_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0035_unclosed_raw_string_with_ascii_escape.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_STRING 8 \"r##\\\"\\\\x7f\"\n-> error[0; 8) token(\"r##\\\"\\\\x7f\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)\n+> error0..8 token(\"r##\\\"\\\\x7f\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)"}, {"sha": "5667c614995147e7175e0f23e974644acebf6d89", "filename": "crates/ra_syntax/test_data/lexer/err/0036_unclosed_raw_string_with_unicode_escape.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0036_unclosed_raw_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0036_unclosed_raw_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0036_unclosed_raw_string_with_unicode_escape.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_STRING 12 \"r##\\\"\\\\u{20AA}\"\n-> error[0; 12) token(\"r##\\\"\\\\u{20AA}\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)\n+> error0..12 token(\"r##\\\"\\\\u{20AA}\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)"}, {"sha": "141c8268e8040d20bbb18c3ba888c5a621cc70a1", "filename": "crates/ra_syntax/test_data/lexer/err/0037_unclosed_raw_string_with_space.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0037_unclosed_raw_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0037_unclosed_raw_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0037_unclosed_raw_string_with_space.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_STRING 5 \"r##\\\" \"\n-> error[0; 5) token(\"r##\\\" \") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)\n+> error0..5 token(\"r##\\\" \") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)"}, {"sha": "f61d4cc915e52838d5d0aec060d35b9f1df7035a", "filename": "crates/ra_syntax/test_data/lexer/err/0038_unclosed_raw_string_with_slash.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0038_unclosed_raw_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0038_unclosed_raw_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0038_unclosed_raw_string_with_slash.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_STRING 5 \"r##\\\"\\\\\"\n-> error[0; 5) token(\"r##\\\"\\\\\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)\n+> error0..5 token(\"r##\\\"\\\\\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)"}, {"sha": "12e2c0fc038a8d7e96cf1cfd7455bd32eed414d2", "filename": "crates/ra_syntax/test_data/lexer/err/0039_unclosed_raw_string_with_slash_n.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0039_unclosed_raw_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0039_unclosed_raw_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0039_unclosed_raw_string_with_slash_n.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_STRING 6 \"r##\\\"\\\\n\"\n-> error[0; 6) token(\"r##\\\"\\\\n\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)\n+> error0..6 token(\"r##\\\"\\\\n\") msg(Missing trailing `\"` with `#` symbols to terminate the raw string literal)"}, {"sha": "fe12cb5fc6da14cda53c264e28b48436c3b975a0", "filename": "crates/ra_syntax/test_data/lexer/err/0040_unclosed_raw_byte_string_at_eof.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0040_unclosed_raw_byte_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0040_unclosed_raw_byte_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0040_unclosed_raw_byte_string_at_eof.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_BYTE_STRING 5 \"br##\\\"\"\n-> error[0; 5) token(\"br##\\\"\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)\n+> error0..5 token(\"br##\\\"\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)"}, {"sha": "5be2a7861b4a3a341a3585fe04bf9928475b6da1", "filename": "crates/ra_syntax/test_data/lexer/err/0041_unclosed_raw_byte_string_with_ferris.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0041_unclosed_raw_byte_string_with_ferris.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0041_unclosed_raw_byte_string_with_ferris.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0041_unclosed_raw_byte_string_with_ferris.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_BYTE_STRING 9 \"br##\\\"\ud83e\udd80\"\n-> error[0; 9) token(\"br##\\\"\ud83e\udd80\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)\n+> error0..9 token(\"br##\\\"\ud83e\udd80\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)"}, {"sha": "6cbe08d07ed94aa9807a0e90733407517a6934b2", "filename": "crates/ra_syntax/test_data/lexer/err/0042_unclosed_raw_byte_string_with_ascii_escape.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0042_unclosed_raw_byte_string_with_ascii_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0042_unclosed_raw_byte_string_with_ascii_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0042_unclosed_raw_byte_string_with_ascii_escape.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_BYTE_STRING 9 \"br##\\\"\\\\x7f\"\n-> error[0; 9) token(\"br##\\\"\\\\x7f\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)\n+> error0..9 token(\"br##\\\"\\\\x7f\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)"}, {"sha": "f56a4f98480d2db7f66210152fcc0bc7157d46b3", "filename": "crates/ra_syntax/test_data/lexer/err/0043_unclosed_raw_byte_string_with_unicode_escape.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0043_unclosed_raw_byte_string_with_unicode_escape.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0043_unclosed_raw_byte_string_with_unicode_escape.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0043_unclosed_raw_byte_string_with_unicode_escape.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_BYTE_STRING 13 \"br##\\\"\\\\u{20AA}\"\n-> error[0; 13) token(\"br##\\\"\\\\u{20AA}\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)\n+> error0..13 token(\"br##\\\"\\\\u{20AA}\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)"}, {"sha": "3d32ce34ea56315edfbbd3ce1992ebc599bb2c45", "filename": "crates/ra_syntax/test_data/lexer/err/0044_unclosed_raw_byte_string_with_space.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0044_unclosed_raw_byte_string_with_space.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0044_unclosed_raw_byte_string_with_space.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0044_unclosed_raw_byte_string_with_space.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_BYTE_STRING 6 \"br##\\\" \"\n-> error[0; 6) token(\"br##\\\" \") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)\n+> error0..6 token(\"br##\\\" \") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)"}, {"sha": "320fea17700e3ed769858798c2693d3ffb584855", "filename": "crates/ra_syntax/test_data/lexer/err/0045_unclosed_raw_byte_string_with_slash.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0045_unclosed_raw_byte_string_with_slash.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0045_unclosed_raw_byte_string_with_slash.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0045_unclosed_raw_byte_string_with_slash.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_BYTE_STRING 6 \"br##\\\"\\\\\"\n-> error[0; 6) token(\"br##\\\"\\\\\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)\n+> error0..6 token(\"br##\\\"\\\\\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)"}, {"sha": "b3a56380cbd03a1d2f98ff5223672720f03efb66", "filename": "crates/ra_syntax/test_data/lexer/err/0046_unclosed_raw_byte_string_with_slash_n.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0046_unclosed_raw_byte_string_with_slash_n.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0046_unclosed_raw_byte_string_with_slash_n.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0046_unclosed_raw_byte_string_with_slash_n.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_BYTE_STRING 7 \"br##\\\"\\\\n\"\n-> error[0; 7) token(\"br##\\\"\\\\n\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)\n+> error0..7 token(\"br##\\\"\\\\n\") msg(Missing trailing `\"` with `#` symbols to terminate the raw byte string literal)"}, {"sha": "5af1e2d97ffdc9e37922e5d3b96d9b5e8bd26275", "filename": "crates/ra_syntax/test_data/lexer/err/0047_unstarted_raw_string_at_eof.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0047_unstarted_raw_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0047_unstarted_raw_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0047_unstarted_raw_string_at_eof.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_STRING 3 \"r##\"\n-> error[0; 3) token(\"r##\") msg(Missing `\"` symbol after `#` symbols to begin the raw string literal)\n+> error0..3 token(\"r##\") msg(Missing `\"` symbol after `#` symbols to begin the raw string literal)"}, {"sha": "aec7afd92785a8706d6c394e461b51a9b295dac4", "filename": "crates/ra_syntax/test_data/lexer/err/0048_unstarted_raw_byte_string_at_eof.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0048_unstarted_raw_byte_string_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0048_unstarted_raw_byte_string_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0048_unstarted_raw_byte_string_at_eof.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n RAW_BYTE_STRING 4 \"br##\"\n-> error[0; 4) token(\"br##\") msg(Missing `\"` symbol after `#` symbols to begin the raw byte string literal)\n+> error0..4 token(\"br##\") msg(Missing `\"` symbol after `#` symbols to begin the raw byte string literal)"}, {"sha": "e22fe5374f09075d1881cf1ffdfc11b030005f00", "filename": "crates/ra_syntax/test_data/lexer/err/0049_unstarted_raw_string_with_ascii.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0049_unstarted_raw_string_with_ascii.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0049_unstarted_raw_string_with_ascii.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0049_unstarted_raw_string_with_ascii.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -7,4 +7,4 @@ IDENT 1 \"a\"\n WHITESPACE 1 \" \"\n IDENT 5 \"quote\"\n BANG 1 \"!\"\n-> error[0; 4) token(\"r## \") msg(Missing `\"` symbol after `#` symbols to begin the raw string literal)\n+> error0..4 token(\"r## \") msg(Missing `\"` symbol after `#` symbols to begin the raw string literal)"}, {"sha": "d74ea4c2796b12ae1b68fe391c288deda159cf4c", "filename": "crates/ra_syntax/test_data/lexer/err/0050_unstarted_raw_byte_string_with_ascii.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0050_unstarted_raw_byte_string_with_ascii.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0050_unstarted_raw_byte_string_with_ascii.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0050_unstarted_raw_byte_string_with_ascii.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -7,4 +7,4 @@ IDENT 1 \"a\"\n WHITESPACE 1 \" \"\n IDENT 5 \"quote\"\n BANG 1 \"!\"\n-> error[0; 5) token(\"br## \") msg(Missing `\"` symbol after `#` symbols to begin the raw byte string literal)\n+> error0..5 token(\"br## \") msg(Missing `\"` symbol after `#` symbols to begin the raw byte string literal)"}, {"sha": "2a256e9dffd9091bcca3940edb5f7fbb2d745a8f", "filename": "crates/ra_syntax/test_data/lexer/err/0051_unclosed_block_comment_at_eof.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0051_unclosed_block_comment_at_eof.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0051_unclosed_block_comment_at_eof.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0051_unclosed_block_comment_at_eof.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n COMMENT 2 \"/*\"\n-> error[0; 2) token(\"/*\") msg(Missing trailing `*/` symbols to terminate the block comment)\n+> error0..2 token(\"/*\") msg(Missing trailing `*/` symbols to terminate the block comment)"}, {"sha": "8e8490302a5c39711f04fe1bdd24163caa896a5f", "filename": "crates/ra_syntax/test_data/lexer/err/0052_unclosed_block_comment_with_content.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0052_unclosed_block_comment_with_content.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0052_unclosed_block_comment_with_content.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0052_unclosed_block_comment_with_content.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n COMMENT 11 \"/* comment\\n\"\n-> error[0; 11) token(\"/* comment\\n\") msg(Missing trailing `*/` symbols to terminate the block comment)\n+> error0..11 token(\"/* comment\\n\") msg(Missing trailing `*/` symbols to terminate the block comment)"}, {"sha": "b7d28fc05d58171b4ea9f6f1dc5eb58931bc58f0", "filename": "crates/ra_syntax/test_data/lexer/err/0053_unclosed_nested_block_comment_entirely.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0053_unclosed_nested_block_comment_entirely.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0053_unclosed_nested_block_comment_entirely.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0053_unclosed_nested_block_comment_entirely.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n COMMENT 9 \"/* /* /*\\n\"\n-> error[0; 9) token(\"/* /* /*\\n\") msg(Missing trailing `*/` symbols to terminate the block comment)\n+> error0..9 token(\"/* /* /*\\n\") msg(Missing trailing `*/` symbols to terminate the block comment)"}, {"sha": "4742d2c12ca700350849351f6025f4572ef1dddf", "filename": "crates/ra_syntax/test_data/lexer/err/0054_unclosed_nested_block_comment_partially.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0054_unclosed_nested_block_comment_partially.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0054_unclosed_nested_block_comment_partially.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0054_unclosed_nested_block_comment_partially.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,2 +1,2 @@\n COMMENT 25 \"/** /*! /* comment */ */\\n\"\n-> error[0; 25) token(\"/** /*! /* comment */ */\\n\") msg(Missing trailing `*/` symbols to terminate the block comment)\n+> error0..25 token(\"/** /*! /* comment */ */\\n\") msg(Missing trailing `*/` symbols to terminate the block comment)"}, {"sha": "bcd094b6ef7d162abed7a1d147170bfb24b4c1c5", "filename": "crates/ra_syntax/test_data/lexer/err/0055_empty_int.txt", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0055_empty_int.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0055_empty_int.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0055_empty_int.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -24,16 +24,16 @@ INT_NUMBER 4 \"0x_g\"\n WHITESPACE 1 \"\\n\"\n INT_NUMBER 4 \"0x_G\"\n WHITESPACE 1 \"\\n\"\n-> error[0; 2) token(\"0b\") msg(Missing digits after the integer base prefix)\n-> error[3; 5) token(\"0o\") msg(Missing digits after the integer base prefix)\n-> error[6; 8) token(\"0x\") msg(Missing digits after the integer base prefix)\n-> error[10; 13) token(\"0b_\") msg(Missing digits after the integer base prefix)\n-> error[14; 17) token(\"0o_\") msg(Missing digits after the integer base prefix)\n-> error[18; 21) token(\"0x_\") msg(Missing digits after the integer base prefix)\n-> error[23; 32) token(\"0bnoDigit\") msg(Missing digits after the integer base prefix)\n-> error[33; 42) token(\"0onoDigit\") msg(Missing digits after the integer base prefix)\n-> error[43; 52) token(\"0xnoDigit\") msg(Missing digits after the integer base prefix)\n-> error[54; 57) token(\"0xG\") msg(Missing digits after the integer base prefix)\n-> error[58; 61) token(\"0xg\") msg(Missing digits after the integer base prefix)\n-> error[63; 67) token(\"0x_g\") msg(Missing digits after the integer base prefix)\n-> error[68; 72) token(\"0x_G\") msg(Missing digits after the integer base prefix)\n+> error0..2 token(\"0b\") msg(Missing digits after the integer base prefix)\n+> error3..5 token(\"0o\") msg(Missing digits after the integer base prefix)\n+> error6..8 token(\"0x\") msg(Missing digits after the integer base prefix)\n+> error10..13 token(\"0b_\") msg(Missing digits after the integer base prefix)\n+> error14..17 token(\"0o_\") msg(Missing digits after the integer base prefix)\n+> error18..21 token(\"0x_\") msg(Missing digits after the integer base prefix)\n+> error23..32 token(\"0bnoDigit\") msg(Missing digits after the integer base prefix)\n+> error33..42 token(\"0onoDigit\") msg(Missing digits after the integer base prefix)\n+> error43..52 token(\"0xnoDigit\") msg(Missing digits after the integer base prefix)\n+> error54..57 token(\"0xG\") msg(Missing digits after the integer base prefix)\n+> error58..61 token(\"0xg\") msg(Missing digits after the integer base prefix)\n+> error63..67 token(\"0x_g\") msg(Missing digits after the integer base prefix)\n+> error68..72 token(\"0x_G\") msg(Missing digits after the integer base prefix)"}, {"sha": "6a645a6a44cb0a9b5aede9dd135cbb6d1c94d8d5", "filename": "crates/ra_syntax/test_data/lexer/err/0056_empty_exponent.txt", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0056_empty_exponent.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0056_empty_exponent.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0056_empty_exponent.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -46,17 +46,17 @@ FLOAT_NUMBER 9 \"42.2E+f32\"\n WHITESPACE 1 \"\\n\"\n FLOAT_NUMBER 9 \"42.2E-f32\"\n WHITESPACE 1 \"\\n\"\n-> error[0; 2) token(\"0e\") msg(Missing digits after the exponent symbol)\n-> error[3; 5) token(\"0E\") msg(Missing digits after the exponent symbol)\n-> error[7; 11) token(\"42e+\") msg(Missing digits after the exponent symbol)\n-> error[12; 16) token(\"42e-\") msg(Missing digits after the exponent symbol)\n-> error[17; 21) token(\"42E+\") msg(Missing digits after the exponent symbol)\n-> error[22; 26) token(\"42E-\") msg(Missing digits after the exponent symbol)\n-> error[53; 59) token(\"42.2e+\") msg(Missing digits after the exponent symbol)\n-> error[60; 66) token(\"42.2e-\") msg(Missing digits after the exponent symbol)\n-> error[67; 73) token(\"42.2E+\") msg(Missing digits after the exponent symbol)\n-> error[74; 80) token(\"42.2E-\") msg(Missing digits after the exponent symbol)\n-> error[82; 91) token(\"42.2e+f32\") msg(Missing digits after the exponent symbol)\n-> error[92; 101) token(\"42.2e-f32\") msg(Missing digits after the exponent symbol)\n-> error[102; 111) token(\"42.2E+f32\") msg(Missing digits after the exponent symbol)\n-> error[112; 121) token(\"42.2E-f32\") msg(Missing digits after the exponent symbol)\n+> error0..2 token(\"0e\") msg(Missing digits after the exponent symbol)\n+> error3..5 token(\"0E\") msg(Missing digits after the exponent symbol)\n+> error7..11 token(\"42e+\") msg(Missing digits after the exponent symbol)\n+> error12..16 token(\"42e-\") msg(Missing digits after the exponent symbol)\n+> error17..21 token(\"42E+\") msg(Missing digits after the exponent symbol)\n+> error22..26 token(\"42E-\") msg(Missing digits after the exponent symbol)\n+> error53..59 token(\"42.2e+\") msg(Missing digits after the exponent symbol)\n+> error60..66 token(\"42.2e-\") msg(Missing digits after the exponent symbol)\n+> error67..73 token(\"42.2E+\") msg(Missing digits after the exponent symbol)\n+> error74..80 token(\"42.2E-\") msg(Missing digits after the exponent symbol)\n+> error82..91 token(\"42.2e+f32\") msg(Missing digits after the exponent symbol)\n+> error92..101 token(\"42.2e-f32\") msg(Missing digits after the exponent symbol)\n+> error102..111 token(\"42.2E+f32\") msg(Missing digits after the exponent symbol)\n+> error112..121 token(\"42.2E-f32\") msg(Missing digits after the exponent symbol)"}, {"sha": "e138bcebcdc5609fb085fa157e07ff9f0f347b2c", "filename": "crates/ra_syntax/test_data/lexer/err/0057_lifetime_strarts_with_a_number.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0057_lifetime_strarts_with_a_number.txt", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0057_lifetime_strarts_with_a_number.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Flexer%2Ferr%2F0057_lifetime_strarts_with_a_number.txt?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -2,5 +2,5 @@ LIFETIME 2 \"\\'1\"\n WHITESPACE 1 \"\\n\"\n LIFETIME 10 \"\\'1lifetime\"\n WHITESPACE 1 \"\\n\"\n-> error[0; 2) token(\"\\'1\") msg(Lifetime name cannot start with a number)\n-> error[3; 13) token(\"\\'1lifetime\") msg(Lifetime name cannot start with a number)\n+> error0..2 token(\"\\'1\") msg(Lifetime name cannot start with a number)\n+> error3..13 token(\"\\'1lifetime\") msg(Lifetime name cannot start with a number)"}, {"sha": "81f0f575cecc27148eacd575f2c72bc650755d3b", "filename": "crates/ra_syntax/test_data/parser/err/0000_struct_field_missing_comma.rast", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0000_struct_field_missing_comma.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,34 +1,34 @@\n-SOURCE_FILE@[0; 34)\n-  STRUCT_DEF@[0; 34)\n-    STRUCT_KW@[0; 6) \"struct\"\n-    WHITESPACE@[6; 7) \" \"\n-    NAME@[7; 8)\n-      IDENT@[7; 8) \"S\"\n-    WHITESPACE@[8; 9) \" \"\n-    RECORD_FIELD_DEF_LIST@[9; 34)\n-      L_CURLY@[9; 10) \"{\"\n-      WHITESPACE@[10; 15) \"\\n    \"\n-      RECORD_FIELD_DEF@[15; 21)\n-        NAME@[15; 16)\n-          IDENT@[15; 16) \"a\"\n-        COLON@[16; 17) \":\"\n-        WHITESPACE@[17; 18) \" \"\n-        PATH_TYPE@[18; 21)\n-          PATH@[18; 21)\n-            PATH_SEGMENT@[18; 21)\n-              NAME_REF@[18; 21)\n-                IDENT@[18; 21) \"u32\"\n-      WHITESPACE@[21; 26) \"\\n    \"\n-      RECORD_FIELD_DEF@[26; 32)\n-        NAME@[26; 27)\n-          IDENT@[26; 27) \"b\"\n-        COLON@[27; 28) \":\"\n-        WHITESPACE@[28; 29) \" \"\n-        PATH_TYPE@[29; 32)\n-          PATH@[29; 32)\n-            PATH_SEGMENT@[29; 32)\n-              NAME_REF@[29; 32)\n-                IDENT@[29; 32) \"u32\"\n-      WHITESPACE@[32; 33) \"\\n\"\n-      R_CURLY@[33; 34) \"}\"\n-error [21; 21): expected COMMA\n+SOURCE_FILE@0..34\n+  STRUCT_DEF@0..34\n+    STRUCT_KW@0..6 \"struct\"\n+    WHITESPACE@6..7 \" \"\n+    NAME@7..8\n+      IDENT@7..8 \"S\"\n+    WHITESPACE@8..9 \" \"\n+    RECORD_FIELD_DEF_LIST@9..34\n+      L_CURLY@9..10 \"{\"\n+      WHITESPACE@10..15 \"\\n    \"\n+      RECORD_FIELD_DEF@15..21\n+        NAME@15..16\n+          IDENT@15..16 \"a\"\n+        COLON@16..17 \":\"\n+        WHITESPACE@17..18 \" \"\n+        PATH_TYPE@18..21\n+          PATH@18..21\n+            PATH_SEGMENT@18..21\n+              NAME_REF@18..21\n+                IDENT@18..21 \"u32\"\n+      WHITESPACE@21..26 \"\\n    \"\n+      RECORD_FIELD_DEF@26..32\n+        NAME@26..27\n+          IDENT@26..27 \"b\"\n+        COLON@27..28 \":\"\n+        WHITESPACE@28..29 \" \"\n+        PATH_TYPE@29..32\n+          PATH@29..32\n+            PATH_SEGMENT@29..32\n+              NAME_REF@29..32\n+                IDENT@29..32 \"u32\"\n+      WHITESPACE@32..33 \"\\n\"\n+      R_CURLY@33..34 \"}\"\n+error 21..21: expected COMMA"}, {"sha": "97d0fe910cefca60ab4971720c09487998be99e8", "filename": "crates/ra_syntax/test_data/parser/err/0001_item_recovery_in_file.rast", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0001_item_recovery_in_file.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,18 +1,18 @@\n-SOURCE_FILE@[0; 21)\n-  ERROR@[0; 2)\n-    IF_KW@[0; 2) \"if\"\n-  WHITESPACE@[2; 3) \" \"\n-  ERROR@[3; 8)\n-    MATCH_KW@[3; 8) \"match\"\n-  WHITESPACE@[8; 10) \"\\n\\n\"\n-  STRUCT_DEF@[10; 21)\n-    STRUCT_KW@[10; 16) \"struct\"\n-    WHITESPACE@[16; 17) \" \"\n-    NAME@[17; 18)\n-      IDENT@[17; 18) \"S\"\n-    WHITESPACE@[18; 19) \" \"\n-    RECORD_FIELD_DEF_LIST@[19; 21)\n-      L_CURLY@[19; 20) \"{\"\n-      R_CURLY@[20; 21) \"}\"\n-error [0; 0): expected an item\n-error [3; 3): expected an item\n+SOURCE_FILE@0..21\n+  ERROR@0..2\n+    IF_KW@0..2 \"if\"\n+  WHITESPACE@2..3 \" \"\n+  ERROR@3..8\n+    MATCH_KW@3..8 \"match\"\n+  WHITESPACE@8..10 \"\\n\\n\"\n+  STRUCT_DEF@10..21\n+    STRUCT_KW@10..16 \"struct\"\n+    WHITESPACE@16..17 \" \"\n+    NAME@17..18\n+      IDENT@17..18 \"S\"\n+    WHITESPACE@18..19 \" \"\n+    RECORD_FIELD_DEF_LIST@19..21\n+      L_CURLY@19..20 \"{\"\n+      R_CURLY@20..21 \"}\"\n+error 0..0: expected an item\n+error 3..3: expected an item"}, {"sha": "6717995e9bdf10692830bd819a9334e2596e32af", "filename": "crates/ra_syntax/test_data/parser/err/0002_duplicate_shebang.rast", "status": "modified", "additions": 39, "deletions": 39, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0002_duplicate_shebang.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,39 +1,39 @@\n-SOURCE_FILE@[0; 42)\n-  SHEBANG@[0; 20) \"#!/use/bin/env rusti\"\n-  WHITESPACE@[20; 21) \"\\n\"\n-  ATTR@[21; 23)\n-    POUND@[21; 22) \"#\"\n-    BANG@[22; 23) \"!\"\n-  ERROR@[23; 24)\n-    SLASH@[23; 24) \"/\"\n-  USE_ITEM@[24; 28)\n-    USE_KW@[24; 27) \"use\"\n-    ERROR@[27; 28)\n-      SLASH@[27; 28) \"/\"\n-  MACRO_CALL@[28; 31)\n-    PATH@[28; 31)\n-      PATH_SEGMENT@[28; 31)\n-        NAME_REF@[28; 31)\n-          IDENT@[28; 31) \"bin\"\n-  ERROR@[31; 32)\n-    SLASH@[31; 32) \"/\"\n-  MACRO_CALL@[32; 41)\n-    PATH@[32; 35)\n-      PATH_SEGMENT@[32; 35)\n-        NAME_REF@[32; 35)\n-          IDENT@[32; 35) \"env\"\n-    WHITESPACE@[35; 36) \" \"\n-    NAME@[36; 41)\n-      IDENT@[36; 41) \"rusti\"\n-  WHITESPACE@[41; 42) \"\\n\"\n-error [23; 23): expected `[`\n-error [23; 23): expected an item\n-error [27; 27): expected one of `*`, `::`, `{`, `self`, `super` or an identifier\n-error [28; 28): expected SEMICOLON\n-error [31; 31): expected BANG\n-error [31; 31): expected `{`, `[`, `(`\n-error [31; 31): expected SEMICOLON\n-error [31; 31): expected an item\n-error [35; 35): expected BANG\n-error [41; 41): expected `{`, `[`, `(`\n-error [41; 41): expected SEMICOLON\n+SOURCE_FILE@0..42\n+  SHEBANG@0..20 \"#!/use/bin/env rusti\"\n+  WHITESPACE@20..21 \"\\n\"\n+  ATTR@21..23\n+    POUND@21..22 \"#\"\n+    BANG@22..23 \"!\"\n+  ERROR@23..24\n+    SLASH@23..24 \"/\"\n+  USE_ITEM@24..28\n+    USE_KW@24..27 \"use\"\n+    ERROR@27..28\n+      SLASH@27..28 \"/\"\n+  MACRO_CALL@28..31\n+    PATH@28..31\n+      PATH_SEGMENT@28..31\n+        NAME_REF@28..31\n+          IDENT@28..31 \"bin\"\n+  ERROR@31..32\n+    SLASH@31..32 \"/\"\n+  MACRO_CALL@32..41\n+    PATH@32..35\n+      PATH_SEGMENT@32..35\n+        NAME_REF@32..35\n+          IDENT@32..35 \"env\"\n+    WHITESPACE@35..36 \" \"\n+    NAME@36..41\n+      IDENT@36..41 \"rusti\"\n+  WHITESPACE@41..42 \"\\n\"\n+error 23..23: expected `[`\n+error 23..23: expected an item\n+error 27..27: expected one of `*`, `::`, `{`, `self`, `super` or an identifier\n+error 28..28: expected SEMICOLON\n+error 31..31: expected BANG\n+error 31..31: expected `{`, `[`, `(`\n+error 31..31: expected SEMICOLON\n+error 31..31: expected an item\n+error 35..35: expected BANG\n+error 41..41: expected `{`, `[`, `(`\n+error 41..41: expected SEMICOLON"}, {"sha": "21c255698738bae2da4914ba196e0664d817bf88", "filename": "crates/ra_syntax/test_data/parser/err/0003_C++_semicolon.rast", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0003_C%2B%2B_semicolon.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,39 +1,39 @@\n-SOURCE_FILE@[0; 40)\n-  STRUCT_DEF@[0; 39)\n-    STRUCT_KW@[0; 6) \"struct\"\n-    WHITESPACE@[6; 7) \" \"\n-    NAME@[7; 8)\n-      IDENT@[7; 8) \"S\"\n-    WHITESPACE@[8; 9) \" \"\n-    RECORD_FIELD_DEF_LIST@[9; 39)\n-      L_CURLY@[9; 10) \"{\"\n-      WHITESPACE@[10; 15) \"\\n    \"\n-      RECORD_FIELD_DEF@[15; 21)\n-        NAME@[15; 16)\n-          IDENT@[15; 16) \"a\"\n-        COLON@[16; 17) \":\"\n-        WHITESPACE@[17; 18) \" \"\n-        PATH_TYPE@[18; 21)\n-          PATH@[18; 21)\n-            PATH_SEGMENT@[18; 21)\n-              NAME_REF@[18; 21)\n-                IDENT@[18; 21) \"i32\"\n-      COMMA@[21; 22) \",\"\n-      WHITESPACE@[22; 27) \"\\n    \"\n-      RECORD_FIELD_DEF@[27; 36)\n-        NAME@[27; 28)\n-          IDENT@[27; 28) \"b\"\n-        COLON@[28; 29) \":\"\n-        WHITESPACE@[29; 30) \" \"\n-        PATH_TYPE@[30; 36)\n-          PATH@[30; 36)\n-            PATH_SEGMENT@[30; 36)\n-              NAME_REF@[30; 36)\n-                IDENT@[30; 36) \"String\"\n-      COMMA@[36; 37) \",\"\n-      WHITESPACE@[37; 38) \"\\n\"\n-      R_CURLY@[38; 39) \"}\"\n-  ERROR@[39; 40)\n-    SEMICOLON@[39; 40) \";\"\n-error [39; 39): expected item, found `;`\n+SOURCE_FILE@0..40\n+  STRUCT_DEF@0..39\n+    STRUCT_KW@0..6 \"struct\"\n+    WHITESPACE@6..7 \" \"\n+    NAME@7..8\n+      IDENT@7..8 \"S\"\n+    WHITESPACE@8..9 \" \"\n+    RECORD_FIELD_DEF_LIST@9..39\n+      L_CURLY@9..10 \"{\"\n+      WHITESPACE@10..15 \"\\n    \"\n+      RECORD_FIELD_DEF@15..21\n+        NAME@15..16\n+          IDENT@15..16 \"a\"\n+        COLON@16..17 \":\"\n+        WHITESPACE@17..18 \" \"\n+        PATH_TYPE@18..21\n+          PATH@18..21\n+            PATH_SEGMENT@18..21\n+              NAME_REF@18..21\n+                IDENT@18..21 \"i32\"\n+      COMMA@21..22 \",\"\n+      WHITESPACE@22..27 \"\\n    \"\n+      RECORD_FIELD_DEF@27..36\n+        NAME@27..28\n+          IDENT@27..28 \"b\"\n+        COLON@28..29 \":\"\n+        WHITESPACE@29..30 \" \"\n+        PATH_TYPE@30..36\n+          PATH@30..36\n+            PATH_SEGMENT@30..36\n+              NAME_REF@30..36\n+                IDENT@30..36 \"String\"\n+      COMMA@36..37 \",\"\n+      WHITESPACE@37..38 \"\\n\"\n+      R_CURLY@38..39 \"}\"\n+  ERROR@39..40\n+    SEMICOLON@39..40 \";\"\n+error 39..39: expected item, found `;`\n consider removing this semicolon"}, {"sha": "8c6b89dc25f39c50c501c02d305e14e19ed02c91", "filename": "crates/ra_syntax/test_data/parser/err/0004_use_path_bad_segment.rast", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0004_use_path_bad_segment.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,16 +1,16 @@\n-SOURCE_FILE@[0; 12)\n-  USE_ITEM@[0; 12)\n-    USE_KW@[0; 3) \"use\"\n-    WHITESPACE@[3; 4) \" \"\n-    USE_TREE@[4; 11)\n-      PATH@[4; 11)\n-        PATH@[4; 7)\n-          PATH_SEGMENT@[4; 7)\n-            NAME_REF@[4; 7)\n-              IDENT@[4; 7) \"foo\"\n-        COLON2@[7; 9) \"::\"\n-        PATH_SEGMENT@[9; 11)\n-          ERROR@[9; 11)\n-            INT_NUMBER@[9; 11) \"92\"\n-    SEMICOLON@[11; 12) \";\"\n-error [9; 9): expected identifier\n+SOURCE_FILE@0..12\n+  USE_ITEM@0..12\n+    USE_KW@0..3 \"use\"\n+    WHITESPACE@3..4 \" \"\n+    USE_TREE@4..11\n+      PATH@4..11\n+        PATH@4..7\n+          PATH_SEGMENT@4..7\n+            NAME_REF@4..7\n+              IDENT@4..7 \"foo\"\n+        COLON2@7..9 \"::\"\n+        PATH_SEGMENT@9..11\n+          ERROR@9..11\n+            INT_NUMBER@9..11 \"92\"\n+    SEMICOLON@11..12 \";\"\n+error 9..9: expected identifier"}, {"sha": "95cc83caa392029c68a37233e7d405a9e22f4eb1", "filename": "crates/ra_syntax/test_data/parser/err/0005_attribute_recover.rast", "status": "modified", "additions": 60, "deletions": 60, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0005_attribute_recover.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,60 +1,60 @@\n-SOURCE_FILE@[0; 54)\n-  FN_DEF@[0; 31)\n-    ATTR@[0; 18)\n-      POUND@[0; 1) \"#\"\n-      L_BRACK@[1; 2) \"[\"\n-      PATH@[2; 5)\n-        PATH_SEGMENT@[2; 5)\n-          NAME_REF@[2; 5)\n-            IDENT@[2; 5) \"foo\"\n-      TOKEN_TREE@[5; 17)\n-        L_PAREN@[5; 6) \"(\"\n-        IDENT@[6; 9) \"foo\"\n-        COMMA@[9; 10) \",\"\n-        WHITESPACE@[10; 11) \" \"\n-        PLUS@[11; 12) \"+\"\n-        COMMA@[12; 13) \",\"\n-        WHITESPACE@[13; 14) \" \"\n-        INT_NUMBER@[14; 16) \"92\"\n-        R_PAREN@[16; 17) \")\"\n-      R_BRACK@[17; 18) \"]\"\n-    WHITESPACE@[18; 19) \"\\n\"\n-    FN_KW@[19; 21) \"fn\"\n-    WHITESPACE@[21; 22) \" \"\n-    NAME@[22; 25)\n-      IDENT@[22; 25) \"foo\"\n-    PARAM_LIST@[25; 27)\n-      L_PAREN@[25; 26) \"(\"\n-      R_PAREN@[26; 27) \")\"\n-    WHITESPACE@[27; 28) \" \"\n-    BLOCK_EXPR@[28; 31)\n-      BLOCK@[28; 31)\n-        L_CURLY@[28; 29) \"{\"\n-        WHITESPACE@[29; 30) \"\\n\"\n-        R_CURLY@[30; 31) \"}\"\n-  WHITESPACE@[31; 34) \"\\n\\n\\n\"\n-  ATTR@[34; 53)\n-    POUND@[34; 35) \"#\"\n-    L_BRACK@[35; 36) \"[\"\n-    PATH@[36; 39)\n-      PATH_SEGMENT@[36; 39)\n-        NAME_REF@[36; 39)\n-          IDENT@[36; 39) \"foo\"\n-    TOKEN_TREE@[39; 53)\n-      L_PAREN@[39; 40) \"(\"\n-      WHITESPACE@[40; 41) \"\\n\"\n-      FN_KW@[41; 43) \"fn\"\n-      WHITESPACE@[43; 44) \" \"\n-      IDENT@[44; 47) \"foo\"\n-      TOKEN_TREE@[47; 49)\n-        L_PAREN@[47; 48) \"(\"\n-        R_PAREN@[48; 49) \")\"\n-      WHITESPACE@[49; 50) \" \"\n-      TOKEN_TREE@[50; 53)\n-        L_CURLY@[50; 51) \"{\"\n-        WHITESPACE@[51; 52) \"\\n\"\n-        R_CURLY@[52; 53) \"}\"\n-  WHITESPACE@[53; 54) \"\\n\"\n-error [53; 53): expected R_PAREN\n-error [53; 53): expected `]`\n-error [53; 53): expected an item\n+SOURCE_FILE@0..54\n+  FN_DEF@0..31\n+    ATTR@0..18\n+      POUND@0..1 \"#\"\n+      L_BRACK@1..2 \"[\"\n+      PATH@2..5\n+        PATH_SEGMENT@2..5\n+          NAME_REF@2..5\n+            IDENT@2..5 \"foo\"\n+      TOKEN_TREE@5..17\n+        L_PAREN@5..6 \"(\"\n+        IDENT@6..9 \"foo\"\n+        COMMA@9..10 \",\"\n+        WHITESPACE@10..11 \" \"\n+        PLUS@11..12 \"+\"\n+        COMMA@12..13 \",\"\n+        WHITESPACE@13..14 \" \"\n+        INT_NUMBER@14..16 \"92\"\n+        R_PAREN@16..17 \")\"\n+      R_BRACK@17..18 \"]\"\n+    WHITESPACE@18..19 \"\\n\"\n+    FN_KW@19..21 \"fn\"\n+    WHITESPACE@21..22 \" \"\n+    NAME@22..25\n+      IDENT@22..25 \"foo\"\n+    PARAM_LIST@25..27\n+      L_PAREN@25..26 \"(\"\n+      R_PAREN@26..27 \")\"\n+    WHITESPACE@27..28 \" \"\n+    BLOCK_EXPR@28..31\n+      BLOCK@28..31\n+        L_CURLY@28..29 \"{\"\n+        WHITESPACE@29..30 \"\\n\"\n+        R_CURLY@30..31 \"}\"\n+  WHITESPACE@31..34 \"\\n\\n\\n\"\n+  ATTR@34..53\n+    POUND@34..35 \"#\"\n+    L_BRACK@35..36 \"[\"\n+    PATH@36..39\n+      PATH_SEGMENT@36..39\n+        NAME_REF@36..39\n+          IDENT@36..39 \"foo\"\n+    TOKEN_TREE@39..53\n+      L_PAREN@39..40 \"(\"\n+      WHITESPACE@40..41 \"\\n\"\n+      FN_KW@41..43 \"fn\"\n+      WHITESPACE@43..44 \" \"\n+      IDENT@44..47 \"foo\"\n+      TOKEN_TREE@47..49\n+        L_PAREN@47..48 \"(\"\n+        R_PAREN@48..49 \")\"\n+      WHITESPACE@49..50 \" \"\n+      TOKEN_TREE@50..53\n+        L_CURLY@50..51 \"{\"\n+        WHITESPACE@51..52 \"\\n\"\n+        R_CURLY@52..53 \"}\"\n+  WHITESPACE@53..54 \"\\n\"\n+error 53..53: expected R_PAREN\n+error 53..53: expected `]`\n+error 53..53: expected an item"}, {"sha": "2d63649980d1d184dd184aa9461af5f8f58c6a7d", "filename": "crates/ra_syntax/test_data/parser/err/0006_named_field_recovery.rast", "status": "modified", "additions": 74, "deletions": 74, "changes": 148, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0006_named_field_recovery.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,74 +1,74 @@\n-SOURCE_FILE@[0; 74)\n-  STRUCT_DEF@[0; 73)\n-    STRUCT_KW@[0; 6) \"struct\"\n-    WHITESPACE@[6; 7) \" \"\n-    NAME@[7; 8)\n-      IDENT@[7; 8) \"S\"\n-    WHITESPACE@[8; 9) \" \"\n-    RECORD_FIELD_DEF_LIST@[9; 73)\n-      L_CURLY@[9; 10) \"{\"\n-      WHITESPACE@[10; 15) \"\\n    \"\n-      RECORD_FIELD_DEF@[15; 21)\n-        NAME@[15; 16)\n-          IDENT@[15; 16) \"f\"\n-        COLON@[16; 17) \":\"\n-        WHITESPACE@[17; 18) \" \"\n-        PATH_TYPE@[18; 21)\n-          PATH@[18; 21)\n-            PATH_SEGMENT@[18; 21)\n-              NAME_REF@[18; 21)\n-                IDENT@[18; 21) \"u32\"\n-      COMMA@[21; 22) \",\"\n-      WHITESPACE@[22; 27) \"\\n    \"\n-      VISIBILITY@[27; 30)\n-        PUB_KW@[27; 30) \"pub\"\n-      WHITESPACE@[30; 31) \" \"\n-      ERROR@[31; 33)\n-        INT_NUMBER@[31; 33) \"92\"\n-      WHITESPACE@[33; 38) \"\\n    \"\n-      ERROR@[38; 39)\n-        PLUS@[38; 39) \"+\"\n-      WHITESPACE@[39; 40) \" \"\n-      ERROR@[40; 41)\n-        MINUS@[40; 41) \"-\"\n-      WHITESPACE@[41; 42) \" \"\n-      ERROR@[42; 43)\n-        STAR@[42; 43) \"*\"\n-      WHITESPACE@[43; 48) \"\\n    \"\n-      RECORD_FIELD_DEF@[48; 58)\n-        VISIBILITY@[48; 51)\n-          PUB_KW@[48; 51) \"pub\"\n-        WHITESPACE@[51; 52) \" \"\n-        NAME@[52; 53)\n-          IDENT@[52; 53) \"x\"\n-        COLON@[53; 54) \":\"\n-        WHITESPACE@[54; 55) \" \"\n-        PATH_TYPE@[55; 58)\n-          PATH@[55; 58)\n-            PATH_SEGMENT@[55; 58)\n-              NAME_REF@[55; 58)\n-                IDENT@[55; 58) \"u32\"\n-      COMMA@[58; 59) \",\"\n-      WHITESPACE@[59; 64) \"\\n    \"\n-      RECORD_FIELD_DEF@[64; 70)\n-        NAME@[64; 65)\n-          IDENT@[64; 65) \"z\"\n-        COLON@[65; 66) \":\"\n-        WHITESPACE@[66; 67) \" \"\n-        PATH_TYPE@[67; 70)\n-          PATH@[67; 70)\n-            PATH_SEGMENT@[67; 70)\n-              NAME_REF@[67; 70)\n-                IDENT@[67; 70) \"f64\"\n-      COMMA@[70; 71) \",\"\n-      WHITESPACE@[71; 72) \"\\n\"\n-      R_CURLY@[72; 73) \"}\"\n-  WHITESPACE@[73; 74) \"\\n\"\n-error [31; 31): expected field declaration\n-error [33; 33): expected COMMA\n-error [38; 38): expected field declaration\n-error [39; 39): expected COMMA\n-error [40; 40): expected field declaration\n-error [41; 41): expected COMMA\n-error [42; 42): expected field declaration\n-error [43; 43): expected COMMA\n+SOURCE_FILE@0..74\n+  STRUCT_DEF@0..73\n+    STRUCT_KW@0..6 \"struct\"\n+    WHITESPACE@6..7 \" \"\n+    NAME@7..8\n+      IDENT@7..8 \"S\"\n+    WHITESPACE@8..9 \" \"\n+    RECORD_FIELD_DEF_LIST@9..73\n+      L_CURLY@9..10 \"{\"\n+      WHITESPACE@10..15 \"\\n    \"\n+      RECORD_FIELD_DEF@15..21\n+        NAME@15..16\n+          IDENT@15..16 \"f\"\n+        COLON@16..17 \":\"\n+        WHITESPACE@17..18 \" \"\n+        PATH_TYPE@18..21\n+          PATH@18..21\n+            PATH_SEGMENT@18..21\n+              NAME_REF@18..21\n+                IDENT@18..21 \"u32\"\n+      COMMA@21..22 \",\"\n+      WHITESPACE@22..27 \"\\n    \"\n+      VISIBILITY@27..30\n+        PUB_KW@27..30 \"pub\"\n+      WHITESPACE@30..31 \" \"\n+      ERROR@31..33\n+        INT_NUMBER@31..33 \"92\"\n+      WHITESPACE@33..38 \"\\n    \"\n+      ERROR@38..39\n+        PLUS@38..39 \"+\"\n+      WHITESPACE@39..40 \" \"\n+      ERROR@40..41\n+        MINUS@40..41 \"-\"\n+      WHITESPACE@41..42 \" \"\n+      ERROR@42..43\n+        STAR@42..43 \"*\"\n+      WHITESPACE@43..48 \"\\n    \"\n+      RECORD_FIELD_DEF@48..58\n+        VISIBILITY@48..51\n+          PUB_KW@48..51 \"pub\"\n+        WHITESPACE@51..52 \" \"\n+        NAME@52..53\n+          IDENT@52..53 \"x\"\n+        COLON@53..54 \":\"\n+        WHITESPACE@54..55 \" \"\n+        PATH_TYPE@55..58\n+          PATH@55..58\n+            PATH_SEGMENT@55..58\n+              NAME_REF@55..58\n+                IDENT@55..58 \"u32\"\n+      COMMA@58..59 \",\"\n+      WHITESPACE@59..64 \"\\n    \"\n+      RECORD_FIELD_DEF@64..70\n+        NAME@64..65\n+          IDENT@64..65 \"z\"\n+        COLON@65..66 \":\"\n+        WHITESPACE@66..67 \" \"\n+        PATH_TYPE@67..70\n+          PATH@67..70\n+            PATH_SEGMENT@67..70\n+              NAME_REF@67..70\n+                IDENT@67..70 \"f64\"\n+      COMMA@70..71 \",\"\n+      WHITESPACE@71..72 \"\\n\"\n+      R_CURLY@72..73 \"}\"\n+  WHITESPACE@73..74 \"\\n\"\n+error 31..31: expected field declaration\n+error 33..33: expected COMMA\n+error 38..38: expected field declaration\n+error 39..39: expected COMMA\n+error 40..40: expected field declaration\n+error 41..41: expected COMMA\n+error 42..42: expected field declaration\n+error 43..43: expected COMMA"}, {"sha": "dc3e120918f1585850512e03373dd0f1d8737413", "filename": "crates/ra_syntax/test_data/parser/err/0007_stray_curly_in_file.rast", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0007_stray_curly_in_file.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,33 +1,33 @@\n-SOURCE_FILE@[0; 31)\n-  ERROR@[0; 1)\n-    R_CURLY@[0; 1) \"}\"\n-  WHITESPACE@[1; 3) \"\\n\\n\"\n-  STRUCT_DEF@[3; 12)\n-    STRUCT_KW@[3; 9) \"struct\"\n-    WHITESPACE@[9; 10) \" \"\n-    NAME@[10; 11)\n-      IDENT@[10; 11) \"S\"\n-    SEMICOLON@[11; 12) \";\"\n-  WHITESPACE@[12; 14) \"\\n\\n\"\n-  ERROR@[14; 15)\n-    R_CURLY@[14; 15) \"}\"\n-  WHITESPACE@[15; 17) \"\\n\\n\"\n-  FN_DEF@[17; 27)\n-    FN_KW@[17; 19) \"fn\"\n-    WHITESPACE@[19; 20) \" \"\n-    NAME@[20; 23)\n-      IDENT@[20; 23) \"foo\"\n-    PARAM_LIST@[23; 25)\n-      L_PAREN@[23; 24) \"(\"\n-      R_PAREN@[24; 25) \")\"\n-    BLOCK_EXPR@[25; 27)\n-      BLOCK@[25; 27)\n-        L_CURLY@[25; 26) \"{\"\n-        R_CURLY@[26; 27) \"}\"\n-  WHITESPACE@[27; 29) \"\\n\\n\"\n-  ERROR@[29; 30)\n-    R_CURLY@[29; 30) \"}\"\n-  WHITESPACE@[30; 31) \"\\n\"\n-error [0; 0): unmatched `}`\n-error [14; 14): unmatched `}`\n-error [29; 29): unmatched `}`\n+SOURCE_FILE@0..31\n+  ERROR@0..1\n+    R_CURLY@0..1 \"}\"\n+  WHITESPACE@1..3 \"\\n\\n\"\n+  STRUCT_DEF@3..12\n+    STRUCT_KW@3..9 \"struct\"\n+    WHITESPACE@9..10 \" \"\n+    NAME@10..11\n+      IDENT@10..11 \"S\"\n+    SEMICOLON@11..12 \";\"\n+  WHITESPACE@12..14 \"\\n\\n\"\n+  ERROR@14..15\n+    R_CURLY@14..15 \"}\"\n+  WHITESPACE@15..17 \"\\n\\n\"\n+  FN_DEF@17..27\n+    FN_KW@17..19 \"fn\"\n+    WHITESPACE@19..20 \" \"\n+    NAME@20..23\n+      IDENT@20..23 \"foo\"\n+    PARAM_LIST@23..25\n+      L_PAREN@23..24 \"(\"\n+      R_PAREN@24..25 \")\"\n+    BLOCK_EXPR@25..27\n+      BLOCK@25..27\n+        L_CURLY@25..26 \"{\"\n+        R_CURLY@26..27 \"}\"\n+  WHITESPACE@27..29 \"\\n\\n\"\n+  ERROR@29..30\n+    R_CURLY@29..30 \"}\"\n+  WHITESPACE@30..31 \"\\n\"\n+error 0..0: unmatched `}`\n+error 14..14: unmatched `}`\n+error 29..29: unmatched `}`"}, {"sha": "97539fcf2a6697e08415121bb6881a211f68a601", "filename": "crates/ra_syntax/test_data/parser/err/0008_item_block_recovery.rast", "status": "modified", "additions": 81, "deletions": 81, "changes": 162, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0008_item_block_recovery.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,81 +1,81 @@\n-SOURCE_FILE@[0; 95)\n-  FN_DEF@[0; 12)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 8)\n-      L_PAREN@[6; 7) \"(\"\n-      R_PAREN@[7; 8) \")\"\n-    WHITESPACE@[8; 9) \" \"\n-    BLOCK_EXPR@[9; 12)\n-      BLOCK@[9; 12)\n-        L_CURLY@[9; 10) \"{\"\n-        WHITESPACE@[10; 11) \"\\n\"\n-        R_CURLY@[11; 12) \"}\"\n-  WHITESPACE@[12; 14) \"\\n\\n\"\n-  MACRO_CALL@[14; 19)\n-    PATH@[14; 17)\n-      PATH_SEGMENT@[14; 17)\n-        NAME_REF@[14; 17)\n-          IDENT@[14; 17) \"bar\"\n-    TOKEN_TREE@[17; 19)\n-      L_PAREN@[17; 18) \"(\"\n-      R_PAREN@[18; 19) \")\"\n-  WHITESPACE@[19; 20) \" \"\n-  ERROR@[20; 80)\n-    L_CURLY@[20; 21) \"{\"\n-    WHITESPACE@[21; 26) \"\\n    \"\n-    IF_EXPR@[26; 78)\n-      IF_KW@[26; 28) \"if\"\n-      WHITESPACE@[28; 29) \" \"\n-      CONDITION@[29; 33)\n-        LITERAL@[29; 33)\n-          TRUE_KW@[29; 33) \"true\"\n-      WHITESPACE@[33; 34) \" \"\n-      BLOCK_EXPR@[34; 51)\n-        BLOCK@[34; 51)\n-          L_CURLY@[34; 35) \"{\"\n-          WHITESPACE@[35; 44) \"\\n        \"\n-          LITERAL@[44; 45)\n-            INT_NUMBER@[44; 45) \"1\"\n-          WHITESPACE@[45; 50) \"\\n    \"\n-          R_CURLY@[50; 51) \"}\"\n-      WHITESPACE@[51; 52) \" \"\n-      ELSE_KW@[52; 56) \"else\"\n-      WHITESPACE@[56; 57) \" \"\n-      BLOCK_EXPR@[57; 78)\n-        BLOCK@[57; 78)\n-          L_CURLY@[57; 58) \"{\"\n-          WHITESPACE@[58; 67) \"\\n        \"\n-          BIN_EXPR@[67; 72)\n-            LITERAL@[67; 68)\n-              INT_NUMBER@[67; 68) \"2\"\n-            WHITESPACE@[68; 69) \" \"\n-            PLUS@[69; 70) \"+\"\n-            WHITESPACE@[70; 71) \" \"\n-            LITERAL@[71; 72)\n-              INT_NUMBER@[71; 72) \"3\"\n-          WHITESPACE@[72; 77) \"\\n    \"\n-          R_CURLY@[77; 78) \"}\"\n-    WHITESPACE@[78; 79) \"\\n\"\n-    R_CURLY@[79; 80) \"}\"\n-  WHITESPACE@[80; 82) \"\\n\\n\"\n-  FN_DEF@[82; 94)\n-    FN_KW@[82; 84) \"fn\"\n-    WHITESPACE@[84; 85) \" \"\n-    NAME@[85; 88)\n-      IDENT@[85; 88) \"baz\"\n-    PARAM_LIST@[88; 90)\n-      L_PAREN@[88; 89) \"(\"\n-      R_PAREN@[89; 90) \")\"\n-    WHITESPACE@[90; 91) \" \"\n-    BLOCK_EXPR@[91; 94)\n-      BLOCK@[91; 94)\n-        L_CURLY@[91; 92) \"{\"\n-        WHITESPACE@[92; 93) \"\\n\"\n-        R_CURLY@[93; 94) \"}\"\n-  WHITESPACE@[94; 95) \"\\n\"\n-error [17; 17): expected BANG\n-error [19; 19): expected SEMICOLON\n-error [20; 20): expected an item\n+SOURCE_FILE@0..95\n+  FN_DEF@0..12\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..6\n+      IDENT@3..6 \"foo\"\n+    PARAM_LIST@6..8\n+      L_PAREN@6..7 \"(\"\n+      R_PAREN@7..8 \")\"\n+    WHITESPACE@8..9 \" \"\n+    BLOCK_EXPR@9..12\n+      BLOCK@9..12\n+        L_CURLY@9..10 \"{\"\n+        WHITESPACE@10..11 \"\\n\"\n+        R_CURLY@11..12 \"}\"\n+  WHITESPACE@12..14 \"\\n\\n\"\n+  MACRO_CALL@14..19\n+    PATH@14..17\n+      PATH_SEGMENT@14..17\n+        NAME_REF@14..17\n+          IDENT@14..17 \"bar\"\n+    TOKEN_TREE@17..19\n+      L_PAREN@17..18 \"(\"\n+      R_PAREN@18..19 \")\"\n+  WHITESPACE@19..20 \" \"\n+  ERROR@20..80\n+    L_CURLY@20..21 \"{\"\n+    WHITESPACE@21..26 \"\\n    \"\n+    IF_EXPR@26..78\n+      IF_KW@26..28 \"if\"\n+      WHITESPACE@28..29 \" \"\n+      CONDITION@29..33\n+        LITERAL@29..33\n+          TRUE_KW@29..33 \"true\"\n+      WHITESPACE@33..34 \" \"\n+      BLOCK_EXPR@34..51\n+        BLOCK@34..51\n+          L_CURLY@34..35 \"{\"\n+          WHITESPACE@35..44 \"\\n        \"\n+          LITERAL@44..45\n+            INT_NUMBER@44..45 \"1\"\n+          WHITESPACE@45..50 \"\\n    \"\n+          R_CURLY@50..51 \"}\"\n+      WHITESPACE@51..52 \" \"\n+      ELSE_KW@52..56 \"else\"\n+      WHITESPACE@56..57 \" \"\n+      BLOCK_EXPR@57..78\n+        BLOCK@57..78\n+          L_CURLY@57..58 \"{\"\n+          WHITESPACE@58..67 \"\\n        \"\n+          BIN_EXPR@67..72\n+            LITERAL@67..68\n+              INT_NUMBER@67..68 \"2\"\n+            WHITESPACE@68..69 \" \"\n+            PLUS@69..70 \"+\"\n+            WHITESPACE@70..71 \" \"\n+            LITERAL@71..72\n+              INT_NUMBER@71..72 \"3\"\n+          WHITESPACE@72..77 \"\\n    \"\n+          R_CURLY@77..78 \"}\"\n+    WHITESPACE@78..79 \"\\n\"\n+    R_CURLY@79..80 \"}\"\n+  WHITESPACE@80..82 \"\\n\\n\"\n+  FN_DEF@82..94\n+    FN_KW@82..84 \"fn\"\n+    WHITESPACE@84..85 \" \"\n+    NAME@85..88\n+      IDENT@85..88 \"baz\"\n+    PARAM_LIST@88..90\n+      L_PAREN@88..89 \"(\"\n+      R_PAREN@89..90 \")\"\n+    WHITESPACE@90..91 \" \"\n+    BLOCK_EXPR@91..94\n+      BLOCK@91..94\n+        L_CURLY@91..92 \"{\"\n+        WHITESPACE@92..93 \"\\n\"\n+        R_CURLY@93..94 \"}\"\n+  WHITESPACE@94..95 \"\\n\"\n+error 17..17: expected BANG\n+error 19..19: expected SEMICOLON\n+error 20..20: expected an item"}, {"sha": "aca02ece49725e2210f33cea0f0c729eb62dec23", "filename": "crates/ra_syntax/test_data/parser/err/0009_broken_struct_type_parameter.rast", "status": "modified", "additions": 58, "deletions": 58, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0009_broken_struct_type_parameter.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,58 +1,58 @@\n-SOURCE_FILE@[0; 43)\n-  STRUCT_DEF@[0; 11)\n-    STRUCT_KW@[0; 6) \"struct\"\n-    WHITESPACE@[6; 7) \" \"\n-    NAME@[7; 8)\n-      IDENT@[7; 8) \"S\"\n-    TYPE_PARAM_LIST@[8; 11)\n-      L_ANGLE@[8; 9) \"<\"\n-      ERROR@[9; 11)\n-        INT_NUMBER@[9; 11) \"90\"\n-  WHITESPACE@[11; 12) \" \"\n-  ERROR@[12; 13)\n-    PLUS@[12; 13) \"+\"\n-  WHITESPACE@[13; 14) \" \"\n-  ERROR@[14; 15)\n-    INT_NUMBER@[14; 15) \"2\"\n-  ERROR@[15; 16)\n-    R_ANGLE@[15; 16) \">\"\n-  WHITESPACE@[16; 17) \" \"\n-  ERROR@[17; 31)\n-    L_CURLY@[17; 18) \"{\"\n-    WHITESPACE@[18; 23) \"\\n    \"\n-    EXPR_STMT@[23; 24)\n-      PATH_EXPR@[23; 24)\n-        PATH@[23; 24)\n-          PATH_SEGMENT@[23; 24)\n-            NAME_REF@[23; 24)\n-              IDENT@[23; 24) \"f\"\n-    EXPR_STMT@[24; 25)\n-      ERROR@[24; 25)\n-        COLON@[24; 25) \":\"\n-    WHITESPACE@[25; 26) \" \"\n-    PATH_EXPR@[26; 29)\n-      PATH@[26; 29)\n-        PATH_SEGMENT@[26; 29)\n-          NAME_REF@[26; 29)\n-            IDENT@[26; 29) \"u32\"\n-    WHITESPACE@[29; 30) \"\\n\"\n-    R_CURLY@[30; 31) \"}\"\n-  WHITESPACE@[31; 33) \"\\n\\n\"\n-  STRUCT_DEF@[33; 42)\n-    STRUCT_KW@[33; 39) \"struct\"\n-    WHITESPACE@[39; 40) \" \"\n-    NAME@[40; 41)\n-      IDENT@[40; 41) \"T\"\n-    SEMICOLON@[41; 42) \";\"\n-  WHITESPACE@[42; 43) \"\\n\"\n-error [9; 9): expected type parameter\n-error [11; 11): expected COMMA\n-error [11; 11): expected R_ANGLE\n-error [11; 11): expected `;`, `{`, or `(`\n-error [12; 12): expected an item\n-error [14; 14): expected an item\n-error [15; 15): expected an item\n-error [17; 17): expected an item\n-error [24; 24): expected SEMICOLON\n-error [24; 24): expected expression\n-error [25; 25): expected SEMICOLON\n+SOURCE_FILE@0..43\n+  STRUCT_DEF@0..11\n+    STRUCT_KW@0..6 \"struct\"\n+    WHITESPACE@6..7 \" \"\n+    NAME@7..8\n+      IDENT@7..8 \"S\"\n+    TYPE_PARAM_LIST@8..11\n+      L_ANGLE@8..9 \"<\"\n+      ERROR@9..11\n+        INT_NUMBER@9..11 \"90\"\n+  WHITESPACE@11..12 \" \"\n+  ERROR@12..13\n+    PLUS@12..13 \"+\"\n+  WHITESPACE@13..14 \" \"\n+  ERROR@14..15\n+    INT_NUMBER@14..15 \"2\"\n+  ERROR@15..16\n+    R_ANGLE@15..16 \">\"\n+  WHITESPACE@16..17 \" \"\n+  ERROR@17..31\n+    L_CURLY@17..18 \"{\"\n+    WHITESPACE@18..23 \"\\n    \"\n+    EXPR_STMT@23..24\n+      PATH_EXPR@23..24\n+        PATH@23..24\n+          PATH_SEGMENT@23..24\n+            NAME_REF@23..24\n+              IDENT@23..24 \"f\"\n+    EXPR_STMT@24..25\n+      ERROR@24..25\n+        COLON@24..25 \":\"\n+    WHITESPACE@25..26 \" \"\n+    PATH_EXPR@26..29\n+      PATH@26..29\n+        PATH_SEGMENT@26..29\n+          NAME_REF@26..29\n+            IDENT@26..29 \"u32\"\n+    WHITESPACE@29..30 \"\\n\"\n+    R_CURLY@30..31 \"}\"\n+  WHITESPACE@31..33 \"\\n\\n\"\n+  STRUCT_DEF@33..42\n+    STRUCT_KW@33..39 \"struct\"\n+    WHITESPACE@39..40 \" \"\n+    NAME@40..41\n+      IDENT@40..41 \"T\"\n+    SEMICOLON@41..42 \";\"\n+  WHITESPACE@42..43 \"\\n\"\n+error 9..9: expected type parameter\n+error 11..11: expected COMMA\n+error 11..11: expected R_ANGLE\n+error 11..11: expected `;`, `{`, or `(`\n+error 12..12: expected an item\n+error 14..14: expected an item\n+error 15..15: expected an item\n+error 17..17: expected an item\n+error 24..24: expected SEMICOLON\n+error 24..24: expected expression\n+error 25..25: expected SEMICOLON"}, {"sha": "e10bb8174691f7b899d2815664be905861973aa1", "filename": "crates/ra_syntax/test_data/parser/err/0010_unsafe_lambda_block.rast", "status": "modified", "additions": 45, "deletions": 45, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0010_unsafe_lambda_block.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,45 +1,45 @@\n-SOURCE_FILE@[0; 42)\n-  FN_DEF@[0; 41)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 7)\n-      IDENT@[3; 7) \"main\"\n-    PARAM_LIST@[7; 9)\n-      L_PAREN@[7; 8) \"(\"\n-      R_PAREN@[8; 9) \")\"\n-    WHITESPACE@[9; 10) \" \"\n-    BLOCK_EXPR@[10; 41)\n-      BLOCK@[10; 41)\n-        L_CURLY@[10; 11) \"{\"\n-        WHITESPACE@[11; 16) \"\\n    \"\n-        EXPR_STMT@[16; 24)\n-          LAMBDA_EXPR@[16; 24)\n-            PARAM_LIST@[16; 18)\n-              PIPE@[16; 17) \"|\"\n-              PIPE@[17; 18) \"|\"\n-            WHITESPACE@[18; 19) \" \"\n-            RET_TYPE@[19; 24)\n-              THIN_ARROW@[19; 21) \"->\"\n-              WHITESPACE@[21; 22) \" \"\n-              TUPLE_TYPE@[22; 24)\n-                L_PAREN@[22; 23) \"(\"\n-                R_PAREN@[23; 24) \")\"\n-        WHITESPACE@[24; 25) \" \"\n-        EXPR_STMT@[25; 39)\n-          BLOCK_EXPR@[25; 38)\n-            UNSAFE_KW@[25; 31) \"unsafe\"\n-            WHITESPACE@[31; 32) \" \"\n-            BLOCK@[32; 38)\n-              L_CURLY@[32; 33) \"{\"\n-              WHITESPACE@[33; 34) \" \"\n-              TUPLE_EXPR@[34; 36)\n-                L_PAREN@[34; 35) \"(\"\n-                R_PAREN@[35; 36) \")\"\n-              WHITESPACE@[36; 37) \" \"\n-              R_CURLY@[37; 38) \"}\"\n-          SEMICOLON@[38; 39) \";\"\n-        WHITESPACE@[39; 40) \"\\n\"\n-        R_CURLY@[40; 41) \"}\"\n-  WHITESPACE@[41; 42) \"\\n\"\n-error [24; 24): expected `{`\n-error [24; 24): expected SEMICOLON\n+SOURCE_FILE@0..42\n+  FN_DEF@0..41\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..7\n+      IDENT@3..7 \"main\"\n+    PARAM_LIST@7..9\n+      L_PAREN@7..8 \"(\"\n+      R_PAREN@8..9 \")\"\n+    WHITESPACE@9..10 \" \"\n+    BLOCK_EXPR@10..41\n+      BLOCK@10..41\n+        L_CURLY@10..11 \"{\"\n+        WHITESPACE@11..16 \"\\n    \"\n+        EXPR_STMT@16..24\n+          LAMBDA_EXPR@16..24\n+            PARAM_LIST@16..18\n+              PIPE@16..17 \"|\"\n+              PIPE@17..18 \"|\"\n+            WHITESPACE@18..19 \" \"\n+            RET_TYPE@19..24\n+              THIN_ARROW@19..21 \"->\"\n+              WHITESPACE@21..22 \" \"\n+              TUPLE_TYPE@22..24\n+                L_PAREN@22..23 \"(\"\n+                R_PAREN@23..24 \")\"\n+        WHITESPACE@24..25 \" \"\n+        EXPR_STMT@25..39\n+          BLOCK_EXPR@25..38\n+            UNSAFE_KW@25..31 \"unsafe\"\n+            WHITESPACE@31..32 \" \"\n+            BLOCK@32..38\n+              L_CURLY@32..33 \"{\"\n+              WHITESPACE@33..34 \" \"\n+              TUPLE_EXPR@34..36\n+                L_PAREN@34..35 \"(\"\n+                R_PAREN@35..36 \")\"\n+              WHITESPACE@36..37 \" \"\n+              R_CURLY@37..38 \"}\"\n+          SEMICOLON@38..39 \";\"\n+        WHITESPACE@39..40 \"\\n\"\n+        R_CURLY@40..41 \"}\"\n+  WHITESPACE@41..42 \"\\n\"\n+error 24..24: expected `{`\n+error 24..24: expected SEMICOLON"}, {"sha": "87c54c32cfebf1accac4482960ddec590f793c20", "filename": "crates/ra_syntax/test_data/parser/err/0011_extern_struct.rast", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0011_extern_struct.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,13 +1,13 @@\n-SOURCE_FILE@[0; 19)\n-  ERROR@[0; 6)\n-    ABI@[0; 6)\n-      EXTERN_KW@[0; 6) \"extern\"\n-  WHITESPACE@[6; 7) \" \"\n-  STRUCT_DEF@[7; 18)\n-    STRUCT_KW@[7; 13) \"struct\"\n-    WHITESPACE@[13; 14) \" \"\n-    NAME@[14; 17)\n-      IDENT@[14; 17) \"Foo\"\n-    SEMICOLON@[17; 18) \";\"\n-  WHITESPACE@[18; 19) \"\\n\"\n-error [6; 6): expected existential, fn, trait or impl\n+SOURCE_FILE@0..19\n+  ERROR@0..6\n+    ABI@0..6\n+      EXTERN_KW@0..6 \"extern\"\n+  WHITESPACE@6..7 \" \"\n+  STRUCT_DEF@7..18\n+    STRUCT_KW@7..13 \"struct\"\n+    WHITESPACE@13..14 \" \"\n+    NAME@14..17\n+      IDENT@14..17 \"Foo\"\n+    SEMICOLON@17..18 \";\"\n+  WHITESPACE@18..19 \"\\n\"\n+error 6..6: expected existential, fn, trait or impl"}, {"sha": "e1e782f5f35479a6543a6cdd1ee017603e5eecec", "filename": "crates/ra_syntax/test_data/parser/err/0012_broken_lambda.rast", "status": "modified", "additions": 318, "deletions": 318, "changes": 636, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0012_broken_lambda.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,387 +1,387 @@\n-SOURCE_FILE@[0; 389)\n-  FN_DEF@[0; 389)\n-    VISIBILITY@[0; 10)\n-      PUB_KW@[0; 3)\n-      L_PAREN@[3; 4)\n-      SUPER_KW@[4; 9)\n-      R_PAREN@[9; 10)\n-    WHITESPACE@[10; 11)\n-    FN_KW@[11; 13)\n-    WHITESPACE@[13; 14)\n-    NAME@[14; 21)\n-      IDENT@[14; 21) \"process\"\n-    TYPE_PARAM_LIST@[21; 38)\n-      L_ANGLE@[21; 22)\n-      LIFETIME_PARAM@[22; 24)\n-        LIFETIME@[22; 24) \"'a\"\n-      COMMA@[24; 25)\n-      WHITESPACE@[25; 26)\n-      TYPE_PARAM@[26; 37)\n-        NAME@[26; 27)\n-          IDENT@[26; 27) \"S\"\n-        COLON@[27; 28)\n-        WHITESPACE@[28; 29)\n-        PATH@[29; 37)\n-          PATH_SEGMENT@[29; 37)\n-            NAME_REF@[29; 33)\n-              IDENT@[29; 33) \"Sink\"\n-            TYPE_ARG_LIST@[33; 37)\n-              L_ANGLE@[33; 34)\n-              LIFETIME_ARG@[34; 36)\n-                LIFETIME@[34; 36) \"'a\"\n-              R_ANGLE@[36; 37)\n-      R_ANGLE@[37; 38)\n-    PARAM_LIST@[38; 93)\n-      L_PAREN@[38; 39)\n-      PARAM@[39; 54)\n-        BIND_PAT@[39; 46)\n-          NAME@[39; 46)\n-            IDENT@[39; 46) \"builder\"\n-        COLON@[46; 47)\n-        WHITESPACE@[47; 48)\n-        REFERENCE_TYPE@[48; 54)\n-          AMP@[48; 49)\n-          MUT_KW@[49; 52)\n-          WHITESPACE@[52; 53)\n-          PATH_TYPE@[53; 54)\n-            PATH@[53; 54)\n-              PATH_SEGMENT@[53; 54)\n-                NAME_REF@[53; 54)\n-                  IDENT@[53; 54) \"S\"\n-      COMMA@[54; 55)\n-      WHITESPACE@[55; 56)\n-      PARAM@[56; 72)\n-        BIND_PAT@[56; 62)\n-          NAME@[56; 62)\n-            IDENT@[56; 62) \"tokens\"\n-        COLON@[62; 63)\n-        WHITESPACE@[63; 64)\n-        REFERENCE_TYPE@[64; 72)\n-          AMP@[64; 65)\n-          SLICE_TYPE@[65; 72)\n-            L_BRACK@[65; 66)\n-            PATH_TYPE@[66; 71)\n-              PATH@[66; 71)\n-                PATH_SEGMENT@[66; 71)\n-                  NAME_REF@[66; 71)\n-                    IDENT@[66; 71) \"Token\"\n-            R_BRACK@[71; 72)\n-      COMMA@[72; 73)\n-      WHITESPACE@[73; 74)\n-      PARAM@[74; 92)\n-        BIND_PAT@[74; 80)\n-          NAME@[74; 80)\n-            IDENT@[74; 80) \"events\"\n-        COLON@[80; 81)\n-        WHITESPACE@[81; 82)\n-        PATH_TYPE@[82; 92)\n-          PATH@[82; 92)\n-            PATH_SEGMENT@[82; 92)\n-              NAME_REF@[82; 85)\n-                IDENT@[82; 85) \"Vec\"\n-              TYPE_ARG_LIST@[85; 92)\n-                L_ANGLE@[85; 86)\n-                TYPE_ARG@[86; 91)\n-                  PATH_TYPE@[86; 91)\n-                    PATH@[86; 91)\n-                      PATH_SEGMENT@[86; 91)\n-                        NAME_REF@[86; 91)\n-                          IDENT@[86; 91) \"Event\"\n-                R_ANGLE@[91; 92)\n-      R_PAREN@[92; 93)\n-    WHITESPACE@[93; 94)\n-    BLOCK_EXPR@[94; 389)\n-      L_CURLY@[94; 95)\n-      WHITESPACE@[95; 100)\n-      LET_STMT@[100; 125)\n-        LET_KW@[100; 103)\n-        WHITESPACE@[103; 104)\n-        BIND_PAT@[104; 120)\n-          MUT_KW@[104; 107)\n-          WHITESPACE@[107; 108)\n-          NAME@[108; 120)\n-            IDENT@[108; 120) \"next_tok_idx\"\n-        WHITESPACE@[120; 121)\n-        EQ@[121; 122)\n-        WHITESPACE@[122; 123)\n-        LITERAL@[123; 124)\n-          INT_NUMBER@[123; 124) \"0\"\n-        SEMICOLON@[124; 125)\n-      WHITESPACE@[125; 130)\n-      LET_STMT@[130; 389)\n-        LET_KW@[130; 133)\n-        WHITESPACE@[133; 134)\n-        BIND_PAT@[134; 140)\n-          NAME@[134; 140)\n-            IDENT@[134; 140) \"eat_ws\"\n-        WHITESPACE@[140; 141)\n-        EQ@[141; 142)\n-        WHITESPACE@[142; 143)\n-        LAMBDA_EXPR@[143; 389)\n-          PARAM_LIST@[143; 388)\n-            PIPE@[143; 144)\n-            PARAM@[144; 159)\n-              BIND_PAT@[144; 147)\n-                NAME@[144; 147)\n-                  IDENT@[144; 147) \"idx\"\n-              COLON@[147; 148)\n-              WHITESPACE@[148; 149)\n-              REFERENCE_TYPE@[149; 159)\n-                AMP@[149; 150)\n-                MUT_KW@[150; 153)\n-                WHITESPACE@[153; 154)\n-                PATH_TYPE@[154; 159)\n-                  PATH@[154; 159)\n-                    PATH_SEGMENT@[154; 159)\n-                      NAME_REF@[154; 159)\n-                        IDENT@[154; 159) \"usize\"\n-            COMMA@[159; 160)\n-            WHITESPACE@[160; 161)\n-            PARAM@[161; 167)\n-              REF_PAT@[161; 167)\n-                AMP@[161; 162)\n-                MUT_KW@[162; 165)\n-                WHITESPACE@[165; 166)\n+SOURCE_FILE@0..389\n+  FN_DEF@0..389\n+    VISIBILITY@0..10\n+      PUB_KW@0..3\n+      L_PAREN@3..4\n+      SUPER_KW@4..9\n+      R_PAREN@9..10\n+    WHITESPACE@10..11\n+    FN_KW@11..13\n+    WHITESPACE@13..14\n+    NAME@14..21\n+      IDENT@14..21 \"process\"\n+    TYPE_PARAM_LIST@21..38\n+      L_ANGLE@21..22\n+      LIFETIME_PARAM@22..24\n+        LIFETIME@22..24 \"'a\"\n+      COMMA@24..25\n+      WHITESPACE@25..26\n+      TYPE_PARAM@26..37\n+        NAME@26..27\n+          IDENT@26..27 \"S\"\n+        COLON@27..28\n+        WHITESPACE@28..29\n+        PATH@29..37\n+          PATH_SEGMENT@29..37\n+            NAME_REF@29..33\n+              IDENT@29..33 \"Sink\"\n+            TYPE_ARG_LIST@33..37\n+              L_ANGLE@33..34\n+              LIFETIME_ARG@34..36\n+                LIFETIME@34..36 \"'a\"\n+              R_ANGLE@36..37\n+      R_ANGLE@37..38\n+    PARAM_LIST@38..93\n+      L_PAREN@38..39\n+      PARAM@39..54\n+        BIND_PAT@39..46\n+          NAME@39..46\n+            IDENT@39..46 \"builder\"\n+        COLON@46..47\n+        WHITESPACE@47..48\n+        REFERENCE_TYPE@48..54\n+          AMP@48..49\n+          MUT_KW@49..52\n+          WHITESPACE@52..53\n+          PATH_TYPE@53..54\n+            PATH@53..54\n+              PATH_SEGMENT@53..54\n+                NAME_REF@53..54\n+                  IDENT@53..54 \"S\"\n+      COMMA@54..55\n+      WHITESPACE@55..56\n+      PARAM@56..72\n+        BIND_PAT@56..62\n+          NAME@56..62\n+            IDENT@56..62 \"tokens\"\n+        COLON@62..63\n+        WHITESPACE@63..64\n+        REFERENCE_TYPE@64..72\n+          AMP@64..65\n+          SLICE_TYPE@65..72\n+            L_BRACK@65..66\n+            PATH_TYPE@66..71\n+              PATH@66..71\n+                PATH_SEGMENT@66..71\n+                  NAME_REF@66..71\n+                    IDENT@66..71 \"Token\"\n+            R_BRACK@71..72\n+      COMMA@72..73\n+      WHITESPACE@73..74\n+      PARAM@74..92\n+        BIND_PAT@74..80\n+          NAME@74..80\n+            IDENT@74..80 \"events\"\n+        COLON@80..81\n+        WHITESPACE@81..82\n+        PATH_TYPE@82..92\n+          PATH@82..92\n+            PATH_SEGMENT@82..92\n+              NAME_REF@82..85\n+                IDENT@82..85 \"Vec\"\n+              TYPE_ARG_LIST@85..92\n+                L_ANGLE@85..86\n+                TYPE_ARG@86..91\n+                  PATH_TYPE@86..91\n+                    PATH@86..91\n+                      PATH_SEGMENT@86..91\n+                        NAME_REF@86..91\n+                          IDENT@86..91 \"Event\"\n+                R_ANGLE@91..92\n+      R_PAREN@92..93\n+    WHITESPACE@93..94\n+    BLOCK_EXPR@94..389\n+      L_CURLY@94..95\n+      WHITESPACE@95..100\n+      LET_STMT@100..125\n+        LET_KW@100..103\n+        WHITESPACE@103..104\n+        BIND_PAT@104..120\n+          MUT_KW@104..107\n+          WHITESPACE@107..108\n+          NAME@108..120\n+            IDENT@108..120 \"next_tok_idx\"\n+        WHITESPACE@120..121\n+        EQ@121..122\n+        WHITESPACE@122..123\n+        LITERAL@123..124\n+          INT_NUMBER@123..124 \"0\"\n+        SEMICOLON@124..125\n+      WHITESPACE@125..130\n+      LET_STMT@130..389\n+        LET_KW@130..133\n+        WHITESPACE@133..134\n+        BIND_PAT@134..140\n+          NAME@134..140\n+            IDENT@134..140 \"eat_ws\"\n+        WHITESPACE@140..141\n+        EQ@141..142\n+        WHITESPACE@142..143\n+        LAMBDA_EXPR@143..389\n+          PARAM_LIST@143..388\n+            PIPE@143..144\n+            PARAM@144..159\n+              BIND_PAT@144..147\n+                NAME@144..147\n+                  IDENT@144..147 \"idx\"\n+              COLON@147..148\n+              WHITESPACE@148..149\n+              REFERENCE_TYPE@149..159\n+                AMP@149..150\n+                MUT_KW@150..153\n+                WHITESPACE@153..154\n+                PATH_TYPE@154..159\n+                  PATH@154..159\n+                    PATH_SEGMENT@154..159\n+                      NAME_REF@154..159\n+                        IDENT@154..159 \"usize\"\n+            COMMA@159..160\n+            WHITESPACE@160..161\n+            PARAM@161..167\n+              REF_PAT@161..167\n+                AMP@161..162\n+                MUT_KW@162..165\n+                WHITESPACE@165..166\n                 err: `expected pattern`\n-                ERROR@[166; 167)\n-                  PIPE@[166; 167)\n+                ERROR@166..167\n+                  PIPE@166..167\n                   err: `expected COMMA`\n-            WHITESPACE@[167; 168)\n+            WHITESPACE@167..168\n             err: `expected pattern`\n-            PARAM@[168; 169)\n-              ERROR@[168; 169)\n-                L_CURLY@[168; 169)\n+            PARAM@168..169\n+              ERROR@168..169\n+                L_CURLY@168..169\n                 err: `expected COMMA`\n-            WHITESPACE@[169; 178)\n+            WHITESPACE@169..178\n             err: `expected pattern`\n-            PARAM@[178; 183)\n-              ERROR@[178; 183)\n-                WHILE_KW@[178; 183)\n+            PARAM@178..183\n+              ERROR@178..183\n+                WHILE_KW@178..183\n                 err: `expected COMMA`\n-            WHITESPACE@[183; 184)\n+            WHITESPACE@183..184\n             err: `expected pattern`\n-            PARAM@[184; 187)\n-              ERROR@[184; 187)\n-                LET_KW@[184; 187)\n+            PARAM@184..187\n+              ERROR@184..187\n+                LET_KW@184..187\n                 err: `expected COMMA`\n-            WHITESPACE@[187; 188)\n-            PARAM@[188; 199)\n-              TUPLE_STRUCT_PAT@[188; 199)\n-                PATH@[188; 192)\n-                  PATH_SEGMENT@[188; 192)\n-                    NAME_REF@[188; 192)\n-                      IDENT@[188; 192) \"Some\"\n-                L_PAREN@[192; 193)\n-                BIND_PAT@[193; 198)\n-                  NAME@[193; 198)\n-                    IDENT@[193; 198) \"token\"\n-                R_PAREN@[198; 199)\n+            WHITESPACE@187..188\n+            PARAM@188..199\n+              TUPLE_STRUCT_PAT@188..199\n+                PATH@188..192\n+                  PATH_SEGMENT@188..192\n+                    NAME_REF@188..192\n+                      IDENT@188..192 \"Some\"\n+                L_PAREN@192..193\n+                BIND_PAT@193..198\n+                  NAME@193..198\n+                    IDENT@193..198 \"token\"\n+                R_PAREN@198..199\n                 err: `expected COMMA`\n-            WHITESPACE@[199; 200)\n+            WHITESPACE@199..200\n             err: `expected pattern`\n-            PARAM@[200; 201)\n-              ERROR@[200; 201)\n-                EQ@[200; 201)\n+            PARAM@200..201\n+              ERROR@200..201\n+                EQ@200..201\n                 err: `expected COMMA`\n-            WHITESPACE@[201; 202)\n-            PARAM@[202; 208)\n-              BIND_PAT@[202; 208)\n-                NAME@[202; 208)\n-                  IDENT@[202; 208) \"tokens\"\n+            WHITESPACE@201..202\n+            PARAM@202..208\n+              BIND_PAT@202..208\n+                NAME@202..208\n+                  IDENT@202..208 \"tokens\"\n                   err: `expected COMMA`\n                   err: `expected pattern`\n-            PARAM@[208; 209)\n-              ERROR@[208; 209)\n-                DOT@[208; 209)\n+            PARAM@208..209\n+              ERROR@208..209\n+                DOT@208..209\n                 err: `expected COMMA`\n-            PARAM@[209; 218)\n-              TUPLE_STRUCT_PAT@[209; 218)\n-                PATH@[209; 212)\n-                  PATH_SEGMENT@[209; 212)\n-                    NAME_REF@[209; 212)\n-                      IDENT@[209; 212) \"get\"\n-                L_PAREN@[212; 213)\n+            PARAM@209..218\n+              TUPLE_STRUCT_PAT@209..218\n+                PATH@209..212\n+                  PATH_SEGMENT@209..212\n+                    NAME_REF@209..212\n+                      IDENT@209..212 \"get\"\n+                L_PAREN@212..213\n                 err: `expected pattern`\n-                ERROR@[213; 214)\n-                  STAR@[213; 214)\n+                ERROR@213..214\n+                  STAR@213..214\n                   err: `expected COMMA`\n-                BIND_PAT@[214; 217)\n-                  NAME@[214; 217)\n-                    IDENT@[214; 217) \"idx\"\n-                R_PAREN@[217; 218)\n+                BIND_PAT@214..217\n+                  NAME@214..217\n+                    IDENT@214..217 \"idx\"\n+                R_PAREN@217..218\n                 err: `expected COMMA`\n-            WHITESPACE@[218; 219)\n+            WHITESPACE@218..219\n             err: `expected pattern`\n-            PARAM@[219; 220)\n-              ERROR@[219; 220)\n-                L_CURLY@[219; 220)\n+            PARAM@219..220\n+              ERROR@219..220\n+                L_CURLY@219..220\n                 err: `expected COMMA`\n-            WHITESPACE@[220; 233)\n+            WHITESPACE@220..233\n             err: `expected pattern`\n-            PARAM@[233; 235)\n-              ERROR@[233; 235)\n-                IF_KW@[233; 235)\n+            PARAM@233..235\n+              ERROR@233..235\n+                IF_KW@233..235\n                 err: `expected COMMA`\n-            WHITESPACE@[235; 236)\n+            WHITESPACE@235..236\n             err: `expected pattern`\n-            PARAM@[236; 237)\n-              ERROR@[236; 237)\n-                BANG@[236; 237)\n+            PARAM@236..237\n+              ERROR@236..237\n+                BANG@236..237\n                 err: `expected COMMA`\n-            PARAM@[237; 242)\n-              BIND_PAT@[237; 242)\n-                NAME@[237; 242)\n-                  IDENT@[237; 242) \"token\"\n+            PARAM@237..242\n+              BIND_PAT@237..242\n+                NAME@237..242\n+                  IDENT@237..242 \"token\"\n                   err: `expected COMMA`\n                   err: `expected pattern`\n-            PARAM@[242; 243)\n-              ERROR@[242; 243)\n-                DOT@[242; 243)\n+            PARAM@242..243\n+              ERROR@242..243\n+                DOT@242..243\n                 err: `expected COMMA`\n-            PARAM@[243; 247)\n-              BIND_PAT@[243; 247)\n-                NAME@[243; 247)\n-                  IDENT@[243; 247) \"kind\"\n+            PARAM@243..247\n+              BIND_PAT@243..247\n+                NAME@243..247\n+                  IDENT@243..247 \"kind\"\n                   err: `expected COMMA`\n                   err: `expected pattern`\n-            PARAM@[247; 248)\n-              ERROR@[247; 248)\n-                DOT@[247; 248)\n+            PARAM@247..248\n+              ERROR@247..248\n+                DOT@247..248\n                 err: `expected COMMA`\n-            PARAM@[248; 259)\n-              TUPLE_STRUCT_PAT@[248; 259)\n-                PATH@[248; 257)\n-                  PATH_SEGMENT@[248; 257)\n-                    NAME_REF@[248; 257)\n-                      IDENT@[248; 257) \"is_trivia\"\n-                L_PAREN@[257; 258)\n-                R_PAREN@[258; 259)\n+            PARAM@248..259\n+              TUPLE_STRUCT_PAT@248..259\n+                PATH@248..257\n+                  PATH_SEGMENT@248..257\n+                    NAME_REF@248..257\n+                      IDENT@248..257 \"is_trivia\"\n+                L_PAREN@257..258\n+                R_PAREN@258..259\n                 err: `expected COMMA`\n-            WHITESPACE@[259; 260)\n+            WHITESPACE@259..260\n             err: `expected pattern`\n-            PARAM@[260; 261)\n-              ERROR@[260; 261)\n-                L_CURLY@[260; 261)\n+            PARAM@260..261\n+              ERROR@260..261\n+                L_CURLY@260..261\n                 err: `expected COMMA`\n-            WHITESPACE@[261; 278)\n-            PARAM@[278; 283)\n-              BIND_PAT@[278; 283)\n-                NAME@[278; 283)\n-                  IDENT@[278; 283) \"break\"\n+            WHITESPACE@261..278\n+            PARAM@278..283\n+              BIND_PAT@278..283\n+                NAME@278..283\n+                  IDENT@278..283 \"break\"\n                   err: `expected COMMA`\n                   err: `expected pattern`\n-            PARAM@[283; 284)\n-              ERROR@[283; 284)\n-                SEMICOLON@[283; 284)\n+            PARAM@283..284\n+              ERROR@283..284\n+                SEMICOLON@283..284\n                 err: `expected COMMA`\n-            WHITESPACE@[284; 297)\n+            WHITESPACE@284..297\n             err: `expected pattern`\n-            PARAM@[297; 298)\n-              ERROR@[297; 298)\n-                R_CURLY@[297; 298)\n+            PARAM@297..298\n+              ERROR@297..298\n+                R_CURLY@297..298\n                 err: `expected COMMA`\n-            WHITESPACE@[298; 311)\n-            PARAM@[311; 318)\n-              BIND_PAT@[311; 318)\n-                NAME@[311; 318)\n-                  IDENT@[311; 318) \"builder\"\n+            WHITESPACE@298..311\n+            PARAM@311..318\n+              BIND_PAT@311..318\n+                NAME@311..318\n+                  IDENT@311..318 \"builder\"\n                   err: `expected COMMA`\n                   err: `expected pattern`\n-            PARAM@[318; 319)\n-              ERROR@[318; 319)\n-                DOT@[318; 319)\n+            PARAM@318..319\n+              ERROR@318..319\n+                DOT@318..319\n                 err: `expected COMMA`\n-            PARAM@[319; 346)\n-              TUPLE_STRUCT_PAT@[319; 346)\n-                PATH@[319; 323)\n-                  PATH_SEGMENT@[319; 323)\n-                    NAME_REF@[319; 323)\n-                      IDENT@[319; 323) \"leaf\"\n-                L_PAREN@[323; 324)\n-                BIND_PAT@[324; 329)\n-                  NAME@[324; 329)\n-                    IDENT@[324; 329) \"token\"\n+            PARAM@319..346\n+              TUPLE_STRUCT_PAT@319..346\n+                PATH@319..323\n+                  PATH_SEGMENT@319..323\n+                    NAME_REF@319..323\n+                      IDENT@319..323 \"leaf\"\n+                L_PAREN@323..324\n+                BIND_PAT@324..329\n+                  NAME@324..329\n+                    IDENT@324..329 \"token\"\n                     err: `expected COMMA`\n                     err: `expected pattern`\n-                ERROR@[329; 330)\n-                  DOT@[329; 330)\n+                ERROR@329..330\n+                  DOT@329..330\n                   err: `expected COMMA`\n-                BIND_PAT@[330; 334)\n-                  NAME@[330; 334)\n-                    IDENT@[330; 334) \"kind\"\n-                COMMA@[334; 335)\n-                WHITESPACE@[335; 336)\n-                BIND_PAT@[336; 341)\n-                  NAME@[336; 341)\n-                    IDENT@[336; 341) \"token\"\n+                BIND_PAT@330..334\n+                  NAME@330..334\n+                    IDENT@330..334 \"kind\"\n+                COMMA@334..335\n+                WHITESPACE@335..336\n+                BIND_PAT@336..341\n+                  NAME@336..341\n+                    IDENT@336..341 \"token\"\n                     err: `expected COMMA`\n                     err: `expected pattern`\n-                ERROR@[341; 342)\n-                  DOT@[341; 342)\n+                ERROR@341..342\n+                  DOT@341..342\n                   err: `expected COMMA`\n-                BIND_PAT@[342; 345)\n-                  NAME@[342; 345)\n-                    IDENT@[342; 345) \"len\"\n-                R_PAREN@[345; 346)\n+                BIND_PAT@342..345\n+                  NAME@342..345\n+                    IDENT@342..345 \"len\"\n+                R_PAREN@345..346\n                 err: `expected COMMA`\n                 err: `expected pattern`\n-            PARAM@[346; 347)\n-              ERROR@[346; 347)\n-                SEMICOLON@[346; 347)\n+            PARAM@346..347\n+              ERROR@346..347\n+                SEMICOLON@346..347\n                 err: `expected COMMA`\n-            WHITESPACE@[347; 360)\n+            WHITESPACE@347..360\n             err: `expected pattern`\n-            PARAM@[360; 361)\n-              ERROR@[360; 361)\n-                STAR@[360; 361)\n+            PARAM@360..361\n+              ERROR@360..361\n+                STAR@360..361\n                 err: `expected COMMA`\n-            PARAM@[361; 364)\n-              BIND_PAT@[361; 364)\n-                NAME@[361; 364)\n-                  IDENT@[361; 364) \"idx\"\n+            PARAM@361..364\n+              BIND_PAT@361..364\n+                NAME@361..364\n+                  IDENT@361..364 \"idx\"\n                   err: `expected COMMA`\n-            WHITESPACE@[364; 365)\n+            WHITESPACE@364..365\n             err: `expected pattern`\n-            PARAM@[365; 366)\n-              ERROR@[365; 366)\n-                PLUS@[365; 366)\n+            PARAM@365..366\n+              ERROR@365..366\n+                PLUS@365..366\n                 err: `expected COMMA`\n                 err: `expected pattern`\n-            PARAM@[366; 367)\n-              ERROR@[366; 367)\n-                EQ@[366; 367)\n+            PARAM@366..367\n+              ERROR@366..367\n+                EQ@366..367\n                 err: `expected COMMA`\n-            WHITESPACE@[367; 368)\n-            PARAM@[368; 369)\n-              LITERAL@[368; 369)\n-                INT_NUMBER@[368; 369) \"1\"\n+            WHITESPACE@367..368\n+            PARAM@368..369\n+              LITERAL@368..369\n+                INT_NUMBER@368..369 \"1\"\n                 err: `expected COMMA`\n-            WHITESPACE@[369; 378)\n+            WHITESPACE@369..378\n             err: `expected pattern`\n-            PARAM@[378; 379)\n-              ERROR@[378; 379)\n-                R_CURLY@[378; 379)\n+            PARAM@378..379\n+              ERROR@378..379\n+                R_CURLY@378..379\n                 err: `expected COMMA`\n-            WHITESPACE@[379; 384)\n+            WHITESPACE@379..384\n             err: `expected pattern`\n-            PARAM@[384; 385)\n-              ERROR@[384; 385)\n-                R_CURLY@[384; 385)\n+            PARAM@384..385\n+              ERROR@384..385\n+                R_CURLY@384..385\n                 err: `expected COMMA`\n                 err: `expected pattern`\n-            PARAM@[385; 386)\n-              ERROR@[385; 386)\n-                SEMICOLON@[385; 386)\n+            PARAM@385..386\n+              ERROR@385..386\n+                SEMICOLON@385..386\n                 err: `expected COMMA`\n-            WHITESPACE@[386; 387)\n+            WHITESPACE@386..387\n             err: `expected pattern`\n-            PARAM@[387; 388)\n-              ERROR@[387; 388)\n-                R_CURLY@[387; 388)\n+            PARAM@387..388\n+              ERROR@387..388\n+                R_CURLY@387..388\n                 err: `expected COMMA`\n                 err: `expected PIPE`\n-          WHITESPACE@[388; 389)\n+          WHITESPACE@388..389\n           err: `expected expression`\n           err: `expected SEMI`\n           err: `expected R_CURLY`\n-          ERROR@[389; 389)\n+          ERROR@389..389"}, {"sha": "211e5fd46838b120a5d44b1d0f009b2559182699", "filename": "crates/ra_syntax/test_data/parser/err/0013_invalid_type.rast", "status": "modified", "additions": 89, "deletions": 89, "changes": 178, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0013_invalid_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,89 +1,89 @@\n-SOURCE_FILE@[0; 86)\n-  STRUCT_DEF@[0; 72)\n-    VISIBILITY@[0; 3)\n-      PUB_KW@[0; 3) \"pub\"\n-    WHITESPACE@[3; 4) \" \"\n-    STRUCT_KW@[4; 10) \"struct\"\n-    WHITESPACE@[10; 11) \" \"\n-    NAME@[11; 16)\n-      IDENT@[11; 16) \"Cache\"\n-    TUPLE_FIELD_DEF_LIST@[16; 72)\n-      L_PAREN@[16; 17) \"(\"\n-      WHITESPACE@[17; 22) \"\\n    \"\n-      TUPLE_FIELD_DEF@[22; 68)\n-        PATH_TYPE@[22; 68)\n-          PATH@[22; 68)\n-            PATH_SEGMENT@[22; 68)\n-              NAME_REF@[22; 29)\n-                IDENT@[22; 29) \"RefCell\"\n-              TYPE_ARG_LIST@[29; 68)\n-                L_ANGLE@[29; 30) \"<\"\n-                TYPE_ARG@[30; 68)\n-                  PATH_TYPE@[30; 68)\n-                    PATH@[30; 68)\n-                      PATH_SEGMENT@[30; 68)\n-                        NAME_REF@[30; 37)\n-                          IDENT@[30; 37) \"HashMap\"\n-                        TYPE_ARG_LIST@[37; 68)\n-                          L_ANGLE@[37; 38) \"<\"\n-                          WHITESPACE@[38; 47) \"\\n        \"\n-                          TYPE_ARG@[47; 53)\n-                            PATH_TYPE@[47; 53)\n-                              PATH@[47; 53)\n-                                PATH_SEGMENT@[47; 53)\n-                                  NAME_REF@[47; 53)\n-                                    IDENT@[47; 53) \"TypeId\"\n-                          COMMA@[53; 54) \",\"\n-                          WHITESPACE@[54; 63) \"\\n        \"\n-                          TYPE_ARG@[63; 68)\n-                            PATH_TYPE@[63; 68)\n-                              PATH@[63; 68)\n-                                PATH_SEGMENT@[63; 68)\n-                                  NAME_REF@[63; 66)\n-                                    IDENT@[63; 66) \"Box\"\n-                                  TYPE_ARG_LIST@[66; 68)\n-                                    L_ANGLE@[66; 67) \"<\"\n-                                    TYPE_ARG@[67; 68)\n-                                      ERROR@[67; 68)\n-                                        AT@[67; 68) \"@\"\n-      WHITESPACE@[68; 69) \" \"\n-      TUPLE_FIELD_DEF@[69; 72)\n-        PATH_TYPE@[69; 72)\n-          PATH@[69; 72)\n-            PATH_SEGMENT@[69; 72)\n-              NAME_REF@[69; 72)\n-                IDENT@[69; 72) \"Any\"\n-      ERROR@[72; 72)\n-  ERROR@[72; 73)\n-    R_ANGLE@[72; 73) \">\"\n-  ERROR@[73; 74)\n-    COMMA@[73; 74) \",\"\n-  WHITESPACE@[74; 79) \"\\n    \"\n-  ERROR@[79; 80)\n-    R_ANGLE@[79; 80) \">\"\n-  ERROR@[80; 81)\n-    R_ANGLE@[80; 81) \">\"\n-  WHITESPACE@[81; 82) \"\\n\"\n-  ERROR@[82; 83)\n-    R_PAREN@[82; 83) \")\"\n-  ERROR@[83; 84)\n-    SEMICOLON@[83; 84) \";\"\n-  WHITESPACE@[84; 86) \"\\n\\n\"\n-error [67; 67): expected type\n-error [68; 68): expected COMMA\n-error [68; 68): expected R_ANGLE\n-error [68; 68): expected COMMA\n-error [68; 68): expected R_ANGLE\n-error [68; 68): expected COMMA\n-error [68; 68): expected R_ANGLE\n-error [68; 68): expected COMMA\n-error [72; 72): expected COMMA\n-error [72; 72): expected a type\n-error [72; 72): expected R_PAREN\n-error [72; 72): expected SEMICOLON\n-error [72; 72): expected an item\n-error [73; 73): expected an item\n-error [79; 79): expected an item\n-error [80; 80): expected an item\n-error [82; 82): expected an item\n-error [83; 83): expected an item\n+SOURCE_FILE@0..86\n+  STRUCT_DEF@0..72\n+    VISIBILITY@0..3\n+      PUB_KW@0..3 \"pub\"\n+    WHITESPACE@3..4 \" \"\n+    STRUCT_KW@4..10 \"struct\"\n+    WHITESPACE@10..11 \" \"\n+    NAME@11..16\n+      IDENT@11..16 \"Cache\"\n+    TUPLE_FIELD_DEF_LIST@16..72\n+      L_PAREN@16..17 \"(\"\n+      WHITESPACE@17..22 \"\\n    \"\n+      TUPLE_FIELD_DEF@22..68\n+        PATH_TYPE@22..68\n+          PATH@22..68\n+            PATH_SEGMENT@22..68\n+              NAME_REF@22..29\n+                IDENT@22..29 \"RefCell\"\n+              TYPE_ARG_LIST@29..68\n+                L_ANGLE@29..30 \"<\"\n+                TYPE_ARG@30..68\n+                  PATH_TYPE@30..68\n+                    PATH@30..68\n+                      PATH_SEGMENT@30..68\n+                        NAME_REF@30..37\n+                          IDENT@30..37 \"HashMap\"\n+                        TYPE_ARG_LIST@37..68\n+                          L_ANGLE@37..38 \"<\"\n+                          WHITESPACE@38..47 \"\\n        \"\n+                          TYPE_ARG@47..53\n+                            PATH_TYPE@47..53\n+                              PATH@47..53\n+                                PATH_SEGMENT@47..53\n+                                  NAME_REF@47..53\n+                                    IDENT@47..53 \"TypeId\"\n+                          COMMA@53..54 \",\"\n+                          WHITESPACE@54..63 \"\\n        \"\n+                          TYPE_ARG@63..68\n+                            PATH_TYPE@63..68\n+                              PATH@63..68\n+                                PATH_SEGMENT@63..68\n+                                  NAME_REF@63..66\n+                                    IDENT@63..66 \"Box\"\n+                                  TYPE_ARG_LIST@66..68\n+                                    L_ANGLE@66..67 \"<\"\n+                                    TYPE_ARG@67..68\n+                                      ERROR@67..68\n+                                        AT@67..68 \"@\"\n+      WHITESPACE@68..69 \" \"\n+      TUPLE_FIELD_DEF@69..72\n+        PATH_TYPE@69..72\n+          PATH@69..72\n+            PATH_SEGMENT@69..72\n+              NAME_REF@69..72\n+                IDENT@69..72 \"Any\"\n+      ERROR@72..72\n+  ERROR@72..73\n+    R_ANGLE@72..73 \">\"\n+  ERROR@73..74\n+    COMMA@73..74 \",\"\n+  WHITESPACE@74..79 \"\\n    \"\n+  ERROR@79..80\n+    R_ANGLE@79..80 \">\"\n+  ERROR@80..81\n+    R_ANGLE@80..81 \">\"\n+  WHITESPACE@81..82 \"\\n\"\n+  ERROR@82..83\n+    R_PAREN@82..83 \")\"\n+  ERROR@83..84\n+    SEMICOLON@83..84 \";\"\n+  WHITESPACE@84..86 \"\\n\\n\"\n+error 67..67: expected type\n+error 68..68: expected COMMA\n+error 68..68: expected R_ANGLE\n+error 68..68: expected COMMA\n+error 68..68: expected R_ANGLE\n+error 68..68: expected COMMA\n+error 68..68: expected R_ANGLE\n+error 68..68: expected COMMA\n+error 72..72: expected COMMA\n+error 72..72: expected a type\n+error 72..72: expected R_PAREN\n+error 72..72: expected SEMICOLON\n+error 72..72: expected an item\n+error 73..73: expected an item\n+error 79..79: expected an item\n+error 80..80: expected an item\n+error 82..82: expected an item\n+error 83..83: expected an item"}, {"sha": "61c3618337a4d92e074a975daf7248c86626e88f", "filename": "crates/ra_syntax/test_data/parser/err/0014_where_no_bounds.rast", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0014_where_no_bounds.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,32 +1,32 @@\n-SOURCE_FILE@[0; 23)\n-  FN_DEF@[0; 22)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    TYPE_PARAM_LIST@[6; 9)\n-      L_ANGLE@[6; 7) \"<\"\n-      TYPE_PARAM@[7; 8)\n-        NAME@[7; 8)\n-          IDENT@[7; 8) \"T\"\n-      R_ANGLE@[8; 9) \">\"\n-    PARAM_LIST@[9; 11)\n-      L_PAREN@[9; 10) \"(\"\n-      R_PAREN@[10; 11) \")\"\n-    WHITESPACE@[11; 12) \" \"\n-    WHERE_CLAUSE@[12; 19)\n-      WHERE_KW@[12; 17) \"where\"\n-      WHITESPACE@[17; 18) \" \"\n-      WHERE_PRED@[18; 19)\n-        PATH_TYPE@[18; 19)\n-          PATH@[18; 19)\n-            PATH_SEGMENT@[18; 19)\n-              NAME_REF@[18; 19)\n-                IDENT@[18; 19) \"T\"\n-    WHITESPACE@[19; 20) \" \"\n-    BLOCK_EXPR@[20; 22)\n-      BLOCK@[20; 22)\n-        L_CURLY@[20; 21) \"{\"\n-        R_CURLY@[21; 22) \"}\"\n-  WHITESPACE@[22; 23) \"\\n\"\n-error [19; 19): expected colon\n+SOURCE_FILE@0..23\n+  FN_DEF@0..22\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..6\n+      IDENT@3..6 \"foo\"\n+    TYPE_PARAM_LIST@6..9\n+      L_ANGLE@6..7 \"<\"\n+      TYPE_PARAM@7..8\n+        NAME@7..8\n+          IDENT@7..8 \"T\"\n+      R_ANGLE@8..9 \">\"\n+    PARAM_LIST@9..11\n+      L_PAREN@9..10 \"(\"\n+      R_PAREN@10..11 \")\"\n+    WHITESPACE@11..12 \" \"\n+    WHERE_CLAUSE@12..19\n+      WHERE_KW@12..17 \"where\"\n+      WHITESPACE@17..18 \" \"\n+      WHERE_PRED@18..19\n+        PATH_TYPE@18..19\n+          PATH@18..19\n+            PATH_SEGMENT@18..19\n+              NAME_REF@18..19\n+                IDENT@18..19 \"T\"\n+    WHITESPACE@19..20 \" \"\n+    BLOCK_EXPR@20..22\n+      BLOCK@20..22\n+        L_CURLY@20..21 \"{\"\n+        R_CURLY@21..22 \"}\"\n+  WHITESPACE@22..23 \"\\n\"\n+error 19..19: expected colon"}, {"sha": "b18378cff211d6c7a5b5d3d302d929fc64dbe931", "filename": "crates/ra_syntax/test_data/parser/err/0015_curly_in_params.rast", "status": "modified", "additions": 24, "deletions": 24, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0015_curly_in_params.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,24 +1,24 @@\n-SOURCE_FILE@[0; 14)\n-  FN_DEF@[0; 7)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 7)\n-      L_PAREN@[6; 7) \"(\"\n-  ERROR@[7; 8)\n-    R_CURLY@[7; 8) \"}\"\n-  ERROR@[8; 9)\n-    R_PAREN@[8; 9) \")\"\n-  WHITESPACE@[9; 10) \" \"\n-  ERROR@[10; 13)\n-    L_CURLY@[10; 11) \"{\"\n-    WHITESPACE@[11; 12) \"\\n\"\n-    R_CURLY@[12; 13) \"}\"\n-  WHITESPACE@[13; 14) \"\\n\"\n-error [7; 7): expected value parameter\n-error [7; 7): expected R_PAREN\n-error [7; 7): expected a block\n-error [7; 7): unmatched `}`\n-error [8; 8): expected an item\n-error [10; 10): expected an item\n+SOURCE_FILE@0..14\n+  FN_DEF@0..7\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..6\n+      IDENT@3..6 \"foo\"\n+    PARAM_LIST@6..7\n+      L_PAREN@6..7 \"(\"\n+  ERROR@7..8\n+    R_CURLY@7..8 \"}\"\n+  ERROR@8..9\n+    R_PAREN@8..9 \")\"\n+  WHITESPACE@9..10 \" \"\n+  ERROR@10..13\n+    L_CURLY@10..11 \"{\"\n+    WHITESPACE@11..12 \"\\n\"\n+    R_CURLY@12..13 \"}\"\n+  WHITESPACE@13..14 \"\\n\"\n+error 7..7: expected value parameter\n+error 7..7: expected R_PAREN\n+error 7..7: expected a block\n+error 7..7: unmatched `}`\n+error 8..8: expected an item\n+error 10..10: expected an item"}, {"sha": "92bb47316df2143dbed918d7a5eace6feaf04b0a", "filename": "crates/ra_syntax/test_data/parser/err/0016_missing_semi.rast", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0016_missing_semi.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,44 +1,44 @@\n-SOURCE_FILE@[0; 56)\n-  FN_DEF@[0; 55)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 8)\n-      L_PAREN@[6; 7) \"(\"\n-      R_PAREN@[7; 8) \")\"\n-    WHITESPACE@[8; 9) \" \"\n-    BLOCK_EXPR@[9; 55)\n-      BLOCK@[9; 55)\n-        L_CURLY@[9; 10) \"{\"\n-        WHITESPACE@[10; 15) \"\\n    \"\n-        EXPR_STMT@[15; 38)\n-          CALL_EXPR@[15; 38)\n-            PATH_EXPR@[15; 18)\n-              PATH@[15; 18)\n-                PATH_SEGMENT@[15; 18)\n-                  NAME_REF@[15; 18)\n-                    IDENT@[15; 18) \"foo\"\n-            ARG_LIST@[18; 38)\n-              L_PAREN@[18; 19) \"(\"\n-              WHITESPACE@[19; 28) \"\\n        \"\n-              LITERAL@[28; 29)\n-                INT_NUMBER@[28; 29) \"1\"\n-              COMMA@[29; 30) \",\"\n-              WHITESPACE@[30; 31) \" \"\n-              LITERAL@[31; 32)\n-                INT_NUMBER@[31; 32) \"2\"\n-              WHITESPACE@[32; 37) \"\\n    \"\n-              R_PAREN@[37; 38) \")\"\n-        WHITESPACE@[38; 43) \"\\n    \"\n-        EXPR_STMT@[43; 53)\n-          RETURN_EXPR@[43; 52)\n-            RETURN_KW@[43; 49) \"return\"\n-            WHITESPACE@[49; 50) \" \"\n-            LITERAL@[50; 52)\n-              INT_NUMBER@[50; 52) \"92\"\n-          SEMICOLON@[52; 53) \";\"\n-        WHITESPACE@[53; 54) \"\\n\"\n-        R_CURLY@[54; 55) \"}\"\n-  WHITESPACE@[55; 56) \"\\n\"\n-error [38; 38): expected SEMICOLON\n+SOURCE_FILE@0..56\n+  FN_DEF@0..55\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..6\n+      IDENT@3..6 \"foo\"\n+    PARAM_LIST@6..8\n+      L_PAREN@6..7 \"(\"\n+      R_PAREN@7..8 \")\"\n+    WHITESPACE@8..9 \" \"\n+    BLOCK_EXPR@9..55\n+      BLOCK@9..55\n+        L_CURLY@9..10 \"{\"\n+        WHITESPACE@10..15 \"\\n    \"\n+        EXPR_STMT@15..38\n+          CALL_EXPR@15..38\n+            PATH_EXPR@15..18\n+              PATH@15..18\n+                PATH_SEGMENT@15..18\n+                  NAME_REF@15..18\n+                    IDENT@15..18 \"foo\"\n+            ARG_LIST@18..38\n+              L_PAREN@18..19 \"(\"\n+              WHITESPACE@19..28 \"\\n        \"\n+              LITERAL@28..29\n+                INT_NUMBER@28..29 \"1\"\n+              COMMA@29..30 \",\"\n+              WHITESPACE@30..31 \" \"\n+              LITERAL@31..32\n+                INT_NUMBER@31..32 \"2\"\n+              WHITESPACE@32..37 \"\\n    \"\n+              R_PAREN@37..38 \")\"\n+        WHITESPACE@38..43 \"\\n    \"\n+        EXPR_STMT@43..53\n+          RETURN_EXPR@43..52\n+            RETURN_KW@43..49 \"return\"\n+            WHITESPACE@49..50 \" \"\n+            LITERAL@50..52\n+              INT_NUMBER@50..52 \"92\"\n+          SEMICOLON@52..53 \";\"\n+        WHITESPACE@53..54 \"\\n\"\n+        R_CURLY@54..55 \"}\"\n+  WHITESPACE@55..56 \"\\n\"\n+error 38..38: expected SEMICOLON"}, {"sha": "7bc7183021395749a9946c28fa41bc58ad25f3a4", "filename": "crates/ra_syntax/test_data/parser/err/0017_incomplete_binexpr.rast", "status": "modified", "additions": 47, "deletions": 47, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0017_incomplete_binexpr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,47 +1,47 @@\n-SOURCE_FILE@[0; 47)\n-  FN_DEF@[0; 46)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 16)\n-      L_PAREN@[6; 7) \"(\"\n-      PARAM@[7; 15)\n-        BIND_PAT@[7; 10)\n-          NAME@[7; 10)\n-            IDENT@[7; 10) \"foo\"\n-        COLON@[10; 11) \":\"\n-        WHITESPACE@[11; 12) \" \"\n-        PATH_TYPE@[12; 15)\n-          PATH@[12; 15)\n-            PATH_SEGMENT@[12; 15)\n-              NAME_REF@[12; 15)\n-                IDENT@[12; 15) \"i32\"\n-      R_PAREN@[15; 16) \")\"\n-    WHITESPACE@[16; 17) \" \"\n-    BLOCK_EXPR@[17; 46)\n-      BLOCK@[17; 46)\n-        L_CURLY@[17; 18) \"{\"\n-        WHITESPACE@[18; 23) \"\\n    \"\n-        LET_STMT@[23; 36)\n-          LET_KW@[23; 26) \"let\"\n-          WHITESPACE@[26; 27) \" \"\n-          BIND_PAT@[27; 30)\n-            NAME@[27; 30)\n-              IDENT@[27; 30) \"bar\"\n-          WHITESPACE@[30; 31) \" \"\n-          EQ@[31; 32) \"=\"\n-          WHITESPACE@[32; 33) \" \"\n-          LITERAL@[33; 35)\n-            INT_NUMBER@[33; 35) \"92\"\n-          SEMICOLON@[35; 36) \";\"\n-        WHITESPACE@[36; 41) \"\\n    \"\n-        BIN_EXPR@[41; 44)\n-          LITERAL@[41; 42)\n-            INT_NUMBER@[41; 42) \"1\"\n-          WHITESPACE@[42; 43) \" \"\n-          PLUS@[43; 44) \"+\"\n-        WHITESPACE@[44; 45) \"\\n\"\n-        R_CURLY@[45; 46) \"}\"\n-  WHITESPACE@[46; 47) \"\\n\"\n-error [44; 44): expected expression\n+SOURCE_FILE@0..47\n+  FN_DEF@0..46\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..6\n+      IDENT@3..6 \"foo\"\n+    PARAM_LIST@6..16\n+      L_PAREN@6..7 \"(\"\n+      PARAM@7..15\n+        BIND_PAT@7..10\n+          NAME@7..10\n+            IDENT@7..10 \"foo\"\n+        COLON@10..11 \":\"\n+        WHITESPACE@11..12 \" \"\n+        PATH_TYPE@12..15\n+          PATH@12..15\n+            PATH_SEGMENT@12..15\n+              NAME_REF@12..15\n+                IDENT@12..15 \"i32\"\n+      R_PAREN@15..16 \")\"\n+    WHITESPACE@16..17 \" \"\n+    BLOCK_EXPR@17..46\n+      BLOCK@17..46\n+        L_CURLY@17..18 \"{\"\n+        WHITESPACE@18..23 \"\\n    \"\n+        LET_STMT@23..36\n+          LET_KW@23..26 \"let\"\n+          WHITESPACE@26..27 \" \"\n+          BIND_PAT@27..30\n+            NAME@27..30\n+              IDENT@27..30 \"bar\"\n+          WHITESPACE@30..31 \" \"\n+          EQ@31..32 \"=\"\n+          WHITESPACE@32..33 \" \"\n+          LITERAL@33..35\n+            INT_NUMBER@33..35 \"92\"\n+          SEMICOLON@35..36 \";\"\n+        WHITESPACE@36..41 \"\\n    \"\n+        BIN_EXPR@41..44\n+          LITERAL@41..42\n+            INT_NUMBER@41..42 \"1\"\n+          WHITESPACE@42..43 \" \"\n+          PLUS@43..44 \"+\"\n+        WHITESPACE@44..45 \"\\n\"\n+        R_CURLY@45..46 \"}\"\n+  WHITESPACE@46..47 \"\\n\"\n+error 44..44: expected expression"}, {"sha": "63194f974df9ea73dccce72d6a3bae6ef92b052f", "filename": "crates/ra_syntax/test_data/parser/err/0018_incomplete_fn.rast", "status": "modified", "additions": 132, "deletions": 132, "changes": 264, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0018_incomplete_fn.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,132 +1,132 @@\n-SOURCE_FILE@[0; 183)\n-  IMPL_DEF@[0; 182)\n-    IMPL_KW@[0; 4) \"impl\"\n-    WHITESPACE@[4; 5) \" \"\n-    PATH_TYPE@[5; 13)\n-      PATH@[5; 13)\n-        PATH_SEGMENT@[5; 13)\n-          NAME_REF@[5; 13)\n-            IDENT@[5; 13) \"FnScopes\"\n-    WHITESPACE@[13; 14) \" \"\n-    ITEM_LIST@[14; 182)\n-      L_CURLY@[14; 15) \"{\"\n-      WHITESPACE@[15; 20) \"\\n    \"\n-      FN_DEF@[20; 161)\n-        FN_KW@[20; 22) \"fn\"\n-        WHITESPACE@[22; 23) \" \"\n-        NAME@[23; 32)\n-          IDENT@[23; 32) \"new_scope\"\n-        PARAM_LIST@[32; 35)\n-          L_PAREN@[32; 33) \"(\"\n-          PARAM@[33; 34)\n-            REF_PAT@[33; 34)\n-              AMP@[33; 34) \"&\"\n-          R_PAREN@[34; 35) \")\"\n-        WHITESPACE@[35; 36) \" \"\n-        RET_TYPE@[36; 46)\n-          THIN_ARROW@[36; 38) \"->\"\n-          WHITESPACE@[38; 39) \" \"\n-          PATH_TYPE@[39; 46)\n-            PATH@[39; 46)\n-              PATH_SEGMENT@[39; 46)\n-                NAME_REF@[39; 46)\n-                  IDENT@[39; 46) \"ScopeId\"\n-        WHITESPACE@[46; 47) \" \"\n-        BLOCK_EXPR@[47; 161)\n-          BLOCK@[47; 161)\n-            L_CURLY@[47; 48) \"{\"\n-            WHITESPACE@[48; 57) \"\\n        \"\n-            LET_STMT@[57; 85)\n-              LET_KW@[57; 60) \"let\"\n-              WHITESPACE@[60; 61) \" \"\n-              BIND_PAT@[61; 64)\n-                NAME@[61; 64)\n-                  IDENT@[61; 64) \"res\"\n-              WHITESPACE@[64; 65) \" \"\n-              EQ@[65; 66) \"=\"\n-              WHITESPACE@[66; 67) \" \"\n-              METHOD_CALL_EXPR@[67; 84)\n-                FIELD_EXPR@[67; 78)\n-                  PATH_EXPR@[67; 71)\n-                    PATH@[67; 71)\n-                      PATH_SEGMENT@[67; 71)\n-                        SELF_KW@[67; 71) \"self\"\n-                  DOT@[71; 72) \".\"\n-                  NAME_REF@[72; 78)\n-                    IDENT@[72; 78) \"scopes\"\n-                DOT@[78; 79) \".\"\n-                NAME_REF@[79; 82)\n-                  IDENT@[79; 82) \"len\"\n-                ARG_LIST@[82; 84)\n-                  L_PAREN@[82; 83) \"(\"\n-                  R_PAREN@[83; 84) \")\"\n-              SEMICOLON@[84; 85) \";\"\n-            WHITESPACE@[85; 94) \"\\n        \"\n-            METHOD_CALL_EXPR@[94; 155)\n-              FIELD_EXPR@[94; 105)\n-                PATH_EXPR@[94; 98)\n-                  PATH@[94; 98)\n-                    PATH_SEGMENT@[94; 98)\n-                      SELF_KW@[94; 98) \"self\"\n-                DOT@[98; 99) \".\"\n-                NAME_REF@[99; 105)\n-                  IDENT@[99; 105) \"scopes\"\n-              DOT@[105; 106) \".\"\n-              NAME_REF@[106; 110)\n-                IDENT@[106; 110) \"push\"\n-              ARG_LIST@[110; 155)\n-                L_PAREN@[110; 111) \"(\"\n-                RECORD_LIT@[111; 154)\n-                  PATH@[111; 120)\n-                    PATH_SEGMENT@[111; 120)\n-                      NAME_REF@[111; 120)\n-                        IDENT@[111; 120) \"ScopeData\"\n-                  WHITESPACE@[120; 121) \" \"\n-                  RECORD_FIELD_LIST@[121; 154)\n-                    L_CURLY@[121; 122) \"{\"\n-                    WHITESPACE@[122; 123) \" \"\n-                    RECORD_FIELD@[123; 135)\n-                      NAME_REF@[123; 129)\n-                        IDENT@[123; 129) \"parent\"\n-                      COLON@[129; 130) \":\"\n-                      WHITESPACE@[130; 131) \" \"\n-                      PATH_EXPR@[131; 135)\n-                        PATH@[131; 135)\n-                          PATH_SEGMENT@[131; 135)\n-                            NAME_REF@[131; 135)\n-                              IDENT@[131; 135) \"None\"\n-                    COMMA@[135; 136) \",\"\n-                    WHITESPACE@[136; 137) \" \"\n-                    RECORD_FIELD@[137; 152)\n-                      NAME_REF@[137; 144)\n-                        IDENT@[137; 144) \"entries\"\n-                      COLON@[144; 145) \":\"\n-                      WHITESPACE@[145; 146) \" \"\n-                      MACRO_CALL@[146; 152)\n-                        PATH@[146; 149)\n-                          PATH_SEGMENT@[146; 149)\n-                            NAME_REF@[146; 149)\n-                              IDENT@[146; 149) \"vec\"\n-                        BANG@[149; 150) \"!\"\n-                        TOKEN_TREE@[150; 152)\n-                          L_BRACK@[150; 151) \"[\"\n-                          R_BRACK@[151; 152) \"]\"\n-                    WHITESPACE@[152; 153) \" \"\n-                    R_CURLY@[153; 154) \"}\"\n-                R_PAREN@[154; 155) \")\"\n-            WHITESPACE@[155; 160) \"\\n    \"\n-            R_CURLY@[160; 161) \"}\"\n-      WHITESPACE@[161; 167) \"\\n\\n    \"\n-      FN_DEF@[167; 180)\n-        FN_KW@[167; 169) \"fn\"\n-        WHITESPACE@[169; 170) \" \"\n-        NAME@[170; 180)\n-          IDENT@[170; 180) \"set_parent\"\n-      WHITESPACE@[180; 181) \"\\n\"\n-      R_CURLY@[181; 182) \"}\"\n-  WHITESPACE@[182; 183) \"\\n\"\n-error [34; 34): expected pattern\n-error [34; 34): expected COLON\n-error [34; 34): expected type\n-error [180; 180): expected function arguments\n-error [180; 180): expected a block\n+SOURCE_FILE@0..183\n+  IMPL_DEF@0..182\n+    IMPL_KW@0..4 \"impl\"\n+    WHITESPACE@4..5 \" \"\n+    PATH_TYPE@5..13\n+      PATH@5..13\n+        PATH_SEGMENT@5..13\n+          NAME_REF@5..13\n+            IDENT@5..13 \"FnScopes\"\n+    WHITESPACE@13..14 \" \"\n+    ITEM_LIST@14..182\n+      L_CURLY@14..15 \"{\"\n+      WHITESPACE@15..20 \"\\n    \"\n+      FN_DEF@20..161\n+        FN_KW@20..22 \"fn\"\n+        WHITESPACE@22..23 \" \"\n+        NAME@23..32\n+          IDENT@23..32 \"new_scope\"\n+        PARAM_LIST@32..35\n+          L_PAREN@32..33 \"(\"\n+          PARAM@33..34\n+            REF_PAT@33..34\n+              AMP@33..34 \"&\"\n+          R_PAREN@34..35 \")\"\n+        WHITESPACE@35..36 \" \"\n+        RET_TYPE@36..46\n+          THIN_ARROW@36..38 \"->\"\n+          WHITESPACE@38..39 \" \"\n+          PATH_TYPE@39..46\n+            PATH@39..46\n+              PATH_SEGMENT@39..46\n+                NAME_REF@39..46\n+                  IDENT@39..46 \"ScopeId\"\n+        WHITESPACE@46..47 \" \"\n+        BLOCK_EXPR@47..161\n+          BLOCK@47..161\n+            L_CURLY@47..48 \"{\"\n+            WHITESPACE@48..57 \"\\n        \"\n+            LET_STMT@57..85\n+              LET_KW@57..60 \"let\"\n+              WHITESPACE@60..61 \" \"\n+              BIND_PAT@61..64\n+                NAME@61..64\n+                  IDENT@61..64 \"res\"\n+              WHITESPACE@64..65 \" \"\n+              EQ@65..66 \"=\"\n+              WHITESPACE@66..67 \" \"\n+              METHOD_CALL_EXPR@67..84\n+                FIELD_EXPR@67..78\n+                  PATH_EXPR@67..71\n+                    PATH@67..71\n+                      PATH_SEGMENT@67..71\n+                        SELF_KW@67..71 \"self\"\n+                  DOT@71..72 \".\"\n+                  NAME_REF@72..78\n+                    IDENT@72..78 \"scopes\"\n+                DOT@78..79 \".\"\n+                NAME_REF@79..82\n+                  IDENT@79..82 \"len\"\n+                ARG_LIST@82..84\n+                  L_PAREN@82..83 \"(\"\n+                  R_PAREN@83..84 \")\"\n+              SEMICOLON@84..85 \";\"\n+            WHITESPACE@85..94 \"\\n        \"\n+            METHOD_CALL_EXPR@94..155\n+              FIELD_EXPR@94..105\n+                PATH_EXPR@94..98\n+                  PATH@94..98\n+                    PATH_SEGMENT@94..98\n+                      SELF_KW@94..98 \"self\"\n+                DOT@98..99 \".\"\n+                NAME_REF@99..105\n+                  IDENT@99..105 \"scopes\"\n+              DOT@105..106 \".\"\n+              NAME_REF@106..110\n+                IDENT@106..110 \"push\"\n+              ARG_LIST@110..155\n+                L_PAREN@110..111 \"(\"\n+                RECORD_LIT@111..154\n+                  PATH@111..120\n+                    PATH_SEGMENT@111..120\n+                      NAME_REF@111..120\n+                        IDENT@111..120 \"ScopeData\"\n+                  WHITESPACE@120..121 \" \"\n+                  RECORD_FIELD_LIST@121..154\n+                    L_CURLY@121..122 \"{\"\n+                    WHITESPACE@122..123 \" \"\n+                    RECORD_FIELD@123..135\n+                      NAME_REF@123..129\n+                        IDENT@123..129 \"parent\"\n+                      COLON@129..130 \":\"\n+                      WHITESPACE@130..131 \" \"\n+                      PATH_EXPR@131..135\n+                        PATH@131..135\n+                          PATH_SEGMENT@131..135\n+                            NAME_REF@131..135\n+                              IDENT@131..135 \"None\"\n+                    COMMA@135..136 \",\"\n+                    WHITESPACE@136..137 \" \"\n+                    RECORD_FIELD@137..152\n+                      NAME_REF@137..144\n+                        IDENT@137..144 \"entries\"\n+                      COLON@144..145 \":\"\n+                      WHITESPACE@145..146 \" \"\n+                      MACRO_CALL@146..152\n+                        PATH@146..149\n+                          PATH_SEGMENT@146..149\n+                            NAME_REF@146..149\n+                              IDENT@146..149 \"vec\"\n+                        BANG@149..150 \"!\"\n+                        TOKEN_TREE@150..152\n+                          L_BRACK@150..151 \"[\"\n+                          R_BRACK@151..152 \"]\"\n+                    WHITESPACE@152..153 \" \"\n+                    R_CURLY@153..154 \"}\"\n+                R_PAREN@154..155 \")\"\n+            WHITESPACE@155..160 \"\\n    \"\n+            R_CURLY@160..161 \"}\"\n+      WHITESPACE@161..167 \"\\n\\n    \"\n+      FN_DEF@167..180\n+        FN_KW@167..169 \"fn\"\n+        WHITESPACE@169..170 \" \"\n+        NAME@170..180\n+          IDENT@170..180 \"set_parent\"\n+      WHITESPACE@180..181 \"\\n\"\n+      R_CURLY@181..182 \"}\"\n+  WHITESPACE@182..183 \"\\n\"\n+error 34..34: expected pattern\n+error 34..34: expected COLON\n+error 34..34: expected type\n+error 180..180: expected function arguments\n+error 180..180: expected a block"}, {"sha": "d20bb60f1d29514cbcb63d8d495cab059bc8c1f1", "filename": "crates/ra_syntax/test_data/parser/err/0019_let_recover.rast", "status": "modified", "additions": 107, "deletions": 107, "changes": 214, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0019_let_recover.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,107 +1,107 @@\n-SOURCE_FILE@[0; 139)\n-  FN_DEF@[0; 138)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 8)\n-      L_PAREN@[6; 7) \"(\"\n-      R_PAREN@[7; 8) \")\"\n-    WHITESPACE@[8; 9) \" \"\n-    BLOCK_EXPR@[9; 138)\n-      BLOCK@[9; 138)\n-        L_CURLY@[9; 10) \"{\"\n-        WHITESPACE@[10; 15) \"\\n    \"\n-        LET_STMT@[15; 24)\n-          LET_KW@[15; 18) \"let\"\n-          WHITESPACE@[18; 19) \" \"\n-          BIND_PAT@[19; 22)\n-            NAME@[19; 22)\n-              IDENT@[19; 22) \"foo\"\n-          WHITESPACE@[22; 23) \" \"\n-          EQ@[23; 24) \"=\"\n-        WHITESPACE@[24; 29) \"\\n    \"\n-        LET_STMT@[29; 41)\n-          LET_KW@[29; 32) \"let\"\n-          WHITESPACE@[32; 33) \" \"\n-          BIND_PAT@[33; 36)\n-            NAME@[33; 36)\n-              IDENT@[33; 36) \"bar\"\n-          WHITESPACE@[36; 37) \" \"\n-          EQ@[37; 38) \"=\"\n-          WHITESPACE@[38; 39) \" \"\n-          LITERAL@[39; 40)\n-            INT_NUMBER@[39; 40) \"1\"\n-          SEMICOLON@[40; 41) \";\"\n-        WHITESPACE@[41; 46) \"\\n    \"\n-        LET_STMT@[46; 49)\n-          LET_KW@[46; 49) \"let\"\n-        WHITESPACE@[49; 54) \"\\n    \"\n-        LET_STMT@[54; 67)\n-          LET_KW@[54; 57) \"let\"\n-          WHITESPACE@[57; 58) \" \"\n-          BIND_PAT@[58; 61)\n-            NAME@[58; 61)\n-              IDENT@[58; 61) \"baz\"\n-          WHITESPACE@[61; 62) \" \"\n-          EQ@[62; 63) \"=\"\n-          WHITESPACE@[63; 64) \" \"\n-          LITERAL@[64; 66)\n-            INT_NUMBER@[64; 66) \"92\"\n-          SEMICOLON@[66; 67) \";\"\n-        WHITESPACE@[67; 72) \"\\n    \"\n-        LET_STMT@[72; 75)\n-          LET_KW@[72; 75) \"let\"\n-        WHITESPACE@[75; 80) \"\\n    \"\n-        EXPR_STMT@[80; 90)\n-          IF_EXPR@[80; 90)\n-            IF_KW@[80; 82) \"if\"\n-            WHITESPACE@[82; 83) \" \"\n-            CONDITION@[83; 87)\n-              LITERAL@[83; 87)\n-                TRUE_KW@[83; 87) \"true\"\n-            WHITESPACE@[87; 88) \" \"\n-            BLOCK_EXPR@[88; 90)\n-              BLOCK@[88; 90)\n-                L_CURLY@[88; 89) \"{\"\n-                R_CURLY@[89; 90) \"}\"\n-        WHITESPACE@[90; 95) \"\\n    \"\n-        LET_STMT@[95; 98)\n-          LET_KW@[95; 98) \"let\"\n-        WHITESPACE@[98; 103) \"\\n    \"\n-        EXPR_STMT@[103; 116)\n-          WHILE_EXPR@[103; 116)\n-            WHILE_KW@[103; 108) \"while\"\n-            WHITESPACE@[108; 109) \" \"\n-            CONDITION@[109; 113)\n-              LITERAL@[109; 113)\n-                TRUE_KW@[109; 113) \"true\"\n-            WHITESPACE@[113; 114) \" \"\n-            BLOCK_EXPR@[114; 116)\n-              BLOCK@[114; 116)\n-                L_CURLY@[114; 115) \"{\"\n-                R_CURLY@[115; 116) \"}\"\n-        WHITESPACE@[116; 121) \"\\n    \"\n-        LET_STMT@[121; 124)\n-          LET_KW@[121; 124) \"let\"\n-        WHITESPACE@[124; 129) \"\\n    \"\n-        LOOP_EXPR@[129; 136)\n-          LOOP_KW@[129; 133) \"loop\"\n-          WHITESPACE@[133; 134) \" \"\n-          BLOCK_EXPR@[134; 136)\n-            BLOCK@[134; 136)\n-              L_CURLY@[134; 135) \"{\"\n-              R_CURLY@[135; 136) \"}\"\n-        WHITESPACE@[136; 137) \"\\n\"\n-        R_CURLY@[137; 138) \"}\"\n-  WHITESPACE@[138; 139) \"\\n\"\n-error [24; 24): expected expression\n-error [24; 24): expected SEMICOLON\n-error [49; 49): expected pattern\n-error [49; 49): expected SEMICOLON\n-error [75; 75): expected pattern\n-error [75; 75): expected SEMICOLON\n-error [98; 98): expected pattern\n-error [98; 98): expected SEMICOLON\n-error [124; 124): expected pattern\n-error [124; 124): expected SEMICOLON\n+SOURCE_FILE@0..139\n+  FN_DEF@0..138\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..6\n+      IDENT@3..6 \"foo\"\n+    PARAM_LIST@6..8\n+      L_PAREN@6..7 \"(\"\n+      R_PAREN@7..8 \")\"\n+    WHITESPACE@8..9 \" \"\n+    BLOCK_EXPR@9..138\n+      BLOCK@9..138\n+        L_CURLY@9..10 \"{\"\n+        WHITESPACE@10..15 \"\\n    \"\n+        LET_STMT@15..24\n+          LET_KW@15..18 \"let\"\n+          WHITESPACE@18..19 \" \"\n+          BIND_PAT@19..22\n+            NAME@19..22\n+              IDENT@19..22 \"foo\"\n+          WHITESPACE@22..23 \" \"\n+          EQ@23..24 \"=\"\n+        WHITESPACE@24..29 \"\\n    \"\n+        LET_STMT@29..41\n+          LET_KW@29..32 \"let\"\n+          WHITESPACE@32..33 \" \"\n+          BIND_PAT@33..36\n+            NAME@33..36\n+              IDENT@33..36 \"bar\"\n+          WHITESPACE@36..37 \" \"\n+          EQ@37..38 \"=\"\n+          WHITESPACE@38..39 \" \"\n+          LITERAL@39..40\n+            INT_NUMBER@39..40 \"1\"\n+          SEMICOLON@40..41 \";\"\n+        WHITESPACE@41..46 \"\\n    \"\n+        LET_STMT@46..49\n+          LET_KW@46..49 \"let\"\n+        WHITESPACE@49..54 \"\\n    \"\n+        LET_STMT@54..67\n+          LET_KW@54..57 \"let\"\n+          WHITESPACE@57..58 \" \"\n+          BIND_PAT@58..61\n+            NAME@58..61\n+              IDENT@58..61 \"baz\"\n+          WHITESPACE@61..62 \" \"\n+          EQ@62..63 \"=\"\n+          WHITESPACE@63..64 \" \"\n+          LITERAL@64..66\n+            INT_NUMBER@64..66 \"92\"\n+          SEMICOLON@66..67 \";\"\n+        WHITESPACE@67..72 \"\\n    \"\n+        LET_STMT@72..75\n+          LET_KW@72..75 \"let\"\n+        WHITESPACE@75..80 \"\\n    \"\n+        EXPR_STMT@80..90\n+          IF_EXPR@80..90\n+            IF_KW@80..82 \"if\"\n+            WHITESPACE@82..83 \" \"\n+            CONDITION@83..87\n+              LITERAL@83..87\n+                TRUE_KW@83..87 \"true\"\n+            WHITESPACE@87..88 \" \"\n+            BLOCK_EXPR@88..90\n+              BLOCK@88..90\n+                L_CURLY@88..89 \"{\"\n+                R_CURLY@89..90 \"}\"\n+        WHITESPACE@90..95 \"\\n    \"\n+        LET_STMT@95..98\n+          LET_KW@95..98 \"let\"\n+        WHITESPACE@98..103 \"\\n    \"\n+        EXPR_STMT@103..116\n+          WHILE_EXPR@103..116\n+            WHILE_KW@103..108 \"while\"\n+            WHITESPACE@108..109 \" \"\n+            CONDITION@109..113\n+              LITERAL@109..113\n+                TRUE_KW@109..113 \"true\"\n+            WHITESPACE@113..114 \" \"\n+            BLOCK_EXPR@114..116\n+              BLOCK@114..116\n+                L_CURLY@114..115 \"{\"\n+                R_CURLY@115..116 \"}\"\n+        WHITESPACE@116..121 \"\\n    \"\n+        LET_STMT@121..124\n+          LET_KW@121..124 \"let\"\n+        WHITESPACE@124..129 \"\\n    \"\n+        LOOP_EXPR@129..136\n+          LOOP_KW@129..133 \"loop\"\n+          WHITESPACE@133..134 \" \"\n+          BLOCK_EXPR@134..136\n+            BLOCK@134..136\n+              L_CURLY@134..135 \"{\"\n+              R_CURLY@135..136 \"}\"\n+        WHITESPACE@136..137 \"\\n\"\n+        R_CURLY@137..138 \"}\"\n+  WHITESPACE@138..139 \"\\n\"\n+error 24..24: expected expression\n+error 24..24: expected SEMICOLON\n+error 49..49: expected pattern\n+error 49..49: expected SEMICOLON\n+error 75..75: expected pattern\n+error 75..75: expected SEMICOLON\n+error 98..98: expected pattern\n+error 98..98: expected SEMICOLON\n+error 124..124: expected pattern\n+error 124..124: expected SEMICOLON"}, {"sha": "1185f44f982ace969da058a6ac1e8cdecd632dfa", "filename": "crates/ra_syntax/test_data/parser/err/0020_fn_recover.rast", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0020_fn_recover.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,21 +1,21 @@\n-SOURCE_FILE@[0; 16)\n-  FN_DEF@[0; 2)\n-    FN_KW@[0; 2) \"fn\"\n-  WHITESPACE@[2; 4) \"\\n\\n\"\n-  FN_DEF@[4; 15)\n-    FN_KW@[4; 6) \"fn\"\n-    WHITESPACE@[6; 7) \" \"\n-    NAME@[7; 10)\n-      IDENT@[7; 10) \"foo\"\n-    PARAM_LIST@[10; 12)\n-      L_PAREN@[10; 11) \"(\"\n-      R_PAREN@[11; 12) \")\"\n-    WHITESPACE@[12; 13) \" \"\n-    BLOCK_EXPR@[13; 15)\n-      BLOCK@[13; 15)\n-        L_CURLY@[13; 14) \"{\"\n-        R_CURLY@[14; 15) \"}\"\n-  WHITESPACE@[15; 16) \"\\n\"\n-error [2; 2): expected a name\n-error [2; 2): expected function arguments\n-error [2; 2): expected a block\n+SOURCE_FILE@0..16\n+  FN_DEF@0..2\n+    FN_KW@0..2 \"fn\"\n+  WHITESPACE@2..4 \"\\n\\n\"\n+  FN_DEF@4..15\n+    FN_KW@4..6 \"fn\"\n+    WHITESPACE@6..7 \" \"\n+    NAME@7..10\n+      IDENT@7..10 \"foo\"\n+    PARAM_LIST@10..12\n+      L_PAREN@10..11 \"(\"\n+      R_PAREN@11..12 \")\"\n+    WHITESPACE@12..13 \" \"\n+    BLOCK_EXPR@13..15\n+      BLOCK@13..15\n+        L_CURLY@13..14 \"{\"\n+        R_CURLY@14..15 \"}\"\n+  WHITESPACE@15..16 \"\\n\"\n+error 2..2: expected a name\n+error 2..2: expected function arguments\n+error 2..2: expected a block"}, {"sha": "c7bf4caa087cdb030483fa364dfa2a9655610d0e", "filename": "crates/ra_syntax/test_data/parser/err/0021_incomplete_param.rast", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0021_incomplete_param.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,35 +1,35 @@\n-SOURCE_FILE@[0; 22)\n-  FN_DEF@[0; 21)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 17)\n-      L_PAREN@[6; 7) \"(\"\n-      PARAM@[7; 13)\n-        BIND_PAT@[7; 8)\n-          NAME@[7; 8)\n-            IDENT@[7; 8) \"x\"\n-        COLON@[8; 9) \":\"\n-        WHITESPACE@[9; 10) \" \"\n-        PATH_TYPE@[10; 13)\n-          PATH@[10; 13)\n-            PATH_SEGMENT@[10; 13)\n-              NAME_REF@[10; 13)\n-                IDENT@[10; 13) \"i32\"\n-      COMMA@[13; 14) \",\"\n-      WHITESPACE@[14; 15) \" \"\n-      PARAM@[15; 16)\n-        BIND_PAT@[15; 16)\n-          NAME@[15; 16)\n-            IDENT@[15; 16) \"y\"\n-      R_PAREN@[16; 17) \")\"\n-    WHITESPACE@[17; 18) \" \"\n-    BLOCK_EXPR@[18; 21)\n-      BLOCK@[18; 21)\n-        L_CURLY@[18; 19) \"{\"\n-        WHITESPACE@[19; 20) \"\\n\"\n-        R_CURLY@[20; 21) \"}\"\n-  WHITESPACE@[21; 22) \"\\n\"\n-error [16; 16): expected COLON\n-error [16; 16): expected type\n+SOURCE_FILE@0..22\n+  FN_DEF@0..21\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..6\n+      IDENT@3..6 \"foo\"\n+    PARAM_LIST@6..17\n+      L_PAREN@6..7 \"(\"\n+      PARAM@7..13\n+        BIND_PAT@7..8\n+          NAME@7..8\n+            IDENT@7..8 \"x\"\n+        COLON@8..9 \":\"\n+        WHITESPACE@9..10 \" \"\n+        PATH_TYPE@10..13\n+          PATH@10..13\n+            PATH_SEGMENT@10..13\n+              NAME_REF@10..13\n+                IDENT@10..13 \"i32\"\n+      COMMA@13..14 \",\"\n+      WHITESPACE@14..15 \" \"\n+      PARAM@15..16\n+        BIND_PAT@15..16\n+          NAME@15..16\n+            IDENT@15..16 \"y\"\n+      R_PAREN@16..17 \")\"\n+    WHITESPACE@17..18 \" \"\n+    BLOCK_EXPR@18..21\n+      BLOCK@18..21\n+        L_CURLY@18..19 \"{\"\n+        WHITESPACE@19..20 \"\\n\"\n+        R_CURLY@20..21 \"}\"\n+  WHITESPACE@21..22 \"\\n\"\n+error 16..16: expected COLON\n+error 16..16: expected type"}, {"sha": "cc0d75cc86ad8b98d20e323e6f1ef5e1a8db1c3f", "filename": "crates/ra_syntax/test_data/parser/err/0022_bad_exprs.rast", "status": "modified", "additions": 183, "deletions": 183, "changes": 366, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0022_bad_exprs.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,183 +1,183 @@\n-SOURCE_FILE@[0; 112)\n-  FN_DEF@[0; 33)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 4)\n-      IDENT@[3; 4) \"a\"\n-    PARAM_LIST@[4; 6)\n-      L_PAREN@[4; 5) \"(\"\n-      R_PAREN@[5; 6) \")\"\n-    WHITESPACE@[6; 7) \" \"\n-    BLOCK_EXPR@[7; 33)\n-      BLOCK@[7; 33)\n-        L_CURLY@[7; 8) \"{\"\n-        WHITESPACE@[8; 9) \" \"\n-        EXPR_STMT@[9; 17)\n-          ARRAY_EXPR@[9; 17)\n-            L_BRACK@[9; 10) \"[\"\n-            LITERAL@[10; 11)\n-              INT_NUMBER@[10; 11) \"1\"\n-            COMMA@[11; 12) \",\"\n-            WHITESPACE@[12; 13) \" \"\n-            LITERAL@[13; 14)\n-              INT_NUMBER@[13; 14) \"2\"\n-            COMMA@[14; 15) \",\"\n-            WHITESPACE@[15; 16) \" \"\n-            ERROR@[16; 17)\n-              AT@[16; 17) \"@\"\n-        EXPR_STMT@[17; 18)\n-          ERROR@[17; 18)\n-            COMMA@[17; 18) \",\"\n-        WHITESPACE@[18; 19) \" \"\n-        STRUCT_DEF@[19; 26)\n-          STRUCT_KW@[19; 25) \"struct\"\n-          ERROR@[25; 26)\n-            COMMA@[25; 26) \",\"\n-        WHITESPACE@[26; 27) \" \"\n-        LET_STMT@[27; 31)\n-          LET_KW@[27; 30) \"let\"\n-          ERROR@[30; 31)\n-            R_BRACK@[30; 31) \"]\"\n-        WHITESPACE@[31; 32) \" \"\n-        R_CURLY@[32; 33) \"}\"\n-  WHITESPACE@[33; 34) \"\\n\"\n-  FN_DEF@[34; 68)\n-    FN_KW@[34; 36) \"fn\"\n-    WHITESPACE@[36; 37) \" \"\n-    NAME@[37; 38)\n-      IDENT@[37; 38) \"b\"\n-    PARAM_LIST@[38; 40)\n-      L_PAREN@[38; 39) \"(\"\n-      R_PAREN@[39; 40) \")\"\n-    WHITESPACE@[40; 41) \" \"\n-    BLOCK_EXPR@[41; 68)\n-      BLOCK@[41; 68)\n-        L_CURLY@[41; 42) \"{\"\n-        WHITESPACE@[42; 43) \" \"\n-        EXPR_STMT@[43; 54)\n-          CALL_EXPR@[43; 54)\n-            PATH_EXPR@[43; 46)\n-              PATH@[43; 46)\n-                PATH_SEGMENT@[43; 46)\n-                  NAME_REF@[43; 46)\n-                    IDENT@[43; 46) \"foo\"\n-            ARG_LIST@[46; 54)\n-              L_PAREN@[46; 47) \"(\"\n-              LITERAL@[47; 48)\n-                INT_NUMBER@[47; 48) \"1\"\n-              COMMA@[48; 49) \",\"\n-              WHITESPACE@[49; 50) \" \"\n-              LITERAL@[50; 51)\n-                INT_NUMBER@[50; 51) \"2\"\n-              COMMA@[51; 52) \",\"\n-              WHITESPACE@[52; 53) \" \"\n-              ERROR@[53; 54)\n-                AT@[53; 54) \"@\"\n-        EXPR_STMT@[54; 55)\n-          ERROR@[54; 55)\n-            COMMA@[54; 55) \",\"\n-        WHITESPACE@[55; 56) \" \"\n-        IMPL_DEF@[56; 60)\n-          IMPL_KW@[56; 60) \"impl\"\n-        EXPR_STMT@[60; 61)\n-          ERROR@[60; 61)\n-            COMMA@[60; 61) \",\"\n-        WHITESPACE@[61; 62) \" \"\n-        LET_STMT@[62; 65)\n-          LET_KW@[62; 65) \"let\"\n-        ERROR@[65; 66)\n-          R_PAREN@[65; 66) \")\"\n-        WHITESPACE@[66; 67) \" \"\n-        R_CURLY@[67; 68) \"}\"\n-  WHITESPACE@[68; 69) \"\\n\"\n-  FN_DEF@[69; 111)\n-    FN_KW@[69; 71) \"fn\"\n-    WHITESPACE@[71; 72) \" \"\n-    NAME@[72; 73)\n-      IDENT@[72; 73) \"c\"\n-    PARAM_LIST@[73; 75)\n-      L_PAREN@[73; 74) \"(\"\n-      R_PAREN@[74; 75) \")\"\n-    WHITESPACE@[75; 76) \" \"\n-    BLOCK_EXPR@[76; 111)\n-      BLOCK@[76; 111)\n-        L_CURLY@[76; 77) \"{\"\n-        WHITESPACE@[77; 78) \" \"\n-        EXPR_STMT@[78; 93)\n-          METHOD_CALL_EXPR@[78; 93)\n-            PATH_EXPR@[78; 81)\n-              PATH@[78; 81)\n-                PATH_SEGMENT@[78; 81)\n-                  NAME_REF@[78; 81)\n-                    IDENT@[78; 81) \"foo\"\n-            DOT@[81; 82) \".\"\n-            NAME_REF@[82; 85)\n-              IDENT@[82; 85) \"bar\"\n-            ARG_LIST@[85; 93)\n-              L_PAREN@[85; 86) \"(\"\n-              LITERAL@[86; 87)\n-                INT_NUMBER@[86; 87) \"1\"\n-              COMMA@[87; 88) \",\"\n-              WHITESPACE@[88; 89) \" \"\n-              LITERAL@[89; 90)\n-                INT_NUMBER@[89; 90) \"2\"\n-              COMMA@[90; 91) \",\"\n-              WHITESPACE@[91; 92) \" \"\n-              ERROR@[92; 93)\n-                AT@[92; 93) \"@\"\n-        EXPR_STMT@[93; 94)\n-          ERROR@[93; 94)\n-            COMMA@[93; 94) \",\"\n-        WHITESPACE@[94; 95) \" \"\n-        EXPR_STMT@[95; 96)\n-          ERROR@[95; 96)\n-            R_BRACK@[95; 96) \"]\"\n-        EXPR_STMT@[96; 97)\n-          ERROR@[96; 97)\n-            COMMA@[96; 97) \",\"\n-        WHITESPACE@[97; 98) \" \"\n-        TRAIT_DEF@[98; 104)\n-          TRAIT_KW@[98; 103) \"trait\"\n-          ERROR@[103; 104)\n-            COMMA@[103; 104) \",\"\n-        WHITESPACE@[104; 105) \" \"\n-        LET_STMT@[105; 108)\n-          LET_KW@[105; 108) \"let\"\n-        ERROR@[108; 109)\n-          R_PAREN@[108; 109) \")\"\n-        WHITESPACE@[109; 110) \" \"\n-        R_CURLY@[110; 111) \"}\"\n-  WHITESPACE@[111; 112) \"\\n\"\n-error [16; 16): expected expression\n-error [17; 17): expected R_BRACK\n-error [17; 17): expected SEMICOLON\n-error [17; 17): expected expression\n-error [18; 18): expected SEMICOLON\n-error [25; 25): expected a name\n-error [26; 26): expected `;`, `{`, or `(`\n-error [30; 30): expected pattern\n-error [31; 31): expected SEMICOLON\n-error [53; 53): expected expression\n-error [54; 54): expected SEMICOLON\n-error [54; 54): expected expression\n-error [55; 55): expected SEMICOLON\n-error [60; 60): expected type\n-error [60; 60): expected `{`\n-error [60; 60): expected expression\n-error [61; 61): expected SEMICOLON\n-error [65; 65): expected pattern\n-error [65; 65): expected SEMICOLON\n-error [65; 65): expected expression\n-error [92; 92): expected expression\n-error [93; 93): expected SEMICOLON\n-error [93; 93): expected expression\n-error [94; 94): expected SEMICOLON\n-error [95; 95): expected expression\n-error [96; 96): expected SEMICOLON\n-error [96; 96): expected expression\n-error [97; 97): expected SEMICOLON\n-error [103; 103): expected a name\n-error [104; 104): expected `{`\n-error [108; 108): expected pattern\n-error [108; 108): expected SEMICOLON\n-error [108; 108): expected expression\n+SOURCE_FILE@0..112\n+  FN_DEF@0..33\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..4\n+      IDENT@3..4 \"a\"\n+    PARAM_LIST@4..6\n+      L_PAREN@4..5 \"(\"\n+      R_PAREN@5..6 \")\"\n+    WHITESPACE@6..7 \" \"\n+    BLOCK_EXPR@7..33\n+      BLOCK@7..33\n+        L_CURLY@7..8 \"{\"\n+        WHITESPACE@8..9 \" \"\n+        EXPR_STMT@9..17\n+          ARRAY_EXPR@9..17\n+            L_BRACK@9..10 \"[\"\n+            LITERAL@10..11\n+              INT_NUMBER@10..11 \"1\"\n+            COMMA@11..12 \",\"\n+            WHITESPACE@12..13 \" \"\n+            LITERAL@13..14\n+              INT_NUMBER@13..14 \"2\"\n+            COMMA@14..15 \",\"\n+            WHITESPACE@15..16 \" \"\n+            ERROR@16..17\n+              AT@16..17 \"@\"\n+        EXPR_STMT@17..18\n+          ERROR@17..18\n+            COMMA@17..18 \",\"\n+        WHITESPACE@18..19 \" \"\n+        STRUCT_DEF@19..26\n+          STRUCT_KW@19..25 \"struct\"\n+          ERROR@25..26\n+            COMMA@25..26 \",\"\n+        WHITESPACE@26..27 \" \"\n+        LET_STMT@27..31\n+          LET_KW@27..30 \"let\"\n+          ERROR@30..31\n+            R_BRACK@30..31 \"]\"\n+        WHITESPACE@31..32 \" \"\n+        R_CURLY@32..33 \"}\"\n+  WHITESPACE@33..34 \"\\n\"\n+  FN_DEF@34..68\n+    FN_KW@34..36 \"fn\"\n+    WHITESPACE@36..37 \" \"\n+    NAME@37..38\n+      IDENT@37..38 \"b\"\n+    PARAM_LIST@38..40\n+      L_PAREN@38..39 \"(\"\n+      R_PAREN@39..40 \")\"\n+    WHITESPACE@40..41 \" \"\n+    BLOCK_EXPR@41..68\n+      BLOCK@41..68\n+        L_CURLY@41..42 \"{\"\n+        WHITESPACE@42..43 \" \"\n+        EXPR_STMT@43..54\n+          CALL_EXPR@43..54\n+            PATH_EXPR@43..46\n+              PATH@43..46\n+                PATH_SEGMENT@43..46\n+                  NAME_REF@43..46\n+                    IDENT@43..46 \"foo\"\n+            ARG_LIST@46..54\n+              L_PAREN@46..47 \"(\"\n+              LITERAL@47..48\n+                INT_NUMBER@47..48 \"1\"\n+              COMMA@48..49 \",\"\n+              WHITESPACE@49..50 \" \"\n+              LITERAL@50..51\n+                INT_NUMBER@50..51 \"2\"\n+              COMMA@51..52 \",\"\n+              WHITESPACE@52..53 \" \"\n+              ERROR@53..54\n+                AT@53..54 \"@\"\n+        EXPR_STMT@54..55\n+          ERROR@54..55\n+            COMMA@54..55 \",\"\n+        WHITESPACE@55..56 \" \"\n+        IMPL_DEF@56..60\n+          IMPL_KW@56..60 \"impl\"\n+        EXPR_STMT@60..61\n+          ERROR@60..61\n+            COMMA@60..61 \",\"\n+        WHITESPACE@61..62 \" \"\n+        LET_STMT@62..65\n+          LET_KW@62..65 \"let\"\n+        ERROR@65..66\n+          R_PAREN@65..66 \")\"\n+        WHITESPACE@66..67 \" \"\n+        R_CURLY@67..68 \"}\"\n+  WHITESPACE@68..69 \"\\n\"\n+  FN_DEF@69..111\n+    FN_KW@69..71 \"fn\"\n+    WHITESPACE@71..72 \" \"\n+    NAME@72..73\n+      IDENT@72..73 \"c\"\n+    PARAM_LIST@73..75\n+      L_PAREN@73..74 \"(\"\n+      R_PAREN@74..75 \")\"\n+    WHITESPACE@75..76 \" \"\n+    BLOCK_EXPR@76..111\n+      BLOCK@76..111\n+        L_CURLY@76..77 \"{\"\n+        WHITESPACE@77..78 \" \"\n+        EXPR_STMT@78..93\n+          METHOD_CALL_EXPR@78..93\n+            PATH_EXPR@78..81\n+              PATH@78..81\n+                PATH_SEGMENT@78..81\n+                  NAME_REF@78..81\n+                    IDENT@78..81 \"foo\"\n+            DOT@81..82 \".\"\n+            NAME_REF@82..85\n+              IDENT@82..85 \"bar\"\n+            ARG_LIST@85..93\n+              L_PAREN@85..86 \"(\"\n+              LITERAL@86..87\n+                INT_NUMBER@86..87 \"1\"\n+              COMMA@87..88 \",\"\n+              WHITESPACE@88..89 \" \"\n+              LITERAL@89..90\n+                INT_NUMBER@89..90 \"2\"\n+              COMMA@90..91 \",\"\n+              WHITESPACE@91..92 \" \"\n+              ERROR@92..93\n+                AT@92..93 \"@\"\n+        EXPR_STMT@93..94\n+          ERROR@93..94\n+            COMMA@93..94 \",\"\n+        WHITESPACE@94..95 \" \"\n+        EXPR_STMT@95..96\n+          ERROR@95..96\n+            R_BRACK@95..96 \"]\"\n+        EXPR_STMT@96..97\n+          ERROR@96..97\n+            COMMA@96..97 \",\"\n+        WHITESPACE@97..98 \" \"\n+        TRAIT_DEF@98..104\n+          TRAIT_KW@98..103 \"trait\"\n+          ERROR@103..104\n+            COMMA@103..104 \",\"\n+        WHITESPACE@104..105 \" \"\n+        LET_STMT@105..108\n+          LET_KW@105..108 \"let\"\n+        ERROR@108..109\n+          R_PAREN@108..109 \")\"\n+        WHITESPACE@109..110 \" \"\n+        R_CURLY@110..111 \"}\"\n+  WHITESPACE@111..112 \"\\n\"\n+error 16..16: expected expression\n+error 17..17: expected R_BRACK\n+error 17..17: expected SEMICOLON\n+error 17..17: expected expression\n+error 18..18: expected SEMICOLON\n+error 25..25: expected a name\n+error 26..26: expected `;`, `{`, or `(`\n+error 30..30: expected pattern\n+error 31..31: expected SEMICOLON\n+error 53..53: expected expression\n+error 54..54: expected SEMICOLON\n+error 54..54: expected expression\n+error 55..55: expected SEMICOLON\n+error 60..60: expected type\n+error 60..60: expected `{`\n+error 60..60: expected expression\n+error 61..61: expected SEMICOLON\n+error 65..65: expected pattern\n+error 65..65: expected SEMICOLON\n+error 65..65: expected expression\n+error 92..92: expected expression\n+error 93..93: expected SEMICOLON\n+error 93..93: expected expression\n+error 94..94: expected SEMICOLON\n+error 95..95: expected expression\n+error 96..96: expected SEMICOLON\n+error 96..96: expected expression\n+error 97..97: expected SEMICOLON\n+error 103..103: expected a name\n+error 104..104: expected `{`\n+error 108..108: expected pattern\n+error 108..108: expected SEMICOLON\n+error 108..108: expected expression"}, {"sha": "c37594146debda89e9f131d83d2a06062ef351b9", "filename": "crates/ra_syntax/test_data/parser/err/0023_mismatched_paren.rast", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0023_mismatched_paren.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,44 +1,44 @@\n-SOURCE_FILE@[0; 94)\n-  FN_DEF@[0; 55)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 7)\n-      IDENT@[3; 7) \"main\"\n-    PARAM_LIST@[7; 9)\n-      L_PAREN@[7; 8) \"(\"\n-      R_PAREN@[8; 9) \")\"\n-    WHITESPACE@[9; 10) \" \"\n-    BLOCK_EXPR@[10; 55)\n-      BLOCK@[10; 55)\n-        L_CURLY@[10; 11) \"{\"\n-        WHITESPACE@[11; 16) \"\\n    \"\n-        MACRO_CALL@[16; 49)\n-          PATH@[16; 19)\n-            PATH_SEGMENT@[16; 19)\n-              NAME_REF@[16; 19)\n-                IDENT@[16; 19) \"foo\"\n-          BANG@[19; 20) \"!\"\n-          WHITESPACE@[20; 21) \" \"\n-          TOKEN_TREE@[21; 49)\n-            L_PAREN@[21; 22) \"(\"\n-            WHITESPACE@[22; 31) \"\\n        \"\n-            IDENT@[31; 34) \"bar\"\n-            COMMA@[34; 35) \",\"\n-            WHITESPACE@[35; 36) \" \"\n-            STRING@[36; 41) \"\\\"baz\\\"\"\n-            COMMA@[41; 42) \",\"\n-            WHITESPACE@[42; 43) \" \"\n-            INT_NUMBER@[43; 44) \"1\"\n-            COMMA@[44; 45) \",\"\n-            WHITESPACE@[45; 46) \" \"\n-            FLOAT_NUMBER@[46; 49) \"2.0\"\n-        WHITESPACE@[49; 54) \"\\n    \"\n-        R_CURLY@[54; 55) \"}\"\n-  WHITESPACE@[55; 56) \" \"\n-  COMMENT@[56; 91) \"//~ ERROR incorrect c ...\"\n-  WHITESPACE@[91; 92) \"\\n\"\n-  ERROR@[92; 93)\n-    R_CURLY@[92; 93) \"}\"\n-  WHITESPACE@[93; 94) \"\\n\"\n-error [49; 49): unmatched `}`\n-error [92; 92): unmatched `}`\n+SOURCE_FILE@0..94\n+  FN_DEF@0..55\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..7\n+      IDENT@3..7 \"main\"\n+    PARAM_LIST@7..9\n+      L_PAREN@7..8 \"(\"\n+      R_PAREN@8..9 \")\"\n+    WHITESPACE@9..10 \" \"\n+    BLOCK_EXPR@10..55\n+      BLOCK@10..55\n+        L_CURLY@10..11 \"{\"\n+        WHITESPACE@11..16 \"\\n    \"\n+        MACRO_CALL@16..49\n+          PATH@16..19\n+            PATH_SEGMENT@16..19\n+              NAME_REF@16..19\n+                IDENT@16..19 \"foo\"\n+          BANG@19..20 \"!\"\n+          WHITESPACE@20..21 \" \"\n+          TOKEN_TREE@21..49\n+            L_PAREN@21..22 \"(\"\n+            WHITESPACE@22..31 \"\\n        \"\n+            IDENT@31..34 \"bar\"\n+            COMMA@34..35 \",\"\n+            WHITESPACE@35..36 \" \"\n+            STRING@36..41 \"\\\"baz\\\"\"\n+            COMMA@41..42 \",\"\n+            WHITESPACE@42..43 \" \"\n+            INT_NUMBER@43..44 \"1\"\n+            COMMA@44..45 \",\"\n+            WHITESPACE@45..46 \" \"\n+            FLOAT_NUMBER@46..49 \"2.0\"\n+        WHITESPACE@49..54 \"\\n    \"\n+        R_CURLY@54..55 \"}\"\n+  WHITESPACE@55..56 \" \"\n+  COMMENT@56..91 \"//~ ERROR incorrect c ...\"\n+  WHITESPACE@91..92 \"\\n\"\n+  ERROR@92..93\n+    R_CURLY@92..93 \"}\"\n+  WHITESPACE@93..94 \"\\n\"\n+error 49..49: unmatched `}`\n+error 92..92: unmatched `}`"}, {"sha": "4296355f2cb86eb119a9e1c8a7803105f17610b9", "filename": "crates/ra_syntax/test_data/parser/err/0024_many_type_parens.rast", "status": "modified", "additions": 321, "deletions": 321, "changes": 642, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0024_many_type_parens.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,321 +1,321 @@\n-SOURCE_FILE@[0; 240)\n-  FN_DEF@[0; 53)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 4)\n-      IDENT@[3; 4) \"f\"\n-    TYPE_PARAM_LIST@[4; 48)\n-      L_ANGLE@[4; 5) \"<\"\n-      TYPE_PARAM@[5; 47)\n-        NAME@[5; 6)\n-          IDENT@[5; 6) \"T\"\n-        COLON@[6; 7) \":\"\n-        WHITESPACE@[7; 8) \" \"\n-        TYPE_BOUND_LIST@[8; 47)\n-          TYPE_BOUND@[8; 14)\n-            L_PAREN@[8; 9) \"(\"\n-            PATH_TYPE@[9; 13)\n-              PATH@[9; 13)\n-                PATH_SEGMENT@[9; 13)\n-                  NAME_REF@[9; 13)\n-                    IDENT@[9; 13) \"Copy\"\n-            R_PAREN@[13; 14) \")\"\n-          WHITESPACE@[14; 15) \" \"\n-          PLUS@[15; 16) \"+\"\n-          WHITESPACE@[16; 17) \" \"\n-          TYPE_BOUND@[17; 25)\n-            L_PAREN@[17; 18) \"(\"\n-            QUESTION@[18; 19) \"?\"\n-            PATH_TYPE@[19; 24)\n-              PATH@[19; 24)\n-                PATH_SEGMENT@[19; 24)\n-                  NAME_REF@[19; 24)\n-                    IDENT@[19; 24) \"Sized\"\n-            R_PAREN@[24; 25) \")\"\n-          WHITESPACE@[25; 26) \" \"\n-          PLUS@[26; 27) \"+\"\n-          WHITESPACE@[27; 28) \" \"\n-          TYPE_BOUND@[28; 47)\n-            L_PAREN@[28; 29) \"(\"\n-            FOR_TYPE@[29; 46)\n-              FOR_KW@[29; 32) \"for\"\n-              TYPE_PARAM_LIST@[32; 36)\n-                L_ANGLE@[32; 33) \"<\"\n-                LIFETIME_PARAM@[33; 35)\n-                  LIFETIME@[33; 35) \"\\'a\"\n-                R_ANGLE@[35; 36) \">\"\n-              WHITESPACE@[36; 37) \" \"\n-              PATH_TYPE@[37; 46)\n-                PATH@[37; 46)\n-                  PATH_SEGMENT@[37; 46)\n-                    NAME_REF@[37; 42)\n-                      IDENT@[37; 42) \"Trait\"\n-                    TYPE_ARG_LIST@[42; 46)\n-                      L_ANGLE@[42; 43) \"<\"\n-                      LIFETIME_ARG@[43; 45)\n-                        LIFETIME@[43; 45) \"\\'a\"\n-                      R_ANGLE@[45; 46) \">\"\n-            R_PAREN@[46; 47) \")\"\n-      R_ANGLE@[47; 48) \">\"\n-    PARAM_LIST@[48; 50)\n-      L_PAREN@[48; 49) \"(\"\n-      R_PAREN@[49; 50) \")\"\n-    WHITESPACE@[50; 51) \" \"\n-    BLOCK_EXPR@[51; 53)\n-      BLOCK@[51; 53)\n-        L_CURLY@[51; 52) \"{\"\n-        R_CURLY@[52; 53) \"}\"\n-  WHITESPACE@[53; 55) \"\\n\\n\"\n-  FN_DEF@[55; 239)\n-    FN_KW@[55; 57) \"fn\"\n-    WHITESPACE@[57; 58) \" \"\n-    NAME@[58; 62)\n-      IDENT@[58; 62) \"main\"\n-    PARAM_LIST@[62; 64)\n-      L_PAREN@[62; 63) \"(\"\n-      R_PAREN@[63; 64) \")\"\n-    WHITESPACE@[64; 65) \" \"\n-    BLOCK_EXPR@[65; 239)\n-      BLOCK@[65; 239)\n-        L_CURLY@[65; 66) \"{\"\n-        WHITESPACE@[66; 71) \"\\n    \"\n-        LET_STMT@[71; 121)\n-          LET_KW@[71; 74) \"let\"\n-          WHITESPACE@[74; 75) \" \"\n-          PLACEHOLDER_PAT@[75; 76)\n-            UNDERSCORE@[75; 76) \"_\"\n-          COLON@[76; 77) \":\"\n-          WHITESPACE@[77; 78) \" \"\n-          DYN_TRAIT_TYPE@[78; 121)\n-            TYPE_BOUND_LIST@[78; 121)\n-              TYPE_BOUND@[78; 88)\n-                PATH_TYPE@[78; 88)\n-                  PATH@[78; 88)\n-                    PATH_SEGMENT@[78; 88)\n-                      NAME_REF@[78; 81)\n-                        IDENT@[78; 81) \"Box\"\n-                      TYPE_ARG_LIST@[81; 88)\n-                        L_ANGLE@[81; 82) \"<\"\n-                        TYPE_ARG@[82; 88)\n-                          PAREN_TYPE@[82; 88)\n-                            L_PAREN@[82; 83) \"(\"\n-                            PATH_TYPE@[83; 87)\n-                              PATH@[83; 87)\n-                                PATH_SEGMENT@[83; 87)\n-                                  NAME_REF@[83; 87)\n-                                    IDENT@[83; 87) \"Copy\"\n-                            R_PAREN@[87; 88) \")\"\n-              WHITESPACE@[88; 89) \" \"\n-              PLUS@[89; 90) \"+\"\n-              WHITESPACE@[90; 91) \" \"\n-              TYPE_BOUND@[91; 99)\n-                L_PAREN@[91; 92) \"(\"\n-                QUESTION@[92; 93) \"?\"\n-                PATH_TYPE@[93; 98)\n-                  PATH@[93; 98)\n-                    PATH_SEGMENT@[93; 98)\n-                      NAME_REF@[93; 98)\n-                        IDENT@[93; 98) \"Sized\"\n-                R_PAREN@[98; 99) \")\"\n-              WHITESPACE@[99; 100) \" \"\n-              PLUS@[100; 101) \"+\"\n-              WHITESPACE@[101; 102) \" \"\n-              TYPE_BOUND@[102; 121)\n-                L_PAREN@[102; 103) \"(\"\n-                FOR_TYPE@[103; 120)\n-                  FOR_KW@[103; 106) \"for\"\n-                  TYPE_PARAM_LIST@[106; 110)\n-                    L_ANGLE@[106; 107) \"<\"\n-                    LIFETIME_PARAM@[107; 109)\n-                      LIFETIME@[107; 109) \"\\'a\"\n-                    R_ANGLE@[109; 110) \">\"\n-                  WHITESPACE@[110; 111) \" \"\n-                  PATH_TYPE@[111; 120)\n-                    PATH@[111; 120)\n-                      PATH_SEGMENT@[111; 120)\n-                        NAME_REF@[111; 116)\n-                          IDENT@[111; 116) \"Trait\"\n-                        TYPE_ARG_LIST@[116; 120)\n-                          L_ANGLE@[116; 117) \"<\"\n-                          LIFETIME_ARG@[117; 119)\n-                            LIFETIME@[117; 119) \"\\'a\"\n-                          R_ANGLE@[119; 120) \">\"\n-                R_PAREN@[120; 121) \")\"\n-        EXPR_STMT@[121; 123)\n-          ERROR@[121; 122)\n-            R_ANGLE@[121; 122) \">\"\n-          SEMICOLON@[122; 123) \";\"\n-        WHITESPACE@[123; 128) \"\\n    \"\n-        LET_STMT@[128; 141)\n-          LET_KW@[128; 131) \"let\"\n-          WHITESPACE@[131; 132) \" \"\n-          PLACEHOLDER_PAT@[132; 133)\n-            UNDERSCORE@[132; 133) \"_\"\n-          COLON@[133; 134) \":\"\n-          WHITESPACE@[134; 135) \" \"\n-          PATH_TYPE@[135; 141)\n-            PATH@[135; 141)\n-              PATH_SEGMENT@[135; 141)\n-                NAME_REF@[135; 138)\n-                  IDENT@[135; 138) \"Box\"\n-                TYPE_ARG_LIST@[138; 141)\n-                  L_ANGLE@[138; 139) \"<\"\n-                  TYPE_ARG@[139; 141)\n-                    PAREN_TYPE@[139; 141)\n-                      L_PAREN@[139; 140) \"(\"\n-                      ERROR@[140; 141)\n-                        QUESTION@[140; 141) \"?\"\n-        EXPR_STMT@[141; 146)\n-          PATH_EXPR@[141; 146)\n-            PATH@[141; 146)\n-              PATH_SEGMENT@[141; 146)\n-                NAME_REF@[141; 146)\n-                  IDENT@[141; 146) \"Sized\"\n-        EXPR_STMT@[146; 147)\n-          ERROR@[146; 147)\n-            R_PAREN@[146; 147) \")\"\n-        WHITESPACE@[147; 148) \" \"\n-        EXPR_STMT@[148; 149)\n-          ERROR@[148; 149)\n-            PLUS@[148; 149) \"+\"\n-        WHITESPACE@[149; 150) \" \"\n-        EXPR_STMT@[150; 180)\n-          TUPLE_EXPR@[150; 180)\n-            L_PAREN@[150; 151) \"(\"\n-            BIN_EXPR@[151; 180)\n-              BIN_EXPR@[151; 178)\n-                BIN_EXPR@[151; 169)\n-                  BIN_EXPR@[151; 167)\n-                    BIN_EXPR@[151; 164)\n-                      FOR_EXPR@[151; 157)\n-                        FOR_KW@[151; 154) \"for\"\n-                        ERROR@[154; 155)\n-                          L_ANGLE@[154; 155) \"<\"\n-                        ERROR@[155; 157)\n-                          LIFETIME@[155; 157) \"\\'a\"\n-                      R_ANGLE@[157; 158) \">\"\n-                      WHITESPACE@[158; 159) \" \"\n-                      PATH_EXPR@[159; 164)\n-                        PATH@[159; 164)\n-                          PATH_SEGMENT@[159; 164)\n-                            NAME_REF@[159; 164)\n-                              IDENT@[159; 164) \"Trait\"\n-                    L_ANGLE@[164; 165) \"<\"\n-                    ERROR@[165; 167)\n-                      LIFETIME@[165; 167) \"\\'a\"\n-                  R_ANGLE@[167; 168) \">\"\n-                  ERROR@[168; 169)\n-                    R_PAREN@[168; 169) \")\"\n-                WHITESPACE@[169; 170) \" \"\n-                PLUS@[170; 171) \"+\"\n-                WHITESPACE@[171; 172) \" \"\n-                PAREN_EXPR@[172; 178)\n-                  L_PAREN@[172; 173) \"(\"\n-                  PATH_EXPR@[173; 177)\n-                    PATH@[173; 177)\n-                      PATH_SEGMENT@[173; 177)\n-                        NAME_REF@[173; 177)\n-                          IDENT@[173; 177) \"Copy\"\n-                  R_PAREN@[177; 178) \")\"\n-              R_ANGLE@[178; 179) \">\"\n-              ERROR@[179; 180)\n-                SEMICOLON@[179; 180) \";\"\n-        WHITESPACE@[180; 185) \"\\n    \"\n-        LET_STMT@[185; 235)\n-          LET_KW@[185; 188) \"let\"\n-          WHITESPACE@[188; 189) \" \"\n-          PLACEHOLDER_PAT@[189; 190)\n-            UNDERSCORE@[189; 190) \"_\"\n-          COLON@[190; 191) \":\"\n-          WHITESPACE@[191; 192) \" \"\n-          DYN_TRAIT_TYPE@[192; 235)\n-            TYPE_BOUND_LIST@[192; 235)\n-              TYPE_BOUND@[192; 215)\n-                PATH_TYPE@[192; 215)\n-                  PATH@[192; 215)\n-                    PATH_SEGMENT@[192; 215)\n-                      NAME_REF@[192; 195)\n-                        IDENT@[192; 195) \"Box\"\n-                      TYPE_ARG_LIST@[195; 215)\n-                        L_ANGLE@[195; 196) \"<\"\n-                        TYPE_ARG@[196; 215)\n-                          PAREN_TYPE@[196; 215)\n-                            L_PAREN@[196; 197) \"(\"\n-                            FOR_TYPE@[197; 214)\n-                              FOR_KW@[197; 200) \"for\"\n-                              TYPE_PARAM_LIST@[200; 204)\n-                                L_ANGLE@[200; 201) \"<\"\n-                                LIFETIME_PARAM@[201; 203)\n-                                  LIFETIME@[201; 203) \"\\'a\"\n-                                R_ANGLE@[203; 204) \">\"\n-                              WHITESPACE@[204; 205) \" \"\n-                              PATH_TYPE@[205; 214)\n-                                PATH@[205; 214)\n-                                  PATH_SEGMENT@[205; 214)\n-                                    NAME_REF@[205; 210)\n-                                      IDENT@[205; 210) \"Trait\"\n-                                    TYPE_ARG_LIST@[210; 214)\n-                                      L_ANGLE@[210; 211) \"<\"\n-                                      LIFETIME_ARG@[211; 213)\n-                                        LIFETIME@[211; 213) \"\\'a\"\n-                                      R_ANGLE@[213; 214) \">\"\n-                            R_PAREN@[214; 215) \")\"\n-              WHITESPACE@[215; 216) \" \"\n-              PLUS@[216; 217) \"+\"\n-              WHITESPACE@[217; 218) \" \"\n-              TYPE_BOUND@[218; 224)\n-                L_PAREN@[218; 219) \"(\"\n-                PATH_TYPE@[219; 223)\n-                  PATH@[219; 223)\n-                    PATH_SEGMENT@[219; 223)\n-                      NAME_REF@[219; 223)\n-                        IDENT@[219; 223) \"Copy\"\n-                R_PAREN@[223; 224) \")\"\n-              WHITESPACE@[224; 225) \" \"\n-              PLUS@[225; 226) \"+\"\n-              WHITESPACE@[226; 227) \" \"\n-              TYPE_BOUND@[227; 235)\n-                L_PAREN@[227; 228) \"(\"\n-                QUESTION@[228; 229) \"?\"\n-                PATH_TYPE@[229; 234)\n-                  PATH@[229; 234)\n-                    PATH_SEGMENT@[229; 234)\n-                      NAME_REF@[229; 234)\n-                        IDENT@[229; 234) \"Sized\"\n-                R_PAREN@[234; 235) \")\"\n-        EXPR_STMT@[235; 237)\n-          ERROR@[235; 236)\n-            R_ANGLE@[235; 236) \">\"\n-          SEMICOLON@[236; 237) \";\"\n-        WHITESPACE@[237; 238) \"\\n\"\n-        R_CURLY@[238; 239) \"}\"\n-  WHITESPACE@[239; 240) \"\\n\"\n-error [88; 88): expected COMMA\n-error [88; 88): expected R_ANGLE\n-error [121; 121): expected SEMICOLON\n-error [121; 121): expected expression\n-error [140; 140): expected type\n-error [141; 141): expected R_PAREN\n-error [141; 141): expected COMMA\n-error [141; 141): expected R_ANGLE\n-error [141; 141): expected SEMICOLON\n-error [146; 146): expected SEMICOLON\n-error [146; 146): expected expression\n-error [147; 147): expected SEMICOLON\n-error [148; 148): expected expression\n-error [149; 149): expected SEMICOLON\n-error [154; 154): expected pattern\n-error [155; 155): expected IN_KW\n-error [155; 155): expected expression\n-error [157; 157): expected a block\n-error [165; 165): expected expression\n-error [168; 168): expected expression\n-error [179; 179): expected expression\n-error [180; 180): expected COMMA\n-error [180; 180): expected expression\n-error [180; 180): expected R_PAREN\n-error [180; 180): expected SEMICOLON\n-error [215; 215): expected COMMA\n-error [215; 215): expected R_ANGLE\n-error [235; 235): expected SEMICOLON\n-error [235; 235): expected expression\n+SOURCE_FILE@0..240\n+  FN_DEF@0..53\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..4\n+      IDENT@3..4 \"f\"\n+    TYPE_PARAM_LIST@4..48\n+      L_ANGLE@4..5 \"<\"\n+      TYPE_PARAM@5..47\n+        NAME@5..6\n+          IDENT@5..6 \"T\"\n+        COLON@6..7 \":\"\n+        WHITESPACE@7..8 \" \"\n+        TYPE_BOUND_LIST@8..47\n+          TYPE_BOUND@8..14\n+            L_PAREN@8..9 \"(\"\n+            PATH_TYPE@9..13\n+              PATH@9..13\n+                PATH_SEGMENT@9..13\n+                  NAME_REF@9..13\n+                    IDENT@9..13 \"Copy\"\n+            R_PAREN@13..14 \")\"\n+          WHITESPACE@14..15 \" \"\n+          PLUS@15..16 \"+\"\n+          WHITESPACE@16..17 \" \"\n+          TYPE_BOUND@17..25\n+            L_PAREN@17..18 \"(\"\n+            QUESTION@18..19 \"?\"\n+            PATH_TYPE@19..24\n+              PATH@19..24\n+                PATH_SEGMENT@19..24\n+                  NAME_REF@19..24\n+                    IDENT@19..24 \"Sized\"\n+            R_PAREN@24..25 \")\"\n+          WHITESPACE@25..26 \" \"\n+          PLUS@26..27 \"+\"\n+          WHITESPACE@27..28 \" \"\n+          TYPE_BOUND@28..47\n+            L_PAREN@28..29 \"(\"\n+            FOR_TYPE@29..46\n+              FOR_KW@29..32 \"for\"\n+              TYPE_PARAM_LIST@32..36\n+                L_ANGLE@32..33 \"<\"\n+                LIFETIME_PARAM@33..35\n+                  LIFETIME@33..35 \"\\'a\"\n+                R_ANGLE@35..36 \">\"\n+              WHITESPACE@36..37 \" \"\n+              PATH_TYPE@37..46\n+                PATH@37..46\n+                  PATH_SEGMENT@37..46\n+                    NAME_REF@37..42\n+                      IDENT@37..42 \"Trait\"\n+                    TYPE_ARG_LIST@42..46\n+                      L_ANGLE@42..43 \"<\"\n+                      LIFETIME_ARG@43..45\n+                        LIFETIME@43..45 \"\\'a\"\n+                      R_ANGLE@45..46 \">\"\n+            R_PAREN@46..47 \")\"\n+      R_ANGLE@47..48 \">\"\n+    PARAM_LIST@48..50\n+      L_PAREN@48..49 \"(\"\n+      R_PAREN@49..50 \")\"\n+    WHITESPACE@50..51 \" \"\n+    BLOCK_EXPR@51..53\n+      BLOCK@51..53\n+        L_CURLY@51..52 \"{\"\n+        R_CURLY@52..53 \"}\"\n+  WHITESPACE@53..55 \"\\n\\n\"\n+  FN_DEF@55..239\n+    FN_KW@55..57 \"fn\"\n+    WHITESPACE@57..58 \" \"\n+    NAME@58..62\n+      IDENT@58..62 \"main\"\n+    PARAM_LIST@62..64\n+      L_PAREN@62..63 \"(\"\n+      R_PAREN@63..64 \")\"\n+    WHITESPACE@64..65 \" \"\n+    BLOCK_EXPR@65..239\n+      BLOCK@65..239\n+        L_CURLY@65..66 \"{\"\n+        WHITESPACE@66..71 \"\\n    \"\n+        LET_STMT@71..121\n+          LET_KW@71..74 \"let\"\n+          WHITESPACE@74..75 \" \"\n+          PLACEHOLDER_PAT@75..76\n+            UNDERSCORE@75..76 \"_\"\n+          COLON@76..77 \":\"\n+          WHITESPACE@77..78 \" \"\n+          DYN_TRAIT_TYPE@78..121\n+            TYPE_BOUND_LIST@78..121\n+              TYPE_BOUND@78..88\n+                PATH_TYPE@78..88\n+                  PATH@78..88\n+                    PATH_SEGMENT@78..88\n+                      NAME_REF@78..81\n+                        IDENT@78..81 \"Box\"\n+                      TYPE_ARG_LIST@81..88\n+                        L_ANGLE@81..82 \"<\"\n+                        TYPE_ARG@82..88\n+                          PAREN_TYPE@82..88\n+                            L_PAREN@82..83 \"(\"\n+                            PATH_TYPE@83..87\n+                              PATH@83..87\n+                                PATH_SEGMENT@83..87\n+                                  NAME_REF@83..87\n+                                    IDENT@83..87 \"Copy\"\n+                            R_PAREN@87..88 \")\"\n+              WHITESPACE@88..89 \" \"\n+              PLUS@89..90 \"+\"\n+              WHITESPACE@90..91 \" \"\n+              TYPE_BOUND@91..99\n+                L_PAREN@91..92 \"(\"\n+                QUESTION@92..93 \"?\"\n+                PATH_TYPE@93..98\n+                  PATH@93..98\n+                    PATH_SEGMENT@93..98\n+                      NAME_REF@93..98\n+                        IDENT@93..98 \"Sized\"\n+                R_PAREN@98..99 \")\"\n+              WHITESPACE@99..100 \" \"\n+              PLUS@100..101 \"+\"\n+              WHITESPACE@101..102 \" \"\n+              TYPE_BOUND@102..121\n+                L_PAREN@102..103 \"(\"\n+                FOR_TYPE@103..120\n+                  FOR_KW@103..106 \"for\"\n+                  TYPE_PARAM_LIST@106..110\n+                    L_ANGLE@106..107 \"<\"\n+                    LIFETIME_PARAM@107..109\n+                      LIFETIME@107..109 \"\\'a\"\n+                    R_ANGLE@109..110 \">\"\n+                  WHITESPACE@110..111 \" \"\n+                  PATH_TYPE@111..120\n+                    PATH@111..120\n+                      PATH_SEGMENT@111..120\n+                        NAME_REF@111..116\n+                          IDENT@111..116 \"Trait\"\n+                        TYPE_ARG_LIST@116..120\n+                          L_ANGLE@116..117 \"<\"\n+                          LIFETIME_ARG@117..119\n+                            LIFETIME@117..119 \"\\'a\"\n+                          R_ANGLE@119..120 \">\"\n+                R_PAREN@120..121 \")\"\n+        EXPR_STMT@121..123\n+          ERROR@121..122\n+            R_ANGLE@121..122 \">\"\n+          SEMICOLON@122..123 \";\"\n+        WHITESPACE@123..128 \"\\n    \"\n+        LET_STMT@128..141\n+          LET_KW@128..131 \"let\"\n+          WHITESPACE@131..132 \" \"\n+          PLACEHOLDER_PAT@132..133\n+            UNDERSCORE@132..133 \"_\"\n+          COLON@133..134 \":\"\n+          WHITESPACE@134..135 \" \"\n+          PATH_TYPE@135..141\n+            PATH@135..141\n+              PATH_SEGMENT@135..141\n+                NAME_REF@135..138\n+                  IDENT@135..138 \"Box\"\n+                TYPE_ARG_LIST@138..141\n+                  L_ANGLE@138..139 \"<\"\n+                  TYPE_ARG@139..141\n+                    PAREN_TYPE@139..141\n+                      L_PAREN@139..140 \"(\"\n+                      ERROR@140..141\n+                        QUESTION@140..141 \"?\"\n+        EXPR_STMT@141..146\n+          PATH_EXPR@141..146\n+            PATH@141..146\n+              PATH_SEGMENT@141..146\n+                NAME_REF@141..146\n+                  IDENT@141..146 \"Sized\"\n+        EXPR_STMT@146..147\n+          ERROR@146..147\n+            R_PAREN@146..147 \")\"\n+        WHITESPACE@147..148 \" \"\n+        EXPR_STMT@148..149\n+          ERROR@148..149\n+            PLUS@148..149 \"+\"\n+        WHITESPACE@149..150 \" \"\n+        EXPR_STMT@150..180\n+          TUPLE_EXPR@150..180\n+            L_PAREN@150..151 \"(\"\n+            BIN_EXPR@151..180\n+              BIN_EXPR@151..178\n+                BIN_EXPR@151..169\n+                  BIN_EXPR@151..167\n+                    BIN_EXPR@151..164\n+                      FOR_EXPR@151..157\n+                        FOR_KW@151..154 \"for\"\n+                        ERROR@154..155\n+                          L_ANGLE@154..155 \"<\"\n+                        ERROR@155..157\n+                          LIFETIME@155..157 \"\\'a\"\n+                      R_ANGLE@157..158 \">\"\n+                      WHITESPACE@158..159 \" \"\n+                      PATH_EXPR@159..164\n+                        PATH@159..164\n+                          PATH_SEGMENT@159..164\n+                            NAME_REF@159..164\n+                              IDENT@159..164 \"Trait\"\n+                    L_ANGLE@164..165 \"<\"\n+                    ERROR@165..167\n+                      LIFETIME@165..167 \"\\'a\"\n+                  R_ANGLE@167..168 \">\"\n+                  ERROR@168..169\n+                    R_PAREN@168..169 \")\"\n+                WHITESPACE@169..170 \" \"\n+                PLUS@170..171 \"+\"\n+                WHITESPACE@171..172 \" \"\n+                PAREN_EXPR@172..178\n+                  L_PAREN@172..173 \"(\"\n+                  PATH_EXPR@173..177\n+                    PATH@173..177\n+                      PATH_SEGMENT@173..177\n+                        NAME_REF@173..177\n+                          IDENT@173..177 \"Copy\"\n+                  R_PAREN@177..178 \")\"\n+              R_ANGLE@178..179 \">\"\n+              ERROR@179..180\n+                SEMICOLON@179..180 \";\"\n+        WHITESPACE@180..185 \"\\n    \"\n+        LET_STMT@185..235\n+          LET_KW@185..188 \"let\"\n+          WHITESPACE@188..189 \" \"\n+          PLACEHOLDER_PAT@189..190\n+            UNDERSCORE@189..190 \"_\"\n+          COLON@190..191 \":\"\n+          WHITESPACE@191..192 \" \"\n+          DYN_TRAIT_TYPE@192..235\n+            TYPE_BOUND_LIST@192..235\n+              TYPE_BOUND@192..215\n+                PATH_TYPE@192..215\n+                  PATH@192..215\n+                    PATH_SEGMENT@192..215\n+                      NAME_REF@192..195\n+                        IDENT@192..195 \"Box\"\n+                      TYPE_ARG_LIST@195..215\n+                        L_ANGLE@195..196 \"<\"\n+                        TYPE_ARG@196..215\n+                          PAREN_TYPE@196..215\n+                            L_PAREN@196..197 \"(\"\n+                            FOR_TYPE@197..214\n+                              FOR_KW@197..200 \"for\"\n+                              TYPE_PARAM_LIST@200..204\n+                                L_ANGLE@200..201 \"<\"\n+                                LIFETIME_PARAM@201..203\n+                                  LIFETIME@201..203 \"\\'a\"\n+                                R_ANGLE@203..204 \">\"\n+                              WHITESPACE@204..205 \" \"\n+                              PATH_TYPE@205..214\n+                                PATH@205..214\n+                                  PATH_SEGMENT@205..214\n+                                    NAME_REF@205..210\n+                                      IDENT@205..210 \"Trait\"\n+                                    TYPE_ARG_LIST@210..214\n+                                      L_ANGLE@210..211 \"<\"\n+                                      LIFETIME_ARG@211..213\n+                                        LIFETIME@211..213 \"\\'a\"\n+                                      R_ANGLE@213..214 \">\"\n+                            R_PAREN@214..215 \")\"\n+              WHITESPACE@215..216 \" \"\n+              PLUS@216..217 \"+\"\n+              WHITESPACE@217..218 \" \"\n+              TYPE_BOUND@218..224\n+                L_PAREN@218..219 \"(\"\n+                PATH_TYPE@219..223\n+                  PATH@219..223\n+                    PATH_SEGMENT@219..223\n+                      NAME_REF@219..223\n+                        IDENT@219..223 \"Copy\"\n+                R_PAREN@223..224 \")\"\n+              WHITESPACE@224..225 \" \"\n+              PLUS@225..226 \"+\"\n+              WHITESPACE@226..227 \" \"\n+              TYPE_BOUND@227..235\n+                L_PAREN@227..228 \"(\"\n+                QUESTION@228..229 \"?\"\n+                PATH_TYPE@229..234\n+                  PATH@229..234\n+                    PATH_SEGMENT@229..234\n+                      NAME_REF@229..234\n+                        IDENT@229..234 \"Sized\"\n+                R_PAREN@234..235 \")\"\n+        EXPR_STMT@235..237\n+          ERROR@235..236\n+            R_ANGLE@235..236 \">\"\n+          SEMICOLON@236..237 \";\"\n+        WHITESPACE@237..238 \"\\n\"\n+        R_CURLY@238..239 \"}\"\n+  WHITESPACE@239..240 \"\\n\"\n+error 88..88: expected COMMA\n+error 88..88: expected R_ANGLE\n+error 121..121: expected SEMICOLON\n+error 121..121: expected expression\n+error 140..140: expected type\n+error 141..141: expected R_PAREN\n+error 141..141: expected COMMA\n+error 141..141: expected R_ANGLE\n+error 141..141: expected SEMICOLON\n+error 146..146: expected SEMICOLON\n+error 146..146: expected expression\n+error 147..147: expected SEMICOLON\n+error 148..148: expected expression\n+error 149..149: expected SEMICOLON\n+error 154..154: expected pattern\n+error 155..155: expected IN_KW\n+error 155..155: expected expression\n+error 157..157: expected a block\n+error 165..165: expected expression\n+error 168..168: expected expression\n+error 179..179: expected expression\n+error 180..180: expected COMMA\n+error 180..180: expected expression\n+error 180..180: expected R_PAREN\n+error 180..180: expected SEMICOLON\n+error 215..215: expected COMMA\n+error 215..215: expected R_ANGLE\n+error 235..235: expected SEMICOLON\n+error 235..235: expected expression"}, {"sha": "195c08bd9837a22be7b6143b8e30258b2786c000", "filename": "crates/ra_syntax/test_data/parser/err/0025_nope.rast", "status": "modified", "additions": 204, "deletions": 204, "changes": 408, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0025_nope.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,204 +1,204 @@\n-SOURCE_FILE@[0; 575)\n-  FN_DEF@[0; 574)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 7)\n-      IDENT@[3; 7) \"main\"\n-    PARAM_LIST@[7; 9)\n-      L_PAREN@[7; 8) \"(\"\n-      R_PAREN@[8; 9) \")\"\n-    WHITESPACE@[9; 10) \" \"\n-    BLOCK_EXPR@[10; 574)\n-      BLOCK@[10; 574)\n-        L_CURLY@[10; 11) \"{\"\n-        WHITESPACE@[11; 16) \"\\n    \"\n-        ENUM_DEF@[16; 152)\n-          ENUM_KW@[16; 20) \"enum\"\n-          WHITESPACE@[20; 21) \" \"\n-          NAME@[21; 25)\n-            IDENT@[21; 25) \"Test\"\n-          WHITESPACE@[25; 26) \" \"\n-          ENUM_VARIANT_LIST@[26; 152)\n-            L_CURLY@[26; 27) \"{\"\n-            WHITESPACE@[27; 36) \"\\n        \"\n-            ENUM_VARIANT@[36; 40)\n-              NAME@[36; 40)\n-                IDENT@[36; 40) \"Var1\"\n-            COMMA@[40; 41) \",\"\n-            WHITESPACE@[41; 50) \"\\n        \"\n-            ENUM_VARIANT@[50; 62)\n-              NAME@[50; 54)\n-                IDENT@[50; 54) \"Var2\"\n-              TUPLE_FIELD_DEF_LIST@[54; 62)\n-                L_PAREN@[54; 55) \"(\"\n-                TUPLE_FIELD_DEF@[55; 61)\n-                  PATH_TYPE@[55; 61)\n-                    PATH@[55; 61)\n-                      PATH_SEGMENT@[55; 61)\n-                        NAME_REF@[55; 61)\n-                          IDENT@[55; 61) \"String\"\n-                R_PAREN@[61; 62) \")\"\n-            COMMA@[62; 63) \",\"\n-            WHITESPACE@[63; 72) \"\\n        \"\n-            ENUM_VARIANT@[72; 145)\n-              NAME@[72; 76)\n-                IDENT@[72; 76) \"Var3\"\n-              WHITESPACE@[76; 77) \" \"\n-              RECORD_FIELD_DEF_LIST@[77; 145)\n-                L_CURLY@[77; 78) \"{\"\n-                WHITESPACE@[78; 91) \"\\n            \"\n-                RECORD_FIELD_DEF@[91; 95)\n-                  NAME@[91; 94)\n-                    IDENT@[91; 94) \"abc\"\n-                  COLON@[94; 95) \":\"\n-                WHITESPACE@[95; 96) \" \"\n-                ERROR@[96; 98)\n-                  L_CURLY@[96; 97) \"{\"\n-                  R_CURLY@[97; 98) \"}\"\n-                ERROR@[98; 99)\n-                  COMMA@[98; 99) \",\"\n-                WHITESPACE@[99; 100) \" \"\n-                COMMENT@[100; 135) \"//~ ERROR: expected t ...\"\n-                WHITESPACE@[135; 144) \"\\n        \"\n-                R_CURLY@[144; 145) \"}\"\n-            COMMA@[145; 146) \",\"\n-            WHITESPACE@[146; 151) \"\\n    \"\n-            R_CURLY@[151; 152) \"}\"\n-        WHITESPACE@[152; 158) \"\\n\\n    \"\n-        COMMENT@[158; 171) \"// recover...\"\n-        WHITESPACE@[171; 176) \"\\n    \"\n-        LET_STMT@[176; 186)\n-          LET_KW@[176; 179) \"let\"\n-          WHITESPACE@[179; 180) \" \"\n-          BIND_PAT@[180; 181)\n-            NAME@[180; 181)\n-              IDENT@[180; 181) \"a\"\n-          WHITESPACE@[181; 182) \" \"\n-          EQ@[182; 183) \"=\"\n-          WHITESPACE@[183; 184) \" \"\n-          LITERAL@[184; 185)\n-            INT_NUMBER@[184; 185) \"1\"\n-          SEMICOLON@[185; 186) \";\"\n-        WHITESPACE@[186; 191) \"\\n    \"\n-        ENUM_DEF@[191; 223)\n-          ENUM_KW@[191; 195) \"enum\"\n-          WHITESPACE@[195; 196) \" \"\n-          NAME@[196; 201)\n-            IDENT@[196; 201) \"Test2\"\n-          WHITESPACE@[201; 202) \" \"\n-          ENUM_VARIANT_LIST@[202; 223)\n-            L_CURLY@[202; 203) \"{\"\n-            WHITESPACE@[203; 212) \"\\n        \"\n-            ENUM_VARIANT@[212; 216)\n-              NAME@[212; 216)\n-                IDENT@[212; 216) \"Fine\"\n-            COMMA@[216; 217) \",\"\n-            WHITESPACE@[217; 222) \"\\n    \"\n-            R_CURLY@[222; 223) \"}\"\n-        WHITESPACE@[223; 229) \"\\n\\n    \"\n-        ENUM_DEF@[229; 300)\n-          ENUM_KW@[229; 233) \"enum\"\n-          WHITESPACE@[233; 234) \" \"\n-          NAME@[234; 239)\n-            IDENT@[234; 239) \"Test3\"\n-          WHITESPACE@[239; 240) \" \"\n-          ENUM_VARIANT_LIST@[240; 300)\n-            L_CURLY@[240; 241) \"{\"\n-            WHITESPACE@[241; 250) \"\\n        \"\n-            ENUM_VARIANT@[250; 293)\n-              NAME@[250; 259)\n-                IDENT@[250; 259) \"StillFine\"\n-              WHITESPACE@[259; 260) \" \"\n-              RECORD_FIELD_DEF_LIST@[260; 293)\n-                L_CURLY@[260; 261) \"{\"\n-                WHITESPACE@[261; 274) \"\\n            \"\n-                RECORD_FIELD_DEF@[274; 282)\n-                  NAME@[274; 277)\n-                    IDENT@[274; 277) \"def\"\n-                  COLON@[277; 278) \":\"\n-                  WHITESPACE@[278; 279) \" \"\n-                  PATH_TYPE@[279; 282)\n-                    PATH@[279; 282)\n-                      PATH_SEGMENT@[279; 282)\n-                        NAME_REF@[279; 282)\n-                          IDENT@[279; 282) \"i32\"\n-                COMMA@[282; 283) \",\"\n-                WHITESPACE@[283; 292) \"\\n        \"\n-                R_CURLY@[292; 293) \"}\"\n-            COMMA@[293; 294) \",\"\n-            WHITESPACE@[294; 299) \"\\n    \"\n-            R_CURLY@[299; 300) \"}\"\n-        WHITESPACE@[300; 306) \"\\n\\n    \"\n-        EXPR_STMT@[306; 459)\n-          BLOCK_EXPR@[306; 459)\n-            BLOCK@[306; 459)\n-              L_CURLY@[306; 307) \"{\"\n-              WHITESPACE@[307; 316) \"\\n        \"\n-              ENUM_DEF@[316; 453)\n-                COMMENT@[316; 329) \"// fail again\"\n-                WHITESPACE@[329; 338) \"\\n        \"\n-                ENUM_KW@[338; 342) \"enum\"\n-                WHITESPACE@[342; 343) \" \"\n-                NAME@[343; 348)\n-                  IDENT@[343; 348) \"Test4\"\n-                WHITESPACE@[348; 349) \" \"\n-                ENUM_VARIANT_LIST@[349; 453)\n-                  L_CURLY@[349; 350) \"{\"\n-                  WHITESPACE@[350; 363) \"\\n            \"\n-                  ENUM_VARIANT@[363; 372)\n-                    NAME@[363; 367)\n-                      IDENT@[363; 367) \"Nope\"\n-                    TUPLE_FIELD_DEF_LIST@[367; 372)\n-                      L_PAREN@[367; 368) \"(\"\n-                      TUPLE_FIELD_DEF@[368; 371)\n-                        PATH_TYPE@[368; 371)\n-                          PATH@[368; 371)\n-                            PATH_SEGMENT@[368; 371)\n-                              NAME_REF@[368; 371)\n-                                IDENT@[368; 371) \"i32\"\n-                      WHITESPACE@[371; 372) \" \"\n-                      ERROR@[372; 372)\n-                  ERROR@[372; 374)\n-                    L_CURLY@[372; 373) \"{\"\n-                    R_CURLY@[373; 374) \"}\"\n-                  ERROR@[374; 375)\n-                    R_PAREN@[374; 375) \")\"\n-                  WHITESPACE@[375; 376) \" \"\n-                  COMMENT@[376; 396) \"//~ ERROR: found `{`\"\n-                  WHITESPACE@[396; 422) \"\\n                     ...\"\n-                  COMMENT@[422; 443) \"//~^ ERROR: found `{`\"\n-                  WHITESPACE@[443; 452) \"\\n        \"\n-                  R_CURLY@[452; 453) \"}\"\n-              WHITESPACE@[453; 458) \"\\n    \"\n-              R_CURLY@[458; 459) \"}\"\n-        WHITESPACE@[459; 464) \"\\n    \"\n-        COMMENT@[464; 486) \"// still recover later\"\n-        WHITESPACE@[486; 491) \"\\n    \"\n-        LET_STMT@[491; 510)\n-          LET_KW@[491; 494) \"let\"\n-          WHITESPACE@[494; 495) \" \"\n-          BIND_PAT@[495; 505)\n-            NAME@[495; 505)\n-              IDENT@[495; 505) \"bad_syntax\"\n-          WHITESPACE@[505; 506) \" \"\n-          EQ@[506; 507) \"=\"\n-          WHITESPACE@[507; 508) \" \"\n-          ERROR@[508; 509)\n-            UNDERSCORE@[508; 509) \"_\"\n-          SEMICOLON@[509; 510) \";\"\n-        WHITESPACE@[510; 511) \" \"\n-        COMMENT@[511; 572) \"//~ ERROR: expected e ...\"\n-        WHITESPACE@[572; 573) \"\\n\"\n-        R_CURLY@[573; 574) \"}\"\n-  WHITESPACE@[574; 575) \"\\n\"\n-error [95; 95): expected type\n-error [95; 95): expected COMMA\n-error [96; 96): expected field\n-error [98; 98): expected field declaration\n-error [371; 371): expected COMMA\n-error [372; 372): expected a type\n-error [372; 372): expected R_PAREN\n-error [372; 372): expected COMMA\n-error [372; 372): expected enum variant\n-error [374; 374): expected enum variant\n-error [508; 508): expected expression\n+SOURCE_FILE@0..575\n+  FN_DEF@0..574\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..7\n+      IDENT@3..7 \"main\"\n+    PARAM_LIST@7..9\n+      L_PAREN@7..8 \"(\"\n+      R_PAREN@8..9 \")\"\n+    WHITESPACE@9..10 \" \"\n+    BLOCK_EXPR@10..574\n+      BLOCK@10..574\n+        L_CURLY@10..11 \"{\"\n+        WHITESPACE@11..16 \"\\n    \"\n+        ENUM_DEF@16..152\n+          ENUM_KW@16..20 \"enum\"\n+          WHITESPACE@20..21 \" \"\n+          NAME@21..25\n+            IDENT@21..25 \"Test\"\n+          WHITESPACE@25..26 \" \"\n+          ENUM_VARIANT_LIST@26..152\n+            L_CURLY@26..27 \"{\"\n+            WHITESPACE@27..36 \"\\n        \"\n+            ENUM_VARIANT@36..40\n+              NAME@36..40\n+                IDENT@36..40 \"Var1\"\n+            COMMA@40..41 \",\"\n+            WHITESPACE@41..50 \"\\n        \"\n+            ENUM_VARIANT@50..62\n+              NAME@50..54\n+                IDENT@50..54 \"Var2\"\n+              TUPLE_FIELD_DEF_LIST@54..62\n+                L_PAREN@54..55 \"(\"\n+                TUPLE_FIELD_DEF@55..61\n+                  PATH_TYPE@55..61\n+                    PATH@55..61\n+                      PATH_SEGMENT@55..61\n+                        NAME_REF@55..61\n+                          IDENT@55..61 \"String\"\n+                R_PAREN@61..62 \")\"\n+            COMMA@62..63 \",\"\n+            WHITESPACE@63..72 \"\\n        \"\n+            ENUM_VARIANT@72..145\n+              NAME@72..76\n+                IDENT@72..76 \"Var3\"\n+              WHITESPACE@76..77 \" \"\n+              RECORD_FIELD_DEF_LIST@77..145\n+                L_CURLY@77..78 \"{\"\n+                WHITESPACE@78..91 \"\\n            \"\n+                RECORD_FIELD_DEF@91..95\n+                  NAME@91..94\n+                    IDENT@91..94 \"abc\"\n+                  COLON@94..95 \":\"\n+                WHITESPACE@95..96 \" \"\n+                ERROR@96..98\n+                  L_CURLY@96..97 \"{\"\n+                  R_CURLY@97..98 \"}\"\n+                ERROR@98..99\n+                  COMMA@98..99 \",\"\n+                WHITESPACE@99..100 \" \"\n+                COMMENT@100..135 \"//~ ERROR: expected t ...\"\n+                WHITESPACE@135..144 \"\\n        \"\n+                R_CURLY@144..145 \"}\"\n+            COMMA@145..146 \",\"\n+            WHITESPACE@146..151 \"\\n    \"\n+            R_CURLY@151..152 \"}\"\n+        WHITESPACE@152..158 \"\\n\\n    \"\n+        COMMENT@158..171 \"// recover...\"\n+        WHITESPACE@171..176 \"\\n    \"\n+        LET_STMT@176..186\n+          LET_KW@176..179 \"let\"\n+          WHITESPACE@179..180 \" \"\n+          BIND_PAT@180..181\n+            NAME@180..181\n+              IDENT@180..181 \"a\"\n+          WHITESPACE@181..182 \" \"\n+          EQ@182..183 \"=\"\n+          WHITESPACE@183..184 \" \"\n+          LITERAL@184..185\n+            INT_NUMBER@184..185 \"1\"\n+          SEMICOLON@185..186 \";\"\n+        WHITESPACE@186..191 \"\\n    \"\n+        ENUM_DEF@191..223\n+          ENUM_KW@191..195 \"enum\"\n+          WHITESPACE@195..196 \" \"\n+          NAME@196..201\n+            IDENT@196..201 \"Test2\"\n+          WHITESPACE@201..202 \" \"\n+          ENUM_VARIANT_LIST@202..223\n+            L_CURLY@202..203 \"{\"\n+            WHITESPACE@203..212 \"\\n        \"\n+            ENUM_VARIANT@212..216\n+              NAME@212..216\n+                IDENT@212..216 \"Fine\"\n+            COMMA@216..217 \",\"\n+            WHITESPACE@217..222 \"\\n    \"\n+            R_CURLY@222..223 \"}\"\n+        WHITESPACE@223..229 \"\\n\\n    \"\n+        ENUM_DEF@229..300\n+          ENUM_KW@229..233 \"enum\"\n+          WHITESPACE@233..234 \" \"\n+          NAME@234..239\n+            IDENT@234..239 \"Test3\"\n+          WHITESPACE@239..240 \" \"\n+          ENUM_VARIANT_LIST@240..300\n+            L_CURLY@240..241 \"{\"\n+            WHITESPACE@241..250 \"\\n        \"\n+            ENUM_VARIANT@250..293\n+              NAME@250..259\n+                IDENT@250..259 \"StillFine\"\n+              WHITESPACE@259..260 \" \"\n+              RECORD_FIELD_DEF_LIST@260..293\n+                L_CURLY@260..261 \"{\"\n+                WHITESPACE@261..274 \"\\n            \"\n+                RECORD_FIELD_DEF@274..282\n+                  NAME@274..277\n+                    IDENT@274..277 \"def\"\n+                  COLON@277..278 \":\"\n+                  WHITESPACE@278..279 \" \"\n+                  PATH_TYPE@279..282\n+                    PATH@279..282\n+                      PATH_SEGMENT@279..282\n+                        NAME_REF@279..282\n+                          IDENT@279..282 \"i32\"\n+                COMMA@282..283 \",\"\n+                WHITESPACE@283..292 \"\\n        \"\n+                R_CURLY@292..293 \"}\"\n+            COMMA@293..294 \",\"\n+            WHITESPACE@294..299 \"\\n    \"\n+            R_CURLY@299..300 \"}\"\n+        WHITESPACE@300..306 \"\\n\\n    \"\n+        EXPR_STMT@306..459\n+          BLOCK_EXPR@306..459\n+            BLOCK@306..459\n+              L_CURLY@306..307 \"{\"\n+              WHITESPACE@307..316 \"\\n        \"\n+              ENUM_DEF@316..453\n+                COMMENT@316..329 \"// fail again\"\n+                WHITESPACE@329..338 \"\\n        \"\n+                ENUM_KW@338..342 \"enum\"\n+                WHITESPACE@342..343 \" \"\n+                NAME@343..348\n+                  IDENT@343..348 \"Test4\"\n+                WHITESPACE@348..349 \" \"\n+                ENUM_VARIANT_LIST@349..453\n+                  L_CURLY@349..350 \"{\"\n+                  WHITESPACE@350..363 \"\\n            \"\n+                  ENUM_VARIANT@363..372\n+                    NAME@363..367\n+                      IDENT@363..367 \"Nope\"\n+                    TUPLE_FIELD_DEF_LIST@367..372\n+                      L_PAREN@367..368 \"(\"\n+                      TUPLE_FIELD_DEF@368..371\n+                        PATH_TYPE@368..371\n+                          PATH@368..371\n+                            PATH_SEGMENT@368..371\n+                              NAME_REF@368..371\n+                                IDENT@368..371 \"i32\"\n+                      WHITESPACE@371..372 \" \"\n+                      ERROR@372..372\n+                  ERROR@372..374\n+                    L_CURLY@372..373 \"{\"\n+                    R_CURLY@373..374 \"}\"\n+                  ERROR@374..375\n+                    R_PAREN@374..375 \")\"\n+                  WHITESPACE@375..376 \" \"\n+                  COMMENT@376..396 \"//~ ERROR: found `{`\"\n+                  WHITESPACE@396..422 \"\\n                     ...\"\n+                  COMMENT@422..443 \"//~^ ERROR: found `{`\"\n+                  WHITESPACE@443..452 \"\\n        \"\n+                  R_CURLY@452..453 \"}\"\n+              WHITESPACE@453..458 \"\\n    \"\n+              R_CURLY@458..459 \"}\"\n+        WHITESPACE@459..464 \"\\n    \"\n+        COMMENT@464..486 \"// still recover later\"\n+        WHITESPACE@486..491 \"\\n    \"\n+        LET_STMT@491..510\n+          LET_KW@491..494 \"let\"\n+          WHITESPACE@494..495 \" \"\n+          BIND_PAT@495..505\n+            NAME@495..505\n+              IDENT@495..505 \"bad_syntax\"\n+          WHITESPACE@505..506 \" \"\n+          EQ@506..507 \"=\"\n+          WHITESPACE@507..508 \" \"\n+          ERROR@508..509\n+            UNDERSCORE@508..509 \"_\"\n+          SEMICOLON@509..510 \";\"\n+        WHITESPACE@510..511 \" \"\n+        COMMENT@511..572 \"//~ ERROR: expected e ...\"\n+        WHITESPACE@572..573 \"\\n\"\n+        R_CURLY@573..574 \"}\"\n+  WHITESPACE@574..575 \"\\n\"\n+error 95..95: expected type\n+error 95..95: expected COMMA\n+error 96..96: expected field\n+error 98..98: expected field declaration\n+error 371..371: expected COMMA\n+error 372..372: expected a type\n+error 372..372: expected R_PAREN\n+error 372..372: expected COMMA\n+error 372..372: expected enum variant\n+error 374..374: expected enum variant\n+error 508..508: expected expression"}, {"sha": "bf07409fb0d12106420ffb502eefbd1c6250ee43", "filename": "crates/ra_syntax/test_data/parser/err/0026_imp_recovery.rast", "status": "modified", "additions": 49, "deletions": 49, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0026_imp_recovery.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,49 +1,49 @@\n-SOURCE_FILE@[0; 38)\n-  IMPL_DEF@[0; 14)\n-    IMPL_KW@[0; 4) \"impl\"\n-    TYPE_PARAM_LIST@[4; 14)\n-      L_ANGLE@[4; 5) \"<\"\n-      TYPE_PARAM@[5; 13)\n-        NAME@[5; 6)\n-          IDENT@[5; 6) \"T\"\n-        COLON@[6; 7) \":\"\n-        WHITESPACE@[7; 8) \" \"\n-        TYPE_BOUND_LIST@[8; 13)\n-          TYPE_BOUND@[8; 13)\n-            PATH_TYPE@[8; 13)\n-              PATH@[8; 13)\n-                PATH_SEGMENT@[8; 13)\n-                  NAME_REF@[8; 13)\n-                    IDENT@[8; 13) \"Clone\"\n-      R_ANGLE@[13; 14) \">\"\n-  WHITESPACE@[14; 15) \"\\n\"\n-  IMPL_DEF@[15; 37)\n-    IMPL_KW@[15; 19) \"impl\"\n-    TYPE_PARAM_LIST@[19; 22)\n-      L_ANGLE@[19; 20) \"<\"\n-      TYPE_PARAM@[20; 21)\n-        NAME@[20; 21)\n-          IDENT@[20; 21) \"T\"\n-      R_ANGLE@[21; 22) \">\"\n-    WHITESPACE@[22; 23) \" \"\n-    PATH_TYPE@[23; 34)\n-      PATH@[23; 34)\n-        PATH_SEGMENT@[23; 34)\n-          NAME_REF@[23; 31)\n-            IDENT@[23; 31) \"OnceCell\"\n-          TYPE_ARG_LIST@[31; 34)\n-            L_ANGLE@[31; 32) \"<\"\n-            TYPE_ARG@[32; 33)\n-              PATH_TYPE@[32; 33)\n-                PATH@[32; 33)\n-                  PATH_SEGMENT@[32; 33)\n-                    NAME_REF@[32; 33)\n-                      IDENT@[32; 33) \"T\"\n-            R_ANGLE@[33; 34) \">\"\n-    WHITESPACE@[34; 35) \" \"\n-    ITEM_LIST@[35; 37)\n-      L_CURLY@[35; 36) \"{\"\n-      R_CURLY@[36; 37) \"}\"\n-  WHITESPACE@[37; 38) \"\\n\"\n-error [14; 14): expected trait or type\n-error [14; 14): expected `{`\n+SOURCE_FILE@0..38\n+  IMPL_DEF@0..14\n+    IMPL_KW@0..4 \"impl\"\n+    TYPE_PARAM_LIST@4..14\n+      L_ANGLE@4..5 \"<\"\n+      TYPE_PARAM@5..13\n+        NAME@5..6\n+          IDENT@5..6 \"T\"\n+        COLON@6..7 \":\"\n+        WHITESPACE@7..8 \" \"\n+        TYPE_BOUND_LIST@8..13\n+          TYPE_BOUND@8..13\n+            PATH_TYPE@8..13\n+              PATH@8..13\n+                PATH_SEGMENT@8..13\n+                  NAME_REF@8..13\n+                    IDENT@8..13 \"Clone\"\n+      R_ANGLE@13..14 \">\"\n+  WHITESPACE@14..15 \"\\n\"\n+  IMPL_DEF@15..37\n+    IMPL_KW@15..19 \"impl\"\n+    TYPE_PARAM_LIST@19..22\n+      L_ANGLE@19..20 \"<\"\n+      TYPE_PARAM@20..21\n+        NAME@20..21\n+          IDENT@20..21 \"T\"\n+      R_ANGLE@21..22 \">\"\n+    WHITESPACE@22..23 \" \"\n+    PATH_TYPE@23..34\n+      PATH@23..34\n+        PATH_SEGMENT@23..34\n+          NAME_REF@23..31\n+            IDENT@23..31 \"OnceCell\"\n+          TYPE_ARG_LIST@31..34\n+            L_ANGLE@31..32 \"<\"\n+            TYPE_ARG@32..33\n+              PATH_TYPE@32..33\n+                PATH@32..33\n+                  PATH_SEGMENT@32..33\n+                    NAME_REF@32..33\n+                      IDENT@32..33 \"T\"\n+            R_ANGLE@33..34 \">\"\n+    WHITESPACE@34..35 \" \"\n+    ITEM_LIST@35..37\n+      L_CURLY@35..36 \"{\"\n+      R_CURLY@36..37 \"}\"\n+  WHITESPACE@37..38 \"\\n\"\n+error 14..14: expected trait or type\n+error 14..14: expected `{`"}, {"sha": "f2fada510502f4e2f25104834ac3bbc547f912d3", "filename": "crates/ra_syntax/test_data/parser/err/0027_incomplere_where_for.rast", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0027_incomplere_where_for.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,29 +1,29 @@\n-SOURCE_FILE@[0; 30)\n-  FN_DEF@[0; 29)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 8)\n-      L_PAREN@[6; 7) \"(\"\n-      R_PAREN@[7; 8) \")\"\n-    WHITESPACE@[8; 13) \"\\n    \"\n-    WHERE_CLAUSE@[13; 26)\n-      WHERE_KW@[13; 18) \"where\"\n-      WHITESPACE@[18; 19) \" \"\n-      WHERE_PRED@[19; 26)\n-        FOR_TYPE@[19; 26)\n-          FOR_KW@[19; 22) \"for\"\n-          TYPE_PARAM_LIST@[22; 26)\n-            L_ANGLE@[22; 23) \"<\"\n-            LIFETIME_PARAM@[23; 25)\n-              LIFETIME@[23; 25) \"\\'a\"\n-            R_ANGLE@[25; 26) \">\"\n-    WHITESPACE@[26; 27) \"\\n\"\n-    BLOCK_EXPR@[27; 29)\n-      BLOCK@[27; 29)\n-        L_CURLY@[27; 28) \"{\"\n-        R_CURLY@[28; 29) \"}\"\n-  WHITESPACE@[29; 30) \"\\n\"\n-error [26; 26): expected a path\n-error [26; 26): expected colon\n+SOURCE_FILE@0..30\n+  FN_DEF@0..29\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..6\n+      IDENT@3..6 \"foo\"\n+    PARAM_LIST@6..8\n+      L_PAREN@6..7 \"(\"\n+      R_PAREN@7..8 \")\"\n+    WHITESPACE@8..13 \"\\n    \"\n+    WHERE_CLAUSE@13..26\n+      WHERE_KW@13..18 \"where\"\n+      WHITESPACE@18..19 \" \"\n+      WHERE_PRED@19..26\n+        FOR_TYPE@19..26\n+          FOR_KW@19..22 \"for\"\n+          TYPE_PARAM_LIST@22..26\n+            L_ANGLE@22..23 \"<\"\n+            LIFETIME_PARAM@23..25\n+              LIFETIME@23..25 \"\\'a\"\n+            R_ANGLE@25..26 \">\"\n+    WHITESPACE@26..27 \"\\n\"\n+    BLOCK_EXPR@27..29\n+      BLOCK@27..29\n+        L_CURLY@27..28 \"{\"\n+        R_CURLY@28..29 \"}\"\n+  WHITESPACE@29..30 \"\\n\"\n+error 26..26: expected a path\n+error 26..26: expected colon"}, {"sha": "56682f9661409c797748fe5d88b8992ca4bc67ef", "filename": "crates/ra_syntax/test_data/parser/err/0029_field_completion.rast", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0029_field_completion.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,36 +1,36 @@\n-SOURCE_FILE@[0; 24)\n-  FN_DEF@[0; 23)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 6)\n-      IDENT@[3; 6) \"foo\"\n-    PARAM_LIST@[6; 12)\n-      L_PAREN@[6; 7) \"(\"\n-      PARAM@[7; 11)\n-        BIND_PAT@[7; 8)\n-          NAME@[7; 8)\n-            IDENT@[7; 8) \"a\"\n-        COLON@[8; 9) \":\"\n-        WHITESPACE@[9; 10) \" \"\n-        PATH_TYPE@[10; 11)\n-          PATH@[10; 11)\n-            PATH_SEGMENT@[10; 11)\n-              NAME_REF@[10; 11)\n-                IDENT@[10; 11) \"A\"\n-      R_PAREN@[11; 12) \")\"\n-    WHITESPACE@[12; 13) \" \"\n-    BLOCK_EXPR@[13; 23)\n-      BLOCK@[13; 23)\n-        L_CURLY@[13; 14) \"{\"\n-        WHITESPACE@[14; 19) \"\\n    \"\n-        FIELD_EXPR@[19; 21)\n-          PATH_EXPR@[19; 20)\n-            PATH@[19; 20)\n-              PATH_SEGMENT@[19; 20)\n-                NAME_REF@[19; 20)\n-                  IDENT@[19; 20) \"a\"\n-          DOT@[20; 21) \".\"\n-        WHITESPACE@[21; 22) \"\\n\"\n-        R_CURLY@[22; 23) \"}\"\n-  WHITESPACE@[23; 24) \"\\n\"\n-error [21; 21): expected field name or number\n+SOURCE_FILE@0..24\n+  FN_DEF@0..23\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..6\n+      IDENT@3..6 \"foo\"\n+    PARAM_LIST@6..12\n+      L_PAREN@6..7 \"(\"\n+      PARAM@7..11\n+        BIND_PAT@7..8\n+          NAME@7..8\n+            IDENT@7..8 \"a\"\n+        COLON@8..9 \":\"\n+        WHITESPACE@9..10 \" \"\n+        PATH_TYPE@10..11\n+          PATH@10..11\n+            PATH_SEGMENT@10..11\n+              NAME_REF@10..11\n+                IDENT@10..11 \"A\"\n+      R_PAREN@11..12 \")\"\n+    WHITESPACE@12..13 \" \"\n+    BLOCK_EXPR@13..23\n+      BLOCK@13..23\n+        L_CURLY@13..14 \"{\"\n+        WHITESPACE@14..19 \"\\n    \"\n+        FIELD_EXPR@19..21\n+          PATH_EXPR@19..20\n+            PATH@19..20\n+              PATH_SEGMENT@19..20\n+                NAME_REF@19..20\n+                  IDENT@19..20 \"a\"\n+          DOT@20..21 \".\"\n+        WHITESPACE@21..22 \"\\n\"\n+        R_CURLY@22..23 \"}\"\n+  WHITESPACE@23..24 \"\\n\"\n+error 21..21: expected field name or number"}, {"sha": "aac4764304aad83ec09cb3ab9d93bb8eb7b0f6f5", "filename": "crates/ra_syntax/test_data/parser/err/0031_block_inner_attrs.rast", "status": "modified", "additions": 125, "deletions": 125, "changes": 250, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0031_block_inner_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0031_block_inner_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0031_block_inner_attrs.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72", "patch": "@@ -1,125 +1,125 @@\n-SOURCE_FILE@[0; 350)\n-  FN_DEF@[0; 349)\n-    FN_KW@[0; 2) \"fn\"\n-    WHITESPACE@[2; 3) \" \"\n-    NAME@[3; 8)\n-      IDENT@[3; 8) \"block\"\n-    PARAM_LIST@[8; 10)\n-      L_PAREN@[8; 9) \"(\"\n-      R_PAREN@[9; 10) \")\"\n-    WHITESPACE@[10; 11) \" \"\n-    BLOCK_EXPR@[11; 349)\n-      BLOCK@[11; 349)\n-        L_CURLY@[11; 12) \"{\"\n-        WHITESPACE@[12; 17) \"\\n    \"\n-        LET_STMT@[17; 129)\n-          LET_KW@[17; 20) \"let\"\n-          WHITESPACE@[20; 21) \" \"\n-          BIND_PAT@[21; 26)\n-            NAME@[21; 26)\n-              IDENT@[21; 26) \"inner\"\n-          WHITESPACE@[26; 27) \" \"\n-          EQ@[27; 28) \"=\"\n-          WHITESPACE@[28; 29) \" \"\n-          BLOCK_EXPR@[29; 128)\n-            BLOCK@[29; 128)\n-              L_CURLY@[29; 30) \"{\"\n-              WHITESPACE@[30; 39) \"\\n        \"\n-              ATTR@[39; 83)\n-                POUND@[39; 40) \"#\"\n-                BANG@[40; 41) \"!\"\n-                L_BRACK@[41; 42) \"[\"\n-                PATH@[42; 45)\n-                  PATH_SEGMENT@[42; 45)\n-                    NAME_REF@[42; 45)\n-                      IDENT@[42; 45) \"doc\"\n-                TOKEN_TREE@[45; 82)\n-                  L_PAREN@[45; 46) \"(\"\n-                  STRING@[46; 81) \"\\\"Inner attributes not ...\"\n-                  R_PAREN@[81; 82) \")\"\n-                R_BRACK@[82; 83) \"]\"\n-              WHITESPACE@[83; 92) \"\\n        \"\n-              COMMENT@[92; 122) \"//! Nor are ModuleDoc ...\"\n-              WHITESPACE@[122; 127) \"\\n    \"\n-              R_CURLY@[127; 128) \"}\"\n-          SEMICOLON@[128; 129) \";\"\n-        WHITESPACE@[129; 134) \"\\n    \"\n-        EXPR_STMT@[134; 257)\n-          IF_EXPR@[134; 257)\n-            IF_KW@[134; 136) \"if\"\n-            WHITESPACE@[136; 137) \" \"\n-            CONDITION@[137; 141)\n-              LITERAL@[137; 141)\n-                TRUE_KW@[137; 141) \"true\"\n-            WHITESPACE@[141; 142) \" \"\n-            BLOCK_EXPR@[142; 257)\n-              BLOCK@[142; 257)\n-                L_CURLY@[142; 143) \"{\"\n-                WHITESPACE@[143; 152) \"\\n        \"\n-                ATTR@[152; 171)\n-                  POUND@[152; 153) \"#\"\n-                  BANG@[153; 154) \"!\"\n-                  L_BRACK@[154; 155) \"[\"\n-                  PATH@[155; 158)\n-                    PATH_SEGMENT@[155; 158)\n-                      NAME_REF@[155; 158)\n-                        IDENT@[155; 158) \"doc\"\n-                  TOKEN_TREE@[158; 170)\n-                    L_PAREN@[158; 159) \"(\"\n-                    STRING@[159; 169) \"\\\"Nor here\\\"\"\n-                    R_PAREN@[169; 170) \")\"\n-                  R_BRACK@[170; 171) \"]\"\n-                WHITESPACE@[171; 180) \"\\n        \"\n-                ATTR@[180; 212)\n-                  POUND@[180; 181) \"#\"\n-                  BANG@[181; 182) \"!\"\n-                  L_BRACK@[182; 183) \"[\"\n-                  PATH@[183; 186)\n-                    PATH_SEGMENT@[183; 186)\n-                      NAME_REF@[183; 186)\n-                        IDENT@[183; 186) \"doc\"\n-                  TOKEN_TREE@[186; 211)\n-                    L_PAREN@[186; 187) \"(\"\n-                    STRING@[187; 210) \"\\\"We error on each attr\\\"\"\n-                    R_PAREN@[210; 211) \")\"\n-                  R_BRACK@[211; 212) \"]\"\n-                WHITESPACE@[212; 221) \"\\n        \"\n-                COMMENT@[221; 251) \"//! Nor are ModuleDoc ...\"\n-                WHITESPACE@[251; 256) \"\\n    \"\n-                R_CURLY@[256; 257) \"}\"\n-        WHITESPACE@[257; 262) \"\\n    \"\n-        WHILE_EXPR@[262; 347)\n-          WHILE_KW@[262; 267) \"while\"\n-          WHITESPACE@[267; 268) \" \"\n-          CONDITION@[268; 272)\n-            LITERAL@[268; 272)\n-              TRUE_KW@[268; 272) \"true\"\n-          WHITESPACE@[272; 273) \" \"\n-          BLOCK_EXPR@[273; 347)\n-            BLOCK@[273; 347)\n-              L_CURLY@[273; 274) \"{\"\n-              WHITESPACE@[274; 283) \"\\n        \"\n-              ATTR@[283; 302)\n-                POUND@[283; 284) \"#\"\n-                BANG@[284; 285) \"!\"\n-                L_BRACK@[285; 286) \"[\"\n-                PATH@[286; 289)\n-                  PATH_SEGMENT@[286; 289)\n-                    NAME_REF@[286; 289)\n-                      IDENT@[286; 289) \"doc\"\n-                TOKEN_TREE@[289; 301)\n-                  L_PAREN@[289; 290) \"(\"\n-                  STRING@[290; 300) \"\\\"Nor here\\\"\"\n-                  R_PAREN@[300; 301) \")\"\n-                R_BRACK@[301; 302) \"]\"\n-              WHITESPACE@[302; 311) \"\\n        \"\n-              COMMENT@[311; 341) \"//! Nor are ModuleDoc ...\"\n-              WHITESPACE@[341; 346) \"\\n    \"\n-              R_CURLY@[346; 347) \"}\"\n-        WHITESPACE@[347; 348) \"\\n\"\n-        R_CURLY@[348; 349) \"}\"\n-  WHITESPACE@[349; 350) \"\\n\"\n-error [39; 83): A block in this position cannot accept inner attributes\n-error [152; 171): A block in this position cannot accept inner attributes\n-error [180; 212): A block in this position cannot accept inner attributes\n-error [283; 302): A block in this position cannot accept inner attributes\n+SOURCE_FILE@0..350\n+  FN_DEF@0..349\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..8\n+      IDENT@3..8 \"block\"\n+    PARAM_LIST@8..10\n+      L_PAREN@8..9 \"(\"\n+      R_PAREN@9..10 \")\"\n+    WHITESPACE@10..11 \" \"\n+    BLOCK_EXPR@11..349\n+      BLOCK@11..349\n+        L_CURLY@11..12 \"{\"\n+        WHITESPACE@12..17 \"\\n    \"\n+        LET_STMT@17..129\n+          LET_KW@17..20 \"let\"\n+          WHITESPACE@20..21 \" \"\n+          BIND_PAT@21..26\n+            NAME@21..26\n+              IDENT@21..26 \"inner\"\n+          WHITESPACE@26..27 \" \"\n+          EQ@27..28 \"=\"\n+          WHITESPACE@28..29 \" \"\n+          BLOCK_EXPR@29..128\n+            BLOCK@29..128\n+              L_CURLY@29..30 \"{\"\n+              WHITESPACE@30..39 \"\\n        \"\n+              ATTR@39..83\n+                POUND@39..40 \"#\"\n+                BANG@40..41 \"!\"\n+                L_BRACK@41..42 \"[\"\n+                PATH@42..45\n+                  PATH_SEGMENT@42..45\n+                    NAME_REF@42..45\n+                      IDENT@42..45 \"doc\"\n+                TOKEN_TREE@45..82\n+                  L_PAREN@45..46 \"(\"\n+                  STRING@46..81 \"\\\"Inner attributes not ...\"\n+                  R_PAREN@81..82 \")\"\n+                R_BRACK@82..83 \"]\"\n+              WHITESPACE@83..92 \"\\n        \"\n+              COMMENT@92..122 \"//! Nor are ModuleDoc ...\"\n+              WHITESPACE@122..127 \"\\n    \"\n+              R_CURLY@127..128 \"}\"\n+          SEMICOLON@128..129 \";\"\n+        WHITESPACE@129..134 \"\\n    \"\n+        EXPR_STMT@134..257\n+          IF_EXPR@134..257\n+            IF_KW@134..136 \"if\"\n+            WHITESPACE@136..137 \" \"\n+            CONDITION@137..141\n+              LITERAL@137..141\n+                TRUE_KW@137..141 \"true\"\n+            WHITESPACE@141..142 \" \"\n+            BLOCK_EXPR@142..257\n+              BLOCK@142..257\n+                L_CURLY@142..143 \"{\"\n+                WHITESPACE@143..152 \"\\n        \"\n+                ATTR@152..171\n+                  POUND@152..153 \"#\"\n+                  BANG@153..154 \"!\"\n+                  L_BRACK@154..155 \"[\"\n+                  PATH@155..158\n+                    PATH_SEGMENT@155..158\n+                      NAME_REF@155..158\n+                        IDENT@155..158 \"doc\"\n+                  TOKEN_TREE@158..170\n+                    L_PAREN@158..159 \"(\"\n+                    STRING@159..169 \"\\\"Nor here\\\"\"\n+                    R_PAREN@169..170 \")\"\n+                  R_BRACK@170..171 \"]\"\n+                WHITESPACE@171..180 \"\\n        \"\n+                ATTR@180..212\n+                  POUND@180..181 \"#\"\n+                  BANG@181..182 \"!\"\n+                  L_BRACK@182..183 \"[\"\n+                  PATH@183..186\n+                    PATH_SEGMENT@183..186\n+                      NAME_REF@183..186\n+                        IDENT@183..186 \"doc\"\n+                  TOKEN_TREE@186..211\n+                    L_PAREN@186..187 \"(\"\n+                    STRING@187..210 \"\\\"We error on each attr\\\"\"\n+                    R_PAREN@210..211 \")\"\n+                  R_BRACK@211..212 \"]\"\n+                WHITESPACE@212..221 \"\\n        \"\n+                COMMENT@221..251 \"//! Nor are ModuleDoc ...\"\n+                WHITESPACE@251..256 \"\\n    \"\n+                R_CURLY@256..257 \"}\"\n+        WHITESPACE@257..262 \"\\n    \"\n+        WHILE_EXPR@262..347\n+          WHILE_KW@262..267 \"while\"\n+          WHITESPACE@267..268 \" \"\n+          CONDITION@268..272\n+            LITERAL@268..272\n+              TRUE_KW@268..272 \"true\"\n+          WHITESPACE@272..273 \" \"\n+          BLOCK_EXPR@273..347\n+            BLOCK@273..347\n+              L_CURLY@273..274 \"{\"\n+              WHITESPACE@274..283 \"\\n        \"\n+              ATTR@283..302\n+                POUND@283..284 \"#\"\n+                BANG@284..285 \"!\"\n+                L_BRACK@285..286 \"[\"\n+                PATH@286..289\n+                  PATH_SEGMENT@286..289\n+                    NAME_REF@286..289\n+                      IDENT@286..289 \"doc\"\n+                TOKEN_TREE@289..301\n+                  L_PAREN@289..290 \"(\"\n+                  STRING@290..300 \"\\\"Nor here\\\"\"\n+                  R_PAREN@300..301 \")\"\n+                R_BRACK@301..302 \"]\"\n+              WHITESPACE@302..311 \"\\n        \"\n+              COMMENT@311..341 \"//! Nor are ModuleDoc ...\"\n+              WHITESPACE@341..346 \"\\n    \"\n+              R_CURLY@346..347 \"}\"\n+        WHITESPACE@347..348 \"\\n\"\n+        R_CURLY@348..349 \"}\"\n+  WHITESPACE@349..350 \"\\n\"\n+error 39..83: A block in this position cannot accept inner attributes\n+error 152..171: A block in this position cannot accept inner attributes\n+error 180..212: A block in this position cannot accept inner attributes\n+error 283..302: A block in this position cannot accept inner attributes"}, {"sha": "f98de7f151a280fe1a2dd51f4b6713138e1d0fc4", "filename": "crates/ra_syntax/test_data/parser/err/0032_match_arms_inner_attrs.rast", "status": "modified", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0032_match_arms_inner_attrs.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "d0017c883c082f5d92da4e1e3d961a46d9611c80", "filename": "crates/ra_syntax/test_data/parser/err/0033_match_arms_outer_attrs.rast", "status": "modified", "additions": 67, "deletions": 67, "changes": 134, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0033_match_arms_outer_attrs.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "2c0bddec850dbb9f905b77bc23bc9858704313f5", "filename": "crates/ra_syntax/test_data/parser/err/0034_bad_box_pattern.rast", "status": "modified", "additions": 96, "deletions": 96, "changes": 192, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0034_bad_box_pattern.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "83851f5d2f648740556c3d87db2f025bdc657c41", "filename": "crates/ra_syntax/test_data/parser/err/0035_use_recover.rast", "status": "modified", "additions": 54, "deletions": 54, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0035_use_recover.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "f926b67d26f83ec409c3896a6c3d505373bd7217", "filename": "crates/ra_syntax/test_data/parser/err/0036_partial_use.rast", "status": "modified", "additions": 51, "deletions": 51, "changes": 102, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0036_partial_use.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "a328222aabb327ac9e8ce3d24617dd5e283ee940", "filename": "crates/ra_syntax/test_data/parser/err/0037_visibility_in_traits.rast", "status": "modified", "additions": 99, "deletions": 99, "changes": 198, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0037_visibility_in_traits.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0037_visibility_in_traits.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0037_visibility_in_traits.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "bcd1fad69bd7382de309461838e408d087fedf6c", "filename": "crates/ra_syntax/test_data/parser/err/0038_endless_inclusive_range.rast", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0038_endless_inclusive_range.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0038_endless_inclusive_range.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0038_endless_inclusive_range.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "433ea7bad18d4de6de8665a6cc76eed8d4b7badd", "filename": "crates/ra_syntax/test_data/parser/err/0039_lambda_recovery.rast", "status": "modified", "additions": 83, "deletions": 83, "changes": 166, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Ferr%2F0039_lambda_recovery.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "bf70ebca4374603b45ff890c7ec4b4cfb667269b", "filename": "crates/ra_syntax/test_data/parser/inline/err/0001_array_type_missing_semi.rast", "status": "modified", "additions": 27, "deletions": 27, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0001_array_type_missing_semi.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0001_array_type_missing_semi.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0001_array_type_missing_semi.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "85bf276a06b895f40d8dbb2da821616b15f92712", "filename": "crates/ra_syntax/test_data/parser/inline/err/0002_misplaced_label_err.rast", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0002_misplaced_label_err.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0002_misplaced_label_err.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0002_misplaced_label_err.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "95bcc3c0a9009e859c81fa1caee7a76fa96afe21", "filename": "crates/ra_syntax/test_data/parser/inline/err/0003_pointer_type_no_mutability.rast", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "fd939be8db5a66b1af55f2520c2b70676e822098", "filename": "crates/ra_syntax/test_data/parser/inline/err/0004_impl_type.rast", "status": "modified", "additions": 79, "deletions": 79, "changes": 158, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0004_impl_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0004_impl_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0004_impl_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "90202d7643a28e48456ad7efe606cd0d51d7f28a", "filename": "crates/ra_syntax/test_data/parser/inline/err/0005_fn_pointer_type_missing_fn.rast", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0005_fn_pointer_type_missing_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0005_fn_pointer_type_missing_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0005_fn_pointer_type_missing_fn.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "b901c17f707b2588419c956358a404b469d227f7", "filename": "crates/ra_syntax/test_data/parser/inline/err/0006_unsafe_block_in_mod.rast", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0006_unsafe_block_in_mod.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0006_unsafe_block_in_mod.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0006_unsafe_block_in_mod.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "3f48b86edc9f9f55b1ee457430e790e16cd7b2f8", "filename": "crates/ra_syntax/test_data/parser/inline/err/0007_async_without_semicolon.rast", "status": "modified", "additions": 32, "deletions": 32, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0007_async_without_semicolon.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0007_async_without_semicolon.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0007_async_without_semicolon.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "be02eaeeb04a40c6ae8784b268b22355896ca0a1", "filename": "crates/ra_syntax/test_data/parser/inline/err/0008_pub_expr.rast", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0008_pub_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0008_pub_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0008_pub_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "b344e4f7f425ba27a894542c542e87c5ddfcaf82", "filename": "crates/ra_syntax/test_data/parser/inline/err/0009_attr_on_expr_not_allowed.rast", "status": "modified", "additions": 61, "deletions": 61, "changes": 122, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0009_attr_on_expr_not_allowed.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0009_attr_on_expr_not_allowed.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0009_attr_on_expr_not_allowed.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "5339a84d7d51ad86b2a9d1fc38d6906c99d217c0", "filename": "crates/ra_syntax/test_data/parser/inline/err/0010_bad_tuple_index_expr.rast", "status": "modified", "additions": 53, "deletions": 53, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_bad_tuple_index_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_bad_tuple_index_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_bad_tuple_index_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "20ed390464b06f419018a1bdd37870154f8e649a", "filename": "crates/ra_syntax/test_data/parser/inline/err/0010_wrong_order_fns.rast", "status": "modified", "additions": 41, "deletions": 41, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0010_wrong_order_fns.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "ebcc26e0d61453938fab8ac572f83995d51cb427", "filename": "crates/ra_syntax/test_data/parser/inline/err/0013_static_underscore.rast", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0013_static_underscore.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0013_static_underscore.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0013_static_underscore.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "88567263e97d5c02475808433629d4446211fc18", "filename": "crates/ra_syntax/test_data/parser/inline/err/0014_default_fn_type.rast", "status": "modified", "additions": 59, "deletions": 59, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_default_fn_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "578befa565d13d6deb0b94f4a3fde942a02945fc", "filename": "crates/ra_syntax/test_data/parser/inline/err/0014_record_literal_before_ellipsis_recovery.rast", "status": "modified", "additions": 49, "deletions": 49, "changes": 98, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_record_literal_before_ellipsis_recovery.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_record_literal_before_ellipsis_recovery.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Ferr%2F0014_record_literal_before_ellipsis_recovery.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "a1fabb557b5fb0f94df8c99b1ae854cf2135b084", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0001_trait_item_list.rast", "status": "modified", "additions": 72, "deletions": 72, "changes": 144, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0001_trait_item_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0001_trait_item_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0001_trait_item_list.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "bd74b44a68b90bc85b7b6e2bfb50610a83e58bb7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0002_use_tree_list.rast", "status": "modified", "additions": 135, "deletions": 135, "changes": 270, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0002_use_tree_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0002_use_tree_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0002_use_tree_list.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "a46d76fdee4a5ebe7457b526839823e3efb5cedc", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0003_where_pred_for.rast", "status": "modified", "additions": 62, "deletions": 62, "changes": 124, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0003_where_pred_for.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "20eba09f5f2f895249a2b0429329e30944ffa1f5", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0004_value_parameters_no_patterns.rast", "status": "modified", "additions": 60, "deletions": 60, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "5181fcd2bcb4deb6887edd864e18206d53422f2a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0005_function_type_params.rast", "status": "modified", "additions": 38, "deletions": 38, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0005_function_type_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0005_function_type_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0005_function_type_params.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "dd41b44e15f2ecfd356c81a7983ccce1f8c0b1f7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0006_self_param.rast", "status": "modified", "additions": 121, "deletions": 121, "changes": 242, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0006_self_param.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "7cb9e1d55ebdc548d9294db28b8236915cc79c7f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0007_type_param_bounds.rast", "status": "modified", "additions": 40, "deletions": 40, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0007_type_param_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0007_type_param_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0007_type_param_bounds.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "a8ddd20c93402e8ea3d25c22a5d51f9bcf73d886", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0008_path_part.rast", "status": "modified", "additions": 97, "deletions": 97, "changes": 194, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "df8ada62add85a60d76aa9b82e167fd48aafab29", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0009_loop_expr.rast", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0009_loop_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0009_loop_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0009_loop_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "869875875e1c2fa2ef33b7ff66b2e7a511def96a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0010_extern_block.rast", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0010_extern_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0010_extern_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0010_extern_block.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "de01cc79e2a3d40d371020e840521255a8a03f32", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0011_field_expr.rast", "status": "modified", "additions": 60, "deletions": 60, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0011_field_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0011_field_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0011_field_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "283442a8bf25a8368de937657c54432acb8b1635", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0012_type_item_where_clause.rast", "status": "modified", "additions": 33, "deletions": 33, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0012_type_item_where_clause.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0012_type_item_where_clause.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0012_type_item_where_clause.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "e2e871ddaaadbbcda44cf3492e4546f2e83d317a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0013_pointer_type_mut.rast", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "a60940fcf00905c65f810d5b6b60cb583009c233", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0014_never_type.rast", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0014_never_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0014_never_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0014_never_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "8ac307cb3a9ab9d32761d22db82a3a6a6549142c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0015_continue_expr.rast", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0015_continue_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0015_continue_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0015_continue_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "d59c6006d74c617997a8e9a3fc7f4248632df51c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0016_unsafe_trait.rast", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0016_unsafe_trait.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0016_unsafe_trait.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0016_unsafe_trait.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "61a0b22f481c163a222787ff5946fd2669291c2e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0017_array_type.rast", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0017_array_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0017_array_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0017_array_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "6f6400d00c7a5a6a160e3b55197d777acc02ade2", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0018_arb_self_types.rast", "status": "modified", "additions": 74, "deletions": 74, "changes": 148, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0018_arb_self_types.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "ba422f1ae6fbdff3ae4276c7debd81ebba22e3d2", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0019_unary_expr.rast", "status": "modified", "additions": 45, "deletions": 45, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0019_unary_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "9e898b7b9cf480c4c800244f5274698810ca5c10", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0020_use_star.rast", "status": "modified", "additions": 59, "deletions": 59, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0020_use_star.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0020_use_star.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0020_use_star.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "de22b22dd7b2d25065826e7202b18f3f543df63c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0021_impl_item_list.rast", "status": "modified", "additions": 80, "deletions": 80, "changes": 160, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_impl_item_list.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_impl_item_list.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0021_impl_item_list.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "1b810607eda4a9317ad8bd685569977986355105", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0022_crate_visibility.rast", "status": "modified", "additions": 53, "deletions": 53, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0022_crate_visibility.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0022_crate_visibility.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0022_crate_visibility.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "17687617bbe65d1f854676e408fd7a103f990154", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0023_placeholder_type.rast", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0023_placeholder_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0023_placeholder_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0023_placeholder_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "7da292a2d71afb9eb154753bd5ef57421c6eab42", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0024_slice_pat.rast", "status": "modified", "additions": 42, "deletions": 42, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "0a6d77f452964fc494920ab9f56b76ece2bfdc83", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0025_slice_type.rast", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0025_slice_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0025_slice_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0025_slice_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "574942f067a6c6be52785a4507725171f3d3084e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0026_tuple_pat_fields.rast", "status": "modified", "additions": 105, "deletions": 105, "changes": 210, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "1927438bbe5b8fc4d051927fb3d546f9b09abce2", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0027_ref_pat.rast", "status": "modified", "additions": 50, "deletions": 50, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0027_ref_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0027_ref_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0027_ref_pat.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "93f5c738c24dd94a1c33679e0d1fa90d10244959", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0028_impl_trait_type.rast", "status": "modified", "additions": 43, "deletions": 43, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "9effb345fd4eb1083f3472bbf5835fafe543b932", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0029_cast_expr.rast", "status": "modified", "additions": 90, "deletions": 90, "changes": 180, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0029_cast_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0029_cast_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0029_cast_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "b6759541ef2e52792ff18d80db7a40a872056091", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0030_cond.rast", "status": "modified", "additions": 209, "deletions": 209, "changes": 418, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0030_cond.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "e5138a5990174142980815952f0f1da33a4e3946", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0031_while_expr.rast", "status": "modified", "additions": 89, "deletions": 89, "changes": 178, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0031_while_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0031_while_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0031_while_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "72705e148326471e685f30443bb0c73c1e78b63a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0032_fn_pointer_type.rast", "status": "modified", "additions": 98, "deletions": 98, "changes": 196, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "784fbb5923a96fe5d7cf39279c89b8c64b96f7fb", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0033_reference_type;.rast", "status": "modified", "additions": 50, "deletions": 50, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "52644da8f0119ddb8912638da445e82d5a4132ed", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0034_break_expr.rast", "status": "modified", "additions": 55, "deletions": 55, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0034_break_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0034_break_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0034_break_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "f061c0cac35e8ce9ceb18c7d9e5a40e77d4cf4fd", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0036_unsafe_extern_fn.rast", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0036_unsafe_extern_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0036_unsafe_extern_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0036_unsafe_extern_fn.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "e25fc8c3e3b78df761750acc3620de2129bcb256", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0037_qual_paths.rast", "status": "modified", "additions": 79, "deletions": 79, "changes": 158, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0037_qual_paths.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0037_qual_paths.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0037_qual_paths.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "a1238d6102fcc2ae6753059ff0046f2d15a4bf1d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0038_full_range_expr.rast", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0038_full_range_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0038_full_range_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0038_full_range_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "69e5fe4bc6448ba34afe293dd3da05277a25763b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0039_type_arg.rast", "status": "modified", "additions": 55, "deletions": 55, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0039_type_arg.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "1a98e2610f6962ba09ca936e8cf737307ef76e94", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0040_crate_keyword_vis.rast", "status": "modified", "additions": 63, "deletions": 63, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0040_crate_keyword_vis.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0040_crate_keyword_vis.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0040_crate_keyword_vis.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "1ae79136169b851cfc4a5cec4da8aad06817bdca", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0041_trait_item.rast", "status": "modified", "additions": 125, "deletions": 125, "changes": 250, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0041_trait_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0041_trait_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0041_trait_item.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "bbf6dc49496b29380d23703b2bb629a9fabc0487", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0042_call_expr.rast", "status": "modified", "additions": 148, "deletions": 148, "changes": 296, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0042_call_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0042_call_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0042_call_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "f0e09d40da3b38018eff04834ab9909a51e9e2e7", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0043_use_alias.rast", "status": "modified", "additions": 138, "deletions": 138, "changes": 276, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0043_use_alias.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0043_use_alias.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0043_use_alias.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "a454dfc3a288e1796f5e018e43cb03893be3bb0f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0044_block_items.rast", "status": "modified", "additions": 30, "deletions": 30, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0044_block_items.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0044_block_items.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0044_block_items.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "2a50f796c7c64d1cd6f282493dbbf6c0d87f7276", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0045_param_list_opt_patterns.rast", "status": "modified", "additions": 47, "deletions": 47, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0045_param_list_opt_patterns.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "c28dc9d61a29fa415724a9289cb737f9a563778d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0046_singleton_tuple_type.rast", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0046_singleton_tuple_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0046_singleton_tuple_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0046_singleton_tuple_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "52de6023b42d59d06df41fe31fe396fe0288c8b4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0047_unsafe_default_impl.rast", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0047_unsafe_default_impl.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0047_unsafe_default_impl.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0047_unsafe_default_impl.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "7f87e05ecbf57d137d880a6ddbd5d0118c0ce479", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0048_path_type_with_bounds.rast", "status": "modified", "additions": 83, "deletions": 83, "changes": 166, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0048_path_type_with_bounds.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0048_path_type_with_bounds.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0048_path_type_with_bounds.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "8bf62cda900c95e27096fefedc0fb7ba3e7cb9cf", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0050_fn_decl.rast", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0050_fn_decl.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0050_fn_decl.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0050_fn_decl.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "798ef2a481c96df9cf675ec35d19a1d659fe39a6", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0051_unit_type.rast", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0051_unit_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0051_unit_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0051_unit_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "0d2f5ff56d581efa01d466ce4880d6a798b73b5f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0052_path_type.rast", "status": "modified", "additions": 70, "deletions": 70, "changes": 140, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0052_path_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0052_path_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0052_path_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "5f846177e65e5a52de6c2fb8ff46b94f479c8586", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0053_path_expr.rast", "status": "modified", "additions": 96, "deletions": 96, "changes": 192, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0053_path_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0053_path_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0053_path_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "6362aa02d5a472e8059a988cf047bf5d569a792f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0054_record_field_attrs.rast", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0054_record_field_attrs.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "d9310e82ebaadad330364347d368327d1b37aad9", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0055_literal_pattern.rast", "status": "modified", "additions": 77, "deletions": 77, "changes": 154, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0055_literal_pattern.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0055_literal_pattern.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0055_literal_pattern.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "2e727c1efb68b8becedd2b58e293d82dfc422d98", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0056_where_clause.rast", "status": "modified", "additions": 111, "deletions": 111, "changes": 222, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0056_where_clause.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0056_where_clause.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0056_where_clause.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "c1e58f9bf9439bb106234200a2957ac5d17baf3f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0057_const_fn.rast", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0057_const_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0057_const_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0057_const_fn.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "9bdf2379f10fe069df1df5b9cd4bd7115d2bb62c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0058_range_pat.rast", "status": "modified", "additions": 83, "deletions": 83, "changes": 166, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0058_range_pat.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "e9ca92364b908401619ab624e4e0d325b2a09fd0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0059_match_arms_commas.rast", "status": "modified", "additions": 60, "deletions": 60, "changes": 120, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0059_match_arms_commas.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0059_match_arms_commas.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0059_match_arms_commas.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "d06fc0be51b4c33d5179b7ccb06b604069392cc4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0060_extern_crate.rast", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0060_extern_crate.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0060_extern_crate.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0060_extern_crate.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "15d33293879cffed309c9a4ab5fa5e8d8b4a9e66", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0061_record_lit.rast", "status": "modified", "additions": 125, "deletions": 125, "changes": 250, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0061_record_lit.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "3cce106e40675816c1e12e606c55d05e9c8c0dcb", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0062_mod_contents.rast", "status": "modified", "additions": 67, "deletions": 67, "changes": 134, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0062_mod_contents.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0062_mod_contents.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0062_mod_contents.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "24b9a1f461b3848c1b1e2756872c04739635ca0f", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0063_impl_def_neg.rast", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_def_neg.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_def_neg.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0063_impl_def_neg.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "5e1b4cc681f6c7448fb0f936f0a8703289f29ace", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0064_if_expr.rast", "status": "modified", "additions": 132, "deletions": 132, "changes": 264, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0064_if_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0064_if_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0064_if_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "8e10f36737e869eaef784450ee6b6524f43d1d4e", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0065_dyn_trait_type.rast", "status": "modified", "additions": 43, "deletions": 43, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "108e5c5cc2de0dac82720d5beffcc0c6d73e2814", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0066_match_arm.rast", "status": "modified", "additions": 152, "deletions": 152, "changes": 304, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0066_match_arm.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0066_match_arm.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0066_match_arm.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "caa76fe8ad5148f251d9ce9af1c2bfffca2848ba", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0067_crate_path.rast", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0067_crate_path.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0067_crate_path.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0067_crate_path.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "ec249607256ae67abf0ec153dc1888469591dce4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0068_union_items.rast", "status": "modified", "additions": 46, "deletions": 46, "changes": 92, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0068_union_items.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0068_union_items.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0068_union_items.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "18cd5271ffc304df2a005423149290078274ea5a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0069_use_tree_list_after_path.rast", "status": "modified", "additions": 37, "deletions": 37, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0069_use_tree_list_after_path.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0069_use_tree_list_after_path.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0069_use_tree_list_after_path.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "1e888063e8070e620ff4b7b682abb15fdbb2e7be", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0070_stmt_bin_expr_ambiguity.rast", "status": "modified", "additions": 53, "deletions": 53, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0070_stmt_bin_expr_ambiguity.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "218b3ec9e62010ae0c7e83ab97fed19903ad4ad4", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0071_match_expr.rast", "status": "modified", "additions": 96, "deletions": 96, "changes": 192, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0071_match_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0071_match_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0071_match_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "b8171dc9cdc68c9188c73b3ce0a0bc01d8ad472b", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0072_return_expr.rast", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0072_return_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0072_return_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0072_return_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "cc871ac0c98adb8afbb2218c8d8b9b9df5541698", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0073_type_item_type_params.rast", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "c2a73ef250793ea8aa56353d8fc8dca6d6c2daa0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0074_stmt_postfix_expr_ambiguity.rast", "status": "modified", "additions": 63, "deletions": 63, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0074_stmt_postfix_expr_ambiguity.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0074_stmt_postfix_expr_ambiguity.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0074_stmt_postfix_expr_ambiguity.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "39a86d0028e33a20121ba723874fe37c21761668", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0075_block.rast", "status": "modified", "additions": 90, "deletions": 90, "changes": 180, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0075_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0075_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0075_block.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "9621ba59eba5ff65faae6272c98bd25dd315a191", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0076_function_where_clause.rast", "status": "modified", "additions": 40, "deletions": 40, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0076_function_where_clause.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0076_function_where_clause.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0076_function_where_clause.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "ed9d62c5fa17577e5b3f5e31f6c2c6f45544b4f9", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0077_try_expr.rast", "status": "modified", "additions": 26, "deletions": 26, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0077_try_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0077_try_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0077_try_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "a08e16fab9b785585f1de2f59d59e01aa37d8650", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0078_type_item.rast", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0078_type_item.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0078_type_item.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0078_type_item.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "a00ab40f93b6c2d9f0cd6054219fd4a69a2f151c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0079_impl_def.rast", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_def.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_def.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0079_impl_def.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "5141ce70db0c499f74cad19f569661b87ad622e1", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0080_postfix_range.rast", "status": "modified", "additions": 96, "deletions": 96, "changes": 192, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0080_postfix_range.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0080_postfix_range.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0080_postfix_range.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "cdbe641806418e51118064e25ea178d3fe9a175a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0081_for_type.rast", "status": "modified", "additions": 243, "deletions": 243, "changes": 486, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0081_for_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "fbad33389545732f85ceb17eddedb8627e620a26", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0082_ref_expr.rast", "status": "modified", "additions": 55, "deletions": 55, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0082_ref_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "217b07e59c3691215f85ee03e1fd4a2caf4055e8", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0083_struct_items.rast", "status": "modified", "additions": 87, "deletions": 87, "changes": 174, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0083_struct_items.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0083_struct_items.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0083_struct_items.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "9cd8910d43ed7aec98f6eb0a41f1d03a23534cb6", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0084_paren_type.rast", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0084_paren_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0084_paren_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0084_paren_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "b165789fd24819c41a9382fc02d2b49cacdec1dc", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0085_expr_literals.rast", "status": "modified", "additions": 136, "deletions": 136, "changes": 272, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0085_expr_literals.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0085_expr_literals.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0085_expr_literals.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "36f17133d4268e13f2ff22e65c368a220afc86b1", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0086_function_ret_type.rast", "status": "modified", "additions": 36, "deletions": 36, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0086_function_ret_type.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0086_function_ret_type.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0086_function_ret_type.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "01ed3afca4876eb45a2e89e3fa0f5c5d4357a185", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0087_unsafe_impl.rast", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0087_unsafe_impl.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0087_unsafe_impl.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0087_unsafe_impl.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "ca5aa007e6870dabac4dded0b310e940f916ce65", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0088_break_ambiguity.rast", "status": "modified", "additions": 69, "deletions": 69, "changes": 138, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0088_break_ambiguity.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0088_break_ambiguity.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0088_break_ambiguity.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "1c1e349e1440d784c41c3630fecd07e11830802d", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0089_extern_fn.rast", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0089_extern_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0089_extern_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0089_extern_fn.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "cee2bc906a30dcd87d593d9c7f1052ac2ff67585", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0090_type_param_default.rast", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0090_type_param_default.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0090_type_param_default.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0090_type_param_default.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "800412cef785af5759428441f2cf985601f9df0c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0091_auto_trait.rast", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0091_auto_trait.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0091_auto_trait.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0091_auto_trait.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "1e2d7db7c0cfccebad32a0f4ca8e6fed39e1cd14", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0092_fn_pointer_type_with_ret.rast", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "c264dae5e4b25ecffa175abe1f1ec42eed65d608", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0093_index_expr.rast", "status": "modified", "additions": 34, "deletions": 34, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0093_index_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0093_index_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0093_index_expr.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "9370f6ae77776c90cd447eb8fa2d6d35d5287f88", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0094_unsafe_auto_trait.rast", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0094_unsafe_auto_trait.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0094_unsafe_auto_trait.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0094_unsafe_auto_trait.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "24e1ba8a02b78ae4f7f6d3ef6482d976f72ede88", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0095_placeholder_pat.rast", "status": "modified", "additions": 29, "deletions": 29, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0095_placeholder_pat.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0095_placeholder_pat.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0095_placeholder_pat.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "47462d44e683d23e308bf57e61f6232ad4d0744c", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0096_no_semi_after_block.rast", "status": "modified", "additions": 130, "deletions": 130, "changes": 260, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0096_no_semi_after_block.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "80bda4ba7e9525f6e01b7c819a928018d2e10dce", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0097_default_impl.rast", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0097_default_impl.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0097_default_impl.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0097_default_impl.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}, {"sha": "a51fb5511923b5a8c5e1fd75e3ec49ef4bd0ab7a", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0098_const_unsafe_fn.rast", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0098_const_unsafe_fn.rast", "raw_url": "https://github.com/rust-lang/rust/raw/29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0098_const_unsafe_fn.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0098_const_unsafe_fn.rast?ref=29fc409e7fe5b12dcf6bfbcca622d79c4c8fcb72"}]}