{"sha": "0369efa75b5c7e6fd5cd96714a97c7f932808d96", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzNjllZmE3NWI1YzdlNmZkNWNkOTY3MTRhOTdjN2Y5MzI4MDhkOTY=", "commit": {"author": {"name": "Tim Cuthbertson", "email": "tim@gfxmonk.net", "date": "2015-04-11T12:14:10Z"}, "committer": {"name": "Tim Cuthbertson", "email": "tim@gfxmonk.net", "date": "2015-04-11T12:14:30Z"}, "message": "Update libbacktrace to r220112 (from GCC SVN)", "tree": {"sha": "aee86df9f7de002377efa3acc318b8b14c1ff76d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aee86df9f7de002377efa3acc318b8b14c1ff76d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0369efa75b5c7e6fd5cd96714a97c7f932808d96", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0369efa75b5c7e6fd5cd96714a97c7f932808d96", "html_url": "https://github.com/rust-lang/rust/commit/0369efa75b5c7e6fd5cd96714a97c7f932808d96", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0369efa75b5c7e6fd5cd96714a97c7f932808d96/comments", "author": {"login": "timbertson", "id": 14172, "node_id": "MDQ6VXNlcjE0MTcy", "avatar_url": "https://avatars.githubusercontent.com/u/14172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timbertson", "html_url": "https://github.com/timbertson", "followers_url": "https://api.github.com/users/timbertson/followers", "following_url": "https://api.github.com/users/timbertson/following{/other_user}", "gists_url": "https://api.github.com/users/timbertson/gists{/gist_id}", "starred_url": "https://api.github.com/users/timbertson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timbertson/subscriptions", "organizations_url": "https://api.github.com/users/timbertson/orgs", "repos_url": "https://api.github.com/users/timbertson/repos", "events_url": "https://api.github.com/users/timbertson/events{/privacy}", "received_events_url": "https://api.github.com/users/timbertson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "timbertson", "id": 14172, "node_id": "MDQ6VXNlcjE0MTcy", "avatar_url": "https://avatars.githubusercontent.com/u/14172?v=4", "gravatar_id": "", "url": "https://api.github.com/users/timbertson", "html_url": "https://github.com/timbertson", "followers_url": "https://api.github.com/users/timbertson/followers", "following_url": "https://api.github.com/users/timbertson/following{/other_user}", "gists_url": "https://api.github.com/users/timbertson/gists{/gist_id}", "starred_url": "https://api.github.com/users/timbertson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/timbertson/subscriptions", "organizations_url": "https://api.github.com/users/timbertson/orgs", "repos_url": "https://api.github.com/users/timbertson/repos", "events_url": "https://api.github.com/users/timbertson/events{/privacy}", "received_events_url": "https://api.github.com/users/timbertson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0be4e0ec504c02b21f92c257b5de3658962373fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/0be4e0ec504c02b21f92c257b5de3658962373fe", "html_url": "https://github.com/rust-lang/rust/commit/0be4e0ec504c02b21f92c257b5de3658962373fe"}], "stats": {"total": 732, "additions": 548, "deletions": 184}, "files": [{"sha": "e385d8f741de534bcf40e3d1dedc890169364e73", "filename": "src/libbacktrace/ChangeLog", "status": "modified", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2FChangeLog", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2FChangeLog", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2FChangeLog?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,3 +1,56 @@\n+2015-01-24  Matthias Klose  <doko@ubuntu.com>\n+\n+\t* configure.ac: Move AM_ENABLE_MULTILIB before AC_PROG_CC.\n+\t* configure: Regenerate.\n+\n+2015-01-05  Jakub Jelinek  <jakub@redhat.com>\n+\n+\tUpdate copyright years.\n+\n+2014-11-21  H.J. Lu  <hongjiu.lu@intel.com>\n+\n+\tPR bootstrap/63784\n+\t* configure: Regenerated.\n+\n+2014-11-11  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* ChangeLog.jit: New.\n+\n+2014-11-11  Francois-Xavier Coudert  <fxcoudert@gcc.gnu.org>\n+\n+\tPR target/63610\n+\t* configure: Regenerate.\n+\n+2014-10-23  Ian Lance Taylor  <iant@google.com>\n+\n+\t* internal.h (backtrace_atomic_load_pointer) [no atomic or sync]:\n+\tFix to return void *.\n+\n+2014-05-08  Ian Lance Taylor  <iant@google.com>\n+\n+\t* mmap.c (backtrace_free): If freeing a large aligned block of\n+\tmemory, call munmap rather than holding onto it.\n+\t(backtrace_vector_grow): When growing a vector, double the number\n+\tof pages requested.  When releasing the old version of a grown\n+\tvector, pass the correct size to backtrace_free.\n+\n+2014-03-07  Ian Lance Taylor  <iant@google.com>\n+\n+\t* sort.c (backtrace_qsort): Use middle element as pivot.\n+\n+2014-03-06  Ian Lance Taylor  <iant@google.com>\n+\n+\t* sort.c: New file.\n+\t* stest.c: New file.\n+\t* internal.h (backtrace_qsort): Declare.\n+\t* dwarf.c (read_abbrevs): Call backtrace_qsort instead of qsort.\n+\t(read_line_info, read_function_entry): Likewise.\n+\t(read_function_info, build_dwarf_data): Likewise.\n+\t* elf.c (elf_initialize_syminfo): Likewise.\n+\t* Makefile.am (libbacktrace_la_SOURCES): Add sort.c.\n+\t(stest_SOURCES, stest_LDADD): Define.\n+\t(check_PROGRAMS): Add stest.\n+\n 2014-02-07  Misty De Meo  <misty@brew.sh>\n \n \tPR target/58710"}, {"sha": "6b60e3b3b07382a48c7ffbaf992876426234bdee", "filename": "src/libbacktrace/ChangeLog.jit", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2FChangeLog.jit", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2FChangeLog.jit", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2FChangeLog.jit?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -0,0 +1,14 @@\n+2014-09-24  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* ChangeLog.jit: Add copyright footer.\n+\n+2013-10-03  David Malcolm  <dmalcolm@redhat.com>\n+\n+\t* configure.ac: Add --enable-host-shared.\n+\t* configure: Regenerate.\n+\f\n+Copyright (C) 2013-2014 Free Software Foundation, Inc.\n+\n+Copying and distribution of this file, with or without modification,\n+are permitted in any medium without royalty provided the copyright\n+notice and this notice are preserved."}, {"sha": "a93b82a91b133a508cddd427c10268f66a772121", "filename": "src/libbacktrace/Makefile.am", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2FMakefile.am", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2FMakefile.am", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2FMakefile.am?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,17 +1,17 @@\n # Makefile.am -- Backtrace Makefile.\n-# Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+# Copyright (C) 2012-2015 Free Software Foundation, Inc.\n \n # Redistribution and use in source and binary forms, with or without\n # modification, are permitted provided that the following conditions are\n # met:\n \n #     (1) Redistributions of source code must retain the above copyright\n-#     notice, this list of conditions and the following disclaimer.\n+#     notice, this list of conditions and the following disclaimer. \n \n #     (2) Redistributions in binary form must reproduce the above copyright\n #     notice, this list of conditions and the following disclaimer in\n #     the documentation and/or other materials provided with the\n-#     distribution.\n+#     distribution.  \n \n #     (3) The name of the author may not be used to\n #     endorse or promote products derived from this software without\n@@ -46,6 +46,7 @@ libbacktrace_la_SOURCES = \\\n \tinternal.h \\\n \tposix.c \\\n \tprint.c \\\n+\tsort.c \\\n \tstate.c\n \n BACKTRACE_FILES = \\\n@@ -93,6 +94,11 @@ btest_LDADD = libbacktrace.la\n \n check_PROGRAMS += btest\n \n+stest_SOURCES = stest.c\n+stest_LDADD = libbacktrace.la\n+\n+check_PROGRAMS += stest\n+\n endif NATIVE\n \n # We can't use automake's automatic dependency tracking, because it"}, {"sha": "f2821fc15262f90749ad545bae0800698f23d0e3", "filename": "src/libbacktrace/Makefile.in", "status": "modified", "additions": 22, "deletions": 13, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2FMakefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2FMakefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2FMakefile.in?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -23,12 +23,12 @@\n # met:\n \n #     (1) Redistributions of source code must retain the above copyright\n-#     notice, this list of conditions and the following disclaimer.\n+#     notice, this list of conditions and the following disclaimer. \n \n #     (2) Redistributions in binary form must reproduce the above copyright\n #     notice, this list of conditions and the following disclaimer in\n #     the documentation and/or other materials provided with the\n-#     distribution.\n+#     distribution.  \n \n #     (3) The name of the author may not be used to\n #     endorse or promote products derived from this software without\n@@ -67,7 +67,7 @@ build_triplet = @build@\n host_triplet = @host@\n target_triplet = @target@\n check_PROGRAMS = $(am__EXEEXT_1)\n-@NATIVE_TRUE@am__append_1 = btest\n+@NATIVE_TRUE@am__append_1 = btest stest\n subdir = .\n DIST_COMMON = README ChangeLog $(srcdir)/Makefile.in \\\n \t$(srcdir)/Makefile.am $(top_srcdir)/configure \\\n@@ -94,15 +94,18 @@ CONFIG_CLEAN_VPATH_FILES =\n LTLIBRARIES = $(noinst_LTLIBRARIES)\n am__DEPENDENCIES_1 =\n am_libbacktrace_la_OBJECTS = atomic.lo dwarf.lo fileline.lo posix.lo \\\n-\tprint.lo state.lo\n+\tprint.lo sort.lo state.lo\n libbacktrace_la_OBJECTS = $(am_libbacktrace_la_OBJECTS)\n-@NATIVE_TRUE@am__EXEEXT_1 = btest$(EXEEXT)\n+@NATIVE_TRUE@am__EXEEXT_1 = btest$(EXEEXT) stest$(EXEEXT)\n @NATIVE_TRUE@am_btest_OBJECTS = btest-btest.$(OBJEXT)\n btest_OBJECTS = $(am_btest_OBJECTS)\n @NATIVE_TRUE@btest_DEPENDENCIES = libbacktrace.la\n btest_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t--mode=link $(CCLD) $(btest_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \\\n \t$(LDFLAGS) -o $@\n+@NATIVE_TRUE@am_stest_OBJECTS = stest.$(OBJEXT)\n+stest_OBJECTS = $(am_stest_OBJECTS)\n+@NATIVE_TRUE@stest_DEPENDENCIES = libbacktrace.la\n DEFAULT_INCLUDES = -I.@am__isrc@\n depcomp =\n am__depfiles_maybe =\n@@ -116,11 +119,11 @@ LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \\\n \t--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \\\n \t$(LDFLAGS) -o $@\n SOURCES = $(libbacktrace_la_SOURCES) $(EXTRA_libbacktrace_la_SOURCES) \\\n-\t$(btest_SOURCES)\n-MULTISRCTOP =\n-MULTIBUILDTOP =\n-MULTIDIRS =\n-MULTISUBDIR =\n+\t$(btest_SOURCES) $(stest_SOURCES)\n+MULTISRCTOP = \n+MULTIBUILDTOP = \n+MULTIDIRS = \n+MULTISUBDIR = \n MULTIDO = true\n MULTICLEAN = true\n ETAGS = etags\n@@ -264,6 +267,7 @@ libbacktrace_la_SOURCES = \\\n \tinternal.h \\\n \tposix.c \\\n \tprint.c \\\n+\tsort.c \\\n \tstate.c\n \n BACKTRACE_FILES = \\\n@@ -300,6 +304,8 @@ TESTS = $(check_PROGRAMS)\n @NATIVE_TRUE@btest_SOURCES = btest.c\n @NATIVE_TRUE@btest_CFLAGS = $(AM_CFLAGS) -g -O\n @NATIVE_TRUE@btest_LDADD = libbacktrace.la\n+@NATIVE_TRUE@stest_SOURCES = stest.c\n+@NATIVE_TRUE@stest_LDADD = libbacktrace.la\n \n # We can't use automake's automatic dependency tracking, because it\n # breaks when using bootstrap-lean.  Automatic dependency tracking\n@@ -362,7 +368,7 @@ config.h: stamp-h1\n stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status\n \t@rm -f stamp-h1\n \tcd $(top_builddir) && $(SHELL) ./config.status config.h\n-$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)\n+$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) \n \t($(am__cd) $(top_srcdir) && $(AUTOHEADER))\n \trm -f stamp-h1\n \ttouch $@\n@@ -380,7 +386,7 @@ clean-noinstLTLIBRARIES:\n \t  echo \"rm -f \\\"$${dir}/so_locations\\\"\"; \\\n \t  rm -f \"$${dir}/so_locations\"; \\\n \tdone\n-libbacktrace.la: $(libbacktrace_la_OBJECTS) $(libbacktrace_la_DEPENDENCIES)\n+libbacktrace.la: $(libbacktrace_la_OBJECTS) $(libbacktrace_la_DEPENDENCIES) \n \t$(LINK)  $(libbacktrace_la_OBJECTS) $(libbacktrace_la_LIBADD) $(LIBS)\n \n clean-checkPROGRAMS:\n@@ -391,9 +397,12 @@ clean-checkPROGRAMS:\n \tlist=`for p in $$list; do echo \"$$p\"; done | sed 's/$(EXEEXT)$$//'`; \\\n \techo \" rm -f\" $$list; \\\n \trm -f $$list\n-btest$(EXEEXT): $(btest_OBJECTS) $(btest_DEPENDENCIES)\n+btest$(EXEEXT): $(btest_OBJECTS) $(btest_DEPENDENCIES) \n \t@rm -f btest$(EXEEXT)\n \t$(btest_LINK) $(btest_OBJECTS) $(btest_LDADD) $(LIBS)\n+stest$(EXEEXT): $(stest_OBJECTS) $(stest_DEPENDENCIES) \n+\t@rm -f stest$(EXEEXT)\n+\t$(LINK) $(stest_OBJECTS) $(stest_LDADD) $(LIBS)\n \n mostlyclean-compile:\n \t-rm -f *.$(OBJEXT)"}, {"sha": "143ef68ca5148943104b14eb40cc1f3fa8808f7a", "filename": "src/libbacktrace/alloc.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Falloc.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Falloc.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Falloc.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* alloc.c -- Memory allocation without mmap.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "fdd2490da7c6bdcd50e9e328e5ba495b11557e47", "filename": "src/libbacktrace/atomic.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fatomic.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fatomic.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fatomic.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* atomic.c -- Support for atomic functions if not present.\n-   Copyright (C) 2013-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2013-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "5115ce1e6151015385b94abaca19697da9870af1", "filename": "src/libbacktrace/backtrace-supported.h.in", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fbacktrace-supported.h.in", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fbacktrace-supported.h.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fbacktrace-supported.h.in?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* backtrace-supported.h.in -- Whether stack backtrace is supported.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "d352d27a4006d98a755a1a16cbeeb53a4c2d3cf2", "filename": "src/libbacktrace/backtrace.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fbacktrace.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fbacktrace.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fbacktrace.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* backtrace.c -- Entry point for stack backtrace library.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "50dcd40751b22c7268ef001e8a397cf274d79b7a", "filename": "src/libbacktrace/backtrace.h", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fbacktrace.h", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fbacktrace.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fbacktrace.h?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* backtrace.h -- Public header file for stack backtrace library.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "9424a927f2d8917511c600250a04e1adba4a34a2", "filename": "src/libbacktrace/btest.c", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fbtest.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fbtest.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fbtest.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* btest.c -- Test for libbacktrace library\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission.\n@@ -460,7 +460,7 @@ f23 (int f1line, int f2line)\n \t\t       (unsigned int) bdata.index, j + 1);\n \t      bdata.failed = 1;\n \t    }\n-\t}\n+\t}      \n \n       check (\"test3\", 0, all, f3line, \"f23\", &bdata.failed);\n       check (\"test3\", 1, all, f2line, \"f22\", &bdata.failed);"}, {"sha": "53c09a0f071febfa144b367b9adbea8f3fff9cb1", "filename": "src/libbacktrace/configure", "status": "modified", "additions": 73, "deletions": 69, "changes": 142, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fconfigure", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fconfigure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fconfigure?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -614,7 +614,6 @@ PIC_FLAG\n WARN_FLAGS\n EXTRA_FLAGS\n BACKTRACE_FILE\n-multi_basedir\n OTOOL64\n OTOOL\n LIPO\n@@ -680,6 +679,7 @@ build_os\n build_vendor\n build_cpu\n build\n+multi_basedir\n target_alias\n host_alias\n build_alias\n@@ -721,6 +721,7 @@ SHELL'\n ac_subst_files=''\n ac_user_opts='\n enable_option_checking\n+enable_multilib\n enable_maintainer_mode\n with_target_subdir\n enable_shared\n@@ -729,7 +730,6 @@ with_pic\n enable_fast_install\n with_gnu_ld\n enable_libtool_lock\n-enable_multilib\n with_system_libunwind\n enable_host_shared\n '\n@@ -1362,14 +1362,14 @@ Optional Features:\n   --disable-option-checking  ignore unrecognized --enable/--with options\n   --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n   --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n+  --enable-multilib       build many library versions (default)\n   --enable-maintainer-mode  enable make rules and dependencies not useful\n \t\t\t  (and sometimes confusing) to the casual installer\n   --enable-shared[=PKGS]  build shared libraries [default=no]\n   --enable-static[=PKGS]  build static libraries [default=yes]\n   --enable-fast-install[=PKGS]\n                           optimize for fast installation [default=yes]\n   --disable-libtool-lock  avoid locking (might break parallel builds)\n-  --enable-multilib       build many library versions (default)\n   --enable-host-shared    build host code as shared libraries\n \n Optional Packages:\n@@ -2453,6 +2453,46 @@ ac_compiler_gnu=$ac_cv_c_compiler_gnu\n ac_config_headers=\"$ac_config_headers config.h\"\n \n \n+if test -n \"${with_target_subdir}\"; then\n+  # Default to --enable-multilib\n+# Check whether --enable-multilib was given.\n+if test \"${enable_multilib+set}\" = set; then :\n+  enableval=$enable_multilib; case \"$enableval\" in\n+  yes) multilib=yes ;;\n+  no)  multilib=no ;;\n+  *)   as_fn_error \"bad value $enableval for multilib option\" \"$LINENO\" 5 ;;\n+ esac\n+else\n+  multilib=yes\n+fi\n+\n+\n+# We may get other options which we leave undocumented:\n+# --with-target-subdir, --with-multisrctop, --with-multisubdir\n+# See config-ml.in if you want the gory details.\n+\n+if test \"$srcdir\" = \".\"; then\n+  if test \"$with_target_subdir\" != \".\"; then\n+    multi_basedir=\"$srcdir/$with_multisrctop../..\"\n+  else\n+    multi_basedir=\"$srcdir/$with_multisrctop..\"\n+  fi\n+else\n+  multi_basedir=\"$srcdir/..\"\n+fi\n+\n+\n+# Even if the default multilib is not a cross compilation,\n+# it may be that some of the other multilibs are.\n+if test $cross_compiling = no && test $multilib = yes \\\n+   && test \"x${with_multisubdir}\" != x ; then\n+   cross_compiling=maybe\n+fi\n+\n+ac_config_commands=\"$ac_config_commands default-1\"\n+\n+fi\n+\n ac_aux_dir=\n for ac_dir in \"$srcdir\" \"$srcdir/..\" \"$srcdir/../..\"; do\n   for ac_t in install-sh install.sh shtool; do\n@@ -5650,7 +5690,7 @@ else\n     lt_cv_sys_max_cmd_len=8192;\n     ;;\n \n-  netbsd* | freebsd* | openbsd* | darwin* | dragonfly* | bitrig*)\n+  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)\n     # This has been around since 386BSD, at least.  Likely further.\n     if test -x /sbin/sysctl; then\n       lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`\n@@ -7576,7 +7616,7 @@ $as_echo \"$lt_cv_ld_force_load\" >&6; }\n       case ${MACOSX_DEPLOYMENT_TARGET-10.0},$host in\n \t10.0,*86*-darwin8*|10.0,*-darwin[91]*)\n \t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n-\t10.[012]*)\n+\t10.[012][,.]*)\n \t  _lt_dar_allow_undefined='${wl}-flat_namespace ${wl}-undefined ${wl}suppress' ;;\n \t10.*)\n \t  _lt_dar_allow_undefined='${wl}-undefined ${wl}dynamic_lookup' ;;\n@@ -8879,7 +8919,7 @@ _LT_EOF\n       if $LD --help 2>&1 | $EGREP ': supported targets:.* elf' > /dev/null \\\n \t && test \"$tmp_diet\" = no\n       then\n-\ttmp_addflag=\n+\ttmp_addflag=' $pic_flag'\n \ttmp_sharedflag='-shared'\n \tcase $cc_basename,$host_cpu in\n         pgcc*)\t\t\t\t# Portland Group C compiler\n@@ -9332,7 +9372,7 @@ if test -z \"$aix_libpath\"; then aix_libpath=\"/usr/lib:/lib\"; fi\n       ;;\n \n     # FreeBSD 3 and greater uses gcc -shared to do shared libraries.\n-    freebsd* | dragonfly* | bitrig* | openbsd*)\n+    freebsd* | dragonfly*)\n       archive_cmds='$CC -shared -o $lib $libobjs $deplibs $compiler_flags'\n       hardcode_libdir_flag_spec='-R$libdir'\n       hardcode_direct=yes\n@@ -11089,7 +11129,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11092 \"configure\"\n+#line 11132 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11195,7 +11235,7 @@ else\n   lt_dlunknown=0; lt_dlno_uscore=1; lt_dlneed_uscore=2\n   lt_status=$lt_dlunknown\n   cat > conftest.$ac_ext <<_LT_EOF\n-#line 11198 \"configure\"\n+#line 11238 \"configure\"\n #include \"confdefs.h\"\n \n #if HAVE_DLFCN_H\n@@ -11439,43 +11479,6 @@ backtrace_supported=yes\n if test -n \"${with_target_subdir}\"; then\n   # We are compiling a GCC library.  We can assume that the unwind\n   # library exists.\n-  # Default to --enable-multilib\n-# Check whether --enable-multilib was given.\n-if test \"${enable_multilib+set}\" = set; then :\n-  enableval=$enable_multilib; case \"$enableval\" in\n-  yes) multilib=yes ;;\n-  no)  multilib=no ;;\n-  *)   as_fn_error \"bad value $enableval for multilib option\" \"$LINENO\" 5 ;;\n- esac\n-else\n-  multilib=yes\n-fi\n-\n-\n-# We may get other options which we leave undocumented:\n-# --with-target-subdir, --with-multisrctop, --with-multisubdir\n-# See config-ml.in if you want the gory details.\n-\n-if test \"$srcdir\" = \".\"; then\n-  if test \"$with_target_subdir\" != \".\"; then\n-    multi_basedir=\"$srcdir/$with_multisrctop../..\"\n-  else\n-    multi_basedir=\"$srcdir/$with_multisrctop..\"\n-  fi\n-else\n-  multi_basedir=\"$srcdir/..\"\n-fi\n-\n-\n-# Even if the default multilib is not a cross compilation,\n-# it may be that some of the other multilibs are.\n-if test $cross_compiling = no && test $multilib = yes \\\n-   && test \"x${with_multisubdir}\" != x ; then\n-   cross_compiling=maybe\n-fi\n-\n-ac_config_commands=\"$ac_config_commands default-1\"\n-\n   BACKTRACE_FILE=\"backtrace.lo simple.lo\"\n else\n   ac_fn_c_check_header_mongrel \"$LINENO\" \"unwind.h\" \"ac_cv_header_unwind_h\" \"$ac_includes_default\"\n@@ -13174,6 +13177,20 @@ cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n # INIT-COMMANDS\n #\n \n+srcdir=\"$srcdir\"\n+host=\"$host\"\n+target=\"$target\"\n+with_multisubdir=\"$with_multisubdir\"\n+with_multisrctop=\"$with_multisrctop\"\n+with_target_subdir=\"$with_target_subdir\"\n+ac_configure_args=\"${multilib_arg} ${ac_configure_args}\"\n+multi_basedir=\"$multi_basedir\"\n+CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n+CC=\"$CC\"\n+CXX=\"$CXX\"\n+GFORTRAN=\"$GFORTRAN\"\n+GCJ=\"$GCJ\"\n+\n \n # The HP-UX ksh and POSIX shell print the target directory to stdout\n # if CDPATH is set.\n@@ -13434,20 +13451,6 @@ fi\n \n \n \n-srcdir=\"$srcdir\"\n-host=\"$host\"\n-target=\"$target\"\n-with_multisubdir=\"$with_multisubdir\"\n-with_multisrctop=\"$with_multisrctop\"\n-with_target_subdir=\"$with_target_subdir\"\n-ac_configure_args=\"${multilib_arg} ${ac_configure_args}\"\n-multi_basedir=\"$multi_basedir\"\n-CONFIG_SHELL=${CONFIG_SHELL-/bin/sh}\n-CC=\"$CC\"\n-CXX=\"$CXX\"\n-GFORTRAN=\"$GFORTRAN\"\n-GCJ=\"$GCJ\"\n-\n GCC=\"$GCC\"\n CC=\"$CC\"\n acx_cv_header_stdint=\"$acx_cv_header_stdint\"\n@@ -13480,8 +13483,8 @@ for ac_config_target in $ac_config_targets\n do\n   case $ac_config_target in\n     \"config.h\") CONFIG_HEADERS=\"$CONFIG_HEADERS config.h\" ;;\n-    \"libtool\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libtool\" ;;\n     \"default-1\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS default-1\" ;;\n+    \"libtool\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS libtool\" ;;\n     \"gstdint.h\") CONFIG_COMMANDS=\"$CONFIG_COMMANDS gstdint.h\" ;;\n     \"Makefile\") CONFIG_FILES=\"$CONFIG_FILES Makefile\" ;;\n     \"backtrace-supported.h\") CONFIG_FILES=\"$CONFIG_FILES backtrace-supported.h\" ;;\n@@ -14070,6 +14073,14 @@ $as_echo \"$as_me: executing $ac_file commands\" >&6;}\n \n \n   case $ac_file$ac_mode in\n+    \"default-1\":C)\n+# Only add multilib support code if we just rebuilt the top-level\n+# Makefile.\n+case \" $CONFIG_FILES \" in\n+ *\" Makefile \"*)\n+   ac_file=Makefile . ${multi_basedir}/config-ml.in\n+   ;;\n+esac ;;\n     \"libtool\":C)\n \n     # See if we are running on zsh, and set the options which allow our\n@@ -14709,14 +14720,6 @@ _LT_EOF\n   chmod +x \"$ofile\"\n \n  ;;\n-    \"default-1\":C)\n-# Only add multilib support code if we just rebuilt the top-level\n-# Makefile.\n-case \" $CONFIG_FILES \" in\n- *\" Makefile \"*)\n-   ac_file=Makefile . ${multi_basedir}/config-ml.in\n-   ;;\n-esac ;;\n     \"gstdint.h\":C)\n if test \"$GCC\" = yes; then\n   echo \"/* generated for \" `$CC --version | sed 1q` \"*/\" > tmp-stdint.h\n@@ -15153,3 +15156,4 @@ if test -n \"$ac_unrecognized_opts\" && test \"$enable_option_checking\" != no; then\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts\" >&5\n $as_echo \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2;}\n fi\n+"}, {"sha": "9c37dac43ae1d76643e86290b500b892c8f3be03", "filename": "src/libbacktrace/configure.ac", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fconfigure.ac", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fconfigure.ac", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fconfigure.ac?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,18 +1,18 @@\n # configure.ac -- Backtrace configure script.\n-# Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+# Copyright (C) 2012-2015 Free Software Foundation, Inc.\n \n # Redistribution and use in source and binary forms, with or without\n # modification, are permitted provided that the following conditions are\n # met:\n \n #     (1) Redistributions of source code must retain the above copyright\n-#     notice, this list of conditions and the following disclaimer.\n+#     notice, this list of conditions and the following disclaimer. \n \n #     (2) Redistributions in binary form must reproduce the above copyright\n #     notice, this list of conditions and the following disclaimer in\n #     the documentation and/or other materials provided with the\n-#     distribution.\n-\n+#     distribution.  \n+    \n #     (3) The name of the author may not be used to\n #     endorse or promote products derived from this software without\n #     specific prior written permission.\n@@ -34,6 +34,10 @@ AC_INIT(package-unused, version-unused,, libbacktrace)\n AC_CONFIG_SRCDIR(backtrace.h)\n AC_CONFIG_HEADER(config.h)\n \n+if test -n \"${with_target_subdir}\"; then\n+  AM_ENABLE_MULTILIB(, ..)\n+fi\n+\n AC_CANONICAL_SYSTEM\n target_alias=${target_alias-$host_alias}\n \n@@ -83,7 +87,6 @@ backtrace_supported=yes\n if test -n \"${with_target_subdir}\"; then\n   # We are compiling a GCC library.  We can assume that the unwind\n   # library exists.\n-  AM_ENABLE_MULTILIB(, ..)\n   BACKTRACE_FILE=\"backtrace.lo simple.lo\"\n else\n   AC_CHECK_HEADER([unwind.h],"}, {"sha": "919b568c786ce264971d7aa4db807d12ab8d624c", "filename": "src/libbacktrace/dwarf.c", "status": "modified", "additions": 17, "deletions": 16, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fdwarf.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fdwarf.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fdwarf.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* dwarf.c -- Get file/line information from DWARF for backtraces.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission.\n@@ -1134,8 +1134,8 @@ read_abbrevs (struct backtrace_state *state, uint64_t abbrev_offset,\n       ++num_abbrevs;\n     }\n \n-  qsort (abbrevs->abbrevs, abbrevs->num_abbrevs, sizeof (struct abbrev),\n-\t abbrev_compare);\n+  backtrace_qsort (abbrevs->abbrevs, abbrevs->num_abbrevs,\n+\t\t   sizeof (struct abbrev), abbrev_compare);\n \n   return 1;\n \n@@ -1241,7 +1241,7 @@ add_unit_ranges (struct backtrace_state *state, uintptr_t base_address,\n \n static int\n find_address_ranges (struct backtrace_state *state, uintptr_t base_address,\n-\t\t     struct dwarf_buf *unit_buf,\n+\t\t     struct dwarf_buf *unit_buf, \n \t\t     const unsigned char *dwarf_str, size_t dwarf_str_size,\n \t\t     const unsigned char *dwarf_ranges,\n \t\t     size_t dwarf_ranges_size,\n@@ -1599,7 +1599,7 @@ read_line_header (struct backtrace_state *state, struct unit *u,\n \n   if (!advance (line_buf, hdrlen))\n     return 0;\n-\n+  \n   hdr->min_insn_len = read_byte (&hdr_buf);\n   if (hdr->version < 4)\n     hdr->max_ops_per_insn = 1;\n@@ -1608,7 +1608,7 @@ read_line_header (struct backtrace_state *state, struct unit *u,\n \n   /* We don't care about default_is_stmt.  */\n   read_byte (&hdr_buf);\n-\n+  \n   hdr->line_base = read_sbyte (&hdr_buf);\n   hdr->line_range = read_byte (&hdr_buf);\n \n@@ -2016,7 +2016,7 @@ read_line_info (struct backtrace_state *state, struct dwarf_data *ddata,\n     goto fail;\n \n   ln = (struct line *) vec.vec.base;\n-  qsort (ln, vec.count, sizeof (struct line), line_compare);\n+  backtrace_qsort (ln, vec.count, sizeof (struct line), line_compare);\n \n   *lines = ln;\n   *lines_count = vec.count;\n@@ -2476,9 +2476,9 @@ read_function_entry (struct backtrace_state *state, struct dwarf_data *ddata,\n \t\t    return 0;\n \n \t\t  faddrs = (struct function_addrs *) fvec.vec.base;\n-\t\t  qsort (faddrs, fvec.count,\n-\t\t\t sizeof (struct function_addrs),\n-\t\t\t function_addrs_compare);\n+\t\t  backtrace_qsort (faddrs, fvec.count,\n+\t\t\t\t   sizeof (struct function_addrs),\n+\t\t\t\t   function_addrs_compare);\n \n \t\t  function->function_addrs = faddrs;\n \t\t  function->function_addrs_count = fvec.count;\n@@ -2555,8 +2555,8 @@ read_function_info (struct backtrace_state *state, struct dwarf_data *ddata,\n       fvec->count = 0;\n     }\n \n-  qsort (addrs, addrs_count, sizeof (struct function_addrs),\n-\t function_addrs_compare);\n+  backtrace_qsort (addrs, addrs_count, sizeof (struct function_addrs),\n+\t\t   function_addrs_compare);\n \n   *ret_addrs = addrs;\n   *ret_addrs_count = addrs_count;\n@@ -2923,7 +2923,8 @@ build_dwarf_data (struct backtrace_state *state,\n     return NULL;\n   addrs = (struct unit_addrs *) addrs_vec.vec.base;\n   addrs_count = addrs_vec.count;\n-  qsort (addrs, addrs_count, sizeof (struct unit_addrs), unit_addrs_compare);\n+  backtrace_qsort (addrs, addrs_count, sizeof (struct unit_addrs),\n+\t\t   unit_addrs_compare);\n \n   fdata = ((struct dwarf_data *)\n \t   backtrace_alloc (state, sizeof (struct dwarf_data),"}, {"sha": "3f14b11a43c8388f9220122ce8b3e47e1137e0b5", "filename": "src/libbacktrace/elf.c", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Felf.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Felf.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Felf.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* elf.c -- Get debug data from an ELF file for backtraces.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission.\n@@ -407,8 +407,8 @@ elf_initialize_syminfo (struct backtrace_state *state,\n       ++j;\n     }\n \n-  qsort (elf_symbols, elf_symbol_count, sizeof (struct elf_symbol),\n-\t elf_symbol_compare);\n+  backtrace_qsort (elf_symbols, elf_symbol_count, sizeof (struct elf_symbol),\n+\t\t   elf_symbol_compare);\n \n   sdata->next = NULL;\n   sdata->symbols = elf_symbols;"}, {"sha": "0acad0603eeb071a4b114cf3a7f544536a1be405", "filename": "src/libbacktrace/fileline.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Ffileline.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Ffileline.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Ffileline.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* fileline.c -- Get file and line number information in a backtrace.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "30f99ca127f8e8035b18c4b772adf989aa508fbf", "filename": "src/libbacktrace/internal.h", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Finternal.h", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Finternal.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Finternal.h?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* internal.h -- Internal header file for stack backtrace library.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission.\n@@ -99,7 +99,7 @@ extern void backtrace_atomic_store_int (int *, int);\n /* We have neither the sync nor the atomic functions.  These will\n    never be called.  */\n \n-#define backtrace_atomic_load_pointer(p) (abort(), 0)\n+#define backtrace_atomic_load_pointer(p) (abort(), (void *) NULL)\n #define backtrace_atomic_load_int(p) (abort(), 0)\n #define backtrace_atomic_store_pointer(p, v) abort()\n #define backtrace_atomic_store_size_t(p, v) abort()\n@@ -196,6 +196,11 @@ extern int backtrace_close (int descriptor,\n \t\t\t    backtrace_error_callback error_callback,\n \t\t\t    void *data);\n \n+/* Sort without using memory.  */\n+\n+extern void backtrace_qsort (void *base, size_t count, size_t size,\n+\t\t\t     int (*compar) (const void *, const void *));\n+\n /* Allocate memory.  This is like malloc.  */\n \n extern void *backtrace_alloc (struct backtrace_state *state, size_t size,"}, {"sha": "1ecf131191142879ca808b864eb47810a71c5bbe", "filename": "src/libbacktrace/mmap.c", "status": "modified", "additions": 30, "deletions": 6, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fmmap.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fmmap.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fmmap.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* mmap.c -- Memory allocation with mmap.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission.\n@@ -164,6 +164,26 @@ backtrace_free (struct backtrace_state *state, void *addr, size_t size,\n {\n   int locked;\n \n+  /* If we are freeing a large aligned block, just release it back to\n+     the system.  This case arises when growing a vector for a large\n+     binary with lots of debug info.  Calling munmap here may cause us\n+     to call mmap again if there is also a large shared library; we\n+     just live with that.  */\n+  if (size >= 16 * 4096)\n+    {\n+      size_t pagesize;\n+\n+      pagesize = getpagesize ();\n+      if (((uintptr_t) addr & (pagesize - 1)) == 0\n+\t  && (size & (pagesize - 1)) == 0)\n+\t{\n+\t  /* If munmap fails for some reason, just add the block to\n+\t     the freelist.  */\n+\t  if (munmap (addr, size) == 0)\n+\t    return;\n+\t}\n+    }\n+\n   /* If we can acquire the lock, add the new space to the free list.\n      If we can't acquire the lock, just leak the memory.\n      __sync_lock_test_and_set returns the old state of the lock, so we\n@@ -209,14 +229,18 @@ backtrace_vector_grow (struct backtrace_state *state,size_t size,\n \t    alc = pagesize;\n \t}\n       else\n-\talc = (alc + pagesize - 1) & ~ (pagesize - 1);\n+\t{\n+\t  alc *= 2;\n+\t  alc = (alc + pagesize - 1) & ~ (pagesize - 1);\n+\t}\n       base = backtrace_alloc (state, alc, error_callback, data);\n       if (base == NULL)\n \treturn NULL;\n       if (vec->base != NULL)\n \t{\n \t  memcpy (base, vec->base, vec->size);\n-\t  backtrace_free (state, vec->base, vec->alc, error_callback, data);\n+\t  backtrace_free (state, vec->base, vec->size + vec->alc,\n+\t\t\t  error_callback, data);\n \t}\n       vec->base = base;\n       vec->alc = alc - vec->size;"}, {"sha": "b5a787e0aa6fd8bd8a50a37167b1d0ef3c9922bc", "filename": "src/libbacktrace/mmapio.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fmmapio.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fmmapio.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fmmapio.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* mmapio.c -- File views using mmap.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "f53f906b5a89cb2c617067ed3b43b99acd0cec01", "filename": "src/libbacktrace/nounwind.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fnounwind.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fnounwind.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fnounwind.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* backtrace.c -- Entry point for stack backtrace library.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "7fa7cd0d5da6760713ca827d90858105a4d4ab12", "filename": "src/libbacktrace/posix.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fposix.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fposix.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fposix.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* posix.c -- POSIX file I/O routines for the backtrace library.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "90ecaf89edad0258b80aed7232cba4fe87352500", "filename": "src/libbacktrace/print.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fprint.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fprint.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fprint.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* print.c -- Print the current backtrace.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "299f77ba7c629848f8e22b113f15f2c96747c0ea", "filename": "src/libbacktrace/read.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fread.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fread.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fread.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* read.c -- File views without mmap.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "39c2e902ff77b17adf036f388fd6bc8b25f36aa4", "filename": "src/libbacktrace/simple.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fsimple.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fsimple.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fsimple.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* simple.c -- The backtrace_simple function.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "bcc765e93aa777e736ed0b685015398c5fb67dc5", "filename": "src/libbacktrace/sort.c", "status": "added", "additions": 108, "deletions": 0, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fsort.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fsort.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fsort.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -0,0 +1,108 @@\n+/* sort.c -- Sort without allocating memory\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n+   Written by Ian Lance Taylor, Google.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions are\n+met:\n+\n+    (1) Redistributions of source code must retain the above copyright\n+    notice, this list of conditions and the following disclaimer. \n+\n+    (2) Redistributions in binary form must reproduce the above copyright\n+    notice, this list of conditions and the following disclaimer in\n+    the documentation and/or other materials provided with the\n+    distribution.  \n+    \n+    (3) The name of the author may not be used to\n+    endorse or promote products derived from this software without\n+    specific prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n+IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\n+INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n+HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n+STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\n+IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+POSSIBILITY OF SUCH DAMAGE.  */\n+\n+#include \"config.h\"\n+\n+#include <stddef.h>\n+#include <sys/types.h>\n+\n+#include \"backtrace.h\"\n+#include \"internal.h\"\n+\n+/* The GNU glibc version of qsort allocates memory, which we must not\n+   do if we are invoked by a signal handler.  So provide our own\n+   sort.  */\n+\n+static void\n+swap (char *a, char *b, size_t size)\n+{\n+  size_t i;\n+\n+  for (i = 0; i < size; i++, a++, b++)\n+    {\n+      char t;\n+\n+      t = *a;\n+      *a = *b;\n+      *b = t;\n+    }\n+}\n+\n+void\n+backtrace_qsort (void *basearg, size_t count, size_t size,\n+\t\t int (*compar) (const void *, const void *))\n+{\n+  char *base = (char *) basearg;\n+  size_t i;\n+  size_t mid;\n+\n+ tail_recurse:\n+  if (count < 2)\n+    return;\n+\n+  /* The symbol table and DWARF tables, which is all we use this\n+     routine for, tend to be roughly sorted.  Pick the middle element\n+     in the array as our pivot point, so that we are more likely to\n+     cut the array in half for each recursion step.  */\n+  swap (base, base + (count / 2) * size, size);\n+\n+  mid = 0;\n+  for (i = 1; i < count; i++)\n+    {\n+      if ((*compar) (base, base + i * size) > 0)\n+\t{\n+\t  ++mid;\n+\t  if (i != mid)\n+\t    swap (base + mid * size, base + i * size, size);\n+\t}\n+    }\n+\n+  if (mid > 0)\n+    swap (base, base + mid * size, size);\n+\n+  /* Recurse with the smaller array, loop with the larger one.  That\n+     ensures that our maximum stack depth is log count.  */\n+  if (2 * mid < count)\n+    {\n+      backtrace_qsort (base, mid, size, compar);\n+      base += (mid + 1) * size;\n+      count -= mid + 1;\n+      goto tail_recurse;\n+    }\n+  else\n+    {\n+      backtrace_qsort (base + (mid + 1) * size, count - (mid + 1),\n+\t\t       size, compar);\n+      count = mid;\n+      goto tail_recurse;\n+    }\n+}"}, {"sha": "a846378e903c2c7876b9a875cde369c5ffa0332e", "filename": "src/libbacktrace/state.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fstate.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fstate.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fstate.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* state.c -- Create the backtrace state.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}, {"sha": "ec93e680e89ed8cda9571e03ff92939190d89e5f", "filename": "src/libbacktrace/stest.c", "status": "added", "additions": 137, "deletions": 0, "changes": 137, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fstest.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Fstest.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Fstest.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -0,0 +1,137 @@\n+/* stest.c -- Test for libbacktrace internal sort function\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n+   Written by Ian Lance Taylor, Google.\n+\n+Redistribution and use in source and binary forms, with or without\n+modification, are permitted provided that the following conditions are\n+met:\n+\n+    (1) Redistributions of source code must retain the above copyright\n+    notice, this list of conditions and the following disclaimer. \n+\n+    (2) Redistributions in binary form must reproduce the above copyright\n+    notice, this list of conditions and the following disclaimer in\n+    the documentation and/or other materials provided with the\n+    distribution.  \n+    \n+    (3) The name of the author may not be used to\n+    endorse or promote products derived from this software without\n+    specific prior written permission.\n+\n+THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\n+IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n+WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n+DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,\n+INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n+(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n+SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n+HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,\n+STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING\n+IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n+POSSIBILITY OF SUCH DAMAGE.  */\n+\n+#include \"config.h\"\n+\n+#include <stdio.h>\n+#include <stdlib.h>\n+#include <string.h>\n+#include <sys/types.h>\n+\n+#include \"backtrace.h\"\n+#include \"internal.h\"\n+\n+/* Test the local qsort implementation.  */\n+\n+#define MAX 10\n+\n+struct test\n+{\n+  size_t count;\n+  int input[MAX];\n+  int output[MAX];\n+};\n+\n+static struct test tests[] =\n+  {\n+    {\n+      10,\n+      { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 },\n+      { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }\n+    },\n+    {\n+      9,\n+      { 1, 2, 3, 4, 5, 6, 7, 8, 9 },\n+      { 1, 2, 3, 4, 5, 6, 7, 8, 9 }\n+    },\n+    {\n+      10,\n+      { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 },\n+      { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 },\n+    },\n+    {\n+      9,\n+      { 9, 8, 7, 6, 5, 4, 3, 2, 1 },\n+      { 1, 2, 3, 4, 5, 6, 7, 8, 9 },\n+    },\n+    {\n+      10,\n+      { 2, 4, 6, 8, 10, 1, 3, 5, 7, 9 },\n+      { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 },\n+    },\n+    {\n+      5,\n+      { 4, 5, 3, 1, 2 },\n+      { 1, 2, 3, 4, 5 },\n+    },\n+    {\n+      5,\n+      { 1, 1, 1, 1, 1 },\n+      { 1, 1, 1, 1, 1 },\n+    },\n+    {\n+      5,\n+      { 1, 1, 2, 1, 1 },\n+      { 1, 1, 1, 1, 2 },\n+    },\n+    {\n+      5,\n+      { 2, 1, 1, 1, 1 },\n+      { 1, 1, 1, 1, 2 },\n+    },\n+  };\n+\n+static int\n+compare (const void *a, const void *b)\n+{\n+  const int *ai = (const int *) a;\n+  const int *bi = (const int *) b;\n+\n+  return *ai - *bi;\n+}\n+\n+int\n+main (int argc ATTRIBUTE_UNUSED, char **argv ATTRIBUTE_UNUSED)\n+{\n+  int failures;\n+  size_t i;\n+  int a[MAX];\n+\n+  failures = 0;\n+  for (i = 0; i < sizeof tests / sizeof tests[0]; i++)\n+    {\n+      memcpy (a, tests[i].input, tests[i].count * sizeof (int));\n+      backtrace_qsort (a, tests[i].count, sizeof (int), compare);\n+      if (memcmp (a, tests[i].output, tests[i].count * sizeof (int)) != 0)\n+\t{\n+\t  size_t j;\n+\n+\t  fprintf (stderr, \"test %d failed:\", (int) i);\n+\t  for (j = 0; j < tests[i].count; j++)\n+\t    fprintf (stderr, \" %d\", a[j]);\n+\t  fprintf (stderr, \"\\n\");\n+\t  ++failures;\n+\t}\n+    }\n+\n+  exit (failures > 0 ? EXIT_FAILURE : EXIT_SUCCESS);\n+}"}, {"sha": "e89cba96f7d91565d1ab307c238cc6b23dbed283", "filename": "src/libbacktrace/unknown.c", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Funknown.c", "raw_url": "https://github.com/rust-lang/rust/raw/0369efa75b5c7e6fd5cd96714a97c7f932808d96/src%2Flibbacktrace%2Funknown.c", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibbacktrace%2Funknown.c?ref=0369efa75b5c7e6fd5cd96714a97c7f932808d96", "patch": "@@ -1,19 +1,19 @@\n /* unknown.c -- used when backtrace configury does not know file format.\n-   Copyright (C) 2012-2014 Free Software Foundation, Inc.\n+   Copyright (C) 2012-2015 Free Software Foundation, Inc.\n    Written by Ian Lance Taylor, Google.\n \n Redistribution and use in source and binary forms, with or without\n modification, are permitted provided that the following conditions are\n met:\n \n     (1) Redistributions of source code must retain the above copyright\n-    notice, this list of conditions and the following disclaimer.\n+    notice, this list of conditions and the following disclaimer. \n \n     (2) Redistributions in binary form must reproduce the above copyright\n     notice, this list of conditions and the following disclaimer in\n     the documentation and/or other materials provided with the\n-    distribution.\n-\n+    distribution.  \n+    \n     (3) The name of the author may not be used to\n     endorse or promote products derived from this software without\n     specific prior written permission."}]}