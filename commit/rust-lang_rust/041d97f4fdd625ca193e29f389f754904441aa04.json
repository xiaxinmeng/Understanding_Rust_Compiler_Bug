{"sha": "041d97f4fdd625ca193e29f389f754904441aa04", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0MWQ5N2Y0ZmRkNjI1Y2ExOTNlMjlmMzg5Zjc1NDkwNDQ0MWFhMDQ=", "commit": {"author": {"name": "iximeow", "email": "me@iximeow.net", "date": "2020-03-13T02:53:13Z"}, "committer": {"name": "iximeow", "email": "me@iximeow.net", "date": "2020-03-13T03:32:02Z"}, "message": "unix: Set a guard page at the end of signal stacks\n\nThis mitigates possible issues when signal stacks overflow, which could\nmanifest as segfaults or in unlucky circumstances possible clobbering of\nother memory values as stack overflows tend to enable.", "tree": {"sha": "5157c989a4074051654eb47146373470639232c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5157c989a4074051654eb47146373470639232c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/041d97f4fdd625ca193e29f389f754904441aa04", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/041d97f4fdd625ca193e29f389f754904441aa04", "html_url": "https://github.com/rust-lang/rust/commit/041d97f4fdd625ca193e29f389f754904441aa04", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/041d97f4fdd625ca193e29f389f754904441aa04/comments", "author": {"login": "iximeow", "id": 4615790, "node_id": "MDQ6VXNlcjQ2MTU3OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/4615790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iximeow", "html_url": "https://github.com/iximeow", "followers_url": "https://api.github.com/users/iximeow/followers", "following_url": "https://api.github.com/users/iximeow/following{/other_user}", "gists_url": "https://api.github.com/users/iximeow/gists{/gist_id}", "starred_url": "https://api.github.com/users/iximeow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iximeow/subscriptions", "organizations_url": "https://api.github.com/users/iximeow/orgs", "repos_url": "https://api.github.com/users/iximeow/repos", "events_url": "https://api.github.com/users/iximeow/events{/privacy}", "received_events_url": "https://api.github.com/users/iximeow/received_events", "type": "User", "site_admin": false}, "committer": {"login": "iximeow", "id": 4615790, "node_id": "MDQ6VXNlcjQ2MTU3OTA=", "avatar_url": "https://avatars.githubusercontent.com/u/4615790?v=4", "gravatar_id": "", "url": "https://api.github.com/users/iximeow", "html_url": "https://github.com/iximeow", "followers_url": "https://api.github.com/users/iximeow/followers", "following_url": "https://api.github.com/users/iximeow/following{/other_user}", "gists_url": "https://api.github.com/users/iximeow/gists{/gist_id}", "starred_url": "https://api.github.com/users/iximeow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/iximeow/subscriptions", "organizations_url": "https://api.github.com/users/iximeow/orgs", "repos_url": "https://api.github.com/users/iximeow/repos", "events_url": "https://api.github.com/users/iximeow/events{/privacy}", "received_events_url": "https://api.github.com/users/iximeow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23de8275c9b5e5812dc54a12bdba6d80870d9dc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/23de8275c9b5e5812dc54a12bdba6d80870d9dc8", "html_url": "https://github.com/rust-lang/rust/commit/23de8275c9b5e5812dc54a12bdba6d80870d9dc8"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "db42e11683ad88330c995077d3d3a033ea4524a8", "filename": "src/libstd/sys/unix/stack_overflow.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/041d97f4fdd625ca193e29f389f754904441aa04/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/041d97f4fdd625ca193e29f389f754904441aa04/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fstack_overflow.rs?ref=041d97f4fdd625ca193e29f389f754904441aa04", "patch": "@@ -45,7 +45,7 @@ mod imp {\n     use libc::{mmap, munmap};\n     use libc::{sigaction, sighandler_t, SA_ONSTACK, SA_SIGINFO, SIGBUS, SIG_DFL};\n     use libc::{sigaltstack, SIGSTKSZ, SS_DISABLE};\n-    use libc::{MAP_ANON, MAP_PRIVATE, PROT_READ, PROT_WRITE, SIGSEGV};\n+    use libc::{MAP_ANON, MAP_PRIVATE, PROT_NONE, PROT_READ, PROT_WRITE, SIGSEGV};\n \n     use crate::sys_common::thread_info;\n \n@@ -137,11 +137,16 @@ mod imp {\n     }\n \n     unsafe fn get_stackp() -> *mut libc::c_void {\n+        let page_size = crate::sys::unix::os::page_size();\n         let stackp =\n-            mmap(ptr::null_mut(), SIGSTKSZ, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANON, -1, 0);\n+            mmap(ptr::null_mut(), SIGSTKSZ + page_size, PROT_READ | PROT_WRITE, MAP_PRIVATE | MAP_ANON, -1, 0);\n         if stackp == MAP_FAILED {\n             panic!(\"failed to allocate an alternative stack\");\n         }\n+        let guard_result = libc::mprotect(stackp, page_size, PROT_NONE);\n+        if guard_result != 0 {\n+            panic!(\"failed to set up alternative stack guard page\");\n+        }\n         stackp\n     }\n "}]}