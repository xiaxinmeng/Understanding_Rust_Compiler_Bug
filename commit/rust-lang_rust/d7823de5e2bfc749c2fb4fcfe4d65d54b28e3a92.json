{"sha": "d7823de5e2bfc749c2fb4fcfe4d65d54b28e3a92", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ODIzZGU1ZTJiZmM3NDljMmZiNGZjZmU0ZDY1ZDU0YjI4ZTNhOTI=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-06-29T01:11:26Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-06-29T01:11:54Z"}, "message": "update rust.vim to hilight foo::bar and more", "tree": {"sha": "12cbc127db0b448fb9116b6de9f7baf1c780932e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12cbc127db0b448fb9116b6de9f7baf1c780932e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7823de5e2bfc749c2fb4fcfe4d65d54b28e3a92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7823de5e2bfc749c2fb4fcfe4d65d54b28e3a92", "html_url": "https://github.com/rust-lang/rust/commit/d7823de5e2bfc749c2fb4fcfe4d65d54b28e3a92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7823de5e2bfc749c2fb4fcfe4d65d54b28e3a92/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7760470b43a48e1244d6bf72d5a16d6bbae4b27", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7760470b43a48e1244d6bf72d5a16d6bbae4b27", "html_url": "https://github.com/rust-lang/rust/commit/e7760470b43a48e1244d6bf72d5a16d6bbae4b27"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "47c69463d6066b06f357381ff96cace62c50677a", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 19, "deletions": 4, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/d7823de5e2bfc749c2fb4fcfe4d65d54b28e3a92/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/d7823de5e2bfc749c2fb4fcfe4d65d54b28e3a92/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=d7823de5e2bfc749c2fb4fcfe4d65d54b28e3a92", "patch": "@@ -20,7 +20,8 @@ syn keyword   rustKeyword     check claim cont const copy else export extern fai\n syn keyword   rustKeyword     for if impl import in let log\n syn keyword   rustKeyword     loop mod mut of pure\n syn keyword   rustKeyword     ret self to unchecked\n-syn keyword   rustKeyword     unsafe use while with\n+syn match     rustKeyword     \"unsafe\" \" Allows also matching unsafe::foo()\n+syn keyword   rustKeyword     use while with\n \" FIXME: Scoped impl's name is also fallen in this category\n syn keyword   rustKeyword     mod iface trait class enum type nextgroup=rustIdentifier skipwhite\n syn keyword   rustKeyword     fn nextgroup=rustFuncName skipwhite\n@@ -36,9 +37,19 @@ syn keyword   rustType        f64 i8 i16 i32 i64 str\n \n syn keyword   rustBoolean     true false\n \n-syn match     rustItemPath    \"\\(\\w\\|::\\)\\+\"\n+syn keyword   rustConstant    some none       \" option\n+\" syn keyword   rustConstant    left right      \" either\n+\" syn keyword   rustConstant    ok err          \" result\n+\" syn keyword   rustConstant    success failure \" task\n+\" syn keyword   rustConstant    cons nil        \" list\n+\" syn keyword   rustConstant    empty node      \" tree\n \n-syn region\t  rustString      start=+L\\=\"+ skip=+\\\\\\\\\\|\\\\\"+ end=+\"+\n+\" If foo::bar changes to foo.bar, change this (\"::\" to \"\\.\").\n+\" If foo::bar changes to Foo::bar, change this (first \"\\w\" to \"\\u\").\n+syn match     rustModPath     \"\\w\\(\\w\\)*::\"he=e-2,me=e-2\n+syn match     rustModPathSep  \"::\"\n+\n+syn region    rustString      start=+L\\=\"+ skip=+\\\\\\\\\\|\\\\\"+ end=+\"+\n \n syn region    rustAttribute   start=\"#\\[\" end=\"\\]\" contains=rustString\n \n@@ -72,21 +83,25 @@ syn keyword   rustTodo        TODO FIXME XXX NB\n hi def link rustHexNumber     rustNumber\n hi def link rustBinNumber     rustNumber\n \n-\" Recommend changing rustAssert to something else - I use ctermfg=yellow.\n hi def link rustString        String\n hi def link rustCharacter     Character\n hi def link rustNumber        Number\n hi def link rustBoolean       Boolean\n+hi def link rustConstant      Constant\n hi def link rustFloat         Float\n hi def link rustAssert        Keyword\n hi def link rustKeyword       Keyword\n hi def link rustIdentifier    Identifier\n+hi def link rustModPath       Include\n hi def link rustFuncName      Function\n hi def link rustComment       Comment\n hi def link rustMacro         Macro\n hi def link rustType          Type\n hi def link rustTodo          Todo\n hi def link rustAttribute     PreProc\n+\" Other Suggestions:\n+\" hi def link rustModPathSep    Conceal\n+\" hi rustAssert ctermfg=yellow\n \n syn sync minlines=200\n syn sync maxlines=500"}]}