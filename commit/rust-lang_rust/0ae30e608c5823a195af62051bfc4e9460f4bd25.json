{"sha": "0ae30e608c5823a195af62051bfc4e9460f4bd25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhZTMwZTYwOGM1ODIzYTE5NWFmNjIwNTFiZmM0ZTk0NjBmNGJkMjU=", "commit": {"author": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2015-05-26T02:27:15Z"}, "committer": {"name": "Barosl Lee", "email": "vcs@barosl.com", "date": "2015-05-26T08:42:56Z"}, "message": "Associate each path in a `use` declaration with the item in the AST map\n\nCurrently, for `use` declarations with multiple paths, only the `use`\nitem itself is saved in the AST map, not the individual path nodes. This\ncan lead to a problem when a span of a specific path node is needed.\n\nFor example, #24818 caused an ICE because of this, in\n`ImportResolver::check_for_conflicting_import()`.\n\nFixes #25763.", "tree": {"sha": "2968d67e7b30702c520b31672c4ff5b5595c1b4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2968d67e7b30702c520b31672c4ff5b5595c1b4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ae30e608c5823a195af62051bfc4e9460f4bd25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ae30e608c5823a195af62051bfc4e9460f4bd25", "html_url": "https://github.com/rust-lang/rust/commit/0ae30e608c5823a195af62051bfc4e9460f4bd25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ae30e608c5823a195af62051bfc4e9460f4bd25/comments", "author": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "committer": {"login": "barosl", "id": 573768, "node_id": "MDQ6VXNlcjU3Mzc2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/573768?v=4", "gravatar_id": "", "url": "https://api.github.com/users/barosl", "html_url": "https://github.com/barosl", "followers_url": "https://api.github.com/users/barosl/followers", "following_url": "https://api.github.com/users/barosl/following{/other_user}", "gists_url": "https://api.github.com/users/barosl/gists{/gist_id}", "starred_url": "https://api.github.com/users/barosl/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/barosl/subscriptions", "organizations_url": "https://api.github.com/users/barosl/orgs", "repos_url": "https://api.github.com/users/barosl/repos", "events_url": "https://api.github.com/users/barosl/events{/privacy}", "received_events_url": "https://api.github.com/users/barosl/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cb9914fceaeaa6a39add43d3da15bb6e1d191f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cb9914fceaeaa6a39add43d3da15bb6e1d191f6", "html_url": "https://github.com/rust-lang/rust/commit/7cb9914fceaeaa6a39add43d3da15bb6e1d191f6"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "ce6c33c6ab674358454cf410c1ac78edc7654dfc", "filename": "src/libsyntax/ast_map/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/0ae30e608c5823a195af62051bfc4e9460f4bd25/src%2Flibsyntax%2Fast_map%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ae30e608c5823a195af62051bfc4e9460f4bd25/src%2Flibsyntax%2Fast_map%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_map%2Fmod.rs?ref=0ae30e608c5823a195af62051bfc4e9460f4bd25", "patch": "@@ -714,6 +714,16 @@ impl<'ast> Visitor<'ast> for NodeCollector<'ast> {\n                     self.insert(ti.id, NodeTraitItem(ti));\n                 }\n             }\n+            ItemUse(ref view_path) => {\n+                match view_path.node {\n+                    ViewPathList(_, ref paths) => {\n+                        for path in paths {\n+                            self.insert(path.node.id(), NodeItem(i));\n+                        }\n+                    }\n+                    _ => ()\n+                }\n+            }\n             _ => {}\n         }\n         visit::walk_item(self, i);"}, {"sha": "8a10eef60e181e4d10afb0174b39d8500aa72dc2", "filename": "src/test/compile-fail/use-paths-as-items.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0ae30e608c5823a195af62051bfc4e9460f4bd25/src%2Ftest%2Fcompile-fail%2Fuse-paths-as-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ae30e608c5823a195af62051bfc4e9460f4bd25/src%2Ftest%2Fcompile-fail%2Fuse-paths-as-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-paths-as-items.rs?ref=0ae30e608c5823a195af62051bfc4e9460f4bd25", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Each path node in a `use` declaration must be treated as an item. If not, the following code\n+// will trigger an ICE.\n+//\n+// Related issue: #25763\n+\n+use std::{mem, ptr};\n+use std::mem; //~ ERROR has already been imported\n+\n+fn main() {}"}]}