{"sha": "4399299edc7200685703b4443cf92d670526d469", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzOTkyOTllZGM3MjAwNjg1NzAzYjQ0NDNjZjkyZDY3MDUyNmQ0Njk=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-11T08:56:41Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-06-19T13:16:09Z"}, "message": "mark_definedness cannot fail", "tree": {"sha": "5034d99ae15241a06fd2f487be66cba03340614b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5034d99ae15241a06fd2f487be66cba03340614b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4399299edc7200685703b4443cf92d670526d469", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4399299edc7200685703b4443cf92d670526d469", "html_url": "https://github.com/rust-lang/rust/commit/4399299edc7200685703b4443cf92d670526d469", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4399299edc7200685703b4443cf92d670526d469/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9cb052acfb25c12d5e8960f9ea53b69a2f19b0e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/9cb052acfb25c12d5e8960f9ea53b69a2f19b0e8", "html_url": "https://github.com/rust-lang/rust/commit/9cb052acfb25c12d5e8960f9ea53b69a2f19b0e8"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "8381125798a0d5a79334457804c8cd1c4fda946a", "filename": "src/librustc/mir/interpret/allocation.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/4399299edc7200685703b4443cf92d670526d469/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4399299edc7200685703b4443cf92d670526d469/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs?ref=4399299edc7200685703b4443cf92d670526d469", "patch": "@@ -247,7 +247,7 @@ impl<'tcx, Tag: Copy, Extra: AllocationExtra<Tag>> Allocation<Tag, Extra> {\n         assert_ne!(size.bytes(), 0, \"0-sized accesses should never even get a `Pointer`\");\n         self.check_bounds(cx, ptr, size, CheckInAllocMsg::MemoryAccessTest)?;\n \n-        self.mark_definedness(ptr, size, true)?;\n+        self.mark_definedness(ptr, size, true);\n         self.clear_relocations(cx, ptr, size)?;\n \n         AllocationExtra::memory_written(self, ptr, size)?;\n@@ -406,7 +406,10 @@ impl<'tcx, Tag: Copy, Extra: AllocationExtra<Tag>> Allocation<Tag, Extra> {\n     {\n         let val = match val {\n             ScalarMaybeUndef::Scalar(scalar) => scalar,\n-            ScalarMaybeUndef::Undef => return self.mark_definedness(ptr, type_size, false),\n+            ScalarMaybeUndef::Undef => {\n+                self.mark_definedness(ptr, type_size, false);\n+                return Ok(());\n+            },\n         };\n \n         let bytes = match val.to_bits_or_ptr(type_size, cx) {\n@@ -550,16 +553,15 @@ impl<'tcx, Tag, Extra> Allocation<Tag, Extra> {\n         ptr: Pointer<Tag>,\n         size: Size,\n         new_state: bool,\n-    ) -> InterpResult<'tcx> {\n+    ) {\n         if size.bytes() == 0 {\n-            return Ok(());\n+            return;\n         }\n         self.undef_mask.set_range(\n             ptr.offset,\n             ptr.offset + size,\n             new_state,\n         );\n-        Ok(())\n     }\n }\n "}]}