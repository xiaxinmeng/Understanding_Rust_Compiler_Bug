{"sha": "95ce05c586b8d8c97238ca4bedc5b06909bb7090", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1Y2UwNWM1ODZiOGQ4Yzk3MjM4Y2E0YmVkYzViMDY5MDliYjcwOTA=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-06-16T10:30:31Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-06-20T11:23:46Z"}, "message": "Simplify some counting", "tree": {"sha": "037b1cd9b2ba11233c7f54ed16b573399a55173d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/037b1cd9b2ba11233c7f54ed16b573399a55173d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95ce05c586b8d8c97238ca4bedc5b06909bb7090", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95ce05c586b8d8c97238ca4bedc5b06909bb7090", "html_url": "https://github.com/rust-lang/rust/commit/95ce05c586b8d8c97238ca4bedc5b06909bb7090", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95ce05c586b8d8c97238ca4bedc5b06909bb7090/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a829273bf67999838cb14e6ff9ce6fd3a14a5e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a829273bf67999838cb14e6ff9ce6fd3a14a5e7", "html_url": "https://github.com/rust-lang/rust/commit/7a829273bf67999838cb14e6ff9ce6fd3a14a5e7"}], "stats": {"total": 32, "additions": 13, "deletions": 19}, "files": [{"sha": "f3912c3042d7fceef539782e094ed0dcf2aa18d4", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 12, "deletions": 17, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/95ce05c586b8d8c97238ca4bedc5b06909bb7090/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95ce05c586b8d8c97238ca4bedc5b06909bb7090/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=95ce05c586b8d8c97238ca4bedc5b06909bb7090", "patch": "@@ -213,14 +213,18 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n         // If the type is parameterized by this region, then replace this\n         // region with the current anon region binding (in other words,\n         // whatever & would get replaced with).\n-        let mut lt_provided = 0;\n-        let mut ty_provided = 0;\n-        for arg in &generic_args.args {\n-            match arg {\n-                GenericArg::Lifetime(_) => lt_provided += 1,\n-                GenericArg::Type(_) => ty_provided += 1,\n-            }\n-        }\n+\n+        // FIXME(varkor): Separating out the parameters is messy.\n+        let lifetimes: Vec<_> = generic_args.args.iter().filter_map(|arg| match arg {\n+            GenericArg::Lifetime(lt) => Some(lt),\n+            _ => None,\n+        }).collect();\n+        let types: Vec<_> = generic_args.args.iter().filter_map(|arg| match arg {\n+            GenericArg::Type(ty) => Some(ty),\n+            _ => None,\n+        }).collect();\n+        let lt_provided = lifetimes.len();\n+        let ty_provided = types.len();\n \n         let decl_generics = tcx.generics_of(def_id);\n         let mut lt_accepted = 0;\n@@ -271,15 +275,6 @@ impl<'o, 'gcx: 'tcx, 'tcx> AstConv<'gcx, 'tcx>+'o {\n         };\n \n         let own_self = self_ty.is_some() as usize;\n-        // FIXME(varkor): Separating out the parameters is messy.\n-        let lifetimes: Vec<_> = generic_args.args.iter().filter_map(|arg| match arg {\n-            GenericArg::Lifetime(lt) => Some(lt),\n-            _ => None,\n-        }).collect();\n-        let types: Vec<_> = generic_args.args.iter().filter_map(|arg| match arg {\n-            GenericArg::Type(ty) => Some(ty),\n-            _ => None,\n-        }).collect();\n         let substs = Substs::for_item(tcx, def_id, |param, substs| {\n             match param.kind {\n                 GenericParamDefKind::Lifetime => {"}, {"sha": "366420cfcabb15780a8f6e2e72c4a496b7f63d71", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95ce05c586b8d8c97238ca4bedc5b06909bb7090/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95ce05c586b8d8c97238ca4bedc5b06909bb7090/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=95ce05c586b8d8c97238ca4bedc5b06909bb7090", "patch": "@@ -4742,8 +4742,7 @@ impl<'a, 'gcx, 'tcx> FnCtxt<'a, 'gcx, 'tcx> {\n             Def::Fn(def_id) |\n             Def::Const(def_id) |\n             Def::Static(def_id, _) => {\n-                fn_segment = Some((segments.last().unwrap(),\n-                                   self.tcx.generics_of(def_id)));\n+                fn_segment = Some((segments.last().unwrap(), self.tcx.generics_of(def_id)));\n             }\n \n             // Case 3. Reference to a method or associated const."}]}