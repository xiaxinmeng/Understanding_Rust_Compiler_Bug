{"sha": "f3c42636357a2757d9a01871580cb660418ca77e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzYzQyNjM2MzU3YTI3NTdkOWEwMTg3MTU4MGNiNjYwNDE4Y2E3N2U=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T05:50:55Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-01-16T09:07:42Z"}, "message": "rustdoc: Move parse_compound_fndoc into mod attr_parser", "tree": {"sha": "9fa5da823cd25059d42e8de6ff30bd951657d35b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fa5da823cd25059d42e8de6ff30bd951657d35b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f3c42636357a2757d9a01871580cb660418ca77e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f3c42636357a2757d9a01871580cb660418ca77e", "html_url": "https://github.com/rust-lang/rust/commit/f3c42636357a2757d9a01871580cb660418ca77e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f3c42636357a2757d9a01871580cb660418ca77e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "46a662ecb21eac21bd274bc23e5faf9cf51790be", "url": "https://api.github.com/repos/rust-lang/rust/commits/46a662ecb21eac21bd274bc23e5faf9cf51790be", "html_url": "https://github.com/rust-lang/rust/commit/46a662ecb21eac21bd274bc23e5faf9cf51790be"}], "stats": {"total": 137, "additions": 70, "deletions": 67}, "files": [{"sha": "eefb9d827bf670d4f2e9ee08a7b916731fedc2c4", "filename": "src/rustdoc/attr_parser.rs", "status": "added", "additions": 67, "deletions": 0, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/f3c42636357a2757d9a01871580cb660418ca77e/src%2Frustdoc%2Fattr_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3c42636357a2757d9a01871580cb660418ca77e/src%2Frustdoc%2Fattr_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Fattr_parser.rs?ref=f3c42636357a2757d9a01871580cb660418ca77e", "patch": "@@ -0,0 +1,67 @@\n+export parse_compound_fndoc;\n+\n+#[doc(\n+  brief = \"Parses function docs from a complex #[doc] attribute.\",\n+  desc = \"Supported attributes:\n+\n+* `brief`: Brief description\n+* `desc`: Long description\n+* `return`: Description of return value\n+* `args`: List of argname = argdesc pairs\n+\",\n+  args(items = \"Doc attribute contents\"),\n+  return = \"Parsed function docs.\"\n+)]\n+fn parse_compound_fndoc(items: [@ast::meta_item]) -> doc::fndoc {\n+    let brief = none;\n+    let desc = none;\n+    let return = none;\n+    let argdocs = map::new_str_hash::<str>();\n+    let argdocsfound = none;\n+    for item: @ast::meta_item in items {\n+        alt item.node {\n+            ast::meta_name_value(\"brief\", {node: ast::lit_str(value),\n+                                           span: _}) {\n+                brief = some(value);\n+            }\n+            ast::meta_name_value(\"desc\", {node: ast::lit_str(value),\n+                                              span: _}) {\n+                desc = some(value);\n+            }\n+            ast::meta_name_value(\"return\", {node: ast::lit_str(value),\n+                                            span: _}) {\n+                return = some(value);\n+            }\n+            ast::meta_list(\"args\", args) {\n+                argdocsfound = some(args);\n+            }\n+            _ { }\n+        }\n+    }\n+\n+    alt argdocsfound {\n+        none. { }\n+        some(ds) {\n+            for d: @ast::meta_item in ds {\n+                alt d.node {\n+                    ast::meta_name_value(key, {node: ast::lit_str(value),\n+                                               span: _}) {\n+                        argdocs.insert(key, value);\n+                    }\n+                }\n+            }\n+        }\n+    }\n+\n+    let _brief = alt brief {\n+        some(_b) { _b }\n+        none. { \"_undocumented_\" }\n+    };\n+\n+    ~{\n+        name: \"todo\",\n+        brief: _brief,\n+        desc: desc,\n+        return: return,\n+        args: argdocs }\n+}"}, {"sha": "5b0f47a1e8758928e4350bb723c7761582a1b93d", "filename": "src/rustdoc/rustdoc.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f3c42636357a2757d9a01871580cb660418ca77e/src%2Frustdoc%2Frustdoc.rc", "raw_url": "https://github.com/rust-lang/rust/raw/f3c42636357a2757d9a01871580cb660418ca77e/src%2Frustdoc%2Frustdoc.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rc?ref=f3c42636357a2757d9a01871580cb660418ca77e", "patch": "@@ -9,5 +9,6 @@\n \n mod parse;\n mod extract;\n+mod attr_parser;\n mod doc;\n mod gen;\n\\ No newline at end of file"}, {"sha": "596a5a419d8160ba5f4776a337a6ea227ddfb9ca", "filename": "src/rustdoc/rustdoc.rs", "status": "modified", "additions": 2, "deletions": 67, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/f3c42636357a2757d9a01871580cb660418ca77e/src%2Frustdoc%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f3c42636357a2757d9a01871580cb660418ca77e/src%2Frustdoc%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustdoc%2Frustdoc.rs?ref=f3c42636357a2757d9a01871580cb660418ca77e", "patch": "@@ -22,72 +22,6 @@ type rustdoc = {\n     w: io::writer\n };\n \n-#[doc(\n-  brief = \"Parses function docs from a complex #[doc] attribute.\",\n-  desc = \"Supported attributes:\n-\n-* `brief`: Brief description\n-* `desc`: Long description\n-* `return`: Description of return value\n-* `args`: List of argname = argdesc pairs\n-\",\n-  args(items = \"Doc attribute contents\"),\n-  return = \"Parsed function docs.\"\n-)]\n-fn parse_compound_fndoc(items: [@ast::meta_item]) -> doc::fndoc {\n-    let brief = none;\n-    let desc = none;\n-    let return = none;\n-    let argdocs = map::new_str_hash::<str>();\n-    let argdocsfound = none;\n-    for item: @ast::meta_item in items {\n-        alt item.node {\n-            ast::meta_name_value(\"brief\", {node: ast::lit_str(value),\n-                                           span: _}) {\n-                brief = some(value);\n-            }\n-            ast::meta_name_value(\"desc\", {node: ast::lit_str(value),\n-                                              span: _}) {\n-                desc = some(value);\n-            }\n-            ast::meta_name_value(\"return\", {node: ast::lit_str(value),\n-                                            span: _}) {\n-                return = some(value);\n-            }\n-            ast::meta_list(\"args\", args) {\n-                argdocsfound = some(args);\n-            }\n-            _ { }\n-        }\n-    }\n-\n-    alt argdocsfound {\n-        none. { }\n-        some(ds) {\n-            for d: @ast::meta_item in ds {\n-                alt d.node {\n-                    ast::meta_name_value(key, {node: ast::lit_str(value),\n-                                               span: _}) {\n-                        argdocs.insert(key, value);\n-                    }\n-                }\n-            }\n-        }\n-    }\n-\n-    let _brief = alt brief {\n-        some(_b) { _b }\n-        none. { \"_undocumented_\" }\n-    };\n-\n-    ~{\n-        name: \"todo\",\n-        brief: _brief,\n-        desc: desc,\n-        return: return,\n-        args: argdocs }\n-}\n-\n #[doc(\n   brief = \"Documents a single crate item.\",\n   args(rd = \"Rustdoc context\",\n@@ -109,7 +43,8 @@ fn doc_item(rd: rustdoc, item: @ast::item) {\n                 });\n             }\n             ast::meta_list(\"doc\", docs) {\n-                _fndoc = some(parse_compound_fndoc(docs));\n+                _fndoc = some(\n+                    attr_parser::parse_compound_fndoc(docs));\n             }\n         }\n     }"}]}