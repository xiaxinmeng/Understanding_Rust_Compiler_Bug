{"sha": "ff18c73065d25f20b393af52f4edecce04f6bd44", "node_id": "C_kwDOAAsO6NoAKGZmMThjNzMwNjVkMjVmMjBiMzkzYWY1MmY0ZWRlY2NlMDRmNmJkNDQ", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-11-14T14:13:49Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2022-11-15T00:58:23Z"}, "message": "comment feedback", "tree": {"sha": "afcdc36c0ea8b12cbca414b948700cc1132980f2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afcdc36c0ea8b12cbca414b948700cc1132980f2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff18c73065d25f20b393af52f4edecce04f6bd44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff18c73065d25f20b393af52f4edecce04f6bd44", "html_url": "https://github.com/rust-lang/rust/commit/ff18c73065d25f20b393af52f4edecce04f6bd44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff18c73065d25f20b393af52f4edecce04f6bd44/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9db8e183dc17896ce5f307f6de19c261d746a9bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9db8e183dc17896ce5f307f6de19c261d746a9bc", "html_url": "https://github.com/rust-lang/rust/commit/9db8e183dc17896ce5f307f6de19c261d746a9bc"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "18b661034e070915d4b0893054e088a0dab4ba6e", "filename": "compiler/rustc_parse/src/parser/stmt.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ff18c73065d25f20b393af52f4edecce04f6bd44/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff18c73065d25f20b393af52f4edecce04f6bd44/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs?ref=ff18c73065d25f20b393af52f4edecce04f6bd44", "patch": "@@ -362,8 +362,7 @@ impl<'a> Parser<'a> {\n             let Err(_) = rustc_ast::Lit::from_token(&self.token) &&\n             (lit.kind == token::LitKind::Integer || lit.kind == token::LitKind::Float) &&\n             self.look_ahead(1, |t| matches!(t.kind, token::Eq) || matches!(t.kind, token::Colon ) ) {\n-                let err = self.sess.create_err(InvalidIdentiferStartsWithNumber { span: self.token.span });\n-                return Err(err);\n+                return Err(self.sess.create_err(InvalidIdentiferStartsWithNumber { span: self.token.span }));\n         }\n         Ok(())\n     }"}]}