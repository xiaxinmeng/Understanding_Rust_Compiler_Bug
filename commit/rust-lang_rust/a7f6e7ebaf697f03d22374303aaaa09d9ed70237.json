{"sha": "a7f6e7ebaf697f03d22374303aaaa09d9ed70237", "node_id": "C_kwDOAAsO6NoAKGE3ZjZlN2ViYWY2OTdmMDNkMjIzNzQzMDNhYWFhMDlkOWVkNzAyMzc", "commit": {"author": {"name": "Maybe Waffle", "email": "waffle.lapkin@gmail.com", "date": "2022-05-11T18:01:53Z"}, "committer": {"name": "Antoni Boucher", "email": "bouanto@zoho.com", "date": "2023-02-28T23:57:14Z"}, "message": "Implement `ptr_mask` intrinsic in cg gcc", "tree": {"sha": "1b8842d9d714ea9b2d114373264f0d856cde8ff9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b8842d9d714ea9b2d114373264f0d856cde8ff9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7f6e7ebaf697f03d22374303aaaa09d9ed70237", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7f6e7ebaf697f03d22374303aaaa09d9ed70237", "html_url": "https://github.com/rust-lang/rust/commit/a7f6e7ebaf697f03d22374303aaaa09d9ed70237", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7f6e7ebaf697f03d22374303aaaa09d9ed70237/comments", "author": {"login": "WaffleLapkin", "id": 38225716, "node_id": "MDQ6VXNlcjM4MjI1NzE2", "avatar_url": "https://avatars.githubusercontent.com/u/38225716?v=4", "gravatar_id": "", "url": "https://api.github.com/users/WaffleLapkin", "html_url": "https://github.com/WaffleLapkin", "followers_url": "https://api.github.com/users/WaffleLapkin/followers", "following_url": "https://api.github.com/users/WaffleLapkin/following{/other_user}", "gists_url": "https://api.github.com/users/WaffleLapkin/gists{/gist_id}", "starred_url": "https://api.github.com/users/WaffleLapkin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/WaffleLapkin/subscriptions", "organizations_url": "https://api.github.com/users/WaffleLapkin/orgs", "repos_url": "https://api.github.com/users/WaffleLapkin/repos", "events_url": "https://api.github.com/users/WaffleLapkin/events{/privacy}", "received_events_url": "https://api.github.com/users/WaffleLapkin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "antoyo", "id": 584972, "node_id": "MDQ6VXNlcjU4NDk3Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/584972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/antoyo", "html_url": "https://github.com/antoyo", "followers_url": "https://api.github.com/users/antoyo/followers", "following_url": "https://api.github.com/users/antoyo/following{/other_user}", "gists_url": "https://api.github.com/users/antoyo/gists{/gist_id}", "starred_url": "https://api.github.com/users/antoyo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/antoyo/subscriptions", "organizations_url": "https://api.github.com/users/antoyo/orgs", "repos_url": "https://api.github.com/users/antoyo/repos", "events_url": "https://api.github.com/users/antoyo/events{/privacy}", "received_events_url": "https://api.github.com/users/antoyo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3f294215637c763b8a689705a01b6fd4428e371", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3f294215637c763b8a689705a01b6fd4428e371", "html_url": "https://github.com/rust-lang/rust/commit/b3f294215637c763b8a689705a01b6fd4428e371"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "ff7332478f3ca0f92fd5569e2df89d916c6148e9", "filename": "src/intrinsic/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a7f6e7ebaf697f03d22374303aaaa09d9ed70237/src%2Fintrinsic%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7f6e7ebaf697f03d22374303aaaa09d9ed70237/src%2Fintrinsic%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsic%2Fmod.rs?ref=a7f6e7ebaf697f03d22374303aaaa09d9ed70237", "patch": "@@ -320,6 +320,8 @@ impl<'a, 'gcc, 'tcx> IntrinsicCallMethods<'tcx> for Builder<'a, 'gcc, 'tcx> {\n                     return;\n                 }\n \n+                sym::ptr_mask => self.and(args[0].immediate(), args[1].immediate()),\n+\n                 _ if name_str.starts_with(\"simd_\") => {\n                     match generic_simd_intrinsic(self, name, callee_ty, args, ret_ty, llret_ty, span) {\n                         Ok(llval) => llval,"}]}