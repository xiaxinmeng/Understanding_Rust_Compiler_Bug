{"sha": "6f6afae41aee721fd259a8a764ec96f93bc07911", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmNmFmYWU0MWFlZTcyMWZkMjU5YThhNzY0ZWM5NmY5M2JjMDc5MTE=", "commit": {"author": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-31T00:41:18Z"}, "committer": {"name": "Camelid", "email": "camelidcamel@gmail.com", "date": "2020-12-31T00:41:18Z"}, "message": "Small refactor", "tree": {"sha": "8844d0157518fdd47ee0dbca6aaadb5b64753885", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8844d0157518fdd47ee0dbca6aaadb5b64753885"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f6afae41aee721fd259a8a764ec96f93bc07911", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f6afae41aee721fd259a8a764ec96f93bc07911", "html_url": "https://github.com/rust-lang/rust/commit/6f6afae41aee721fd259a8a764ec96f93bc07911", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f6afae41aee721fd259a8a764ec96f93bc07911/comments", "author": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "committer": {"login": "camelid", "id": 37223377, "node_id": "MDQ6VXNlcjM3MjIzMzc3", "avatar_url": "https://avatars.githubusercontent.com/u/37223377?v=4", "gravatar_id": "", "url": "https://api.github.com/users/camelid", "html_url": "https://github.com/camelid", "followers_url": "https://api.github.com/users/camelid/followers", "following_url": "https://api.github.com/users/camelid/following{/other_user}", "gists_url": "https://api.github.com/users/camelid/gists{/gist_id}", "starred_url": "https://api.github.com/users/camelid/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/camelid/subscriptions", "organizations_url": "https://api.github.com/users/camelid/orgs", "repos_url": "https://api.github.com/users/camelid/repos", "events_url": "https://api.github.com/users/camelid/events{/privacy}", "received_events_url": "https://api.github.com/users/camelid/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c86ebab7491b34f4048af07722afa9301326dd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c86ebab7491b34f4048af07722afa9301326dd1", "html_url": "https://github.com/rust-lang/rust/commit/6c86ebab7491b34f4048af07722afa9301326dd1"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "ae329dc62f142a0278c8bee2dd1329378b9321ab", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/6f6afae41aee721fd259a8a764ec96f93bc07911/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f6afae41aee721fd259a8a764ec96f93bc07911/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=6f6afae41aee721fd259a8a764ec96f93bc07911", "patch": "@@ -2295,20 +2295,19 @@ impl Clean<Item> for (&hir::MacroDef<'_>, Option<Symbol>) {\n             )\n         } else {\n             let vis = item.vis.clean(cx);\n-            let vis_printed_with_space =\n-                vis.print_with_space(cx.tcx, cx.tcx.hir().local_def_id(item.hir_id).to_def_id());\n+            let def_id = cx.tcx.hir().local_def_id(item.hir_id).to_def_id();\n \n             if matchers.len() <= 1 {\n                 format!(\n                     \"{}macro {}{} {{\\n    ...\\n}}\",\n-                    vis_printed_with_space,\n+                    vis.print_with_space(cx.tcx, def_id),\n                     name,\n                     matchers.iter().map(|span| span.to_src(cx)).collect::<String>(),\n                 )\n             } else {\n                 format!(\n                     \"{}macro {} {{\\n{}}}\",\n-                    vis_printed_with_space,\n+                    vis.print_with_space(cx.tcx, def_id),\n                     name,\n                     matchers\n                         .iter()"}]}