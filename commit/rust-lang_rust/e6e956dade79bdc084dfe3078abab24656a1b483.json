{"sha": "e6e956dade79bdc084dfe3078abab24656a1b483", "node_id": "C_kwDOAAsO6NoAKGU2ZTk1NmRhZGU3OWJkYzA4NGRmZTMwNzhhYmFiMjQ2NTZhMWI0ODM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-16T06:25:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-16T06:25:14Z"}, "message": "Auto merge of #110390 - fee1-dead-contrib:rollup-kh2ov9r, r=fee1-dead\n\nRollup of 3 pull requests\n\nSuccessful merges:\n\n - #110376 (Convert comment to doc comment on `Interner::get`.)\n - #110379 (Update some ignored tests.)\n - #110387 (Don't `use rustc_hir as ast`(!))\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "160c2d714b88f79ecaf3af7a7f6721379101ec97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/160c2d714b88f79ecaf3af7a7f6721379101ec97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6e956dade79bdc084dfe3078abab24656a1b483", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e956dade79bdc084dfe3078abab24656a1b483", "html_url": "https://github.com/rust-lang/rust/commit/e6e956dade79bdc084dfe3078abab24656a1b483", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6e956dade79bdc084dfe3078abab24656a1b483/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a711152615ad9294dc0e5ee6885c8e9bb8418a9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a711152615ad9294dc0e5ee6885c8e9bb8418a9", "html_url": "https://github.com/rust-lang/rust/commit/2a711152615ad9294dc0e5ee6885c8e9bb8418a9"}, {"sha": "312cad1f74c3abc6fb273e7dfcf1c52ddef25666", "url": "https://api.github.com/repos/rust-lang/rust/commits/312cad1f74c3abc6fb273e7dfcf1c52ddef25666", "html_url": "https://github.com/rust-lang/rust/commit/312cad1f74c3abc6fb273e7dfcf1c52ddef25666"}], "stats": {"total": 88, "additions": 49, "deletions": 39}, "files": [{"sha": "c6d10f4741affc03174b94c960c800f6f6894017", "filename": "compiler/rustc_middle/src/ty/relate.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -7,7 +7,7 @@\n use crate::ty::error::{ExpectedFound, TypeError};\n use crate::ty::{self, Expr, ImplSubject, Term, TermKind, Ty, TyCtxt, TypeFoldable};\n use crate::ty::{GenericArg, GenericArgKind, SubstsRef};\n-use rustc_hir as ast;\n+use rustc_hir as hir;\n use rustc_hir::def_id::DefId;\n use rustc_target::spec::abi;\n use std::iter;\n@@ -123,8 +123,8 @@ pub fn relate_type_and_mut<'tcx, R: TypeRelation<'tcx>>(\n     } else {\n         let mutbl = a.mutbl;\n         let (variance, info) = match mutbl {\n-            ast::Mutability::Not => (ty::Covariant, ty::VarianceDiagInfo::None),\n-            ast::Mutability::Mut => {\n+            hir::Mutability::Not => (ty::Covariant, ty::VarianceDiagInfo::None),\n+            hir::Mutability::Mut => {\n                 (ty::Invariant, ty::VarianceDiagInfo::Invariant { ty: base_ty, param_index: 0 })\n             }\n         };\n@@ -239,12 +239,12 @@ impl<'tcx> Relate<'tcx> for ty::BoundConstness {\n     }\n }\n \n-impl<'tcx> Relate<'tcx> for ast::Unsafety {\n+impl<'tcx> Relate<'tcx> for hir::Unsafety {\n     fn relate<R: TypeRelation<'tcx>>(\n         relation: &mut R,\n-        a: ast::Unsafety,\n-        b: ast::Unsafety,\n-    ) -> RelateResult<'tcx, ast::Unsafety> {\n+        a: hir::Unsafety,\n+        b: hir::Unsafety,\n+    ) -> RelateResult<'tcx, hir::Unsafety> {\n         if a != b {\n             Err(TypeError::UnsafetyMismatch(expected_found(relation, a, b)))\n         } else {"}, {"sha": "6ce0b66ef6a4536287a679b3e04304d917b6fa7d", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1986,8 +1986,9 @@ impl Interner {\n         name\n     }\n \n-    // Get the symbol as a string. `Symbol::as_str()` should be used in\n-    // preference to this function.\n+    /// Get the symbol as a string.\n+    ///\n+    /// [`Symbol::as_str()`] should be used in preference to this function.\n     fn get(&self, symbol: Symbol) -> &str {\n         self.0.lock().strings[symbol.0.as_usize()]\n     }"}, {"sha": "4c471ce046835dd1eb981179f9ebbcef479787d1", "filename": "tests/mir-opt/simplify_arm.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fmir-opt%2Fsimplify_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fmir-opt%2Fsimplify_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fsimplify_arm.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -6,8 +6,7 @@\n // EMIT_MIR simplify_arm.id_try.SimplifyArmIdentity.diff\n // EMIT_MIR simplify_arm.id_try.SimplifyBranchSame.diff\n \n-// This pass is broken since deaggregation changed\n-// ignore-test\n+// ignore-test This pass is broken since deaggregation changed\n \n fn id(o: Option<u8>) -> Option<u8> {\n     match o {"}, {"sha": "e122cd50e00164db22e1397f5fa2c596d0c64c26", "filename": "tests/mir-opt/simplify_arm_identity.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fmir-opt%2Fsimplify_arm_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fmir-opt%2Fsimplify_arm_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fsimplify_arm_identity.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -4,8 +4,7 @@\n // compile-flags: -Zmir-opt-level=3\n // EMIT_MIR_FOR_EACH_BIT_WIDTH\n \n-// This pass is broken since deaggregation changed\n-// ignore-test\n+// ignore-test This pass is broken since deaggregation changed\n \n enum Src {\n     Foo(u8),"}, {"sha": "27041d55d8fa339d934ae689a9cbeafd5581aac1", "filename": "tests/ui/borrowck/move-error-snippets-ext.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fborrowck%2Fmove-error-snippets-ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fborrowck%2Fmove-error-snippets-ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fmove-error-snippets-ext.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,4 +1,4 @@\n-// ignore-test\n+// ignore-test (auxiliary, used by other tests)\n \n macro_rules! aaa {\n     ($c:ident) => {{"}, {"sha": "6abeac0dd2e7e2dd4ce6cf41d533f57ed48104bd", "filename": "tests/ui/codemap_tests/two_files_data.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fcodemap_tests%2Ftwo_files_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fcodemap_tests%2Ftwo_files_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcodemap_tests%2Ftwo_files_data.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,4 +1,4 @@\n-// ignore-test\n+// ignore-test (auxiliary, used by other tests)\n \n trait Foo { }\n "}, {"sha": "55c8381cffeb1f7e14f49b620297e7b8a2b999c2", "filename": "tests/ui/conditional-compilation/module_with_cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fconditional-compilation%2Fmodule_with_cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fconditional-compilation%2Fmodule_with_cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconditional-compilation%2Fmodule_with_cfg.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,3 +1,3 @@\n-// ignore-test\n+// ignore-test (auxiliary, used by other tests)\n \n #![cfg_attr(all(), cfg(FALSE))]"}, {"sha": "56eb6ad429af084310e51297aa519982ffc0bf63", "filename": "tests/ui/cross/cross-file-errors/main.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fcross%2Fcross-file-errors%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fcross%2Fcross-file-errors%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcross%2Fcross-file-errors%2Fmain.stderr?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,5 +1,5 @@\n error: in expressions, `_` can only be used on the left-hand side of an assignment\n-  --> $DIR/underscore.rs:8:9\n+  --> $DIR/underscore.rs:6:9\n    |\n LL |         _\n    |         ^ `_` not allowed here"}, {"sha": "4dd91c13ea9c5c8a7b9ee6a47ff682f74b6358c4", "filename": "tests/ui/cross/cross-file-errors/underscore.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fcross%2Fcross-file-errors%2Funderscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fcross%2Fcross-file-errors%2Funderscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcross%2Fcross-file-errors%2Funderscore.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,6 +1,4 @@\n-// We want this file only so we can test cross-file error\n-// messages, but we don't want it in an external crate.\n-// ignore-test\n+// ignore-test (auxiliary, used by other tests)\n #![crate_type = \"lib\"]\n \n macro_rules! underscore {"}, {"sha": "366ad26bb27164d2975c4da5b65f0aa37ac9bd50", "filename": "tests/ui/inline-const/const-match-pat-lifetime-err.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Finline-const%2Fconst-match-pat-lifetime-err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Finline-const%2Fconst-match-pat-lifetime-err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finline-const%2Fconst-match-pat-lifetime-err.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,4 +1,4 @@\n-// ignore-test\n+// ignore-test (This is currently broken)\n \n #![allow(incomplete_features)]\n #![feature(const_mut_refs)]"}, {"sha": "6e58fa12ca70597344d609e229ccc6941ca6708c", "filename": "tests/ui/issues/issue-49298.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fissues%2Fissue-49298.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fissues%2Fissue-49298.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-49298.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -6,7 +6,7 @@\n // where #54986 is implemented and #54987 is *not* implemented. For\n // now: just ignore it\n //\n-// ignore-test\n+// ignore-test (#54987)\n \n // This test is checking that the space allocated for `x.1` does not\n // overlap with `y`. (The reason why such a thing happened at one"}, {"sha": "3742f31abade2916892fb14c82273c5b3e8c0a00", "filename": "tests/ui/issues/issue-59756.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fissues%2Fissue-59756.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fissues%2Fissue-59756.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fissues%2Fissue-59756.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,5 +1,5 @@\n // run-rustfix\n-// ignore-test\n+// ignore-test (rustfix needs multiple suggestions)\n //\n // FIXME: Re-enable this test once we support choosing\n // between multiple mutually exclusive suggestions for the same span"}, {"sha": "bca131a15d3254cf49578358f441f71718fb4a95", "filename": "tests/ui/lint/dead-code/closure-bang.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Flint%2Fdead-code%2Fclosure-bang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Flint%2Fdead-code%2Fclosure-bang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fdead-code%2Fclosure-bang.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,9 +1,7 @@\n-// ignore-test FIXME(#20574)\n-\n #![deny(unreachable_code)]\n \n fn main() {\n-    let x = || panic!();\n+    let x = || -> ! { panic!() };\n     x();\n     println!(\"Foo bar\"); //~ ERROR: unreachable statement\n }"}, {"sha": "119ce11e34a1bd2293ead824e21adf1e84c23faf", "filename": "tests/ui/lint/dead-code/closure-bang.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Flint%2Fdead-code%2Fclosure-bang.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Flint%2Fdead-code%2Fclosure-bang.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fdead-code%2Fclosure-bang.stderr?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -0,0 +1,17 @@\n+error: unreachable statement\n+  --> $DIR/closure-bang.rs:6:5\n+   |\n+LL |     x();\n+   |     --- any code following this expression is unreachable\n+LL |     println!(\"Foo bar\");\n+   |     ^^^^^^^^^^^^^^^^^^^ unreachable statement\n+   |\n+note: the lint level is defined here\n+  --> $DIR/closure-bang.rs:1:9\n+   |\n+LL | #![deny(unreachable_code)]\n+   |         ^^^^^^^^^^^^^^^^\n+   = note: this error originates in the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: aborting due to previous error\n+"}, {"sha": "2e4c4c7f8a99c59111302aa187555788e17e16cc", "filename": "tests/ui/macros/macro-expanded-include/foo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fmacros%2Fmacro-expanded-include%2Ffoo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fmacros%2Fmacro-expanded-include%2Ffoo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmacros%2Fmacro-expanded-include%2Ffoo%2Fmod.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,4 +1,4 @@\n-// ignore-test\n+// ignore-test (auxiliary, used by other tests)\n \n macro_rules! m {\n     () => { include!(\"file.txt\"); }"}, {"sha": "9ea4545268b4d50d1579690279bc7584a459bcab", "filename": "tests/ui/match/issue-26996.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fmatch%2Fissue-26996.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fmatch%2Fissue-26996.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch%2Fissue-26996.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -4,7 +4,7 @@\n // where #54986 is implemented and #54987 is *not* implemented. For\n // now: just ignore it\n //\n-// ignore-test\n+// ignore-test (#54987)\n \n // This test is checking that the write to `c.0` (which has been moved out of)\n // won't overwrite the state in `c2`."}, {"sha": "9630e9a03270e7c036afe3c12c1e54aecb4d0dbf", "filename": "tests/ui/match/issue-27021.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fmatch%2Fissue-27021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fmatch%2Fissue-27021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatch%2Fissue-27021.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -4,7 +4,7 @@\n // where #54986 is implemented and #54987 is *not* implemented. For\n // now: just ignore it\n //\n-// ignore-test\n+// ignore-test (#54987)\n \n // These are variants of issue-26996.rs. In all cases we are writing\n // into a record field that has been moved out of, and ensuring that"}, {"sha": "088b2fcdd144d4cf8ac178e5d7981432de54d6d9", "filename": "tests/ui/numbers-arithmetic/saturating-float-casts-impl.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fnumbers-arithmetic%2Fsaturating-float-casts-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fnumbers-arithmetic%2Fsaturating-float-casts-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnumbers-arithmetic%2Fsaturating-float-casts-impl.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,4 +1,4 @@\n-// ignore-test\n+// ignore-test (auxiliary, used by other tests)\n \n // Tests saturating float->int casts. See u128-as-f32.rs for the opposite direction.\n //"}, {"sha": "be83eb748433daf565175a81535326ee8cfa77b3", "filename": "tests/ui/panics/panic-short-backtrace-windows-x86_64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fpanics%2Fpanic-short-backtrace-windows-x86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fpanics%2Fpanic-short-backtrace-windows-x86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fpanics%2Fpanic-short-backtrace-windows-x86_64.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,6 +1,6 @@\n // This test has been spuriously failing a lot recently (#92000).\n // Ignore it until the underlying issue is fixed.\n-// ignore-test\n+// ignore-test (#92000)\n \n // Regression test for #87481: short backtrace formatting cut off the entire stack trace.\n "}, {"sha": "a750083c607fe173dfbabf3bbf7844beb34749a0", "filename": "tests/ui/proc-macro/module.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fproc-macro%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fproc-macro%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fmodule.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1 +1 @@\n-// ignore-test\n+// ignore-test (auxiliary, used by other tests)"}, {"sha": "0b2604f95b6c1c745ca3657a43e6f192678e6ffa", "filename": "tests/ui/proc-macro/module_with_attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fproc-macro%2Fmodule_with_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fproc-macro%2Fmodule_with_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fmodule_with_attrs.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,4 +1,4 @@\n-// ignore-test\n+// ignore-test (auxiliary, used by other tests)\n \n #![rustfmt::skip]\n #![print_attr]"}, {"sha": "a750083c607fe173dfbabf3bbf7844beb34749a0", "filename": "tests/ui/proc-macro/outer/inner.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fproc-macro%2Fouter%2Finner.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fproc-macro%2Fouter%2Finner.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fouter%2Finner.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1 +1 @@\n-// ignore-test\n+// ignore-test (auxiliary, used by other tests)"}, {"sha": "889f399a7f25678c2c73f50e05c8a22095d6b0a9", "filename": "tests/ui/proc-macro/pretty-print-hack/allsorts-rental-0.5.6/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fproc-macro%2Fpretty-print-hack%2Fallsorts-rental-0.5.6%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fproc-macro%2Fpretty-print-hack%2Fallsorts-rental-0.5.6%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fpretty-print-hack%2Fallsorts-rental-0.5.6%2Fsrc%2Flib.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,4 +1,4 @@\n-// ignore-test\n+// ignore-test (auxiliary, used by other tests)\n \n #[derive(Print)]\n enum ProceduralMasqueradeDummyType {"}, {"sha": "889f399a7f25678c2c73f50e05c8a22095d6b0a9", "filename": "tests/ui/proc-macro/pretty-print-hack/rental-0.5.5/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.5%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.5%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.5%2Fsrc%2Flib.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,4 +1,4 @@\n-// ignore-test\n+// ignore-test (auxiliary, used by other tests)\n \n #[derive(Print)]\n enum ProceduralMasqueradeDummyType {"}, {"sha": "889f399a7f25678c2c73f50e05c8a22095d6b0a9", "filename": "tests/ui/proc-macro/pretty-print-hack/rental-0.5.6/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.6%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.6%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fproc-macro%2Fpretty-print-hack%2Frental-0.5.6%2Fsrc%2Flib.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,4 +1,4 @@\n-// ignore-test\n+// ignore-test (auxiliary, used by other tests)\n \n #[derive(Print)]\n enum ProceduralMasqueradeDummyType {"}, {"sha": "82cc823e494c83fb1cc0735ae1ec4b365c756907", "filename": "tests/ui/type-alias-impl-trait/issue-65918.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-65918.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6e956dade79bdc084dfe3078abab24656a1b483/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-65918.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftype-alias-impl-trait%2Fissue-65918.rs?ref=e6e956dade79bdc084dfe3078abab24656a1b483", "patch": "@@ -1,5 +1,3 @@\n-// ignore-test: This now ICEs again.\n-\n // build-pass\n \n #![feature(type_alias_impl_trait)]"}]}