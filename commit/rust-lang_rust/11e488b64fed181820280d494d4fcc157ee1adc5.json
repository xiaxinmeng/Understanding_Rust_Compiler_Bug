{"sha": "11e488b64fed181820280d494d4fcc157ee1adc5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExZTQ4OGI2NGZlZDE4MTgyMDI4MGQ0OTRkNGZjYzE1N2VlMWFkYzU=", "commit": {"author": {"name": "MaloJaffre", "email": "jaffre.malo@gmail.com", "date": "2018-08-22T11:18:51Z"}, "committer": {"name": "MaloJaffre", "email": "jaffre.malo@gmail.com", "date": "2018-08-24T15:43:05Z"}, "message": "Optimize VecDeque::append", "tree": {"sha": "df895752d0112f6f85baaaef255299acf1245333", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df895752d0112f6f85baaaef255299acf1245333"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/11e488b64fed181820280d494d4fcc157ee1adc5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/11e488b64fed181820280d494d4fcc157ee1adc5", "html_url": "https://github.com/rust-lang/rust/commit/11e488b64fed181820280d494d4fcc157ee1adc5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/11e488b64fed181820280d494d4fcc157ee1adc5/comments", "author": {"login": "MaloJaffre", "id": 16278359, "node_id": "MDQ6VXNlcjE2Mjc4MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/16278359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaloJaffre", "html_url": "https://github.com/MaloJaffre", "followers_url": "https://api.github.com/users/MaloJaffre/followers", "following_url": "https://api.github.com/users/MaloJaffre/following{/other_user}", "gists_url": "https://api.github.com/users/MaloJaffre/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaloJaffre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaloJaffre/subscriptions", "organizations_url": "https://api.github.com/users/MaloJaffre/orgs", "repos_url": "https://api.github.com/users/MaloJaffre/repos", "events_url": "https://api.github.com/users/MaloJaffre/events{/privacy}", "received_events_url": "https://api.github.com/users/MaloJaffre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MaloJaffre", "id": 16278359, "node_id": "MDQ6VXNlcjE2Mjc4MzU5", "avatar_url": "https://avatars.githubusercontent.com/u/16278359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MaloJaffre", "html_url": "https://github.com/MaloJaffre", "followers_url": "https://api.github.com/users/MaloJaffre/followers", "following_url": "https://api.github.com/users/MaloJaffre/following{/other_user}", "gists_url": "https://api.github.com/users/MaloJaffre/gists{/gist_id}", "starred_url": "https://api.github.com/users/MaloJaffre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MaloJaffre/subscriptions", "organizations_url": "https://api.github.com/users/MaloJaffre/orgs", "repos_url": "https://api.github.com/users/MaloJaffre/repos", "events_url": "https://api.github.com/users/MaloJaffre/events{/privacy}", "received_events_url": "https://api.github.com/users/MaloJaffre/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ce76acae455a32113116cd2f95f8076388fc2d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ce76acae455a32113116cd2f95f8076388fc2d3", "html_url": "https://github.com/rust-lang/rust/commit/6ce76acae455a32113116cd2f95f8076388fc2d3"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "7c16258e84ef08830befb12ee0b0b757369a70f4", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/11e488b64fed181820280d494d4fcc157ee1adc5/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/11e488b64fed181820280d494d4fcc157ee1adc5/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=11e488b64fed181820280d494d4fcc157ee1adc5", "patch": "@@ -202,6 +202,22 @@ impl<T> VecDeque<T> {\n                                  len);\n     }\n \n+    /// Copies all values from `src` to `self`, wrapping around if needed.\n+    /// Assumes capacity is sufficient.\n+    #[inline]\n+    unsafe fn copy_slice(&mut self, src: &[T]) {\n+        let dst_high_ptr = self.ptr().add(self.head);\n+        let dst_high_len = self.cap() - self.head;\n+\n+        let split = cmp::min(src.len(), dst_high_len);\n+        let (src_high, src_low) = src.split_at(split);\n+\n+        ptr::copy_nonoverlapping(src_high.as_ptr(), dst_high_ptr, src_high.len());\n+        ptr::copy_nonoverlapping(src_low.as_ptr(), self.ptr(), src_low.len());\n+\n+        self.head = self.wrap_add(self.head, src.len());\n+    }\n+\n     /// Copies a potentially wrapping block of memory len long from src to dest.\n     /// (abs(dst - src) + len) must be no larger than cap() (There must be at\n     /// most one continuous overlapping region between src and dest).\n@@ -1834,8 +1850,17 @@ impl<T> VecDeque<T> {\n     #[inline]\n     #[stable(feature = \"append\", since = \"1.4.0\")]\n     pub fn append(&mut self, other: &mut Self) {\n-        // naive impl\n-        self.extend(other.drain(..));\n+        // Guarantees there is space in `self` for `other\n+        self.reserve(other.len());\n+\n+        unsafe {\n+            let (src_high, src_low) = other.as_slices();\n+            self.copy_slice(src_low);\n+            self.copy_slice(src_high);\n+        }\n+\n+        // Some values now exist in both `other` and `self` but are made inaccessible in `other`.\n+        other.tail = other.head;\n     }\n \n     /// Retains only the elements specified by the predicate."}]}