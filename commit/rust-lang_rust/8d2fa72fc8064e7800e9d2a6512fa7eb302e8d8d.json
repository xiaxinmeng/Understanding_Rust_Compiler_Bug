{"sha": "8d2fa72fc8064e7800e9d2a6512fa7eb302e8d8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkMmZhNzJmYzgwNjRlNzgwMGU5ZDJhNjUxMmZhN2ViMzAyZThkOGQ=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-10-27T01:18:28Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-05T23:06:09Z"}, "message": "Get `--fix` working for everything except rustdoc\n\nHere's the error for rustdoc:\n\n```\nChecking rustdoc artifacts (x86_64-unknown-linux-gnu -> x86_64-unknown-linux-gnu)\nerror: no library targets found in package `rustdoc-tool`\n```", "tree": {"sha": "e5612ce90d986271e4792115eccc9464f57312be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5612ce90d986271e4792115eccc9464f57312be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d2fa72fc8064e7800e9d2a6512fa7eb302e8d8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d2fa72fc8064e7800e9d2a6512fa7eb302e8d8d", "html_url": "https://github.com/rust-lang/rust/commit/8d2fa72fc8064e7800e9d2a6512fa7eb302e8d8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d2fa72fc8064e7800e9d2a6512fa7eb302e8d8d/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "31ecd2a124ff9c466c9661862aa0a0ad2d48d1a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/31ecd2a124ff9c466c9661862aa0a0ad2d48d1a1", "html_url": "https://github.com/rust-lang/rust/commit/31ecd2a124ff9c466c9661862aa0a0ad2d48d1a1"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "011b053f8980917fff14388bd9f5339a44c1d70a", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8d2fa72fc8064e7800e9d2a6512fa7eb302e8d8d/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d2fa72fc8064e7800e9d2a6512fa7eb302e8d8d/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=8d2fa72fc8064e7800e9d2a6512fa7eb302e8d8d", "patch": "@@ -851,8 +851,8 @@ impl<'a> Builder<'a> {\n             }\n             rustflags.env(\"RUSTFLAGS_BOOTSTRAP\");\n             if cmd == \"clippy\" {\n-                // clippy overwrites any sysroot we pass on the command line.\n-                // Tell it to use the appropriate sysroot instead.\n+                // clippy overwrites sysroot if we pass it to cargo.\n+                // Pass it directly to clippy instead.\n                 // NOTE: this can't be fixed in clippy because we explicitly don't set `RUSTC`,\n                 // so it has no way of knowing the sysroot.\n                 rustflags.arg(\"--sysroot\");\n@@ -867,8 +867,7 @@ impl<'a> Builder<'a> {\n                 // Explicitly does *not* set `--cfg=bootstrap`, since we're using a nightly clippy.\n                 let host_version = Command::new(\"rustc\").arg(\"--version\").output().map_err(|_| ());\n                 let output = host_version.and_then(|output| {\n-                    if output.status.success()\n-                    {\n+                    if output.status.success() {\n                         Ok(output)\n                     } else {\n                         Err(())"}, {"sha": "2e3cfc98c8cf24e6ed3033c0e4aa101467b81c0f", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8d2fa72fc8064e7800e9d2a6512fa7eb302e8d8d/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8d2fa72fc8064e7800e9d2a6512fa7eb302e8d8d/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=8d2fa72fc8064e7800e9d2a6512fa7eb302e8d8d", "patch": "@@ -16,12 +16,23 @@ pub struct Std {\n \n /// Returns args for the subcommand itself (not for cargo)\n fn args(builder: &Builder<'_>) -> Vec<String> {\n+    fn strings<'a>(arr: &'a [&str]) -> impl Iterator<Item = String> + 'a {\n+        arr.iter().copied().map(String::from)\n+    }\n+\n     if let Subcommand::Clippy { fix, .. } = builder.config.cmd {\n-        let mut args = vec![\"--\".to_owned(), \"--cap-lints\".to_owned(), \"warn\".to_owned()];\n+        let mut args = vec![];\n         if fix {\n-            args.insert(0, \"--fix\".to_owned());\n-            args.insert(0, \"-Zunstable-options\".to_owned());\n+            #[rustfmt::skip]\n+            args.extend(strings(&[\n+                \"--fix\", \"-Zunstable-options\",\n+                // FIXME: currently, `--fix` gives an error while checking tests for libtest,\n+                // possibly because libtest is not yet built in the sysroot.\n+                // As a workaround, avoid checking tests and benches when passed --fix.\n+                \"--lib\", \"--bins\", \"--examples\",\n+            ]));\n         }\n+        args.extend(strings(&[\"--\", \"--cap-lints\", \"warn\"]));\n         args\n     } else {\n         vec![]"}]}