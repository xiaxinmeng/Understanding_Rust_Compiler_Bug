{"sha": "79f888da6810e9e38918f524b0882b8eaf40e5a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5Zjg4OGRhNjgxMGU5ZTM4OTE4ZjUyNGIwODgyYjhlYWY0MGU1YTE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-09-09T13:33:57Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-09-11T20:31:37Z"}, "message": "Add arrow and improve display", "tree": {"sha": "a5a9ea6c0f25f10e1d3344e6b49d47c8fe4a0839", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a5a9ea6c0f25f10e1d3344e6b49d47c8fe4a0839"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79f888da6810e9e38918f524b0882b8eaf40e5a1", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79f888da6810e9e38918f524b0882b8eaf40e5a1", "html_url": "https://github.com/rust-lang/rust/commit/79f888da6810e9e38918f524b0882b8eaf40e5a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79f888da6810e9e38918f524b0882b8eaf40e5a1/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9c12e5d4e8c1211783e2c9e6f6cc1fd0091b8724", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c12e5d4e8c1211783e2c9e6f6cc1fd0091b8724", "html_url": "https://github.com/rust-lang/rust/commit/9c12e5d4e8c1211783e2c9e6f6cc1fd0091b8724"}], "stats": {"total": 134, "additions": 98, "deletions": 36}, "files": [{"sha": "081f950e40db222a331587be16d83da373d9a8c4", "filename": "src/librustdoc/html/highlight.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/79f888da6810e9e38918f524b0882b8eaf40e5a1/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f888da6810e9e38918f524b0882b8eaf40e5a1/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fhighlight.rs?ref=79f888da6810e9e38918f524b0882b8eaf40e5a1", "patch": "@@ -22,7 +22,6 @@\n \n use html::escape::Escape;\n \n-use std::collections::HashMap;\n use std::fmt::Display;\n use std::io;\n use std::io::prelude::*;\n@@ -36,7 +35,7 @@ use syntax_pos::Span;\n /// Highlights `src`, returning the HTML output.\n pub fn render_with_highlighting(src: &str, class: Option<&str>, id: Option<&str>,\n                                 extension: Option<&str>,\n-                                extras: Option<HashMap<String, String>>) -> String {\n+                                tooltip: Option<(&str, &str)>) -> String {\n     debug!(\"highlighting: ================\\n{}\\n==============\", src);\n     let sess = parse::ParseSess::new(FilePathMapping::empty());\n     let fm = sess.codemap().new_filemap(\"<stdin>\".to_string(), src.to_string());\n@@ -396,18 +395,12 @@ impl Class {\n \n fn write_header(class: Option<&str>,\n                 id: Option<&str>,\n-                out: &mut Write,\n-                extras: Option<HashMap<String, String>>)\n+                out: &mut Write)\n                 -> io::Result<()> {\n     write!(out, \"<pre \")?;\n     if let Some(id) = id {\n         write!(out, \"id='{}' \", id)?;\n     }\n-    if let Some(extras) = extras {\n-        for (key, value) in &extras {\n-            write!(out, \"{}=\\\"{}\\\" \", key, value)?;\n-        }\n-    }\n     write!(out, \"class=\\\"rust {}\\\">\\n\", class.unwrap_or(\"\"))\n }\n "}, {"sha": "3b03acf99081c24fe72eb15c260ef2909342d641", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 8, "deletions": 22, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/79f888da6810e9e38918f524b0882b8eaf40e5a1/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f888da6810e9e38918f524b0882b8eaf40e5a1/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=79f888da6810e9e38918f524b0882b8eaf40e5a1", "patch": "@@ -225,16 +225,10 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'a, I> {\n                     url, test_escaped, channel\n                 ))\n             });\n-            let title = if ignore {\n-                let mut tmp = HashMap::new();\n-                tmp.insert(\"title\".to_owned(),\n-                           \"Be careful when using this code, it's not being tested!\".to_owned());\n-                Some(tmp)\n+            let tooltip = if ignore {\n+                Some((\"Be careful when using this code, it's not being tested!\", \"ignore\"))\n             } else if compile_fail {\n-                let mut tmp = HashMap::new();\n-                tmp.insert(\"title\".to_owned(),\n-                           \"This code doesn't compile so be extra careful!\".to_owned());\n-                Some(tmp)\n+                Some((\"This code doesn't compile so be extra careful!\", \"compile_fail\"))\n             } else {\n                 None\n             };\n@@ -246,7 +240,7 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for CodeBlocks<'a, I> {\n                                       else { \"\" })),\n                         None,\n                         playground_button.as_ref().map(String::as_str),\n-                        title));\n+                        tooltip));\n             Some(Event::Html(s.into()))\n         })\n     }\n@@ -642,18 +636,10 @@ pub fn render(w: &mut fmt::Formatter,\n                         url, test_escaped, channel\n                     ))\n                 });\n-                let title = if ignore {\n-                    let mut tmp = HashMap::new();\n-                    tmp.insert(\"title\".to_owned(),\n-                               \"Be careful when using this code, it's not being \\\n-                                tested!\".to_owned());\n-                    Some(tmp)\n+                let tooltip = if ignore {\n+                    Some((\"Be careful when using this code, it's not being tested!\", \"ignore\"))\n                 } else if compile_fail {\n-                    let mut tmp = HashMap::new();\n-                    tmp.insert(\"title\".to_owned(),\n-                               \"This code doesn't compile so be extra \\\n-                                careful!\".to_owned());\n-                    Some(tmp)\n+                    Some((\"This code doesn't compile so be extra careful!\", \"compile_fail\"))\n                 } else {\n                     None\n                 };\n@@ -665,7 +651,7 @@ pub fn render(w: &mut fmt::Formatter,\n                                              else { \"\" })),\n                                None,\n                                playground_button.as_ref().map(String::as_str),\n-                               title));\n+                               tooltip));\n                 hoedown_buffer_put(ob, s.as_ptr(), s.len());\n             })\n         }"}, {"sha": "993462a8d444ab733718627eeee8a61cd24acf26", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/79f888da6810e9e38918f524b0882b8eaf40e5a1/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79f888da6810e9e38918f524b0882b8eaf40e5a1/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=79f888da6810e9e38918f524b0882b8eaf40e5a1", "patch": "@@ -3679,7 +3679,8 @@ impl<'a> fmt::Display for Source<'a> {\n             write!(fmt, \"<span id=\\\"{0}\\\">{0:1$}</span>\\n\", i, cols)?;\n         }\n         write!(fmt, \"</pre>\")?;\n-        write!(fmt, \"{}\", highlight::render_with_highlighting(s, None, None, None, None))?;\n+        write!(fmt, \"{}\",\n+               highlight::render_with_highlighting(s, None, None, None, None))?;\n         Ok(())\n     }\n }"}, {"sha": "da4430d8a1539fc62170d39d7f25b82532f6a293", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/79f888da6810e9e38918f524b0882b8eaf40e5a1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/79f888da6810e9e38918f524b0882b8eaf40e5a1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=79f888da6810e9e38918f524b0882b8eaf40e5a1", "patch": "@@ -1296,6 +1296,24 @@\n             collapseDocs(i_e.previousSibling.childNodes[0]);\n         });\n     });\n+\n+    onEach(document.getElementsByClassName('rust-example-rendered'), function(e) {\n+        if (hasClass(e, 'compile_fail')) {\n+            e.addEventListener(\"mouseover\", function(event) {\n+                e.previousElementSibling.childNodes[0].style.color = '#f00';\n+            });\n+            e.addEventListener(\"mouseout\", function(event) {\n+                e.previousElementSibling.childNodes[0].style.color = '';\n+            });\n+        } else if (hasClass(e, 'ignore')) {\n+            e.addEventListener(\"mouseover\", function(event) {\n+                e.previousElementSibling.childNodes[0].style.color = '#ff9200';\n+            });\n+            e.addEventListener(\"mouseout\", function(event) {\n+                e.previousElementSibling.childNodes[0].style.color = '';\n+            });\n+        }\n+    });\n }());\n \n // Sets the focus on the search bar at the top of the page"}, {"sha": "c15051376bf2766ee7f94efe155b02c8a696aff4", "filename": "src/librustdoc/html/static/rustdoc.css", "status": "modified", "additions": 41, "deletions": 1, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/79f888da6810e9e38918f524b0882b8eaf40e5a1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/79f888da6810e9e38918f524b0882b8eaf40e5a1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Frustdoc.css?ref=79f888da6810e9e38918f524b0882b8eaf40e5a1", "patch": "@@ -612,7 +612,6 @@ pre.rust .question-mark {\n \tfont-weight: bold;\n }\n \n-pre.rust { position: relative; }\n a.test-arrow {\n \tdisplay: inline-block;\n \tposition: absolute;\n@@ -813,3 +812,44 @@ span.since {\n \t\tdisplay: none;\n \t}\n }\n+\n+.information {\n+\tposition: absolute;\n+\tleft: -1px;\n+\tmargin-top: 7px;\n+}\n+\n+.tooltip {\n+\tposition: relative;\n+\tdisplay: inline-block;\n+\tcursor: pointer;\n+}\n+\n+.tooltip .tooltiptext {\n+\twidth: 120px;\n+\tdisplay: none;\n+\tbackground-color: black;\n+\tcolor: #fff;\n+\ttext-align: center;\n+\tpadding: 5px 3px;\n+\tborder-radius: 6px;\n+\tmargin-left: 5px;\n+\ttop: -5px;\n+\tleft: 105%;\n+\tz-index: 1;\n+}\n+\n+.tooltip:hover .tooltiptext {\n+\tdisplay: inline;\n+}\n+\n+.tooltip .tooltiptext::after {\n+\tcontent: \" \";\n+\tposition: absolute;\n+\ttop: 50%;\n+\tleft: 11px;\n+\tmargin-top: -5px;\n+\tborder-width: 5px;\n+\tborder-style: solid;\n+\tborder-color: transparent black transparent transparent;\n+}"}, {"sha": "42d0ec704f45f01f98fef03255209bf0b4d06453", "filename": "src/librustdoc/html/static/styles/main.css", "status": "modified", "additions": 27, "deletions": 3, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/79f888da6810e9e38918f524b0882b8eaf40e5a1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css", "raw_url": "https://github.com/rust-lang/rust/raw/79f888da6810e9e38918f524b0882b8eaf40e5a1/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fstyles%2Fmain.css?ref=79f888da6810e9e38918f524b0882b8eaf40e5a1", "patch": "@@ -205,9 +205,33 @@ a.test-arrow:hover{\n }\n \n pre.compile_fail {\n-\tbox-shadow: -6px 0 5px -3px #f00;\n+\tborder-left: 2px solid rgba(255,0,0,.4);\n+}\n+\n+pre.compile_fail:hover, .information:hover + pre.compile_fail {\n+\tborder-left: 2px solid #f00;\n }\n \n pre.ignore {\n-\tbox-shadow: -6px 0 5px -3px #ff9200;\n-}\n\\ No newline at end of file\n+\tborder-left: 2px solid rgba(255,142,0,.4);\n+}\n+\n+pre.ignore:hover, .information:hover + pre.ignore {\n+\tborder-left: 2px solid #ff9200;\n+}\n+\n+.tooltip.compile_fail {\n+\tcolor: rgba(255,0,0,.3);\n+}\n+\n+.information > .compile_fail:hover {\n+\tcolor: #f00;\n+}\n+\n+.tooltip.ignore {\n+\tcolor: rgba(255,142,0,.3);\n+}\n+\n+.information > .ignore:hover {\n+\tcolor: rgba(255,142,0,1);\n+}"}]}