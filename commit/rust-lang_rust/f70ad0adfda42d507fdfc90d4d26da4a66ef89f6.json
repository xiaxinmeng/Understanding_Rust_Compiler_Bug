{"sha": "f70ad0adfda42d507fdfc90d4d26da4a66ef89f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MGFkMGFkZmRhNDJkNTA3ZmRmYzkwZDRkMjZkYTRhNjZlZjg5ZjY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-15T14:01:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-12-15T14:01:55Z"}, "message": "Auto merge of #38331 - bluss:assume-stage, r=alexcrichton\n\nrustbuild: Add cli option --keep-stage\n\nThis option is intended to be used like:\n\n./x.py build --stage 1 --keep-stage 0\n\nWhich skips all stage 0 steps, so that stage 1 can be recompiled\ndirectly (even if for example libcore has changes).\n\nThis is useful when working on `cfg(not(stage0))` parts of the\nlibraries or when re-running stage 1 tests in libraries in general.\n\nFixes #38326", "tree": {"sha": "0e5b6a7d3091a1193b5569eddfe2eef456f1c9c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e5b6a7d3091a1193b5569eddfe2eef456f1c9c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f70ad0adfda42d507fdfc90d4d26da4a66ef89f6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f70ad0adfda42d507fdfc90d4d26da4a66ef89f6", "html_url": "https://github.com/rust-lang/rust/commit/f70ad0adfda42d507fdfc90d4d26da4a66ef89f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f70ad0adfda42d507fdfc90d4d26da4a66ef89f6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "833b03ad52f1d5381d65ad866ab79cb9a68b0e7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/833b03ad52f1d5381d65ad866ab79cb9a68b0e7f", "html_url": "https://github.com/rust-lang/rust/commit/833b03ad52f1d5381d65ad866ab79cb9a68b0e7f"}, {"sha": "0e01427bba6e4f5ceef4531d239c5bbc6c5d8082", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e01427bba6e4f5ceef4531d239c5bbc6c5d8082", "html_url": "https://github.com/rust-lang/rust/commit/0e01427bba6e4f5ceef4531d239c5bbc6c5d8082"}], "stats": {"total": 16, "additions": 16, "deletions": 0}, "files": [{"sha": "02c64548eb5f3c3614208207f88e7c61f210c944", "filename": "src/bootstrap/README.md", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f70ad0adfda42d507fdfc90d4d26da4a66ef89f6/src%2Fbootstrap%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/f70ad0adfda42d507fdfc90d4d26da4a66ef89f6/src%2Fbootstrap%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FREADME.md?ref=f70ad0adfda42d507fdfc90d4d26da4a66ef89f6", "patch": "@@ -42,6 +42,15 @@ The script accepts commands, flags, and arguments to determine what to do:\n   ./x.py build --stage 0 src/libtest\n   ```\n \n+  If files are dirty that would normally be rebuilt from stage 0, that can be\n+  overidden using `--keep-stage 0`. Using `--keep-stage n` will skip all steps\n+  that belong to stage n or earlier:\n+\n+  ```\n+  # keep old build products for stage 0 and build stage 1\n+  ./x.py build --keep-stage 0 --stage 1\n+  ```\n+\n * `test` - a command for executing unit tests. Like the `build` command this\n   will execute the entire test suite by default, and otherwise it can be used to\n   select which test suite is run:"}, {"sha": "5c8d7cab966b6361f5a5580d0c053ad6eed1d5bb", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f70ad0adfda42d507fdfc90d4d26da4a66ef89f6/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f70ad0adfda42d507fdfc90d4d26da4a66ef89f6/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=f70ad0adfda42d507fdfc90d4d26da4a66ef89f6", "patch": "@@ -29,6 +29,7 @@ use step;\n pub struct Flags {\n     pub verbose: bool,\n     pub stage: Option<u32>,\n+    pub keep_stage: Option<u32>,\n     pub build: String,\n     pub host: Vec<String>,\n     pub target: Vec<String>,\n@@ -68,6 +69,7 @@ impl Flags {\n         opts.optmulti(\"\", \"host\", \"host targets to build\", \"HOST\");\n         opts.optmulti(\"\", \"target\", \"target targets to build\", \"TARGET\");\n         opts.optopt(\"\", \"stage\", \"stage to build\", \"N\");\n+        opts.optopt(\"\", \"keep-stage\", \"stage to keep without recompiling\", \"N\");\n         opts.optopt(\"\", \"src\", \"path to the root of the rust checkout\", \"DIR\");\n         opts.optopt(\"j\", \"jobs\", \"number of jobs to run in parallel\", \"JOBS\");\n         opts.optflag(\"h\", \"help\", \"print this help message\");\n@@ -257,6 +259,7 @@ To learn more about a subcommand, run `./x.py <command> -h`\n         Flags {\n             verbose: m.opt_present(\"v\"),\n             stage: m.opt_str(\"stage\").map(|j| j.parse().unwrap()),\n+            keep_stage: m.opt_str(\"keep-stage\").map(|j| j.parse().unwrap()),\n             build: m.opt_str(\"build\").unwrap_or_else(|| {\n                 env::var(\"BUILD\").unwrap()\n             }),"}, {"sha": "13c0c644d6357bbe72604b2a68bb4f2dc18c3aa7", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f70ad0adfda42d507fdfc90d4d26da4a66ef89f6/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f70ad0adfda42d507fdfc90d4d26da4a66ef89f6/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=f70ad0adfda42d507fdfc90d4d26da4a66ef89f6", "patch": "@@ -871,6 +871,10 @@ invalid rule dependency graph detected, was a rule added and maybe typo'd?\n \n         // And finally, iterate over everything and execute it.\n         for step in order.iter() {\n+            if self.build.flags.keep_stage.map_or(false, |s| step.stage <= s) {\n+                self.build.verbose(&format!(\"keeping step {:?}\", step));\n+                continue;\n+            }\n             self.build.verbose(&format!(\"executing step {:?}\", step));\n             (self.rules[step.name].run)(step);\n         }"}]}