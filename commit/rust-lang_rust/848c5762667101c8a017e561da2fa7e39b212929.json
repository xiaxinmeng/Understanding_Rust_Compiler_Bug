{"sha": "848c5762667101c8a017e561da2fa7e39b212929", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0OGM1NzYyNjY3MTAxYzhhMDE3ZTU2MWRhMmZhN2UzOWIyMTI5Mjk=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-02-12T14:44:52Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-02-12T14:44:52Z"}, "message": "Introduce AttrKind", "tree": {"sha": "26a6acb0eb0d4099003ed455f89fde4d196a363a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26a6acb0eb0d4099003ed455f89fde4d196a363a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/848c5762667101c8a017e561da2fa7e39b212929", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/848c5762667101c8a017e561da2fa7e39b212929", "html_url": "https://github.com/rust-lang/rust/commit/848c5762667101c8a017e561da2fa7e39b212929", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/848c5762667101c8a017e561da2fa7e39b212929/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1596b31698acd1ca8fe25a1b699bef4a9a6feb1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1596b31698acd1ca8fe25a1b699bef4a9a6feb1d", "html_url": "https://github.com/rust-lang/rust/commit/1596b31698acd1ca8fe25a1b699bef4a9a6feb1d"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "eac452413429eb058c9636e6733203f5d0520524", "filename": "crates/ra_assists/src/handlers/replace_qualified_name_with_use.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/848c5762667101c8a017e561da2fa7e39b212929/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/848c5762667101c8a017e561da2fa7e39b212929/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Freplace_qualified_name_with_use.rs?ref=848c5762667101c8a017e561da2fa7e39b212929", "patch": "@@ -434,8 +434,7 @@ fn best_action_for_target(\n             let add_after_anchor = anchor\n                 .clone()\n                 .and_then(ast::Attr::cast)\n-                .as_ref()\n-                .map(ast::Attr::is_inner_attribute)\n+                .map(|attr| attr.kind() == ast::AttrKind::Inner)\n                 .unwrap_or(false);\n             ImportAction::add_new_use(anchor, add_after_anchor)\n         }"}, {"sha": "50441e75b4902d227dabf66cbcfcbd795123d2f0", "filename": "crates/ra_syntax/src/ast.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/848c5762667101c8a017e561da2fa7e39b212929/crates%2Fra_syntax%2Fsrc%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/848c5762667101c8a017e561da2fa7e39b212929/crates%2Fra_syntax%2Fsrc%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast.rs?ref=848c5762667101c8a017e561da2fa7e39b212929", "patch": "@@ -18,8 +18,8 @@ use crate::{\n pub use self::{\n     expr_extensions::{ArrayExprKind, BinOp, ElseBranch, LiteralKind, PrefixOp, RangeOp},\n     extensions::{\n-        FieldKind, PathSegmentKind, SelfParamKind, SlicePatComponents, StructKind, TypeBoundKind,\n-        VisibilityKind,\n+        AttrKind, FieldKind, PathSegmentKind, SelfParamKind, SlicePatComponents, StructKind,\n+        TypeBoundKind, VisibilityKind,\n     },\n     generated::*,\n     tokens::*,\n@@ -218,7 +218,7 @@ fn test_doc_comment_multi_line_block_strips_suffix() {\n fn test_comments_preserve_trailing_whitespace() {\n     let file = SourceFile::parse(\n         r#\"\n-/// Representation of a Realm.   \n+/// Representation of a Realm.\n /// In the specification these are called Realm Records.\n struct Realm {}\"#,\n     )"}, {"sha": "44de4af892b1b7ab00327ad449d1a2b655dbd493", "filename": "crates/ra_syntax/src/ast/extensions.rs", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/848c5762667101c8a017e561da2fa7e39b212929/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/848c5762667101c8a017e561da2fa7e39b212929/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fextensions.rs?ref=848c5762667101c8a017e561da2fa7e39b212929", "patch": "@@ -37,6 +37,12 @@ fn text_of_first_token(node: &SyntaxNode) -> &SmolStr {\n     node.green().children().next().and_then(|it| it.into_token()).unwrap().text()\n }\n \n+#[derive(Debug, Clone, PartialEq, Eq)]\n+pub enum AttrKind {\n+    Inner,\n+    Outer,\n+}\n+\n impl ast::Attr {\n     pub fn as_simple_atom(&self) -> Option<SmolStr> {\n         match self.input() {\n@@ -72,13 +78,16 @@ impl ast::Attr {\n         }\n     }\n \n-    pub fn is_inner_attribute(&self) -> bool {\n+    pub fn kind(&self) -> AttrKind {\n         let first_token = self.syntax().first_token();\n         let first_token_kind = first_token.as_ref().map(SyntaxToken::kind);\n         let second_token_kind =\n             first_token.and_then(|token| token.next_token()).as_ref().map(SyntaxToken::kind);\n-        return first_token_kind == Some(SyntaxKind::POUND)\n-            && second_token_kind == Some(SyntaxKind::EXCL);\n+\n+        match (first_token_kind, second_token_kind) {\n+            (Some(SyntaxKind::POUND), Some(SyntaxKind::EXCL)) => AttrKind::Inner,\n+            _ => AttrKind::Outer,\n+        }\n     }\n }\n "}]}