{"sha": "aa9eeff26370b17e8ba140b6cb285a4613047132", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFhOWVlZmYyNjM3MGIxN2U4YmExNDBiNmNiMjg1YTQ2MTMwNDcxMzI=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-08-02T12:26:55Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-08-07T12:44:48Z"}, "message": "Make sure upstream object files are added to staticlibs when compiling\nwith ThinLTO and cross-lang-lto.\n\nNormally, when compiling with whole-crate-graph ThinLTO, we expect\nrustc's LTO step to \"uplift\" upstream object files/LLVM modules to\nthe current set of compilation artifacts. Therefore the staticlib\ncreation code skips this uplifting. However, when compiling with\n\"cross-language LTO\" (i.e. defer LTO to the actual linker), the LTO\nstep in rustc is not performed, so we have to take care of copying\nupstream object files during archive creation (like we already do\nwhen compiling without any LTO).", "tree": {"sha": "20a4991f868fe74177fead5062ca4b7dd8c26a3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20a4991f868fe74177fead5062ca4b7dd8c26a3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aa9eeff26370b17e8ba140b6cb285a4613047132", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aa9eeff26370b17e8ba140b6cb285a4613047132", "html_url": "https://github.com/rust-lang/rust/commit/aa9eeff26370b17e8ba140b6cb285a4613047132", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aa9eeff26370b17e8ba140b6cb285a4613047132/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a3b3317d99f0b72884002d1e4809bbe87356f8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a3b3317d99f0b72884002d1e4809bbe87356f8f", "html_url": "https://github.com/rust-lang/rust/commit/3a3b3317d99f0b72884002d1e4809bbe87356f8f"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "72084c170aa71527ea84e9917c9c452ad0bb7662", "filename": "src/librustc_codegen_llvm/back/link.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/aa9eeff26370b17e8ba140b6cb285a4613047132/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aa9eeff26370b17e8ba140b6cb285a4613047132/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fback%2Flink.rs?ref=aa9eeff26370b17e8ba140b6cb285a4613047132", "patch": "@@ -1626,8 +1626,12 @@ fn relevant_lib(sess: &Session, lib: &NativeLibrary) -> bool {\n fn is_full_lto_enabled(sess: &Session) -> bool {\n     match sess.lto() {\n         Lto::Yes |\n-        Lto::Thin |\n         Lto::Fat => true,\n+        Lto::Thin => {\n+            // If we defer LTO to the linker, we haven't run LTO ourselves, so\n+            // any upstream object files have not been copied yet.\n+            !sess.opts.debugging_opts.cross_lang_lto.enabled()\n+        }\n         Lto::No |\n         Lto::ThinLocal => false,\n     }"}]}