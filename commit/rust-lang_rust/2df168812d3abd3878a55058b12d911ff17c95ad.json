{"sha": "2df168812d3abd3878a55058b12d911ff17c95ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkZjE2ODgxMmQzYWJkMzg3OGE1NTA1OGIxMmQ5MTFmZjE3Yzk1YWQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-10-01T23:34:54Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-10-02T22:33:44Z"}, "message": "libcore: Implement os::args() on Windows", "tree": {"sha": "85fa75ff064d144c167eca2680b4ca5540e4c3b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85fa75ff064d144c167eca2680b4ca5540e4c3b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2df168812d3abd3878a55058b12d911ff17c95ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2df168812d3abd3878a55058b12d911ff17c95ad", "html_url": "https://github.com/rust-lang/rust/commit/2df168812d3abd3878a55058b12d911ff17c95ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2df168812d3abd3878a55058b12d911ff17c95ad/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e7ff924b5931bb90f381d2bf5936616224d4e85", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e7ff924b5931bb90f381d2bf5936616224d4e85", "html_url": "https://github.com/rust-lang/rust/commit/5e7ff924b5931bb90f381d2bf5936616224d4e85"}], "stats": {"total": 47, "additions": 46, "deletions": 1}, "files": [{"sha": "84795a63311aa30f90395486a11351599d2ce0d5", "filename": "src/libcore/os.rs", "status": "modified", "additions": 46, "deletions": 1, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/2df168812d3abd3878a55058b12d911ff17c95ad/src%2Flibcore%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2df168812d3abd3878a55058b12d911ff17c95ad/src%2Flibcore%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fos.rs?ref=2df168812d3abd3878a55058b12d911ff17c95ad", "patch": "@@ -761,7 +761,46 @@ fn real_args() -> ~[~str] {\n \n #[cfg(windows)]\n fn real_args() -> ~[~str] {\n-    fail    // Needs implementing.\n+    let mut nArgs: c_int = 0;\n+    let lpArgCount = ptr::to_mut_unsafe_ptr(&mut nArgs);\n+    let lpCmdLine = GetCommandLineW();\n+    let szArgList = CommandLineToArgvW(lpCmdLine, lpArgCount);\n+\n+    let mut args = ~[];\n+    for uint::range(0, nArgs as uint) |i| {\n+        unsafe {\n+            // Determine the length of this argument.\n+            let ptr = *szArgList.offset(i);\n+            let mut len = 0;\n+            while *ptr.offset(len) != 0 { len += 1; }\n+\n+            // Push it onto the list.\n+            vec::push(&mut args, vec::raw::form_slice(ptr, len, str::from_utf16));\n+        }\n+    }\n+\n+    unsafe {\n+        LocalFree(cast::transmute(szArgList));\n+    }\n+\n+    return args;\n+}\n+\n+type LPCWSTR = *u16;\n+\n+#[cfg(windows)]\n+#[link_name=\"kernel32\"]\n+#[abi=\"stdcall\"]\n+extern {\n+    fn GetCommandLineW() -> LPCWSTR;\n+    fn LocalFree(ptr: *c_void);\n+}\n+\n+#[cfg(windows)]\n+#[link_name=\"shell32\"]\n+#[abi=\"stdcall\"]\n+extern {\n+    fn CommandLineToArgvW(lpCmdLine: LPCWSTR, pNumArgs: *mut c_int) -> **u16;\n }\n \n struct OverriddenArgs {\n@@ -845,6 +884,12 @@ mod tests {\n         log(debug, last_os_error());\n     }\n \n+    #[test]\n+    pub fn test_args() {\n+        let a = real_args();\n+        assert a.len() >= 1;\n+    }\n+\n     fn make_rand_name() -> ~str {\n         let rng: rand::Rng = rand::Rng();\n         let n = ~\"TEST\" + rng.gen_str(10u);"}]}