{"sha": "84c36a1333c51e90fb952f1ff5f07d71709e548b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0YzM2YTEzMzNjNTFlOTBmYjk1MmYxZmY1ZjA3ZDcxNzA5ZTU0OGI=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-09-13T18:11:31Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-09-13T18:11:31Z"}, "message": "rustc_resolve: ignore uniform_paths canaries with no module scopes.", "tree": {"sha": "702cc8549154e67dd7c8f57c8159239d36466928", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/702cc8549154e67dd7c8f57c8159239d36466928"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84c36a1333c51e90fb952f1ff5f07d71709e548b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84c36a1333c51e90fb952f1ff5f07d71709e548b", "html_url": "https://github.com/rust-lang/rust/commit/84c36a1333c51e90fb952f1ff5f07d71709e548b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84c36a1333c51e90fb952f1ff5f07d71709e548b/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "439423834713e7d10d688ef912747e3e9a2fecd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/439423834713e7d10d688ef912747e3e9a2fecd2", "html_url": "https://github.com/rust-lang/rust/commit/439423834713e7d10d688ef912747e3e9a2fecd2"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "a8e3454b4cbd1956061e012138df7bfe3f653da1", "filename": "src/librustc_resolve/resolve_imports.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/84c36a1333c51e90fb952f1ff5f07d71709e548b/src%2Flibrustc_resolve%2Fresolve_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84c36a1333c51e90fb952f1ff5f07d71709e548b/src%2Flibrustc_resolve%2Fresolve_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fresolve_imports.rs?ref=84c36a1333c51e90fb952f1ff5f07d71709e548b", "patch": "@@ -735,6 +735,12 @@ impl<'a, 'b:'a, 'c: 'b> ImportResolver<'a, 'b, 'c> {\n                 None\n             };\n \n+            // Currently imports can't resolve in non-module scopes,\n+            // we only have canaries in them for future-proofing.\n+            if external_crate.is_none() && results.module_scope.is_none() {\n+                return;\n+            }\n+\n             let result_filter = |result: &&NameBinding| {\n                 // Ignore canaries that resolve to an import of the same crate.\n                 // That is, we allow `use crate_name; use crate_name::foo;`."}]}