{"sha": "387d7c7d96d6ef2b9b7f8e1da1b761a045df711b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM4N2Q3YzdkOTZkNmVmMmI5YjdmOGUxZGExYjc2MWEwNDVkZjcxMWI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-04-02T12:28:51Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-04-02T12:28:51Z"}, "message": "minor: add profile call for resolve_obligations", "tree": {"sha": "67fee4829ac0889ff099644c58d62c70c34286eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/67fee4829ac0889ff099644c58d62c70c34286eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/387d7c7d96d6ef2b9b7f8e1da1b761a045df711b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/387d7c7d96d6ef2b9b7f8e1da1b761a045df711b", "html_url": "https://github.com/rust-lang/rust/commit/387d7c7d96d6ef2b9b7f8e1da1b761a045df711b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/387d7c7d96d6ef2b9b7f8e1da1b761a045df711b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71ef64b673595807ccb4b3f5b7ad6ea55e63645b", "url": "https://api.github.com/repos/rust-lang/rust/commits/71ef64b673595807ccb4b3f5b7ad6ea55e63645b", "html_url": "https://github.com/rust-lang/rust/commit/71ef64b673595807ccb4b3f5b7ad6ea55e63645b"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "674e9e6f9301717916892a03351cba5c834c699c", "filename": "crates/hir_ty/src/infer.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/387d7c7d96d6ef2b9b7f8e1da1b761a045df711b/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/387d7c7d96d6ef2b9b7f8e1da1b761a045df711b/crates%2Fhir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer.rs?ref=387d7c7d96d6ef2b9b7f8e1da1b761a045df711b", "patch": "@@ -340,6 +340,8 @@ impl<'a> InferenceContext<'a> {\n             // no change\n             return;\n         }\n+        let _span = profile::span(\"resolve_obligations_as_possible\");\n+\n         self.last_obligations_check = Some(self.table.revision);\n         let obligations = mem::replace(&mut self.obligations, Vec::new());\n         for obligation in obligations {"}]}