{"sha": "48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YmMwODI0N2E3YjRhNTU3OTQzN2RmNTRjYTNmNGEzZmIyNWNlOGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-14T07:06:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-14T07:06:25Z"}, "message": "Auto merge of #39728 - eddyb:vendeur-tres-bien, r=alexcrichton\n\nAutomate vendoring by invoking cargo-vendor when building src dist tarballs.\n\nThis avoids #39633 bringing the `src/vendor` checked into git by #37524, past 200,000 lines of code.\n\nI believe the strategy of having rustbuild run `cargo vendor` during the `dist src` step is sound.\n\nHowever, the only way to be sure `cargo-vendor` exists is to run `cargo install --force cargo-vendor`, which will recompile it every time (not passing `--force` means you can't tell between \"already exists\" and \"build error\"). ~~This is quite suboptimal and I'd like to somehow do it in each `Dockerfile` that would need it.~~\n\n* [ ] Cache `CARGO_HOME` (i.e. `~/.cargo`) between CI runs\n  * `bin/cargo-vendor` and the actual caches are the relevant bits\n* [x] Do not build `cargo-vendor` all the time\n  * ~~Maybe detect `~/.cargo/bin/cargo-vendor` already exists?~~\n  * ~~Could also try to build it in a `Dockerfile` but do we have `cargo`/`rustc` there?~~\n  * Final solution: check `cargo install --list` for a line starting with `cargo-vendor `\n\ncc @rust-lang/tools", "tree": {"sha": "8fbb2097c8787f3ad9d9ae638bab427143e01c8f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fbb2097c8787f3ad9d9ae638bab427143e01c8f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "html_url": "https://github.com/rust-lang/rust/commit/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55013cddefbd8e2616370a72df785c20880189ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/55013cddefbd8e2616370a72df785c20880189ce", "html_url": "https://github.com/rust-lang/rust/commit/55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "d29f0bc8fa166117e62b1fa2969dd31f415fd887", "url": "https://api.github.com/repos/rust-lang/rust/commits/d29f0bc8fa166117e62b1fa2969dd31f415fd887", "html_url": "https://github.com/rust-lang/rust/commit/d29f0bc8fa166117e62b1fa2969dd31f415fd887"}], "stats": {"total": 40038, "additions": 106, "deletions": 39932}, "files": [{"sha": "a3bcc85998bce7e840dc967f9566ce7838feef88", "filename": ".travis.yml", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -47,15 +47,24 @@ matrix:\n       install: &osx_install_sccache >\n         curl -L https://api.pub.build.mozilla.org/tooltool/sha512/d0025b286468cc5ada83b23d3fafbc936b9f190eaa7d4a981715b18e8e3bf720a7bcee7bfe758cfdeb8268857f6098fd52dcdd8818232692a30ce91039936596 |\n           tar xJf - -C /usr/local/bin --strip-components=1\n+    - env: >\n+        RUST_CHECK_TARGET=check\n+        RUST_CONFIGURE_ARGS=--build=i686-apple-darwin\n+        SRC=.\n+      os: osx\n+      osx_image: xcode8.2\n+      install: *osx_install_sccache\n \n     - env: >\n-        SCRIPT=\"./x.py test && ./x.py dist\"\n+        RUST_CHECK_TARGET=dist\n         RUST_CONFIGURE_ARGS=\"--build=i686-apple-darwin --enable-extended\"\n         SRC=.\n         DEPLOY=1\n       os: osx\n       osx_image: xcode8.2\n-      install: *osx_install_sccache\n+      install: >\n+        curl -L https://api.pub.build.mozilla.org/tooltool/sha512/d0025b286468cc5ada83b23d3fafbc936b9f190eaa7d4a981715b18e8e3bf720a7bcee7bfe758cfdeb8268857f6098fd52dcdd8818232692a30ce91039936596 |\n+          tar xJf - -C /usr/local/bin --strip-components=1 && brew uninstall --ignore-dependencies openssl && brew install openssl --universal --without-test\n     - env: >\n         RUST_CHECK_TARGET=dist\n         RUST_CONFIGURE_ARGS=\"--target=aarch64-apple-ios,armv7-apple-ios,armv7s-apple-ios,i386-apple-ios,x86_64-apple-ios --enable-extended\""}, {"sha": "9fff2f3c8b4df4dcea452371f1dad28d28892679", "filename": "appveyor.yml", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -17,7 +17,6 @@ environment:\n \n   # MSVC cargotest\n   - MSYS_BITS: 64\n-    NO_VENDOR: 1\n     RUST_CHECK_TARGET: check-aux\n     RUST_CONFIGURE_ARGS: --build=x86_64-pc-windows-msvc\n "}, {"sha": "372ee756534be73d1ff6c378f57f2c242243bbcb", "filename": "configure", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/configure", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -647,6 +647,7 @@ opt llvm-version-check 1 \"check if the LLVM version is supported, build anyway\"\n opt codegen-tests 1 \"run the src/test/codegen tests\"\n opt option-checking 1 \"complain about unrecognized options in this configure script\"\n opt ninja 0 \"build LLVM using the Ninja generator (for MSVC, requires building in the correct environment)\"\n+opt locked-deps 0 \"force Cargo.lock to be up to date\"\n opt vendor 0 \"enable usage of vendored Rust crates\"\n opt sanitizers 0 \"build the sanitizer runtimes (asan, lsan, msan, tsan)\"\n "}, {"sha": "ee3f663dbd55291da0140edbd6d41235beaf39e7", "filename": "src/bootstrap/bootstrap.py", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fbootstrap%2Fbootstrap.py", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fbootstrap%2Fbootstrap.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbootstrap.py?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -294,6 +294,8 @@ def build_bootstrap(self):\n             raise Exception(\"no cargo executable found at `%s`\" % self.cargo())\n         args = [self.cargo(), \"build\", \"--manifest-path\",\n                 os.path.join(self.rust_root, \"src/bootstrap/Cargo.toml\")]\n+        if self.use_locked_deps:\n+            args.append(\"--locked\")\n         if self.use_vendored_sources:\n             args.append(\"--frozen\")\n         self.run(args, env)\n@@ -455,6 +457,9 @@ def main():\n     rb.use_vendored_sources = '\\nvendor = true' in rb.config_toml or \\\n                               'CFG_ENABLE_VENDOR' in rb.config_mk\n \n+    rb.use_locked_deps = '\\nlocked-deps = true' in rb.config_toml or \\\n+                         'CFG_ENABLE_LOCKED_DEPS' in rb.config_mk\n+\n     if 'SUDO_USER' in os.environ and not rb.use_vendored_sources:\n         if os.environ.get('USER') != os.environ['SUDO_USER']:\n             rb.use_vendored_sources = True"}, {"sha": "00758460becc58790ef7e9547bfa4cc70633d647", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -108,8 +108,12 @@ pub fn cargotest(build: &Build, stage: u32, host: &str) {\n pub fn tidy(build: &Build, host: &str) {\n     println!(\"tidy check ({})\", host);\n     let compiler = Compiler::new(0, host);\n-    build.run(build.tool_cmd(&compiler, \"tidy\")\n-                   .arg(build.src.join(\"src\")));\n+    let mut cmd = build.tool_cmd(&compiler, \"tidy\");\n+    cmd.arg(build.src.join(\"src\"));\n+    if !build.config.vendor {\n+        cmd.arg(\"--no-vendor\");\n+    }\n+    build.run(&mut cmd);\n }\n \n fn testdir(build: &Build, host: &str) -> PathBuf {\n@@ -643,6 +647,7 @@ pub fn distcheck(build: &Build) {\n     build.run(&mut cmd);\n     build.run(Command::new(\"./configure\")\n                      .args(&build.config.configure_args)\n+                     .arg(\"--enable-vendor\")\n                      .current_dir(&dir));\n     build.run(Command::new(build_helper::make(&build.config.build))\n                      .arg(\"check\")"}, {"sha": "e95416be4b6dc75fd4488bbb5195eb008db7a722", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -44,6 +44,7 @@ pub struct Config {\n     pub submodules: bool,\n     pub compiler_docs: bool,\n     pub docs: bool,\n+    pub locked_deps: bool,\n     pub vendor: bool,\n     pub target_config: HashMap<String, Target>,\n     pub full_bootstrap: bool,\n@@ -145,6 +146,7 @@ struct Build {\n     docs: Option<bool>,\n     submodules: Option<bool>,\n     gdb: Option<String>,\n+    locked_deps: Option<bool>,\n     vendor: Option<bool>,\n     nodejs: Option<String>,\n     python: Option<String>,\n@@ -294,6 +296,7 @@ impl Config {\n         set(&mut config.compiler_docs, build.compiler_docs);\n         set(&mut config.docs, build.docs);\n         set(&mut config.submodules, build.submodules);\n+        set(&mut config.locked_deps, build.locked_deps);\n         set(&mut config.vendor, build.vendor);\n         set(&mut config.full_bootstrap, build.full_bootstrap);\n         set(&mut config.extended, build.extended);\n@@ -440,6 +443,7 @@ impl Config {\n                 (\"LOCAL_REBUILD\", self.local_rebuild),\n                 (\"NINJA\", self.ninja),\n                 (\"CODEGEN_TESTS\", self.codegen_tests),\n+                (\"LOCKED_DEPS\", self.locked_deps),\n                 (\"VENDOR\", self.vendor),\n                 (\"FULL_BOOTSTRAP\", self.full_bootstrap),\n                 (\"EXTENDED\", self.extended),"}, {"sha": "f95e890f346eedc3b4f059248eebbd09d6d76729", "filename": "src/bootstrap/config.toml.example", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fbootstrap%2Fconfig.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fbootstrap%2Fconfig.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.toml.example?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -108,6 +108,10 @@\n # Note that Python 2 is currently required.\n #python = \"python2.7\"\n \n+# Force Cargo to check that Cargo.lock describes the precise dependency\n+# set that all the Cargo.toml files create, instead of updating it.\n+#locked-deps = false\n+\n # Indicate whether the vendored sources are used for Rust dependencies or not\n #vendor = false\n "}, {"sha": "52a7c63c9045fd086c72725779c88faefbb9d09e", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 25, "deletions": 7, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -360,6 +360,8 @@ pub fn analysis(build: &Build, compiler: &Compiler, target: &str) {\n     t!(fs::remove_dir_all(&image));\n }\n \n+const CARGO_VENDOR_VERSION: &'static str = \"0.1.4\";\n+\n /// Creates the `rust-src` installer component and the plain source tarball\n pub fn rust_src(build: &Build) {\n     println!(\"Dist src\");\n@@ -404,13 +406,6 @@ pub fn rust_src(build: &Build) {\n             }\n         }\n \n-        // If we're inside the vendor directory then we need to preserve\n-        // everything as Cargo's vendoring support tracks all checksums and we\n-        // want to be sure we don't accidentally leave out a file.\n-        if spath.contains(\"vendor\") {\n-            return true\n-        }\n-\n         let excludes = [\n             \"CVS\", \"RCS\", \"SCCS\", \".git\", \".gitignore\", \".gitmodules\",\n             \".gitattributes\", \".cvsignore\", \".svn\", \".arch-ids\", \"{arch}\",\n@@ -433,6 +428,29 @@ pub fn rust_src(build: &Build) {\n         copy(&build.src.join(item), &dst_src.join(item));\n     }\n \n+    // Get cargo-vendor installed, if it isn't already.\n+    let mut has_cargo_vendor = false;\n+    let mut cmd = Command::new(&build.cargo);\n+    for line in output(cmd.arg(\"install\").arg(\"--list\")).lines() {\n+        has_cargo_vendor |= line.starts_with(\"cargo-vendor \");\n+    }\n+    if !has_cargo_vendor {\n+        let mut cmd = Command::new(&build.cargo);\n+        cmd.arg(\"install\")\n+           .arg(\"--force\")\n+           .arg(\"--debug\")\n+           .arg(\"--vers\").arg(CARGO_VENDOR_VERSION)\n+           .arg(\"cargo-vendor\")\n+           .env(\"RUSTC\", &build.rustc);\n+        build.run(&mut cmd);\n+    }\n+\n+    // Vendor all Cargo dependencies\n+    let mut cmd = Command::new(&build.cargo);\n+    cmd.arg(\"vendor\")\n+       .current_dir(&dst_src.join(\"src\"));\n+    build.run(&mut cmd);\n+\n     // Create source tarball in rust-installer format\n     let mut cmd = Command::new(\"sh\");\n     cmd.arg(sanitize_sh(&build.src.join(\"src/rust-installer/gen-installer.sh\")))"}, {"sha": "7bd611eb53e3c136d329ec5bb5c56855fb77acb3", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -528,6 +528,9 @@ impl Build {\n         if self.config.rust_optimize && cmd != \"bench\" {\n             cargo.arg(\"--release\");\n         }\n+        if self.config.locked_deps {\n+            cargo.arg(\"--locked\");\n+        }\n         if self.config.vendor || self.is_sudo {\n             cargo.arg(\"--frozen\");\n         }"}, {"sha": "ae1bfd9e40a80861548838ed05d011d20e891b3a", "filename": "src/ci/docker/android/Dockerfile", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fandroid%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fandroid%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fandroid%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -16,7 +16,9 @@ RUN dpkg --add-architecture i386 && \\\n   openjdk-9-jre \\\n   sudo \\\n   libstdc++6:i386 \\\n-  xz-utils\n+  xz-utils \\\n+  libssl-dev \\\n+  pkg-config\n \n WORKDIR /android/\n ENV PATH=$PATH:/android/ndk-arm-9/bin:/android/sdk/tools:/android/sdk/platform-tools"}, {"sha": "52c5b83f2632284986b0ecf06d331fee56866de2", "filename": "src/ci/docker/cross/Dockerfile", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fcross%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fcross%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fcross%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -17,7 +17,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   gcc-sparc64-linux-gnu \\\n   libc6-dev-sparc64-cross \\\n   bzip2 \\\n-  patch\n+  patch \\\n+  libssl-dev \\\n+  pkg-config\n \n ENV SCCACHE_DIGEST=7237e38e029342fa27b7ac25412cb9d52554008b12389727320bd533fd7f05b6a96d55485f305caf95e5c8f5f97c3313e10012ccad3e752aba2518f3522ba783\n RUN curl -L https://api.pub.build.mozilla.org/tooltool/sha512/$SCCACHE_DIGEST | \\"}, {"sha": "e5619564b05d222516a1fb3c336a2623dc1ae925", "filename": "src/ci/docker/dist-arm-linux/Dockerfile", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -23,7 +23,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   sudo \\\n   texinfo \\\n   wget \\\n-  xz-utils\n+  xz-utils \\\n+  libssl-dev \\\n+  pkg-config\n \n ENV SCCACHE_DIGEST=7237e38e029342fa27b7ac25412cb9d52554008b12389727320bd533fd7f05b6a96d55485f305caf95e5c8f5f97c3313e10012ccad3e752aba2518f3522ba783\n RUN curl -L https://api.pub.build.mozilla.org/tooltool/sha512/$SCCACHE_DIGEST | \\"}, {"sha": "5b94d5a972704ff9d30619ffdd6f27280b304bfc", "filename": "src/ci/docker/dist-armv7-aarch64-linux/Dockerfile", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-armv7-aarch64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-armv7-aarch64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-aarch64-linux%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -23,7 +23,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   sudo \\\n   texinfo \\\n   wget \\\n-  xz-utils\n+  xz-utils \\\n+  libssl-dev \\\n+  pkg-config\n \n ENV SCCACHE_DIGEST=7237e38e029342fa27b7ac25412cb9d52554008b12389727320bd533fd7f05b6a96d55485f305caf95e5c8f5f97c3313e10012ccad3e752aba2518f3522ba783\n RUN curl -L https://api.pub.build.mozilla.org/tooltool/sha512/$SCCACHE_DIGEST | \\"}, {"sha": "c39e298e3ceb09f909a840300e7fd2ee10800d2a", "filename": "src/ci/docker/dist-freebsd/Dockerfile", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-freebsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-freebsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-freebsd%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -12,7 +12,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   sudo \\\n   bzip2 \\\n   xz-utils \\\n-  wget\n+  wget \\\n+  libssl-dev \\\n+  pkg-config\n \n COPY build-toolchain.sh /tmp/\n RUN /tmp/build-toolchain.sh x86_64"}, {"sha": "5d8b3cfeae2a3116c3e1a5b1b04d250c3bc3b856", "filename": "src/ci/docker/dist-mips-linux/Dockerfile", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-mips-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-mips-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-mips-linux%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -13,7 +13,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   gdb \\\n   xz-utils \\\n   g++-mips-linux-gnu \\\n-  g++-mipsel-linux-gnu\n+  g++-mipsel-linux-gnu \\\n+  libssl-dev \\\n+  pkg-config\n \n ENV SCCACHE_DIGEST=7237e38e029342fa27b7ac25412cb9d52554008b12389727320bd533fd7f05b6a96d55485f305caf95e5c8f5f97c3313e10012ccad3e752aba2518f3522ba783\n RUN curl -L https://api.pub.build.mozilla.org/tooltool/sha512/$SCCACHE_DIGEST | \\"}, {"sha": "8feba12e72203db87de50a8e45defb9df0d07640", "filename": "src/ci/docker/dist-mips64-linux/Dockerfile", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-mips64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-mips64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-mips64-linux%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -13,7 +13,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   gdb \\\n   xz-utils \\\n   g++-mips64-linux-gnuabi64 \\\n-  g++-mips64el-linux-gnuabi64\n+  g++-mips64el-linux-gnuabi64 \\\n+  libssl-dev \\\n+  pkg-config\n \n ENV SCCACHE_DIGEST=7237e38e029342fa27b7ac25412cb9d52554008b12389727320bd533fd7f05b6a96d55485f305caf95e5c8f5f97c3313e10012ccad3e752aba2518f3522ba783\n RUN curl -L https://api.pub.build.mozilla.org/tooltool/sha512/$SCCACHE_DIGEST | \\"}, {"sha": "e5ffbfc090d5ad9a32296fcd5b4b5c91eb9a9928", "filename": "src/ci/docker/dist-powerpc-linux/Dockerfile", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -23,7 +23,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   sudo \\\n   texinfo \\\n   wget \\\n-  xz-utils\n+  xz-utils \\\n+  libssl-dev \\\n+  pkg-config\n \n ENV SCCACHE_DIGEST=7237e38e029342fa27b7ac25412cb9d52554008b12389727320bd533fd7f05b6a96d55485f305caf95e5c8f5f97c3313e10012ccad3e752aba2518f3522ba783\n RUN curl -L https://api.pub.build.mozilla.org/tooltool/sha512/$SCCACHE_DIGEST | \\"}, {"sha": "7d13bc3d438bab213be729c2b0c170dc12cec096", "filename": "src/ci/docker/dist-powerpc64-linux/Dockerfile", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -23,7 +23,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   sudo \\\n   texinfo \\\n   wget \\\n-  xz-utils\n+  xz-utils \\\n+  libssl-dev \\\n+  pkg-config\n \n ENV SCCACHE_DIGEST=7237e38e029342fa27b7ac25412cb9d52554008b12389727320bd533fd7f05b6a96d55485f305caf95e5c8f5f97c3313e10012ccad3e752aba2518f3522ba783\n RUN curl -L https://api.pub.build.mozilla.org/tooltool/sha512/$SCCACHE_DIGEST | \\"}, {"sha": "7f4c6d4647c7d5c83455a3b45c092d069a91d28b", "filename": "src/ci/docker/dist-s390x-linux-netbsd/Dockerfile", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-s390x-linux-netbsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-s390x-linux-netbsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-s390x-linux-netbsd%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -23,7 +23,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   sudo \\\n   texinfo \\\n   wget \\\n-  xz-utils\n+  xz-utils \\\n+  libssl-dev \\\n+  pkg-config\n \n ENV SCCACHE_DIGEST=7237e38e029342fa27b7ac25412cb9d52554008b12389727320bd533fd7f05b6a96d55485f305caf95e5c8f5f97c3313e10012ccad3e752aba2518f3522ba783\n RUN curl -L https://api.pub.build.mozilla.org/tooltool/sha512/$SCCACHE_DIGEST | \\"}, {"sha": "61c23201c2cee663e3cd7fdb0ec062fbf07ac21c", "filename": "src/ci/docker/dist-x86-linux/Dockerfile", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-x86-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fdist-x86-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-x86-linux%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -13,13 +13,14 @@ RUN yum upgrade -y && yum install -y \\\n       file \\\n       xz \\\n       which \\\n-      pkg-config \\\n+      pkgconfig \\\n       wget \\\n       autoconf \\\n       gettext\n \n ENV PATH=/rustroot/bin:$PATH\n ENV LD_LIBRARY_PATH=/rustroot/lib64:/rustroot/lib\n+ENV PKG_CONFIG_PATH=/rustroot/lib/pkgconfig\n WORKDIR /tmp\n COPY shared.sh build-binutils.sh /tmp/\n "}, {"sha": "84b98712b3385c6670e782ec5dd3f47ee6b966ac", "filename": "src/ci/docker/i686-gnu/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fi686-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fi686-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fi686-gnu%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -23,4 +23,4 @@ RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-ini\n ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n \n ENV RUST_CONFIGURE_ARGS --build=i686-unknown-linux-gnu\n-ENV SCRIPT python2.7 ../x.py test && python2.7 ../x.py dist\n+ENV SCRIPT python2.7 ../x.py test"}, {"sha": "feb73bebbdbec0592eaed535b7e2c23ecb437378", "filename": "src/ci/docker/linux-tested-targets/Dockerfile", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Flinux-tested-targets%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Flinux-tested-targets%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Flinux-tested-targets%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -12,7 +12,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   xz-utils \\\n   sudo \\\n   gdb \\\n-  patch\n+  patch \\\n+  libssl-dev \\\n+  pkg-config\n \n WORKDIR /build/\n COPY musl-libunwind-patch.patch build-musl.sh /build/"}, {"sha": "607163ea547a302d1b487871ed908b4014d16b28", "filename": "src/ci/docker/x86_64-gnu-aux/Dockerfile", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fx86_64-gnu-aux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fx86_64-gnu-aux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-aux%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -25,4 +25,3 @@ ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n \n ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu\n ENV RUST_CHECK_TARGET check-aux\n-ENV NO_VENDOR 1"}, {"sha": "ad6c0c15f728262c04f7278ab25e6ffb117969aa", "filename": "src/ci/docker/x86_64-gnu-distcheck/Dockerfile", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fx86_64-gnu-distcheck%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fx86_64-gnu-distcheck%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu-distcheck%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -11,7 +11,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   cmake \\\n   sudo \\\n   gdb \\\n-  xz-utils\n+  xz-utils \\\n+  libssl-dev \\\n+  pkg-config\n \n ENV SCCACHE_DIGEST=7237e38e029342fa27b7ac25412cb9d52554008b12389727320bd533fd7f05b6a96d55485f305caf95e5c8f5f97c3313e10012ccad3e752aba2518f3522ba783\n RUN curl -L https://api.pub.build.mozilla.org/tooltool/sha512/$SCCACHE_DIGEST | \\"}, {"sha": "427498fabb2d72943b2ea14e36c2f3fcbe1e43f9", "filename": "src/ci/docker/x86_64-gnu/Dockerfile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fx86_64-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Fdocker%2Fx86_64-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fx86_64-gnu%2FDockerfile?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -23,4 +23,4 @@ RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-ini\n ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n \n ENV RUST_CONFIGURE_ARGS --build=x86_64-unknown-linux-gnu --enable-sanitizers\n-ENV SCRIPT python2.7 ../x.py test && python2.7 ../x.py dist\n+ENV SCRIPT python2.7 ../x.py test"}, {"sha": "c161d9980369cc366d87cdbad0f395742162c099", "filename": "src/ci/run.sh", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -23,6 +23,7 @@ fi\n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-sccache\"\n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-quiet-tests\"\n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-manage-submodules\"\n+RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-locked-deps\"\n \n # If we're deploying artifacts then we set the release channel, otherwise if\n # we're not deploying then we want to be sure to enable all assertions becauase\n@@ -47,13 +48,6 @@ else\n   fi\n fi\n \n-# We want to enable usage of the `src/vendor` dir as much as possible, but not\n-# all test suites have all their deps in there (just the main bootstrap) so we\n-# have the ability to disable this flag\n-if [ \"$NO_VENDOR\" = \"\" ]; then\n-  RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-vendor\"\n-fi\n-\n set -ex\n \n $SRC/configure $RUST_CONFIGURE_ARGS"}, {"sha": "1bb7919c1d35bdad815bb576f72e232074dd1375", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bc08247a7b4a5579437df54ca3f4a3fb25ce8d/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=48bc08247a7b4a5579437df54ca3f4a3fb25ce8d", "patch": "@@ -42,14 +42,18 @@ fn main() {\n     let path = env::args_os().skip(1).next().expect(\"need an argument\");\n     let path = PathBuf::from(path);\n \n+    let args: Vec<String> = env::args().skip(1).collect();\n+\n     let mut bad = false;\n     bins::check(&path, &mut bad);\n     style::check(&path, &mut bad);\n     errors::check(&path, &mut bad);\n     cargo::check(&path, &mut bad);\n     features::check(&path, &mut bad);\n     pal::check(&path, &mut bad);\n-    deps::check(&path, &mut bad);\n+    if !args.iter().any(|s| *s == \"--no-vendor\") {\n+        deps::check(&path, &mut bad);\n+    }\n \n     if bad {\n         panic!(\"some tidy checks failed\");"}, {"sha": "b81d7d2fa04ea3fc6774bcc2455bbdd44611107f", "filename": "src/vendor/cmake/.cargo-checksum.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2F.cargo-checksum.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2F.cargo-checksum.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fcmake%2F.cargo-checksum.json?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1 +0,0 @@\n-{\"files\":{\".cargo-ok\":\"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\".gitignore\":\"c1e953ee360e77de57f7b02f1b7880bd6a3dc22d1a69e953c2ac2c52cc52d247\",\".travis.yml\":\"5d83ed1ae0b80cd6cebfc6a25b1fdb58c893ead400f0f84cd0ebf08d9ad48b28\",\"Cargo.toml\":\"2266412ecb4504137a90d378ebdbf3a41f0e8b7188858cfb149da54792f7f8d9\",\"LICENSE-APACHE\":\"a60eea817514531668d7e00765731449fe14d059d3249e0bc93b36de45f759f2\",\"LICENSE-MIT\":\"378f5840b258e2779c39418f3f2d7b2ba96f1c7917dd6be0713f88305dbda397\",\"README.md\":\"8ca528d20639506546044c676ff9069e3e850937b02bff4194dcf9e5c3c50d64\",\"src/lib.rs\":\"dae5d93c005bf8d16427e29eb3bfb50c5527a1ec7c39a383d0694a8e8e38af90\",\"src/registry.rs\":\"ca16433f51b5e3aedb0560bba41370b0c42de9238926a5118d1c0a3a072b64b2\"},\"package\":\"0e5bcf27e097a184c1df4437654ed98df3d7a516e8508a6ba45d8b092bbdf283\"}\n\\ No newline at end of file"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/vendor/cmake/.cargo-ok", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2F.cargo-ok", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2F.cargo-ok", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fcmake%2F.cargo-ok?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "4fffb2f89cbd8f2169ce9914bd16bd43785bb368", "filename": "src/vendor/cmake/.gitignore", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fcmake%2F.gitignore?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,2 +0,0 @@\n-/target\n-/Cargo.lock"}, {"sha": "3ac040c5c0949651083e051c9a2062dd1c325d76", "filename": "src/vendor/cmake/.travis.yml", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2F.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2F.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fcmake%2F.travis.yml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,19 +0,0 @@\n-language: rust\n-rust:\n-  - stable\n-  - beta\n-  - nightly\n-sudo: false\n-before_script:\n-  - pip install 'travis-cargo<0.2' --user && export PATH=$HOME/.local/bin:$PATH\n-script:\n-  - cargo test --verbose\n-  - cargo doc --no-deps\n-after_success:\n-  - travis-cargo --only nightly doc-upload\n-env:\n-  global:\n-    secure: WSQJRyheeMf7eRdivHextSEQzyFnTIw2yeemO2+ZkHVftp0XYsTXQVca3RGlQNsVmjI0RP8lbDVe7HG23uwbTMeRgm+9hzSwNMa0ndJZ06TNMpPM6nqcXFUaNGeuf7EqU370xcgVBO+ZA0cSh55pJkOBg5ALd9bfRWbjEAjHkx8=\n-notifications:\n-  email:\n-    on_success: never"}, {"sha": "c17bbff922582ed964f375787a74094e97fc7136", "filename": "src/vendor/cmake/Cargo.toml", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fcmake%2FCargo.toml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,17 +0,0 @@\n-[package]\n-\n-name = \"cmake\"\n-version = \"0.1.18\"\n-authors = [\"Alex Crichton <alex@alexcrichton.com>\"]\n-license = \"MIT/Apache-2.0\"\n-readme = \"README.md\"\n-keywords = [\"build-dependencies\"]\n-repository = \"https://github.com/alexcrichton/cmake-rs\"\n-homepage = \"https://github.com/alexcrichton/cmake-rs\"\n-documentation = \"http://alexcrichton.com/cmake-rs\"\n-description = \"\"\"\n-A build dependency for running `cmake` to build a native library\n-\"\"\"\n-\n-[dependencies]\n-gcc = \"0.3.17\""}, {"sha": "16fe87b06e802f094b3fbb0894b137bca2b16ef1", "filename": "src/vendor/cmake/LICENSE-APACHE", "status": "removed", "additions": 0, "deletions": 201, "changes": 201, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2FLICENSE-APACHE", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2FLICENSE-APACHE", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fcmake%2FLICENSE-APACHE?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,201 +0,0 @@\n-                              Apache License\n-                        Version 2.0, January 2004\n-                     http://www.apache.org/licenses/\n-\n-TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n-\n-1. Definitions.\n-\n-   \"License\" shall mean the terms and conditions for use, reproduction,\n-   and distribution as defined by Sections 1 through 9 of this document.\n-\n-   \"Licensor\" shall mean the copyright owner or entity authorized by\n-   the copyright owner that is granting the License.\n-\n-   \"Legal Entity\" shall mean the union of the acting entity and all\n-   other entities that control, are controlled by, or are under common\n-   control with that entity. For the purposes of this definition,\n-   \"control\" means (i) the power, direct or indirect, to cause the\n-   direction or management of such entity, whether by contract or\n-   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n-   outstanding shares, or (iii) beneficial ownership of such entity.\n-\n-   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n-   exercising permissions granted by this License.\n-\n-   \"Source\" form shall mean the preferred form for making modifications,\n-   including but not limited to software source code, documentation\n-   source, and configuration files.\n-\n-   \"Object\" form shall mean any form resulting from mechanical\n-   transformation or translation of a Source form, including but\n-   not limited to compiled object code, generated documentation,\n-   and conversions to other media types.\n-\n-   \"Work\" shall mean the work of authorship, whether in Source or\n-   Object form, made available under the License, as indicated by a\n-   copyright notice that is included in or attached to the work\n-   (an example is provided in the Appendix below).\n-\n-   \"Derivative Works\" shall mean any work, whether in Source or Object\n-   form, that is based on (or derived from) the Work and for which the\n-   editorial revisions, annotations, elaborations, or other modifications\n-   represent, as a whole, an original work of authorship. For the purposes\n-   of this License, Derivative Works shall not include works that remain\n-   separable from, or merely link (or bind by name) to the interfaces of,\n-   the Work and Derivative Works thereof.\n-\n-   \"Contribution\" shall mean any work of authorship, including\n-   the original version of the Work and any modifications or additions\n-   to that Work or Derivative Works thereof, that is intentionally\n-   submitted to Licensor for inclusion in the Work by the copyright owner\n-   or by an individual or Legal Entity authorized to submit on behalf of\n-   the copyright owner. For the purposes of this definition, \"submitted\"\n-   means any form of electronic, verbal, or written communication sent\n-   to the Licensor or its representatives, including but not limited to\n-   communication on electronic mailing lists, source code control systems,\n-   and issue tracking systems that are managed by, or on behalf of, the\n-   Licensor for the purpose of discussing and improving the Work, but\n-   excluding communication that is conspicuously marked or otherwise\n-   designated in writing by the copyright owner as \"Not a Contribution.\"\n-\n-   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n-   on behalf of whom a Contribution has been received by Licensor and\n-   subsequently incorporated within the Work.\n-\n-2. Grant of Copyright License. Subject to the terms and conditions of\n-   this License, each Contributor hereby grants to You a perpetual,\n-   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-   copyright license to reproduce, prepare Derivative Works of,\n-   publicly display, publicly perform, sublicense, and distribute the\n-   Work and such Derivative Works in Source or Object form.\n-\n-3. Grant of Patent License. Subject to the terms and conditions of\n-   this License, each Contributor hereby grants to You a perpetual,\n-   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-   (except as stated in this section) patent license to make, have made,\n-   use, offer to sell, sell, import, and otherwise transfer the Work,\n-   where such license applies only to those patent claims licensable\n-   by such Contributor that are necessarily infringed by their\n-   Contribution(s) alone or by combination of their Contribution(s)\n-   with the Work to which such Contribution(s) was submitted. If You\n-   institute patent litigation against any entity (including a\n-   cross-claim or counterclaim in a lawsuit) alleging that the Work\n-   or a Contribution incorporated within the Work constitutes direct\n-   or contributory patent infringement, then any patent licenses\n-   granted to You under this License for that Work shall terminate\n-   as of the date such litigation is filed.\n-\n-4. Redistribution. You may reproduce and distribute copies of the\n-   Work or Derivative Works thereof in any medium, with or without\n-   modifications, and in Source or Object form, provided that You\n-   meet the following conditions:\n-\n-   (a) You must give any other recipients of the Work or\n-       Derivative Works a copy of this License; and\n-\n-   (b) You must cause any modified files to carry prominent notices\n-       stating that You changed the files; and\n-\n-   (c) You must retain, in the Source form of any Derivative Works\n-       that You distribute, all copyright, patent, trademark, and\n-       attribution notices from the Source form of the Work,\n-       excluding those notices that do not pertain to any part of\n-       the Derivative Works; and\n-\n-   (d) If the Work includes a \"NOTICE\" text file as part of its\n-       distribution, then any Derivative Works that You distribute must\n-       include a readable copy of the attribution notices contained\n-       within such NOTICE file, excluding those notices that do not\n-       pertain to any part of the Derivative Works, in at least one\n-       of the following places: within a NOTICE text file distributed\n-       as part of the Derivative Works; within the Source form or\n-       documentation, if provided along with the Derivative Works; or,\n-       within a display generated by the Derivative Works, if and\n-       wherever such third-party notices normally appear. The contents\n-       of the NOTICE file are for informational purposes only and\n-       do not modify the License. You may add Your own attribution\n-       notices within Derivative Works that You distribute, alongside\n-       or as an addendum to the NOTICE text from the Work, provided\n-       that such additional attribution notices cannot be construed\n-       as modifying the License.\n-\n-   You may add Your own copyright statement to Your modifications and\n-   may provide additional or different license terms and conditions\n-   for use, reproduction, or distribution of Your modifications, or\n-   for any such Derivative Works as a whole, provided Your use,\n-   reproduction, and distribution of the Work otherwise complies with\n-   the conditions stated in this License.\n-\n-5. Submission of Contributions. Unless You explicitly state otherwise,\n-   any Contribution intentionally submitted for inclusion in the Work\n-   by You to the Licensor shall be under the terms and conditions of\n-   this License, without any additional terms or conditions.\n-   Notwithstanding the above, nothing herein shall supersede or modify\n-   the terms of any separate license agreement you may have executed\n-   with Licensor regarding such Contributions.\n-\n-6. Trademarks. This License does not grant permission to use the trade\n-   names, trademarks, service marks, or product names of the Licensor,\n-   except as required for reasonable and customary use in describing the\n-   origin of the Work and reproducing the content of the NOTICE file.\n-\n-7. Disclaimer of Warranty. Unless required by applicable law or\n-   agreed to in writing, Licensor provides the Work (and each\n-   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n-   implied, including, without limitation, any warranties or conditions\n-   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n-   PARTICULAR PURPOSE. You are solely responsible for determining the\n-   appropriateness of using or redistributing the Work and assume any\n-   risks associated with Your exercise of permissions under this License.\n-\n-8. Limitation of Liability. In no event and under no legal theory,\n-   whether in tort (including negligence), contract, or otherwise,\n-   unless required by applicable law (such as deliberate and grossly\n-   negligent acts) or agreed to in writing, shall any Contributor be\n-   liable to You for damages, including any direct, indirect, special,\n-   incidental, or consequential damages of any character arising as a\n-   result of this License or out of the use or inability to use the\n-   Work (including but not limited to damages for loss of goodwill,\n-   work stoppage, computer failure or malfunction, or any and all\n-   other commercial damages or losses), even if such Contributor\n-   has been advised of the possibility of such damages.\n-\n-9. Accepting Warranty or Additional Liability. While redistributing\n-   the Work or Derivative Works thereof, You may choose to offer,\n-   and charge a fee for, acceptance of support, warranty, indemnity,\n-   or other liability obligations and/or rights consistent with this\n-   License. However, in accepting such obligations, You may act only\n-   on Your own behalf and on Your sole responsibility, not on behalf\n-   of any other Contributor, and only if You agree to indemnify,\n-   defend, and hold each Contributor harmless for any liability\n-   incurred by, or claims asserted against, such Contributor by reason\n-   of your accepting any such warranty or additional liability.\n-\n-END OF TERMS AND CONDITIONS\n-\n-APPENDIX: How to apply the Apache License to your work.\n-\n-   To apply the Apache License to your work, attach the following\n-   boilerplate notice, with the fields enclosed by brackets \"[]\"\n-   replaced with your own identifying information. (Don't include\n-   the brackets!)  The text should be enclosed in the appropriate\n-   comment syntax for the file format. We also recommend that a\n-   file or class name and description of purpose be included on the\n-   same \"printed page\" as the copyright notice for easier\n-   identification within third-party archives.\n-\n-Copyright [yyyy] [name of copyright owner]\n-\n-Licensed under the Apache License, Version 2.0 (the \"License\");\n-you may not use this file except in compliance with the License.\n-You may obtain a copy of the License at\n-\n-\thttp://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing, software\n-distributed under the License is distributed on an \"AS IS\" BASIS,\n-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-See the License for the specific language governing permissions and\n-limitations under the License."}, {"sha": "39e0ed6602151f235148e6c08413aa7eda5b9038", "filename": "src/vendor/cmake/LICENSE-MIT", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2FLICENSE-MIT", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2FLICENSE-MIT", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fcmake%2FLICENSE-MIT?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,25 +0,0 @@\n-Copyright (c) 2014 Alex Crichton\n-\n-Permission is hereby granted, free of charge, to any\n-person obtaining a copy of this software and associated\n-documentation files (the \"Software\"), to deal in the\n-Software without restriction, including without\n-limitation the rights to use, copy, modify, merge,\n-publish, distribute, sublicense, and/or sell copies of\n-the Software, and to permit persons to whom the Software\n-is furnished to do so, subject to the following\n-conditions:\n-\n-The above copyright notice and this permission notice\n-shall be included in all copies or substantial portions\n-of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n-ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n-TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n-PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\n-SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n-CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n-OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\n-IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n-DEALINGS IN THE SOFTWARE."}, {"sha": "8b2586eb01e25ed43220fe0646fb6904eb1bcacc", "filename": "src/vendor/cmake/README.md", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fcmake%2FREADME.md?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,22 +0,0 @@\n-# cmake\n-\n-[![Build Status](https://travis-ci.org/alexcrichton/cmake-rs.svg?branch=master)](https://travis-ci.org/alexcrichton/cmake-rs)\n-\n-[Documentation](http://alexcrichton.com/cmake-rs)\n-\n-A build dependency for running the `cmake` build tool to compile a native\n-library.\n-\n-```toml\n-# Cargo.toml\n-[build-dependencies]\n-cmake = \"0.2\"\n-```\n-\n-# License\n-\n-`cmake-rs` is primarily distributed under the terms of both the MIT license and\n-the Apache License (Version 2.0), with portions covered by various BSD-like\n-licenses.\n-\n-See LICENSE-APACHE, and LICENSE-MIT for details."}, {"sha": "3607d29026a0361211bc683098ae7266c875c38b", "filename": "src/vendor/cmake/src/lib.rs", "status": "removed", "additions": 0, "deletions": 522, "changes": 522, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fcmake%2Fsrc%2Flib.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,522 +0,0 @@\n-//! A build dependency for running `cmake` to build a native library\n-//!\n-//! This crate provides some necessary boilerplate and shim support for running\n-//! the system `cmake` command to build a native library. It will add\n-//! appropriate cflags for building code to link into Rust, handle cross\n-//! compilation, and use the necessary generator for the platform being\n-//! targeted.\n-//!\n-//! The builder-style configuration allows for various variables and such to be\n-//! passed down into the build as well.\n-//!\n-//! ## Installation\n-//!\n-//! Add this to your `Cargo.toml`:\n-//!\n-//! ```toml\n-//! [build-dependencies]\n-//! cmake = \"0.1\"\n-//! ```\n-//!\n-//! ## Examples\n-//!\n-//! ```no_run\n-//! use cmake;\n-//!\n-//! // Builds the project in the directory located in `libfoo`, installing it\n-//! // into $OUT_DIR\n-//! let dst = cmake::build(\"libfoo\");\n-//!\n-//! println!(\"cargo:rustc-link-search=native={}\", dst.display());\n-//! println!(\"cargo:rustc-link-lib=static=foo\");\n-//! ```\n-//!\n-//! ```no_run\n-//! use cmake::Config;\n-//!\n-//! let dst = Config::new(\"libfoo\")\n-//!                  .define(\"FOO\", \"BAR\")\n-//!                  .cflag(\"-foo\")\n-//!                  .build();\n-//! println!(\"cargo:rustc-link-search=native={}\", dst.display());\n-//! println!(\"cargo:rustc-link-lib=static=foo\");\n-//! ```\n-\n-#![deny(missing_docs)]\n-\n-extern crate gcc;\n-\n-use std::env;\n-use std::ffi::{OsString, OsStr};\n-use std::fs::{self, File};\n-use std::io::ErrorKind;\n-use std::io::prelude::*;\n-use std::path::{Path, PathBuf};\n-use std::process::Command;\n-\n-#[cfg(windows)]\n-mod registry;\n-\n-/// Builder style configuration for a pending CMake build.\n-pub struct Config {\n-    path: PathBuf,\n-    generator: Option<OsString>,\n-    cflags: OsString,\n-    cxxflags: OsString,\n-    defines: Vec<(OsString, OsString)>,\n-    deps: Vec<String>,\n-    target: Option<String>,\n-    host: Option<String>,\n-    out_dir: Option<PathBuf>,\n-    profile: Option<String>,\n-    build_args: Vec<OsString>,\n-    cmake_target: Option<String>,\n-}\n-\n-/// Builds the native library rooted at `path` with the default cmake options.\n-/// This will return the directory in which the library was installed.\n-///\n-/// # Examples\n-///\n-/// ```no_run\n-/// use cmake;\n-///\n-/// // Builds the project in the directory located in `libfoo`, installing it\n-/// // into $OUT_DIR\n-/// let dst = cmake::build(\"libfoo\");\n-///\n-/// println!(\"cargo:rustc-link-search=native={}\", dst.display());\n-/// println!(\"cargo:rustc-link-lib=static=foo\");\n-/// ```\n-///\n-pub fn build<P: AsRef<Path>>(path: P) -> PathBuf {\n-    Config::new(path.as_ref()).build()\n-}\n-\n-impl Config {\n-    /// Creates a new blank set of configuration to build the project specified\n-    /// at the path `path`.\n-    pub fn new<P: AsRef<Path>>(path: P) -> Config {\n-        Config {\n-            path: env::current_dir().unwrap().join(path),\n-            generator: None,\n-            cflags: OsString::new(),\n-            cxxflags: OsString::new(),\n-            defines: Vec::new(),\n-            deps: Vec::new(),\n-            profile: None,\n-            out_dir: None,\n-            target: None,\n-            host: None,\n-            build_args: Vec::new(),\n-            cmake_target: None,\n-        }\n-    }\n-\n-    /// Sets the build-tool generator (`-G`) for this compilation.\n-    pub fn generator<T: AsRef<OsStr>>(&mut self, generator: T) -> &mut Config {\n-        self.generator = Some(generator.as_ref().to_owned());\n-        self\n-    }\n-\n-    /// Adds a custom flag to pass down to the C compiler, supplementing those\n-    /// that this library already passes.\n-    pub fn cflag<P: AsRef<OsStr>>(&mut self, flag: P) -> &mut Config {\n-        self.cflags.push(\" \");\n-        self.cflags.push(flag.as_ref());\n-        self\n-    }\n-\n-    /// Adds a custom flag to pass down to the C++ compiler, supplementing those\n-    /// that this library already passes.\n-    pub fn cxxflag<P: AsRef<OsStr>>(&mut self, flag: P) -> &mut Config {\n-        self.cxxflags.push(\" \");\n-        self.cxxflags.push(flag.as_ref());\n-        self\n-    }\n-\n-    /// Adds a new `-D` flag to pass to cmake during the generation step.\n-    pub fn define<K, V>(&mut self, k: K, v: V) -> &mut Config\n-        where K: AsRef<OsStr>, V: AsRef<OsStr>\n-    {\n-        self.defines.push((k.as_ref().to_owned(), v.as_ref().to_owned()));\n-        self\n-    }\n-\n-    /// Registers a dependency for this compilation on the native library built\n-    /// by Cargo previously.\n-    ///\n-    /// This registration will modify the `CMAKE_PREFIX_PATH` environment\n-    /// variable for the build system generation step.\n-    pub fn register_dep(&mut self, dep: &str) -> &mut Config {\n-        self.deps.push(dep.to_string());\n-        self\n-    }\n-\n-    /// Sets the target triple for this compilation.\n-    ///\n-    /// This is automatically scraped from `$TARGET` which is set for Cargo\n-    /// build scripts so it's not necessary to call this from a build script.\n-    pub fn target(&mut self, target: &str) -> &mut Config {\n-        self.target = Some(target.to_string());\n-        self\n-    }\n-\n-    /// Sets the host triple for this compilation.\n-    ///\n-    /// This is automatically scraped from `$HOST` which is set for Cargo\n-    /// build scripts so it's not necessary to call this from a build script.\n-    pub fn host(&mut self, host: &str) -> &mut Config {\n-        self.host = Some(host.to_string());\n-        self\n-    }\n-\n-    /// Sets the output directory for this compilation.\n-    ///\n-    /// This is automatically scraped from `$OUT_DIR` which is set for Cargo\n-    /// build scripts so it's not necessary to call this from a build script.\n-    pub fn out_dir<P: AsRef<Path>>(&mut self, out: P) -> &mut Config {\n-        self.out_dir = Some(out.as_ref().to_path_buf());\n-        self\n-    }\n-\n-    /// Sets the profile for this compilation.\n-    ///\n-    /// This is automatically scraped from `$PROFILE` which is set for Cargo\n-    /// build scripts so it's not necessary to call this from a build script.\n-    pub fn profile(&mut self, profile: &str) -> &mut Config {\n-        self.profile = Some(profile.to_string());\n-        self\n-    }\n-\n-    /// Add an argument to the final `cmake` build step\n-    pub fn build_arg<A: AsRef<OsStr>>(&mut self, arg: A) -> &mut Config {\n-        self.build_args.push(arg.as_ref().to_owned());\n-        self\n-    }\n-\n-    /// Sets the build target for the final `cmake` build step, this will\n-    /// default to \"install\" if not specified.\n-    pub fn build_target(&mut self, target: &str) -> &mut Config {\n-        self.cmake_target = Some(target.to_string());\n-        self\n-    }\n-\n-    /// Run this configuration, compiling the library with all the configured\n-    /// options.\n-    ///\n-    /// This will run both the build system generator command as well as the\n-    /// command to build the library.\n-    pub fn build(&mut self) -> PathBuf {\n-        let target = self.target.clone().unwrap_or_else(|| {\n-            getenv_unwrap(\"TARGET\")\n-        });\n-        let host = self.host.clone().unwrap_or_else(|| {\n-            getenv_unwrap(\"HOST\")\n-        });\n-        let msvc = target.contains(\"msvc\");\n-        let c_compiler = gcc::Config::new().cargo_metadata(false)\n-                                         .opt_level(0)\n-                                         .debug(false)\n-                                         .target(&target)\n-                                         .host(&host)\n-                                         .get_compiler();\n-        let cxx_compiler = gcc::Config::new().cargo_metadata(false)\n-                                         .cpp(true)\n-                                         .opt_level(0)\n-                                         .debug(false)\n-                                         .target(&target)\n-                                         .host(&host)\n-                                         .get_compiler();\n-\n-        let dst = self.out_dir.clone().unwrap_or_else(|| {\n-            PathBuf::from(getenv_unwrap(\"OUT_DIR\"))\n-        });\n-        let build = dst.join(\"build\");\n-        self.maybe_clear(&build);\n-        let _ = fs::create_dir(&build);\n-\n-        // Add all our dependencies to our cmake paths\n-        let mut cmake_prefix_path = Vec::new();\n-        for dep in &self.deps {\n-            if let Some(root) = env::var_os(&format!(\"DEP_{}_ROOT\", dep)) {\n-                cmake_prefix_path.push(PathBuf::from(root));\n-            }\n-        }\n-        let system_prefix = env::var_os(\"CMAKE_PREFIX_PATH\")\n-                                .unwrap_or(OsString::new());\n-        cmake_prefix_path.extend(env::split_paths(&system_prefix)\n-                                     .map(|s| s.to_owned()));\n-        let cmake_prefix_path = env::join_paths(&cmake_prefix_path).unwrap();\n-\n-        // Build up the first cmake command to build the build system.\n-        let mut cmd = Command::new(\"cmake\");\n-        cmd.arg(&self.path)\n-           .current_dir(&build);\n-        if target.contains(\"windows-gnu\") {\n-            if host.contains(\"windows\") {\n-                // On MinGW we need to coerce cmake to not generate a visual\n-                // studio build system but instead use makefiles that MinGW can\n-                // use to build.\n-                if self.generator.is_none() {\n-                    cmd.arg(\"-G\").arg(\"MSYS Makefiles\");\n-                }\n-            } else {\n-                // If we're cross compiling onto windows, then set some\n-                // variables which will hopefully get things to succeed. Some\n-                // systems may need the `windres` or `dlltool` variables set, so\n-                // set them if possible.\n-                if !self.defined(\"CMAKE_SYSTEM_NAME\") {\n-                    cmd.arg(\"-DCMAKE_SYSTEM_NAME=Windows\");\n-                }\n-                if !self.defined(\"CMAKE_RC_COMPILER\") {\n-                    let exe = find_exe(c_compiler.path());\n-                    if let Some(name) = exe.file_name().unwrap().to_str() {\n-                        let name = name.replace(\"gcc\", \"windres\");\n-                        let windres = exe.with_file_name(name);\n-                        if windres.is_file() {\n-                            let mut arg = OsString::from(\"-DCMAKE_RC_COMPILER=\");\n-                            arg.push(&windres);\n-                            cmd.arg(arg);\n-                        }\n-                    }\n-                }\n-            }\n-        } else if msvc {\n-            // If we're on MSVC we need to be sure to use the right generator or\n-            // otherwise we won't get 32/64 bit correct automatically.\n-            if self.generator.is_none() {\n-                cmd.arg(\"-G\").arg(self.visual_studio_generator(&target));\n-            }\n-        }\n-        if let Some(ref generator) = self.generator {\n-            cmd.arg(\"-G\").arg(generator);\n-        }\n-        let profile = self.profile.clone().unwrap_or_else(|| {\n-            match &getenv_unwrap(\"PROFILE\")[..] {\n-                \"bench\" | \"release\" => \"Release\",\n-                // currently we need to always use the same CRT for MSVC\n-                _ if msvc => \"Release\",\n-                _ => \"Debug\",\n-            }.to_string()\n-        });\n-        for &(ref k, ref v) in &self.defines {\n-            let mut os = OsString::from(\"-D\");\n-            os.push(k);\n-            os.push(\"=\");\n-            os.push(v);\n-            cmd.arg(os);\n-        }\n-\n-        if !self.defined(\"CMAKE_INSTALL_PREFIX\") {\n-            let mut dstflag = OsString::from(\"-DCMAKE_INSTALL_PREFIX=\");\n-            dstflag.push(&dst);\n-            cmd.arg(dstflag);\n-        }\n-\n-        {\n-            let mut set_compiler = |kind: &str,\n-                                    compiler: &gcc::Tool,\n-                                    extra: &OsString| {\n-                let flag_var = format!(\"CMAKE_{}_FLAGS\", kind);\n-                let tool_var = format!(\"CMAKE_{}_COMPILER\", kind);\n-                if !self.defined(&flag_var) {\n-                    let mut flagsflag = OsString::from(\"-D\");\n-                    flagsflag.push(&flag_var);\n-                    flagsflag.push(\"=\");\n-                    flagsflag.push(extra);\n-                    for arg in compiler.args() {\n-                        flagsflag.push(\" \");\n-                        flagsflag.push(arg);\n-                    }\n-                    cmd.arg(flagsflag);\n-                }\n-\n-                // Apparently cmake likes to have an absolute path to the\n-                // compiler as otherwise it sometimes thinks that this variable\n-                // changed as it thinks the found compiler, /usr/bin/cc,\n-                // differs from the specified compiler, cc. Not entirely sure\n-                // what's up, but at least this means cmake doesn't get\n-                // confused?\n-                //\n-                // Also don't specify this on Windows as it's not needed for\n-                // MSVC and for MinGW it doesn't really vary.\n-                if !self.defined(\"CMAKE_TOOLCHAIN_FILE\")\n-                   && !self.defined(&tool_var)\n-                   && env::consts::FAMILY != \"windows\" {\n-                    let mut ccompiler = OsString::from(\"-D\");\n-                    ccompiler.push(&tool_var);\n-                    ccompiler.push(\"=\");\n-                    ccompiler.push(find_exe(compiler.path()));\n-                    cmd.arg(ccompiler);\n-                }\n-            };\n-\n-            set_compiler(\"C\", &c_compiler, &self.cflags);\n-            set_compiler(\"CXX\", &cxx_compiler, &self.cxxflags);\n-        }\n-\n-        if !self.defined(\"CMAKE_BUILD_TYPE\") {\n-            cmd.arg(&format!(\"-DCMAKE_BUILD_TYPE={}\", profile));\n-        }\n-\n-        if !self.defined(\"CMAKE_TOOLCHAIN_FILE\") {\n-            if let Ok(s) = env::var(\"CMAKE_TOOLCHAIN_FILE\") {\n-                cmd.arg(&format!(\"-DCMAKE_TOOLCHAIN_FILE={}\", s));\n-            }\n-        }\n-\n-        run(cmd.env(\"CMAKE_PREFIX_PATH\", cmake_prefix_path), \"cmake\");\n-\n-        let mut parallel_args = Vec::new();\n-        if fs::metadata(&dst.join(\"build/Makefile\")).is_ok() {\n-            if let Ok(s) = env::var(\"NUM_JOBS\") {\n-                parallel_args.push(format!(\"-j{}\", s));\n-            }\n-        }\n-\n-        // And build!\n-        let target = self.cmake_target.clone().unwrap_or(\"install\".to_string());\n-        run(Command::new(\"cmake\")\n-                    .arg(\"--build\").arg(\".\")\n-                    .arg(\"--target\").arg(target)\n-                    .arg(\"--config\").arg(profile)\n-                    .arg(\"--\").args(&self.build_args)\n-                    .args(&parallel_args)\n-                    .current_dir(&build), \"cmake\");\n-\n-        println!(\"cargo:root={}\", dst.display());\n-        return dst\n-    }\n-\n-    fn visual_studio_generator(&self, target: &str) -> String {\n-        let base = match std::env::var(\"VisualStudioVersion\") {\n-            Ok(version) => {\n-                match &version[..] {\n-                    \"15.0\" => \"Visual Studio 15\",\n-                    \"14.0\" => \"Visual Studio 14 2015\",\n-                    \"12.0\" => \"Visual Studio 12 2013\",\n-                    vers => panic!(\"\\n\\n\\\n-                        unsupported or unknown VisualStudio version: {}\\n\\\n-                        if another version is installed consider running \\\n-                        the appropriate vcvars script before building this \\\n-                        crate\\n\\\n-                    \", vers),\n-                }\n-            }\n-            _ => {\n-                // Check for the presense of a specific registry key\n-                // that indicates visual studio is installed.\n-                if self.has_msbuild_version(\"15.0\") {\n-                    \"Visual Studio 15\"\n-                } else if self.has_msbuild_version(\"14.0\") {\n-                    \"Visual Studio 14 2015\"\n-                } else if self.has_msbuild_version(\"12.0\") {\n-                    \"Visual Studio 12 2013\"\n-                } else {\n-                    panic!(\"\\n\\n\\\n-                        couldn't determine visual studio generator\\n\\\n-                        if VisualStudio is installed, however, consider \\\n-                        running the appropriate vcvars script before building \\\n-                        this crate\\n\\\n-                    \");\n-                }\n-            }\n-        };\n-\n-        if target.contains(\"i686\") {\n-            base.to_string()\n-        } else if target.contains(\"x86_64\") {\n-            format!(\"{} Win64\", base)\n-        } else {\n-            panic!(\"unsupported msvc target: {}\", target);\n-        }\n-    }\n-\n-    #[cfg(not(windows))]\n-    fn has_msbuild_version(&self, _version: &str) -> bool {\n-        false\n-    }\n-\n-    #[cfg(windows)]\n-    fn has_msbuild_version(&self, version: &str) -> bool {\n-        let key = format!(\"SOFTWARE\\\\Microsoft\\\\MSBuild\\\\ToolsVersions\\\\{}\",\n-                          version);\n-        registry::LOCAL_MACHINE.open(key.as_ref()).is_ok()\n-    }\n-\n-    fn defined(&self, var: &str) -> bool {\n-        self.defines.iter().any(|&(ref a, _)| a == var)\n-    }\n-\n-    // If a cmake project has previously been built (e.g. CMakeCache.txt already\n-    // exists), then cmake will choke if the source directory for the original\n-    // project being built has changed. Detect this situation through the\n-    // `CMAKE_HOME_DIRECTORY` variable that cmake emits and if it doesn't match\n-    // we blow away the build directory and start from scratch (the recommended\n-    // solution apparently [1]).\n-    //\n-    // [1]: https://cmake.org/pipermail/cmake/2012-August/051545.html\n-    fn maybe_clear(&self, dir: &Path) {\n-        // CMake will apparently store canonicalized paths which normally\n-        // isn't relevant to us but we canonicalize it here to ensure\n-        // we're both checking the same thing.\n-        let path = fs::canonicalize(&self.path).unwrap_or(self.path.clone());\n-        let src = match path.to_str() {\n-            Some(src) => src,\n-            None => return,\n-        };\n-        let mut f = match File::open(dir.join(\"CMakeCache.txt\")) {\n-            Ok(f) => f,\n-            Err(..) => return,\n-        };\n-        let mut u8contents = Vec::new();\n-        match f.read_to_end(&mut u8contents) {\n-            Ok(f) => f,\n-            Err(..) => return,\n-        };\n-        let contents = String::from_utf8_lossy(&u8contents);\n-        drop(f);\n-        for line in contents.lines() {\n-            if line.contains(\"CMAKE_HOME_DIRECTORY\") && !line.contains(src) {\n-                println!(\"detected home dir change, cleaning out entire build \\\n-                          directory\");\n-                fs::remove_dir_all(dir).unwrap();\n-                break\n-            }\n-        }\n-    }\n-}\n-\n-fn run(cmd: &mut Command, program: &str) {\n-    println!(\"running: {:?}\", cmd);\n-    let status = match cmd.status() {\n-        Ok(status) => status,\n-        Err(ref e) if e.kind() == ErrorKind::NotFound => {\n-            fail(&format!(\"failed to execute command: {}\\nis `{}` not installed?\",\n-                          e, program));\n-        }\n-        Err(e) => fail(&format!(\"failed to execute command: {}\", e)),\n-    };\n-    if !status.success() {\n-        fail(&format!(\"command did not execute successfully, got: {}\", status));\n-    }\n-}\n-\n-fn find_exe(path: &Path) -> PathBuf {\n-    env::split_paths(&env::var_os(\"PATH\").unwrap_or(OsString::new()))\n-        .map(|p| p.join(path))\n-        .find(|p| fs::metadata(p).is_ok())\n-        .unwrap_or(path.to_owned())\n-}\n-\n-fn getenv_unwrap(v: &str) -> String {\n-    match env::var(v) {\n-        Ok(s) => s,\n-        Err(..) => fail(&format!(\"environment variable `{}` not defined\", v)),\n-    }\n-}\n-\n-fn fail(s: &str) -> ! {\n-    panic!(\"\\n{}\\n\\nbuild script failed, must exit now\", s)\n-}"}, {"sha": "8819b094151e779465f71caeb551ef0c01a580ca", "filename": "src/vendor/cmake/src/registry.rs", "status": "removed", "additions": 0, "deletions": 84, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2Fsrc%2Fregistry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fcmake%2Fsrc%2Fregistry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fcmake%2Fsrc%2Fregistry.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,84 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-use std::ffi::OsStr;\n-use std::io;\n-use std::os::raw;\n-use std::os::windows::prelude::*;\n-\n-pub struct RegistryKey(Repr);\n-\n-type HKEY = *mut u8;\n-type DWORD = u32;\n-type LPDWORD = *mut DWORD;\n-type LPCWSTR = *const u16;\n-type LPWSTR = *mut u16;\n-type LONG = raw::c_long;\n-type PHKEY = *mut HKEY;\n-type PFILETIME = *mut u8;\n-type LPBYTE = *mut u8;\n-type REGSAM = u32;\n-\n-const ERROR_SUCCESS: DWORD = 0;\n-const HKEY_LOCAL_MACHINE: HKEY = 0x80000002 as HKEY;\n-const KEY_READ: DWORD = 0x20019;\n-const KEY_WOW64_32KEY: DWORD = 0x200;\n-\n-#[link(name = \"advapi32\")]\n-extern \"system\" {\n-    fn RegOpenKeyExW(key: HKEY,\n-                     lpSubKey: LPCWSTR,\n-                     ulOptions: DWORD,\n-                     samDesired: REGSAM,\n-                     phkResult: PHKEY) -> LONG;\n-    fn RegCloseKey(hKey: HKEY) -> LONG;\n-}\n-\n-struct OwnedKey(HKEY);\n-\n-enum Repr {\n-    Const(HKEY),\n-    Owned(OwnedKey),\n-}\n-\n-unsafe impl Sync for Repr {}\n-unsafe impl Send for Repr {}\n-\n-pub static LOCAL_MACHINE: RegistryKey =\n-    RegistryKey(Repr::Const(HKEY_LOCAL_MACHINE));\n-\n-impl RegistryKey {\n-    fn raw(&self) -> HKEY {\n-        match self.0 {\n-            Repr::Const(val) => val,\n-            Repr::Owned(ref val) => val.0,\n-        }\n-    }\n-\n-    pub fn open(&self, key: &OsStr) -> io::Result<RegistryKey> {\n-        let key = key.encode_wide().chain(Some(0)).collect::<Vec<_>>();\n-        let mut ret = 0 as *mut _;\n-        let err = unsafe {\n-            RegOpenKeyExW(self.raw(), key.as_ptr(), 0,\n-                          KEY_READ | KEY_WOW64_32KEY, &mut ret)\n-        };\n-        if err == ERROR_SUCCESS as LONG {\n-            Ok(RegistryKey(Repr::Owned(OwnedKey(ret))))\n-        } else {\n-            Err(io::Error::from_raw_os_error(err as i32))\n-        }\n-    }\n-}\n-\n-impl Drop for OwnedKey {\n-    fn drop(&mut self) {\n-        unsafe { RegCloseKey(self.0); }\n-    }\n-}"}, {"sha": "e3d83501ad079311dac30f019ffa4e53c5485af2", "filename": "src/vendor/env_logger/.cargo-checksum.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fenv_logger%2F.cargo-checksum.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fenv_logger%2F.cargo-checksum.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fenv_logger%2F.cargo-checksum.json?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1 +0,0 @@\n-{\"files\":{\".cargo-ok\":\"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\"Cargo.toml\":\"4af0565a97a599bba727315d9aff1f57a350dcfee7d9f00986c851e54a24b4ca\",\"src/lib.rs\":\"484cec14a5f18a25b71d7b1842f7b184f0530165021b71b36dde9fc57b7fc15a\",\"src/regex.rs\":\"d8e2a6958d4ed8084867063aae4b5c77ffc5d271dc2e17909d56c5a5e1552034\",\"src/string.rs\":\"26ede9ab41a2673c3ad6001bc1802c005ce9a4f190f55860a24aa66b6b71bbc7\",\"tests/regexp_filter.rs\":\"a3f9c01623e90e54b247a62c53b25caf5f502d054f28c0bdf92abbea486a95b5\"},\"package\":\"15abd780e45b3ea4f76b4e9a26ff4843258dd8a3eed2775a0e7368c2e7936c2f\"}\n\\ No newline at end of file"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/vendor/env_logger/.cargo-ok", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fenv_logger%2F.cargo-ok", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fenv_logger%2F.cargo-ok", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fenv_logger%2F.cargo-ok?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "5efadbf0d62938ea0a29d3776529f4124c35e77f", "filename": "src/vendor/env_logger/Cargo.toml", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fenv_logger%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fenv_logger%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fenv_logger%2FCargo.toml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,23 +0,0 @@\n-[package]\n-name = \"env_logger\"\n-version = \"0.3.5\"\n-authors = [\"The Rust Project Developers\"]\n-license = \"MIT/Apache-2.0\"\n-repository = \"https://github.com/rust-lang/log\"\n-documentation = \"http://doc.rust-lang.org/log/env_logger\"\n-homepage = \"https://github.com/rust-lang/log\"\n-description = \"\"\"\n-An logging implementation for `log` which is configured via an environment\n-variable.\n-\"\"\"\n-\n-[dependencies]\n-log = { version = \"0.3\", path = \"..\" }\n-regex = { version = \"0.1\", optional = true }\n-\n-[[test]]\n-name = \"regexp_filter\"\n-harness = false\n-\n-[features]\n-default = [\"regex\"]"}, {"sha": "9105c19c65cd4a162ea86ac3386ceb11b0484aae", "filename": "src/vendor/env_logger/src/lib.rs", "status": "removed", "additions": 0, "deletions": 623, "changes": 623, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fenv_logger%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fenv_logger%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fenv_logger%2Fsrc%2Flib.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,623 +0,0 @@\n-// Copyright 2014-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//! A logger configured via an environment variable which writes to standard\n-//! error.\n-//!\n-//! ## Example\n-//!\n-//! ```\n-//! #[macro_use] extern crate log;\n-//! extern crate env_logger;\n-//!\n-//! use log::LogLevel;\n-//!\n-//! fn main() {\n-//!     env_logger::init().unwrap();\n-//!\n-//!     debug!(\"this is a debug {}\", \"message\");\n-//!     error!(\"this is printed by default\");\n-//!\n-//!     if log_enabled!(LogLevel::Info) {\n-//!         let x = 3 * 4; // expensive computation\n-//!         info!(\"the answer was: {}\", x);\n-//!     }\n-//! }\n-//! ```\n-//!\n-//! Assumes the binary is `main`:\n-//!\n-//! ```{.bash}\n-//! $ RUST_LOG=error ./main\n-//! ERROR:main: this is printed by default\n-//! ```\n-//!\n-//! ```{.bash}\n-//! $ RUST_LOG=info ./main\n-//! ERROR:main: this is printed by default\n-//! INFO:main: the answer was: 12\n-//! ```\n-//!\n-//! ```{.bash}\n-//! $ RUST_LOG=debug ./main\n-//! DEBUG:main: this is a debug message\n-//! ERROR:main: this is printed by default\n-//! INFO:main: the answer was: 12\n-//! ```\n-//!\n-//! You can also set the log level on a per module basis:\n-//!\n-//! ```{.bash}\n-//! $ RUST_LOG=main=info ./main\n-//! ERROR:main: this is printed by default\n-//! INFO:main: the answer was: 12\n-//! ```\n-//!\n-//! And enable all logging:\n-//!\n-//! ```{.bash}\n-//! $ RUST_LOG=main ./main\n-//! DEBUG:main: this is a debug message\n-//! ERROR:main: this is printed by default\n-//! INFO:main: the answer was: 12\n-//! ```\n-//!\n-//! See the documentation for the log crate for more information about its API.\n-//!\n-//! ## Enabling logging\n-//!\n-//! Log levels are controlled on a per-module basis, and by default all logging\n-//! is disabled except for `error!`. Logging is controlled via the `RUST_LOG`\n-//! environment variable. The value of this environment variable is a\n-//! comma-separated list of logging directives. A logging directive is of the\n-//! form:\n-//!\n-//! ```text\n-//! path::to::module=log_level\n-//! ```\n-//!\n-//! The path to the module is rooted in the name of the crate it was compiled\n-//! for, so if your program is contained in a file `hello.rs`, for example, to\n-//! turn on logging for this file you would use a value of `RUST_LOG=hello`.\n-//! Furthermore, this path is a prefix-search, so all modules nested in the\n-//! specified module will also have logging enabled.\n-//!\n-//! The actual `log_level` is optional to specify. If omitted, all logging will\n-//! be enabled. If specified, it must be one of the strings `debug`, `error`,\n-//! `info`, `warn`, or `trace`.\n-//!\n-//! As the log level for a module is optional, the module to enable logging for\n-//! is also optional. If only a `log_level` is provided, then the global log\n-//! level for all modules is set to this value.\n-//!\n-//! Some examples of valid values of `RUST_LOG` are:\n-//!\n-//! * `hello` turns on all logging for the 'hello' module\n-//! * `info` turns on all info logging\n-//! * `hello=debug` turns on debug logging for 'hello'\n-//! * `hello,std::option` turns on hello, and std's option logging\n-//! * `error,hello=warn` turn on global error logging and also warn for hello\n-//!\n-//! ## Filtering results\n-//!\n-//! A RUST_LOG directive may include a regex filter. The syntax is to append `/`\n-//! followed by a regex. Each message is checked against the regex, and is only\n-//! logged if it matches. Note that the matching is done after formatting the\n-//! log string but before adding any logging meta-data. There is a single filter\n-//! for all modules.\n-//!\n-//! Some examples:\n-//!\n-//! * `hello/foo` turns on all logging for the 'hello' module where the log\n-//!   message includes 'foo'.\n-//! * `info/f.o` turns on all info logging where the log message includes 'foo',\n-//!   'f1o', 'fao', etc.\n-//! * `hello=debug/foo*foo` turns on debug logging for 'hello' where the log\n-//!   message includes 'foofoo' or 'fofoo' or 'fooooooofoo', etc.\n-//! * `error,hello=warn/[0-9] scopes` turn on global error logging and also\n-//!   warn for hello. In both cases the log message must include a single digit\n-//!   number followed by 'scopes'.\n-\n-#![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/env_logger/\")]\n-#![cfg_attr(test, deny(warnings))]\n-\n-extern crate log;\n-\n-use std::env;\n-use std::io::prelude::*;\n-use std::io;\n-use std::mem;\n-\n-use log::{Log, LogLevel, LogLevelFilter, LogRecord, SetLoggerError, LogMetadata};\n-\n-#[cfg(feature = \"regex\")]\n-#[path = \"regex.rs\"]\n-mod filter;\n-\n-#[cfg(not(feature = \"regex\"))]\n-#[path = \"string.rs\"]\n-mod filter;\n-\n-/// The logger.\n-pub struct Logger {\n-    directives: Vec<LogDirective>,\n-    filter: Option<filter::Filter>,\n-    format: Box<Fn(&LogRecord) -> String + Sync + Send>,\n-}\n-\n-/// LogBuilder acts as builder for initializing the Logger.\n-/// It can be used to customize the log format, change the enviromental variable used\n-/// to provide the logging directives and also set the default log level filter.\n-///\n-/// ## Example\n-///\n-/// ```\n-/// #[macro_use]\n-/// extern crate log;\n-/// extern crate env_logger;\n-///\n-/// use std::env;\n-/// use log::{LogRecord, LogLevelFilter};\n-/// use env_logger::LogBuilder;\n-///\n-/// fn main() {\n-///     let format = |record: &LogRecord| {\n-///         format!(\"{} - {}\", record.level(), record.args())\n-///     };\n-///\n-///     let mut builder = LogBuilder::new();\n-///     builder.format(format).filter(None, LogLevelFilter::Info);\n-///\n-///     if env::var(\"RUST_LOG\").is_ok() {\n-///        builder.parse(&env::var(\"RUST_LOG\").unwrap());\n-///     }\n-///\n-///     builder.init().unwrap();\n-///\n-///     error!(\"error message\");\n-///     info!(\"info message\");\n-/// }\n-/// ```\n-pub struct LogBuilder {\n-    directives: Vec<LogDirective>,\n-    filter: Option<filter::Filter>,\n-    format: Box<Fn(&LogRecord) -> String + Sync + Send>,\n-}\n-\n-impl LogBuilder {\n-    /// Initializes the log builder with defaults\n-    pub fn new() -> LogBuilder {\n-        LogBuilder {\n-            directives: Vec::new(),\n-            filter: None,\n-            format: Box::new(|record: &LogRecord| {\n-                format!(\"{}:{}: {}\", record.level(),\n-                        record.location().module_path(), record.args())\n-            }),\n-        }\n-    }\n-\n-    /// Adds filters to the logger\n-    ///\n-    /// The given module (if any) will log at most the specified level provided.\n-    /// If no module is provided then the filter will apply to all log messages.\n-    pub fn filter(&mut self,\n-                  module: Option<&str>,\n-                  level: LogLevelFilter) -> &mut Self {\n-        self.directives.push(LogDirective {\n-            name: module.map(|s| s.to_string()),\n-            level: level,\n-        });\n-        self\n-    }\n-\n-    /// Sets the format function for formatting the log output.\n-    ///\n-    /// This function is called on each record logged to produce a string which\n-    /// is actually printed out.\n-    pub fn format<F: 'static>(&mut self, format: F) -> &mut Self\n-        where F: Fn(&LogRecord) -> String + Sync + Send\n-    {\n-        self.format = Box::new(format);\n-        self\n-    }\n-\n-    /// Parses the directives string in the same form as the RUST_LOG\n-    /// environment variable.\n-    ///\n-    /// See the module documentation for more details.\n-    pub fn parse(&mut self, filters: &str) -> &mut Self {\n-        let (directives, filter) = parse_logging_spec(filters);\n-\n-        self.filter = filter;\n-\n-        for directive in directives {\n-            self.directives.push(directive);\n-        }\n-        self\n-    }\n-\n-    /// Initializes the global logger with an env logger.\n-    ///\n-    /// This should be called early in the execution of a Rust program, and the\n-    /// global logger may only be initialized once. Future initialization\n-    /// attempts will return an error.\n-    pub fn init(&mut self) -> Result<(), SetLoggerError> {\n-        log::set_logger(|max_level| {\n-            let logger = self.build();\n-            max_level.set(logger.filter());\n-            Box::new(logger)\n-        })\n-    }\n-\n-    /// Build an env logger.\n-    pub fn build(&mut self) -> Logger {\n-        if self.directives.is_empty() {\n-            // Adds the default filter if none exist\n-            self.directives.push(LogDirective {\n-                name: None,\n-                level: LogLevelFilter::Error,\n-            });\n-        } else {\n-            // Sort the directives by length of their name, this allows a\n-            // little more efficient lookup at runtime.\n-            self.directives.sort_by(|a, b| {\n-                let alen = a.name.as_ref().map(|a| a.len()).unwrap_or(0);\n-                let blen = b.name.as_ref().map(|b| b.len()).unwrap_or(0);\n-                alen.cmp(&blen)\n-            });\n-        }\n-\n-        Logger {\n-            directives: mem::replace(&mut self.directives, Vec::new()),\n-            filter: mem::replace(&mut self.filter, None),\n-            format: mem::replace(&mut self.format, Box::new(|_| String::new())),\n-        }\n-    }\n-}\n-\n-impl Logger {\n-    pub fn new() -> Logger {\n-        let mut builder = LogBuilder::new();\n-\n-        if let Ok(s) = env::var(\"RUST_LOG\") {\n-            builder.parse(&s);\n-        }\n-\n-        builder.build()\n-    }\n-\n-    pub fn filter(&self) -> LogLevelFilter {\n-        self.directives.iter()\n-            .map(|d| d.level).max()\n-            .unwrap_or(LogLevelFilter::Off)\n-    }\n-\n-    fn enabled(&self, level: LogLevel, target: &str) -> bool {\n-        // Search for the longest match, the vector is assumed to be pre-sorted.\n-        for directive in self.directives.iter().rev() {\n-            match directive.name {\n-                Some(ref name) if !target.starts_with(&**name) => {},\n-                Some(..) | None => {\n-                    return level <= directive.level\n-                }\n-            }\n-        }\n-        false\n-    }\n-}\n-\n-impl Log for Logger {\n-    fn enabled(&self, metadata: &LogMetadata) -> bool {\n-        self.enabled(metadata.level(), metadata.target())\n-    }\n-\n-    fn log(&self, record: &LogRecord) {\n-        if !Log::enabled(self, record.metadata()) {\n-            return;\n-        }\n-\n-        if let Some(filter) = self.filter.as_ref() {\n-            if !filter.is_match(&*record.args().to_string()) {\n-                return;\n-            }\n-        }\n-\n-        let _ = writeln!(&mut io::stderr(), \"{}\", (self.format)(record));\n-    }\n-}\n-\n-struct LogDirective {\n-    name: Option<String>,\n-    level: LogLevelFilter,\n-}\n-\n-/// Initializes the global logger with an env logger.\n-///\n-/// This should be called early in the execution of a Rust program, and the\n-/// global logger may only be initialized once. Future initialization attempts\n-/// will return an error.\n-pub fn init() -> Result<(), SetLoggerError> {\n-    let mut builder = LogBuilder::new();\n-\n-    if let Ok(s) = env::var(\"RUST_LOG\") {\n-        builder.parse(&s);\n-    }\n-\n-    builder.init()\n-}\n-\n-/// Parse a logging specification string (e.g: \"crate1,crate2::mod3,crate3::x=error/foo\")\n-/// and return a vector with log directives.\n-fn parse_logging_spec(spec: &str) -> (Vec<LogDirective>, Option<filter::Filter>) {\n-    let mut dirs = Vec::new();\n-\n-    let mut parts = spec.split('/');\n-    let mods = parts.next();\n-    let filter = parts.next();\n-    if parts.next().is_some() {\n-        println!(\"warning: invalid logging spec '{}', \\\n-                 ignoring it (too many '/'s)\", spec);\n-        return (dirs, None);\n-    }\n-    mods.map(|m| { for s in m.split(',') {\n-        if s.len() == 0 { continue }\n-        let mut parts = s.split('=');\n-        let (log_level, name) = match (parts.next(), parts.next().map(|s| s.trim()), parts.next()) {\n-            (Some(part0), None, None) => {\n-                // if the single argument is a log-level string or number,\n-                // treat that as a global fallback\n-                match part0.parse() {\n-                    Ok(num) => (num, None),\n-                    Err(_) => (LogLevelFilter::max(), Some(part0)),\n-                }\n-            }\n-            (Some(part0), Some(\"\"), None) => (LogLevelFilter::max(), Some(part0)),\n-            (Some(part0), Some(part1), None) => {\n-                match part1.parse() {\n-                    Ok(num) => (num, Some(part0)),\n-                    _ => {\n-                        println!(\"warning: invalid logging spec '{}', \\\n-                                 ignoring it\", part1);\n-                        continue\n-                    }\n-                }\n-            },\n-            _ => {\n-                println!(\"warning: invalid logging spec '{}', \\\n-                         ignoring it\", s);\n-                continue\n-            }\n-        };\n-        dirs.push(LogDirective {\n-            name: name.map(|s| s.to_string()),\n-            level: log_level,\n-        });\n-    }});\n-\n-    let filter = filter.map_or(None, |filter| {\n-        match filter::Filter::new(filter) {\n-            Ok(re) => Some(re),\n-            Err(e) => {\n-                println!(\"warning: invalid regex filter - {}\", e);\n-                None\n-            }\n-        }\n-    });\n-\n-    return (dirs, filter);\n-}\n-\n-#[cfg(test)]\n-mod tests {\n-    use log::{LogLevel, LogLevelFilter};\n-\n-    use super::{LogBuilder, Logger, LogDirective, parse_logging_spec};\n-\n-    fn make_logger(dirs: Vec<LogDirective>) -> Logger {\n-        let mut logger = LogBuilder::new().build();\n-        logger.directives = dirs;\n-        logger\n-    }\n-\n-    #[test]\n-    fn filter_info() {\n-        let logger = LogBuilder::new().filter(None, LogLevelFilter::Info).build();\n-        assert!(logger.enabled(LogLevel::Info, \"crate1\"));\n-        assert!(!logger.enabled(LogLevel::Debug, \"crate1\"));\n-    }\n-\n-    #[test]\n-    fn filter_beginning_longest_match() {\n-        let logger = LogBuilder::new()\n-                        .filter(Some(\"crate2\"), LogLevelFilter::Info)\n-                        .filter(Some(\"crate2::mod\"), LogLevelFilter::Debug)\n-                        .filter(Some(\"crate1::mod1\"), LogLevelFilter::Warn)\n-                        .build();\n-        assert!(logger.enabled(LogLevel::Debug, \"crate2::mod1\"));\n-        assert!(!logger.enabled(LogLevel::Debug, \"crate2\"));\n-    }\n-\n-    #[test]\n-    fn parse_default() {\n-        let logger = LogBuilder::new().parse(\"info,crate1::mod1=warn\").build();\n-        assert!(logger.enabled(LogLevel::Warn, \"crate1::mod1\"));\n-        assert!(logger.enabled(LogLevel::Info, \"crate2::mod2\"));\n-    }\n-\n-    #[test]\n-    fn match_full_path() {\n-        let logger = make_logger(vec![\n-            LogDirective {\n-                name: Some(\"crate2\".to_string()),\n-                level: LogLevelFilter::Info\n-            },\n-            LogDirective {\n-                name: Some(\"crate1::mod1\".to_string()),\n-                level: LogLevelFilter::Warn\n-            }\n-        ]);\n-        assert!(logger.enabled(LogLevel::Warn, \"crate1::mod1\"));\n-        assert!(!logger.enabled(LogLevel::Info, \"crate1::mod1\"));\n-        assert!(logger.enabled(LogLevel::Info, \"crate2\"));\n-        assert!(!logger.enabled(LogLevel::Debug, \"crate2\"));\n-    }\n-\n-    #[test]\n-    fn no_match() {\n-        let logger = make_logger(vec![\n-            LogDirective { name: Some(\"crate2\".to_string()), level: LogLevelFilter::Info },\n-            LogDirective { name: Some(\"crate1::mod1\".to_string()), level: LogLevelFilter::Warn }\n-        ]);\n-        assert!(!logger.enabled(LogLevel::Warn, \"crate3\"));\n-    }\n-\n-    #[test]\n-    fn match_beginning() {\n-        let logger = make_logger(vec![\n-            LogDirective { name: Some(\"crate2\".to_string()), level: LogLevelFilter::Info },\n-            LogDirective { name: Some(\"crate1::mod1\".to_string()), level: LogLevelFilter::Warn }\n-        ]);\n-        assert!(logger.enabled(LogLevel::Info, \"crate2::mod1\"));\n-    }\n-\n-    #[test]\n-    fn match_beginning_longest_match() {\n-        let logger = make_logger(vec![\n-            LogDirective { name: Some(\"crate2\".to_string()), level: LogLevelFilter::Info },\n-            LogDirective { name: Some(\"crate2::mod\".to_string()), level: LogLevelFilter::Debug },\n-            LogDirective { name: Some(\"crate1::mod1\".to_string()), level: LogLevelFilter::Warn }\n-        ]);\n-        assert!(logger.enabled(LogLevel::Debug, \"crate2::mod1\"));\n-        assert!(!logger.enabled(LogLevel::Debug, \"crate2\"));\n-    }\n-\n-    #[test]\n-    fn match_default() {\n-        let logger = make_logger(vec![\n-            LogDirective { name: None, level: LogLevelFilter::Info },\n-            LogDirective { name: Some(\"crate1::mod1\".to_string()), level: LogLevelFilter::Warn }\n-        ]);\n-        assert!(logger.enabled(LogLevel::Warn, \"crate1::mod1\"));\n-        assert!(logger.enabled(LogLevel::Info, \"crate2::mod2\"));\n-    }\n-\n-    #[test]\n-    fn zero_level() {\n-        let logger = make_logger(vec![\n-            LogDirective { name: None, level: LogLevelFilter::Info },\n-            LogDirective { name: Some(\"crate1::mod1\".to_string()), level: LogLevelFilter::Off }\n-        ]);\n-        assert!(!logger.enabled(LogLevel::Error, \"crate1::mod1\"));\n-        assert!(logger.enabled(LogLevel::Info, \"crate2::mod2\"));\n-    }\n-\n-    #[test]\n-    fn parse_logging_spec_valid() {\n-        let (dirs, filter) = parse_logging_spec(\"crate1::mod1=error,crate1::mod2,crate2=debug\");\n-        assert_eq!(dirs.len(), 3);\n-        assert_eq!(dirs[0].name, Some(\"crate1::mod1\".to_string()));\n-        assert_eq!(dirs[0].level, LogLevelFilter::Error);\n-\n-        assert_eq!(dirs[1].name, Some(\"crate1::mod2\".to_string()));\n-        assert_eq!(dirs[1].level, LogLevelFilter::max());\n-\n-        assert_eq!(dirs[2].name, Some(\"crate2\".to_string()));\n-        assert_eq!(dirs[2].level, LogLevelFilter::Debug);\n-        assert!(filter.is_none());\n-    }\n-\n-    #[test]\n-    fn parse_logging_spec_invalid_crate() {\n-        // test parse_logging_spec with multiple = in specification\n-        let (dirs, filter) = parse_logging_spec(\"crate1::mod1=warn=info,crate2=debug\");\n-        assert_eq!(dirs.len(), 1);\n-        assert_eq!(dirs[0].name, Some(\"crate2\".to_string()));\n-        assert_eq!(dirs[0].level, LogLevelFilter::Debug);\n-        assert!(filter.is_none());\n-    }\n-\n-    #[test]\n-    fn parse_logging_spec_invalid_log_level() {\n-        // test parse_logging_spec with 'noNumber' as log level\n-        let (dirs, filter) = parse_logging_spec(\"crate1::mod1=noNumber,crate2=debug\");\n-        assert_eq!(dirs.len(), 1);\n-        assert_eq!(dirs[0].name, Some(\"crate2\".to_string()));\n-        assert_eq!(dirs[0].level, LogLevelFilter::Debug);\n-        assert!(filter.is_none());\n-    }\n-\n-    #[test]\n-    fn parse_logging_spec_string_log_level() {\n-        // test parse_logging_spec with 'warn' as log level\n-        let (dirs, filter) = parse_logging_spec(\"crate1::mod1=wrong,crate2=warn\");\n-        assert_eq!(dirs.len(), 1);\n-        assert_eq!(dirs[0].name, Some(\"crate2\".to_string()));\n-        assert_eq!(dirs[0].level, LogLevelFilter::Warn);\n-        assert!(filter.is_none());\n-    }\n-\n-    #[test]\n-    fn parse_logging_spec_empty_log_level() {\n-        // test parse_logging_spec with '' as log level\n-        let (dirs, filter) = parse_logging_spec(\"crate1::mod1=wrong,crate2=\");\n-        assert_eq!(dirs.len(), 1);\n-        assert_eq!(dirs[0].name, Some(\"crate2\".to_string()));\n-        assert_eq!(dirs[0].level, LogLevelFilter::max());\n-        assert!(filter.is_none());\n-    }\n-\n-    #[test]\n-    fn parse_logging_spec_global() {\n-        // test parse_logging_spec with no crate\n-        let (dirs, filter) = parse_logging_spec(\"warn,crate2=debug\");\n-        assert_eq!(dirs.len(), 2);\n-        assert_eq!(dirs[0].name, None);\n-        assert_eq!(dirs[0].level, LogLevelFilter::Warn);\n-        assert_eq!(dirs[1].name, Some(\"crate2\".to_string()));\n-        assert_eq!(dirs[1].level, LogLevelFilter::Debug);\n-        assert!(filter.is_none());\n-    }\n-\n-    #[test]\n-    fn parse_logging_spec_valid_filter() {\n-        let (dirs, filter) = parse_logging_spec(\"crate1::mod1=error,crate1::mod2,crate2=debug/abc\");\n-        assert_eq!(dirs.len(), 3);\n-        assert_eq!(dirs[0].name, Some(\"crate1::mod1\".to_string()));\n-        assert_eq!(dirs[0].level, LogLevelFilter::Error);\n-\n-        assert_eq!(dirs[1].name, Some(\"crate1::mod2\".to_string()));\n-        assert_eq!(dirs[1].level, LogLevelFilter::max());\n-\n-        assert_eq!(dirs[2].name, Some(\"crate2\".to_string()));\n-        assert_eq!(dirs[2].level, LogLevelFilter::Debug);\n-        assert!(filter.is_some() && filter.unwrap().to_string() == \"abc\");\n-    }\n-\n-    #[test]\n-    fn parse_logging_spec_invalid_crate_filter() {\n-        let (dirs, filter) = parse_logging_spec(\"crate1::mod1=error=warn,crate2=debug/a.c\");\n-        assert_eq!(dirs.len(), 1);\n-        assert_eq!(dirs[0].name, Some(\"crate2\".to_string()));\n-        assert_eq!(dirs[0].level, LogLevelFilter::Debug);\n-        assert!(filter.is_some() && filter.unwrap().to_string() == \"a.c\");\n-    }\n-\n-    #[test]\n-    fn parse_logging_spec_empty_with_filter() {\n-        let (dirs, filter) = parse_logging_spec(\"crate1/a*c\");\n-        assert_eq!(dirs.len(), 1);\n-        assert_eq!(dirs[0].name, Some(\"crate1\".to_string()));\n-        assert_eq!(dirs[0].level, LogLevelFilter::max());\n-        assert!(filter.is_some() && filter.unwrap().to_string() == \"a*c\");\n-    }\n-}"}, {"sha": "0df03e673304d9e1bbb5101f31c082837a70ab06", "filename": "src/vendor/env_logger/src/regex.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fenv_logger%2Fsrc%2Fregex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fenv_logger%2Fsrc%2Fregex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fenv_logger%2Fsrc%2Fregex.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,28 +0,0 @@\n-extern crate regex;\n-\n-use std::fmt;\n-\n-use self::regex::Regex;\n-\n-pub struct Filter {\n-    inner: Regex,\n-}\n-\n-impl Filter {\n-    pub fn new(spec: &str) -> Result<Filter, String> {\n-        match Regex::new(spec){\n-            Ok(r) => Ok(Filter { inner: r }),\n-            Err(e) => Err(e.to_string()),\n-        }\n-    }\n-\n-    pub fn is_match(&self, s: &str) -> bool {\n-        self.inner.is_match(s)\n-    }\n-}\n-\n-impl fmt::Display for Filter {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        self.inner.fmt(f)\n-    }\n-}"}, {"sha": "74d0e04dbd6ed9ed0f1a4954dc7c28eda3bcb36a", "filename": "src/vendor/env_logger/src/string.rs", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fenv_logger%2Fsrc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fenv_logger%2Fsrc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fenv_logger%2Fsrc%2Fstring.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,21 +0,0 @@\n-use std::fmt;\n-\n-pub struct Filter {\n-    inner: String,\n-}\n-\n-impl Filter {\n-    pub fn new(spec: &str) -> Result<Filter, String> {\n-        Ok(Filter { inner: spec.to_string() })\n-    }\n-\n-    pub fn is_match(&self, s: &str) -> bool {\n-        s.contains(&self.inner)\n-    }\n-}\n-\n-impl fmt::Display for Filter {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        self.inner.fmt(f)\n-    }\n-}"}, {"sha": "5036fb8e3c9c332a790eb8ce9a789bf7dea7df86", "filename": "src/vendor/env_logger/tests/regexp_filter.rs", "status": "removed", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fenv_logger%2Ftests%2Fregexp_filter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fenv_logger%2Ftests%2Fregexp_filter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fenv_logger%2Ftests%2Fregexp_filter.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,51 +0,0 @@\n-#[macro_use] extern crate log;\n-extern crate env_logger;\n-\n-use std::process;\n-use std::env;\n-use std::str;\n-\n-fn main() {\n-    if env::var(\"LOG_REGEXP_TEST\").ok() == Some(String::from(\"1\")) {\n-        child_main();\n-    } else {\n-        parent_main()\n-    }\n-}\n-\n-fn child_main() {\n-    env_logger::init().unwrap();\n-    info!(\"XYZ Message\");\n-}\n-\n-fn run_child(rust_log: String) -> bool {\n-    let exe = env::current_exe().unwrap();\n-    let out = process::Command::new(exe)\n-        .env(\"LOG_REGEXP_TEST\", \"1\")\n-        .env(\"RUST_LOG\", rust_log)\n-        .output()\n-        .unwrap_or_else(|e| panic!(\"Unable to start child process: {}\", e));\n-    str::from_utf8(out.stderr.as_ref()).unwrap().contains(\"XYZ Message\")\n-}\n-\n-fn assert_message_printed(rust_log: &str) {\n-    if !run_child(rust_log.to_string()) {\n-        panic!(\"RUST_LOG={} should allow the test log message\", rust_log)\n-    }\n-}\n-\n-fn assert_message_not_printed(rust_log: &str) {\n-    if run_child(rust_log.to_string()) {\n-        panic!(\"RUST_LOG={} should not allow the test log message\", rust_log)\n-    }\n-}\n-\n-fn parent_main() {\n-    // test normal log severity levels\n-    assert_message_printed(\"info\");\n-    assert_message_not_printed(\"warn\");\n-\n-    // test of regular expression filters\n-    assert_message_printed(\"info/XYZ\");\n-    assert_message_not_printed(\"info/XXX\");\n-}"}, {"sha": "674ae31b296ba1b08dc5996634a82b1648ccc6c2", "filename": "src/vendor/filetime/.cargo-checksum.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2F.cargo-checksum.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2F.cargo-checksum.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ffiletime%2F.cargo-checksum.json?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1 +0,0 @@\n-{\"files\":{\".cargo-ok\":\"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\".gitignore\":\"f9b1ca6ae27d1c18215265024629a8960c31379f206d9ed20f64e0b2dcf79805\",\".travis.yml\":\"c8cfe2c700e7b1d6500d0ad8084694be7009095e9572aaf54bf695c1fe7822d6\",\"Cargo.toml\":\"4e414fe72ef2afcae81fb5a89f39e59ec40844272b589381746623f612333305\",\"LICENSE-APACHE\":\"a60eea817514531668d7e00765731449fe14d059d3249e0bc93b36de45f759f2\",\"LICENSE-MIT\":\"378f5840b258e2779c39418f3f2d7b2ba96f1c7917dd6be0713f88305dbda397\",\"README.md\":\"fef1998633eb2f460e6b12bc1133a21f5674e0b53ae5914ba1e53f1b63a185c3\",\"appveyor.yml\":\"da991211b72fa6f231af7adb84c9fb72f5a9131d1c0a3d47b8ceffe5a82c8542\",\"src/lib.rs\":\"8fa03e69ab113e5a30c742f60b6beddc0b77ef41a1eb45e82f9df867c9265815\"},\"package\":\"5363ab8e4139b8568a6237db5248646e5a8a2f89bd5ccb02092182b11fd3e922\"}\n\\ No newline at end of file"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/vendor/filetime/.cargo-ok", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2F.cargo-ok", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2F.cargo-ok", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ffiletime%2F.cargo-ok?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "a9d37c560c6ab8d4afbf47eda643e8c42e857716", "filename": "src/vendor/filetime/.gitignore", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ffiletime%2F.gitignore?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,2 +0,0 @@\n-target\n-Cargo.lock"}, {"sha": "001cdd259ecf330680172707ff3abe00ca9e8ad3", "filename": "src/vendor/filetime/.travis.yml", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2F.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2F.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ffiletime%2F.travis.yml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,26 +0,0 @@\n-language: rust\n-rust:\n-  - stable\n-  - beta\n-  - nightly\n-sudo: false\n-script:\n-  - cargo build --verbose\n-  - cargo test --verbose\n-  - cargo doc --no-deps\n-after_success: |\n-  [ $TRAVIS_BRANCH = master ] &&\n-  [ $TRAVIS_PULL_REQUEST = false ] &&\n-  echo '<meta http-equiv=refresh content=0;url=filetime/index.html>' > target/doc/index.html &&\n-  pip install ghp-import --user $USER &&\n-  $HOME/.local/bin/ghp-import -n target/doc &&\n-  git push -qf https://${TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git gh-pages\n-notifications:\n-  email:\n-    on_success: never\n-env:\n-  global:\n-    secure: dsIj09BQvGF872zKmqzG+WwCl7gfqwsnxcm3GZlAMgyLYm4juvHOwCRhIERCN3BCxPvdlSRKhe9Rwmp1RkiKuqTK3ITUTAy29Maf2vuL1T+zcdpZE0t6JSCU1gbEwzCA2foB1jzgy7Q47EzeJusmGNwibscjYmXKlH6JCFwTobM=\n-os:\n-  - linux\n-  - osx"}, {"sha": "971eaf601469d93f633ac0ab6480f84af6e6282a", "filename": "src/vendor/filetime/Cargo.toml", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ffiletime%2FCargo.toml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,19 +0,0 @@\n-[package]\n-name = \"filetime\"\n-authors = [\"Alex Crichton <alex@alexcrichton.com>\"]\n-version = \"0.1.10\"\n-license = \"MIT/Apache-2.0\"\n-readme = \"README.md\"\n-keywords = [\"timestamp\", \"mtime\"]\n-repository = \"https://github.com/alexcrichton/filetime\"\n-homepage = \"https://github.com/alexcrichton/filetime\"\n-documentation = \"http://alexcrichton.com/filetime\"\n-description = \"\"\"\n-Platform-agnostic accessors of timestamps in File metadata\n-\"\"\"\n-\n-[dependencies]\n-libc = \"0.2\"\n-\n-[dev-dependencies]\n-tempdir = \"0.3\""}, {"sha": "16fe87b06e802f094b3fbb0894b137bca2b16ef1", "filename": "src/vendor/filetime/LICENSE-APACHE", "status": "removed", "additions": 0, "deletions": 201, "changes": 201, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2FLICENSE-APACHE", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2FLICENSE-APACHE", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ffiletime%2FLICENSE-APACHE?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,201 +0,0 @@\n-                              Apache License\n-                        Version 2.0, January 2004\n-                     http://www.apache.org/licenses/\n-\n-TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n-\n-1. Definitions.\n-\n-   \"License\" shall mean the terms and conditions for use, reproduction,\n-   and distribution as defined by Sections 1 through 9 of this document.\n-\n-   \"Licensor\" shall mean the copyright owner or entity authorized by\n-   the copyright owner that is granting the License.\n-\n-   \"Legal Entity\" shall mean the union of the acting entity and all\n-   other entities that control, are controlled by, or are under common\n-   control with that entity. For the purposes of this definition,\n-   \"control\" means (i) the power, direct or indirect, to cause the\n-   direction or management of such entity, whether by contract or\n-   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n-   outstanding shares, or (iii) beneficial ownership of such entity.\n-\n-   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n-   exercising permissions granted by this License.\n-\n-   \"Source\" form shall mean the preferred form for making modifications,\n-   including but not limited to software source code, documentation\n-   source, and configuration files.\n-\n-   \"Object\" form shall mean any form resulting from mechanical\n-   transformation or translation of a Source form, including but\n-   not limited to compiled object code, generated documentation,\n-   and conversions to other media types.\n-\n-   \"Work\" shall mean the work of authorship, whether in Source or\n-   Object form, made available under the License, as indicated by a\n-   copyright notice that is included in or attached to the work\n-   (an example is provided in the Appendix below).\n-\n-   \"Derivative Works\" shall mean any work, whether in Source or Object\n-   form, that is based on (or derived from) the Work and for which the\n-   editorial revisions, annotations, elaborations, or other modifications\n-   represent, as a whole, an original work of authorship. For the purposes\n-   of this License, Derivative Works shall not include works that remain\n-   separable from, or merely link (or bind by name) to the interfaces of,\n-   the Work and Derivative Works thereof.\n-\n-   \"Contribution\" shall mean any work of authorship, including\n-   the original version of the Work and any modifications or additions\n-   to that Work or Derivative Works thereof, that is intentionally\n-   submitted to Licensor for inclusion in the Work by the copyright owner\n-   or by an individual or Legal Entity authorized to submit on behalf of\n-   the copyright owner. For the purposes of this definition, \"submitted\"\n-   means any form of electronic, verbal, or written communication sent\n-   to the Licensor or its representatives, including but not limited to\n-   communication on electronic mailing lists, source code control systems,\n-   and issue tracking systems that are managed by, or on behalf of, the\n-   Licensor for the purpose of discussing and improving the Work, but\n-   excluding communication that is conspicuously marked or otherwise\n-   designated in writing by the copyright owner as \"Not a Contribution.\"\n-\n-   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n-   on behalf of whom a Contribution has been received by Licensor and\n-   subsequently incorporated within the Work.\n-\n-2. Grant of Copyright License. Subject to the terms and conditions of\n-   this License, each Contributor hereby grants to You a perpetual,\n-   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-   copyright license to reproduce, prepare Derivative Works of,\n-   publicly display, publicly perform, sublicense, and distribute the\n-   Work and such Derivative Works in Source or Object form.\n-\n-3. Grant of Patent License. Subject to the terms and conditions of\n-   this License, each Contributor hereby grants to You a perpetual,\n-   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-   (except as stated in this section) patent license to make, have made,\n-   use, offer to sell, sell, import, and otherwise transfer the Work,\n-   where such license applies only to those patent claims licensable\n-   by such Contributor that are necessarily infringed by their\n-   Contribution(s) alone or by combination of their Contribution(s)\n-   with the Work to which such Contribution(s) was submitted. If You\n-   institute patent litigation against any entity (including a\n-   cross-claim or counterclaim in a lawsuit) alleging that the Work\n-   or a Contribution incorporated within the Work constitutes direct\n-   or contributory patent infringement, then any patent licenses\n-   granted to You under this License for that Work shall terminate\n-   as of the date such litigation is filed.\n-\n-4. Redistribution. You may reproduce and distribute copies of the\n-   Work or Derivative Works thereof in any medium, with or without\n-   modifications, and in Source or Object form, provided that You\n-   meet the following conditions:\n-\n-   (a) You must give any other recipients of the Work or\n-       Derivative Works a copy of this License; and\n-\n-   (b) You must cause any modified files to carry prominent notices\n-       stating that You changed the files; and\n-\n-   (c) You must retain, in the Source form of any Derivative Works\n-       that You distribute, all copyright, patent, trademark, and\n-       attribution notices from the Source form of the Work,\n-       excluding those notices that do not pertain to any part of\n-       the Derivative Works; and\n-\n-   (d) If the Work includes a \"NOTICE\" text file as part of its\n-       distribution, then any Derivative Works that You distribute must\n-       include a readable copy of the attribution notices contained\n-       within such NOTICE file, excluding those notices that do not\n-       pertain to any part of the Derivative Works, in at least one\n-       of the following places: within a NOTICE text file distributed\n-       as part of the Derivative Works; within the Source form or\n-       documentation, if provided along with the Derivative Works; or,\n-       within a display generated by the Derivative Works, if and\n-       wherever such third-party notices normally appear. The contents\n-       of the NOTICE file are for informational purposes only and\n-       do not modify the License. You may add Your own attribution\n-       notices within Derivative Works that You distribute, alongside\n-       or as an addendum to the NOTICE text from the Work, provided\n-       that such additional attribution notices cannot be construed\n-       as modifying the License.\n-\n-   You may add Your own copyright statement to Your modifications and\n-   may provide additional or different license terms and conditions\n-   for use, reproduction, or distribution of Your modifications, or\n-   for any such Derivative Works as a whole, provided Your use,\n-   reproduction, and distribution of the Work otherwise complies with\n-   the conditions stated in this License.\n-\n-5. Submission of Contributions. Unless You explicitly state otherwise,\n-   any Contribution intentionally submitted for inclusion in the Work\n-   by You to the Licensor shall be under the terms and conditions of\n-   this License, without any additional terms or conditions.\n-   Notwithstanding the above, nothing herein shall supersede or modify\n-   the terms of any separate license agreement you may have executed\n-   with Licensor regarding such Contributions.\n-\n-6. Trademarks. This License does not grant permission to use the trade\n-   names, trademarks, service marks, or product names of the Licensor,\n-   except as required for reasonable and customary use in describing the\n-   origin of the Work and reproducing the content of the NOTICE file.\n-\n-7. Disclaimer of Warranty. Unless required by applicable law or\n-   agreed to in writing, Licensor provides the Work (and each\n-   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n-   implied, including, without limitation, any warranties or conditions\n-   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n-   PARTICULAR PURPOSE. You are solely responsible for determining the\n-   appropriateness of using or redistributing the Work and assume any\n-   risks associated with Your exercise of permissions under this License.\n-\n-8. Limitation of Liability. In no event and under no legal theory,\n-   whether in tort (including negligence), contract, or otherwise,\n-   unless required by applicable law (such as deliberate and grossly\n-   negligent acts) or agreed to in writing, shall any Contributor be\n-   liable to You for damages, including any direct, indirect, special,\n-   incidental, or consequential damages of any character arising as a\n-   result of this License or out of the use or inability to use the\n-   Work (including but not limited to damages for loss of goodwill,\n-   work stoppage, computer failure or malfunction, or any and all\n-   other commercial damages or losses), even if such Contributor\n-   has been advised of the possibility of such damages.\n-\n-9. Accepting Warranty or Additional Liability. While redistributing\n-   the Work or Derivative Works thereof, You may choose to offer,\n-   and charge a fee for, acceptance of support, warranty, indemnity,\n-   or other liability obligations and/or rights consistent with this\n-   License. However, in accepting such obligations, You may act only\n-   on Your own behalf and on Your sole responsibility, not on behalf\n-   of any other Contributor, and only if You agree to indemnify,\n-   defend, and hold each Contributor harmless for any liability\n-   incurred by, or claims asserted against, such Contributor by reason\n-   of your accepting any such warranty or additional liability.\n-\n-END OF TERMS AND CONDITIONS\n-\n-APPENDIX: How to apply the Apache License to your work.\n-\n-   To apply the Apache License to your work, attach the following\n-   boilerplate notice, with the fields enclosed by brackets \"[]\"\n-   replaced with your own identifying information. (Don't include\n-   the brackets!)  The text should be enclosed in the appropriate\n-   comment syntax for the file format. We also recommend that a\n-   file or class name and description of purpose be included on the\n-   same \"printed page\" as the copyright notice for easier\n-   identification within third-party archives.\n-\n-Copyright [yyyy] [name of copyright owner]\n-\n-Licensed under the Apache License, Version 2.0 (the \"License\");\n-you may not use this file except in compliance with the License.\n-You may obtain a copy of the License at\n-\n-\thttp://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing, software\n-distributed under the License is distributed on an \"AS IS\" BASIS,\n-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-See the License for the specific language governing permissions and\n-limitations under the License."}, {"sha": "39e0ed6602151f235148e6c08413aa7eda5b9038", "filename": "src/vendor/filetime/LICENSE-MIT", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2FLICENSE-MIT", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2FLICENSE-MIT", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ffiletime%2FLICENSE-MIT?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,25 +0,0 @@\n-Copyright (c) 2014 Alex Crichton\n-\n-Permission is hereby granted, free of charge, to any\n-person obtaining a copy of this software and associated\n-documentation files (the \"Software\"), to deal in the\n-Software without restriction, including without\n-limitation the rights to use, copy, modify, merge,\n-publish, distribute, sublicense, and/or sell copies of\n-the Software, and to permit persons to whom the Software\n-is furnished to do so, subject to the following\n-conditions:\n-\n-The above copyright notice and this permission notice\n-shall be included in all copies or substantial portions\n-of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n-ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n-TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n-PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\n-SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n-CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n-OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\n-IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n-DEALINGS IN THE SOFTWARE."}, {"sha": "0422084e7e206afef8eb4bed8c7ee24e3f6bf3d6", "filename": "src/vendor/filetime/README.md", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ffiletime%2FREADME.md?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,25 +0,0 @@\n-# filetime\n-\n-[![Build Status](https://travis-ci.org/alexcrichton/filetime.svg?branch=master)](https://travis-ci.org/alexcrichton/filetime)\n-[![Build status](https://ci.appveyor.com/api/projects/status/9tatexq47i3ee13k?svg=true)](https://ci.appveyor.com/project/alexcrichton/filetime)\n-\n-[Documentation](http://alexcrichton.com/filetime/filetime/index.html)\n-\n-A helper library for inspecting the various timestamps of files in Rust. This\n-library takes into account cross-platform differences in terms of where the\n-timestamps are located, what they are called, and how to convert them into a\n-platform-independent representation.\n-\n-```toml\n-# Cargo.toml\n-[dependencies]\n-filetime = \"0.1\"\n-```\n-\n-# License\n-\n-`filetime` is primarily distributed under the terms of both the MIT license and\n-the Apache License (Version 2.0), with portions covered by various BSD-like\n-licenses.\n-\n-See LICENSE-APACHE, and LICENSE-MIT for details."}, {"sha": "6a1b8dc19c0393b9f64e98ca3701755ef39c34de", "filename": "src/vendor/filetime/appveyor.yml", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2Fappveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2Fappveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ffiletime%2Fappveyor.yml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,17 +0,0 @@\n-environment:\n-  matrix:\n-  - TARGET: x86_64-pc-windows-msvc\n-  - TARGET: i686-pc-windows-msvc\n-  - TARGET: i686-pc-windows-gnu\n-install:\n-  - ps: Start-FileDownload \"https://static.rust-lang.org/dist/rust-nightly-${env:TARGET}.exe\"\n-  - rust-nightly-%TARGET%.exe /VERYSILENT /NORESTART /DIR=\"C:\\Program Files (x86)\\Rust\"\n-  - SET PATH=%PATH%;C:\\Program Files (x86)\\Rust\\bin\n-  - SET PATH=%PATH%;C:\\MinGW\\bin\n-  - rustc -V\n-  - cargo -V\n-\n-build: false\n-\n-test_script:\n-  - cargo test --verbose"}, {"sha": "aa6bec1dfefe3dcfaf472b5f513a0ea313f3be24", "filename": "src/vendor/filetime/src/lib.rs", "status": "removed", "additions": 0, "deletions": 305, "changes": 305, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ffiletime%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ffiletime%2Fsrc%2Flib.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,305 +0,0 @@\n-//! Timestamps for files in Rust\n-//!\n-//! This library provides platform-agnostic inspection of the various timestamps\n-//! present in the standard `fs::Metadata` structure.\n-//!\n-//! # Installation\n-//!\n-//! Add this to you `Cargo.toml`:\n-//!\n-//! ```toml\n-//! [dependencies]\n-//! filetime = \"0.1\"\n-//! ```\n-//!\n-//! # Usage\n-//!\n-//! ```no_run\n-//! use std::fs;\n-//! use filetime::FileTime;\n-//!\n-//! let metadata = fs::metadata(\"foo.txt\").unwrap();\n-//!\n-//! let mtime = FileTime::from_last_modification_time(&metadata);\n-//! println!(\"{}\", mtime);\n-//!\n-//! let atime = FileTime::from_last_access_time(&metadata);\n-//! assert!(mtime < atime);\n-//!\n-//! // Inspect values that can be interpreted across platforms\n-//! println!(\"{}\", mtime.seconds_relative_to_1970());\n-//! println!(\"{}\", mtime.nanoseconds());\n-//!\n-//! // Print the platform-specific value of seconds\n-//! println!(\"{}\", mtime.seconds());\n-//! ```\n-\n-extern crate libc;\n-\n-#[cfg(unix)] use std::os::unix::prelude::*;\n-#[cfg(windows)] use std::os::windows::prelude::*;\n-\n-use std::fmt;\n-use std::fs;\n-use std::io;\n-use std::path::Path;\n-\n-/// A helper structure to represent a timestamp for a file.\n-///\n-/// The actual value contined within is platform-specific and does not have the\n-/// same meaning across platforms, but comparisons and stringification can be\n-/// significant among the same platform.\n-#[derive(Eq, PartialEq, Ord, PartialOrd, Debug, Copy, Clone, Hash)]\n-pub struct FileTime {\n-    seconds: u64,\n-    nanos: u32,\n-}\n-\n-impl FileTime {\n-    /// Creates a new timestamp representing a 0 time.\n-    ///\n-    /// Useful for creating the base of a cmp::max chain of times.\n-    pub fn zero() -> FileTime {\n-        FileTime { seconds: 0, nanos: 0 }\n-    }\n-\n-    /// Creates a new instance of `FileTime` with a number of seconds and\n-    /// nanoseconds relative to January 1, 1970.\n-    ///\n-    /// Note that this is typically the relative point that Unix time stamps are\n-    /// from, but on Windows the native time stamp is relative to January 1,\n-    /// 1601 so the return value of `seconds` from the returned `FileTime`\n-    /// instance may not be the same as that passed in.\n-    pub fn from_seconds_since_1970(seconds: u64, nanos: u32) -> FileTime {\n-        FileTime {\n-            seconds: seconds + if cfg!(windows) {11644473600} else {0},\n-            nanos: nanos,\n-        }\n-    }\n-\n-    /// Creates a new timestamp from the last modification time listed in the\n-    /// specified metadata.\n-    ///\n-    /// The returned value corresponds to the `mtime` field of `stat` on Unix\n-    /// platforms and the `ftLastWriteTime` field on Windows platforms.\n-    pub fn from_last_modification_time(meta: &fs::Metadata) -> FileTime {\n-        #[cfg(unix)]\n-        fn imp(meta: &fs::Metadata) -> FileTime {\n-            FileTime::from_os_repr(meta.mtime() as u64, meta.mtime_nsec() as u32)\n-        }\n-        #[cfg(windows)]\n-        fn imp(meta: &fs::Metadata) -> FileTime {\n-            FileTime::from_os_repr(meta.last_write_time())\n-        }\n-        imp(meta)\n-    }\n-\n-    /// Creates a new timestamp from the last access time listed in the\n-    /// specified metadata.\n-    ///\n-    /// The returned value corresponds to the `atime` field of `stat` on Unix\n-    /// platforms and the `ftLastAccessTime` field on Windows platforms.\n-    pub fn from_last_access_time(meta: &fs::Metadata) -> FileTime {\n-        #[cfg(unix)]\n-        fn imp(meta: &fs::Metadata) -> FileTime {\n-            FileTime::from_os_repr(meta.atime() as u64, meta.atime_nsec() as u32)\n-        }\n-        #[cfg(windows)]\n-        fn imp(meta: &fs::Metadata) -> FileTime {\n-            FileTime::from_os_repr(meta.last_access_time())\n-        }\n-        imp(meta)\n-    }\n-\n-    /// Creates a new timestamp from the creation time listed in the specified\n-    /// metadata.\n-    ///\n-    /// The returned value corresponds to the `birthtime` field of `stat` on\n-    /// Unix platforms and the `ftCreationTime` field on Windows platforms. Note\n-    /// that not all Unix platforms have this field available and may return\n-    /// `None` in some circumstances.\n-    pub fn from_creation_time(meta: &fs::Metadata) -> Option<FileTime> {\n-        macro_rules! birthtim {\n-            ($(($e:expr, $i:ident)),*) => {\n-                #[cfg(any($(target_os = $e),*))]\n-                fn imp(meta: &fs::Metadata) -> Option<FileTime> {\n-                    $(\n-                        #[cfg(target_os = $e)]\n-                        use std::os::$i::fs::MetadataExt;\n-                    )*\n-                    let raw = meta.as_raw_stat();\n-                    Some(FileTime::from_os_repr(raw.st_birthtime as u64,\n-                                                raw.st_birthtime_nsec as u32))\n-                }\n-\n-                #[cfg(all(not(windows),\n-                          $(not(target_os = $e)),*))]\n-                fn imp(_meta: &fs::Metadata) -> Option<FileTime> {\n-                    None\n-                }\n-            }\n-        }\n-\n-        birthtim! {\n-            (\"bitrig\", bitrig),\n-            (\"freebsd\", freebsd),\n-            (\"ios\", ios),\n-            (\"macos\", macos),\n-            (\"openbsd\", openbsd)\n-        }\n-\n-        #[cfg(windows)]\n-        fn imp(meta: &fs::Metadata) -> Option<FileTime> {\n-            Some(FileTime::from_os_repr(meta.last_access_time()))\n-        }\n-        imp(meta)\n-    }\n-\n-    #[cfg(windows)]\n-    fn from_os_repr(time: u64) -> FileTime {\n-        // Windows write times are in 100ns intervals, so do a little math to\n-        // get it into the right representation.\n-        FileTime {\n-            seconds: time / (1_000_000_000 / 100),\n-            nanos: ((time % (1_000_000_000 / 100)) * 100) as u32,\n-        }\n-    }\n-\n-    #[cfg(unix)]\n-    fn from_os_repr(seconds: u64, nanos: u32) -> FileTime {\n-        FileTime { seconds: seconds, nanos: nanos }\n-    }\n-\n-    /// Returns the whole number of seconds represented by this timestamp.\n-    ///\n-    /// Note that this value's meaning is **platform specific**. On Unix\n-    /// platform time stamps are typically relative to January 1, 1970, but on\n-    /// Windows platforms time stamps are relative to January 1, 1601.\n-    pub fn seconds(&self) -> u64 { self.seconds }\n-\n-    /// Returns the whole number of seconds represented by this timestamp,\n-    /// relative to the Unix epoch start of January 1, 1970.\n-    ///\n-    /// Note that this does not return the same value as `seconds` for Windows\n-    /// platforms as seconds are relative to a different date there.\n-    pub fn seconds_relative_to_1970(&self) -> u64 {\n-        self.seconds - if cfg!(windows) {11644473600} else {0}\n-    }\n-\n-    /// Returns the nanosecond precision of this timestamp.\n-    ///\n-    /// The returned value is always less than one billion and represents a\n-    /// portion of a second forward from the seconds returned by the `seconds`\n-    /// method.\n-    pub fn nanoseconds(&self) -> u32 { self.nanos }\n-}\n-\n-impl fmt::Display for FileTime {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        write!(f, \"{}.{:09}s\", self.seconds, self.nanos)\n-    }\n-}\n-\n-/// Set the last access and modification times for a file on the filesystem.\n-///\n-/// This function will set the `atime` and `mtime` metadata fields for a file\n-/// on the local filesystem, returning any error encountered.\n-pub fn set_file_times<P>(p: P, atime: FileTime, mtime: FileTime)\n-                         -> io::Result<()> where P: AsRef<Path> {\n-    set_file_times_(p.as_ref(), atime, mtime)\n-}\n-\n-#[cfg(unix)]\n-fn set_file_times_(p: &Path, atime: FileTime, mtime: FileTime) -> io::Result<()> {\n-    use std::ffi::CString;\n-    use libc::{timeval, time_t, suseconds_t, utimes};\n-\n-    let times = [to_timeval(&atime), to_timeval(&mtime)];\n-    let p = try!(CString::new(p.as_os_str().as_bytes()));\n-    return unsafe {\n-        if utimes(p.as_ptr() as *const _, times.as_ptr()) == 0 {\n-            Ok(())\n-        } else {\n-            Err(io::Error::last_os_error())\n-        }\n-    };\n-\n-    fn to_timeval(ft: &FileTime) -> timeval {\n-        timeval {\n-            tv_sec: ft.seconds() as time_t,\n-            tv_usec: (ft.nanoseconds() / 1000) as suseconds_t,\n-        }\n-    }\n-}\n-\n-#[cfg(windows)]\n-#[allow(bad_style)]\n-fn set_file_times_(p: &Path, atime: FileTime, mtime: FileTime) -> io::Result<()> {\n-    use std::fs::OpenOptions;\n-\n-    type BOOL = i32;\n-    type HANDLE = *mut u8;\n-    type DWORD = u32;\n-    #[repr(C)]\n-    struct FILETIME {\n-        dwLowDateTime: u32,\n-        dwHighDateTime: u32,\n-    }\n-    extern \"system\" {\n-        fn SetFileTime(hFile: HANDLE,\n-                       lpCreationTime: *const FILETIME,\n-                       lpLastAccessTime: *const FILETIME,\n-                       lpLastWriteTime: *const FILETIME) -> BOOL;\n-    }\n-\n-    let f = try!(OpenOptions::new().write(true).open(p));\n-    let atime = to_filetime(&atime);\n-    let mtime = to_filetime(&mtime);\n-    return unsafe {\n-        let ret = SetFileTime(f.as_raw_handle() as *mut _,\n-                              0 as *const _,\n-                              &atime, &mtime);\n-        if ret != 0 {\n-            Ok(())\n-        } else {\n-            Err(io::Error::last_os_error())\n-        }\n-    };\n-\n-    fn to_filetime(ft: &FileTime) -> FILETIME {\n-        let intervals = ft.seconds() * (1_000_000_000 / 100) +\n-                        ((ft.nanoseconds() as u64) / 100);\n-        FILETIME {\n-            dwLowDateTime: intervals as DWORD,\n-            dwHighDateTime: (intervals >> 32) as DWORD,\n-        }\n-    }\n-}\n-\n-#[cfg(test)]\n-mod tests {\n-    extern crate tempdir;\n-\n-    use std::fs::{self, File};\n-    use self::tempdir::TempDir;\n-    use super::{FileTime, set_file_times};\n-\n-    #[test]\n-    fn set_file_times_test() {\n-        let td = TempDir::new(\"filetime\").unwrap();\n-        let path = td.path().join(\"foo.txt\");\n-        File::create(&path).unwrap();\n-\n-        let metadata = fs::metadata(&path).unwrap();\n-        let mtime = FileTime::from_last_modification_time(&metadata);\n-        let atime = FileTime::from_last_access_time(&metadata);\n-        set_file_times(&path, atime, mtime).unwrap();\n-\n-        let new_mtime = FileTime::from_seconds_since_1970(10_000, 0);\n-        set_file_times(&path, atime, new_mtime).unwrap();\n-\n-        let metadata = fs::metadata(&path).unwrap();\n-        let mtime = FileTime::from_last_modification_time(&metadata);\n-        assert_eq!(mtime, new_mtime);\n-    }\n-}"}, {"sha": "69e2a953a176d45606baf48182ad85c5c2529e8c", "filename": "src/vendor/gcc/.cargo-checksum.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2F.cargo-checksum.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2F.cargo-checksum.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2F.cargo-checksum.json?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1 +0,0 @@\n-{\"files\":{\".cargo-ok\":\"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\".gitignore\":\"4cc6445feac7e9a1f8f1e1c51cc3afd0cf7bb931e3c5a6f18c41258401652702\",\".travis.yml\":\"e68f9d10a8e367890cf734239c39952ee480cf0e8da9520b377df4a2b8ccc9e8\",\"Cargo.toml\":\"4c5eb683d4c57fff819ebf564a8db93b5c87284993def6bc066ba1e311d5b090\",\"LICENSE-APACHE\":\"a60eea817514531668d7e00765731449fe14d059d3249e0bc93b36de45f759f2\",\"LICENSE-MIT\":\"378f5840b258e2779c39418f3f2d7b2ba96f1c7917dd6be0713f88305dbda397\",\"README.md\":\"b1a639560fd536f2c3ab708a8e1066b675edd4d018dfa4e5e18d0d7327d81c15\",\"appveyor.yml\":\"46c77d913eaa45871296942c2cd96ef092c9dcaf19201cb5c500a5107faeb06f\",\"src/bin/gcc-shim.rs\":\"d6be9137cb48b86891e7b263adbf492e1193ffe682db9ba4a88eb1079b874b58\",\"src/lib.rs\":\"eb4ca086dd2ffa5e30f022f556d0def6d1142160da392afb328393b3f435e8f7\",\"src/registry.rs\":\"3876ef9573e3bbc050aef41a684b9a510cc1a91b15ae874fe032cf4377b4d116\",\"src/windows_registry.rs\":\"36c6a7f8322407faff2dcfd4789d0876d034885944bc0340ac7c1f7cbfc307f1\",\"tests/cc_env.rs\":\"d92c5e3d3d43ac244e63b2cd2c93a521fcf124bf1ccf8d4c6bfa7f8333d88976\",\"tests/support/mod.rs\":\"56bcfd1e2ff5ae8e581c71229444a3d96094bf689808808dd80e315bd6632083\",\"tests/test.rs\":\"b63e74d571e7d585edc53693bcf0caae88fc040613ace91e32437d4a62cddb6a\"},\"package\":\"c07c758b972368e703a562686adb39125707cc1ef3399da8c019fc6c2498a75d\"}\n\\ No newline at end of file"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/vendor/gcc/.cargo-ok", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2F.cargo-ok", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2F.cargo-ok", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2F.cargo-ok?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "3b874ca574de0550d0ee2608988aeb9655940377", "filename": "src/vendor/gcc/.gitignore", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2F.gitignore?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,4 +0,0 @@\n-target\n-Cargo.lock\n-.idea\n-*.iml"}, {"sha": "10d3d13d876bcee206e5c1171d5038537bf0dd22", "filename": "src/vendor/gcc/.travis.yml", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2F.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2F.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2F.travis.yml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,49 +0,0 @@\n-language: rust\n-rust:\n-  - stable\n-  - beta\n-  - nightly\n-matrix:\n-  include:\n-    # Minimum version supported\n-    - rust: 1.6.0\n-      install:\n-      script: cargo build\n-\n-sudo: false\n-install:\n-  - if [ \"$TRAVIS_OS_NAME\" = \"linux\" ]; then OS=unknown-linux-gnu; else OS=apple-darwin; fi\n-  - export TARGET=$ARCH-$OS\n-  - curl https://static.rust-lang.org/rustup.sh |\n-    sh -s -- --add-target=$TARGET --disable-sudo -y --prefix=`rustc --print sysroot`\n-before_script:\n-  - pip install 'travis-cargo<0.2' --user && export PATH=$HOME/.local/bin:$PATH\n-script:\n-  - cargo build --verbose\n-  - cargo test --verbose\n-  - cargo test --verbose --features parallel\n-  - cargo test --manifest-path gcc-test/Cargo.toml --target $TARGET\n-  - cargo test --manifest-path gcc-test/Cargo.toml --target $TARGET --features parallel\n-  - cargo test --manifest-path gcc-test/Cargo.toml --target $TARGET --release\n-  - cargo doc\n-  - cargo clean && cargo build\n-  - rustdoc --test README.md -L target/debug -L target/debug/deps\n-after_success:\n-  - travis-cargo --only nightly doc-upload\n-env:\n-  global:\n-    secure: \"CBtqrudgE0PS8x3kTr44jKbC2D4nfnmdYVecooNm0qnER4B4TSvZpZSQoCgKK6k4BYQuOSyFTOwYx6M79w39ZMOgyCP9ytB+tyMWL0/+ZuUQL04yVg4M5vd3oJMkOaXbvG56ncgPyFrseY+FPDg+mXAzvJk/nily37YXjkQj2D0=\"\n-\n-  matrix:\n-    - ARCH=x86_64\n-    - ARCH=i686\n-notifications:\n-  email:\n-    on_success: never\n-os:\n-  - linux\n-  - osx\n-addons:\n-  apt:\n-    packages:\n-      - g++-multilib"}, {"sha": "9fee7788cefc85ef8c593130cc080729563efda4", "filename": "src/vendor/gcc/Cargo.toml", "status": "removed", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2FCargo.toml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,27 +0,0 @@\n-[package]\n-\n-name = \"gcc\"\n-version = \"0.3.43\"\n-authors = [\"Alex Crichton <alex@alexcrichton.com>\"]\n-license = \"MIT/Apache-2.0\"\n-repository = \"https://github.com/alexcrichton/gcc-rs\"\n-documentation = \"https://docs.rs/gcc\"\n-description = \"\"\"\n-A build-time dependency for Cargo build scripts to assist in invoking the native\n-C compiler to compile native C code into a static archive to be linked into Rust\n-code.\n-\"\"\"\n-keywords = [\"build-dependencies\"]\n-\n-[badges]\n-travis-ci = { repository = \"alexcrichton/gcc-rs\" }\n-appveyor = { repository = \"alexcrichton/gcc-rs\" }\n-\n-[dependencies]\n-rayon = { version = \"0.6\", optional = true }\n-\n-[features]\n-parallel = [\"rayon\"]\n-\n-[dev-dependencies]\n-tempdir = \"0.3\""}, {"sha": "16fe87b06e802f094b3fbb0894b137bca2b16ef1", "filename": "src/vendor/gcc/LICENSE-APACHE", "status": "removed", "additions": 0, "deletions": 201, "changes": 201, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2FLICENSE-APACHE", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2FLICENSE-APACHE", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2FLICENSE-APACHE?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,201 +0,0 @@\n-                              Apache License\n-                        Version 2.0, January 2004\n-                     http://www.apache.org/licenses/\n-\n-TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n-\n-1. Definitions.\n-\n-   \"License\" shall mean the terms and conditions for use, reproduction,\n-   and distribution as defined by Sections 1 through 9 of this document.\n-\n-   \"Licensor\" shall mean the copyright owner or entity authorized by\n-   the copyright owner that is granting the License.\n-\n-   \"Legal Entity\" shall mean the union of the acting entity and all\n-   other entities that control, are controlled by, or are under common\n-   control with that entity. For the purposes of this definition,\n-   \"control\" means (i) the power, direct or indirect, to cause the\n-   direction or management of such entity, whether by contract or\n-   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n-   outstanding shares, or (iii) beneficial ownership of such entity.\n-\n-   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n-   exercising permissions granted by this License.\n-\n-   \"Source\" form shall mean the preferred form for making modifications,\n-   including but not limited to software source code, documentation\n-   source, and configuration files.\n-\n-   \"Object\" form shall mean any form resulting from mechanical\n-   transformation or translation of a Source form, including but\n-   not limited to compiled object code, generated documentation,\n-   and conversions to other media types.\n-\n-   \"Work\" shall mean the work of authorship, whether in Source or\n-   Object form, made available under the License, as indicated by a\n-   copyright notice that is included in or attached to the work\n-   (an example is provided in the Appendix below).\n-\n-   \"Derivative Works\" shall mean any work, whether in Source or Object\n-   form, that is based on (or derived from) the Work and for which the\n-   editorial revisions, annotations, elaborations, or other modifications\n-   represent, as a whole, an original work of authorship. For the purposes\n-   of this License, Derivative Works shall not include works that remain\n-   separable from, or merely link (or bind by name) to the interfaces of,\n-   the Work and Derivative Works thereof.\n-\n-   \"Contribution\" shall mean any work of authorship, including\n-   the original version of the Work and any modifications or additions\n-   to that Work or Derivative Works thereof, that is intentionally\n-   submitted to Licensor for inclusion in the Work by the copyright owner\n-   or by an individual or Legal Entity authorized to submit on behalf of\n-   the copyright owner. For the purposes of this definition, \"submitted\"\n-   means any form of electronic, verbal, or written communication sent\n-   to the Licensor or its representatives, including but not limited to\n-   communication on electronic mailing lists, source code control systems,\n-   and issue tracking systems that are managed by, or on behalf of, the\n-   Licensor for the purpose of discussing and improving the Work, but\n-   excluding communication that is conspicuously marked or otherwise\n-   designated in writing by the copyright owner as \"Not a Contribution.\"\n-\n-   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n-   on behalf of whom a Contribution has been received by Licensor and\n-   subsequently incorporated within the Work.\n-\n-2. Grant of Copyright License. Subject to the terms and conditions of\n-   this License, each Contributor hereby grants to You a perpetual,\n-   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-   copyright license to reproduce, prepare Derivative Works of,\n-   publicly display, publicly perform, sublicense, and distribute the\n-   Work and such Derivative Works in Source or Object form.\n-\n-3. Grant of Patent License. Subject to the terms and conditions of\n-   this License, each Contributor hereby grants to You a perpetual,\n-   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-   (except as stated in this section) patent license to make, have made,\n-   use, offer to sell, sell, import, and otherwise transfer the Work,\n-   where such license applies only to those patent claims licensable\n-   by such Contributor that are necessarily infringed by their\n-   Contribution(s) alone or by combination of their Contribution(s)\n-   with the Work to which such Contribution(s) was submitted. If You\n-   institute patent litigation against any entity (including a\n-   cross-claim or counterclaim in a lawsuit) alleging that the Work\n-   or a Contribution incorporated within the Work constitutes direct\n-   or contributory patent infringement, then any patent licenses\n-   granted to You under this License for that Work shall terminate\n-   as of the date such litigation is filed.\n-\n-4. Redistribution. You may reproduce and distribute copies of the\n-   Work or Derivative Works thereof in any medium, with or without\n-   modifications, and in Source or Object form, provided that You\n-   meet the following conditions:\n-\n-   (a) You must give any other recipients of the Work or\n-       Derivative Works a copy of this License; and\n-\n-   (b) You must cause any modified files to carry prominent notices\n-       stating that You changed the files; and\n-\n-   (c) You must retain, in the Source form of any Derivative Works\n-       that You distribute, all copyright, patent, trademark, and\n-       attribution notices from the Source form of the Work,\n-       excluding those notices that do not pertain to any part of\n-       the Derivative Works; and\n-\n-   (d) If the Work includes a \"NOTICE\" text file as part of its\n-       distribution, then any Derivative Works that You distribute must\n-       include a readable copy of the attribution notices contained\n-       within such NOTICE file, excluding those notices that do not\n-       pertain to any part of the Derivative Works, in at least one\n-       of the following places: within a NOTICE text file distributed\n-       as part of the Derivative Works; within the Source form or\n-       documentation, if provided along with the Derivative Works; or,\n-       within a display generated by the Derivative Works, if and\n-       wherever such third-party notices normally appear. The contents\n-       of the NOTICE file are for informational purposes only and\n-       do not modify the License. You may add Your own attribution\n-       notices within Derivative Works that You distribute, alongside\n-       or as an addendum to the NOTICE text from the Work, provided\n-       that such additional attribution notices cannot be construed\n-       as modifying the License.\n-\n-   You may add Your own copyright statement to Your modifications and\n-   may provide additional or different license terms and conditions\n-   for use, reproduction, or distribution of Your modifications, or\n-   for any such Derivative Works as a whole, provided Your use,\n-   reproduction, and distribution of the Work otherwise complies with\n-   the conditions stated in this License.\n-\n-5. Submission of Contributions. Unless You explicitly state otherwise,\n-   any Contribution intentionally submitted for inclusion in the Work\n-   by You to the Licensor shall be under the terms and conditions of\n-   this License, without any additional terms or conditions.\n-   Notwithstanding the above, nothing herein shall supersede or modify\n-   the terms of any separate license agreement you may have executed\n-   with Licensor regarding such Contributions.\n-\n-6. Trademarks. This License does not grant permission to use the trade\n-   names, trademarks, service marks, or product names of the Licensor,\n-   except as required for reasonable and customary use in describing the\n-   origin of the Work and reproducing the content of the NOTICE file.\n-\n-7. Disclaimer of Warranty. Unless required by applicable law or\n-   agreed to in writing, Licensor provides the Work (and each\n-   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n-   implied, including, without limitation, any warranties or conditions\n-   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n-   PARTICULAR PURPOSE. You are solely responsible for determining the\n-   appropriateness of using or redistributing the Work and assume any\n-   risks associated with Your exercise of permissions under this License.\n-\n-8. Limitation of Liability. In no event and under no legal theory,\n-   whether in tort (including negligence), contract, or otherwise,\n-   unless required by applicable law (such as deliberate and grossly\n-   negligent acts) or agreed to in writing, shall any Contributor be\n-   liable to You for damages, including any direct, indirect, special,\n-   incidental, or consequential damages of any character arising as a\n-   result of this License or out of the use or inability to use the\n-   Work (including but not limited to damages for loss of goodwill,\n-   work stoppage, computer failure or malfunction, or any and all\n-   other commercial damages or losses), even if such Contributor\n-   has been advised of the possibility of such damages.\n-\n-9. Accepting Warranty or Additional Liability. While redistributing\n-   the Work or Derivative Works thereof, You may choose to offer,\n-   and charge a fee for, acceptance of support, warranty, indemnity,\n-   or other liability obligations and/or rights consistent with this\n-   License. However, in accepting such obligations, You may act only\n-   on Your own behalf and on Your sole responsibility, not on behalf\n-   of any other Contributor, and only if You agree to indemnify,\n-   defend, and hold each Contributor harmless for any liability\n-   incurred by, or claims asserted against, such Contributor by reason\n-   of your accepting any such warranty or additional liability.\n-\n-END OF TERMS AND CONDITIONS\n-\n-APPENDIX: How to apply the Apache License to your work.\n-\n-   To apply the Apache License to your work, attach the following\n-   boilerplate notice, with the fields enclosed by brackets \"[]\"\n-   replaced with your own identifying information. (Don't include\n-   the brackets!)  The text should be enclosed in the appropriate\n-   comment syntax for the file format. We also recommend that a\n-   file or class name and description of purpose be included on the\n-   same \"printed page\" as the copyright notice for easier\n-   identification within third-party archives.\n-\n-Copyright [yyyy] [name of copyright owner]\n-\n-Licensed under the Apache License, Version 2.0 (the \"License\");\n-you may not use this file except in compliance with the License.\n-You may obtain a copy of the License at\n-\n-\thttp://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing, software\n-distributed under the License is distributed on an \"AS IS\" BASIS,\n-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-See the License for the specific language governing permissions and\n-limitations under the License."}, {"sha": "39e0ed6602151f235148e6c08413aa7eda5b9038", "filename": "src/vendor/gcc/LICENSE-MIT", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2FLICENSE-MIT", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2FLICENSE-MIT", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2FLICENSE-MIT?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,25 +0,0 @@\n-Copyright (c) 2014 Alex Crichton\n-\n-Permission is hereby granted, free of charge, to any\n-person obtaining a copy of this software and associated\n-documentation files (the \"Software\"), to deal in the\n-Software without restriction, including without\n-limitation the rights to use, copy, modify, merge,\n-publish, distribute, sublicense, and/or sell copies of\n-the Software, and to permit persons to whom the Software\n-is furnished to do so, subject to the following\n-conditions:\n-\n-The above copyright notice and this permission notice\n-shall be included in all copies or substantial portions\n-of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n-ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n-TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n-PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\n-SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n-CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n-OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\n-IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n-DEALINGS IN THE SOFTWARE."}, {"sha": "2d3e5ed7387549a5fb81b5caea6c0b3931866f1a", "filename": "src/vendor/gcc/README.md", "status": "removed", "additions": 0, "deletions": 163, "changes": 163, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2FREADME.md?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,163 +0,0 @@\n-# gcc-rs\n-\n-A library to compile C/C++ code into a Rust library/application.\n-\n-[![Build Status](https://travis-ci.org/alexcrichton/gcc-rs.svg?branch=master)](https://travis-ci.org/alexcrichton/gcc-rs)\n-[![Build status](https://ci.appveyor.com/api/projects/status/onu270iw98h81nwv?svg=true)](https://ci.appveyor.com/project/alexcrichton/gcc-rs)\n-\n-[Documentation](https://docs.rs/gcc)\n-\n-A simple library meant to be used as a build dependency with Cargo packages in\n-order to build a set of C/C++ files into a static archive. Note that while this\n-crate is called \"gcc\", it actually calls out to the most relevant compile for\n-a platform, for example using `cl` on MSVC. That is, this crate does indeed work\n-on MSVC!\n-\n-## Using gcc-rs\n-\n-First, you'll want to both add a build script for your crate (`build.rs`) and\n-also add this crate to your `Cargo.toml` via:\n-\n-```toml\n-[package]\n-# ...\n-build = \"build.rs\"\n-\n-[build-dependencies]\n-gcc = \"0.3\"\n-```\n-\n-Next up, you'll want to write a build script like so:\n-\n-```rust,no_run\n-// build.rs\n-\n-extern crate gcc;\n-\n-fn main() {\n-    gcc::compile_library(\"libfoo.a\", &[\"foo.c\", \"bar.c\"]);\n-}\n-```\n-\n-And that's it! Running `cargo build` should take care of the rest and your Rust\n-application will now have the C files `foo.c` and `bar.c` compiled into it. You\n-can call the functions in Rust by declaring functions in your Rust code like so:\n-\n-```\n-extern {\n-    fn foo_function();\n-    fn bar_function();\n-}\n-\n-pub fn call() {\n-    unsafe {\n-        foo_function();\n-        bar_function();\n-    }\n-}\n-\n-fn main() {\n-    // ...\n-}\n-```\n-\n-## External configuration via environment variables\n-\n-To control the programs and flags used for building, the builder can set a\n-number of different environment variables.\n-\n-* `CFLAGS` - a series of space separated flags passed to \"gcc\". Note that\n-             individual flags cannot currently contain spaces, so doing\n-             something like: \"-L=foo\\ bar\" is not possible.\n-* `CC` - the actual C compiler used. Note that this is used as an exact\n-         executable name, so (for example) no extra flags can be passed inside\n-         this variable, and the builder must ensure that there aren't any\n-         trailing spaces. This compiler must understand the `-c` flag. For\n-         certain `TARGET`s, it also is assumed to know about other flags (most\n-         common is `-fPIC`).\n-* `AR` - the `ar` (archiver) executable to use to build the static library.\n-\n-Each of these variables can also be supplied with certain prefixes and suffixes,\n-in the following prioritized order:\n-\n-1. `<var>_<target>` - for example, `CC_x86_64-unknown-linux-gnu`\n-2. `<var>_<target_with_underscores>` - for example, `CC_x86_64_unknown_linux_gnu`\n-3. `<build-kind>_<var>` - for example, `HOST_CC` or `TARGET_CFLAGS`\n-4. `<var>` - a plain `CC`, `AR` as above.\n-\n-If none of these variables exist, gcc-rs uses built-in defaults\n-\n-In addition to the the above optional environment variables, `gcc-rs` has some\n-functions with hard requirements on some variables supplied by [cargo's\n-build-script driver][cargo] that it has the `TARGET`, `OUT_DIR`, `OPT_LEVEL`,\n-and `HOST` variables.\n-\n-[cargo]: http://doc.crates.io/build-script.html#inputs-to-the-build-script\n-\n-## Optional features\n-\n-Currently gcc-rs supports parallel compilation (think `make -jN`) but this\n-feature is turned off by default. To enable gcc-rs to compile C/C++ in parallel,\n-you can change your dependency to:\n-\n-```toml\n-[build-dependencies]\n-gcc = { version = \"0.3\", features = [\"parallel\"] }\n-```\n-\n-By default gcc-rs will limit parallelism to `$NUM_JOBS`, or if not present it\n-will limit it to the number of cpus on the machine. If you are using cargo,\n-use `-jN` option of `build`, `test` and `run` commands as `$NUM_JOBS`\n-is supplied by cargo.\n-\n-## Compile-time Requirements\n-\n-To work properly this crate needs access to a C compiler when the build script\n-is being run. This crate does not ship a C compiler with it. The compiler\n-required varies per platform, but there are three broad categories:\n-\n-* Unix platforms require `cc` to be the C compiler. This can be found by\n-  installing gcc/clang on Linux distributions and Xcode on OSX, for example.\n-* Windows platforms targeting MSVC (e.g. your target triple ends in `-msvc`)\n-  require `cl.exe` to be available and in `PATH`. This is typically found in\n-  standard Visual Studio installations and the `PATH` can be set up by running\n-  the appropriate developer tools shell.\n-* Windows platforms targeting MinGW (e.g. your target triple ends in `-gnu`)\n-  require `gcc` to be available in `PATH`. We recommend the\n-  [MinGW-w64](http://mingw-w64.org) distribution, which is using the\n-  [Win-builds](http://win-builds.org) installation system.\n-  You may also acquire it via\n-  [MSYS2](http://msys2.github.io), as explained [here][msys2-help].  Make sure\n-  to install the appropriate architecture corresponding to your installation of\n-  rustc. GCC from older [MinGW](http://www.mingw.org) project is compatible\n-  only with 32-bit rust compiler.\n-\n-[msys2-help]: http://github.com/rust-lang/rust#building-on-windows\n-\n-## C++ support\n-\n-`gcc-rs` supports C++ libraries compilation by using the `cpp` method on\n-`Config`:\n-\n-```rust,no_run\n-extern crate gcc;\n-\n-fn main() {\n-    gcc::Config::new()\n-        .cpp(true) // Switch to C++ library compilation.\n-        .file(\"foo.cpp\")\n-        .compile(\"libfoo.a\");\n-}\n-```\n-\n-When using C++ library compilation switch, the `CXX` and `CXXFLAGS` env\n-variables are used instead of `CC` and `CFLAGS` and the C++ standard library is\n-linked to the crate target.\n-\n-## License\n-\n-`gcc-rs` is primarily distributed under the terms of both the MIT license and\n-the Apache License (Version 2.0), with portions covered by various BSD-like\n-licenses.\n-\n-See LICENSE-APACHE, and LICENSE-MIT for details."}, {"sha": "f6108c66514e995f469fd52683ae13c97640ee14", "filename": "src/vendor/gcc/appveyor.yml", "status": "removed", "additions": 0, "deletions": 35, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Fappveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Fappveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2Fappveyor.yml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,35 +0,0 @@\n-environment:\n-  matrix:\n-  - TARGET: x86_64-pc-windows-msvc\n-    ARCH: amd64\n-    VS: C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat\n-  - TARGET: x86_64-pc-windows-msvc\n-    ARCH: amd64\n-    VS: C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\n-  - TARGET: i686-pc-windows-msvc\n-    ARCH: x86\n-    VS: C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat\n-  - TARGET: i686-pc-windows-msvc\n-    ARCH: x86\n-    VS: C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\vcvarsall.bat\n-  - TARGET: x86_64-pc-windows-gnu\n-    MSYS_BITS: 64\n-  - TARGET: i686-pc-windows-gnu\n-    MSYS_BITS: 32\n-install:\n-  - ps: Start-FileDownload \"https://static.rust-lang.org/dist/rust-nightly-${env:TARGET}.exe\"\n-  - rust-nightly-%TARGET%.exe /VERYSILENT /NORESTART /DIR=\"C:\\Program Files (x86)\\Rust\"\n-  - if defined VS call \"%VS%\" %ARCH%\n-  - set PATH=%PATH%;C:\\Program Files (x86)\\Rust\\bin\n-  - if defined MSYS_BITS set PATH=%PATH%;C:\\msys64\\mingw%MSYS_BITS%\\bin\n-  - rustc -V\n-  - cargo -V\n-\n-build: false\n-\n-test_script:\n-  - cargo test --target %TARGET%\n-  - cargo test --features parallel --target %TARGET%\n-  - cargo test --manifest-path gcc-test/Cargo.toml --target %TARGET%\n-  - cargo test --manifest-path gcc-test/Cargo.toml --features parallel --target %TARGET%\n-  - cargo test --manifest-path gcc-test/Cargo.toml --release --target %TARGET%"}, {"sha": "7fd0ea8fa84b72bbf8da4aeb92d4a91021f46514", "filename": "src/vendor/gcc/src/bin/gcc-shim.rs", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Fsrc%2Fbin%2Fgcc-shim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Fsrc%2Fbin%2Fgcc-shim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2Fsrc%2Fbin%2Fgcc-shim.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,23 +0,0 @@\n-#![cfg_attr(test, allow(dead_code))]\n-\n-use std::env;\n-use std::fs::File;\n-use std::io::prelude::*;\n-use std::path::PathBuf;\n-\n-fn main() {\n-    let out_dir = PathBuf::from(env::var_os(\"GCCTEST_OUT_DIR\").unwrap());\n-    for i in 0.. {\n-        let candidate = out_dir.join(format!(\"out{}\", i));\n-        if candidate.exists() {\n-            continue;\n-        }\n-        let mut f = File::create(candidate).unwrap();\n-        for arg in env::args().skip(1) {\n-            writeln!(f, \"{}\", arg).unwrap();\n-        }\n-\n-        File::create(out_dir.join(\"libfoo.a\")).unwrap();\n-        break;\n-    }\n-}"}, {"sha": "f2d9da7f694218d8016fdb0787c4b8510e99887f", "filename": "src/vendor/gcc/src/lib.rs", "status": "removed", "additions": 0, "deletions": 1128, "changes": 1128, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2Fsrc%2Flib.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,1128 +0,0 @@\n-//! A library for build scripts to compile custom C code\n-//!\n-//! This library is intended to be used as a `build-dependencies` entry in\n-//! `Cargo.toml`:\n-//!\n-//! ```toml\n-//! [build-dependencies]\n-//! gcc = \"0.3\"\n-//! ```\n-//!\n-//! The purpose of this crate is to provide the utility functions necessary to\n-//! compile C code into a static archive which is then linked into a Rust crate.\n-//! The top-level `compile_library` function serves as a convenience and more\n-//! advanced configuration is available through the `Config` builder.\n-//!\n-//! This crate will automatically detect situations such as cross compilation or\n-//! other environment variables set by Cargo and will build code appropriately.\n-//!\n-//! # Examples\n-//!\n-//! Use the default configuration:\n-//!\n-//! ```no_run\n-//! extern crate gcc;\n-//!\n-//! fn main() {\n-//!     gcc::compile_library(\"libfoo.a\", &[\"src/foo.c\"]);\n-//! }\n-//! ```\n-//!\n-//! Use more advanced configuration:\n-//!\n-//! ```no_run\n-//! extern crate gcc;\n-//!\n-//! fn main() {\n-//!     gcc::Config::new()\n-//!                 .file(\"src/foo.c\")\n-//!                 .define(\"FOO\", Some(\"bar\"))\n-//!                 .include(\"src\")\n-//!                 .compile(\"libfoo.a\");\n-//! }\n-//! ```\n-\n-#![doc(html_root_url = \"https://docs.rs/gcc/0.3\")]\n-#![cfg_attr(test, deny(warnings))]\n-#![deny(missing_docs)]\n-\n-#[cfg(feature = \"parallel\")]\n-extern crate rayon;\n-\n-use std::env;\n-use std::ffi::{OsString, OsStr};\n-use std::fs;\n-use std::path::{PathBuf, Path};\n-use std::process::{Command, Stdio};\n-use std::io::{self, BufReader, BufRead, Read, Write};\n-use std::thread;\n-\n-#[cfg(windows)]\n-mod registry;\n-pub mod windows_registry;\n-\n-/// Extra configuration to pass to gcc.\n-pub struct Config {\n-    include_directories: Vec<PathBuf>,\n-    definitions: Vec<(String, Option<String>)>,\n-    objects: Vec<PathBuf>,\n-    flags: Vec<String>,\n-    files: Vec<PathBuf>,\n-    cpp: bool,\n-    cpp_link_stdlib: Option<Option<String>>,\n-    cpp_set_stdlib: Option<String>,\n-    target: Option<String>,\n-    host: Option<String>,\n-    out_dir: Option<PathBuf>,\n-    opt_level: Option<String>,\n-    debug: Option<bool>,\n-    env: Vec<(OsString, OsString)>,\n-    compiler: Option<PathBuf>,\n-    archiver: Option<PathBuf>,\n-    cargo_metadata: bool,\n-    pic: Option<bool>,\n-}\n-\n-/// Configuration used to represent an invocation of a C compiler.\n-///\n-/// This can be used to figure out what compiler is in use, what the arguments\n-/// to it are, and what the environment variables look like for the compiler.\n-/// This can be used to further configure other build systems (e.g. forward\n-/// along CC and/or CFLAGS) or the `to_command` method can be used to run the\n-/// compiler itself.\n-pub struct Tool {\n-    path: PathBuf,\n-    args: Vec<OsString>,\n-    env: Vec<(OsString, OsString)>,\n-    family: ToolFamily\n-}\n-\n-/// Represents the family of tools this tool belongs to.\n-///\n-/// Each family of tools differs in how and what arguments they accept.\n-///\n-/// Detection of a family is done on best-effort basis and may not accurately reflect the tool.\n-#[derive(Copy, Clone, Debug)]\n-enum ToolFamily {\n-    /// Tool is GNU Compiler Collection-like.\n-    Gnu,\n-    /// Tool is Clang-like. It differs from the GCC in a sense that it accepts superset of flags\n-    /// and its cross-compilation approach is different.\n-    Clang,\n-    /// Tool is the MSVC cl.exe.\n-    Msvc,\n-}\n-\n-impl ToolFamily {\n-    /// What the flag to request debug info for this family of tools look like\n-    fn debug_flag(&self) -> &'static str {\n-        match *self {\n-            ToolFamily::Msvc => \"/Z7\",\n-            ToolFamily::Gnu |\n-            ToolFamily::Clang => \"-g\",\n-        }\n-    }\n-\n-    /// What the flag to include directories into header search path looks like\n-    fn include_flag(&self) -> &'static str {\n-        match *self {\n-            ToolFamily::Msvc => \"/I\",\n-            ToolFamily::Gnu |\n-            ToolFamily::Clang => \"-I\",\n-        }\n-    }\n-\n-    /// What the flag to request macro-expanded source output looks like\n-    fn expand_flag(&self) -> &'static str {\n-        match *self {\n-            ToolFamily::Msvc => \"/E\",\n-            ToolFamily::Gnu |\n-            ToolFamily::Clang => \"-E\",\n-        }\n-    }\n-}\n-\n-/// Compile a library from the given set of input C files.\n-///\n-/// This will simply compile all files into object files and then assemble them\n-/// into the output. This will read the standard environment variables to detect\n-/// cross compilations and such.\n-///\n-/// This function will also print all metadata on standard output for Cargo.\n-///\n-/// # Example\n-///\n-/// ```no_run\n-/// gcc::compile_library(\"libfoo.a\", &[\"foo.c\", \"bar.c\"]);\n-/// ```\n-pub fn compile_library(output: &str, files: &[&str]) {\n-    let mut c = Config::new();\n-    for f in files.iter() {\n-        c.file(*f);\n-    }\n-    c.compile(output);\n-}\n-\n-impl Config {\n-    /// Construct a new instance of a blank set of configuration.\n-    ///\n-    /// This builder is finished with the `compile` function.\n-    pub fn new() -> Config {\n-        Config {\n-            include_directories: Vec::new(),\n-            definitions: Vec::new(),\n-            objects: Vec::new(),\n-            flags: Vec::new(),\n-            files: Vec::new(),\n-            cpp: false,\n-            cpp_link_stdlib: None,\n-            cpp_set_stdlib: None,\n-            target: None,\n-            host: None,\n-            out_dir: None,\n-            opt_level: None,\n-            debug: None,\n-            env: Vec::new(),\n-            compiler: None,\n-            archiver: None,\n-            cargo_metadata: true,\n-            pic: None,\n-        }\n-    }\n-\n-    /// Add a directory to the `-I` or include path for headers\n-    pub fn include<P: AsRef<Path>>(&mut self, dir: P) -> &mut Config {\n-        self.include_directories.push(dir.as_ref().to_path_buf());\n-        self\n-    }\n-\n-    /// Specify a `-D` variable with an optional value.\n-    pub fn define(&mut self, var: &str, val: Option<&str>) -> &mut Config {\n-        self.definitions.push((var.to_string(), val.map(|s| s.to_string())));\n-        self\n-    }\n-\n-    /// Add an arbitrary object file to link in\n-    pub fn object<P: AsRef<Path>>(&mut self, obj: P) -> &mut Config {\n-        self.objects.push(obj.as_ref().to_path_buf());\n-        self\n-    }\n-\n-    /// Add an arbitrary flag to the invocation of the compiler\n-    pub fn flag(&mut self, flag: &str) -> &mut Config {\n-        self.flags.push(flag.to_string());\n-        self\n-    }\n-\n-    /// Add a file which will be compiled\n-    pub fn file<P: AsRef<Path>>(&mut self, p: P) -> &mut Config {\n-        self.files.push(p.as_ref().to_path_buf());\n-        self\n-    }\n-\n-    /// Set C++ support.\n-    ///\n-    /// The other `cpp_*` options will only become active if this is set to\n-    /// `true`.\n-    pub fn cpp(&mut self, cpp: bool) -> &mut Config {\n-        self.cpp = cpp;\n-        self\n-    }\n-\n-    /// Set the standard library to link against when compiling with C++\n-    /// support.\n-    ///\n-    /// The default value of this property depends on the current target: On\n-    /// OS X `Some(\"c++\")` is used, when compiling for a Visual Studio based\n-    /// target `None` is used and for other targets `Some(\"stdc++\")` is used.\n-    ///\n-    /// A value of `None` indicates that no automatic linking should happen,\n-    /// otherwise cargo will link against the specified library.\n-    ///\n-    /// The given library name must not contain the `lib` prefix.\n-    pub fn cpp_link_stdlib(&mut self, cpp_link_stdlib: Option<&str>) -> &mut Config {\n-        self.cpp_link_stdlib = Some(cpp_link_stdlib.map(|s| s.into()));\n-        self\n-    }\n-\n-    /// Force the C++ compiler to use the specified standard library.\n-    ///\n-    /// Setting this option will automatically set `cpp_link_stdlib` to the same\n-    /// value.\n-    ///\n-    /// The default value of this option is always `None`.\n-    ///\n-    /// This option has no effect when compiling for a Visual Studio based\n-    /// target.\n-    ///\n-    /// This option sets the `-stdlib` flag, which is only supported by some\n-    /// compilers (clang, icc) but not by others (gcc). The library will not\n-    /// detect which compiler is used, as such it is the responsibility of the\n-    /// caller to ensure that this option is only used in conjuction with a\n-    /// compiler which supports the `-stdlib` flag.\n-    ///\n-    /// A value of `None` indicates that no specific C++ standard library should\n-    /// be used, otherwise `-stdlib` is added to the compile invocation.\n-    ///\n-    /// The given library name must not contain the `lib` prefix.\n-    pub fn cpp_set_stdlib(&mut self, cpp_set_stdlib: Option<&str>) -> &mut Config {\n-        self.cpp_set_stdlib = cpp_set_stdlib.map(|s| s.into());\n-        self.cpp_link_stdlib(cpp_set_stdlib);\n-        self\n-    }\n-\n-    /// Configures the target this configuration will be compiling for.\n-    ///\n-    /// This option is automatically scraped from the `TARGET` environment\n-    /// variable by build scripts, so it's not required to call this function.\n-    pub fn target(&mut self, target: &str) -> &mut Config {\n-        self.target = Some(target.to_string());\n-        self\n-    }\n-\n-    /// Configures the host assumed by this configuration.\n-    ///\n-    /// This option is automatically scraped from the `HOST` environment\n-    /// variable by build scripts, so it's not required to call this function.\n-    pub fn host(&mut self, host: &str) -> &mut Config {\n-        self.host = Some(host.to_string());\n-        self\n-    }\n-\n-    /// Configures the optimization level of the generated object files.\n-    ///\n-    /// This option is automatically scraped from the `OPT_LEVEL` environment\n-    /// variable by build scripts, so it's not required to call this function.\n-    pub fn opt_level(&mut self, opt_level: u32) -> &mut Config {\n-        self.opt_level = Some(opt_level.to_string());\n-        self\n-    }\n-\n-    /// Configures the optimization level of the generated object files.\n-    ///\n-    /// This option is automatically scraped from the `OPT_LEVEL` environment\n-    /// variable by build scripts, so it's not required to call this function.\n-    pub fn opt_level_str(&mut self, opt_level: &str) -> &mut Config {\n-        self.opt_level = Some(opt_level.to_string());\n-        self\n-    }\n-\n-    /// Configures whether the compiler will emit debug information when\n-    /// generating object files.\n-    ///\n-    /// This option is automatically scraped from the `PROFILE` environment\n-    /// variable by build scripts (only enabled when the profile is \"debug\"), so\n-    /// it's not required to call this function.\n-    pub fn debug(&mut self, debug: bool) -> &mut Config {\n-        self.debug = Some(debug);\n-        self\n-    }\n-\n-    /// Configures the output directory where all object files and static\n-    /// libraries will be located.\n-    ///\n-    /// This option is automatically scraped from the `OUT_DIR` environment\n-    /// variable by build scripts, so it's not required to call this function.\n-    pub fn out_dir<P: AsRef<Path>>(&mut self, out_dir: P) -> &mut Config {\n-        self.out_dir = Some(out_dir.as_ref().to_owned());\n-        self\n-    }\n-\n-    /// Configures the compiler to be used to produce output.\n-    ///\n-    /// This option is automatically determined from the target platform or a\n-    /// number of environment variables, so it's not required to call this\n-    /// function.\n-    pub fn compiler<P: AsRef<Path>>(&mut self, compiler: P) -> &mut Config {\n-        self.compiler = Some(compiler.as_ref().to_owned());\n-        self\n-    }\n-\n-    /// Configures the tool used to assemble archives.\n-    ///\n-    /// This option is automatically determined from the target platform or a\n-    /// number of environment variables, so it's not required to call this\n-    /// function.\n-    pub fn archiver<P: AsRef<Path>>(&mut self, archiver: P) -> &mut Config {\n-        self.archiver = Some(archiver.as_ref().to_owned());\n-        self\n-    }\n-    /// Define whether metadata should be emitted for cargo allowing it to\n-    /// automatically link the binary. Defaults to `true`.\n-    pub fn cargo_metadata(&mut self, cargo_metadata: bool) -> &mut Config {\n-        self.cargo_metadata = cargo_metadata;\n-        self\n-    }\n-\n-    /// Configures whether the compiler will emit position independent code.\n-    ///\n-    /// This option defaults to `false` for `i686` and `windows-gnu` targets and to `true` for all\n-    /// other targets.\n-    pub fn pic(&mut self, pic: bool) -> &mut Config {\n-        self.pic = Some(pic);\n-        self\n-    }\n-\n-\n-    #[doc(hidden)]\n-    pub fn __set_env<A, B>(&mut self, a: A, b: B) -> &mut Config\n-        where A: AsRef<OsStr>,\n-              B: AsRef<OsStr>\n-    {\n-        self.env.push((a.as_ref().to_owned(), b.as_ref().to_owned()));\n-        self\n-    }\n-\n-    /// Run the compiler, generating the file `output`\n-    ///\n-    /// The name `output` must begin with `lib` and end with `.a`\n-    pub fn compile(&self, output: &str) {\n-        assert!(output.starts_with(\"lib\"));\n-        assert!(output.ends_with(\".a\"));\n-        let lib_name = &output[3..output.len() - 2];\n-        let dst = self.get_out_dir();\n-\n-        let mut objects = Vec::new();\n-        let mut src_dst = Vec::new();\n-        for file in self.files.iter() {\n-            let obj = dst.join(file).with_extension(\"o\");\n-            let obj = if !obj.starts_with(&dst) {\n-                dst.join(obj.file_name().unwrap())\n-            } else {\n-                obj\n-            };\n-            fs::create_dir_all(&obj.parent().unwrap()).unwrap();\n-            src_dst.push((file.to_path_buf(), obj.clone()));\n-            objects.push(obj);\n-        }\n-        self.compile_objects(&src_dst);\n-        self.assemble(lib_name, &dst.join(output), &objects);\n-\n-        if self.get_target().contains(\"msvc\") {\n-            let compiler = self.get_base_compiler();\n-            let atlmfc_lib = compiler.env()\n-                .iter()\n-                .find(|&&(ref var, _)| var.as_os_str() == OsStr::new(\"LIB\"))\n-                .and_then(|&(_, ref lib_paths)| {\n-                    env::split_paths(lib_paths).find(|path| {\n-                        let sub = Path::new(\"atlmfc/lib\");\n-                        path.ends_with(sub) || path.parent().map_or(false, |p| p.ends_with(sub))\n-                    })\n-                });\n-\n-            if let Some(atlmfc_lib) = atlmfc_lib {\n-                self.print(&format!(\"cargo:rustc-link-search=native={}\", atlmfc_lib.display()));\n-            }\n-        }\n-\n-        self.print(&format!(\"cargo:rustc-link-lib=static={}\",\n-                            &output[3..output.len() - 2]));\n-        self.print(&format!(\"cargo:rustc-link-search=native={}\", dst.display()));\n-\n-        // Add specific C++ libraries, if enabled.\n-        if self.cpp {\n-            if let Some(stdlib) = self.get_cpp_link_stdlib() {\n-                self.print(&format!(\"cargo:rustc-link-lib={}\", stdlib));\n-            }\n-        }\n-    }\n-\n-    #[cfg(feature = \"parallel\")]\n-    fn compile_objects(&self, objs: &[(PathBuf, PathBuf)]) {\n-        use self::rayon::prelude::*;\n-\n-        let mut cfg = rayon::Configuration::new();\n-        if let Ok(amt) = env::var(\"NUM_JOBS\") {\n-            if let Ok(amt) = amt.parse() {\n-                cfg = cfg.set_num_threads(amt);\n-            }\n-        }\n-        drop(rayon::initialize(cfg));\n-\n-        objs.par_iter().weight_max().for_each(|&(ref src, ref dst)| self.compile_object(src, dst));\n-    }\n-\n-    #[cfg(not(feature = \"parallel\"))]\n-    fn compile_objects(&self, objs: &[(PathBuf, PathBuf)]) {\n-        for &(ref src, ref dst) in objs {\n-            self.compile_object(src, dst);\n-        }\n-    }\n-\n-    fn compile_object(&self, file: &Path, dst: &Path) {\n-        let is_asm = file.extension().and_then(|s| s.to_str()) == Some(\"asm\");\n-        let msvc = self.get_target().contains(\"msvc\");\n-        let (mut cmd, name) = if msvc && is_asm {\n-            self.msvc_macro_assembler()\n-        } else {\n-            let compiler = self.get_compiler();\n-            let mut cmd = compiler.to_command();\n-            for &(ref a, ref b) in self.env.iter() {\n-                cmd.env(a, b);\n-            }\n-            (cmd,\n-             compiler.path\n-                 .file_name()\n-                 .unwrap()\n-                 .to_string_lossy()\n-                 .into_owned())\n-        };\n-        if msvc && is_asm {\n-            cmd.arg(\"/Fo\").arg(dst);\n-        } else if msvc {\n-            let mut s = OsString::from(\"/Fo\");\n-            s.push(&dst);\n-            cmd.arg(s);\n-        } else {\n-            cmd.arg(\"-o\").arg(&dst);\n-        }\n-        cmd.arg(if msvc { \"/c\" } else { \"-c\" });\n-        cmd.arg(file);\n-\n-        run(&mut cmd, &name);\n-    }\n-\n-    /// Run the compiler, returning the macro-expanded version of the input files.\n-    ///\n-    /// This is only relevant for C and C++ files.\n-    pub fn expand(&self) -> Vec<u8> {\n-        let compiler = self.get_compiler();\n-        let mut cmd = compiler.to_command();\n-        for &(ref a, ref b) in self.env.iter() {\n-            cmd.env(a, b);\n-        }\n-        cmd.arg(compiler.family.expand_flag());\n-        for file in self.files.iter() {\n-            cmd.arg(file);\n-        }\n-\n-        let name = compiler.path\n-            .file_name()\n-            .unwrap()\n-            .to_string_lossy()\n-            .into_owned();\n-\n-        run(&mut cmd, &name)\n-    }\n-\n-    /// Get the compiler that's in use for this configuration.\n-    ///\n-    /// This function will return a `Tool` which represents the culmination\n-    /// of this configuration at a snapshot in time. The returned compiler can\n-    /// be inspected (e.g. the path, arguments, environment) to forward along to\n-    /// other tools, or the `to_command` method can be used to invoke the\n-    /// compiler itself.\n-    ///\n-    /// This method will take into account all configuration such as debug\n-    /// information, optimization level, include directories, defines, etc.\n-    /// Additionally, the compiler binary in use follows the standard\n-    /// conventions for this path, e.g. looking at the explicitly set compiler,\n-    /// environment variables (a number of which are inspected here), and then\n-    /// falling back to the default configuration.\n-    pub fn get_compiler(&self) -> Tool {\n-        let opt_level = self.get_opt_level();\n-        let target = self.get_target();\n-\n-        let mut cmd = self.get_base_compiler();\n-        let nvcc = cmd.path.file_name()\n-            .and_then(|p| p.to_str()).map(|p| p.contains(\"nvcc\"))\n-            .unwrap_or(false);\n-\n-        // Non-target flags\n-        // If the flag is not conditioned on target variable, it belongs here :)\n-        match cmd.family {\n-            ToolFamily::Msvc => {\n-                cmd.args.push(\"/nologo\".into());\n-                let features = env::var(\"CARGO_CFG_TARGET_FEATURE\")\n-                                  .unwrap_or(String::new());\n-                if features.contains(\"crt-static\") {\n-                    cmd.args.push(\"/MT\".into());\n-                } else {\n-                    cmd.args.push(\"/MD\".into());\n-                }\n-                match &opt_level[..] {\n-                    \"z\" | \"s\" => cmd.args.push(\"/Os\".into()),\n-                    \"1\" => cmd.args.push(\"/O1\".into()),\n-                    // -O3 is a valid value for gcc and clang compilers, but not msvc. Cap to /O2.\n-                    \"2\" | \"3\" => cmd.args.push(\"/O2\".into()),\n-                    _ => {}\n-                }\n-            }\n-            ToolFamily::Gnu |\n-            ToolFamily::Clang => {\n-                cmd.args.push(format!(\"-O{}\", opt_level).into());\n-                if !nvcc {\n-                    cmd.args.push(\"-ffunction-sections\".into());\n-                    cmd.args.push(\"-fdata-sections\".into());\n-                    if self.pic.unwrap_or(!target.contains(\"windows-gnu\")) {\n-                        cmd.args.push(\"-fPIC\".into());\n-                    }\n-                } else if self.pic.unwrap_or(false) {\n-                    cmd.args.push(\"-Xcompiler\".into());\n-                    cmd.args.push(\"\\'-fPIC\\'\".into());\n-                }\n-            }\n-        }\n-        for arg in self.envflags(if self.cpp {\"CXXFLAGS\"} else {\"CFLAGS\"}) {\n-            cmd.args.push(arg.into());\n-        }\n-\n-        if self.get_debug() {\n-            cmd.args.push(cmd.family.debug_flag().into());\n-        }\n-\n-        // Target flags\n-        match cmd.family {\n-            ToolFamily::Clang => {\n-                cmd.args.push(format!(\"--target={}\", target).into());\n-            }\n-            ToolFamily::Msvc => {\n-                if target.contains(\"i586\") {\n-                    cmd.args.push(\"/ARCH:IA32\".into());\n-                }\n-            }\n-            ToolFamily::Gnu => {\n-                if target.contains(\"i686\") || target.contains(\"i586\") {\n-                    cmd.args.push(\"-m32\".into());\n-                } else if target.contains(\"x86_64\") || target.contains(\"powerpc64\") {\n-                    cmd.args.push(\"-m64\".into());\n-                }\n-\n-                if target.contains(\"musl\") {\n-                    cmd.args.push(\"-static\".into());\n-                }\n-\n-                // armv7 targets get to use armv7 instructions\n-                if target.starts_with(\"armv7-unknown-linux-\") {\n-                    cmd.args.push(\"-march=armv7-a\".into());\n-                }\n-\n-                // On android we can guarantee some extra float instructions\n-                // (specified in the android spec online)\n-                if target.starts_with(\"armv7-linux-androideabi\") {\n-                    cmd.args.push(\"-march=armv7-a\".into());\n-                    cmd.args.push(\"-mfpu=vfpv3-d16\".into());\n-                }\n-\n-                // For us arm == armv6 by default\n-                if target.starts_with(\"arm-unknown-linux-\") {\n-                    cmd.args.push(\"-march=armv6\".into());\n-                    cmd.args.push(\"-marm\".into());\n-                }\n-\n-                // Turn codegen down on i586 to avoid some instructions.\n-                if target.starts_with(\"i586-unknown-linux-\") {\n-                    cmd.args.push(\"-march=pentium\".into());\n-                }\n-\n-                // Set codegen level for i686 correctly\n-                if target.starts_with(\"i686-unknown-linux-\") {\n-                    cmd.args.push(\"-march=i686\".into());\n-                }\n-\n-                // Looks like `musl-gcc` makes is hard for `-m32` to make its way\n-                // all the way to the linker, so we need to actually instruct the\n-                // linker that we're generating 32-bit executables as well. This'll\n-                // typically only be used for build scripts which transitively use\n-                // these flags that try to compile executables.\n-                if target == \"i686-unknown-linux-musl\" {\n-                    cmd.args.push(\"-Wl,-melf_i386\".into());\n-                }\n-\n-                if target.starts_with(\"thumb\") {\n-                    cmd.args.push(\"-mthumb\".into());\n-\n-                    if target.ends_with(\"eabihf\") {\n-                        cmd.args.push(\"-mfloat-abi=hard\".into())\n-                    }\n-                }\n-                if target.starts_with(\"thumbv6m\") {\n-                    cmd.args.push(\"-march=armv6s-m\".into());\n-                }\n-                if target.starts_with(\"thumbv7em\") {\n-                    cmd.args.push(\"-march=armv7e-m\".into());\n-\n-                    if target.ends_with(\"eabihf\") {\n-                        cmd.args.push(\"-mfpu=fpv4-sp-d16\".into())\n-                    }\n-                }\n-                if target.starts_with(\"thumbv7m\") {\n-                    cmd.args.push(\"-march=armv7-m\".into());\n-                }\n-            }\n-        }\n-\n-        if target.contains(\"-ios\") {\n-            // FIXME: potential bug. iOS is always compiled with Clang, but Gcc compiler may be\n-            // detected instead.\n-            self.ios_flags(&mut cmd);\n-        }\n-\n-        if self.cpp {\n-            match (self.cpp_set_stdlib.as_ref(), cmd.family) {\n-                (None, _) => { }\n-                (Some(stdlib), ToolFamily::Gnu) |\n-                (Some(stdlib), ToolFamily::Clang) => {\n-                    cmd.args.push(format!(\"-stdlib=lib{}\", stdlib).into());\n-                }\n-                _ => {\n-                    println!(\"cargo:warning=cpp_set_stdlib is specified, but the {:?} compiler \\\n-                              does not support this option, ignored\", cmd.family);\n-                }\n-            }\n-        }\n-\n-        for directory in self.include_directories.iter() {\n-            cmd.args.push(cmd.family.include_flag().into());\n-            cmd.args.push(directory.into());\n-        }\n-\n-        for flag in self.flags.iter() {\n-            cmd.args.push(flag.into());\n-        }\n-\n-        for &(ref key, ref value) in self.definitions.iter() {\n-            let lead = if let ToolFamily::Msvc = cmd.family {\"/\"} else {\"-\"};\n-            if let &Some(ref value) = value {\n-                cmd.args.push(format!(\"{}D{}={}\", lead, key, value).into());\n-            } else {\n-                cmd.args.push(format!(\"{}D{}\", lead, key).into());\n-            }\n-        }\n-        cmd\n-    }\n-\n-    fn msvc_macro_assembler(&self) -> (Command, String) {\n-        let target = self.get_target();\n-        let tool = if target.contains(\"x86_64\") {\n-            \"ml64.exe\"\n-        } else {\n-            \"ml.exe\"\n-        };\n-        let mut cmd = windows_registry::find(&target, tool).unwrap_or_else(|| self.cmd(tool));\n-        for directory in self.include_directories.iter() {\n-            cmd.arg(\"/I\").arg(directory);\n-        }\n-        for &(ref key, ref value) in self.definitions.iter() {\n-            if let &Some(ref value) = value {\n-                cmd.arg(&format!(\"/D{}={}\", key, value));\n-            } else {\n-                cmd.arg(&format!(\"/D{}\", key));\n-            }\n-        }\n-\n-        if target.contains(\"i686\") || target.contains(\"i586\") {\n-            cmd.arg(\"/safeseh\");\n-        }\n-        for flag in self.flags.iter() {\n-            cmd.arg(flag);\n-        }\n-\n-        (cmd, tool.to_string())\n-    }\n-\n-    fn assemble(&self, lib_name: &str, dst: &Path, objects: &[PathBuf]) {\n-        // Delete the destination if it exists as the `ar` tool at least on Unix\n-        // appends to it, which we don't want.\n-        let _ = fs::remove_file(&dst);\n-\n-        let target = self.get_target();\n-        if target.contains(\"msvc\") {\n-            let mut cmd = match self.archiver {\n-                Some(ref s) => self.cmd(s),\n-                None => windows_registry::find(&target, \"lib.exe\").unwrap_or(self.cmd(\"lib.exe\")),\n-            };\n-            let mut out = OsString::from(\"/OUT:\");\n-            out.push(dst);\n-            run(cmd.arg(out)\n-                    .arg(\"/nologo\")\n-                    .args(objects)\n-                    .args(&self.objects),\n-                \"lib.exe\");\n-\n-            // The Rust compiler will look for libfoo.a and foo.lib, but the\n-            // MSVC linker will also be passed foo.lib, so be sure that both\n-            // exist for now.\n-            let lib_dst = dst.with_file_name(format!(\"{}.lib\", lib_name));\n-            let _ = fs::remove_file(&lib_dst);\n-            fs::hard_link(&dst, &lib_dst)\n-                .or_else(|_| {\n-                    // if hard-link fails, just copy (ignoring the number of bytes written)\n-                    fs::copy(&dst, &lib_dst).map(|_| ())\n-                })\n-                .ok()\n-                .expect(\"Copying from {:?} to {:?} failed.\");;\n-        } else {\n-            let ar = self.get_ar();\n-            let cmd = ar.file_name().unwrap().to_string_lossy();\n-            run(self.cmd(&ar)\n-                    .arg(\"crs\")\n-                    .arg(dst)\n-                    .args(objects)\n-                    .args(&self.objects),\n-                &cmd);\n-        }\n-    }\n-\n-    fn ios_flags(&self, cmd: &mut Tool) {\n-        enum ArchSpec {\n-            Device(&'static str),\n-            Simulator(&'static str),\n-        }\n-\n-        let target = self.get_target();\n-        let arch = target.split('-').nth(0).unwrap();\n-        let arch = match arch {\n-            \"arm\" | \"armv7\" | \"thumbv7\" => ArchSpec::Device(\"armv7\"),\n-            \"armv7s\" | \"thumbv7s\" => ArchSpec::Device(\"armv7s\"),\n-            \"arm64\" | \"aarch64\" => ArchSpec::Device(\"arm64\"),\n-            \"i386\" | \"i686\" => ArchSpec::Simulator(\"-m32\"),\n-            \"x86_64\" => ArchSpec::Simulator(\"-m64\"),\n-            _ => fail(\"Unknown arch for iOS target\"),\n-        };\n-\n-        let sdk = match arch {\n-            ArchSpec::Device(arch) => {\n-                cmd.args.push(\"-arch\".into());\n-                cmd.args.push(arch.into());\n-                cmd.args.push(\"-miphoneos-version-min=7.0\".into());\n-                \"iphoneos\"\n-            }\n-            ArchSpec::Simulator(arch) => {\n-                cmd.args.push(arch.into());\n-                cmd.args.push(\"-mios-simulator-version-min=7.0\".into());\n-                \"iphonesimulator\"\n-            }\n-        };\n-\n-        self.print(&format!(\"Detecting iOS SDK path for {}\", sdk));\n-        let sdk_path = self.cmd(\"xcrun\")\n-            .arg(\"--show-sdk-path\")\n-            .arg(\"--sdk\")\n-            .arg(sdk)\n-            .stderr(Stdio::inherit())\n-            .output()\n-            .unwrap()\n-            .stdout;\n-\n-        let sdk_path = String::from_utf8(sdk_path).unwrap();\n-\n-        cmd.args.push(\"-isysroot\".into());\n-        cmd.args.push(sdk_path.trim().into());\n-    }\n-\n-    fn cmd<P: AsRef<OsStr>>(&self, prog: P) -> Command {\n-        let mut cmd = Command::new(prog);\n-        for &(ref a, ref b) in self.env.iter() {\n-            cmd.env(a, b);\n-        }\n-        return cmd;\n-    }\n-\n-    fn get_base_compiler(&self) -> Tool {\n-        if let Some(ref c) = self.compiler {\n-            return Tool::new(c.clone());\n-        }\n-        let host = self.get_host();\n-        let target = self.get_target();\n-        let (env, msvc, gnu, default) = if self.cpp {\n-            (\"CXX\", \"cl.exe\", \"g++\", \"c++\")\n-        } else {\n-            (\"CC\", \"cl.exe\", \"gcc\", \"cc\")\n-        };\n-        self.env_tool(env)\n-            .map(|(tool, args)| {\n-                let mut t = Tool::new(PathBuf::from(tool));\n-                for arg in args {\n-                    t.args.push(arg.into());\n-                }\n-                return t;\n-            })\n-            .or_else(|| {\n-                if target.contains(\"emscripten\") {\n-                    if self.cpp {\n-                        Some(Tool::new(PathBuf::from(\"em++\")))\n-                    } else {\n-                        Some(Tool::new(PathBuf::from(\"emcc\")))\n-                    }\n-                } else {\n-                    None\n-                }\n-            })\n-            .or_else(|| windows_registry::find_tool(&target, \"cl.exe\"))\n-            .unwrap_or_else(|| {\n-                let compiler = if host.contains(\"windows\") && target.contains(\"windows\") {\n-                    if target.contains(\"msvc\") {\n-                        msvc.to_string()\n-                    } else {\n-                        format!(\"{}.exe\", gnu)\n-                    }\n-                } else if target.contains(\"android\") {\n-                    format!(\"{}-{}\", target.replace(\"armv7\", \"arm\"), gnu)\n-                } else if self.get_host() != target {\n-                    // CROSS_COMPILE is of the form: \"arm-linux-gnueabi-\"\n-                    let cc_env = self.getenv(\"CROSS_COMPILE\");\n-                    let cross_compile = cc_env.as_ref().map(|s| s.trim_right_matches('-'));\n-                    let prefix = cross_compile.or(match &target[..] {\n-                        \"aarch64-unknown-linux-gnu\" => Some(\"aarch64-linux-gnu\"),\n-                        \"arm-unknown-linux-gnueabi\" => Some(\"arm-linux-gnueabi\"),\n-                        \"arm-unknown-linux-gnueabihf\" => Some(\"arm-linux-gnueabihf\"),\n-                        \"arm-unknown-linux-musleabi\" => Some(\"arm-linux-musleabi\"),\n-                        \"arm-unknown-linux-musleabihf\" => Some(\"arm-linux-musleabihf\"),\n-                        \"arm-unknown-netbsdelf-eabi\" => Some(\"arm--netbsdelf-eabi\"),\n-                        \"armv6-unknown-netbsdelf-eabihf\" => Some(\"armv6--netbsdelf-eabihf\"),\n-                        \"armv7-unknown-linux-gnueabihf\" => Some(\"arm-linux-gnueabihf\"),\n-                        \"armv7-unknown-linux-musleabihf\" => Some(\"arm-linux-musleabihf\"),\n-                        \"armv7-unknown-netbsdelf-eabihf\" => Some(\"armv7--netbsdelf-eabihf\"),\n-                        \"i686-pc-windows-gnu\" => Some(\"i686-w64-mingw32\"),\n-                        \"i686-unknown-linux-musl\" => Some(\"musl\"),\n-                        \"i686-unknown-netbsdelf\" => Some(\"i486--netbsdelf\"),\n-                        \"mips-unknown-linux-gnu\" => Some(\"mips-linux-gnu\"),\n-                        \"mipsel-unknown-linux-gnu\" => Some(\"mipsel-linux-gnu\"),\n-                        \"mips64-unknown-linux-gnuabi64\" => Some(\"mips64-linux-gnuabi64\"),\n-                        \"mips64el-unknown-linux-gnuabi64\" => Some(\"mips64el-linux-gnuabi64\"),\n-                        \"powerpc-unknown-linux-gnu\" => Some(\"powerpc-linux-gnu\"),\n-                        \"powerpc-unknown-netbsd\" => Some(\"powerpc--netbsd\"),\n-                        \"powerpc64-unknown-linux-gnu\" => Some(\"powerpc-linux-gnu\"),\n-                        \"powerpc64le-unknown-linux-gnu\" => Some(\"powerpc64le-linux-gnu\"),\n-                        \"s390x-unknown-linux-gnu\" => Some(\"s390x-linux-gnu\"),\n-                        \"sparc64-unknown-netbsd\" => Some(\"sparc64--netbsd\"),\n-                        \"thumbv6m-none-eabi\" => Some(\"arm-none-eabi\"),\n-                        \"thumbv7em-none-eabi\" => Some(\"arm-none-eabi\"),\n-                        \"thumbv7em-none-eabihf\" => Some(\"arm-none-eabi\"),\n-                        \"thumbv7m-none-eabi\" => Some(\"arm-none-eabi\"),\n-                        \"x86_64-pc-windows-gnu\" => Some(\"x86_64-w64-mingw32\"),\n-                        \"x86_64-rumprun-netbsd\" => Some(\"x86_64-rumprun-netbsd\"),\n-                        \"x86_64-unknown-linux-musl\" => Some(\"musl\"),\n-                        \"x86_64-unknown-netbsd\" => Some(\"x86_64--netbsd\"),\n-                        _ => None,\n-                    });\n-                    match prefix {\n-                        Some(prefix) => format!(\"{}-{}\", prefix, gnu),\n-                        None => default.to_string(),\n-                    }\n-                } else {\n-                    default.to_string()\n-                };\n-                Tool::new(PathBuf::from(compiler))\n-            })\n-    }\n-\n-    fn get_var(&self, var_base: &str) -> Result<String, String> {\n-        let target = self.get_target();\n-        let host = self.get_host();\n-        let kind = if host == target { \"HOST\" } else { \"TARGET\" };\n-        let target_u = target.replace(\"-\", \"_\");\n-        let res = self.getenv(&format!(\"{}_{}\", var_base, target))\n-            .or_else(|| self.getenv(&format!(\"{}_{}\", var_base, target_u)))\n-            .or_else(|| self.getenv(&format!(\"{}_{}\", kind, var_base)))\n-            .or_else(|| self.getenv(var_base));\n-\n-        match res {\n-            Some(res) => Ok(res),\n-            None => Err(\"could not get environment variable\".to_string()),\n-        }\n-    }\n-\n-    fn envflags(&self, name: &str) -> Vec<String> {\n-        self.get_var(name)\n-            .unwrap_or(String::new())\n-            .split(|c: char| c.is_whitespace())\n-            .filter(|s| !s.is_empty())\n-            .map(|s| s.to_string())\n-            .collect()\n-    }\n-\n-    fn env_tool(&self, name: &str) -> Option<(String, Vec<String>)> {\n-        self.get_var(name).ok().map(|tool| {\n-            let whitelist = [\"ccache\", \"distcc\"];\n-            for t in whitelist.iter() {\n-                if tool.starts_with(t) && tool[t.len()..].starts_with(\" \") {\n-                    return (t.to_string(), vec![tool[t.len()..].trim_left().to_string()]);\n-                }\n-            }\n-            (tool, Vec::new())\n-        })\n-    }\n-\n-    /// Returns the default C++ standard library for the current target: `libc++`\n-    /// for OS X and `libstdc++` for anything else.\n-    fn get_cpp_link_stdlib(&self) -> Option<String> {\n-        self.cpp_link_stdlib.clone().unwrap_or_else(|| {\n-            let target = self.get_target();\n-            if target.contains(\"msvc\") {\n-                None\n-            } else if target.contains(\"darwin\") {\n-                Some(\"c++\".to_string())\n-            } else if target.contains(\"freebsd\") {\n-                Some(\"c++\".to_string())\n-            } else {\n-                Some(\"stdc++\".to_string())\n-            }\n-        })\n-    }\n-\n-    fn get_ar(&self) -> PathBuf {\n-        self.archiver\n-            .clone()\n-            .or_else(|| self.get_var(\"AR\").map(PathBuf::from).ok())\n-            .unwrap_or_else(|| {\n-                if self.get_target().contains(\"android\") {\n-                    PathBuf::from(format!(\"{}-ar\", self.get_target().replace(\"armv7\", \"arm\")))\n-                } else if self.get_target().contains(\"emscripten\") {\n-                    PathBuf::from(\"emar\")\n-                } else {\n-                    PathBuf::from(\"ar\")\n-                }\n-            })\n-    }\n-\n-    fn get_target(&self) -> String {\n-        self.target.clone().unwrap_or_else(|| self.getenv_unwrap(\"TARGET\"))\n-    }\n-\n-    fn get_host(&self) -> String {\n-        self.host.clone().unwrap_or_else(|| self.getenv_unwrap(\"HOST\"))\n-    }\n-\n-    fn get_opt_level(&self) -> String {\n-        self.opt_level.as_ref().cloned().unwrap_or_else(|| self.getenv_unwrap(\"OPT_LEVEL\"))\n-    }\n-\n-    fn get_debug(&self) -> bool {\n-        self.debug.unwrap_or_else(|| self.getenv_unwrap(\"PROFILE\") == \"debug\")\n-    }\n-\n-    fn get_out_dir(&self) -> PathBuf {\n-        self.out_dir.clone().unwrap_or_else(|| env::var_os(\"OUT_DIR\").map(PathBuf::from).unwrap())\n-    }\n-\n-    fn getenv(&self, v: &str) -> Option<String> {\n-        let r = env::var(v).ok();\n-        self.print(&format!(\"{} = {:?}\", v, r));\n-        r\n-    }\n-\n-    fn getenv_unwrap(&self, v: &str) -> String {\n-        match self.getenv(v) {\n-            Some(s) => s,\n-            None => fail(&format!(\"environment variable `{}` not defined\", v)),\n-        }\n-    }\n-\n-    fn print(&self, s: &str) {\n-        if self.cargo_metadata {\n-            println!(\"{}\", s);\n-        }\n-    }\n-}\n-\n-impl Tool {\n-    fn new(path: PathBuf) -> Tool {\n-        // Try to detect family of the tool from its name, falling back to Gnu.\n-        let family = if let Some(fname) = path.file_name().and_then(|p| p.to_str()) {\n-            if fname.contains(\"clang\") {\n-                ToolFamily::Clang\n-            } else if fname.contains(\"cl\") {\n-                ToolFamily::Msvc\n-            } else {\n-                ToolFamily::Gnu\n-            }\n-        } else {\n-            ToolFamily::Gnu\n-        };\n-        Tool {\n-            path: path,\n-            args: Vec::new(),\n-            env: Vec::new(),\n-            family: family\n-        }\n-    }\n-\n-    /// Converts this compiler into a `Command` that's ready to be run.\n-    ///\n-    /// This is useful for when the compiler needs to be executed and the\n-    /// command returned will already have the initial arguments and environment\n-    /// variables configured.\n-    pub fn to_command(&self) -> Command {\n-        let mut cmd = Command::new(&self.path);\n-        cmd.args(&self.args);\n-        for &(ref k, ref v) in self.env.iter() {\n-            cmd.env(k, v);\n-        }\n-        cmd\n-    }\n-\n-    /// Returns the path for this compiler.\n-    ///\n-    /// Note that this may not be a path to a file on the filesystem, e.g. \"cc\",\n-    /// but rather something which will be resolved when a process is spawned.\n-    pub fn path(&self) -> &Path {\n-        &self.path\n-    }\n-\n-    /// Returns the default set of arguments to the compiler needed to produce\n-    /// executables for the target this compiler generates.\n-    pub fn args(&self) -> &[OsString] {\n-        &self.args\n-    }\n-\n-    /// Returns the set of environment variables needed for this compiler to\n-    /// operate.\n-    ///\n-    /// This is typically only used for MSVC compilers currently.\n-    pub fn env(&self) -> &[(OsString, OsString)] {\n-        &self.env\n-    }\n-}\n-\n-fn run(cmd: &mut Command, program: &str) -> Vec<u8> {\n-    println!(\"running: {:?}\", cmd);\n-    // Capture the standard error coming from these programs, and write it out\n-    // with cargo:warning= prefixes. Note that this is a bit wonky to avoid\n-    // requiring the output to be UTF-8, we instead just ship bytes from one\n-    // location to another.\n-    let (spawn_result, stdout) = match cmd.stdout(Stdio::piped()).stderr(Stdio::piped()).spawn() {\n-        Ok(mut child) => {\n-            let stderr = BufReader::new(child.stderr.take().unwrap());\n-            thread::spawn(move || {\n-                for line in stderr.split(b'\\n').filter_map(|l| l.ok()) {\n-                    print!(\"cargo:warning=\");\n-                    std::io::stdout().write_all(&line).unwrap();\n-                    println!(\"\");\n-                }\n-            });\n-            let mut stdout = vec![];\n-            child.stdout.take().unwrap().read_to_end(&mut stdout).unwrap();\n-            (child.wait(), stdout)\n-        }\n-        Err(e) => (Err(e), vec![]),\n-    };\n-    let status = match spawn_result {\n-        Ok(status) => status,\n-        Err(ref e) if e.kind() == io::ErrorKind::NotFound => {\n-            let extra = if cfg!(windows) {\n-                \" (see https://github.com/alexcrichton/gcc-rs#compile-time-requirements \\\n-                   for help)\"\n-            } else {\n-                \"\"\n-            };\n-            fail(&format!(\"failed to execute command: {}\\nIs `{}` \\\n-                           not installed?{}\",\n-                          e,\n-                          program,\n-                          extra));\n-        }\n-        Err(e) => fail(&format!(\"failed to execute command: {}\", e)),\n-    };\n-    println!(\"{:?}\", status);\n-    if !status.success() {\n-        fail(&format!(\"command did not execute successfully, got: {}\", status));\n-    }\n-    stdout\n-}\n-\n-fn fail(s: &str) -> ! {\n-    println!(\"\\n\\n{}\\n\\n\", s);\n-    panic!()\n-}"}, {"sha": "a45272344db403c87e1005a7315e14a755f47804", "filename": "src/vendor/gcc/src/registry.rs", "status": "removed", "additions": 0, "deletions": 190, "changes": 190, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Fsrc%2Fregistry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Fsrc%2Fregistry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2Fsrc%2Fregistry.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,190 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-use std::ffi::{OsString, OsStr};\n-use std::io;\n-use std::ops::RangeFrom;\n-use std::os::raw;\n-use std::os::windows::prelude::*;\n-\n-pub struct RegistryKey(Repr);\n-\n-type HKEY = *mut u8;\n-type DWORD = u32;\n-type LPDWORD = *mut DWORD;\n-type LPCWSTR = *const u16;\n-type LPWSTR = *mut u16;\n-type LONG = raw::c_long;\n-type PHKEY = *mut HKEY;\n-type PFILETIME = *mut u8;\n-type LPBYTE = *mut u8;\n-type REGSAM = u32;\n-\n-const ERROR_SUCCESS: DWORD = 0;\n-const ERROR_NO_MORE_ITEMS: DWORD = 259;\n-const HKEY_LOCAL_MACHINE: HKEY = 0x80000002 as HKEY;\n-const REG_SZ: DWORD = 1;\n-const KEY_READ: DWORD = 0x20019;\n-const KEY_WOW64_32KEY: DWORD = 0x200;\n-\n-#[link(name = \"advapi32\")]\n-extern \"system\" {\n-    fn RegOpenKeyExW(key: HKEY,\n-                     lpSubKey: LPCWSTR,\n-                     ulOptions: DWORD,\n-                     samDesired: REGSAM,\n-                     phkResult: PHKEY)\n-                     -> LONG;\n-    fn RegEnumKeyExW(key: HKEY,\n-                     dwIndex: DWORD,\n-                     lpName: LPWSTR,\n-                     lpcName: LPDWORD,\n-                     lpReserved: LPDWORD,\n-                     lpClass: LPWSTR,\n-                     lpcClass: LPDWORD,\n-                     lpftLastWriteTime: PFILETIME)\n-                     -> LONG;\n-    fn RegQueryValueExW(hKey: HKEY,\n-                        lpValueName: LPCWSTR,\n-                        lpReserved: LPDWORD,\n-                        lpType: LPDWORD,\n-                        lpData: LPBYTE,\n-                        lpcbData: LPDWORD)\n-                        -> LONG;\n-    fn RegCloseKey(hKey: HKEY) -> LONG;\n-}\n-\n-struct OwnedKey(HKEY);\n-\n-enum Repr {\n-    Const(HKEY),\n-    Owned(OwnedKey),\n-}\n-\n-pub struct Iter<'a> {\n-    idx: RangeFrom<DWORD>,\n-    key: &'a RegistryKey,\n-}\n-\n-unsafe impl Sync for Repr {}\n-unsafe impl Send for Repr {}\n-\n-pub static LOCAL_MACHINE: RegistryKey = RegistryKey(Repr::Const(HKEY_LOCAL_MACHINE));\n-\n-impl RegistryKey {\n-    fn raw(&self) -> HKEY {\n-        match self.0 {\n-            Repr::Const(val) => val,\n-            Repr::Owned(ref val) => val.0,\n-        }\n-    }\n-\n-    pub fn open(&self, key: &OsStr) -> io::Result<RegistryKey> {\n-        let key = key.encode_wide().chain(Some(0)).collect::<Vec<_>>();\n-        let mut ret = 0 as *mut _;\n-        let err = unsafe {\n-            RegOpenKeyExW(self.raw(),\n-                          key.as_ptr(),\n-                          0,\n-                          KEY_READ | KEY_WOW64_32KEY,\n-                          &mut ret)\n-        };\n-        if err == ERROR_SUCCESS as LONG {\n-            Ok(RegistryKey(Repr::Owned(OwnedKey(ret))))\n-        } else {\n-            Err(io::Error::from_raw_os_error(err as i32))\n-        }\n-    }\n-\n-    pub fn iter(&self) -> Iter {\n-        Iter {\n-            idx: 0..,\n-            key: self,\n-        }\n-    }\n-\n-    pub fn query_str(&self, name: &str) -> io::Result<OsString> {\n-        let name: &OsStr = name.as_ref();\n-        let name = name.encode_wide().chain(Some(0)).collect::<Vec<_>>();\n-        let mut len = 0;\n-        let mut kind = 0;\n-        unsafe {\n-            let err = RegQueryValueExW(self.raw(),\n-                                       name.as_ptr(),\n-                                       0 as *mut _,\n-                                       &mut kind,\n-                                       0 as *mut _,\n-                                       &mut len);\n-            if err != ERROR_SUCCESS as LONG {\n-                return Err(io::Error::from_raw_os_error(err as i32));\n-            }\n-            if kind != REG_SZ {\n-                return Err(io::Error::new(io::ErrorKind::Other, \"registry key wasn't a string\"));\n-            }\n-\n-            // The length here is the length in bytes, but we're using wide\n-            // characters so we need to be sure to halve it for the capacity\n-            // passed in.\n-            let mut v = Vec::with_capacity(len as usize / 2);\n-            let err = RegQueryValueExW(self.raw(),\n-                                       name.as_ptr(),\n-                                       0 as *mut _,\n-                                       0 as *mut _,\n-                                       v.as_mut_ptr() as *mut _,\n-                                       &mut len);\n-            if err != ERROR_SUCCESS as LONG {\n-                return Err(io::Error::from_raw_os_error(err as i32));\n-            }\n-            v.set_len(len as usize / 2);\n-\n-            // Some registry keys may have a terminating nul character, but\n-            // we're not interested in that, so chop it off if it's there.\n-            if v[v.len() - 1] == 0 {\n-                v.pop();\n-            }\n-            Ok(OsString::from_wide(&v))\n-        }\n-    }\n-}\n-\n-impl Drop for OwnedKey {\n-    fn drop(&mut self) {\n-        unsafe {\n-            RegCloseKey(self.0);\n-        }\n-    }\n-}\n-\n-impl<'a> Iterator for Iter<'a> {\n-    type Item = io::Result<OsString>;\n-\n-    fn next(&mut self) -> Option<io::Result<OsString>> {\n-        self.idx.next().and_then(|i| unsafe {\n-            let mut v = Vec::with_capacity(256);\n-            let mut len = v.capacity() as DWORD;\n-            let ret = RegEnumKeyExW(self.key.raw(),\n-                                    i,\n-                                    v.as_mut_ptr(),\n-                                    &mut len,\n-                                    0 as *mut _,\n-                                    0 as *mut _,\n-                                    0 as *mut _,\n-                                    0 as *mut _);\n-            if ret == ERROR_NO_MORE_ITEMS as LONG {\n-                None\n-            } else if ret != ERROR_SUCCESS as LONG {\n-                Some(Err(io::Error::from_raw_os_error(ret as i32)))\n-            } else {\n-                v.set_len(len as usize);\n-                Some(Ok(OsString::from_wide(&v)))\n-            }\n-        })\n-    }\n-}"}, {"sha": "08b1df5f9b24af3926861ae5f2b05cb97c2e3204", "filename": "src/vendor/gcc/src/windows_registry.rs", "status": "removed", "additions": 0, "deletions": 424, "changes": 424, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Fsrc%2Fwindows_registry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Fsrc%2Fwindows_registry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2Fsrc%2Fwindows_registry.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,424 +0,0 @@\n-// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//! A helper module to probe the Windows Registry when looking for\n-//! windows-specific tools.\n-\n-use std::process::Command;\n-\n-use Tool;\n-\n-macro_rules! otry {\n-    ($expr:expr) => (match $expr {\n-        Some(val) => val,\n-        None => return None,\n-    })\n-}\n-\n-/// Attempts to find a tool within an MSVC installation using the Windows\n-/// registry as a point to search from.\n-///\n-/// The `target` argument is the target that the tool should work for (e.g.\n-/// compile or link for) and the `tool` argument is the tool to find (e.g.\n-/// `cl.exe` or `link.exe`).\n-///\n-/// This function will return `None` if the tool could not be found, or it will\n-/// return `Some(cmd)` which represents a command that's ready to execute the\n-/// tool with the appropriate environment variables set.\n-///\n-/// Note that this function always returns `None` for non-MSVC targets.\n-pub fn find(target: &str, tool: &str) -> Option<Command> {\n-    find_tool(target, tool).map(|c| c.to_command())\n-}\n-\n-/// Similar to the `find` function above, this function will attempt the same\n-/// operation (finding a MSVC tool in a local install) but instead returns a\n-/// `Tool` which may be introspected.\n-#[cfg(not(windows))]\n-pub fn find_tool(_target: &str, _tool: &str) -> Option<Tool> {\n-    None\n-}\n-\n-/// Documented above.\n-#[cfg(windows)]\n-pub fn find_tool(target: &str, tool: &str) -> Option<Tool> {\n-    use std::env;\n-    use std::ffi::OsString;\n-    use std::mem;\n-    use std::path::{Path, PathBuf};\n-    use registry::{RegistryKey, LOCAL_MACHINE};\n-\n-    struct MsvcTool {\n-        tool: PathBuf,\n-        libs: Vec<PathBuf>,\n-        path: Vec<PathBuf>,\n-        include: Vec<PathBuf>,\n-    }\n-\n-    impl MsvcTool {\n-        fn new(tool: PathBuf) -> MsvcTool {\n-            MsvcTool {\n-                tool: tool,\n-                libs: Vec::new(),\n-                path: Vec::new(),\n-                include: Vec::new(),\n-            }\n-        }\n-\n-        fn into_tool(self) -> Tool {\n-            let MsvcTool { tool, libs, path, include } = self;\n-            let mut tool = Tool::new(tool.into());\n-            add_env(&mut tool, \"LIB\", libs);\n-            add_env(&mut tool, \"PATH\", path);\n-            add_env(&mut tool, \"INCLUDE\", include);\n-            tool\n-        }\n-    }\n-\n-    // This logic is all tailored for MSVC, if we're not that then bail out\n-    // early.\n-    if !target.contains(\"msvc\") {\n-        return None;\n-    }\n-\n-    // Looks like msbuild isn't located in the same location as other tools like\n-    // cl.exe and lib.exe. To handle this we probe for it manually with\n-    // dedicated registry keys.\n-    if tool.contains(\"msbuild\") {\n-        return find_msbuild(target);\n-    }\n-\n-    // If VCINSTALLDIR is set, then someone's probably already run vcvars and we\n-    // should just find whatever that indicates.\n-    if env::var_os(\"VCINSTALLDIR\").is_some() {\n-        return env::var_os(\"PATH\")\n-            .and_then(|path| env::split_paths(&path).map(|p| p.join(tool)).find(|p| p.exists()))\n-            .map(|path| Tool::new(path.into()));\n-    }\n-\n-    // Ok, if we're here, now comes the fun part of the probing. Default shells\n-    // or shells like MSYS aren't really configured to execute `cl.exe` and the\n-    // various compiler tools shipped as part of Visual Studio. Here we try to\n-    // first find the relevant tool, then we also have to be sure to fill in\n-    // environment variables like `LIB`, `INCLUDE`, and `PATH` to ensure that\n-    // the tool is actually usable.\n-\n-    return find_msvc_latest(tool, target, \"15.0\")\n-        .or_else(|| find_msvc_latest(tool, target, \"14.0\"))\n-        .or_else(|| find_msvc_12(tool, target))\n-        .or_else(|| find_msvc_11(tool, target));\n-\n-    // For MSVC 14 or newer we need to find the Universal CRT as well as either\n-    // the Windows 10 SDK or Windows 8.1 SDK.\n-    fn find_msvc_latest(tool: &str, target: &str, ver: &str) -> Option<Tool> {\n-        let vcdir = otry!(get_vc_dir(ver));\n-        let mut tool = otry!(get_tool(tool, &vcdir, target));\n-        let sub = otry!(lib_subdir(target));\n-        let (ucrt, ucrt_version) = otry!(get_ucrt_dir());\n-\n-        let ucrt_include = ucrt.join(\"include\").join(&ucrt_version);\n-        tool.include.push(ucrt_include.join(\"ucrt\"));\n-\n-        let ucrt_lib = ucrt.join(\"lib\").join(&ucrt_version);\n-        tool.libs.push(ucrt_lib.join(\"ucrt\").join(sub));\n-\n-        if let Some((sdk, version)) = get_sdk10_dir() {\n-            tool.path.push(sdk.join(\"bin\").join(sub));\n-            let sdk_lib = sdk.join(\"lib\").join(&version);\n-            tool.libs.push(sdk_lib.join(\"um\").join(sub));\n-            let sdk_include = sdk.join(\"include\").join(&version);\n-            tool.include.push(sdk_include.join(\"um\"));\n-            tool.include.push(sdk_include.join(\"winrt\"));\n-            tool.include.push(sdk_include.join(\"shared\"));\n-        } else if let Some(sdk) = get_sdk81_dir() {\n-            tool.path.push(sdk.join(\"bin\").join(sub));\n-            let sdk_lib = sdk.join(\"lib\").join(\"winv6.3\");\n-            tool.libs.push(sdk_lib.join(\"um\").join(sub));\n-            let sdk_include = sdk.join(\"include\");\n-            tool.include.push(sdk_include.join(\"um\"));\n-            tool.include.push(sdk_include.join(\"winrt\"));\n-            tool.include.push(sdk_include.join(\"shared\"));\n-        } else {\n-            return None;\n-        }\n-        Some(tool.into_tool())\n-    }\n-\n-    // For MSVC 12 we need to find the Windows 8.1 SDK.\n-    fn find_msvc_12(tool: &str, target: &str) -> Option<Tool> {\n-        let vcdir = otry!(get_vc_dir(\"12.0\"));\n-        let mut tool = otry!(get_tool(tool, &vcdir, target));\n-        let sub = otry!(lib_subdir(target));\n-        let sdk81 = otry!(get_sdk81_dir());\n-        tool.path.push(sdk81.join(\"bin\").join(sub));\n-        let sdk_lib = sdk81.join(\"lib\").join(\"winv6.3\");\n-        tool.libs.push(sdk_lib.join(\"um\").join(sub));\n-        let sdk_include = sdk81.join(\"include\");\n-        tool.include.push(sdk_include.join(\"shared\"));\n-        tool.include.push(sdk_include.join(\"um\"));\n-        tool.include.push(sdk_include.join(\"winrt\"));\n-        Some(tool.into_tool())\n-    }\n-\n-    // For MSVC 11 we need to find the Windows 8 SDK.\n-    fn find_msvc_11(tool: &str, target: &str) -> Option<Tool> {\n-        let vcdir = otry!(get_vc_dir(\"11.0\"));\n-        let mut tool = otry!(get_tool(tool, &vcdir, target));\n-        let sub = otry!(lib_subdir(target));\n-        let sdk8 = otry!(get_sdk8_dir());\n-        tool.path.push(sdk8.join(\"bin\").join(sub));\n-        let sdk_lib = sdk8.join(\"lib\").join(\"win8\");\n-        tool.libs.push(sdk_lib.join(\"um\").join(sub));\n-        let sdk_include = sdk8.join(\"include\");\n-        tool.include.push(sdk_include.join(\"shared\"));\n-        tool.include.push(sdk_include.join(\"um\"));\n-        tool.include.push(sdk_include.join(\"winrt\"));\n-        Some(tool.into_tool())\n-    }\n-\n-    fn add_env(tool: &mut Tool, env: &str, paths: Vec<PathBuf>) {\n-        let prev = env::var_os(env).unwrap_or(OsString::new());\n-        let prev = env::split_paths(&prev);\n-        let new = paths.into_iter().chain(prev);\n-        tool.env.push((env.to_string().into(), env::join_paths(new).unwrap()));\n-    }\n-\n-    // Given a possible MSVC installation directory, we look for the linker and\n-    // then add the MSVC library path.\n-    fn get_tool(tool: &str, path: &Path, target: &str) -> Option<MsvcTool> {\n-        bin_subdir(target)\n-            .into_iter()\n-            .map(|(sub, host)| (path.join(\"bin\").join(sub).join(tool), path.join(\"bin\").join(host)))\n-            .filter(|&(ref path, _)| path.is_file())\n-            .map(|(path, host)| {\n-                let mut tool = MsvcTool::new(path);\n-                tool.path.push(host);\n-                tool\n-            })\n-            .filter_map(|mut tool| {\n-                let sub = otry!(vc_lib_subdir(target));\n-                tool.libs.push(path.join(\"lib\").join(sub));\n-                tool.include.push(path.join(\"include\"));\n-                let atlmfc_path = path.join(\"atlmfc\");\n-                if atlmfc_path.exists() {\n-                    tool.libs.push(atlmfc_path.join(\"lib\").join(sub));\n-                    tool.include.push(atlmfc_path.join(\"include\"));\n-                }\n-                Some(tool)\n-            })\n-            .next()\n-    }\n-\n-    // To find MSVC we look in a specific registry key for the version we are\n-    // trying to find.\n-    fn get_vc_dir(ver: &str) -> Option<PathBuf> {\n-        let key = r\"SOFTWARE\\Microsoft\\VisualStudio\\SxS\\VC7\";\n-        let key = otry!(LOCAL_MACHINE.open(key.as_ref()).ok());\n-        let path = otry!(key.query_str(ver).ok());\n-        Some(path.into())\n-    }\n-\n-    // To find the Universal CRT we look in a specific registry key for where\n-    // all the Universal CRTs are located and then sort them asciibetically to\n-    // find the newest version. While this sort of sorting isn't ideal,  it is\n-    // what vcvars does so that's good enough for us.\n-    //\n-    // Returns a pair of (root, version) for the ucrt dir if found\n-    fn get_ucrt_dir() -> Option<(PathBuf, String)> {\n-        let key = r\"SOFTWARE\\Microsoft\\Windows Kits\\Installed Roots\";\n-        let key = otry!(LOCAL_MACHINE.open(key.as_ref()).ok());\n-        let root = otry!(key.query_str(\"KitsRoot10\").ok());\n-        let readdir = otry!(Path::new(&root).join(\"lib\").read_dir().ok());\n-        let max_libdir = otry!(readdir.filter_map(|dir| dir.ok())\n-            .map(|dir| dir.path())\n-            .filter(|dir| {\n-                dir.components()\n-                    .last()\n-                    .and_then(|c| c.as_os_str().to_str())\n-                    .map(|c| c.starts_with(\"10.\") && dir.join(\"ucrt\").is_dir())\n-                    .unwrap_or(false)\n-            })\n-            .max());\n-        let version = max_libdir.components().last().unwrap();\n-        let version = version.as_os_str().to_str().unwrap().to_string();\n-        Some((root.into(), version))\n-    }\n-\n-    // Vcvars finds the correct version of the Windows 10 SDK by looking\n-    // for the include `um\\Windows.h` because sometimes a given version will\n-    // only have UCRT bits without the rest of the SDK. Since we only care about\n-    // libraries and not includes, we instead look for `um\\x64\\kernel32.lib`.\n-    // Since the 32-bit and 64-bit libraries are always installed together we\n-    // only need to bother checking x64, making this code a tiny bit simpler.\n-    // Like we do for the Universal CRT, we sort the possibilities\n-    // asciibetically to find the newest one as that is what vcvars does.\n-    fn get_sdk10_dir() -> Option<(PathBuf, String)> {\n-        let key = r\"SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v10.0\";\n-        let key = otry!(LOCAL_MACHINE.open(key.as_ref()).ok());\n-        let root = otry!(key.query_str(\"InstallationFolder\").ok());\n-        let readdir = otry!(Path::new(&root).join(\"lib\").read_dir().ok());\n-        let mut dirs = readdir.filter_map(|dir| dir.ok())\n-            .map(|dir| dir.path())\n-            .collect::<Vec<_>>();\n-        dirs.sort();\n-        let dir = otry!(dirs.into_iter()\n-            .rev()\n-            .filter(|dir| dir.join(\"um\").join(\"x64\").join(\"kernel32.lib\").is_file())\n-            .next());\n-        let version = dir.components().last().unwrap();\n-        let version = version.as_os_str().to_str().unwrap().to_string();\n-        Some((root.into(), version))\n-    }\n-\n-    // Interestingly there are several subdirectories, `win7` `win8` and\n-    // `winv6.3`. Vcvars seems to only care about `winv6.3` though, so the same\n-    // applies to us. Note that if we were targetting kernel mode drivers\n-    // instead of user mode applications, we would care.\n-    fn get_sdk81_dir() -> Option<PathBuf> {\n-        let key = r\"SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v8.1\";\n-        let key = otry!(LOCAL_MACHINE.open(key.as_ref()).ok());\n-        let root = otry!(key.query_str(\"InstallationFolder\").ok());\n-        Some(root.into())\n-    }\n-\n-    fn get_sdk8_dir() -> Option<PathBuf> {\n-        let key = r\"SOFTWARE\\Microsoft\\Microsoft SDKs\\Windows\\v8.0\";\n-        let key = otry!(LOCAL_MACHINE.open(key.as_ref()).ok());\n-        let root = otry!(key.query_str(\"InstallationFolder\").ok());\n-        Some(root.into())\n-    }\n-\n-    const PROCESSOR_ARCHITECTURE_INTEL: u16 = 0;\n-    const PROCESSOR_ARCHITECTURE_AMD64: u16 = 9;\n-    const X86: u16 = PROCESSOR_ARCHITECTURE_INTEL;\n-    const X86_64: u16 = PROCESSOR_ARCHITECTURE_AMD64;\n-\n-    // When choosing the tool to use, we have to choose the one which matches\n-    // the target architecture. Otherwise we end up in situations where someone\n-    // on 32-bit Windows is trying to cross compile to 64-bit and it tries to\n-    // invoke the native 64-bit compiler which won't work.\n-    //\n-    // For the return value of this function, the first member of the tuple is\n-    // the folder of the tool we will be invoking, while the second member is\n-    // the folder of the host toolchain for that tool which is essential when\n-    // using a cross linker. We return a Vec since on x64 there are often two\n-    // linkers that can target the architecture we desire. The 64-bit host\n-    // linker is preferred, and hence first, due to 64-bit allowing it more\n-    // address space to work with and potentially being faster.\n-    fn bin_subdir(target: &str) -> Vec<(&'static str, &'static str)> {\n-        let arch = target.split('-').next().unwrap();\n-        match (arch, host_arch()) {\n-            (\"i586\", X86) | (\"i686\", X86) => vec![(\"\", \"\")],\n-            (\"i586\", X86_64) | (\"i686\", X86_64) => vec![(\"amd64_x86\", \"amd64\"), (\"\", \"\")],\n-            (\"x86_64\", X86) => vec![(\"x86_amd64\", \"\")],\n-            (\"x86_64\", X86_64) => vec![(\"amd64\", \"amd64\"), (\"x86_amd64\", \"\")],\n-            (\"arm\", X86) => vec![(\"x86_arm\", \"\")],\n-            (\"arm\", X86_64) => vec![(\"amd64_arm\", \"amd64\"), (\"x86_arm\", \"\")],\n-            _ => vec![],\n-        }\n-    }\n-\n-    fn lib_subdir(target: &str) -> Option<&'static str> {\n-        let arch = target.split('-').next().unwrap();\n-        match arch {\n-            \"i586\" | \"i686\" => Some(\"x86\"),\n-            \"x86_64\" => Some(\"x64\"),\n-            \"arm\" => Some(\"arm\"),\n-            _ => None,\n-        }\n-    }\n-\n-    // MSVC's x86 libraries are not in a subfolder\n-    fn vc_lib_subdir(target: &str) -> Option<&'static str> {\n-        let arch = target.split('-').next().unwrap();\n-        match arch {\n-            \"i586\" | \"i686\" => Some(\"\"),\n-            \"x86_64\" => Some(\"amd64\"),\n-            \"arm\" => Some(\"arm\"),\n-            _ => None,\n-        }\n-    }\n-\n-    #[allow(bad_style)]\n-    fn host_arch() -> u16 {\n-        type DWORD = u32;\n-        type WORD = u16;\n-        type LPVOID = *mut u8;\n-        type DWORD_PTR = usize;\n-\n-        #[repr(C)]\n-        struct SYSTEM_INFO {\n-            wProcessorArchitecture: WORD,\n-            _wReserved: WORD,\n-            _dwPageSize: DWORD,\n-            _lpMinimumApplicationAddress: LPVOID,\n-            _lpMaximumApplicationAddress: LPVOID,\n-            _dwActiveProcessorMask: DWORD_PTR,\n-            _dwNumberOfProcessors: DWORD,\n-            _dwProcessorType: DWORD,\n-            _dwAllocationGranularity: DWORD,\n-            _wProcessorLevel: WORD,\n-            _wProcessorRevision: WORD,\n-        }\n-\n-        extern \"system\" {\n-            fn GetNativeSystemInfo(lpSystemInfo: *mut SYSTEM_INFO);\n-        }\n-\n-        unsafe {\n-            let mut info = mem::zeroed();\n-            GetNativeSystemInfo(&mut info);\n-            info.wProcessorArchitecture\n-        }\n-    }\n-\n-    // Given a registry key, look at all the sub keys and find the one which has\n-    // the maximal numeric value.\n-    //\n-    // Returns the name of the maximal key as well as the opened maximal key.\n-    fn max_version(key: &RegistryKey) -> Option<(OsString, RegistryKey)> {\n-        let mut max_vers = 0;\n-        let mut max_key = None;\n-        for subkey in key.iter().filter_map(|k| k.ok()) {\n-            let val = subkey.to_str()\n-                .and_then(|s| s.trim_left_matches(\"v\").replace(\".\", \"\").parse().ok());\n-            let val = match val {\n-                Some(s) => s,\n-                None => continue,\n-            };\n-            if val > max_vers {\n-                if let Ok(k) = key.open(&subkey) {\n-                    max_vers = val;\n-                    max_key = Some((subkey, k));\n-                }\n-            }\n-        }\n-        max_key\n-    }\n-\n-    // see http://stackoverflow.com/questions/328017/path-to-msbuild\n-    fn find_msbuild(target: &str) -> Option<Tool> {\n-        let key = r\"SOFTWARE\\Microsoft\\MSBuild\\ToolsVersions\";\n-        LOCAL_MACHINE.open(key.as_ref())\n-            .ok()\n-            .and_then(|key| {\n-                max_version(&key).and_then(|(_vers, key)| key.query_str(\"MSBuildToolsPath\").ok())\n-            })\n-            .map(|path| {\n-                let mut path = PathBuf::from(path);\n-                path.push(\"MSBuild.exe\");\n-                let mut tool = Tool::new(path);\n-                if target.contains(\"x86_64\") {\n-                    tool.env.push((\"Platform\".into(), \"X64\".into()));\n-                }\n-                tool\n-            })\n-    }\n-}"}, {"sha": "559dbe8ad4e50cf7118bd88b743c79c82d24ceb2", "filename": "src/vendor/gcc/tests/cc_env.rs", "status": "removed", "additions": 0, "deletions": 49, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Ftests%2Fcc_env.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Ftests%2Fcc_env.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2Ftests%2Fcc_env.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,49 +0,0 @@\n-extern crate tempdir;\n-extern crate gcc;\n-\n-use std::env;\n-\n-mod support;\n-use support::Test;\n-\n-#[test]\n-fn main() {\n-    ccache();\n-    distcc();\n-    ccache_spaces();\n-}\n-\n-fn ccache() {\n-    let test = Test::gnu();\n-    test.shim(\"ccache\");\n-\n-    env::set_var(\"CC\", \"ccache lol-this-is-not-a-compiler foo\");\n-    test.gcc().file(\"foo.c\").compile(\"libfoo.a\");\n-\n-    test.cmd(0)\n-        .must_have(\"lol-this-is-not-a-compiler foo\")\n-        .must_have(\"foo.c\")\n-        .must_not_have(\"ccache\");\n-}\n-\n-fn ccache_spaces() {\n-    let test = Test::gnu();\n-    test.shim(\"ccache\");\n-\n-    env::set_var(\"CC\", \"ccache        lol-this-is-not-a-compiler foo\");\n-    test.gcc().file(\"foo.c\").compile(\"libfoo.a\");\n-    test.cmd(0).must_have(\"lol-this-is-not-a-compiler foo\");\n-}\n-\n-fn distcc() {\n-    let test = Test::gnu();\n-    test.shim(\"distcc\");\n-\n-    env::set_var(\"CC\", \"distcc lol-this-is-not-a-compiler foo\");\n-    test.gcc().file(\"foo.c\").compile(\"libfoo.a\");\n-\n-    test.cmd(0)\n-        .must_have(\"lol-this-is-not-a-compiler foo\")\n-        .must_have(\"foo.c\")\n-        .must_not_have(\"distcc\");\n-}"}, {"sha": "135a6635b5935ae206759a2c8dcd49e77829b1fe", "filename": "src/vendor/gcc/tests/support/mod.rs", "status": "removed", "additions": 0, "deletions": 112, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Ftests%2Fsupport%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Ftests%2Fsupport%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2Ftests%2Fsupport%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,112 +0,0 @@\n-#![allow(dead_code)]\n-\n-use std::env;\n-use std::ffi::OsStr;\n-use std::fs::{self, File};\n-use std::io::prelude::*;\n-use std::path::PathBuf;\n-\n-use gcc;\n-use tempdir::TempDir;\n-\n-pub struct Test {\n-    pub td: TempDir,\n-    pub gcc: PathBuf,\n-    pub msvc: bool,\n-}\n-\n-pub struct Execution {\n-    args: Vec<String>,\n-}\n-\n-impl Test {\n-    pub fn new() -> Test {\n-        let mut gcc = PathBuf::from(env::current_exe().unwrap());\n-        gcc.pop();\n-        if gcc.ends_with(\"deps\") {\n-            gcc.pop();\n-        }\n-        gcc.push(format!(\"gcc-shim{}\", env::consts::EXE_SUFFIX));\n-        Test {\n-            td: TempDir::new(\"gcc-test\").unwrap(),\n-            gcc: gcc,\n-            msvc: false,\n-        }\n-    }\n-\n-    pub fn gnu() -> Test {\n-        let t = Test::new();\n-        t.shim(\"cc\").shim(\"ar\");\n-        t\n-    }\n-\n-    pub fn msvc() -> Test {\n-        let mut t = Test::new();\n-        t.shim(\"cl\").shim(\"lib.exe\");\n-        t.msvc = true;\n-        t\n-    }\n-\n-    pub fn shim(&self, name: &str) -> &Test {\n-        let fname = format!(\"{}{}\", name, env::consts::EXE_SUFFIX);\n-        fs::hard_link(&self.gcc, self.td.path().join(&fname))\n-            .or_else(|_| fs::copy(&self.gcc, self.td.path().join(&fname)).map(|_| ()))\n-            .unwrap();\n-        self\n-    }\n-\n-    pub fn gcc(&self) -> gcc::Config {\n-        let mut cfg = gcc::Config::new();\n-        let mut path = env::split_paths(&env::var_os(\"PATH\").unwrap()).collect::<Vec<_>>();\n-        path.insert(0, self.td.path().to_owned());\n-        let target = if self.msvc {\n-            \"x86_64-pc-windows-msvc\"\n-        } else {\n-            \"x86_64-unknown-linux-gnu\"\n-        };\n-\n-        cfg.target(target)\n-            .host(target)\n-            .opt_level(2)\n-            .debug(false)\n-            .out_dir(self.td.path())\n-            .__set_env(\"PATH\", env::join_paths(path).unwrap())\n-            .__set_env(\"GCCTEST_OUT_DIR\", self.td.path());\n-        if self.msvc {\n-            cfg.compiler(self.td.path().join(\"cl\"));\n-            cfg.archiver(self.td.path().join(\"lib.exe\"));\n-        }\n-        cfg\n-    }\n-\n-    pub fn cmd(&self, i: u32) -> Execution {\n-        let mut s = String::new();\n-        File::open(self.td.path().join(format!(\"out{}\", i)))\n-            .unwrap()\n-            .read_to_string(&mut s)\n-            .unwrap();\n-        Execution { args: s.lines().map(|s| s.to_string()).collect() }\n-    }\n-}\n-\n-impl Execution {\n-    pub fn must_have<P: AsRef<OsStr>>(&self, p: P) -> &Execution {\n-        if !self.has(p.as_ref()) {\n-            panic!(\"didn't find {:?} in {:?}\", p.as_ref(), self.args);\n-        } else {\n-            self\n-        }\n-    }\n-\n-    pub fn must_not_have<P: AsRef<OsStr>>(&self, p: P) -> &Execution {\n-        if self.has(p.as_ref()) {\n-            panic!(\"found {:?}\", p.as_ref());\n-        } else {\n-            self\n-        }\n-    }\n-\n-    pub fn has(&self, p: &OsStr) -> bool {\n-        self.args.iter().any(|arg| OsStr::new(arg) == p)\n-    }\n-}"}, {"sha": "5a034ff347b240de930e3a28ab5cb60bfa5d211a", "filename": "src/vendor/gcc/tests/test.rs", "status": "removed", "additions": 0, "deletions": 230, "changes": 230, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgcc%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgcc%2Ftests%2Ftest.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,230 +0,0 @@\n-extern crate gcc;\n-extern crate tempdir;\n-\n-use support::Test;\n-\n-mod support;\n-\n-#[test]\n-fn gnu_smoke() {\n-    let test = Test::gnu();\n-    test.gcc()\n-        .file(\"foo.c\")\n-        .compile(\"libfoo.a\");\n-\n-    test.cmd(0)\n-        .must_have(\"-O2\")\n-        .must_have(\"foo.c\")\n-        .must_not_have(\"-g\")\n-        .must_have(\"-c\")\n-        .must_have(\"-ffunction-sections\")\n-        .must_have(\"-fdata-sections\");\n-    test.cmd(1).must_have(test.td.path().join(\"foo.o\"));\n-}\n-\n-#[test]\n-fn gnu_opt_level_1() {\n-    let test = Test::gnu();\n-    test.gcc()\n-        .opt_level(1)\n-        .file(\"foo.c\")\n-        .compile(\"libfoo.a\");\n-\n-    test.cmd(0)\n-        .must_have(\"-O1\")\n-        .must_not_have(\"-O2\");\n-}\n-\n-#[test]\n-fn gnu_opt_level_s() {\n-    let test = Test::gnu();\n-    test.gcc()\n-        .opt_level_str(\"s\")\n-        .file(\"foo.c\")\n-        .compile(\"libfoo.a\");\n-\n-    test.cmd(0)\n-        .must_have(\"-Os\")\n-        .must_not_have(\"-O1\")\n-        .must_not_have(\"-O2\")\n-        .must_not_have(\"-O3\")\n-        .must_not_have(\"-Oz\");\n-}\n-\n-#[test]\n-fn gnu_debug() {\n-    let test = Test::gnu();\n-    test.gcc()\n-        .debug(true)\n-        .file(\"foo.c\")\n-        .compile(\"libfoo.a\");\n-    test.cmd(0).must_have(\"-g\");\n-}\n-\n-#[test]\n-fn gnu_x86_64() {\n-    for vendor in &[\"unknown-linux-gnu\", \"apple-darwin\"] {\n-        let target = format!(\"x86_64-{}\", vendor);\n-        let test = Test::gnu();\n-        test.gcc()\n-            .target(&target)\n-            .host(&target)\n-            .file(\"foo.c\")\n-            .compile(\"libfoo.a\");\n-\n-        test.cmd(0)\n-            .must_have(\"-fPIC\")\n-            .must_have(\"-m64\");\n-    }\n-}\n-\n-#[test]\n-fn gnu_x86_64_no_pic() {\n-    for vendor in &[\"unknown-linux-gnu\", \"apple-darwin\"] {\n-        let target = format!(\"x86_64-{}\", vendor);\n-        let test = Test::gnu();\n-        test.gcc()\n-            .pic(false)\n-            .target(&target)\n-            .host(&target)\n-            .file(\"foo.c\")\n-            .compile(\"libfoo.a\");\n-\n-        test.cmd(0).must_not_have(\"-fPIC\");\n-    }\n-}\n-\n-#[test]\n-fn gnu_i686() {\n-    for vendor in &[\"unknown-linux-gnu\", \"apple-darwin\"] {\n-        let target = format!(\"i686-{}\", vendor);\n-        let test = Test::gnu();\n-        test.gcc()\n-            .target(&target)\n-            .host(&target)\n-            .file(\"foo.c\")\n-            .compile(\"libfoo.a\");\n-\n-        test.cmd(0)\n-            .must_not_have(\"-fPIC\")\n-            .must_have(\"-m32\");\n-    }\n-}\n-\n-#[test]\n-fn gnu_i686_pic() {\n-    for vendor in &[\"unknown-linux-gnu\", \"apple-darwin\"] {\n-        let target = format!(\"i686-{}\", vendor);\n-        let test = Test::gnu();\n-        test.gcc()\n-            .pic(true)\n-            .target(&target)\n-            .host(&target)\n-            .file(\"foo.c\")\n-            .compile(\"libfoo.a\");\n-\n-        test.cmd(0).must_have(\"-fPIC\");\n-    }\n-}\n-\n-#[test]\n-fn gnu_set_stdlib() {\n-    let test = Test::gnu();\n-    test.gcc()\n-        .cpp_set_stdlib(Some(\"foo\"))\n-        .file(\"foo.c\")\n-        .compile(\"libfoo.a\");\n-\n-    test.cmd(0).must_not_have(\"-stdlib=foo\");\n-}\n-\n-#[test]\n-fn gnu_include() {\n-    let test = Test::gnu();\n-    test.gcc()\n-        .include(\"foo/bar\")\n-        .file(\"foo.c\")\n-        .compile(\"libfoo.a\");\n-\n-    test.cmd(0).must_have(\"-I\").must_have(\"foo/bar\");\n-}\n-\n-#[test]\n-fn gnu_define() {\n-    let test = Test::gnu();\n-    test.gcc()\n-        .define(\"FOO\", Some(\"bar\"))\n-        .define(\"BAR\", None)\n-        .file(\"foo.c\")\n-        .compile(\"libfoo.a\");\n-\n-    test.cmd(0).must_have(\"-DFOO=bar\").must_have(\"-DBAR\");\n-}\n-\n-#[test]\n-fn gnu_compile_assembly() {\n-    let test = Test::gnu();\n-    test.gcc()\n-        .file(\"foo.S\")\n-        .compile(\"libfoo.a\");\n-    test.cmd(0).must_have(\"foo.S\");\n-}\n-\n-#[test]\n-fn msvc_smoke() {\n-    let test = Test::msvc();\n-    test.gcc()\n-        .file(\"foo.c\")\n-        .compile(\"libfoo.a\");\n-\n-    test.cmd(0)\n-        .must_have(\"/O2\")\n-        .must_have(\"foo.c\")\n-        .must_not_have(\"/Z7\")\n-        .must_have(\"/c\");\n-    test.cmd(1).must_have(test.td.path().join(\"foo.o\"));\n-}\n-\n-#[test]\n-fn msvc_opt_level_0() {\n-    let test = Test::msvc();\n-    test.gcc()\n-        .opt_level(0)\n-        .file(\"foo.c\")\n-        .compile(\"libfoo.a\");\n-\n-    test.cmd(0).must_not_have(\"/O2\");\n-}\n-\n-#[test]\n-fn msvc_debug() {\n-    let test = Test::msvc();\n-    test.gcc()\n-        .debug(true)\n-        .file(\"foo.c\")\n-        .compile(\"libfoo.a\");\n-    test.cmd(0).must_have(\"/Z7\");\n-}\n-\n-#[test]\n-fn msvc_include() {\n-    let test = Test::msvc();\n-    test.gcc()\n-        .include(\"foo/bar\")\n-        .file(\"foo.c\")\n-        .compile(\"libfoo.a\");\n-\n-    test.cmd(0).must_have(\"/I\").must_have(\"foo/bar\");\n-}\n-\n-#[test]\n-fn msvc_define() {\n-    let test = Test::msvc();\n-    test.gcc()\n-        .define(\"FOO\", Some(\"bar\"))\n-        .define(\"BAR\", None)\n-        .file(\"foo.c\")\n-        .compile(\"libfoo.a\");\n-\n-    test.cmd(0).must_have(\"/DFOO=bar\").must_have(\"/DBAR\");\n-}"}, {"sha": "0c13fda1c11687ac16411b7c6127048076150553", "filename": "src/vendor/getopts/.cargo-checksum.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2F.cargo-checksum.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2F.cargo-checksum.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgetopts%2F.cargo-checksum.json?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1 +0,0 @@\n-{\"files\":{\".cargo-ok\":\"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\".gitignore\":\"c1e953ee360e77de57f7b02f1b7880bd6a3dc22d1a69e953c2ac2c52cc52d247\",\".travis.yml\":\"f01015154ac55bebd8ff25742496135c40395959f772005bdf7c63bc9b373c12\",\"Cargo.toml\":\"a027aa6d21622b42c545707ba04f78341cc28079b46da775827ab1ec37fe3ca7\",\"LICENSE-APACHE\":\"a60eea817514531668d7e00765731449fe14d059d3249e0bc93b36de45f759f2\",\"LICENSE-MIT\":\"6485b8ed310d3f0340bf1ad1f47645069ce4069dcc6bb46c7d5c6faf41de1fdb\",\"README.md\":\"4002d78e71c4e1fb82c77590eddb999371f40dce037d895f96e6d6df42c728d3\",\"appveyor.yml\":\"da991211b72fa6f231af7adb84c9fb72f5a9131d1c0a3d47b8ceffe5a82c8542\",\"src/lib.rs\":\"9512dd4ec1053c9fc61f630d869053ca50c55e0839e3ab7091246a8654423bf0\",\"tests/smoke.rs\":\"26a95ac42e42b766ae752fe8531fb740fd147d5cdff352dec0763d175ce91806\"},\"package\":\"d9047cfbd08a437050b363d35ef160452c5fe8ea5187ae0a624708c91581d685\"}\n\\ No newline at end of file"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/vendor/getopts/.cargo-ok", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2F.cargo-ok", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2F.cargo-ok", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgetopts%2F.cargo-ok?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "4fffb2f89cbd8f2169ce9914bd16bd43785bb368", "filename": "src/vendor/getopts/.gitignore", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgetopts%2F.gitignore?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,2 +0,0 @@\n-/target\n-/Cargo.lock"}, {"sha": "d7e3f4787aea5c8eb389baf2cbd216477be4e635", "filename": "src/vendor/getopts/.travis.yml", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2F.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2F.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgetopts%2F.travis.yml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,20 +0,0 @@\n-language: rust\n-rust:\n-  - 1.0.0\n-  - beta\n-  - nightly\n-sudo: false\n-before_script:\n-  - pip install 'travis-cargo<0.2' --user && export PATH=$HOME/.local/bin:$PATH\n-script:\n-  - cargo build --verbose\n-  - cargo test --verbose\n-  - cargo doc --no-deps\n-after_success:\n-  - travis-cargo --only nightly doc-upload\n-env:\n-  global:\n-    secure: by+Jo/boBPbcF5c1N6RNCA008oJm2aRFE5T0SUc3OIfTXxY08dZc0WCBJCHrplp44VjpeKRp/89Y+k1CKncIeU8LiS6ZgsKqaQcCglE2O1KS90B6FYB7+rBqT3ib25taq1nW38clnBHYHV9nz4gOElSdKGRxCcBy+efQ5ZXr2tY=\n-notifications:\n-  email:\n-    on_success: never"}, {"sha": "f84899fe8120ecc0fc719854976a4b4569fd50f1", "filename": "src/vendor/getopts/Cargo.toml", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgetopts%2FCargo.toml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,16 +0,0 @@\n-[package]\n-\n-name = \"getopts\"\n-version = \"0.2.14\"\n-authors = [\"The Rust Project Developers\"]\n-license = \"MIT/Apache-2.0\"\n-readme = \"README.md\"\n-repository = \"https://github.com/rust-lang/getopts\"\n-documentation = \"http://doc.rust-lang.org/getopts\"\n-homepage = \"https://github.com/rust-lang/getopts\"\n-description = \"\"\"\n-getopts-like option parsing.\n-\"\"\"\n-\n-[dev-dependencies]\n-log = \"0.3\""}, {"sha": "16fe87b06e802f094b3fbb0894b137bca2b16ef1", "filename": "src/vendor/getopts/LICENSE-APACHE", "status": "removed", "additions": 0, "deletions": 201, "changes": 201, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2FLICENSE-APACHE", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2FLICENSE-APACHE", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgetopts%2FLICENSE-APACHE?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,201 +0,0 @@\n-                              Apache License\n-                        Version 2.0, January 2004\n-                     http://www.apache.org/licenses/\n-\n-TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n-\n-1. Definitions.\n-\n-   \"License\" shall mean the terms and conditions for use, reproduction,\n-   and distribution as defined by Sections 1 through 9 of this document.\n-\n-   \"Licensor\" shall mean the copyright owner or entity authorized by\n-   the copyright owner that is granting the License.\n-\n-   \"Legal Entity\" shall mean the union of the acting entity and all\n-   other entities that control, are controlled by, or are under common\n-   control with that entity. For the purposes of this definition,\n-   \"control\" means (i) the power, direct or indirect, to cause the\n-   direction or management of such entity, whether by contract or\n-   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n-   outstanding shares, or (iii) beneficial ownership of such entity.\n-\n-   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n-   exercising permissions granted by this License.\n-\n-   \"Source\" form shall mean the preferred form for making modifications,\n-   including but not limited to software source code, documentation\n-   source, and configuration files.\n-\n-   \"Object\" form shall mean any form resulting from mechanical\n-   transformation or translation of a Source form, including but\n-   not limited to compiled object code, generated documentation,\n-   and conversions to other media types.\n-\n-   \"Work\" shall mean the work of authorship, whether in Source or\n-   Object form, made available under the License, as indicated by a\n-   copyright notice that is included in or attached to the work\n-   (an example is provided in the Appendix below).\n-\n-   \"Derivative Works\" shall mean any work, whether in Source or Object\n-   form, that is based on (or derived from) the Work and for which the\n-   editorial revisions, annotations, elaborations, or other modifications\n-   represent, as a whole, an original work of authorship. For the purposes\n-   of this License, Derivative Works shall not include works that remain\n-   separable from, or merely link (or bind by name) to the interfaces of,\n-   the Work and Derivative Works thereof.\n-\n-   \"Contribution\" shall mean any work of authorship, including\n-   the original version of the Work and any modifications or additions\n-   to that Work or Derivative Works thereof, that is intentionally\n-   submitted to Licensor for inclusion in the Work by the copyright owner\n-   or by an individual or Legal Entity authorized to submit on behalf of\n-   the copyright owner. For the purposes of this definition, \"submitted\"\n-   means any form of electronic, verbal, or written communication sent\n-   to the Licensor or its representatives, including but not limited to\n-   communication on electronic mailing lists, source code control systems,\n-   and issue tracking systems that are managed by, or on behalf of, the\n-   Licensor for the purpose of discussing and improving the Work, but\n-   excluding communication that is conspicuously marked or otherwise\n-   designated in writing by the copyright owner as \"Not a Contribution.\"\n-\n-   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n-   on behalf of whom a Contribution has been received by Licensor and\n-   subsequently incorporated within the Work.\n-\n-2. Grant of Copyright License. Subject to the terms and conditions of\n-   this License, each Contributor hereby grants to You a perpetual,\n-   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-   copyright license to reproduce, prepare Derivative Works of,\n-   publicly display, publicly perform, sublicense, and distribute the\n-   Work and such Derivative Works in Source or Object form.\n-\n-3. Grant of Patent License. Subject to the terms and conditions of\n-   this License, each Contributor hereby grants to You a perpetual,\n-   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-   (except as stated in this section) patent license to make, have made,\n-   use, offer to sell, sell, import, and otherwise transfer the Work,\n-   where such license applies only to those patent claims licensable\n-   by such Contributor that are necessarily infringed by their\n-   Contribution(s) alone or by combination of their Contribution(s)\n-   with the Work to which such Contribution(s) was submitted. If You\n-   institute patent litigation against any entity (including a\n-   cross-claim or counterclaim in a lawsuit) alleging that the Work\n-   or a Contribution incorporated within the Work constitutes direct\n-   or contributory patent infringement, then any patent licenses\n-   granted to You under this License for that Work shall terminate\n-   as of the date such litigation is filed.\n-\n-4. Redistribution. You may reproduce and distribute copies of the\n-   Work or Derivative Works thereof in any medium, with or without\n-   modifications, and in Source or Object form, provided that You\n-   meet the following conditions:\n-\n-   (a) You must give any other recipients of the Work or\n-       Derivative Works a copy of this License; and\n-\n-   (b) You must cause any modified files to carry prominent notices\n-       stating that You changed the files; and\n-\n-   (c) You must retain, in the Source form of any Derivative Works\n-       that You distribute, all copyright, patent, trademark, and\n-       attribution notices from the Source form of the Work,\n-       excluding those notices that do not pertain to any part of\n-       the Derivative Works; and\n-\n-   (d) If the Work includes a \"NOTICE\" text file as part of its\n-       distribution, then any Derivative Works that You distribute must\n-       include a readable copy of the attribution notices contained\n-       within such NOTICE file, excluding those notices that do not\n-       pertain to any part of the Derivative Works, in at least one\n-       of the following places: within a NOTICE text file distributed\n-       as part of the Derivative Works; within the Source form or\n-       documentation, if provided along with the Derivative Works; or,\n-       within a display generated by the Derivative Works, if and\n-       wherever such third-party notices normally appear. The contents\n-       of the NOTICE file are for informational purposes only and\n-       do not modify the License. You may add Your own attribution\n-       notices within Derivative Works that You distribute, alongside\n-       or as an addendum to the NOTICE text from the Work, provided\n-       that such additional attribution notices cannot be construed\n-       as modifying the License.\n-\n-   You may add Your own copyright statement to Your modifications and\n-   may provide additional or different license terms and conditions\n-   for use, reproduction, or distribution of Your modifications, or\n-   for any such Derivative Works as a whole, provided Your use,\n-   reproduction, and distribution of the Work otherwise complies with\n-   the conditions stated in this License.\n-\n-5. Submission of Contributions. Unless You explicitly state otherwise,\n-   any Contribution intentionally submitted for inclusion in the Work\n-   by You to the Licensor shall be under the terms and conditions of\n-   this License, without any additional terms or conditions.\n-   Notwithstanding the above, nothing herein shall supersede or modify\n-   the terms of any separate license agreement you may have executed\n-   with Licensor regarding such Contributions.\n-\n-6. Trademarks. This License does not grant permission to use the trade\n-   names, trademarks, service marks, or product names of the Licensor,\n-   except as required for reasonable and customary use in describing the\n-   origin of the Work and reproducing the content of the NOTICE file.\n-\n-7. Disclaimer of Warranty. Unless required by applicable law or\n-   agreed to in writing, Licensor provides the Work (and each\n-   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n-   implied, including, without limitation, any warranties or conditions\n-   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n-   PARTICULAR PURPOSE. You are solely responsible for determining the\n-   appropriateness of using or redistributing the Work and assume any\n-   risks associated with Your exercise of permissions under this License.\n-\n-8. Limitation of Liability. In no event and under no legal theory,\n-   whether in tort (including negligence), contract, or otherwise,\n-   unless required by applicable law (such as deliberate and grossly\n-   negligent acts) or agreed to in writing, shall any Contributor be\n-   liable to You for damages, including any direct, indirect, special,\n-   incidental, or consequential damages of any character arising as a\n-   result of this License or out of the use or inability to use the\n-   Work (including but not limited to damages for loss of goodwill,\n-   work stoppage, computer failure or malfunction, or any and all\n-   other commercial damages or losses), even if such Contributor\n-   has been advised of the possibility of such damages.\n-\n-9. Accepting Warranty or Additional Liability. While redistributing\n-   the Work or Derivative Works thereof, You may choose to offer,\n-   and charge a fee for, acceptance of support, warranty, indemnity,\n-   or other liability obligations and/or rights consistent with this\n-   License. However, in accepting such obligations, You may act only\n-   on Your own behalf and on Your sole responsibility, not on behalf\n-   of any other Contributor, and only if You agree to indemnify,\n-   defend, and hold each Contributor harmless for any liability\n-   incurred by, or claims asserted against, such Contributor by reason\n-   of your accepting any such warranty or additional liability.\n-\n-END OF TERMS AND CONDITIONS\n-\n-APPENDIX: How to apply the Apache License to your work.\n-\n-   To apply the Apache License to your work, attach the following\n-   boilerplate notice, with the fields enclosed by brackets \"[]\"\n-   replaced with your own identifying information. (Don't include\n-   the brackets!)  The text should be enclosed in the appropriate\n-   comment syntax for the file format. We also recommend that a\n-   file or class name and description of purpose be included on the\n-   same \"printed page\" as the copyright notice for easier\n-   identification within third-party archives.\n-\n-Copyright [yyyy] [name of copyright owner]\n-\n-Licensed under the Apache License, Version 2.0 (the \"License\");\n-you may not use this file except in compliance with the License.\n-You may obtain a copy of the License at\n-\n-\thttp://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing, software\n-distributed under the License is distributed on an \"AS IS\" BASIS,\n-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-See the License for the specific language governing permissions and\n-limitations under the License."}, {"sha": "39d4bdb5acd313c1a92dbeaa1c379aaf0596a315", "filename": "src/vendor/getopts/LICENSE-MIT", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2FLICENSE-MIT", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2FLICENSE-MIT", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgetopts%2FLICENSE-MIT?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,25 +0,0 @@\n-Copyright (c) 2014 The Rust Project Developers\n-\n-Permission is hereby granted, free of charge, to any\n-person obtaining a copy of this software and associated\n-documentation files (the \"Software\"), to deal in the\n-Software without restriction, including without\n-limitation the rights to use, copy, modify, merge,\n-publish, distribute, sublicense, and/or sell copies of\n-the Software, and to permit persons to whom the Software\n-is furnished to do so, subject to the following\n-conditions:\n-\n-The above copyright notice and this permission notice\n-shall be included in all copies or substantial portions\n-of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n-ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n-TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n-PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\n-SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n-CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n-OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\n-IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n-DEALINGS IN THE SOFTWARE."}, {"sha": "c19f48fb06b5c65d4e02cad3dee57ae9f9dc5571", "filename": "src/vendor/getopts/README.md", "status": "removed", "additions": 0, "deletions": 23, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgetopts%2FREADME.md?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,23 +0,0 @@\n-getopts\n-===\n-\n-A Rust library for option parsing for CLI utilities.\n-\n-[![Build Status](https://travis-ci.org/rust-lang/getopts.svg?branch=master)](https://travis-ci.org/rust-lang/getopts)\n-\n-[Documentation](http://doc.rust-lang.org/getopts)\n-\n-## Usage\n-\n-Add this to your `Cargo.toml`:\n-\n-```toml\n-[dependencies]\n-getopts = \"0.2.4\"\n-```\n-\n-and this to your crate root:\n-\n-```rust\n-extern crate getopts;\n-```"}, {"sha": "6a1b8dc19c0393b9f64e98ca3701755ef39c34de", "filename": "src/vendor/getopts/appveyor.yml", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2Fappveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2Fappveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgetopts%2Fappveyor.yml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,17 +0,0 @@\n-environment:\n-  matrix:\n-  - TARGET: x86_64-pc-windows-msvc\n-  - TARGET: i686-pc-windows-msvc\n-  - TARGET: i686-pc-windows-gnu\n-install:\n-  - ps: Start-FileDownload \"https://static.rust-lang.org/dist/rust-nightly-${env:TARGET}.exe\"\n-  - rust-nightly-%TARGET%.exe /VERYSILENT /NORESTART /DIR=\"C:\\Program Files (x86)\\Rust\"\n-  - SET PATH=%PATH%;C:\\Program Files (x86)\\Rust\\bin\n-  - SET PATH=%PATH%;C:\\MinGW\\bin\n-  - rustc -V\n-  - cargo -V\n-\n-build: false\n-\n-test_script:\n-  - cargo test --verbose"}, {"sha": "8f0c866fae90664975e1758cb8f6eec1f243bc95", "filename": "src/vendor/getopts/src/lib.rs", "status": "removed", "additions": 0, "deletions": 1831, "changes": 1831, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgetopts%2Fsrc%2Flib.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,1831 +0,0 @@\n-// Copyright 2012-2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-//\n-// ignore-lexer-test FIXME #15677\n-\n-//! Simple getopt alternative.\n-//!\n-//! Construct a vector of options, either by using `reqopt`, `optopt`, and\n-//! `optflag` or by building them from components yourself, and pass them to\n-//! `getopts`, along with a vector of actual arguments (not including\n-//! `argv[0]`). You'll either get a failure code back, or a match. You'll have\n-//! to verify whether the amount of 'free' arguments in the match is what you\n-//! expect. Use `opt_*` accessors to get argument values out of the matches\n-//! object.\n-//!\n-//! Single-character options are expected to appear on the command line with a\n-//! single preceding dash; multiple-character options are expected to be\n-//! proceeded by two dashes. Options that expect an argument accept their\n-//! argument following either a space or an equals sign. Single-character\n-//! options don't require the space.\n-//!\n-//! # Usage\n-//!\n-//! This crate is [on crates.io](https://crates.io/crates/getopts) and can be\n-//! used by adding `getopts` to the dependencies in your project's `Cargo.toml`.\n-//!\n-//! ```toml\n-//! [dependencies]\n-//! getopts = \"0.2\"\n-//! ```\n-//!\n-//! and this to your crate root:\n-//!\n-//! ```rust\n-//! extern crate getopts;\n-//! ```\n-//!\n-//! # Example\n-//!\n-//! The following example shows simple command line parsing for an application\n-//! that requires an input file to be specified, accepts an optional output file\n-//! name following `-o`, and accepts both `-h` and `--help` as optional flags.\n-//!\n-//! ```{.rust}\n-//! extern crate getopts;\n-//! use getopts::Options;\n-//! use std::env;\n-//!\n-//! fn do_work(inp: &str, out: Option<String>) {\n-//!     println!(\"{}\", inp);\n-//!     match out {\n-//!         Some(x) => println!(\"{}\", x),\n-//!         None => println!(\"No Output\"),\n-//!     }\n-//! }\n-//!\n-//! fn print_usage(program: &str, opts: Options) {\n-//!     let brief = format!(\"Usage: {} FILE [options]\", program);\n-//!     print!(\"{}\", opts.usage(&brief));\n-//! }\n-//!\n-//! fn main() {\n-//!     let args: Vec<String> = env::args().collect();\n-//!     let program = args[0].clone();\n-//!\n-//!     let mut opts = Options::new();\n-//!     opts.optopt(\"o\", \"\", \"set output file name\", \"NAME\");\n-//!     opts.optflag(\"h\", \"help\", \"print this help menu\");\n-//!     let matches = match opts.parse(&args[1..]) {\n-//!         Ok(m) => { m }\n-//!         Err(f) => { panic!(f.to_string()) }\n-//!     };\n-//!     if matches.opt_present(\"h\") {\n-//!         print_usage(&program, opts);\n-//!         return;\n-//!     }\n-//!     let output = matches.opt_str(\"o\");\n-//!     let input = if !matches.free.is_empty() {\n-//!         matches.free[0].clone()\n-//!     } else {\n-//!         print_usage(&program, opts);\n-//!         return;\n-//!     };\n-//!     do_work(&input, output);\n-//! }\n-//! ```\n-\n-#![doc(html_logo_url = \"http://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n-       html_root_url = \"http://doc.rust-lang.org/getopts/\")]\n-#![deny(missing_docs)]\n-#![cfg_attr(test, deny(warnings))]\n-#![cfg_attr(rust_build, feature(staged_api))]\n-#![cfg_attr(rust_build, staged_api)]\n-#![cfg_attr(rust_build,\n-            unstable(feature = \"rustc_private\",\n-                     reason = \"use the crates.io `getopts` library instead\"))]\n-\n-#[cfg(test)] #[macro_use] extern crate log;\n-\n-use self::Name::*;\n-use self::HasArg::*;\n-use self::Occur::*;\n-use self::Fail::*;\n-use self::Optval::*;\n-use self::SplitWithinState::*;\n-use self::Whitespace::*;\n-use self::LengthLimit::*;\n-\n-use std::error::Error;\n-use std::ffi::OsStr;\n-use std::fmt;\n-use std::iter::{repeat, IntoIterator};\n-use std::result;\n-\n-/// A description of the options that a program can handle.\n-pub struct Options {\n-    grps: Vec<OptGroup>,\n-    parsing_style : ParsingStyle\n-}\n-\n-impl Options {\n-    /// Create a blank set of options.\n-    pub fn new() -> Options {\n-        Options {\n-            grps: Vec::new(),\n-            parsing_style: ParsingStyle::FloatingFrees\n-        }\n-    }\n-\n-    /// Set the parsing style.\n-    pub fn parsing_style(&mut self, style: ParsingStyle) -> &mut Options {\n-        self.parsing_style = style;\n-        self\n-    }\n-\n-    /// Create a generic option group, stating all parameters explicitly.\n-    pub fn opt(&mut self, short_name: &str, long_name: &str, desc: &str,\n-                       hint: &str, hasarg: HasArg, occur: Occur) -> &mut Options {\n-        let len = short_name.len();\n-        assert!(len == 1 || len == 0);\n-        self.grps.push(OptGroup {\n-            short_name: short_name.to_string(),\n-            long_name: long_name.to_string(),\n-            hint: hint.to_string(),\n-            desc: desc.to_string(),\n-            hasarg: hasarg,\n-            occur: occur\n-        });\n-        self\n-    }\n-\n-    /// Create a long option that is optional and does not take an argument.\n-    ///\n-    /// * `short_name` - e.g. `\"h\"` for a `-h` option, or `\"\"` for none\n-    /// * `long_name` - e.g. `\"help\"` for a `--help` option, or `\"\"` for none\n-    /// * `desc` - Description for usage help\n-    pub fn optflag(&mut self, short_name: &str, long_name: &str, desc: &str)\n-                           -> &mut Options {\n-        let len = short_name.len();\n-        assert!(len == 1 || len == 0);\n-        self.grps.push(OptGroup {\n-            short_name: short_name.to_string(),\n-            long_name: long_name.to_string(),\n-            hint: \"\".to_string(),\n-            desc: desc.to_string(),\n-            hasarg: No,\n-            occur: Optional\n-        });\n-        self\n-    }\n-\n-    /// Create a long option that can occur more than once and does not\n-    /// take an argument.\n-    ///\n-    /// * `short_name` - e.g. `\"h\"` for a `-h` option, or `\"\"` for none\n-    /// * `long_name` - e.g. `\"help\"` for a `--help` option, or `\"\"` for none\n-    /// * `desc` - Description for usage help\n-    pub fn optflagmulti(&mut self, short_name: &str, long_name: &str, desc: &str)\n-                                -> &mut Options {\n-        let len = short_name.len();\n-        assert!(len == 1 || len == 0);\n-        self.grps.push(OptGroup {\n-            short_name: short_name.to_string(),\n-            long_name: long_name.to_string(),\n-            hint: \"\".to_string(),\n-            desc: desc.to_string(),\n-            hasarg: No,\n-            occur: Multi\n-        });\n-        self\n-    }\n-\n-    /// Create a long option that is optional and takes an optional argument.\n-    ///\n-    /// * `short_name` - e.g. `\"h\"` for a `-h` option, or `\"\"` for none\n-    /// * `long_name` - e.g. `\"help\"` for a `--help` option, or `\"\"` for none\n-    /// * `desc` - Description for usage help\n-    /// * `hint` - Hint that is used in place of the argument in the usage help,\n-    ///   e.g. `\"FILE\"` for a `-o FILE` option\n-    pub fn optflagopt(&mut self, short_name: &str, long_name: &str, desc: &str,\n-                              hint: &str) -> &mut Options {\n-        let len = short_name.len();\n-        assert!(len == 1 || len == 0);\n-        self.grps.push(OptGroup {\n-            short_name: short_name.to_string(),\n-            long_name: long_name.to_string(),\n-            hint: hint.to_string(),\n-            desc: desc.to_string(),\n-            hasarg: Maybe,\n-            occur: Optional\n-        });\n-        self\n-    }\n-\n-    /// Create a long option that is optional, takes an argument, and may occur\n-    /// multiple times.\n-    ///\n-    /// * `short_name` - e.g. `\"h\"` for a `-h` option, or `\"\"` for none\n-    /// * `long_name` - e.g. `\"help\"` for a `--help` option, or `\"\"` for none\n-    /// * `desc` - Description for usage help\n-    /// * `hint` - Hint that is used in place of the argument in the usage help,\n-    ///   e.g. `\"FILE\"` for a `-o FILE` option\n-    pub fn optmulti(&mut self, short_name: &str, long_name: &str, desc: &str, hint: &str)\n-                            -> &mut Options {\n-        let len = short_name.len();\n-        assert!(len == 1 || len == 0);\n-        self.grps.push(OptGroup {\n-            short_name: short_name.to_string(),\n-            long_name: long_name.to_string(),\n-            hint: hint.to_string(),\n-            desc: desc.to_string(),\n-            hasarg: Yes,\n-            occur: Multi\n-        });\n-        self\n-    }\n-\n-    /// Create a long option that is optional and takes an argument.\n-    ///\n-    /// * `short_name` - e.g. `\"h\"` for a `-h` option, or `\"\"` for none\n-    /// * `long_name` - e.g. `\"help\"` for a `--help` option, or `\"\"` for none\n-    /// * `desc` - Description for usage help\n-    /// * `hint` - Hint that is used in place of the argument in the usage help,\n-    ///   e.g. `\"FILE\"` for a `-o FILE` option\n-    pub fn optopt(&mut self, short_name: &str, long_name: &str, desc: &str, hint: &str)\n-                          -> &mut Options {\n-        let len = short_name.len();\n-        assert!(len == 1 || len == 0);\n-        self.grps.push(OptGroup {\n-            short_name: short_name.to_string(),\n-            long_name: long_name.to_string(),\n-            hint: hint.to_string(),\n-            desc: desc.to_string(),\n-            hasarg: Yes,\n-            occur: Optional\n-        });\n-        self\n-    }\n-\n-    /// Create a long option that is required and takes an argument.\n-    ///\n-    /// * `short_name` - e.g. `\"h\"` for a `-h` option, or `\"\"` for none\n-    /// * `long_name` - e.g. `\"help\"` for a `--help` option, or `\"\"` for none\n-    /// * `desc` - Description for usage help\n-    /// * `hint` - Hint that is used in place of the argument in the usage help,\n-    ///   e.g. `\"FILE\"` for a `-o FILE` option\n-    pub fn reqopt(&mut self, short_name: &str, long_name: &str, desc: &str, hint: &str)\n-                          -> &mut Options {\n-        let len = short_name.len();\n-        assert!(len == 1 || len == 0);\n-        self.grps.push(OptGroup {\n-            short_name: short_name.to_string(),\n-            long_name: long_name.to_string(),\n-            hint: hint.to_string(),\n-            desc: desc.to_string(),\n-            hasarg: Yes,\n-            occur: Req\n-        });\n-        self\n-    }\n-\n-    /// Parse command line arguments according to the provided options.\n-    ///\n-    /// On success returns `Ok(Matches)`. Use methods such as `opt_present`\n-    /// `opt_str`, etc. to interrogate results.\n-    /// # Panics\n-    ///\n-    /// Returns `Err(Fail)` on failure: use the `Debug` implementation of `Fail`\n-    /// to display information about it.\n-    pub fn parse<C: IntoIterator>(&self, args: C) -> Result\n-        where C::Item: AsRef<OsStr>\n-    {\n-        let opts: Vec<Opt> = self.grps.iter().map(|x| x.long_to_short()).collect();\n-        let n_opts = opts.len();\n-\n-        fn f(_x: usize) -> Vec<Optval> { return Vec::new(); }\n-\n-        let mut vals = (0 .. n_opts).map(f).collect::<Vec<_>>();\n-        let mut free: Vec<String> = Vec::new();\n-        let args = try!(args.into_iter().map(|i| {\n-            i.as_ref().to_str().ok_or_else(|| {\n-                Fail::UnrecognizedOption(format!(\"{:?}\", i.as_ref()))\n-            }).map(|s| s.to_owned())\n-        }).collect::<::std::result::Result<Vec<_>, _>>());\n-        let l = args.len();\n-        let mut i = 0;\n-        while i < l {\n-            let cur = args[i].clone();\n-            let curlen = cur.len();\n-            if !is_arg(&cur) {\n-                match self.parsing_style {\n-                    ParsingStyle::FloatingFrees => free.push(cur),\n-                    ParsingStyle::StopAtFirstFree => {\n-                        while i < l {\n-                            free.push(args[i].clone());\n-                            i += 1;\n-                        }\n-                        break;\n-                    }\n-                }\n-            } else if cur == \"--\" {\n-                let mut j = i + 1;\n-                while j < l { free.push(args[j].clone()); j += 1; }\n-                break;\n-            } else {\n-                let mut names;\n-                let mut i_arg = None;\n-                if cur.as_bytes()[1] == b'-' {\n-                    let tail = &cur[2..curlen];\n-                    let tail_eq: Vec<&str> = tail.splitn(2, '=').collect();\n-                    if tail_eq.len() <= 1 {\n-                        names = vec!(Long(tail.to_string()));\n-                    } else {\n-                        names =\n-                            vec!(Long(tail_eq[0].to_string()));\n-                        i_arg = Some(tail_eq[1].to_string());\n-                    }\n-                } else {\n-                    names = Vec::new();\n-                    for (j, ch) in cur.char_indices().skip(1) {\n-                        let opt = Short(ch);\n-\n-                        /* In a series of potential options (eg. -aheJ), if we\n-                           see one which takes an argument, we assume all\n-                           subsequent characters make up the argument. This\n-                           allows options such as -L/usr/local/lib/foo to be\n-                           interpreted correctly\n-                        */\n-\n-                        let opt_id = match find_opt(&opts, opt.clone()) {\n-                          Some(id) => id,\n-                          None => return Err(UnrecognizedOption(opt.to_string()))\n-                        };\n-\n-                        names.push(opt);\n-\n-                        let arg_follows = match opts[opt_id].hasarg {\n-                            Yes | Maybe => true,\n-                            No => false\n-                        };\n-\n-                        if arg_follows {\n-                            let next = j + ch.len_utf8();\n-                            if next < curlen {\n-                                i_arg = Some(cur[next..curlen].to_string());\n-                                break;\n-                            }\n-                        }\n-                    }\n-                }\n-                let mut name_pos = 0;\n-                for nm in names.iter() {\n-                    name_pos += 1;\n-                    let optid = match find_opt(&opts, (*nm).clone()) {\n-                      Some(id) => id,\n-                      None => return Err(UnrecognizedOption(nm.to_string()))\n-                    };\n-                    match opts[optid].hasarg {\n-                      No => {\n-                        if name_pos == names.len() && !i_arg.is_none() {\n-                            return Err(UnexpectedArgument(nm.to_string()));\n-                        }\n-                        vals[optid].push(Given);\n-                      }\n-                      Maybe => {\n-                        if !i_arg.is_none() {\n-                            vals[optid]\n-                                .push(Val((i_arg.clone())\n-                                .unwrap()));\n-                        } else if name_pos < names.len() || i + 1 == l ||\n-                                is_arg(&args[i + 1]) {\n-                            vals[optid].push(Given);\n-                        } else {\n-                            i += 1;\n-                            vals[optid].push(Val(args[i].clone()));\n-                        }\n-                      }\n-                      Yes => {\n-                        if !i_arg.is_none() {\n-                            vals[optid].push(Val(i_arg.clone().unwrap()));\n-                        } else if i + 1 == l {\n-                            return Err(ArgumentMissing(nm.to_string()));\n-                        } else {\n-                            i += 1;\n-                            vals[optid].push(Val(args[i].clone()));\n-                        }\n-                      }\n-                    }\n-                }\n-            }\n-            i += 1;\n-        }\n-        for i in 0 .. n_opts {\n-            let n = vals[i].len();\n-            let occ = opts[i].occur;\n-            if occ == Req && n == 0 {\n-                return Err(OptionMissing(opts[i].name.to_string()));\n-            }\n-            if occ != Multi && n > 1 {\n-                return Err(OptionDuplicated(opts[i].name.to_string()));\n-            }\n-        }\n-        Ok(Matches {\n-            opts: opts,\n-            vals: vals,\n-            free: free\n-        })\n-    }\n-\n-    /// Derive a short one-line usage summary from a set of long options.\n-    #[allow(deprecated)] // connect => join in 1.3\n-    pub fn short_usage(&self, program_name: &str) -> String {\n-        let mut line = format!(\"Usage: {} \", program_name);\n-        line.push_str(&self.grps.iter()\n-                           .map(format_option)\n-                           .collect::<Vec<String>>()\n-                           .connect(\" \"));\n-        line\n-    }\n-\n-    /// Derive a usage message from a set of options.\n-    #[allow(deprecated)] // connect => join in 1.3\n-    pub fn usage(&self, brief: &str) -> String {\n-        let desc_sep = format!(\"\\n{}\", repeat(\" \").take(24).collect::<String>());\n-\n-        let any_short = self.grps.iter().any(|optref| {\n-            optref.short_name.len() > 0\n-        });\n-\n-        let rows = self.grps.iter().map(|optref| {\n-            let OptGroup{short_name,\n-                         long_name,\n-                         hint,\n-                         desc,\n-                         hasarg,\n-                         ..} = (*optref).clone();\n-\n-            let mut row = \"    \".to_string();\n-\n-            // short option\n-            match short_name.len() {\n-                0 => {\n-                    if any_short {\n-                        row.push_str(\"    \");\n-                    }\n-                }\n-                1 => {\n-                    row.push('-');\n-                    row.push_str(&short_name);\n-                    if long_name.len() > 0 {\n-                        row.push_str(\", \");\n-                    } else {\n-                        // Only a single space here, so that any\n-                        // argument is printed in the correct spot.\n-                        row.push(' ');\n-                    }\n-                }\n-                _ => panic!(\"the short name should only be 1 ascii char long\"),\n-            }\n-\n-            // long option\n-            match long_name.len() {\n-                0 => {}\n-                _ => {\n-                    row.push_str(\"--\");\n-                    row.push_str(&long_name);\n-                    row.push(' ');\n-                }\n-            }\n-\n-            // arg\n-            match hasarg {\n-                No => {}\n-                Yes => row.push_str(&hint),\n-                Maybe => {\n-                    row.push('[');\n-                    row.push_str(&hint);\n-                    row.push(']');\n-                }\n-            }\n-\n-            // FIXME: #5516 should be graphemes not codepoints\n-            // here we just need to indent the start of the description\n-            let rowlen = row.chars().count();\n-            if rowlen < 24 {\n-                for _ in 0 .. 24 - rowlen {\n-                    row.push(' ');\n-                }\n-            } else {\n-                row.push_str(&desc_sep)\n-            }\n-\n-            // Normalize desc to contain words separated by one space character\n-            let mut desc_normalized_whitespace = String::new();\n-            for word in desc.split(|c: char| c.is_whitespace())\n-                            .filter(|s| !s.is_empty()) {\n-                desc_normalized_whitespace.push_str(word);\n-                desc_normalized_whitespace.push(' ');\n-            }\n-\n-            // FIXME: #5516 should be graphemes not codepoints\n-            let mut desc_rows = Vec::new();\n-            each_split_within(&desc_normalized_whitespace,\n-                              54,\n-                              |substr| {\n-                desc_rows.push(substr.to_string());\n-                true\n-            });\n-\n-            // FIXME: #5516 should be graphemes not codepoints\n-            // wrapped description\n-            row.push_str(&desc_rows.connect(&desc_sep));\n-\n-            row\n-        });\n-\n-        format!(\"{}\\n\\nOptions:\\n{}\\n\", brief,\n-                rows.collect::<Vec<String>>().connect(\"\\n\"))\n-    }\n-}\n-\n-/// What parsing style to use when parsing arguments.\n-#[derive(Clone, Copy, PartialEq, Eq)]\n-pub enum ParsingStyle {\n-    /// Flags and \"free\" arguments can be freely inter-mixed.\n-    FloatingFrees,\n-    /// As soon as a \"free\" argument (i.e. non-flag) is encountered, stop\n-    /// considering any remaining arguments as flags.\n-    StopAtFirstFree\n-}\n-\n-/// Name of an option. Either a string or a single char.\n-#[derive(Clone, PartialEq, Eq)]\n-enum Name {\n-    /// A string representing the long name of an option.\n-    /// For example: \"help\"\n-    Long(String),\n-    /// A char representing the short name of an option.\n-    /// For example: 'h'\n-    Short(char),\n-}\n-\n-/// Describes whether an option has an argument.\n-#[derive(Clone, Copy, PartialEq, Eq)]\n-pub enum HasArg {\n-    /// The option requires an argument.\n-    Yes,\n-    /// The option takes no argument.\n-    No,\n-    /// The option argument is optional.\n-    Maybe,\n-}\n-\n-/// Describes how often an option may occur.\n-#[derive(Clone, Copy, PartialEq, Eq)]\n-pub enum Occur {\n-    /// The option occurs once.\n-    Req,\n-    /// The option occurs at most once.\n-    Optional,\n-    /// The option occurs zero or more times.\n-    Multi,\n-}\n-\n-/// A description of a possible option.\n-#[derive(Clone, PartialEq, Eq)]\n-struct Opt {\n-    /// Name of the option\n-    name: Name,\n-    /// Whether it has an argument\n-    hasarg: HasArg,\n-    /// How often it can occur\n-    occur: Occur,\n-    /// Which options it aliases\n-    aliases: Vec<Opt>,\n-}\n-\n-/// One group of options, e.g., both `-h` and `--help`, along with\n-/// their shared description and properties.\n-#[derive(Clone, PartialEq, Eq)]\n-struct OptGroup {\n-    /// Short name of the option, e.g. `h` for a `-h` option\n-    short_name: String,\n-    /// Long name of the option, e.g. `help` for a `--help` option\n-    long_name: String,\n-    /// Hint for argument, e.g. `FILE` for a `-o FILE` option\n-    hint: String,\n-    /// Description for usage help text\n-    desc: String,\n-    /// Whether option has an argument\n-    hasarg: HasArg,\n-    /// How often it can occur\n-    occur: Occur\n-}\n-\n-/// Describes whether an option is given at all or has a value.\n-#[derive(Clone, PartialEq, Eq)]\n-enum Optval {\n-    Val(String),\n-    Given,\n-}\n-\n-/// The result of checking command line arguments. Contains a vector\n-/// of matches and a vector of free strings.\n-#[derive(Clone, PartialEq, Eq)]\n-pub struct Matches {\n-    /// Options that matched\n-    opts: Vec<Opt>,\n-    /// Values of the Options that matched\n-    vals: Vec<Vec<Optval>>,\n-    /// Free string fragments\n-    pub free: Vec<String>,\n-}\n-\n-/// The type returned when the command line does not conform to the\n-/// expected format. Use the `Debug` implementation to output detailed\n-/// information.\n-#[derive(Clone, Debug, PartialEq, Eq)]\n-pub enum Fail {\n-    /// The option requires an argument but none was passed.\n-    ArgumentMissing(String),\n-    /// The passed option is not declared among the possible options.\n-    UnrecognizedOption(String),\n-    /// A required option is not present.\n-    OptionMissing(String),\n-    /// A single occurrence option is being used multiple times.\n-    OptionDuplicated(String),\n-    /// There's an argument being passed to a non-argument option.\n-    UnexpectedArgument(String),\n-}\n-\n-impl Error for Fail {\n-    fn description(&self) -> &str {\n-        match *self {\n-            ArgumentMissing(_) => \"missing argument\",\n-            UnrecognizedOption(_) => \"unrecognized option\",\n-            OptionMissing(_) => \"missing option\",\n-            OptionDuplicated(_) => \"duplicated option\",\n-            UnexpectedArgument(_) => \"unexpected argument\",\n-        }\n-    }\n-}\n-\n-/// The type of failure that occurred.\n-#[derive(Clone, Copy, PartialEq, Eq)]\n-#[allow(missing_docs)]\n-pub enum FailType {\n-    ArgumentMissing_,\n-    UnrecognizedOption_,\n-    OptionMissing_,\n-    OptionDuplicated_,\n-    UnexpectedArgument_,\n-}\n-\n-/// The result of parsing a command line with a set of options.\n-pub type Result = result::Result<Matches, Fail>;\n-\n-impl Name {\n-    fn from_str(nm: &str) -> Name {\n-        if nm.len() == 1 {\n-            Short(nm.as_bytes()[0] as char)\n-        } else {\n-            Long(nm.to_string())\n-        }\n-    }\n-\n-    fn to_string(&self) -> String {\n-        match *self {\n-            Short(ch) => ch.to_string(),\n-            Long(ref s) => s.to_string()\n-        }\n-    }\n-}\n-\n-impl OptGroup {\n-    /// Translate OptGroup into Opt.\n-    /// (Both short and long names correspond to different Opts).\n-    fn long_to_short(&self) -> Opt {\n-        let OptGroup {\n-            short_name,\n-            long_name,\n-            hasarg,\n-            occur,\n-            ..\n-        } = (*self).clone();\n-\n-        match (short_name.len(), long_name.len()) {\n-            (0,0) => panic!(\"this long-format option was given no name\"),\n-            (0,_) => Opt {\n-                name: Long((long_name)),\n-                hasarg: hasarg,\n-                occur: occur,\n-                aliases: Vec::new()\n-            },\n-            (1,0) => Opt {\n-                name: Short(short_name.as_bytes()[0] as char),\n-                hasarg: hasarg,\n-                occur: occur,\n-                aliases: Vec::new()\n-            },\n-            (1,_) => Opt {\n-                name: Long((long_name)),\n-                hasarg: hasarg,\n-                occur: occur,\n-                aliases: vec!(\n-                    Opt {\n-                        name: Short(short_name.as_bytes()[0] as char),\n-                        hasarg: hasarg,\n-                        occur:  occur,\n-                        aliases: Vec::new()\n-                    }\n-                )\n-            },\n-            (_,_) => panic!(\"something is wrong with the long-form opt\")\n-        }\n-    }\n-}\n-\n-impl Matches {\n-    fn opt_vals(&self, nm: &str) -> Vec<Optval> {\n-        match find_opt(&self.opts, Name::from_str(nm)) {\n-            Some(id) => self.vals[id].clone(),\n-            None => panic!(\"No option '{}' defined\", nm)\n-        }\n-    }\n-\n-    fn opt_val(&self, nm: &str) -> Option<Optval> {\n-        self.opt_vals(nm).into_iter().next()\n-    }\n-\n-    /// Returns true if an option was matched.\n-    pub fn opt_present(&self, nm: &str) -> bool {\n-        !self.opt_vals(nm).is_empty()\n-    }\n-\n-    /// Returns the number of times an option was matched.\n-    pub fn opt_count(&self, nm: &str) -> usize {\n-        self.opt_vals(nm).len()\n-    }\n-\n-    /// Returns true if any of several options were matched.\n-    pub fn opts_present(&self, names: &[String]) -> bool {\n-        names.iter().any(|nm| {\n-            match find_opt(&self.opts, Name::from_str(&nm)) {\n-                Some(id) if !self.vals[id].is_empty() => true,\n-                _ => false,\n-            }\n-        })\n-    }\n-\n-    /// Returns the string argument supplied to one of several matching options or `None`.\n-    pub fn opts_str(&self, names: &[String]) -> Option<String> {\n-        names.iter().filter_map(|nm| {\n-            match self.opt_val(&nm) {\n-                Some(Val(s)) => Some(s),\n-                _ => None,\n-            }\n-        }).next()\n-    }\n-\n-    /// Returns a vector of the arguments provided to all matches of the given\n-    /// option.\n-    ///\n-    /// Used when an option accepts multiple values.\n-    pub fn opt_strs(&self, nm: &str) -> Vec<String> {\n-        self.opt_vals(nm).into_iter().filter_map(|v| {\n-            match v {\n-                Val(s) => Some(s),\n-                _ => None,\n-            }\n-        }).collect()\n-    }\n-\n-    /// Returns the string argument supplied to a matching option or `None`.\n-    pub fn opt_str(&self, nm: &str) -> Option<String> {\n-        match self.opt_val(nm) {\n-            Some(Val(s)) => Some(s),\n-            _ => None,\n-        }\n-    }\n-\n-\n-    /// Returns the matching string, a default, or `None`.\n-    ///\n-    /// Returns `None` if the option was not present, `def` if the option was\n-    /// present but no argument was provided, and the argument if the option was\n-    /// present and an argument was provided.\n-    pub fn opt_default(&self, nm: &str, def: &str) -> Option<String> {\n-        match self.opt_val(nm) {\n-            Some(Val(s)) => Some(s),\n-            Some(_) => Some(def.to_string()),\n-            None => None,\n-        }\n-    }\n-\n-}\n-\n-fn is_arg(arg: &str) -> bool {\n-    arg.as_bytes().get(0) == Some(&b'-') && arg.len() > 1\n-}\n-\n-fn find_opt(opts: &[Opt], nm: Name) -> Option<usize> {\n-    // Search main options.\n-    let pos = opts.iter().position(|opt| opt.name == nm);\n-    if pos.is_some() {\n-        return pos\n-    }\n-\n-    // Search in aliases.\n-    for candidate in opts.iter() {\n-        if candidate.aliases.iter().position(|opt| opt.name == nm).is_some() {\n-            return opts.iter().position(|opt| opt.name == candidate.name);\n-        }\n-    }\n-\n-    None\n-}\n-\n-impl fmt::Display for Fail {\n-    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n-        match *self {\n-            ArgumentMissing(ref nm) => {\n-                write!(f, \"Argument to option '{}' missing.\", *nm)\n-            }\n-            UnrecognizedOption(ref nm) => {\n-                write!(f, \"Unrecognized option: '{}'.\", *nm)\n-            }\n-            OptionMissing(ref nm) => {\n-                write!(f, \"Required option '{}' missing.\", *nm)\n-            }\n-            OptionDuplicated(ref nm) => {\n-                write!(f, \"Option '{}' given more than once.\", *nm)\n-            }\n-            UnexpectedArgument(ref nm) => {\n-                write!(f, \"Option '{}' does not take an argument.\", *nm)\n-            }\n-        }\n-    }\n-}\n-\n-fn format_option(opt: &OptGroup) -> String {\n-    let mut line = String::new();\n-\n-    if opt.occur != Req {\n-        line.push('[');\n-    }\n-\n-    // Use short_name if possible, but fall back to long_name.\n-    if opt.short_name.len() > 0 {\n-        line.push('-');\n-        line.push_str(&opt.short_name);\n-    } else {\n-        line.push_str(\"--\");\n-        line.push_str(&opt.long_name);\n-    }\n-\n-    if opt.hasarg != No {\n-        line.push(' ');\n-        if opt.hasarg == Maybe {\n-            line.push('[');\n-        }\n-        line.push_str(&opt.hint);\n-        if opt.hasarg == Maybe {\n-            line.push(']');\n-        }\n-    }\n-\n-    if opt.occur != Req {\n-        line.push(']');\n-    }\n-    if opt.occur == Multi {\n-        line.push_str(\"..\");\n-    }\n-\n-    line\n-}\n-\n-#[derive(Clone, Copy)]\n-enum SplitWithinState {\n-    A,  // leading whitespace, initial state\n-    B,  // words\n-    C,  // internal and trailing whitespace\n-}\n-\n-#[derive(Clone, Copy)]\n-enum Whitespace {\n-    Ws, // current char is whitespace\n-    Cr  // current char is not whitespace\n-}\n-\n-#[derive(Clone, Copy)]\n-enum LengthLimit {\n-    UnderLim, // current char makes current substring still fit in limit\n-    OverLim   // current char makes current substring no longer fit in limit\n-}\n-\n-\n-/// Splits a string into substrings with possibly internal whitespace,\n-/// each of them at most `lim` bytes long. The substrings have leading and trailing\n-/// whitespace removed, and are only cut at whitespace boundaries.\n-///\n-/// Note: Function was moved here from `std::str` because this module is the only place that\n-/// uses it, and because it was too specific for a general string function.\n-///\n-/// # Panics\n-///\n-/// Panics during iteration if the string contains a non-whitespace\n-/// sequence longer than the limit.\n-fn each_split_within<'a, F>(ss: &'a str, lim: usize, mut it: F)\n-                            -> bool where F: FnMut(&'a str) -> bool {\n-    // Just for fun, let's write this as a state machine:\n-\n-    let mut slice_start = 0;\n-    let mut last_start = 0;\n-    let mut last_end = 0;\n-    let mut state = A;\n-    let mut fake_i = ss.len();\n-    let mut lim = lim;\n-\n-    let mut cont = true;\n-\n-    // if the limit is larger than the string, lower it to save cycles\n-    if lim >= fake_i {\n-        lim = fake_i;\n-    }\n-\n-    let mut machine = |cont: &mut bool, (i, c): (usize, char)| {\n-        let whitespace = if c.is_whitespace() { Ws }       else { Cr };\n-        let limit      = if (i - slice_start + 1) <= lim  { UnderLim } else { OverLim };\n-\n-        state = match (state, whitespace, limit) {\n-            (A, Ws, _)        => { A }\n-            (A, Cr, _)        => { slice_start = i; last_start = i; B }\n-\n-            (B, Cr, UnderLim) => { B }\n-            (B, Cr, OverLim)  if (i - last_start + 1) > lim\n-                            => panic!(\"word starting with {} longer than limit!\",\n-                                      &ss[last_start..i + 1]),\n-            (B, Cr, OverLim)  => {\n-                *cont = it(&ss[slice_start..last_end]);\n-                slice_start = last_start;\n-                B\n-            }\n-            (B, Ws, UnderLim) => {\n-                last_end = i;\n-                C\n-            }\n-            (B, Ws, OverLim)  => {\n-                last_end = i;\n-                *cont = it(&ss[slice_start..last_end]);\n-                A\n-            }\n-\n-            (C, Cr, UnderLim) => {\n-                last_start = i;\n-                B\n-            }\n-            (C, Cr, OverLim)  => {\n-                *cont = it(&ss[slice_start..last_end]);\n-                slice_start = i;\n-                last_start = i;\n-                last_end = i;\n-                B\n-            }\n-            (C, Ws, OverLim)  => {\n-                *cont = it(&ss[slice_start..last_end]);\n-                A\n-            }\n-            (C, Ws, UnderLim) => {\n-                C\n-            }\n-        };\n-\n-        *cont\n-    };\n-\n-    ss.char_indices().all(|x| machine(&mut cont, x));\n-\n-    // Let the automaton 'run out' by supplying trailing whitespace\n-    while cont && match state { B | C => true, A => false } {\n-        machine(&mut cont, (fake_i, ' '));\n-        fake_i += 1;\n-    }\n-    return cont;\n-}\n-\n-#[test]\n-fn test_split_within() {\n-    fn t(s: &str, i: usize, u: &[String]) {\n-        let mut v = Vec::new();\n-        each_split_within(s, i, |s| { v.push(s.to_string()); true });\n-        assert!(v.iter().zip(u.iter()).all(|(a,b)| a == b));\n-    }\n-    t(\"\", 0, &[]);\n-    t(\"\", 15, &[]);\n-    t(\"hello\", 15, &[\"hello\".to_string()]);\n-    t(\"\\nMary had a little lamb\\nLittle lamb\\n\", 15, &[\n-        \"Mary had a\".to_string(),\n-        \"little lamb\".to_string(),\n-        \"Little lamb\".to_string()\n-    ]);\n-    t(\"\\nMary had a little lamb\\nLittle lamb\\n\", ::std::usize::MAX,\n-        &[\"Mary had a little lamb\\nLittle lamb\".to_string()]);\n-}\n-\n-#[cfg(test)]\n-mod tests {\n-    use super::{HasArg, Name, Occur, Opt, Options, ParsingStyle};\n-    use super::Fail::*;\n-\n-    // Tests for reqopt\n-    #[test]\n-    fn test_reqopt() {\n-        let long_args = vec!(\"--test=20\".to_string());\n-        let mut opts = Options::new();\n-        opts.reqopt(\"t\", \"test\", \"testing\", \"TEST\");\n-        match opts.parse(&long_args) {\n-          Ok(ref m) => {\n-            assert!(m.opt_present(\"test\"));\n-            assert_eq!(m.opt_str(\"test\").unwrap(), \"20\");\n-            assert!(m.opt_present(\"t\"));\n-            assert_eq!(m.opt_str(\"t\").unwrap(), \"20\");\n-          }\n-          _ => { panic!(\"test_reqopt failed (long arg)\"); }\n-        }\n-        let short_args = vec!(\"-t\".to_string(), \"20\".to_string());\n-        match opts.parse(&short_args) {\n-          Ok(ref m) => {\n-            assert!((m.opt_present(\"test\")));\n-            assert_eq!(m.opt_str(\"test\").unwrap(), \"20\");\n-            assert!((m.opt_present(\"t\")));\n-            assert_eq!(m.opt_str(\"t\").unwrap(), \"20\");\n-          }\n-          _ => { panic!(\"test_reqopt failed (short arg)\"); }\n-        }\n-    }\n-\n-    #[test]\n-    fn test_reqopt_missing() {\n-        let args = vec!(\"blah\".to_string());\n-        match Options::new()\n-                      .reqopt(\"t\", \"test\", \"testing\", \"TEST\")\n-                      .parse(&args) {\n-          Err(OptionMissing(_)) => {},\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_reqopt_no_arg() {\n-        let long_args = vec!(\"--test\".to_string());\n-        let mut opts = Options::new();\n-        opts.reqopt(\"t\", \"test\", \"testing\", \"TEST\");\n-        match opts.parse(&long_args) {\n-          Err(ArgumentMissing(_)) => {},\n-          _ => panic!()\n-        }\n-        let short_args = vec!(\"-t\".to_string());\n-        match opts.parse(&short_args) {\n-          Err(ArgumentMissing(_)) => {},\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_reqopt_multi() {\n-        let args = vec!(\"--test=20\".to_string(), \"-t\".to_string(), \"30\".to_string());\n-        match Options::new()\n-                      .reqopt(\"t\", \"test\", \"testing\", \"TEST\")\n-                      .parse(&args) {\n-          Err(OptionDuplicated(_)) => {},\n-          _ => panic!()\n-        }\n-    }\n-\n-    // Tests for optopt\n-    #[test]\n-    fn test_optopt() {\n-        let long_args = vec!(\"--test=20\".to_string());\n-        let mut opts = Options::new();\n-        opts.optopt(\"t\", \"test\", \"testing\", \"TEST\");\n-        match opts.parse(&long_args) {\n-          Ok(ref m) => {\n-            assert!(m.opt_present(\"test\"));\n-            assert_eq!(m.opt_str(\"test\").unwrap(), \"20\");\n-            assert!((m.opt_present(\"t\")));\n-            assert_eq!(m.opt_str(\"t\").unwrap(), \"20\");\n-          }\n-          _ => panic!()\n-        }\n-        let short_args = vec!(\"-t\".to_string(), \"20\".to_string());\n-        match opts.parse(&short_args) {\n-          Ok(ref m) => {\n-            assert!((m.opt_present(\"test\")));\n-            assert_eq!(m.opt_str(\"test\").unwrap(), \"20\");\n-            assert!((m.opt_present(\"t\")));\n-            assert_eq!(m.opt_str(\"t\").unwrap(), \"20\");\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optopt_missing() {\n-        let args = vec!(\"blah\".to_string());\n-        match Options::new()\n-                      .optopt(\"t\", \"test\", \"testing\", \"TEST\")\n-                      .parse(&args) {\n-          Ok(ref m) => {\n-            assert!(!m.opt_present(\"test\"));\n-            assert!(!m.opt_present(\"t\"));\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optopt_no_arg() {\n-        let long_args = vec!(\"--test\".to_string());\n-        let mut opts = Options::new();\n-        opts.optopt(\"t\", \"test\", \"testing\", \"TEST\");\n-        match opts.parse(&long_args) {\n-          Err(ArgumentMissing(_)) => {},\n-          _ => panic!()\n-        }\n-        let short_args = vec!(\"-t\".to_string());\n-        match opts.parse(&short_args) {\n-          Err(ArgumentMissing(_)) => {},\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optopt_multi() {\n-        let args = vec!(\"--test=20\".to_string(), \"-t\".to_string(), \"30\".to_string());\n-        match Options::new()\n-                      .optopt(\"t\", \"test\", \"testing\", \"TEST\")\n-                      .parse(&args) {\n-          Err(OptionDuplicated(_)) => {},\n-          _ => panic!()\n-        }\n-    }\n-\n-    // Tests for optflag\n-    #[test]\n-    fn test_optflag() {\n-        let long_args = vec!(\"--test\".to_string());\n-        let mut opts = Options::new();\n-        opts.optflag(\"t\", \"test\", \"testing\");\n-        match opts.parse(&long_args) {\n-          Ok(ref m) => {\n-            assert!(m.opt_present(\"test\"));\n-            assert!(m.opt_present(\"t\"));\n-          }\n-          _ => panic!()\n-        }\n-        let short_args = vec!(\"-t\".to_string());\n-        match opts.parse(&short_args) {\n-          Ok(ref m) => {\n-            assert!(m.opt_present(\"test\"));\n-            assert!(m.opt_present(\"t\"));\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optflag_missing() {\n-        let args = vec!(\"blah\".to_string());\n-        match Options::new()\n-                      .optflag(\"t\", \"test\", \"testing\")\n-                      .parse(&args) {\n-          Ok(ref m) => {\n-            assert!(!m.opt_present(\"test\"));\n-            assert!(!m.opt_present(\"t\"));\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optflag_long_arg() {\n-        let args = vec!(\"--test=20\".to_string());\n-        match Options::new()\n-                      .optflag(\"t\", \"test\", \"testing\")\n-                      .parse(&args) {\n-          Err(UnexpectedArgument(_)) => {},\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optflag_multi() {\n-        let args = vec!(\"--test\".to_string(), \"-t\".to_string());\n-        match Options::new()\n-                      .optflag(\"t\", \"test\", \"testing\")\n-                      .parse(&args) {\n-          Err(OptionDuplicated(_)) => {},\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optflag_short_arg() {\n-        let args = vec!(\"-t\".to_string(), \"20\".to_string());\n-        match Options::new()\n-                      .optflag(\"t\", \"test\", \"testing\")\n-                      .parse(&args) {\n-          Ok(ref m) => {\n-            // The next variable after the flag is just a free argument\n-\n-            assert!(m.free[0] == \"20\");\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    // Tests for optflagmulti\n-    #[test]\n-    fn test_optflagmulti_short1() {\n-        let args = vec!(\"-v\".to_string());\n-        match Options::new()\n-                      .optflagmulti(\"v\", \"verbose\", \"verbosity\")\n-                      .parse(&args) {\n-          Ok(ref m) => {\n-            assert_eq!(m.opt_count(\"v\"), 1);\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optflagmulti_short2a() {\n-        let args = vec!(\"-v\".to_string(), \"-v\".to_string());\n-        match Options::new()\n-                      .optflagmulti(\"v\", \"verbose\", \"verbosity\")\n-                      .parse(&args) {\n-          Ok(ref m) => {\n-            assert_eq!(m.opt_count(\"v\"), 2);\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optflagmulti_short2b() {\n-        let args = vec!(\"-vv\".to_string());\n-        match Options::new()\n-                      .optflagmulti(\"v\", \"verbose\", \"verbosity\")\n-                      .parse(&args) {\n-          Ok(ref m) => {\n-            assert_eq!(m.opt_count(\"v\"), 2);\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optflagmulti_long1() {\n-        let args = vec!(\"--verbose\".to_string());\n-        match Options::new()\n-                      .optflagmulti(\"v\", \"verbose\", \"verbosity\")\n-                      .parse(&args) {\n-          Ok(ref m) => {\n-            assert_eq!(m.opt_count(\"verbose\"), 1);\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optflagmulti_long2() {\n-        let args = vec!(\"--verbose\".to_string(), \"--verbose\".to_string());\n-        match Options::new()\n-                      .optflagmulti(\"v\", \"verbose\", \"verbosity\")\n-                      .parse(&args) {\n-          Ok(ref m) => {\n-            assert_eq!(m.opt_count(\"verbose\"), 2);\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optflagmulti_mix() {\n-        let args = vec!(\"--verbose\".to_string(), \"-v\".to_string(),\n-                        \"-vv\".to_string(), \"verbose\".to_string());\n-        match Options::new()\n-                      .optflagmulti(\"v\", \"verbose\", \"verbosity\")\n-                      .parse(&args) {\n-          Ok(ref m) => {\n-            assert_eq!(m.opt_count(\"verbose\"), 4);\n-            assert_eq!(m.opt_count(\"v\"), 4);\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    // Tests for optflagopt\n-    #[test]\n-    fn test_optflagopt() {\n-        let long_args = vec!(\"--test\".to_string());\n-        let mut opts = Options::new();\n-        opts.optflag(\"t\", \"test\", \"testing\");\n-        match opts.parse(&long_args) {\n-          Ok(ref m) => {\n-            assert!(m.opt_present(\"test\"));\n-            assert!(m.opt_present(\"t\"));\n-          }\n-          _ => panic!()\n-        }\n-        let short_args = vec!(\"-t\".to_string());\n-        match opts.parse(&short_args) {\n-          Ok(ref m) => {\n-            assert!(m.opt_present(\"test\"));\n-            assert!(m.opt_present(\"t\"));\n-          }\n-          _ => panic!()\n-        }\n-        let no_args: Vec<String> = vec!();\n-        match opts.parse(&no_args) {\n-          Ok(ref m) => {\n-            assert!(!m.opt_present(\"test\"));\n-            assert!(!m.opt_present(\"t\"));\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    // Tests for optmulti\n-    #[test]\n-    fn test_optmulti() {\n-        let long_args = vec!(\"--test=20\".to_string());\n-        let mut opts = Options::new();\n-        opts.optmulti(\"t\", \"test\", \"testing\", \"TEST\");\n-        match opts.parse(&long_args) {\n-          Ok(ref m) => {\n-            assert!((m.opt_present(\"test\")));\n-            assert_eq!(m.opt_str(\"test\").unwrap(), \"20\");\n-            assert!((m.opt_present(\"t\")));\n-            assert_eq!(m.opt_str(\"t\").unwrap(), \"20\");\n-          }\n-          _ => panic!()\n-        }\n-        let short_args = vec!(\"-t\".to_string(), \"20\".to_string());\n-        match opts.parse(&short_args) {\n-          Ok(ref m) => {\n-            assert!((m.opt_present(\"test\")));\n-            assert_eq!(m.opt_str(\"test\").unwrap(), \"20\");\n-            assert!((m.opt_present(\"t\")));\n-            assert_eq!(m.opt_str(\"t\").unwrap(), \"20\");\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optmulti_missing() {\n-        let args = vec!(\"blah\".to_string());\n-        match Options::new()\n-                      .optmulti(\"t\", \"test\", \"testing\", \"TEST\")\n-                      .parse(&args) {\n-          Ok(ref m) => {\n-            assert!(!m.opt_present(\"test\"));\n-            assert!(!m.opt_present(\"t\"));\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optmulti_no_arg() {\n-        let long_args = vec!(\"--test\".to_string());\n-        let mut opts = Options::new();\n-        opts.optmulti(\"t\", \"test\", \"testing\", \"TEST\");\n-        match opts.parse(&long_args) {\n-          Err(ArgumentMissing(_)) => {},\n-          _ => panic!()\n-        }\n-        let short_args = vec!(\"-t\".to_string());\n-        match opts.parse(&short_args) {\n-          Err(ArgumentMissing(_)) => {},\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_optmulti_multi() {\n-        let args = vec!(\"--test=20\".to_string(), \"-t\".to_string(), \"30\".to_string());\n-        match Options::new()\n-                      .optmulti(\"t\", \"test\", \"testing\", \"TEST\")\n-                      .parse(&args) {\n-          Ok(ref m) => {\n-              assert!(m.opt_present(\"test\"));\n-              assert_eq!(m.opt_str(\"test\").unwrap(), \"20\");\n-              assert!(m.opt_present(\"t\"));\n-              assert_eq!(m.opt_str(\"t\").unwrap(), \"20\");\n-              let pair = m.opt_strs(\"test\");\n-              assert!(pair[0] == \"20\");\n-              assert!(pair[1] == \"30\");\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_free_argument_is_hyphen() {\n-        let args = vec!(\"-\".to_string());\n-        match Options::new().parse(&args) {\n-            Ok(ref m) => {\n-                assert_eq!(m.free.len(), 1);\n-                assert_eq!(m.free[0], \"-\");\n-            }\n-            _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_unrecognized_option() {\n-        let long_args = vec!(\"--untest\".to_string());\n-        let mut opts = Options::new();\n-        opts.optmulti(\"t\", \"test\", \"testing\", \"TEST\");\n-        match opts.parse(&long_args) {\n-          Err(UnrecognizedOption(_)) => {},\n-          _ => panic!()\n-        }\n-        let short_args = vec!(\"-u\".to_string());\n-        match opts.parse(&short_args) {\n-          Err(UnrecognizedOption(_)) => {},\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_combined() {\n-        let args =\n-            vec!(\"prog\".to_string(),\n-                 \"free1\".to_string(),\n-                 \"-s\".to_string(),\n-                 \"20\".to_string(),\n-                 \"free2\".to_string(),\n-                 \"--flag\".to_string(),\n-                 \"--long=30\".to_string(),\n-                 \"-f\".to_string(),\n-                 \"-m\".to_string(),\n-                 \"40\".to_string(),\n-                 \"-m\".to_string(),\n-                 \"50\".to_string(),\n-                 \"-n\".to_string(),\n-                 \"-A B\".to_string(),\n-                 \"-n\".to_string(),\n-                 \"-60 70\".to_string());\n-        match Options::new()\n-                      .optopt(\"s\", \"something\", \"something\", \"SOMETHING\")\n-                      .optflag(\"\", \"flag\", \"a flag\")\n-                      .reqopt(\"\", \"long\", \"hi\", \"LONG\")\n-                      .optflag(\"f\", \"\", \"another flag\")\n-                      .optmulti(\"m\", \"\", \"mmmmmm\", \"YUM\")\n-                      .optmulti(\"n\", \"\", \"nothing\", \"NOTHING\")\n-                      .optopt(\"\", \"notpresent\", \"nothing to see here\", \"NOPE\")\n-                      .parse(&args) {\n-          Ok(ref m) => {\n-            assert!(m.free[0] == \"prog\");\n-            assert!(m.free[1] == \"free1\");\n-            assert_eq!(m.opt_str(\"s\").unwrap(), \"20\");\n-            assert!(m.free[2] == \"free2\");\n-            assert!((m.opt_present(\"flag\")));\n-            assert_eq!(m.opt_str(\"long\").unwrap(), \"30\");\n-            assert!((m.opt_present(\"f\")));\n-            let pair = m.opt_strs(\"m\");\n-            assert!(pair[0] == \"40\");\n-            assert!(pair[1] == \"50\");\n-            let pair = m.opt_strs(\"n\");\n-            assert!(pair[0] == \"-A B\");\n-            assert!(pair[1] == \"-60 70\");\n-            assert!((!m.opt_present(\"notpresent\")));\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_mixed_stop() {\n-        let args =\n-            vec!(\"-a\".to_string(),\n-                 \"b\".to_string(),\n-                 \"-c\".to_string(),\n-                 \"d\".to_string());\n-        match Options::new()\n-              .parsing_style(ParsingStyle::StopAtFirstFree)\n-              .optflag(\"a\", \"\", \"\")\n-              .optopt(\"c\", \"\", \"\", \"\")\n-              .parse(&args) {\n-          Ok(ref m) => {\n-            println!(\"{}\", m.opt_present(\"c\"));\n-            assert!(m.opt_present(\"a\"));\n-            assert!(!m.opt_present(\"c\"));\n-            assert_eq!(m.free.len(), 3);\n-            assert_eq!(m.free[0], \"b\");\n-            assert_eq!(m.free[1], \"-c\");\n-            assert_eq!(m.free[2], \"d\");\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_mixed_stop_hyphen() {\n-        let args =\n-            vec!(\"-a\".to_string(),\n-                 \"-\".to_string(),\n-                 \"-c\".to_string(),\n-                 \"d\".to_string());\n-        match Options::new()\n-              .parsing_style(ParsingStyle::StopAtFirstFree)\n-              .optflag(\"a\", \"\", \"\")\n-              .optopt(\"c\", \"\", \"\", \"\")\n-              .parse(&args) {\n-          Ok(ref m) => {\n-            println!(\"{}\", m.opt_present(\"c\"));\n-            assert!(m.opt_present(\"a\"));\n-            assert!(!m.opt_present(\"c\"));\n-            assert_eq!(m.free.len(), 3);\n-            assert_eq!(m.free[0], \"-\");\n-            assert_eq!(m.free[1], \"-c\");\n-            assert_eq!(m.free[2], \"d\");\n-          }\n-          _ => panic!()\n-        }\n-    }\n-\n-    #[test]\n-    fn test_multi() {\n-        let mut opts = Options::new();\n-        opts.optopt(\"e\", \"\", \"encrypt\", \"ENCRYPT\");\n-        opts.optopt(\"\", \"encrypt\", \"encrypt\", \"ENCRYPT\");\n-        opts.optopt(\"f\", \"\", \"flag\", \"FLAG\");\n-\n-        let args_single = vec!(\"-e\".to_string(), \"foo\".to_string());\n-        let matches_single = &match opts.parse(&args_single) {\n-          Ok(m) => m,\n-          Err(_) => panic!()\n-        };\n-        assert!(matches_single.opts_present(&[\"e\".to_string()]));\n-        assert!(matches_single.opts_present(&[\"encrypt\".to_string(), \"e\".to_string()]));\n-        assert!(matches_single.opts_present(&[\"e\".to_string(), \"encrypt\".to_string()]));\n-        assert!(!matches_single.opts_present(&[\"encrypt\".to_string()]));\n-        assert!(!matches_single.opts_present(&[\"thing\".to_string()]));\n-        assert!(!matches_single.opts_present(&[]));\n-\n-        assert_eq!(matches_single.opts_str(&[\"e\".to_string()]).unwrap(), \"foo\");\n-        assert_eq!(matches_single.opts_str(&[\"e\".to_string(), \"encrypt\".to_string()]).unwrap(),\n-                   \"foo\");\n-        assert_eq!(matches_single.opts_str(&[\"encrypt\".to_string(), \"e\".to_string()]).unwrap(),\n-                   \"foo\");\n-\n-        let args_both = vec!(\"-e\".to_string(), \"foo\".to_string(), \"--encrypt\".to_string(),\n-                             \"foo\".to_string());\n-        let matches_both = &match opts.parse(&args_both) {\n-          Ok(m) => m,\n-          Err(_) => panic!()\n-        };\n-        assert!(matches_both.opts_present(&[\"e\".to_string()]));\n-        assert!(matches_both.opts_present(&[\"encrypt\".to_string()]));\n-        assert!(matches_both.opts_present(&[\"encrypt\".to_string(), \"e\".to_string()]));\n-        assert!(matches_both.opts_present(&[\"e\".to_string(), \"encrypt\".to_string()]));\n-        assert!(!matches_both.opts_present(&[\"f\".to_string()]));\n-        assert!(!matches_both.opts_present(&[\"thing\".to_string()]));\n-        assert!(!matches_both.opts_present(&[]));\n-\n-        assert_eq!(matches_both.opts_str(&[\"e\".to_string()]).unwrap(), \"foo\");\n-        assert_eq!(matches_both.opts_str(&[\"encrypt\".to_string()]).unwrap(), \"foo\");\n-        assert_eq!(matches_both.opts_str(&[\"e\".to_string(), \"encrypt\".to_string()]).unwrap(),\n-                   \"foo\");\n-        assert_eq!(matches_both.opts_str(&[\"encrypt\".to_string(), \"e\".to_string()]).unwrap(),\n-                   \"foo\");\n-    }\n-\n-    #[test]\n-    fn test_nospace() {\n-        let args = vec!(\"-Lfoo\".to_string(), \"-M.\".to_string());\n-        let matches = &match Options::new()\n-                                     .optmulti(\"L\", \"\", \"library directory\", \"LIB\")\n-                                     .optmulti(\"M\", \"\", \"something\", \"MMMM\")\n-                                     .parse(&args) {\n-          Ok(m) => m,\n-          Err(_) => panic!()\n-        };\n-        assert!(matches.opts_present(&[\"L\".to_string()]));\n-        assert_eq!(matches.opts_str(&[\"L\".to_string()]).unwrap(), \"foo\");\n-        assert!(matches.opts_present(&[\"M\".to_string()]));\n-        assert_eq!(matches.opts_str(&[\"M\".to_string()]).unwrap(), \".\");\n-\n-    }\n-\n-    #[test]\n-    fn test_nospace_conflict() {\n-        let args = vec!(\"-vvLverbose\".to_string(), \"-v\".to_string() );\n-        let matches = &match Options::new()\n-                                     .optmulti(\"L\", \"\", \"library directory\", \"LIB\")\n-                                     .optflagmulti(\"v\", \"verbose\", \"Verbose\")\n-                                     .parse(&args) {\n-          Ok(m) => m,\n-          Err(e) => panic!( \"{}\", e )\n-        };\n-        assert!(matches.opts_present(&[\"L\".to_string()]));\n-        assert_eq!(matches.opts_str(&[\"L\".to_string()]).unwrap(), \"verbose\");\n-        assert!(matches.opts_present(&[\"v\".to_string()]));\n-        assert_eq!(3, matches.opt_count(\"v\"));\n-    }\n-\n-    #[test]\n-    fn test_long_to_short() {\n-        let mut short = Opt {\n-            name: Name::Long(\"banana\".to_string()),\n-            hasarg: HasArg::Yes,\n-            occur: Occur::Req,\n-            aliases: Vec::new(),\n-        };\n-        short.aliases = vec!(Opt { name: Name::Short('b'),\n-                                hasarg: HasArg::Yes,\n-                                occur: Occur::Req,\n-                                aliases: Vec::new() });\n-        let mut opts = Options::new();\n-        opts.reqopt(\"b\", \"banana\", \"some bananas\", \"VAL\");\n-        let ref verbose = opts.grps[0];\n-        assert!(verbose.long_to_short() == short);\n-    }\n-\n-    #[test]\n-    fn test_aliases_long_and_short() {\n-        let args = vec!(\"-a\".to_string(), \"--apple\".to_string(), \"-a\".to_string());\n-\n-        let matches = Options::new()\n-                              .optflagmulti(\"a\", \"apple\", \"Desc\")\n-                              .parse(&args)\n-                              .unwrap();\n-        assert_eq!(3, matches.opt_count(\"a\"));\n-        assert_eq!(3, matches.opt_count(\"apple\"));\n-    }\n-\n-    #[test]\n-    fn test_usage() {\n-        let mut opts = Options::new();\n-        opts.reqopt(\"b\", \"banana\", \"Desc\", \"VAL\");\n-        opts.optopt(\"a\", \"012345678901234567890123456789\",\n-                             \"Desc\", \"VAL\");\n-        opts.optflag(\"k\", \"kiwi\", \"Desc\");\n-        opts.optflagopt(\"p\", \"\", \"Desc\", \"VAL\");\n-        opts.optmulti(\"l\", \"\", \"Desc\", \"VAL\");\n-        opts.optflag(\"\", \"starfruit\", \"Starfruit\");\n-\n-        let expected =\n-\"Usage: fruits\n-\n-Options:\n-    -b, --banana VAL    Desc\n-    -a, --012345678901234567890123456789 VAL\n-                        Desc\n-    -k, --kiwi          Desc\n-    -p [VAL]            Desc\n-    -l VAL              Desc\n-        --starfruit     Starfruit\n-\";\n-\n-        let generated_usage = opts.usage(\"Usage: fruits\");\n-\n-        debug!(\"expected: <<{}>>\", expected);\n-        debug!(\"generated: <<{}>>\", generated_usage);\n-        assert_eq!(generated_usage, expected);\n-    }\n-\n-    #[test]\n-    fn test_usage_description_wrapping() {\n-        // indentation should be 24 spaces\n-        // lines wrap after 78: or rather descriptions wrap after 54\n-\n-        let mut opts = Options::new();\n-        opts.optflag(\"k\", \"kiwi\",\n-            \"This is a long description which won't be wrapped..+..\"); // 54\n-        opts.optflag(\"a\", \"apple\",\n-            \"This is a long description which _will_ be wrapped..+..\");\n-\n-        let expected =\n-\"Usage: fruits\n-\n-Options:\n-    -k, --kiwi          This is a long description which won't be wrapped..+..\n-    -a, --apple         This is a long description which _will_ be\n-                        wrapped..+..\n-\";\n-\n-        let usage = opts.usage(\"Usage: fruits\");\n-\n-        debug!(\"expected: <<{}>>\", expected);\n-        debug!(\"generated: <<{}>>\", usage);\n-        assert!(usage == expected)\n-    }\n-\n-    #[test]\n-    fn test_usage_description_multibyte_handling() {\n-        let mut opts = Options::new();\n-        opts.optflag(\"k\", \"k\\u{2013}w\\u{2013}\",\n-            \"The word kiwi is normally spelled with two i's\");\n-        opts.optflag(\"a\", \"apple\",\n-            \"This \\u{201C}description\\u{201D} has some characters that could \\\n-confuse the line wrapping; an apple costs 0.51\u20ac in some parts of Europe.\");\n-\n-        let expected =\n-\"Usage: fruits\n-\n-Options:\n-    -k, --k\u2013w\u2013          The word kiwi is normally spelled with two i's\n-    -a, --apple         This \u201cdescription\u201d has some characters that could\n-                        confuse the line wrapping; an apple costs 0.51\u20ac in\n-                        some parts of Europe.\n-\";\n-\n-        let usage = opts.usage(\"Usage: fruits\");\n-\n-        debug!(\"expected: <<{}>>\", expected);\n-        debug!(\"generated: <<{}>>\", usage);\n-        assert!(usage == expected)\n-    }\n-\n-    #[test]\n-    fn test_usage_short_only() {\n-        let mut opts = Options::new();\n-        opts.optopt(\"k\", \"\", \"Kiwi\", \"VAL\");\n-        opts.optflag(\"s\", \"\", \"Starfruit\");\n-        opts.optflagopt(\"a\", \"\", \"Apple\", \"TYPE\");\n-\n-        let expected =\n-\"Usage: fruits\n-\n-Options:\n-    -k VAL              Kiwi\n-    -s                  Starfruit\n-    -a [TYPE]           Apple\n-\";\n-\n-        let usage = opts.usage(\"Usage: fruits\");\n-        debug!(\"expected: <<{}>>\", expected);\n-        debug!(\"generated: <<{}>>\", usage);\n-        assert!(usage == expected)\n-    }\n-\n-    #[test]\n-    fn test_usage_long_only() {\n-        let mut opts = Options::new();\n-        opts.optopt(\"\", \"kiwi\", \"Kiwi\", \"VAL\");\n-        opts.optflag(\"\", \"starfruit\", \"Starfruit\");\n-        opts.optflagopt(\"\", \"apple\", \"Apple\", \"TYPE\");\n-\n-        let expected =\n-\"Usage: fruits\n-\n-Options:\n-    --kiwi VAL          Kiwi\n-    --starfruit         Starfruit\n-    --apple [TYPE]      Apple\n-\";\n-\n-        let usage = opts.usage(\"Usage: fruits\");\n-        debug!(\"expected: <<{}>>\", expected);\n-        debug!(\"generated: <<{}>>\", usage);\n-        assert!(usage == expected)\n-    }\n-\n-    #[test]\n-    fn test_short_usage() {\n-        let mut opts = Options::new();\n-        opts.reqopt(\"b\", \"banana\", \"Desc\", \"VAL\");\n-        opts.optopt(\"a\", \"012345678901234567890123456789\",\n-                     \"Desc\", \"VAL\");\n-        opts.optflag(\"k\", \"kiwi\", \"Desc\");\n-        opts.optflagopt(\"p\", \"\", \"Desc\", \"VAL\");\n-        opts.optmulti(\"l\", \"\", \"Desc\", \"VAL\");\n-\n-        let expected = \"Usage: fruits -b VAL [-a VAL] [-k] [-p [VAL]] [-l VAL]..\".to_string();\n-        let generated_usage = opts.short_usage(\"fruits\");\n-\n-        debug!(\"expected: <<{}>>\", expected);\n-        debug!(\"generated: <<{}>>\", generated_usage);\n-        assert_eq!(generated_usage, expected);\n-    }\n-\n-    #[test]\n-    fn test_args_with_equals() {\n-        let mut opts = Options::new();\n-        opts.optopt(\"o\", \"one\", \"One\", \"INFO\");\n-        opts.optopt(\"t\", \"two\", \"Two\", \"INFO\");\n-\n-        let args = vec!(\"--one\".to_string(), \"A=B\".to_string(),\n-                        \"--two=C=D\".to_string());\n-        let matches = &match opts.parse(&args) {\n-            Ok(m) => m,\n-            Err(e) => panic!(\"{}\", e)\n-        };\n-        assert_eq!(matches.opts_str(&[\"o\".to_string()]).unwrap(), \"A=B\");\n-        assert_eq!(matches.opts_str(&[\"t\".to_string()]).unwrap(), \"C=D\");\n-    }\n-}"}, {"sha": "a46f9c0167ab307f66515911b3b5ae246b38a61a", "filename": "src/vendor/getopts/tests/smoke.rs", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2Ftests%2Fsmoke.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fgetopts%2Ftests%2Fsmoke.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fgetopts%2Ftests%2Fsmoke.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,8 +0,0 @@\n-extern crate getopts;\n-\n-use std::env;\n-\n-#[test]\n-fn main() {\n-    getopts::Options::new().parse(env::args()).unwrap();\n-}"}, {"sha": "56c0bb8d2559c0b1f93761f405551e035fb92cb0", "filename": "src/vendor/libc/.cargo-checksum.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2F.cargo-checksum.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2F.cargo-checksum.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2F.cargo-checksum.json?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1 +0,0 @@\n-{\"files\":{\".cargo-ok\":\"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\",\".gitignore\":\"7150ee9391a955b2ef7e0762fc61c0c1aab167620ca36d88d78062d93b8334ba\",\".travis.yml\":\"ca5e05b688a8c9a3215de3b38f22f4b468f73d26738a80bd939af503ddb222e1\",\"Cargo.toml\":\"4b1f0d59b5fb939877a639d1d4cac5a12440c6e2d366edf2abcb45c46e3dcd3e\",\"LICENSE-APACHE\":\"a60eea817514531668d7e00765731449fe14d059d3249e0bc93b36de45f759f2\",\"LICENSE-MIT\":\"6485b8ed310d3f0340bf1ad1f47645069ce4069dcc6bb46c7d5c6faf41de1fdb\",\"README.md\":\"c1f46480074340f17f1c3ea989b28e6b632b9d324e57792293a60399b90bfda0\",\"appveyor.yml\":\"c0d70c650b6231e6ff78a352224f1a522a9be69d9da4251adbaddb3f0393294d\",\"ci/README.md\":\"be804f15e2128e5fd4b160cb0b13cff5f19e7d77b55ec5254aa6fd8731c84f0d\",\"ci/docker/aarch64-unknown-linux-gnu/Dockerfile\":\"62ca7317439f9c303990e897450a91cd467be05eb75dfc01456d417932ac8672\",\"ci/docker/arm-linux-androideabi/Dockerfile\":\"c3d60f2ba389e60e59cb6973542751c66a0e7bd484e11589c8ee7346e9ff2bab\",\"ci/docker/arm-unknown-linux-gnueabihf/Dockerfile\":\"e349f7caa463adbde8d6ec4d2b9f7720ed81c77f48d75bbfb78c89751f55c2dc\",\"ci/docker/i686-unknown-linux-gnu/Dockerfile\":\"07e9df6ba91025cbec7ae81ade63f8cfb8a54c5e1e5a8f8def0617e17bd59db0\",\"ci/docker/i686-unknown-linux-musl/Dockerfile\":\"1a4d064adff4a8f58773305567cfe5d915bcd0762bcb0e101cf6f4ca628a96da\",\"ci/docker/mips-unknown-linux-gnu/Dockerfile\":\"860299d96ee50ebdbd788e65eb6ba1f561ef66107647bddffcb2567ac350896b\",\"ci/docker/mips-unknown-linux-musl/Dockerfile\":\"b5917a15c0998adb79ebfdb8aff9ab0e5c4098c4bd5ca78e90ee05859dcfbda3\",\"ci/docker/mips64-unknown-linux-gnuabi64/Dockerfile\":\"163776e0fd38f66df7415421202ac29efc7d345a628947434e573c3885594ab5\",\"ci/docker/mipsel-unknown-linux-musl/Dockerfile\":\"b2dd4c26890c1070228df9694adde8fdb1fe78d7d5a71a8cb5c1b54835f93c46\",\"ci/docker/powerpc-unknown-linux-gnu/Dockerfile\":\"08b846a338c2ee70100f4e80db812668dc58bfb536c44a95cd1cf004d965186b\",\"ci/docker/powerpc64-unknown-linux-gnu/Dockerfile\":\"4da285ffd035d16f5da9e3701841eb86049c8cfa417fa81e53da4ef74152eac0\",\"ci/docker/x86_64-rumprun-netbsd/Dockerfile\":\"44c3107fb30380785aaed6ff73fa334017a5bb4e3b5c7d4876154f09023a2b99\",\"ci/docker/x86_64-unknown-freebsd/Dockerfile\":\"56fce89ceb70792be9005425f3e896361f5ba8a0553db659da87daced93f9785\",\"ci/docker/x86_64-unknown-linux-gnu/Dockerfile\":\"67fabbc8c6ac02376cf9344251ad49ecdac396b71accb572fd1ae65225325bc0\",\"ci/docker/x86_64-unknown-linux-musl/Dockerfile\":\"f71019fed5204b950843ef5e56144161fda7e27fad68ed0e8bc4353c388c7bcf\",\"ci/docker/x86_64-unknown-openbsd/Dockerfile\":\"4a5583797a613056d87f6ae0b1d7a3d3a55552efa7c30e1e0aa67e34d69b4d9c\",\"ci/dox.sh\":\"2161cb17ee0d6a2279a64149c6b7c73a5b2eab344f248ea1fa0e6c8f6335ec5f\",\"ci/landing-page-footer.html\":\"b70b3112c2147f5c967e7481061ef38bc2d79a28dd55a16fb916d9c9426da2c4\",\"ci/landing-page-head.html\":\"ad69663fac7924f27d0209bc519d55838e86edfc4133713a6fd08caadac1b142\",\"ci/run-docker.sh\":\"325648a92ff4d74f18fdf3d190a5cd483306ed2a98479c0742ca7284acd6b948\",\"ci/run-qemu.sh\":\"bb859421170871ef23a8940c5e150efec0c01b95e32d2ce2d37b79a45d9d346c\",\"ci/run.sh\":\"3bb839c2d28986c6915b8f11ed820ff6c62e755fb96bd921a18899ee5f7efd32\",\"ci/style.rs\":\"60564abc1d5197ed1598426dd0d6ee9939a16d2875b03373538f58843bb616c4\",\"src/dox.rs\":\"eb6fbcc0b8b59430271bb71ee023961fd165337fc5fd6ca433882457a3c735bd\",\"src/lib.rs\":\"4cece0e880ec8731913e5110b58d1b134148b0a43e72d6b990c1d999916fc706\",\"src/macros.rs\":\"bd9802772b0e5c8b3c550d1c24307f06c0d1e4ce656b4ae1cf092142bbe5412c\",\"src/unix/bsd/apple/b32.rs\":\"110ecff78da0e8d405d861447904da403d8b3f6da1f0f9dc9987633f3f04fe46\",\"src/unix/bsd/apple/b64.rs\":\"e6808081c0b276cca3189628716f507c7c0d00b62417cd44addbdaefe848cec7\",\"src/unix/bsd/apple/mod.rs\":\"6691f81221d455b882d68d1102de049d5b9729bb4b59050c1d62c835dcaddafb\",\"src/unix/bsd/freebsdlike/dragonfly/mod.rs\":\"d87f02c64649ce63367d9f0e39de7213bd30366bbd5e497f7d88f0dc3c319294\",\"src/unix/bsd/freebsdlike/freebsd/mod.rs\":\"0a675c4b7f54b410547e10e433503487eb1e738394ab81cac82112a96d275bdc\",\"src/unix/bsd/freebsdlike/freebsd/x86.rs\":\"54311d3ebf2bb091ab22361e377e6ef9224aec2ecfe459fbfcedde4932db9c58\",\"src/unix/bsd/freebsdlike/freebsd/x86_64.rs\":\"c7f46b9ae23fde5a9e245a28ed1380066e67f081323b4d253a18e9da3b97b860\",\"src/unix/bsd/freebsdlike/mod.rs\":\"574f7a1368058fad551cdebea4f576fe672f9bbe95a85468c91f9ff5661908c3\",\"src/unix/bsd/mod.rs\":\"bd422d4bca87a3e8ea4bd78b9ae019643399807d036913f42fdd7476f260297d\",\"src/unix/bsd/netbsdlike/mod.rs\":\"7b62b89c6ba0d5a8e0cf0937587a81e0314f9c5dabb0c9a9164106b677cf4dd8\",\"src/unix/bsd/netbsdlike/netbsd/mod.rs\":\"d62a02a78275ed705b2080cae452eb8954ef0f66ac9acb0f44c819d453904c5c\",\"src/unix/bsd/netbsdlike/netbsd/other/b32/mod.rs\":\"bd251a102bed65d5cb3459275f6ec3310fe5803ff4c9651212115548f86256d0\",\"src/unix/bsd/netbsdlike/netbsd/other/b64/mod.rs\":\"927eeccaf3269d299db4c2a55f8010807bf43dfa894aea6a783215f5d3560baa\",\"src/unix/bsd/netbsdlike/netbsd/other/mod.rs\":\"8ce39030f3e4fb45a3d676ade97da8f6d1b3d5f6d8d141224d341c993c57e090\",\"src/unix/bsd/netbsdlike/openbsdlike/bitrig.rs\":\"f8cd05dacd3a3136c58da5a2fbe26f703767823b28e74fe8a2b57a7bd98d6d5c\",\"src/unix/bsd/netbsdlike/openbsdlike/mod.rs\":\"769647209be7b8fc5b7e5c1970f16d5cf9cc3fba04bb456c9584f19a5c406e08\",\"src/unix/bsd/netbsdlike/openbsdlike/openbsd.rs\":\"b1b9cf7be9f0e4d294a57092594074ad03a65fe0eeac9d1104fa874c313e7900\",\"src/unix/haiku/b32.rs\":\"bd251a102bed65d5cb3459275f6ec3310fe5803ff4c9651212115548f86256d0\",\"src/unix/haiku/b64.rs\":\"b422430c550c0ba833c9206d1350861e344e3a2eb33d7d58693efb35044be1cc\",\"src/unix/haiku/mod.rs\":\"d14c45d536f24cd9cd8d5170b9829026da4c782ff2d5855644cc217553e309cf\",\"src/unix/mod.rs\":\"82952d405742b8b21bfbc29648115b3909d9c64422ad04fb6aca443c16ddaa99\",\"src/unix/notbsd/android/b32.rs\":\"148e1b4ed8b4f700d5aa24178af925164176e1c18b54db877ced4b55ba9f03d4\",\"src/unix/notbsd/android/b64.rs\":\"302caf0aa95fa022030717c58de17d85d814b04350eca081a722ec435bc4f217\",\"src/unix/notbsd/android/mod.rs\":\"f7c0145110a406c5cb14243dc71b98af8971674aa7620e5f55dabfa5c8b344c8\",\"src/unix/notbsd/linux/mips.rs\":\"7736e565499b04560bc7e6f8636fd39c74f4a588c671ece931d27de8ca263963\",\"src/unix/notbsd/linux/mips64.rs\":\"f269d516e0f5203fbfd18ff6b22ff33f206be1584d9df03c35743f5e80127d8b\",\"src/unix/notbsd/linux/mod.rs\":\"81dbebd7dd798dc57e5b5b84cec69af2b6027a415262f4ad07b8c609ad2c95ee\",\"src/unix/notbsd/linux/musl/b32/arm.rs\":\"a8416bc6e36460f3c60e2f7730dad7c43466790d11214441ef227ffb05ea450f\",\"src/unix/notbsd/linux/musl/b32/asmjs.rs\":\"c660c5eef21a5f7580e9258eb44881014d2aeba5928af431dfc782b6c4393f33\",\"src/unix/notbsd/linux/musl/b32/mips.rs\":\"76d835acd06c7bcd07a293a6f141b715ac88b959b633df9af3610e8d6eeb1ab4\",\"src/unix/notbsd/linux/musl/b32/mod.rs\":\"bd29a02c67b69791e7cabd7666503c35ed5322d244a005b9cc7fd0cb28b552a8\",\"src/unix/notbsd/linux/musl/b32/x86.rs\":\"da2e557a6afa9d15649d8862a5d17032597c924cd8bb290105500905fe975133\",\"src/unix/notbsd/linux/musl/b64/aarch64.rs\":\"4009c7eaf703472daef2a70bdac910d9fc395a33689ef2e8cf1c4e692445d3f0\",\"src/unix/notbsd/linux/musl/b64/mod.rs\":\"20f34e48124d8ca2a08cc0d28353b310238d37a345dfa0d58993e2e930a1ae23\",\"src/unix/notbsd/linux/musl/b64/powerpc64.rs\":\"dc28f5b7284235d6cf5519053cac59a1c16dc39223b71cca0871e4880755f852\",\"src/unix/notbsd/linux/musl/b64/x86_64.rs\":\"43291acc0dfc92c2fec8ba6ce77ee9ca3c20bcdccec18e149f95ba911cee704b\",\"src/unix/notbsd/linux/musl/mod.rs\":\"c195e04167d26f82885f9157e32a28caccfd4eabe807af683708f33e28562021\",\"src/unix/notbsd/linux/other/b32/arm.rs\":\"f5cb989075fa3b5f997e7101495532c8d5c9f3577412d4c07e4c8c1a16f7b43c\",\"src/unix/notbsd/linux/other/b32/mod.rs\":\"8b774feb5510b963ed031db7ab3d7e24f1ba5524a6396db0b851d237ccc16fd3\",\"src/unix/notbsd/linux/other/b32/powerpc.rs\":\"3b62052bb9741afa5349098e6e9c675b60e822e41fed6b5e1b694be1872097b1\",\"src/unix/notbsd/linux/other/b32/x86.rs\":\"1eda37736f5966c7968b594f74f5018f56b6b8c67bbdeb31fc3db1b6e4ac31b4\",\"src/unix/notbsd/linux/other/b64/aarch64.rs\":\"a978e82d037a9c8127b2f704323864aff42ac910e721ecc69c255671ca96b950\",\"src/unix/notbsd/linux/other/b64/mod.rs\":\"efb7740c2fb925ea98977a6a3ff52bc0b72205c1f88a9ba281a939b66b7f0efe\",\"src/unix/notbsd/linux/other/b64/powerpc64.rs\":\"06a795bca8e91a0143ef1787b034201ed7a21d01960ce9fe869d18c274d5bdb4\",\"src/unix/notbsd/linux/other/b64/x86_64.rs\":\"0ed128e93f212c0d65660bd95e29190a2dae7c9d15d6fa0d3c4c6656f89e9bdc\",\"src/unix/notbsd/linux/other/mod.rs\":\"0f7b29425273101ce90a9565637e5f7f61905db2a1e8f5360b285c73b1287da1\",\"src/unix/notbsd/linux/s390x.rs\":\"6eddef139e18191bc3894f759ca8bd83c59b547bc572ad8938dc61fb5a97d2e9\",\"src/unix/notbsd/mod.rs\":\"6ba17e2e9a6d05d4470ba595fd38dc55f70fea874a46425a4733ae52d93ee8ff\",\"src/unix/solaris/mod.rs\":\"6d1f023b637467fe26385d23b32219dbb4573ea177d159e32dad75e4a6ff95de\",\"src/windows.rs\":\"08f351462388566dcdc6566fb183a467942db63a1caa1bc97f85284fb7a74063\"},\"package\":\"044d1360593a78f5c8e5e710beccdc24ab71d1f01bc19a29bcacdba22e8475d8\"}\n\\ No newline at end of file"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/vendor/libc/.cargo-ok", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2F.cargo-ok", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2F.cargo-ok", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2F.cargo-ok?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "f0ff2599d09b56baf64cb3af4906408f5212e00e", "filename": "src/vendor/libc/.gitignore", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2F.gitignore?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,3 +0,0 @@\n-target\n-Cargo.lock\n-*~"}, {"sha": "703329b70572757115337c633e3d72b952d90843", "filename": "src/vendor/libc/.travis.yml", "status": "removed", "additions": 0, "deletions": 125, "changes": 125, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2F.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2F.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2F.travis.yml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,125 +0,0 @@\n-language: rust\n-sudo: required\n-dist: trusty\n-services:\n-  - docker\n-install:\n-  - curl https://static.rust-lang.org/rustup.sh |\n-    sh -s -- --add-target=$TARGET --disable-sudo -y --prefix=`rustc --print sysroot`\n-script:\n-  - cargo build\n-  - cargo build --no-default-features\n-  - cargo generate-lockfile --manifest-path libc-test/Cargo.toml\n-  - if [[ $TRAVIS_OS_NAME = \"linux\" ]]; then\n-      sh ci/run-docker.sh $TARGET;\n-    else\n-      export CARGO_TARGET_DIR=`pwd`/target;\n-      sh ci/run.sh $TARGET;\n-    fi\n-  - rustc ci/style.rs && ./style src\n-osx_image: xcode7.3\n-env:\n-  global:\n-    secure: eIDEoQdTyglcsTD13zSGotAX2HDhRSXIaaTnVZTThqLSrySOc3/6KY3qmOc2Msf7XaBqfFy9QA+alk7OwfePp253eiy1Kced67ffjjFOytEcRT7FlQiYpcYQD6WNHZEj62/bJBO4LTM9sGtWNCTJVEDKW0WM8mUK7qNuC+honPM=\n-matrix:\n-  include:\n-    # 1.0.0 compat\n-    - os: linux\n-      env: TARGET=x86_64-unknown-linux-gnu\n-      rust: 1.0.0\n-      script: cargo build\n-      install:\n-\n-    # build documentation\n-    - os: linux\n-      env: TARGET=x86_64-unknown-linux-gnu\n-      rust: stable\n-      script: sh ci/dox.sh\n-\n-    # stable compat\n-    - os: linux\n-      env: TARGET=x86_64-unknown-linux-gnu\n-      rust: stable\n-    - os: linux\n-      env: TARGET=i686-unknown-linux-gnu\n-      rust: stable\n-    - os: osx\n-      env: TARGET=x86_64-apple-darwin\n-      rust: stable\n-    - os: osx\n-      env: TARGET=i686-apple-darwin\n-      rust: stable\n-    - os: linux\n-      env: TARGET=arm-linux-androideabi\n-      rust: stable\n-    - os: linux\n-      env: TARGET=x86_64-unknown-linux-musl\n-      rust: stable\n-    - os: linux\n-      env: TARGET=i686-unknown-linux-musl\n-      rust: stable\n-    - os: linux\n-      env: TARGET=arm-unknown-linux-gnueabihf\n-      rust: stable\n-    - os: linux\n-      env: TARGET=aarch64-unknown-linux-gnu\n-      rust: stable\n-    - os: osx\n-      env: TARGET=i386-apple-ios\n-      rust: stable\n-    - os: osx\n-      env: TARGET=x86_64-apple-ios\n-      rust: stable\n-    - os: linux\n-      env: TARGET=x86_64-rumprun-netbsd\n-      rust: stable\n-    - os: linux\n-      env: TARGET=powerpc-unknown-linux-gnu\n-      rust: stable\n-    - os: linux\n-      env: TARGET=powerpc64-unknown-linux-gnu\n-      rust: stable\n-    - os: linux\n-      env: TARGET=mips-unknown-linux-musl\n-      rust: stable\n-    - os: linux\n-      env: TARGET=mipsel-unknown-linux-musl\n-      rust: stable\n-    - os: linux\n-      env: TARGET=mips64-unknown-linux-gnuabi64\n-      rust: nightly\n-\n-    # beta\n-    - os: linux\n-      env: TARGET=x86_64-unknown-linux-gnu\n-      rust: beta\n-    - os: osx\n-      env: TARGET=x86_64-apple-darwin\n-      rust: beta\n-\n-    # nightly\n-    - os: linux\n-      env: TARGET=x86_64-unknown-linux-gnu\n-      rust: nightly\n-    - os: osx\n-      env: TARGET=x86_64-apple-darwin\n-      rust: nightly\n-    - os: linux\n-      env: TARGET=mips-unknown-linux-gnu\n-      # not sure why this has to be nightly...\n-      rust: nightly\n-\n-    # QEMU based targets that compile in an emulator\n-    - os: linux\n-      env: TARGET=x86_64-unknown-freebsd\n-      rust: stable\n-    - os: linux\n-      env: TARGET=x86_64-unknown-openbsd QEMU=openbsd.qcow2\n-      rust: stable\n-      script: sh ci/run-docker.sh $TARGET\n-      install:\n-\n-notifications:\n-  email:\n-    on_success: never\n-  webhooks: https://buildbot.rust-lang.org/homu/travis"}, {"sha": "c08ab3aab9da44fae578fef235f9d9e690319e2f", "filename": "src/vendor/libc/Cargo.toml", "status": "removed", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2FCargo.toml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,21 +0,0 @@\n-[package]\n-\n-name = \"libc\"\n-version = \"0.2.17\"\n-authors = [\"The Rust Project Developers\"]\n-license = \"MIT/Apache-2.0\"\n-readme = \"README.md\"\n-repository = \"https://github.com/rust-lang/libc\"\n-homepage = \"https://github.com/rust-lang/libc\"\n-documentation = \"http://doc.rust-lang.org/libc\"\n-description = \"\"\"\n-A library for types and bindings to native C functions often found in libc or\n-other common platform libraries.\n-\"\"\"\n-\n-[features]\n-default = [\"use_std\"]\n-use_std = []\n-\n-[workspace]\n-members = [\"libc-test\", \"libc-test/generate-files\"]"}, {"sha": "16fe87b06e802f094b3fbb0894b137bca2b16ef1", "filename": "src/vendor/libc/LICENSE-APACHE", "status": "removed", "additions": 0, "deletions": 201, "changes": 201, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2FLICENSE-APACHE", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2FLICENSE-APACHE", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2FLICENSE-APACHE?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,201 +0,0 @@\n-                              Apache License\n-                        Version 2.0, January 2004\n-                     http://www.apache.org/licenses/\n-\n-TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n-\n-1. Definitions.\n-\n-   \"License\" shall mean the terms and conditions for use, reproduction,\n-   and distribution as defined by Sections 1 through 9 of this document.\n-\n-   \"Licensor\" shall mean the copyright owner or entity authorized by\n-   the copyright owner that is granting the License.\n-\n-   \"Legal Entity\" shall mean the union of the acting entity and all\n-   other entities that control, are controlled by, or are under common\n-   control with that entity. For the purposes of this definition,\n-   \"control\" means (i) the power, direct or indirect, to cause the\n-   direction or management of such entity, whether by contract or\n-   otherwise, or (ii) ownership of fifty percent (50%) or more of the\n-   outstanding shares, or (iii) beneficial ownership of such entity.\n-\n-   \"You\" (or \"Your\") shall mean an individual or Legal Entity\n-   exercising permissions granted by this License.\n-\n-   \"Source\" form shall mean the preferred form for making modifications,\n-   including but not limited to software source code, documentation\n-   source, and configuration files.\n-\n-   \"Object\" form shall mean any form resulting from mechanical\n-   transformation or translation of a Source form, including but\n-   not limited to compiled object code, generated documentation,\n-   and conversions to other media types.\n-\n-   \"Work\" shall mean the work of authorship, whether in Source or\n-   Object form, made available under the License, as indicated by a\n-   copyright notice that is included in or attached to the work\n-   (an example is provided in the Appendix below).\n-\n-   \"Derivative Works\" shall mean any work, whether in Source or Object\n-   form, that is based on (or derived from) the Work and for which the\n-   editorial revisions, annotations, elaborations, or other modifications\n-   represent, as a whole, an original work of authorship. For the purposes\n-   of this License, Derivative Works shall not include works that remain\n-   separable from, or merely link (or bind by name) to the interfaces of,\n-   the Work and Derivative Works thereof.\n-\n-   \"Contribution\" shall mean any work of authorship, including\n-   the original version of the Work and any modifications or additions\n-   to that Work or Derivative Works thereof, that is intentionally\n-   submitted to Licensor for inclusion in the Work by the copyright owner\n-   or by an individual or Legal Entity authorized to submit on behalf of\n-   the copyright owner. For the purposes of this definition, \"submitted\"\n-   means any form of electronic, verbal, or written communication sent\n-   to the Licensor or its representatives, including but not limited to\n-   communication on electronic mailing lists, source code control systems,\n-   and issue tracking systems that are managed by, or on behalf of, the\n-   Licensor for the purpose of discussing and improving the Work, but\n-   excluding communication that is conspicuously marked or otherwise\n-   designated in writing by the copyright owner as \"Not a Contribution.\"\n-\n-   \"Contributor\" shall mean Licensor and any individual or Legal Entity\n-   on behalf of whom a Contribution has been received by Licensor and\n-   subsequently incorporated within the Work.\n-\n-2. Grant of Copyright License. Subject to the terms and conditions of\n-   this License, each Contributor hereby grants to You a perpetual,\n-   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-   copyright license to reproduce, prepare Derivative Works of,\n-   publicly display, publicly perform, sublicense, and distribute the\n-   Work and such Derivative Works in Source or Object form.\n-\n-3. Grant of Patent License. Subject to the terms and conditions of\n-   this License, each Contributor hereby grants to You a perpetual,\n-   worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n-   (except as stated in this section) patent license to make, have made,\n-   use, offer to sell, sell, import, and otherwise transfer the Work,\n-   where such license applies only to those patent claims licensable\n-   by such Contributor that are necessarily infringed by their\n-   Contribution(s) alone or by combination of their Contribution(s)\n-   with the Work to which such Contribution(s) was submitted. If You\n-   institute patent litigation against any entity (including a\n-   cross-claim or counterclaim in a lawsuit) alleging that the Work\n-   or a Contribution incorporated within the Work constitutes direct\n-   or contributory patent infringement, then any patent licenses\n-   granted to You under this License for that Work shall terminate\n-   as of the date such litigation is filed.\n-\n-4. Redistribution. You may reproduce and distribute copies of the\n-   Work or Derivative Works thereof in any medium, with or without\n-   modifications, and in Source or Object form, provided that You\n-   meet the following conditions:\n-\n-   (a) You must give any other recipients of the Work or\n-       Derivative Works a copy of this License; and\n-\n-   (b) You must cause any modified files to carry prominent notices\n-       stating that You changed the files; and\n-\n-   (c) You must retain, in the Source form of any Derivative Works\n-       that You distribute, all copyright, patent, trademark, and\n-       attribution notices from the Source form of the Work,\n-       excluding those notices that do not pertain to any part of\n-       the Derivative Works; and\n-\n-   (d) If the Work includes a \"NOTICE\" text file as part of its\n-       distribution, then any Derivative Works that You distribute must\n-       include a readable copy of the attribution notices contained\n-       within such NOTICE file, excluding those notices that do not\n-       pertain to any part of the Derivative Works, in at least one\n-       of the following places: within a NOTICE text file distributed\n-       as part of the Derivative Works; within the Source form or\n-       documentation, if provided along with the Derivative Works; or,\n-       within a display generated by the Derivative Works, if and\n-       wherever such third-party notices normally appear. The contents\n-       of the NOTICE file are for informational purposes only and\n-       do not modify the License. You may add Your own attribution\n-       notices within Derivative Works that You distribute, alongside\n-       or as an addendum to the NOTICE text from the Work, provided\n-       that such additional attribution notices cannot be construed\n-       as modifying the License.\n-\n-   You may add Your own copyright statement to Your modifications and\n-   may provide additional or different license terms and conditions\n-   for use, reproduction, or distribution of Your modifications, or\n-   for any such Derivative Works as a whole, provided Your use,\n-   reproduction, and distribution of the Work otherwise complies with\n-   the conditions stated in this License.\n-\n-5. Submission of Contributions. Unless You explicitly state otherwise,\n-   any Contribution intentionally submitted for inclusion in the Work\n-   by You to the Licensor shall be under the terms and conditions of\n-   this License, without any additional terms or conditions.\n-   Notwithstanding the above, nothing herein shall supersede or modify\n-   the terms of any separate license agreement you may have executed\n-   with Licensor regarding such Contributions.\n-\n-6. Trademarks. This License does not grant permission to use the trade\n-   names, trademarks, service marks, or product names of the Licensor,\n-   except as required for reasonable and customary use in describing the\n-   origin of the Work and reproducing the content of the NOTICE file.\n-\n-7. Disclaimer of Warranty. Unless required by applicable law or\n-   agreed to in writing, Licensor provides the Work (and each\n-   Contributor provides its Contributions) on an \"AS IS\" BASIS,\n-   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n-   implied, including, without limitation, any warranties or conditions\n-   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n-   PARTICULAR PURPOSE. You are solely responsible for determining the\n-   appropriateness of using or redistributing the Work and assume any\n-   risks associated with Your exercise of permissions under this License.\n-\n-8. Limitation of Liability. In no event and under no legal theory,\n-   whether in tort (including negligence), contract, or otherwise,\n-   unless required by applicable law (such as deliberate and grossly\n-   negligent acts) or agreed to in writing, shall any Contributor be\n-   liable to You for damages, including any direct, indirect, special,\n-   incidental, or consequential damages of any character arising as a\n-   result of this License or out of the use or inability to use the\n-   Work (including but not limited to damages for loss of goodwill,\n-   work stoppage, computer failure or malfunction, or any and all\n-   other commercial damages or losses), even if such Contributor\n-   has been advised of the possibility of such damages.\n-\n-9. Accepting Warranty or Additional Liability. While redistributing\n-   the Work or Derivative Works thereof, You may choose to offer,\n-   and charge a fee for, acceptance of support, warranty, indemnity,\n-   or other liability obligations and/or rights consistent with this\n-   License. However, in accepting such obligations, You may act only\n-   on Your own behalf and on Your sole responsibility, not on behalf\n-   of any other Contributor, and only if You agree to indemnify,\n-   defend, and hold each Contributor harmless for any liability\n-   incurred by, or claims asserted against, such Contributor by reason\n-   of your accepting any such warranty or additional liability.\n-\n-END OF TERMS AND CONDITIONS\n-\n-APPENDIX: How to apply the Apache License to your work.\n-\n-   To apply the Apache License to your work, attach the following\n-   boilerplate notice, with the fields enclosed by brackets \"[]\"\n-   replaced with your own identifying information. (Don't include\n-   the brackets!)  The text should be enclosed in the appropriate\n-   comment syntax for the file format. We also recommend that a\n-   file or class name and description of purpose be included on the\n-   same \"printed page\" as the copyright notice for easier\n-   identification within third-party archives.\n-\n-Copyright [yyyy] [name of copyright owner]\n-\n-Licensed under the Apache License, Version 2.0 (the \"License\");\n-you may not use this file except in compliance with the License.\n-You may obtain a copy of the License at\n-\n-\thttp://www.apache.org/licenses/LICENSE-2.0\n-\n-Unless required by applicable law or agreed to in writing, software\n-distributed under the License is distributed on an \"AS IS\" BASIS,\n-WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n-See the License for the specific language governing permissions and\n-limitations under the License."}, {"sha": "39d4bdb5acd313c1a92dbeaa1c379aaf0596a315", "filename": "src/vendor/libc/LICENSE-MIT", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2FLICENSE-MIT", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2FLICENSE-MIT", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2FLICENSE-MIT?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,25 +0,0 @@\n-Copyright (c) 2014 The Rust Project Developers\n-\n-Permission is hereby granted, free of charge, to any\n-person obtaining a copy of this software and associated\n-documentation files (the \"Software\"), to deal in the\n-Software without restriction, including without\n-limitation the rights to use, copy, modify, merge,\n-publish, distribute, sublicense, and/or sell copies of\n-the Software, and to permit persons to whom the Software\n-is furnished to do so, subject to the following\n-conditions:\n-\n-The above copyright notice and this permission notice\n-shall be included in all copies or substantial portions\n-of the Software.\n-\n-THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF\n-ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n-TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n-PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT\n-SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n-CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n-OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR\n-IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n-DEALINGS IN THE SOFTWARE."}, {"sha": "5ea812320f05f112b0c9e8823a2326fe4559a05e", "filename": "src/vendor/libc/README.md", "status": "removed", "additions": 0, "deletions": 137, "changes": 137, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2FREADME.md?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,137 +0,0 @@\n-libc\n-====\n-\n-A Rust library with native bindings to the types and functions commonly found on\n-various systems, including libc.\n-\n-[![Build Status](https://travis-ci.org/rust-lang/libc.svg?branch=master)](https://travis-ci.org/rust-lang/libc)\n-[![Build status](https://ci.appveyor.com/api/projects/status/34csq3uurnw7c0rl?svg=true)](https://ci.appveyor.com/project/alexcrichton/libc)\n-\n-[Documentation](#platforms-and-documentation)\n-\n-## Usage\n-\n-First, add the following to your `Cargo.toml`:\n-\n-```toml\n-[dependencies]\n-libc = \"0.2\"\n-```\n-\n-Next, add this to your crate root:\n-\n-```rust\n-extern crate libc;\n-```\n-\n-Currently libc by default links to the standard library, but if you would\n-instead like to use libc in a `#![no_std]` situation or crate you can request\n-this via:\n-\n-```toml\n-[dependencies]\n-libc = { version = \"0.2\", default-features = false }\n-```\n-\n-## What is libc?\n-\n-The primary purpose of this crate is to provide all of the definitions necessary\n-to easily interoperate with C code (or \"C-like\" code) on each of the platforms\n-that Rust supports. This includes type definitions (e.g. `c_int`), constants\n-(e.g. `EINVAL`) as well as function headers (e.g. `malloc`).\n-\n-This crate does not strive to have any form of compatibility across platforms,\n-but rather it is simply a straight binding to the system libraries on the\n-platform in question.\n-\n-## Public API\n-\n-This crate exports all underlying platform types, functions, and constants under\n-the crate root, so all items are accessible as `libc::foo`. The types and values\n-of all the exported APIs match the platform that libc is compiled for.\n-\n-More detailed information about the design of this library can be found in its\n-[associated RFC][rfc].\n-\n-[rfc]: https://github.com/rust-lang/rfcs/blob/master/text/1291-promote-libc.md\n-\n-## Adding an API\n-\n-Want to use an API which currently isn't bound in `libc`? It's quite easy to add\n-one!\n-\n-The internal structure of this crate is designed to minimize the number of\n-`#[cfg]` attributes in order to easily be able to add new items which apply\n-to all platforms in the future. As a result, the crate is organized\n-hierarchically based on platform. Each module has a number of `#[cfg]`'d\n-children, but only one is ever actually compiled. Each module then reexports all\n-the contents of its children.\n-\n-This means that for each platform that libc supports, the path from a\n-leaf module to the root will contain all bindings for the platform in question.\n-Consequently, this indicates where an API should be added! Adding an API at a\n-particular level in the hierarchy means that it is supported on all the child\n-platforms of that level. For example, when adding a Unix API it should be added\n-to `src/unix/mod.rs`, but when adding a Linux-only API it should be added to\n-`src/unix/notbsd/linux/mod.rs`.\n-\n-If you're not 100% sure at what level of the hierarchy an API should be added\n-at, fear not! This crate has CI support which tests any binding against all\n-platforms supported, so you'll see failures if an API is added at the wrong\n-level or has different signatures across platforms.\n-\n-With that in mind, the steps for adding a new API are:\n-\n-1. Determine where in the module hierarchy your API should be added.\n-2. Add the API.\n-3. Send a PR to this repo.\n-4. Wait for CI to pass, fixing errors.\n-5. Wait for a merge!\n-\n-### Test before you commit\n-\n-We have two automated tests running on [Travis](https://travis-ci.org/rust-lang/libc):\n-\n-1. [`libc-test`](https://github.com/alexcrichton/ctest)\n-  - `cd libc-test && cargo run`\n-  - Use the `skip_*()` functions in `build.rs` if you really need a workaround.\n-2. Style checker\n-  - `rustc ci/style.rs && ./style src`\n-\n-## Platforms and Documentation\n-\n-The following platforms are currently tested and have documentation available:\n-\n-Tested:\n-  * [`i686-pc-windows-msvc`](https://doc.rust-lang.org/libc/i686-pc-windows-msvc/libc/)\n-  * [`x86_64-pc-windows-msvc`](https://doc.rust-lang.org/libc/x86_64-pc-windows-msvc/libc/)\n-    (Windows)\n-  * [`i686-pc-windows-gnu`](https://doc.rust-lang.org/libc/i686-pc-windows-gnu/libc/)\n-  * [`x86_64-pc-windows-gnu`](https://doc.rust-lang.org/libc/x86_64-pc-windows-gnu/libc/)\n-  * [`i686-apple-darwin`](https://doc.rust-lang.org/libc/i686-apple-darwin/libc/)\n-  * [`x86_64-apple-darwin`](https://doc.rust-lang.org/libc/x86_64-apple-darwin/libc/)\n-    (OSX)\n-  * `i686-apple-ios`\n-  * `x86_64-apple-ios`\n-  * [`i686-unknown-linux-gnu`](https://doc.rust-lang.org/libc/i686-unknown-linux-gnu/libc/)\n-  * [`x86_64-unknown-linux-gnu`](https://doc.rust-lang.org/libc/x86_64-unknown-linux-gnu/libc/)\n-    (Linux)\n-  * [`x86_64-unknown-linux-musl`](https://doc.rust-lang.org/libc/x86_64-unknown-linux-musl/libc/)\n-    (Linux MUSL)\n-  * [`aarch64-unknown-linux-gnu`](https://doc.rust-lang.org/libc/aarch64-unknown-linux-gnu/libc/)\n-  * [`mips-unknown-linux-gnu`](https://doc.rust-lang.org/libc/mips-unknown-linux-gnu/libc/)\n-  * [`arm-unknown-linux-gnueabihf`](https://doc.rust-lang.org/libc/arm-unknown-linux-gnueabihf/libc/)\n-  * [`arm-linux-androideabi`](https://doc.rust-lang.org/libc/arm-linux-androideabi/libc/)\n-    (Android)\n-  * [`x86_64-unknown-freebsd`](https://doc.rust-lang.org/libc/x86_64-unknown-freebsd/libc/)\n-  * [`x86_64-unknown-openbsd`](https://doc.rust-lang.org/libc/x86_64-unknown-openbsd/libc/)\n-  * [`x86_64-rumprun-netbsd`](https://doc.rust-lang.org/libc/x86_64-unknown-netbsd/libc/)\n-\n-The following may be supported, but are not guaranteed to always work:\n-\n-  * `i686-unknown-freebsd`\n-  * [`x86_64-unknown-bitrig`](https://doc.rust-lang.org/libc/x86_64-unknown-bitrig/libc/)\n-  * [`x86_64-unknown-dragonfly`](https://doc.rust-lang.org/libc/x86_64-unknown-dragonfly/libc/)\n-  * `i686-unknown-haiku`\n-  * `x86_64-unknown-haiku`\n-  * [`x86_64-unknown-netbsd`](https://doc.rust-lang.org/libc/x86_64-unknown-netbsd/libc/)"}, {"sha": "a851bb87b6c3b116e1ed16ec318ac779014a1aff", "filename": "src/vendor/libc/appveyor.yml", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fappveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fappveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fappveyor.yml?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,25 +0,0 @@\n-environment:\n-  matrix:\n-  - TARGET: x86_64-pc-windows-gnu\n-    MSYS2_BITS: 64\n-  - TARGET: i686-pc-windows-gnu\n-    MSYS2_BITS: 32\n-  - TARGET: x86_64-pc-windows-msvc\n-  - TARGET: i686-pc-windows-msvc\n-install:\n-  - curl -sSf -o rustup-init.exe https://win.rustup.rs/\n-  - rustup-init.exe -y --default-host %TARGET%\n-  - set PATH=%PATH%;C:\\Users\\appveyor\\.cargo\\bin\n-  - if defined MSYS2_BITS set PATH=%PATH%;C:\\msys64\\mingw%MSYS2_BITS%\\bin\n-  - rustc -V\n-  - cargo -V\n-\n-build: false\n-\n-test_script:\n-  - cargo test --target %TARGET%\n-  - cargo run --manifest-path libc-test/Cargo.toml --target %TARGET%\n-\n-cache:\n-  - target\n-  - C:\\Users\\appveyor\\.cargo\\registry"}, {"sha": "13c7c8da52fc5d622a4ec1249a985f46e6309c9c", "filename": "src/vendor/libc/ci/README.md", "status": "removed", "additions": 0, "deletions": 203, "changes": 203, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2FREADME.md?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,203 +0,0 @@\n-The goal of the libc crate is to have CI running everywhere to have the\n-strongest guarantees about the definitions that this library contains, and as a\n-result the CI is pretty complicated and also pretty large! Hopefully this can\n-serve as a guide through the sea of scripts in this directory and elsewhere in\n-this project.\n-\n-# Files\n-\n-First up, let's talk about the files in this directory:\n-\n-* `run-travis.sh` - a shell script run by all Travis builders, this is\n-  responsible for setting up the rest of the environment such as installing new\n-  packages, downloading Rust target libraries, etc.\n-\n-* `run.sh` - the actual script which runs tests for a particular architecture.\n-  Called from the `run-travis.sh` script this will run all tests for the target\n-  specified.\n-\n-* `cargo-config` - Cargo configuration of linkers to use copied into place by\n-  the `run-travis.sh` script before builds are run.\n-\n-* `dox.sh` - script called from `run-travis.sh` on only the linux 64-bit nightly\n-  Travis bots to build documentation for this crate.\n-\n-* `landing-page-*.html` - used by `dox.sh` to generate a landing page for all\n-  architectures' documentation.\n-\n-* `run-qemu.sh` - see discussion about QEMU below\n-\n-* `mips`, `rumprun` - instructions to build the docker image for each respective\n-  CI target\n-\n-# CI Systems\n-\n-Currently this repository leverages a combination of Travis CI and AppVeyor for\n-running tests. The triples tested are:\n-\n-* AppVeyor\n-  * `{i686,x86_64}-pc-windows-{msvc,gnu}`\n-* Travis\n-  * `{i686,x86_64,mips,aarch64}-unknown-linux-gnu`\n-  * `x86_64-unknown-linux-musl`\n-  * `arm-unknown-linux-gnueabihf`\n-  * `arm-linux-androideabi`\n-  * `{i686,x86_64}-apple-{darwin,ios}`\n-  * `x86_64-rumprun-netbsd`\n-  * `x86_64-unknown-freebsd`\n-  * `x86_64-unknown-openbsd`\n-\n-The Windows triples are all pretty standard, they just set up their environment\n-then run tests, no need for downloading any extra target libs (we just download\n-the right installer). The Intel Linux/OSX builds are similar in that we just\n-download the right target libs and run tests. Note that the Intel Linux/OSX\n-builds are run on stable/beta/nightly, but are the only ones that do so.\n-\n-The remaining architectures look like:\n-\n-* Android runs in a [docker image][android-docker] with an emulator, the NDK,\n-  and the SDK already set up. The entire build happens within the docker image.\n-* The MIPS, ARM, and AArch64 builds all use the QEMU userspace emulator to run\n-  the generated binary to actually verify the tests pass.\n-* The MUSL build just has to download a MUSL compiler and target libraries and\n-  then otherwise runs tests normally.\n-* iOS builds need an extra linker flag currently, but beyond that they're built\n-  as standard as everything else.\n-* The rumprun target builds an entire kernel from the test suite and then runs\n-  it inside QEMU using the serial console to test whether it succeeded or\n-  failed.\n-* The BSD builds, currently OpenBSD and FreeBSD, use QEMU to boot up a system\n-  and compile/run tests. More information on that below.\n-\n-[android-docker]: https://github.com/rust-lang/rust-buildbot/blob/master/slaves/android/Dockerfile\n-\n-## QEMU\n-\n-Lots of the architectures tested here use QEMU in the tests, so it's worth going\n-over all the crazy capabilities QEMU has and the various flavors in which we use\n-it!\n-\n-First up, QEMU has userspace emulation where it doesn't boot a full kernel, it\n-just runs a binary from another architecture (using the `qemu-<arch>` wrappers).\n-We provide it the runtime path for the dynamically loaded system libraries,\n-however. This strategy is used for all Linux architectures that aren't intel.\n-Note that one downside of this QEMU system is that threads are barely\n-implemented, so we're careful to not spawn many threads.\n-\n-For the rumprun target the only output is a kernel image, so we just use that\n-plus the `rumpbake` command to create a full kernel image which is then run from\n-within QEMU.\n-\n-Finally, the fun part, the BSDs. Quite a few hoops are jumped through to get CI\n-working for these platforms, but the gist of it looks like:\n-\n-* Cross compiling from Linux to any of the BSDs seems to be quite non-standard.\n-  We may be able to get it working but it might be difficult at that point to\n-  ensure that the libc definitions align with what you'd get on the BSD itself.\n-  As a result, we try to do compiles within the BSD distro.\n-* On Travis we can't run a VM-in-a-VM, so we resort to userspace emulation\n-  (QEMU).\n-* Unfortunately on Travis we also can't use KVM, so the emulation is super slow.\n-\n-With all that in mind, the way BSD is tested looks like:\n-\n-1. Download a pre-prepared image for the OS being tested.\n-2. Generate the tests for the OS being tested. This involves running the `ctest`\n-   library over libc to generate a Rust file and a C file which will then be\n-   compiled into the final test.\n-3. Generate a disk image which will later be mounted by the OS being tested.\n-   This image is mostly just the libc directory, but some modifications are made\n-   to compile the generated files from step 2.\n-4. The kernel is booted in QEMU, and it is configured to detect the libc-test\n-   image being available, run the test script, and then shut down afterwards.\n-5. Look for whether the tests passed in the serial console output of the kernel.\n-\n-There's some pretty specific instructions for setting up each image (detailed\n-below), but the main gist of this is that we must avoid a vanilla `cargo run`\n-inside of the `libc-test` directory (which is what it's intended for) because\n-that would compile `syntex_syntax`, a large library, with userspace emulation.\n-This invariably times out on Travis, so we can't do that.\n-\n-Once all those hoops are jumped through, however, we can be happy that we're\n-testing almost everything!\n-\n-Below are some details of how to set up the initial OS images which are\n-downloaded. Each image must be enabled have input/output over the serial\n-console, log in automatically at the serial console, detect if a second drive in\n-QEMU is available, and if so mount it, run a script (it'll specifically be\n-`run-qemu.sh` in this folder which is copied into the generated image talked\n-about above), and then shut down.\n-\n-### QEMU setup - FreeBSD\n-\n-1. Download CD installer (most minimal is fine)\n-2. `qemu-img create -f qcow2 foo.qcow2 2G`\n-3. `qemu -cdrom foo.iso -drive if=virtio,file=foo.qcow2 -net nic,model=virtio -net user`\n-4. run installer\n-5. `echo 'console=\"comconsole\"' >> /boot/loader.conf`\n-6. `echo 'autoboot_delay=\"0\"' >> /boot/loader.conf`\n-7. look at /etc/ttys, see what getty argument is for ttyu0\n-8. edit /etc/gettytab, look for ttyu0 argument, prepend `:al=root` to line\n-   beneath\n-\n-(note that the current image has a `freebsd` user, but this isn't really\n-necessary)\n-\n-Once that's done, arrange for this script to run at login:\n-\n-```\n-#!/bin/sh\n-\n-sudo kldload ext2fs\n-[ -e /dev/vtbd1 ] || exit 0\n-sudo mount -t ext2fs /dev/vtbd1 /mnt\n-sh /mnt/run.sh /mnt\n-sudo poweroff\n-```\n-\n-Helpful links\n-\n-* https://en.wikibooks.org/wiki/QEMU/Images\n-* https://blog.nekoconeko.nl/blog/2015/06/04/creating-an-openstack-freebsd-image.html\n-* https://www.freebsd.org/doc/handbook/serialconsole-setup.html\n-\n-\n-### QEMU setup - OpenBSD\n-\n-1. Download CD installer\n-2. `qemu-img create -f qcow2 foo.qcow2 2G`\n-3. `qemu -cdrom foo.iso -drive if=virtio,file=foo.qcow2 -net nic,model=virtio -net user`\n-4. run installer\n-5. `echo 'set tty com0' >> /etc/boot.conf`\n-6. `echo 'boot' >> /etc/boot.conf`\n-7. Modify /etc/ttys, change the `tty00` at the end from 'unknown off' to\n-   'vt220 on secure'\n-8. Modify same line in /etc/ttys to have `\"/root/foo.sh\"` as the shell\n-9. Add this script to `/root/foo.sh`\n-\n-```\n-#!/bin/sh\n-exec 1>/dev/tty00\n-exec 2>&1\n-\n-if mount -t ext2fs /dev/sd1c /mnt; then\n-  sh /mnt/run.sh /mnt\n-  shutdown -ph now\n-fi\n-\n-# limited shell...\n-exec /bin/sh < /dev/tty00\n-```\n-\n-10. `chmod +x /root/foo.sh`\n-\n-Helpful links:\n-\n-* https://en.wikibooks.org/wiki/QEMU/Images\n-* http://www.openbsd.org/faq/faq7.html#SerCon\n-\n-# Questions?\n-\n-Hopefully that's at least somewhat of an introduction to everything going on\n-here, and feel free to ping @alexcrichton with questions!\n-"}, {"sha": "2ba69e15442f38f9964975337928aac80b1dc678", "filename": "src/vendor/libc/ci/docker/aarch64-unknown-linux-gnu/Dockerfile", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Faarch64-unknown-linux-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Faarch64-unknown-linux-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Faarch64-unknown-linux-gnu%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,7 +0,0 @@\n-FROM ubuntu:16.10\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-  gcc libc6-dev ca-certificates \\\n-  gcc-aarch64-linux-gnu libc6-dev-arm64-cross qemu-user\n-ENV CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc \\\n-    PATH=$PATH:/rust/bin"}, {"sha": "0e41ba6dbee66dc1301797cecb7c73a4bc4e1b56", "filename": "src/vendor/libc/ci/docker/arm-linux-androideabi/Dockerfile", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Farm-linux-androideabi%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Farm-linux-androideabi%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Farm-linux-androideabi%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,4 +0,0 @@\n-FROM alexcrichton/rust-slave-android:2015-11-22\n-ENV CARGO_TARGET_ARM_LINUX_ANDROIDEABI_LINKER=arm-linux-androideabi-gcc \\\n-    PATH=$PATH:/rust/bin\n-ENTRYPOINT [\"sh\"]"}, {"sha": "3824c0466401fda4c631aba150d80fd544a34914", "filename": "src/vendor/libc/ci/docker/arm-unknown-linux-gnueabihf/Dockerfile", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Farm-unknown-linux-gnueabihf%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Farm-unknown-linux-gnueabihf%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Farm-unknown-linux-gnueabihf%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,7 +0,0 @@\n-FROM ubuntu:16.10\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-  gcc libc6-dev ca-certificates \\\n-  gcc-arm-linux-gnueabihf libc6-dev-armhf-cross qemu-user\n-ENV CARGO_TARGET_ARM_UNKNOWN_LINUX_GNUEABIHF_LINKER=arm-linux-gnueabihf-gcc \\\n-    PATH=$PATH:/rust/bin"}, {"sha": "c149d84072912a2bbb38b6f82f987d92c5847eff", "filename": "src/vendor/libc/ci/docker/i686-unknown-linux-gnu/Dockerfile", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fi686-unknown-linux-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fi686-unknown-linux-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fi686-unknown-linux-gnu%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,5 +0,0 @@\n-FROM ubuntu:16.10\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-  gcc-multilib libc6-dev ca-certificates\n-ENV PATH=$PATH:/rust/bin"}, {"sha": "87459a1672bdc4921ed26d7f5000b34bf3fe2765", "filename": "src/vendor/libc/ci/docker/i686-unknown-linux-musl/Dockerfile", "status": "removed", "additions": 0, "deletions": 22, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fi686-unknown-linux-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fi686-unknown-linux-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fi686-unknown-linux-musl%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,22 +0,0 @@\n-FROM ubuntu:16.10\n-\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-  gcc make libc6-dev git curl ca-certificates\n-# Below we're cross-compiling musl for i686 using the system compiler on an\n-# x86_64 system. This is an awkward thing to be doing and so we have to jump\n-# through a couple hoops to get musl to be happy. In particular:\n-#\n-# * We specifically pass -m32 in CFLAGS and override CC when running ./configure,\n-#   since otherwise the script will fail to find a compiler.\n-# * We manually unset CROSS_COMPILE when running make; otherwise the makefile\n-#   will call the non-existent binary 'i686-ar'.\n-RUN curl https://www.musl-libc.org/releases/musl-1.1.15.tar.gz | \\\n-    tar xzf - && \\\n-    cd musl-1.1.15 && \\\n-    CC=gcc CFLAGS=-m32 ./configure --prefix=/musl-i686 --disable-shared --target=i686 && \\\n-    make CROSS_COMPILE= install -j4 && \\\n-    cd .. && \\\n-    rm -rf musl-1.1.15\n-ENV PATH=$PATH:/musl-i686/bin:/rust/bin \\\n-    CC_i686_unknown_linux_musl=musl-gcc"}, {"sha": "eea1f652c3cbd8e17d3652177e304ebdba9a6eb7", "filename": "src/vendor/libc/ci/docker/mips-unknown-linux-gnu/Dockerfile", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fmips-unknown-linux-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fmips-unknown-linux-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fmips-unknown-linux-gnu%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,10 +0,0 @@\n-FROM ubuntu:16.10\n-\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-        gcc libc6-dev qemu-user ca-certificates \\\n-        gcc-mips-linux-gnu libc6-dev-mips-cross \\\n-        qemu-system-mips\n-\n-ENV CARGO_TARGET_MIPS_UNKNOWN_LINUX_GNU_LINKER=mips-linux-gnu-gcc \\\n-    PATH=$PATH:/rust/bin"}, {"sha": "77c6adb435f1d51e3850d0583819d369934c4d18", "filename": "src/vendor/libc/ci/docker/mips-unknown-linux-musl/Dockerfile", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fmips-unknown-linux-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fmips-unknown-linux-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fmips-unknown-linux-musl%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,14 +0,0 @@\n-FROM ubuntu:16.10\n-\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-        gcc libc6-dev qemu-user ca-certificates qemu-system-mips curl \\\n-        bzip2\n-\n-RUN mkdir /toolchain\n-RUN curl -L https://downloads.openwrt.org/snapshots/trunk/ar71xx/generic/OpenWrt-SDK-ar71xx-generic_gcc-5.3.0_musl-1.1.15.Linux-x86_64.tar.bz2 | \\\n-      tar xjf - -C /toolchain --strip-components=1\n-\n-ENV PATH=$PATH:/rust/bin:/toolchain/staging_dir/toolchain-mips_34kc_gcc-5.3.0_musl-1.1.15/bin \\\n-    CC_mips_unknown_linux_musl=mips-openwrt-linux-gcc \\\n-    CARGO_TARGET_MIPS_UNKNOWN_LINUX_MUSL_LINKER=mips-openwrt-linux-gcc"}, {"sha": "2eb5de2453800ef39b1782a50b35bb1a72c08fc3", "filename": "src/vendor/libc/ci/docker/mips64-unknown-linux-gnuabi64/Dockerfile", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fmips64-unknown-linux-gnuabi64%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fmips64-unknown-linux-gnuabi64%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fmips64-unknown-linux-gnuabi64%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,11 +0,0 @@\n-FROM ubuntu:16.10\n-\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-        gcc libc6-dev qemu-user ca-certificates \\\n-        gcc-mips64-linux-gnuabi64 libc6-dev-mips64-cross \\\n-        qemu-system-mips64\n-\n-ENV CARGO_TARGET_MIPS64_UNKNOWN_LINUX_GNUABI64_LINKER=mips64-linux-gnuabi64-gcc \\\n-    CC_mips64_unknown_linux_gnuabi64=mips64-linux-gnuabi64-gcc \\\n-    PATH=$PATH:/rust/bin"}, {"sha": "36c4d90ef68f665b99f64382d45b4e7dcabab48a", "filename": "src/vendor/libc/ci/docker/mipsel-unknown-linux-musl/Dockerfile", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fmipsel-unknown-linux-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fmipsel-unknown-linux-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fmipsel-unknown-linux-musl%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,14 +0,0 @@\n-FROM ubuntu:16.10\n-\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-        gcc libc6-dev qemu-user ca-certificates qemu-system-mips curl \\\n-        bzip2\n-\n-RUN mkdir /toolchain\n-RUN curl -L https://downloads.openwrt.org/snapshots/trunk/malta/generic/OpenWrt-Toolchain-malta-le_gcc-5.3.0_musl-1.1.15.Linux-x86_64.tar.bz2 | \\\n-      tar xjf - -C /toolchain --strip-components=2\n-\n-ENV PATH=$PATH:/rust/bin:/toolchain/bin \\\n-    CC_mipsel_unknown_linux_musl=mipsel-openwrt-linux-gcc \\\n-    CARGO_TARGET_MIPSEL_UNKNOWN_LINUX_MUSL_LINKER=mipsel-openwrt-linux-gcc"}, {"sha": "d9d7db0f41dd234d2dacc9999eb5ddca85a54045", "filename": "src/vendor/libc/ci/docker/powerpc-unknown-linux-gnu/Dockerfile", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fpowerpc-unknown-linux-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fpowerpc-unknown-linux-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fpowerpc-unknown-linux-gnu%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,10 +0,0 @@\n-FROM ubuntu:16.10\n-\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-        gcc libc6-dev qemu-user ca-certificates \\\n-        gcc-powerpc-linux-gnu libc6-dev-powerpc-cross \\\n-        qemu-system-ppc\n-\n-ENV CARGO_TARGET_POWERPC_UNKNOWN_LINUX_GNU_LINKER=powerpc-linux-gnu-gcc \\\n-    PATH=$PATH:/rust/bin"}, {"sha": "df0e6057b4f7fad86233d81947f7fbce66af0878", "filename": "src/vendor/libc/ci/docker/powerpc64-unknown-linux-gnu/Dockerfile", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fpowerpc64-unknown-linux-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fpowerpc64-unknown-linux-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fpowerpc64-unknown-linux-gnu%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,11 +0,0 @@\n-FROM ubuntu:16.10\n-\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-        gcc libc6-dev qemu-user ca-certificates \\\n-        gcc-powerpc64-linux-gnu libc6-dev-ppc64-cross \\\n-        qemu-system-ppc\n-\n-ENV CARGO_TARGET_POWERPC64_UNKNOWN_LINUX_GNU_LINKER=powerpc64-linux-gnu-gcc \\\n-    CC=powerpc64-linux-gnu-gcc \\\n-    PATH=$PATH:/rust/bin"}, {"sha": "129771e76b74d7b843ca9e30f378146ea97e2ec2", "filename": "src/vendor/libc/ci/docker/x86_64-rumprun-netbsd/Dockerfile", "status": "removed", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-rumprun-netbsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-rumprun-netbsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-rumprun-netbsd%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,6 +0,0 @@\n-FROM mato/rumprun-toolchain-hw-x86_64\n-USER root\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-  qemu\n-ENV PATH=$PATH:/rust/bin"}, {"sha": "b1273382223637a3e8ccf25cafaf34faef71e822", "filename": "src/vendor/libc/ci/docker/x86_64-unknown-freebsd/Dockerfile", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-unknown-freebsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-unknown-freebsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-unknown-freebsd%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,13 +0,0 @@\n-FROM alexcrichton/rust-slave-linux-cross:2016-04-15\n-USER root\n-\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-  qemu genext2fs\n-\n-ENTRYPOINT [\"sh\"]\n-\n-ENV PATH=$PATH:/rust/bin \\\n-    QEMU=freebsd.qcow2.gz \\\n-    CAN_CROSS=1 \\\n-    CARGO_TARGET_X86_64_UNKNOWN_FREEBSD_LINKER=x86_64-unknown-freebsd10-gcc"}, {"sha": "4af3f834cbe6efff89ec6c67b40fc03d16bad92a", "filename": "src/vendor/libc/ci/docker/x86_64-unknown-linux-gnu/Dockerfile", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-unknown-linux-gnu%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-unknown-linux-gnu%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-unknown-linux-gnu%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,5 +0,0 @@\n-FROM ubuntu:16.10\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-  gcc libc6-dev ca-certificates\n-ENV PATH=$PATH:/rust/bin"}, {"sha": "9c2499948a287aba5c00ad538ee7eb58917d3260", "filename": "src/vendor/libc/ci/docker/x86_64-unknown-linux-musl/Dockerfile", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-unknown-linux-musl%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-unknown-linux-musl%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-unknown-linux-musl%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,13 +0,0 @@\n-FROM ubuntu:16.10\n-\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-  gcc make libc6-dev git curl ca-certificates\n-RUN curl https://www.musl-libc.org/releases/musl-1.1.15.tar.gz | \\\n-    tar xzf - && \\\n-    cd musl-1.1.15 && \\\n-    ./configure --prefix=/musl-x86_64 && \\\n-    make install -j4 && \\\n-    cd .. && \\\n-    rm -rf musl-1.1.15\n-ENV PATH=$PATH:/musl-x86_64/bin:/rust/bin"}, {"sha": "26340a5ed1ecaa71ce390850f8a22c09e6c1c686", "filename": "src/vendor/libc/ci/docker/x86_64-unknown-openbsd/Dockerfile", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-unknown-openbsd%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-unknown-openbsd%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdocker%2Fx86_64-unknown-openbsd%2FDockerfile?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,8 +0,0 @@\n-FROM ubuntu:16.10\n-\n-RUN apt-get update\n-RUN apt-get install -y --no-install-recommends \\\n-  gcc libc6-dev qemu curl ca-certificates \\\n-  genext2fs\n-ENV PATH=$PATH:/rust/bin \\\n-    QEMU=2016-09-07/openbsd-6.0-without-pkgs.qcow2"}, {"sha": "88d882dcacdd3cbf28304e7b37d156150c3621b8", "filename": "src/vendor/libc/ci/dox.sh", "status": "removed", "additions": 0, "deletions": 33, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdox.sh", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fdox.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fdox.sh?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,33 +0,0 @@\n-#!/bin/sh\n-\n-# Builds documentation for all target triples that we have a registered URL for\n-# in liblibc. This scrapes the list of triples to document from `src/lib.rs`\n-# which has a bunch of `html_root_url` directives we pick up.\n-\n-set -e\n-\n-TARGETS=`grep html_root_url src/lib.rs | sed 's/.*\".*\\/\\(.*\\)\"/\\1/'`\n-\n-rm -rf target/doc\n-mkdir -p target/doc\n-\n-cp ci/landing-page-head.html target/doc/index.html\n-\n-for target in $TARGETS; do\n-  echo documenting $target\n-\n-  rustdoc -o target/doc/$target --target $target src/lib.rs --cfg dox \\\n-    --crate-name libc\n-\n-  echo \"<li><a href=\"/libc/$target/libc/index.html\">$target</a></li>\" \\\n-    >> target/doc/index.html\n-done\n-\n-cat ci/landing-page-footer.html >> target/doc/index.html\n-\n-# If we're on travis, not a PR, and on the right branch, publish!\n-if [ \"$TRAVIS_PULL_REQUEST\" = \"false\" ] && [ \"$TRAVIS_BRANCH\" = \"master\" ]; then\n-  pip install ghp-import --user $USER\n-  $HOME/.local/bin/ghp-import -n target/doc\n-  git push -qf https://${GH_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git gh-pages\n-fi"}, {"sha": "941cc8d2b40307cc0a5911984505cf6b48cd82aa", "filename": "src/vendor/libc/ci/landing-page-footer.html", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Flanding-page-footer.html", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Flanding-page-footer.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Flanding-page-footer.html?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,3 +0,0 @@\n-    </ul>\n-  </body>\n-</html>"}, {"sha": "fc69fa88eb5ce6fc8724ac195827278df5cdcdbd", "filename": "src/vendor/libc/ci/landing-page-head.html", "status": "removed", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Flanding-page-head.html", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Flanding-page-head.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Flanding-page-head.html?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,7 +0,0 @@\n-<!DOCTYPE html>\n-<html lang=\"en\">\n-  <head>\n-    <meta charset=\"utf-8\">\n-  </head>\n-  <body>\n-    <ul>"}, {"sha": "e34e65ffcdc0cd5ce8cb77d356d96325a1977b9c", "filename": "src/vendor/libc/ci/run-docker.sh", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Frun-docker.sh", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Frun-docker.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Frun-docker.sh?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,26 +0,0 @@\n-# Small script to run tests for a target (or all targets) inside all the\n-# respective docker images.\n-\n-set -ex\n-\n-run() {\n-    echo $1\n-    docker build -t libc ci/docker/$1\n-    docker run \\\n-      --rm \\\n-      -v `rustc --print sysroot`:/rust:ro \\\n-      -v `pwd`:/checkout:ro \\\n-      -e CARGO_TARGET_DIR=/tmp/target \\\n-      -w /checkout \\\n-      --privileged \\\n-      -it libc \\\n-      ci/run.sh $1\n-}\n-\n-if [ -z \"$1\" ]; then\n-  for d in `ls ci/docker/`; do\n-    run $d\n-  done\n-else\n-  run $1\n-fi"}, {"sha": "b2f457df916f85688dce328af91b06543fad6ff6", "filename": "src/vendor/libc/ci/run-qemu.sh", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Frun-qemu.sh", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Frun-qemu.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Frun-qemu.sh?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,32 +0,0 @@\n-# Initial script which is run inside of all qemu images. The first argument to\n-# this script (as arranged by the qemu image itself) is the path to where the\n-# libc crate is mounted.\n-#\n-# For qemu images we currently need to install Rust manually as this wasn't done\n-# by the initial run-travis.sh script\n-#\n-# FIXME: feels like run-travis.sh should be responsible for downloading the\n-#        compiler.\n-\n-set -ex\n-\n-ROOT=$1\n-cp -r $ROOT/libc /tmp/libc\n-cd /tmp/libc\n-\n-TARGET=$(cat $ROOT/TARGET)\n-export CARGO_TARGET_DIR=/tmp\n-\n-case $TARGET in\n-  *-openbsd)\n-    pkg_add cargo gcc%4.9 rust\n-    export CC=egcc\n-    ;;\n-\n-  *)\n-    echo \"Unknown target: $TARGET\"\n-    exit 1\n-    ;;\n-esac\n-\n-exec sh ci/run.sh $TARGET"}, {"sha": "15721ab965d262a56d1fa07edfbe108198abbddb", "filename": "src/vendor/libc/ci/run.sh", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Frun.sh?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,160 +0,0 @@\n-#!/bin/sh\n-\n-# Builds and runs tests for a particular target passed as an argument to this\n-# script.\n-\n-set -ex\n-\n-TARGET=$1\n-\n-# If we're going to run tests inside of a qemu image, then we don't need any of\n-# the scripts below. Instead, download the image, prepare a filesystem which has\n-# the current state of this repository, and then run the image.\n-#\n-# It's assume that all images, when run with two disks, will run the `run.sh`\n-# script from the second which we place inside.\n-if [ \"$QEMU\" != \"\" ]; then\n-  tmpdir=/tmp/qemu-img-creation\n-  mkdir -p $tmpdir\n-\n-  if [ -z \"${QEMU#*.gz}\" ]; then\n-    # image is .gz : download and uncompress it\n-    qemufile=$(echo ${QEMU%.gz} | sed 's/\\//__/g')\n-    if [ ! -f $tmpdir/$qemufile ]; then\n-      curl https://people.mozilla.org/~acrichton/libc-test/qemu/$QEMU | \\\n-        gunzip -d > $tmpdir/$qemufile\n-    fi\n-  else\n-    # plain qcow2 image: just download it\n-    qemufile=$(echo ${QEMU} | sed 's/\\//__/g')\n-    if [ ! -f $tmpdir/$qemufile ]; then\n-      curl https://people.mozilla.org/~acrichton/libc-test/qemu/$QEMU \\\n-        > $tmpdir/$qemufile\n-    fi\n-  fi\n-\n-  # Create a mount a fresh new filesystem image that we'll later pass to QEMU.\n-  # This will have a `run.sh` script will which use the artifacts inside to run\n-  # on the host.\n-  rm -f $tmpdir/libc-test.img\n-  mkdir $tmpdir/mount\n-\n-  # If we have a cross compiler, then we just do the standard rigamarole of\n-  # cross-compiling an executable and then the script to run just executes the\n-  # binary.\n-  #\n-  # If we don't have a cross-compiler, however, then we need to do some crazy\n-  # acrobatics to get this to work.  Generate all.{c,rs} on the host which will\n-  # be compiled inside QEMU. Do this here because compiling syntex_syntax in\n-  # QEMU would time out basically everywhere.\n-  if [ \"$CAN_CROSS\" = \"1\" ]; then\n-    cargo build --manifest-path libc-test/Cargo.toml --target $TARGET\n-    cp $CARGO_TARGET_DIR/$TARGET/debug/libc-test $tmpdir/mount/\n-    echo 'exec $1/libc-test' > $tmpdir/mount/run.sh\n-  else\n-    rm -rf $tmpdir/generated\n-    mkdir -p $tmpdir/generated\n-    cargo build --manifest-path libc-test/generate-files/Cargo.toml\n-    (cd libc-test && TARGET=$TARGET OUT_DIR=$tmpdir/generated SKIP_COMPILE=1 \\\n-      $CARGO_TARGET_DIR/debug/generate-files)\n-\n-    # Copy this folder into the mounted image, the `run.sh` entry point, and\n-    # overwrite the standard libc-test Cargo.toml with the overlay one which will\n-    # assume the all.{c,rs} test files have already been generated\n-    mkdir $tmpdir/mount/libc\n-    cp -r Cargo.* libc-test src ci $tmpdir/mount/libc/\n-    ln -s libc-test/target $tmpdir/mount/libc/target\n-    cp ci/run-qemu.sh $tmpdir/mount/run.sh\n-    echo $TARGET | tee -a $tmpdir/mount/TARGET\n-    cp $tmpdir/generated/* $tmpdir/mount/libc/libc-test\n-    cp libc-test/run-generated-Cargo.toml $tmpdir/mount/libc/libc-test/Cargo.toml\n-  fi\n-\n-  du -sh $tmpdir/mount\n-  genext2fs \\\n-      --root $tmpdir/mount \\\n-      --size-in-blocks 100000 \\\n-      $tmpdir/libc-test.img\n-\n-  # Pass -snapshot to prevent tampering with the disk images, this helps when\n-  # running this script in development. The two drives are then passed next,\n-  # first is the OS and second is the one we just made. Next the network is\n-  # configured to work (I'm not entirely sure how), and then finally we turn off\n-  # graphics and redirect the serial console output to out.log.\n-  qemu-system-x86_64 \\\n-    -m 1024 \\\n-    -snapshot \\\n-    -drive if=virtio,file=$tmpdir/$qemufile \\\n-    -drive if=virtio,file=$tmpdir/libc-test.img \\\n-    -net nic,model=virtio \\\n-    -net user \\\n-    -nographic \\\n-    -vga none 2>&1 | tee $CARGO_TARGET_DIR/out.log\n-  exec grep \"^PASSED .* tests\" $CARGO_TARGET_DIR/out.log\n-fi\n-\n-case \"$TARGET\" in\n-  *-apple-ios)\n-    cargo rustc --manifest-path libc-test/Cargo.toml --target $TARGET -- \\\n-        -C link-args=-mios-simulator-version-min=7.0\n-    ;;\n-\n-  *)\n-    cargo build --manifest-path libc-test/Cargo.toml --target $TARGET\n-    ;;\n-esac\n-\n-case \"$TARGET\" in\n-  arm-linux-androideabi)\n-    emulator @arm-21 -no-window &\n-    adb wait-for-device\n-    adb push $CARGO_TARGET_DIR/$TARGET/debug/libc-test /data/libc-test\n-    adb shell /data/libc-test 2>&1 | tee /tmp/out\n-    grep \"^PASSED .* tests\" /tmp/out\n-    ;;\n-\n-  arm-unknown-linux-gnueabihf)\n-    qemu-arm -L /usr/arm-linux-gnueabihf $CARGO_TARGET_DIR/$TARGET/debug/libc-test\n-    ;;\n-\n-  mips-unknown-linux-gnu)\n-    qemu-mips -L /usr/mips-linux-gnu $CARGO_TARGET_DIR/$TARGET/debug/libc-test\n-    ;;\n-\n-  mips64-unknown-linux-gnuabi64)\n-    qemu-mips64 -L /usr/mips64-linux-gnuabi64 $CARGO_TARGET_DIR/$TARGET/debug/libc-test\n-    ;;\n-\n-  mips-unknown-linux-musl)\n-    qemu-mips -L /toolchain/staging_dir/toolchain-mips_34kc_gcc-5.3.0_musl-1.1.15 \\\n-              $CARGO_TARGET_DIR/$TARGET/debug/libc-test\n-    ;;\n-\n-  mipsel-unknown-linux-musl)\n-      qemu-mipsel -L /toolchain $CARGO_TARGET_DIR/$TARGET/debug/libc-test\n-      ;;\n-\n-  powerpc-unknown-linux-gnu)\n-    qemu-ppc -L /usr/powerpc-linux-gnu $CARGO_TARGET_DIR/$TARGET/debug/libc-test\n-    ;;\n-\n-  powerpc64-unknown-linux-gnu)\n-    qemu-ppc64 -L /usr/powerpc64-linux-gnu $CARGO_TARGET_DIR/$TARGET/debug/libc-test\n-    ;;\n-\n-  aarch64-unknown-linux-gnu)\n-    qemu-aarch64 -L /usr/aarch64-linux-gnu/ $CARGO_TARGET_DIR/$TARGET/debug/libc-test\n-    ;;\n-\n-  *-rumprun-netbsd)\n-    rumprun-bake hw_virtio /tmp/libc-test.img $CARGO_TARGET_DIR/$TARGET/debug/libc-test\n-    qemu-system-x86_64 -nographic -vga none -m 64 \\\n-        -kernel /tmp/libc-test.img 2>&1 | tee /tmp/out &\n-    sleep 5\n-    grep \"^PASSED .* tests\" /tmp/out\n-    ;;\n-\n-  *)\n-    $CARGO_TARGET_DIR/$TARGET/debug/libc-test\n-    ;;\n-esac"}, {"sha": "32e4ba772c5b73c293ab4936937176bde0f71d0c", "filename": "src/vendor/libc/ci/style.rs", "status": "removed", "additions": 0, "deletions": 204, "changes": 204, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fstyle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fci%2Fstyle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fci%2Fstyle.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,204 +0,0 @@\n-//! Simple script to verify the coding style of this library\n-//!\n-//! ## How to run\n-//!\n-//! The first argument to this script is the directory to run on, so running\n-//! this script should be as simple as:\n-//!\n-//! ```notrust\n-//! rustc ci/style.rs\n-//! ./style src\n-//! ```\n-//!\n-//! ## Guidelines\n-//!\n-//! The current style is:\n-//!\n-//! * No trailing whitespace\n-//! * No tabs\n-//! * 80-character lines\n-//! * `extern` instead of `extern \"C\"`\n-//! * Specific module layout:\n-//!     1. use directives\n-//!     2. typedefs\n-//!     3. structs\n-//!     4. constants\n-//!     5. f! { ... } functions\n-//!     6. extern functions\n-//!     7. modules + pub use\n-//!\n-//! Things not verified:\n-//!\n-//! * alignment\n-//! * 4-space tabs\n-//! * leading colons on paths\n-\n-use std::env;\n-use std::fs;\n-use std::io::prelude::*;\n-use std::path::Path;\n-\n-macro_rules! t {\n-    ($e:expr) => (match $e {\n-        Ok(e) => e,\n-        Err(e) => panic!(\"{} failed with {}\", stringify!($e), e),\n-    })\n-}\n-\n-fn main() {\n-    let arg = env::args().skip(1).next().unwrap_or(\".\".to_string());\n-\n-    let mut errors = Errors { errs: false };\n-    walk(Path::new(&arg), &mut errors);\n-\n-    if errors.errs {\n-        panic!(\"found some lint errors\");\n-    } else {\n-        println!(\"good style!\");\n-    }\n-}\n-\n-fn walk(path: &Path, err: &mut Errors) {\n-    for entry in t!(path.read_dir()).map(|e| t!(e)) {\n-        let path = entry.path();\n-        if t!(entry.file_type()).is_dir() {\n-            walk(&path, err);\n-            continue\n-        }\n-\n-        let name = entry.file_name().into_string().unwrap();\n-        match &name[..] {\n-            n if !n.ends_with(\".rs\") => continue,\n-\n-            \"dox.rs\" |\n-            \"lib.rs\" |\n-            \"macros.rs\" => continue,\n-\n-            _ => {}\n-        }\n-\n-        let mut contents = String::new();\n-        t!(t!(fs::File::open(&path)).read_to_string(&mut contents));\n-\n-        check_style(&contents, &path, err);\n-    }\n-}\n-\n-struct Errors {\n-    errs: bool,\n-}\n-\n-#[derive(Clone, Copy, PartialEq)]\n-enum State {\n-    Start,\n-    Imports,\n-    Typedefs,\n-    Structs,\n-    Constants,\n-    FunctionDefinitions,\n-    Functions,\n-    Modules,\n-}\n-\n-fn check_style(file: &str, path: &Path, err: &mut Errors) {\n-    let mut state = State::Start;\n-    let mut s_macros = 0;\n-    let mut f_macros = 0;\n-    let mut prev_blank = false;\n-\n-    for (i, line) in file.lines().enumerate() {\n-        if line == \"\" {\n-            if prev_blank {\n-                err.error(path, i, \"double blank line\");\n-            }\n-            prev_blank = true;\n-        } else {\n-            prev_blank = false;\n-        }\n-        if line != line.trim_right() {\n-            err.error(path, i, \"trailing whitespace\");\n-        }\n-        if line.contains(\"\\t\") {\n-            err.error(path, i, \"tab character\");\n-        }\n-        if line.len() > 80 {\n-            err.error(path, i, \"line longer than 80 chars\");\n-        }\n-        if line.contains(\"extern \\\"C\\\"\") {\n-            err.error(path, i, \"use `extern` instead of `extern \\\"C\\\"\");\n-        }\n-        if line.contains(\"#[cfg(\") && !line.contains(\" if \") {\n-            if state != State::Structs {\n-                err.error(path, i, \"use cfg_if! and submodules \\\n-                                    instead of #[cfg]\");\n-            }\n-        }\n-\n-        let line = line.trim_left();\n-        let is_pub = line.starts_with(\"pub \");\n-        let line = if is_pub {&line[4..]} else {line};\n-\n-        let line_state = if line.starts_with(\"use \") {\n-            if is_pub {\n-                State::Modules\n-            } else {\n-                State::Imports\n-            }\n-        } else if line.starts_with(\"const \") {\n-            State::Constants\n-        } else if line.starts_with(\"type \") {\n-            State::Typedefs\n-        } else if line.starts_with(\"s! {\") {\n-            s_macros += 1;\n-            State::Structs\n-        } else if line.starts_with(\"f! {\") {\n-            f_macros += 1;\n-            State::FunctionDefinitions\n-        } else if line.starts_with(\"extern \") {\n-            State::Functions\n-        } else if line.starts_with(\"mod \") {\n-            State::Modules\n-        } else {\n-            continue\n-        };\n-\n-        if state as usize > line_state as usize {\n-            err.error(path, i, &format!(\"{} found after {} when \\\n-                                         it belongs before\",\n-                                        line_state.desc(), state.desc()));\n-        }\n-\n-        if f_macros == 2 {\n-            f_macros += 1;\n-            err.error(path, i, \"multiple f! macros in one module\");\n-        }\n-        if s_macros == 2 {\n-            s_macros += 1;\n-            err.error(path, i, \"multiple s! macros in one module\");\n-        }\n-\n-        state = line_state;\n-    }\n-}\n-\n-impl State {\n-    fn desc(&self) -> &str {\n-        match *self {\n-            State::Start => \"start\",\n-            State::Imports => \"import\",\n-            State::Typedefs => \"typedef\",\n-            State::Structs => \"struct\",\n-            State::Constants => \"constant\",\n-            State::FunctionDefinitions => \"function definition\",\n-            State::Functions => \"extern function\",\n-            State::Modules => \"module\",\n-        }\n-    }\n-}\n-\n-impl Errors {\n-    fn error(&mut self, path: &Path, line: usize, msg: &str) {\n-        self.errs = true;\n-        println!(\"{}:{} - {}\", path.display(), line + 1, msg);\n-    }\n-}"}, {"sha": "c7d3dc9c2deba67253d7e0f9a5c72495cbae1a2d", "filename": "src/vendor/libc/src/dox.rs", "status": "removed", "additions": 0, "deletions": 134, "changes": 134, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Fdox.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Fdox.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Fdox.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,134 +0,0 @@\n-pub use self::imp::*;\n-\n-#[cfg(not(dox))]\n-mod imp {\n-    pub use core::option::Option;\n-    pub use core::clone::Clone;\n-    pub use core::marker::Copy;\n-    pub use core::mem;\n-}\n-\n-#[cfg(dox)]\n-mod imp {\n-    pub enum Option<T> {\n-        Some(T),\n-        None,\n-    }\n-    impl<T: Copy> Copy for Option<T> {}\n-    impl<T: Clone> Clone for Option<T> {\n-        fn clone(&self) -> Option<T> { loop {} }\n-    }\n-\n-    pub trait Clone {\n-        fn clone(&self) -> Self;\n-    }\n-\n-    #[lang = \"copy\"]\n-    pub trait Copy {}\n-\n-    #[lang = \"sync\"]\n-    pub trait Sync {}\n-    impl<T> Sync for T {}\n-\n-    #[lang = \"sized\"]\n-    pub trait Sized {}\n-\n-    macro_rules! each_int {\n-        ($mac:ident) => (\n-            $mac!(u8);\n-            $mac!(u16);\n-            $mac!(u32);\n-            $mac!(u64);\n-            $mac!(usize);\n-            $mac!(i8);\n-            $mac!(i16);\n-            $mac!(i32);\n-            $mac!(i64);\n-            $mac!(isize);\n-        )\n-    }\n-\n-    #[lang = \"div\"]\n-    pub trait Div<RHS> {\n-        type Output;\n-        fn div(self, rhs: RHS) -> Self::Output;\n-    }\n-\n-    macro_rules! impl_div {\n-        ($($i:ident)*) => ($(\n-            impl Div<$i> for $i {\n-                type Output = $i;\n-                fn div(self, rhs: $i) -> $i { self / rhs }\n-            }\n-        )*)\n-    }\n-    each_int!(impl_div);\n-\n-    #[lang = \"shl\"]\n-    pub trait Shl<RHS> {\n-        type Output;\n-        fn shl(self, rhs: RHS) -> Self::Output;\n-    }\n-\n-    macro_rules! impl_shl {\n-        ($($i:ident)*) => ($(\n-            impl Shl<$i> for $i {\n-                type Output = $i;\n-                fn shl(self, rhs: $i) -> $i { self << rhs }\n-            }\n-        )*)\n-    }\n-    each_int!(impl_shl);\n-\n-    #[lang = \"mul\"]\n-    pub trait Mul<RHS=Self> {\n-        type Output;\n-        fn mul(self, rhs: RHS) -> Self::Output;\n-    }\n-\n-    macro_rules! impl_mul {\n-        ($($i:ident)*) => ($(\n-            impl Mul for $i {\n-                type Output = $i;\n-                fn mul(self, rhs: $i) -> $i { self * rhs }\n-            }\n-        )*)\n-    }\n-    each_int!(impl_mul);\n-\n-    #[lang = \"sub\"]\n-    pub trait Sub<RHS=Self> {\n-        type Output;\n-        fn sub(self, rhs: RHS) -> Self::Output;\n-    }\n-\n-    macro_rules! impl_sub {\n-        ($($i:ident)*) => ($(\n-            impl Sub for $i {\n-                type Output = $i;\n-                fn sub(self, rhs: $i) -> $i { self - rhs }\n-            }\n-        )*)\n-    }\n-    each_int!(impl_sub);\n-\n-    #[lang = \"bitor\"]\n-    pub trait Bitor<RHS=Self> {\n-        type Output;\n-        fn bitor(self, rhs: RHS) -> Self::Output;\n-    }\n-\n-    macro_rules! impl_bitor {\n-        ($($i:ident)*) => ($(\n-            impl Bitor for $i {\n-                type Output = $i;\n-                fn bitor(self, rhs: $i) -> $i { self | rhs }\n-            }\n-        )*)\n-    }\n-    each_int!(impl_bitor);\n-\n-    pub mod mem {\n-        pub fn size_of_val<T>(_: &T) -> usize { 4 }\n-    }\n-}"}, {"sha": "dcc4791f9af0bf23a46a97713562f7a6fd5f1c5d", "filename": "src/vendor/libc/src/lib.rs", "status": "removed", "additions": 0, "deletions": 274, "changes": 274, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Flib.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,274 +0,0 @@\n-// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-//! Crate docs\n-\n-#![allow(bad_style, overflowing_literals, improper_ctypes)]\n-#![crate_type = \"rlib\"]\n-#![crate_name = \"libc\"]\n-#![cfg_attr(dox, feature(no_core, lang_items))]\n-#![cfg_attr(dox, no_core)]\n-#![doc(html_logo_url = \"https://www.rust-lang.org/logos/rust-logo-128x128-blk-v2.png\",\n-       html_favicon_url = \"https://doc.rust-lang.org/favicon.ico\")]\n-\n-#![cfg_attr(all(target_os = \"linux\", target_arch = \"x86_64\"), doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/x86_64-unknown-linux-gnu\"\n-))]\n-#![cfg_attr(all(target_os = \"linux\", target_arch = \"x86\"), doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/i686-unknown-linux-gnu\"\n-))]\n-#![cfg_attr(all(target_os = \"linux\", target_arch = \"arm\"), doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/arm-unknown-linux-gnueabihf\"\n-))]\n-#![cfg_attr(all(target_os = \"linux\", target_arch = \"mips\"), doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/mips-unknown-linux-gnu\"\n-))]\n-#![cfg_attr(all(target_os = \"linux\", target_arch = \"aarch64\"), doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/aarch64-unknown-linux-gnu\"\n-))]\n-#![cfg_attr(all(target_os = \"linux\", target_env = \"musl\"), doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/x86_64-unknown-linux-musl\"\n-))]\n-#![cfg_attr(all(target_os = \"macos\", target_arch = \"x86_64\"), doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/x86_64-apple-darwin\"\n-))]\n-#![cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"), doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/i686-apple-darwin\"\n-))]\n-#![cfg_attr(all(windows, target_arch = \"x86_64\", target_env = \"gnu\"), doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/x86_64-pc-windows-gnu\"\n-))]\n-#![cfg_attr(all(windows, target_arch = \"x86\", target_env = \"gnu\"), doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/i686-pc-windows-gnu\"\n-))]\n-#![cfg_attr(all(windows, target_arch = \"x86_64\", target_env = \"msvc\"), doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/x86_64-pc-windows-msvc\"\n-))]\n-#![cfg_attr(all(windows, target_arch = \"x86\", target_env = \"msvc\"), doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/i686-pc-windows-msvc\"\n-))]\n-#![cfg_attr(target_os = \"android\", doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/arm-linux-androideabi\"\n-))]\n-#![cfg_attr(target_os = \"freebsd\", doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/x86_64-unknown-freebsd\"\n-))]\n-#![cfg_attr(target_os = \"openbsd\", doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/x86_64-unknown-openbsd\"\n-))]\n-#![cfg_attr(target_os = \"bitrig\", doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/x86_64-unknown-bitrig\"\n-))]\n-#![cfg_attr(target_os = \"netbsd\", doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/x86_64-unknown-netbsd\"\n-))]\n-#![cfg_attr(target_os = \"dragonfly\", doc(\n-    html_root_url = \"https://doc.rust-lang.org/libc/x86_64-unknown-dragonfly\"\n-))]\n-\n-// Attributes needed when building as part of the standard library\n-#![cfg_attr(stdbuild, feature(no_std, core, core_slice_ext, staged_api, custom_attribute, cfg_target_vendor))]\n-#![cfg_attr(stdbuild, no_std)]\n-#![cfg_attr(stdbuild, staged_api)]\n-#![cfg_attr(stdbuild, allow(warnings))]\n-#![cfg_attr(stdbuild, unstable(feature = \"libc\",\n-                               reason = \"use `libc` from crates.io\",\n-                               issue = \"27783\"))]\n-\n-#![cfg_attr(not(feature = \"use_std\"), no_std)]\n-\n-#[cfg(all(not(stdbuild), not(dox), feature = \"use_std\"))]\n-extern crate std as core;\n-\n-#[macro_use] mod macros;\n-mod dox;\n-\n-// Use repr(u8) as LLVM expects `void*` to be the same as `i8*` to help enable\n-// more optimization opportunities around it recognizing things like\n-// malloc/free.\n-#[repr(u8)]\n-pub enum c_void {\n-    // Two dummy variants so the #[repr] attribute can be used.\n-    #[doc(hidden)]\n-    __variant1,\n-    #[doc(hidden)]\n-    __variant2,\n-}\n-\n-pub type int8_t = i8;\n-pub type int16_t = i16;\n-pub type int32_t = i32;\n-pub type int64_t = i64;\n-pub type uint8_t = u8;\n-pub type uint16_t = u16;\n-pub type uint32_t = u32;\n-pub type uint64_t = u64;\n-\n-pub type c_schar = i8;\n-pub type c_uchar = u8;\n-pub type c_short = i16;\n-pub type c_ushort = u16;\n-pub type c_int = i32;\n-pub type c_uint = u32;\n-pub type c_float = f32;\n-pub type c_double = f64;\n-pub type c_longlong = i64;\n-pub type c_ulonglong = u64;\n-pub type intmax_t = i64;\n-pub type uintmax_t = u64;\n-\n-pub type size_t = usize;\n-pub type ptrdiff_t = isize;\n-pub type intptr_t = isize;\n-pub type uintptr_t = usize;\n-pub type ssize_t = isize;\n-\n-pub enum FILE {}\n-pub enum fpos_t {} // TODO: fill this out with a struct\n-\n-extern {\n-    pub fn isalnum(c: c_int) -> c_int;\n-    pub fn isalpha(c: c_int) -> c_int;\n-    pub fn iscntrl(c: c_int) -> c_int;\n-    pub fn isdigit(c: c_int) -> c_int;\n-    pub fn isgraph(c: c_int) -> c_int;\n-    pub fn islower(c: c_int) -> c_int;\n-    pub fn isprint(c: c_int) -> c_int;\n-    pub fn ispunct(c: c_int) -> c_int;\n-    pub fn isspace(c: c_int) -> c_int;\n-    pub fn isupper(c: c_int) -> c_int;\n-    pub fn isxdigit(c: c_int) -> c_int;\n-    pub fn tolower(c: c_int) -> c_int;\n-    pub fn toupper(c: c_int) -> c_int;\n-\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"fopen$UNIX2003\")]\n-    pub fn fopen(filename: *const c_char,\n-                 mode: *const c_char) -> *mut FILE;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"freopen$UNIX2003\")]\n-    pub fn freopen(filename: *const c_char, mode: *const c_char,\n-                   file: *mut FILE) -> *mut FILE;\n-    pub fn fflush(file: *mut FILE) -> c_int;\n-    pub fn fclose(file: *mut FILE) -> c_int;\n-    pub fn remove(filename: *const c_char) -> c_int;\n-    pub fn rename(oldname: *const c_char, newname: *const c_char) -> c_int;\n-    pub fn tmpfile() -> *mut FILE;\n-    pub fn setvbuf(stream: *mut FILE,\n-                   buffer: *mut c_char,\n-                   mode: c_int,\n-                   size: size_t) -> c_int;\n-    pub fn setbuf(stream: *mut FILE, buf: *mut c_char);\n-    pub fn getchar() -> c_int;\n-    pub fn putchar(c: c_int) -> c_int;\n-    pub fn fgetc(stream: *mut FILE) -> c_int;\n-    pub fn fgets(buf: *mut c_char, n: c_int, stream: *mut FILE) -> *mut c_char;\n-    pub fn fputc(c: c_int, stream: *mut FILE) -> c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"fputs$UNIX2003\")]\n-    pub fn fputs(s: *const c_char, stream: *mut FILE)-> c_int;\n-    pub fn puts(s: *const c_char) -> c_int;\n-    pub fn ungetc(c: c_int, stream: *mut FILE) -> c_int;\n-    pub fn fread(ptr: *mut c_void,\n-                 size: size_t,\n-                 nobj: size_t,\n-                 stream: *mut FILE)\n-                 -> size_t;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"fwrite$UNIX2003\")]\n-    pub fn fwrite(ptr: *const c_void,\n-                  size: size_t,\n-                  nobj: size_t,\n-                  stream: *mut FILE)\n-                  -> size_t;\n-    pub fn fseek(stream: *mut FILE, offset: c_long, whence: c_int) -> c_int;\n-    pub fn ftell(stream: *mut FILE) -> c_long;\n-    pub fn rewind(stream: *mut FILE);\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__fgetpos50\")]\n-    pub fn fgetpos(stream: *mut FILE, ptr: *mut fpos_t) -> c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__fsetpos50\")]\n-    pub fn fsetpos(stream: *mut FILE, ptr: *const fpos_t) -> c_int;\n-    pub fn feof(stream: *mut FILE) -> c_int;\n-    pub fn ferror(stream: *mut FILE) -> c_int;\n-    pub fn perror(s: *const c_char);\n-    pub fn atoi(s: *const c_char) -> c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"strtod$UNIX2003\")]\n-    pub fn strtod(s: *const c_char, endp: *mut *mut c_char) -> c_double;\n-    pub fn strtol(s: *const c_char,\n-                  endp: *mut *mut c_char, base: c_int) -> c_long;\n-    pub fn strtoul(s: *const c_char, endp: *mut *mut c_char,\n-                   base: c_int) -> c_ulong;\n-    pub fn calloc(nobj: size_t, size: size_t) -> *mut c_void;\n-    pub fn malloc(size: size_t) -> *mut c_void;\n-    pub fn realloc(p: *mut c_void, size: size_t) -> *mut c_void;\n-    pub fn free(p: *mut c_void);\n-    pub fn abort() -> !;\n-    pub fn exit(status: c_int) -> !;\n-    pub fn _exit(status: c_int) -> !;\n-    pub fn atexit(cb: extern fn()) -> c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"system$UNIX2003\")]\n-    pub fn system(s: *const c_char) -> c_int;\n-    pub fn getenv(s: *const c_char) -> *mut c_char;\n-\n-    pub fn strcpy(dst: *mut c_char, src: *const c_char) -> *mut c_char;\n-    pub fn strncpy(dst: *mut c_char, src: *const c_char, n: size_t)\n-                   -> *mut c_char;\n-    pub fn strcat(s: *mut c_char, ct: *const c_char) -> *mut c_char;\n-    pub fn strncat(s: *mut c_char, ct: *const c_char, n: size_t) -> *mut c_char;\n-    pub fn strcmp(cs: *const c_char, ct: *const c_char) -> c_int;\n-    pub fn strncmp(cs: *const c_char, ct: *const c_char, n: size_t) -> c_int;\n-    pub fn strcoll(cs: *const c_char, ct: *const c_char) -> c_int;\n-    pub fn strchr(cs: *const c_char, c: c_int) -> *mut c_char;\n-    pub fn strrchr(cs: *const c_char, c: c_int) -> *mut c_char;\n-    pub fn strspn(cs: *const c_char, ct: *const c_char) -> size_t;\n-    pub fn strcspn(cs: *const c_char, ct: *const c_char) -> size_t;\n-    pub fn strdup(cs: *const c_char) -> *mut c_char;\n-    pub fn strpbrk(cs: *const c_char, ct: *const c_char) -> *mut c_char;\n-    pub fn strstr(cs: *const c_char, ct: *const c_char) -> *mut c_char;\n-    pub fn strlen(cs: *const c_char) -> size_t;\n-    pub fn strnlen(cs: *const c_char, maxlen: size_t) -> size_t;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"strerror$UNIX2003\")]\n-    pub fn strerror(n: c_int) -> *mut c_char;\n-    pub fn strtok(s: *mut c_char, t: *const c_char) -> *mut c_char;\n-    pub fn strxfrm(s: *mut c_char, ct: *const c_char, n: size_t) -> size_t;\n-    pub fn wcslen(buf: *const wchar_t) -> size_t;\n-\n-    pub fn memchr(cx: *const c_void, c: c_int, n: size_t) -> *mut c_void;\n-    pub fn memcmp(cx: *const c_void, ct: *const c_void, n: size_t) -> c_int;\n-    pub fn memcpy(dest: *mut c_void, src: *const c_void, n: size_t) -> *mut c_void;\n-    pub fn memmove(dest: *mut c_void, src: *const c_void, n: size_t) -> *mut c_void;\n-    pub fn memset(dest: *mut c_void, c: c_int, n: size_t) -> *mut c_void;\n-}\n-\n-// These are all inline functions on android, so they end up just being entirely\n-// missing on that platform.\n-#[cfg(not(target_os = \"android\"))]\n-extern {\n-    pub fn abs(i: c_int) -> c_int;\n-    pub fn atof(s: *const c_char) -> c_double;\n-    pub fn labs(i: c_long) -> c_long;\n-    pub fn rand() -> c_int;\n-    pub fn srand(seed: c_uint);\n-}\n-\n-cfg_if! {\n-    if #[cfg(windows)] {\n-        mod windows;\n-        pub use windows::*;\n-    } else if #[cfg(unix)] {\n-        mod unix;\n-        pub use unix::*;\n-    } else {\n-        // Unknown target_family\n-    }\n-}"}, {"sha": "5811c84c3aaa541010b7e363b52ffb311d1cd5f2", "filename": "src/vendor/libc/src/macros.rs", "status": "removed", "additions": 0, "deletions": 108, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Fmacros.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,108 +0,0 @@\n-/// A macro for defining #[cfg] if-else statements.\n-///\n-/// This is similar to the `if/elif` C preprocessor macro by allowing definition\n-/// of a cascade of `#[cfg]` cases, emitting the implementation which matches\n-/// first.\n-///\n-/// This allows you to conveniently provide a long list #[cfg]'d blocks of code\n-/// without having to rewrite each clause multiple times.\n-macro_rules! cfg_if {\n-    ($(\n-        if #[cfg($($meta:meta),*)] { $($it:item)* }\n-    ) else * else {\n-        $($it2:item)*\n-    }) => {\n-        __cfg_if_items! {\n-            () ;\n-            $( ( ($($meta),*) ($($it)*) ), )*\n-            ( () ($($it2)*) ),\n-        }\n-    }\n-}\n-\n-macro_rules! __cfg_if_items {\n-    (($($not:meta,)*) ; ) => {};\n-    (($($not:meta,)*) ; ( ($($m:meta),*) ($($it:item)*) ), $($rest:tt)*) => {\n-        __cfg_if_apply! { cfg(all(not(any($($not),*)), $($m,)*)), $($it)* }\n-        __cfg_if_items! { ($($not,)* $($m,)*) ; $($rest)* }\n-    }\n-}\n-\n-macro_rules! __cfg_if_apply {\n-    ($m:meta, $($it:item)*) => {\n-        $(#[$m] $it)*\n-    }\n-}\n-\n-macro_rules! s {\n-    ($($(#[$attr:meta])* pub struct $i:ident { $($field:tt)* })*) => ($(\n-        __item! {\n-            #[repr(C)]\n-            $(#[$attr])*\n-            pub struct $i { $($field)* }\n-        }\n-        impl ::dox::Copy for $i {}\n-        impl ::dox::Clone for $i {\n-            fn clone(&self) -> $i { *self }\n-        }\n-    )*)\n-}\n-\n-macro_rules! f {\n-    ($(pub fn $i:ident($($arg:ident: $argty:ty),*) -> $ret:ty {\n-        $($body:stmt);*\n-    })*) => ($(\n-        #[inline]\n-        #[cfg(not(dox))]\n-        pub unsafe extern fn $i($($arg: $argty),*) -> $ret {\n-            $($body);*\n-        }\n-\n-        #[cfg(dox)]\n-        #[allow(dead_code)]\n-        pub unsafe extern fn $i($($arg: $argty),*) -> $ret {\n-            loop {}\n-        }\n-    )*)\n-}\n-\n-macro_rules! __item {\n-    ($i:item) => ($i)\n-}\n-\n-#[cfg(test)]\n-mod tests {\n-    cfg_if! {\n-        if #[cfg(test)] {\n-            use std::option::Option as Option2;\n-            fn works1() -> Option2<u32> { Some(1) }\n-        } else {\n-            fn works1() -> Option<u32> { None }\n-        }\n-    }\n-\n-    cfg_if! {\n-        if #[cfg(foo)] {\n-            fn works2() -> bool { false }\n-        } else if #[cfg(test)] {\n-            fn works2() -> bool { true }\n-        } else {\n-            fn works2() -> bool { false }\n-        }\n-    }\n-\n-    cfg_if! {\n-        if #[cfg(foo)] {\n-            fn works3() -> bool { false }\n-        } else {\n-            fn works3() -> bool { true }\n-        }\n-    }\n-\n-    #[test]\n-    fn it_works() {\n-        assert!(works1().is_some());\n-        assert!(works2());\n-        assert!(works3());\n-    }\n-}"}, {"sha": "8ca02544973ec5db0337d8f1820ccdbb37064b60", "filename": "src/vendor/libc/src/unix/bsd/apple/b32.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fapple%2Fb32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fapple%2Fb32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fapple%2Fb32.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,19 +0,0 @@\n-//! 32-bit specific Apple (ios/darwin) definitions\n-\n-pub type c_long = i32;\n-pub type c_ulong = u32;\n-\n-s! {\n-    pub struct pthread_attr_t {\n-        __sig: c_long,\n-        __opaque: [::c_char; 36]\n-    }\n-}\n-\n-pub const __PTHREAD_MUTEX_SIZE__: usize = 40;\n-pub const __PTHREAD_COND_SIZE__: usize = 24;\n-pub const __PTHREAD_CONDATTR_SIZE__: usize = 4;\n-pub const __PTHREAD_RWLOCK_SIZE__: usize = 124;\n-\n-pub const TIOCTIMESTAMP: ::c_ulong = 0x40087459;\n-pub const TIOCDCDTIMESTAMP: ::c_ulong = 0x40087458;"}, {"sha": "327a4b63116b076b16ee8af45d5a09b4c4ebd0e6", "filename": "src/vendor/libc/src/unix/bsd/apple/b64.rs", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fapple%2Fb64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fapple%2Fb64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fapple%2Fb64.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,19 +0,0 @@\n-//! 64-bit specific Apple (ios/darwin) definitions\n-\n-pub type c_long = i64;\n-pub type c_ulong = u64;\n-\n-s! {\n-    pub struct pthread_attr_t {\n-        __sig: c_long,\n-        __opaque: [::c_char; 56]\n-    }\n-}\n-\n-pub const __PTHREAD_MUTEX_SIZE__: usize = 56;\n-pub const __PTHREAD_COND_SIZE__: usize = 40;\n-pub const __PTHREAD_CONDATTR_SIZE__: usize = 8;\n-pub const __PTHREAD_RWLOCK_SIZE__: usize = 192;\n-\n-pub const TIOCTIMESTAMP: ::c_ulong = 0x40107459;\n-pub const TIOCDCDTIMESTAMP: ::c_ulong = 0x40107458;"}, {"sha": "aa4d1ac74575e9f96fac8ec3313765ce54b243a1", "filename": "src/vendor/libc/src/unix/bsd/apple/mod.rs", "status": "removed", "additions": 0, "deletions": 1500, "changes": 1500, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fapple%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fapple%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fapple%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,1500 +0,0 @@\n-//! Apple (ios/darwin)-specific definitions\n-//!\n-//! This covers *-apple-* triples currently\n-\n-pub type clock_t = c_ulong;\n-pub type time_t = c_long;\n-pub type suseconds_t = i32;\n-pub type dev_t = i32;\n-pub type ino_t = u64;\n-pub type mode_t = u16;\n-pub type nlink_t = u16;\n-pub type blksize_t = i32;\n-pub type rlim_t = u64;\n-pub type mach_timebase_info_data_t = mach_timebase_info;\n-pub type pthread_key_t = c_ulong;\n-pub type sigset_t = u32;\n-pub type fsblkcnt_t = ::c_uint;\n-pub type fsfilcnt_t = ::c_uint;\n-pub type speed_t = ::c_ulong;\n-pub type tcflag_t = ::c_ulong;\n-pub type nl_item = ::c_int;\n-pub type id_t = ::c_uint;\n-pub type sem_t = ::c_int;\n-\n-pub enum timezone {}\n-\n-s! {\n-    pub struct utmpx {\n-        pub ut_user: [::c_char; _UTX_USERSIZE],\n-        pub ut_id: [::c_char; _UTX_IDSIZE],\n-        pub ut_line: [::c_char; _UTX_LINESIZE],\n-        pub ut_pid: ::pid_t,\n-        pub ut_type: ::c_short,\n-        pub ut_tv: ::timeval,\n-        pub ut_host: [::c_char; _UTX_HOSTSIZE],\n-        ut_pad: [::uint32_t; 16],\n-    }\n-\n-    pub struct glob_t {\n-        pub gl_pathc:  ::size_t,\n-        __unused1: ::c_int,\n-        pub gl_offs:   ::size_t,\n-        __unused2: ::c_int,\n-        pub gl_pathv:  *mut *mut ::c_char,\n-\n-        __unused3: *mut ::c_void,\n-\n-        __unused4: *mut ::c_void,\n-        __unused5: *mut ::c_void,\n-        __unused6: *mut ::c_void,\n-        __unused7: *mut ::c_void,\n-        __unused8: *mut ::c_void,\n-    }\n-\n-    pub struct sockaddr_storage {\n-        pub ss_len: u8,\n-        pub ss_family: ::sa_family_t,\n-        __ss_pad1: [u8; 6],\n-        __ss_align: i64,\n-        __ss_pad2: [u8; 112],\n-    }\n-\n-    pub struct addrinfo {\n-        pub ai_flags: ::c_int,\n-        pub ai_family: ::c_int,\n-        pub ai_socktype: ::c_int,\n-        pub ai_protocol: ::c_int,\n-        pub ai_addrlen: ::socklen_t,\n-        pub ai_canonname: *mut ::c_char,\n-        pub ai_addr: *mut ::sockaddr,\n-        pub ai_next: *mut addrinfo,\n-    }\n-\n-    pub struct mach_timebase_info {\n-        pub numer: u32,\n-        pub denom: u32,\n-    }\n-\n-    pub struct stat {\n-        pub st_dev: dev_t,\n-        pub st_mode: mode_t,\n-        pub st_nlink: nlink_t,\n-        pub st_ino: ino_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: dev_t,\n-        pub st_atime: time_t,\n-        pub st_atime_nsec: c_long,\n-        pub st_mtime: time_t,\n-        pub st_mtime_nsec: c_long,\n-        pub st_ctime: time_t,\n-        pub st_ctime_nsec: c_long,\n-        pub st_birthtime: time_t,\n-        pub st_birthtime_nsec: c_long,\n-        pub st_size: ::off_t,\n-        pub st_blocks: ::blkcnt_t,\n-        pub st_blksize: blksize_t,\n-        pub st_flags: ::uint32_t,\n-        pub st_gen: ::uint32_t,\n-        pub st_lspare: ::int32_t,\n-        pub st_qspare: [::int64_t; 2],\n-    }\n-\n-    pub struct dirent {\n-        pub d_ino: u64,\n-        pub d_seekoff: u64,\n-        pub d_reclen: u16,\n-        pub d_namlen: u16,\n-        pub d_type: u8,\n-        pub d_name: [::c_char; 1024],\n-    }\n-\n-    pub struct pthread_mutex_t {\n-        __sig: ::c_long,\n-        __opaque: [u8; __PTHREAD_MUTEX_SIZE__],\n-    }\n-\n-    pub struct pthread_mutexattr_t {\n-        __sig: ::c_long,\n-        __opaque: [u8; 8],\n-    }\n-\n-    pub struct pthread_cond_t {\n-        __sig: ::c_long,\n-        __opaque: [u8; __PTHREAD_COND_SIZE__],\n-    }\n-\n-    pub struct pthread_condattr_t {\n-        __sig: ::c_long,\n-        __opaque: [u8; __PTHREAD_CONDATTR_SIZE__],\n-    }\n-\n-    pub struct pthread_rwlock_t {\n-        __sig: ::c_long,\n-        __opaque: [u8; __PTHREAD_RWLOCK_SIZE__],\n-    }\n-\n-    pub struct siginfo_t {\n-        pub si_signo: ::c_int,\n-        pub si_errno: ::c_int,\n-        pub si_code: ::c_int,\n-        pub si_pid: ::pid_t,\n-        pub si_uid: ::uid_t,\n-        pub si_status: ::c_int,\n-        pub si_addr: *mut ::c_void,\n-        _pad: [usize; 9],\n-    }\n-\n-    pub struct sigaction {\n-        pub sa_sigaction: ::sighandler_t,\n-        pub sa_mask: sigset_t,\n-        pub sa_flags: ::c_int,\n-    }\n-\n-    pub struct stack_t {\n-        pub ss_sp: *mut ::c_void,\n-        pub ss_size: ::size_t,\n-        pub ss_flags: ::c_int,\n-    }\n-\n-    pub struct fstore_t {\n-        pub fst_flags: ::c_uint,\n-        pub fst_posmode: ::c_int,\n-        pub fst_offset: ::off_t,\n-        pub fst_length: ::off_t,\n-        pub fst_bytesalloc: ::off_t,\n-    }\n-\n-    pub struct radvisory {\n-        pub ra_offset: ::off_t,\n-        pub ra_count: ::c_int,\n-    }\n-\n-    pub struct statvfs {\n-        pub f_bsize: ::c_ulong,\n-        pub f_frsize: ::c_ulong,\n-        pub f_blocks: ::fsblkcnt_t,\n-        pub f_bfree: ::fsblkcnt_t,\n-        pub f_bavail: ::fsblkcnt_t,\n-        pub f_files: ::fsfilcnt_t,\n-        pub f_ffree: ::fsfilcnt_t,\n-        pub f_favail: ::fsfilcnt_t,\n-        pub f_fsid: ::c_ulong,\n-        pub f_flag: ::c_ulong,\n-        pub f_namemax: ::c_ulong,\n-    }\n-\n-    pub struct Dl_info {\n-        pub dli_fname: *const ::c_char,\n-        pub dli_fbase: *mut ::c_void,\n-        pub dli_sname: *const ::c_char,\n-        pub dli_saddr: *mut ::c_void,\n-    }\n-\n-    pub struct sockaddr_in {\n-        pub sin_len: u8,\n-        pub sin_family: ::sa_family_t,\n-        pub sin_port: ::in_port_t,\n-        pub sin_addr: ::in_addr,\n-        pub sin_zero: [::c_char; 8],\n-    }\n-\n-    pub struct statfs {\n-        pub f_bsize: ::uint32_t,\n-        pub f_iosize: ::int32_t,\n-        pub f_blocks: ::uint64_t,\n-        pub f_bfree: ::uint64_t,\n-        pub f_bavail: ::uint64_t,\n-        pub f_files: ::uint64_t,\n-        pub f_ffree: ::uint64_t,\n-        pub f_fsid: ::fsid_t,\n-        pub f_owner: ::uid_t,\n-        pub f_type: ::uint32_t,\n-        pub f_flags: ::uint32_t,\n-        pub f_fssubtype: ::uint32_t,\n-        pub f_fstypename: [::c_char; 16],\n-        pub f_mntonname: [::c_char; 1024],\n-        pub f_mntfromname: [::c_char; 1024],\n-        pub f_reserved: [::uint32_t; 8],\n-    }\n-\n-    // FIXME: this should have align 4 but it's got align 8 on 64-bit\n-    pub struct kevent {\n-        pub ident: ::uintptr_t,\n-        pub filter: ::int16_t,\n-        pub flags: ::uint16_t,\n-        pub fflags: ::uint32_t,\n-        pub data: ::intptr_t,\n-        pub udata: *mut ::c_void,\n-    }\n-\n-    pub struct kevent64_s {\n-        pub ident: ::uint64_t,\n-        pub filter: ::int16_t,\n-        pub flags: ::uint16_t,\n-        pub fflags: ::uint32_t,\n-        pub data: ::int64_t,\n-        pub udata: ::uint64_t,\n-        pub ext: [::uint64_t; 2],\n-    }\n-\n-    pub struct dqblk {\n-        pub dqb_bhardlimit: ::uint64_t,\n-        pub dqb_bsoftlimit: ::uint64_t,\n-        pub dqb_curbytes: ::uint64_t,\n-        pub dqb_ihardlimit: ::uint32_t,\n-        pub dqb_isoftlimit: ::uint32_t,\n-        pub dqb_curinodes: ::uint32_t,\n-        pub dqb_btime: ::uint32_t,\n-        pub dqb_itime: ::uint32_t,\n-        pub dqb_id: ::uint32_t,\n-        pub dqb_spare: [::uint32_t; 4],\n-    }\n-\n-    pub struct termios {\n-        pub c_iflag: ::tcflag_t,\n-        pub c_oflag: ::tcflag_t,\n-        pub c_cflag: ::tcflag_t,\n-        pub c_lflag: ::tcflag_t,\n-        pub c_cc: [::cc_t; ::NCCS],\n-        pub c_ispeed: ::speed_t,\n-        pub c_ospeed: ::speed_t,\n-    }\n-\n-    pub struct flock {\n-        pub l_start: ::off_t,\n-        pub l_len: ::off_t,\n-        pub l_pid: ::pid_t,\n-        pub l_type: ::c_short,\n-        pub l_whence: ::c_short,\n-    }\n-\n-    pub struct sf_hdtr {\n-        pub headers: *mut ::iovec,\n-        pub hdr_cnt: ::c_int,\n-        pub trailers: *mut ::iovec,\n-        pub trl_cnt: ::c_int,\n-    }\n-\n-    pub struct lconv {\n-        pub decimal_point: *mut ::c_char,\n-        pub thousands_sep: *mut ::c_char,\n-        pub grouping: *mut ::c_char,\n-        pub int_curr_symbol: *mut ::c_char,\n-        pub currency_symbol: *mut ::c_char,\n-        pub mon_decimal_point: *mut ::c_char,\n-        pub mon_thousands_sep: *mut ::c_char,\n-        pub mon_grouping: *mut ::c_char,\n-        pub positive_sign: *mut ::c_char,\n-        pub negative_sign: *mut ::c_char,\n-        pub int_frac_digits: ::c_char,\n-        pub frac_digits: ::c_char,\n-        pub p_cs_precedes: ::c_char,\n-        pub p_sep_by_space: ::c_char,\n-        pub n_cs_precedes: ::c_char,\n-        pub n_sep_by_space: ::c_char,\n-        pub p_sign_posn: ::c_char,\n-        pub n_sign_posn: ::c_char,\n-        pub int_p_cs_precedes: ::c_char,\n-        pub int_n_cs_precedes: ::c_char,\n-        pub int_p_sep_by_space: ::c_char,\n-        pub int_n_sep_by_space: ::c_char,\n-        pub int_p_sign_posn: ::c_char,\n-        pub int_n_sign_posn: ::c_char,\n-    }\n-}\n-\n-pub const _UTX_USERSIZE: usize = 256;\n-pub const _UTX_LINESIZE: usize = 32;\n-pub const _UTX_IDSIZE: usize = 4;\n-pub const _UTX_HOSTSIZE: usize = 256;\n-\n-pub const EMPTY: ::c_short = 0;\n-pub const RUN_LVL: ::c_short = 1;\n-pub const BOOT_TIME: ::c_short = 2;\n-pub const OLD_TIME: ::c_short = 3;\n-pub const NEW_TIME: ::c_short = 4;\n-pub const INIT_PROCESS: ::c_short = 5;\n-pub const LOGIN_PROCESS: ::c_short = 6;\n-pub const USER_PROCESS: ::c_short = 7;\n-pub const DEAD_PROCESS: ::c_short = 8;\n-pub const ACCOUNTING: ::c_short = 9;\n-pub const SIGNATURE: ::c_short = 10;\n-pub const SHUTDOWN_TIME: ::c_short = 11;\n-\n-pub const LC_COLLATE_MASK: ::c_int = (1 << 0);\n-pub const LC_CTYPE_MASK: ::c_int = (1 << 1);\n-pub const LC_MESSAGES_MASK: ::c_int = (1 << 2);\n-pub const LC_MONETARY_MASK: ::c_int = (1 << 3);\n-pub const LC_NUMERIC_MASK: ::c_int = (1 << 4);\n-pub const LC_TIME_MASK: ::c_int = (1 << 5);\n-pub const LC_ALL_MASK: ::c_int = LC_COLLATE_MASK\n-                               | LC_CTYPE_MASK\n-                               | LC_MESSAGES_MASK\n-                               | LC_MONETARY_MASK\n-                               | LC_NUMERIC_MASK\n-                               | LC_TIME_MASK;\n-\n-pub const CODESET: ::nl_item = 0;\n-pub const D_T_FMT: ::nl_item = 1;\n-pub const D_FMT: ::nl_item = 2;\n-pub const T_FMT: ::nl_item = 3;\n-pub const T_FMT_AMPM: ::nl_item = 4;\n-pub const AM_STR: ::nl_item = 5;\n-pub const PM_STR: ::nl_item = 6;\n-\n-pub const DAY_1: ::nl_item = 7;\n-pub const DAY_2: ::nl_item = 8;\n-pub const DAY_3: ::nl_item = 9;\n-pub const DAY_4: ::nl_item = 10;\n-pub const DAY_5: ::nl_item = 11;\n-pub const DAY_6: ::nl_item = 12;\n-pub const DAY_7: ::nl_item = 13;\n-\n-pub const ABDAY_1: ::nl_item = 14;\n-pub const ABDAY_2: ::nl_item = 15;\n-pub const ABDAY_3: ::nl_item = 16;\n-pub const ABDAY_4: ::nl_item = 17;\n-pub const ABDAY_5: ::nl_item = 18;\n-pub const ABDAY_6: ::nl_item = 19;\n-pub const ABDAY_7: ::nl_item = 20;\n-\n-pub const MON_1: ::nl_item = 21;\n-pub const MON_2: ::nl_item = 22;\n-pub const MON_3: ::nl_item = 23;\n-pub const MON_4: ::nl_item = 24;\n-pub const MON_5: ::nl_item = 25;\n-pub const MON_6: ::nl_item = 26;\n-pub const MON_7: ::nl_item = 27;\n-pub const MON_8: ::nl_item = 28;\n-pub const MON_9: ::nl_item = 29;\n-pub const MON_10: ::nl_item = 30;\n-pub const MON_11: ::nl_item = 31;\n-pub const MON_12: ::nl_item = 32;\n-\n-pub const ABMON_1: ::nl_item = 33;\n-pub const ABMON_2: ::nl_item = 34;\n-pub const ABMON_3: ::nl_item = 35;\n-pub const ABMON_4: ::nl_item = 36;\n-pub const ABMON_5: ::nl_item = 37;\n-pub const ABMON_6: ::nl_item = 38;\n-pub const ABMON_7: ::nl_item = 39;\n-pub const ABMON_8: ::nl_item = 40;\n-pub const ABMON_9: ::nl_item = 41;\n-pub const ABMON_10: ::nl_item = 42;\n-pub const ABMON_11: ::nl_item = 43;\n-pub const ABMON_12: ::nl_item = 44;\n-\n-pub const ERA: ::nl_item = 45;\n-pub const ERA_D_FMT: ::nl_item = 46;\n-pub const ERA_D_T_FMT: ::nl_item = 47;\n-pub const ERA_T_FMT: ::nl_item = 48;\n-pub const ALT_DIGITS: ::nl_item = 49;\n-\n-pub const RADIXCHAR: ::nl_item = 50;\n-pub const THOUSEP: ::nl_item = 51;\n-\n-pub const YESEXPR: ::nl_item = 52;\n-pub const NOEXPR: ::nl_item = 53;\n-\n-pub const YESSTR: ::nl_item = 54;\n-pub const NOSTR: ::nl_item = 55;\n-\n-pub const CRNCYSTR: ::nl_item = 56;\n-\n-pub const D_MD_ORDER: ::nl_item = 57;\n-\n-pub const EXIT_FAILURE: ::c_int = 1;\n-pub const EXIT_SUCCESS: ::c_int = 0;\n-pub const RAND_MAX: ::c_int = 2147483647;\n-pub const EOF: ::c_int = -1;\n-pub const SEEK_SET: ::c_int = 0;\n-pub const SEEK_CUR: ::c_int = 1;\n-pub const SEEK_END: ::c_int = 2;\n-pub const _IOFBF: ::c_int = 0;\n-pub const _IONBF: ::c_int = 2;\n-pub const _IOLBF: ::c_int = 1;\n-pub const BUFSIZ: ::c_uint = 1024;\n-pub const FOPEN_MAX: ::c_uint = 20;\n-pub const FILENAME_MAX: ::c_uint = 1024;\n-pub const L_tmpnam: ::c_uint = 1024;\n-pub const TMP_MAX: ::c_uint = 308915776;\n-pub const _PC_LINK_MAX: ::c_int = 1;\n-pub const _PC_MAX_CANON: ::c_int = 2;\n-pub const _PC_MAX_INPUT: ::c_int = 3;\n-pub const _PC_NAME_MAX: ::c_int = 4;\n-pub const _PC_PATH_MAX: ::c_int = 5;\n-pub const _PC_PIPE_BUF: ::c_int = 6;\n-pub const _PC_CHOWN_RESTRICTED: ::c_int = 7;\n-pub const _PC_NO_TRUNC: ::c_int = 8;\n-pub const _PC_VDISABLE: ::c_int = 9;\n-pub const O_RDONLY: ::c_int = 0;\n-pub const O_WRONLY: ::c_int = 1;\n-pub const O_RDWR: ::c_int = 2;\n-pub const O_APPEND: ::c_int = 8;\n-pub const O_CREAT: ::c_int = 512;\n-pub const O_EXCL: ::c_int = 2048;\n-pub const O_NOCTTY: ::c_int = 131072;\n-pub const O_TRUNC: ::c_int = 1024;\n-pub const O_CLOEXEC: ::c_int = 0x1000000;\n-pub const O_DIRECTORY: ::c_int = 0x100000;\n-pub const S_IFIFO: mode_t = 4096;\n-pub const S_IFCHR: mode_t = 8192;\n-pub const S_IFBLK: mode_t = 24576;\n-pub const S_IFDIR: mode_t = 16384;\n-pub const S_IFREG: mode_t = 32768;\n-pub const S_IFLNK: mode_t = 40960;\n-pub const S_IFSOCK: mode_t = 49152;\n-pub const S_IFMT: mode_t = 61440;\n-pub const S_IEXEC: mode_t = 64;\n-pub const S_IWRITE: mode_t = 128;\n-pub const S_IREAD: mode_t = 256;\n-pub const S_IRWXU: mode_t = 448;\n-pub const S_IXUSR: mode_t = 64;\n-pub const S_IWUSR: mode_t = 128;\n-pub const S_IRUSR: mode_t = 256;\n-pub const S_IRWXG: mode_t = 56;\n-pub const S_IXGRP: mode_t = 8;\n-pub const S_IWGRP: mode_t = 16;\n-pub const S_IRGRP: mode_t = 32;\n-pub const S_IRWXO: mode_t = 7;\n-pub const S_IXOTH: mode_t = 1;\n-pub const S_IWOTH: mode_t = 2;\n-pub const S_IROTH: mode_t = 4;\n-pub const F_OK: ::c_int = 0;\n-pub const R_OK: ::c_int = 4;\n-pub const W_OK: ::c_int = 2;\n-pub const X_OK: ::c_int = 1;\n-pub const STDIN_FILENO: ::c_int = 0;\n-pub const STDOUT_FILENO: ::c_int = 1;\n-pub const STDERR_FILENO: ::c_int = 2;\n-pub const F_LOCK: ::c_int = 1;\n-pub const F_TEST: ::c_int = 3;\n-pub const F_TLOCK: ::c_int = 2;\n-pub const F_ULOCK: ::c_int = 0;\n-pub const F_GETLK: ::c_int = 7;\n-pub const F_SETLK: ::c_int = 8;\n-pub const F_SETLKW: ::c_int = 9;\n-pub const SIGHUP: ::c_int = 1;\n-pub const SIGINT: ::c_int = 2;\n-pub const SIGQUIT: ::c_int = 3;\n-pub const SIGILL: ::c_int = 4;\n-pub const SIGABRT: ::c_int = 6;\n-pub const SIGEMT: ::c_int = 7;\n-pub const SIGFPE: ::c_int = 8;\n-pub const SIGKILL: ::c_int = 9;\n-pub const SIGSEGV: ::c_int = 11;\n-pub const SIGPIPE: ::c_int = 13;\n-pub const SIGALRM: ::c_int = 14;\n-pub const SIGTERM: ::c_int = 15;\n-\n-pub const PROT_NONE: ::c_int = 0;\n-pub const PROT_READ: ::c_int = 1;\n-pub const PROT_WRITE: ::c_int = 2;\n-pub const PROT_EXEC: ::c_int = 4;\n-\n-pub const MAP_FILE: ::c_int = 0x0000;\n-pub const MAP_SHARED: ::c_int = 0x0001;\n-pub const MAP_PRIVATE: ::c_int = 0x0002;\n-pub const MAP_FIXED: ::c_int = 0x0010;\n-pub const MAP_ANON: ::c_int = 0x1000;\n-\n-pub const MAP_FAILED: *mut ::c_void = !0 as *mut ::c_void;\n-\n-pub const MCL_CURRENT: ::c_int = 0x0001;\n-pub const MCL_FUTURE: ::c_int = 0x0002;\n-\n-pub const MS_ASYNC: ::c_int = 0x0001;\n-pub const MS_INVALIDATE: ::c_int = 0x0002;\n-pub const MS_SYNC: ::c_int = 0x0010;\n-\n-pub const MS_KILLPAGES: ::c_int = 0x0004;\n-pub const MS_DEACTIVATE: ::c_int = 0x0008;\n-\n-pub const EPERM: ::c_int = 1;\n-pub const ENOENT: ::c_int = 2;\n-pub const ESRCH: ::c_int = 3;\n-pub const EINTR: ::c_int = 4;\n-pub const EIO: ::c_int = 5;\n-pub const ENXIO: ::c_int = 6;\n-pub const E2BIG: ::c_int = 7;\n-pub const ENOEXEC: ::c_int = 8;\n-pub const EBADF: ::c_int = 9;\n-pub const ECHILD: ::c_int = 10;\n-pub const EDEADLK: ::c_int = 11;\n-pub const ENOMEM: ::c_int = 12;\n-pub const EACCES: ::c_int = 13;\n-pub const EFAULT: ::c_int = 14;\n-pub const ENOTBLK: ::c_int = 15;\n-pub const EBUSY: ::c_int = 16;\n-pub const EEXIST: ::c_int = 17;\n-pub const EXDEV: ::c_int = 18;\n-pub const ENODEV: ::c_int = 19;\n-pub const ENOTDIR: ::c_int = 20;\n-pub const EISDIR: ::c_int = 21;\n-pub const EINVAL: ::c_int = 22;\n-pub const ENFILE: ::c_int = 23;\n-pub const EMFILE: ::c_int = 24;\n-pub const ENOTTY: ::c_int = 25;\n-pub const ETXTBSY: ::c_int = 26;\n-pub const EFBIG: ::c_int = 27;\n-pub const ENOSPC: ::c_int = 28;\n-pub const ESPIPE: ::c_int = 29;\n-pub const EROFS: ::c_int = 30;\n-pub const EMLINK: ::c_int = 31;\n-pub const EPIPE: ::c_int = 32;\n-pub const EDOM: ::c_int = 33;\n-pub const ERANGE: ::c_int = 34;\n-pub const EAGAIN: ::c_int = 35;\n-pub const EWOULDBLOCK: ::c_int = EAGAIN;\n-pub const EINPROGRESS: ::c_int = 36;\n-pub const EALREADY: ::c_int = 37;\n-pub const ENOTSOCK: ::c_int = 38;\n-pub const EDESTADDRREQ: ::c_int = 39;\n-pub const EMSGSIZE: ::c_int = 40;\n-pub const EPROTOTYPE: ::c_int = 41;\n-pub const ENOPROTOOPT: ::c_int = 42;\n-pub const EPROTONOSUPPORT: ::c_int = 43;\n-pub const ESOCKTNOSUPPORT: ::c_int = 44;\n-pub const ENOTSUP: ::c_int = 45;\n-pub const EPFNOSUPPORT: ::c_int = 46;\n-pub const EAFNOSUPPORT: ::c_int = 47;\n-pub const EADDRINUSE: ::c_int = 48;\n-pub const EADDRNOTAVAIL: ::c_int = 49;\n-pub const ENETDOWN: ::c_int = 50;\n-pub const ENETUNREACH: ::c_int = 51;\n-pub const ENETRESET: ::c_int = 52;\n-pub const ECONNABORTED: ::c_int = 53;\n-pub const ECONNRESET: ::c_int = 54;\n-pub const ENOBUFS: ::c_int = 55;\n-pub const EISCONN: ::c_int = 56;\n-pub const ENOTCONN: ::c_int = 57;\n-pub const ESHUTDOWN: ::c_int = 58;\n-pub const ETOOMANYREFS: ::c_int = 59;\n-pub const ETIMEDOUT: ::c_int = 60;\n-pub const ECONNREFUSED: ::c_int = 61;\n-pub const ELOOP: ::c_int = 62;\n-pub const ENAMETOOLONG: ::c_int = 63;\n-pub const EHOSTDOWN: ::c_int = 64;\n-pub const EHOSTUNREACH: ::c_int = 65;\n-pub const ENOTEMPTY: ::c_int = 66;\n-pub const EPROCLIM: ::c_int = 67;\n-pub const EUSERS: ::c_int = 68;\n-pub const EDQUOT: ::c_int = 69;\n-pub const ESTALE: ::c_int = 70;\n-pub const EREMOTE: ::c_int = 71;\n-pub const EBADRPC: ::c_int = 72;\n-pub const ERPCMISMATCH: ::c_int = 73;\n-pub const EPROGUNAVAIL: ::c_int = 74;\n-pub const EPROGMISMATCH: ::c_int = 75;\n-pub const EPROCUNAVAIL: ::c_int = 76;\n-pub const ENOLCK: ::c_int = 77;\n-pub const ENOSYS: ::c_int = 78;\n-pub const EFTYPE: ::c_int = 79;\n-pub const EAUTH: ::c_int = 80;\n-pub const ENEEDAUTH: ::c_int = 81;\n-pub const EPWROFF: ::c_int = 82;\n-pub const EDEVERR: ::c_int = 83;\n-pub const EOVERFLOW: ::c_int = 84;\n-pub const EBADEXEC: ::c_int = 85;\n-pub const EBADARCH: ::c_int = 86;\n-pub const ESHLIBVERS: ::c_int = 87;\n-pub const EBADMACHO: ::c_int = 88;\n-pub const ECANCELED: ::c_int = 89;\n-pub const EIDRM: ::c_int = 90;\n-pub const ENOMSG: ::c_int = 91;\n-pub const EILSEQ: ::c_int = 92;\n-pub const ENOATTR: ::c_int = 93;\n-pub const EBADMSG: ::c_int = 94;\n-pub const EMULTIHOP: ::c_int = 95;\n-pub const ENODATA: ::c_int = 96;\n-pub const ENOLINK: ::c_int = 97;\n-pub const ENOSR: ::c_int = 98;\n-pub const ENOSTR: ::c_int = 99;\n-pub const EPROTO: ::c_int = 100;\n-pub const ETIME: ::c_int = 101;\n-pub const EOPNOTSUPP: ::c_int = 102;\n-pub const ENOPOLICY: ::c_int = 103;\n-pub const ENOTRECOVERABLE: ::c_int = 104;\n-pub const EOWNERDEAD: ::c_int = 105;\n-pub const EQFULL: ::c_int = 106;\n-pub const ELAST: ::c_int = 106;\n-\n-pub const EAI_SYSTEM: ::c_int = 11;\n-\n-pub const F_DUPFD: ::c_int = 0;\n-pub const F_DUPFD_CLOEXEC: ::c_int = 67;\n-pub const F_GETFD: ::c_int = 1;\n-pub const F_SETFD: ::c_int = 2;\n-pub const F_GETFL: ::c_int = 3;\n-pub const F_SETFL: ::c_int = 4;\n-pub const F_PREALLOCATE: ::c_int = 42;\n-pub const F_RDADVISE: ::c_int = 44;\n-pub const F_RDAHEAD: ::c_int = 45;\n-pub const F_NOCACHE: ::c_int = 48;\n-pub const F_GETPATH: ::c_int = 50;\n-pub const F_FULLFSYNC: ::c_int = 51;\n-pub const F_FREEZE_FS: ::c_int = 53;\n-pub const F_THAW_FS: ::c_int = 54;\n-pub const F_GLOBAL_NOCACHE: ::c_int = 55;\n-pub const F_NODIRECT: ::c_int = 62;\n-\n-pub const F_ALLOCATECONTIG: ::c_uint = 0x02;\n-pub const F_ALLOCATEALL: ::c_uint = 0x04;\n-\n-pub const F_PEOFPOSMODE: ::c_int = 3;\n-pub const F_VOLPOSMODE: ::c_int = 4;\n-\n-pub const O_ACCMODE: ::c_int = 3;\n-\n-pub const TIOCMODG: ::c_ulong = 0x40047403;\n-pub const TIOCMODS: ::c_ulong = 0x80047404;\n-pub const TIOCM_LE: ::c_int = 0x1;\n-pub const TIOCM_DTR: ::c_int = 0x2;\n-pub const TIOCM_RTS: ::c_int = 0x4;\n-pub const TIOCM_ST: ::c_int = 0x8;\n-pub const TIOCM_SR: ::c_int = 0x10;\n-pub const TIOCM_CTS: ::c_int = 0x20;\n-pub const TIOCM_CAR: ::c_int = 0x40;\n-pub const TIOCM_CD: ::c_int = 0x40;\n-pub const TIOCM_RNG: ::c_int = 0x80;\n-pub const TIOCM_RI: ::c_int = 0x80;\n-pub const TIOCM_DSR: ::c_int = 0x100;\n-pub const TIOCEXCL: ::c_int = 0x2000740d;\n-pub const TIOCNXCL: ::c_int = 0x2000740e;\n-pub const TIOCFLUSH: ::c_ulong = 0x80047410;\n-pub const TIOCGETD: ::c_ulong = 0x4004741a;\n-pub const TIOCSETD: ::c_ulong = 0x8004741b;\n-pub const TIOCIXON: ::c_uint = 0x20007481;\n-pub const TIOCIXOFF: ::c_uint = 0x20007480;\n-pub const TIOCSBRK: ::c_uint = 0x2000747b;\n-pub const TIOCCBRK: ::c_uint = 0x2000747a;\n-pub const TIOCSDTR: ::c_uint = 0x20007479;\n-pub const TIOCCDTR: ::c_uint = 0x20007478;\n-pub const TIOCGPGRP: ::c_ulong = 0x40047477;\n-pub const TIOCSPGRP: ::c_ulong = 0x80047476;\n-pub const TIOCOUTQ: ::c_ulong = 0x40047473;\n-pub const TIOCSTI: ::c_ulong = 0x80017472;\n-pub const TIOCNOTTY: ::c_uint = 0x20007471;\n-pub const TIOCPKT: ::c_ulong = 0x80047470;\n-pub const TIOCPKT_DATA: ::c_int = 0x0;\n-pub const TIOCPKT_FLUSHREAD: ::c_int = 0x1;\n-pub const TIOCPKT_FLUSHWRITE: ::c_int = 0x2;\n-pub const TIOCPKT_STOP: ::c_int = 0x4;\n-pub const TIOCPKT_START: ::c_int = 0x8;\n-pub const TIOCPKT_NOSTOP: ::c_int = 0x10;\n-pub const TIOCPKT_DOSTOP: ::c_int = 0x20;\n-pub const TIOCPKT_IOCTL: ::c_int = 0x40;\n-pub const TIOCSTOP: ::c_uint = 0x2000746f;\n-pub const TIOCSTART: ::c_uint = 0x2000746e;\n-pub const TIOCMSET: ::c_ulong = 0x8004746d;\n-pub const TIOCMBIS: ::c_ulong = 0x8004746c;\n-pub const TIOCMBIC: ::c_ulong = 0x8004746b;\n-pub const TIOCMGET: ::c_ulong = 0x4004746a;\n-pub const TIOCREMOTE: ::c_ulong = 0x80047469;\n-pub const TIOCGWINSZ: ::c_ulong = 0x40087468;\n-pub const TIOCSWINSZ: ::c_ulong = 0x80087467;\n-pub const TIOCUCNTL: ::c_ulong = 0x80047466;\n-pub const TIOCSTAT: ::c_uint = 0x20007465;\n-pub const TIOCSCONS: ::c_uint = 0x20007463;\n-pub const TIOCCONS: ::c_ulong = 0x80047462;\n-pub const TIOCSCTTY: ::c_uint = 0x20007461;\n-pub const TIOCEXT: ::c_ulong = 0x80047460;\n-pub const TIOCSIG: ::c_uint = 0x2000745f;\n-pub const TIOCDRAIN: ::c_uint = 0x2000745e;\n-pub const TIOCMSDTRWAIT: ::c_ulong = 0x8004745b;\n-pub const TIOCMGDTRWAIT: ::c_ulong = 0x4004745a;\n-pub const TIOCSDRAINWAIT: ::c_ulong = 0x80047457;\n-pub const TIOCGDRAINWAIT: ::c_ulong = 0x40047456;\n-pub const TIOCDSIMICROCODE: ::c_uint = 0x20007455;\n-pub const TIOCPTYGRANT: ::c_uint = 0x20007454;\n-pub const TIOCPTYGNAME: ::c_uint = 0x40807453;\n-pub const TIOCPTYUNLK: ::c_uint = 0x20007452;\n-\n-pub const SIGTRAP: ::c_int = 5;\n-\n-pub const GLOB_APPEND  : ::c_int = 0x0001;\n-pub const GLOB_DOOFFS  : ::c_int = 0x0002;\n-pub const GLOB_ERR     : ::c_int = 0x0004;\n-pub const GLOB_MARK    : ::c_int = 0x0008;\n-pub const GLOB_NOCHECK : ::c_int = 0x0010;\n-pub const GLOB_NOSORT  : ::c_int = 0x0020;\n-pub const GLOB_NOESCAPE: ::c_int = 0x2000;\n-\n-pub const GLOB_NOSPACE : ::c_int = -1;\n-pub const GLOB_ABORTED : ::c_int = -2;\n-pub const GLOB_NOMATCH : ::c_int = -3;\n-\n-pub const POSIX_MADV_NORMAL: ::c_int = 0;\n-pub const POSIX_MADV_RANDOM: ::c_int = 1;\n-pub const POSIX_MADV_SEQUENTIAL: ::c_int = 2;\n-pub const POSIX_MADV_WILLNEED: ::c_int = 3;\n-pub const POSIX_MADV_DONTNEED: ::c_int = 4;\n-\n-pub const _SC_IOV_MAX: ::c_int = 56;\n-pub const _SC_GETGR_R_SIZE_MAX: ::c_int = 70;\n-pub const _SC_GETPW_R_SIZE_MAX: ::c_int = 71;\n-pub const _SC_LOGIN_NAME_MAX: ::c_int = 73;\n-pub const _SC_MQ_PRIO_MAX: ::c_int = 75;\n-pub const _SC_THREAD_ATTR_STACKADDR: ::c_int = 82;\n-pub const _SC_THREAD_ATTR_STACKSIZE: ::c_int = 83;\n-pub const _SC_THREAD_DESTRUCTOR_ITERATIONS: ::c_int = 85;\n-pub const _SC_THREAD_KEYS_MAX: ::c_int = 86;\n-pub const _SC_THREAD_PRIO_INHERIT: ::c_int = 87;\n-pub const _SC_THREAD_PRIO_PROTECT: ::c_int = 88;\n-pub const _SC_THREAD_PRIORITY_SCHEDULING: ::c_int = 89;\n-pub const _SC_THREAD_PROCESS_SHARED: ::c_int = 90;\n-pub const _SC_THREAD_SAFE_FUNCTIONS: ::c_int = 91;\n-pub const _SC_THREAD_STACK_MIN: ::c_int = 93;\n-pub const _SC_THREAD_THREADS_MAX: ::c_int = 94;\n-pub const _SC_THREADS: ::c_int = 96;\n-pub const _SC_TTY_NAME_MAX: ::c_int = 101;\n-pub const _SC_ATEXIT_MAX: ::c_int = 107;\n-pub const _SC_XOPEN_CRYPT: ::c_int = 108;\n-pub const _SC_XOPEN_ENH_I18N: ::c_int = 109;\n-pub const _SC_XOPEN_LEGACY: ::c_int = 110;\n-pub const _SC_XOPEN_REALTIME: ::c_int = 111;\n-pub const _SC_XOPEN_REALTIME_THREADS: ::c_int = 112;\n-pub const _SC_XOPEN_SHM: ::c_int = 113;\n-pub const _SC_XOPEN_UNIX: ::c_int = 115;\n-pub const _SC_XOPEN_VERSION: ::c_int = 116;\n-pub const _SC_XOPEN_XCU_VERSION: ::c_int = 121;\n-\n-pub const PTHREAD_CREATE_JOINABLE: ::c_int = 1;\n-pub const PTHREAD_CREATE_DETACHED: ::c_int = 2;\n-pub const PTHREAD_STACK_MIN: ::size_t = 8192;\n-\n-pub const RLIMIT_CPU: ::c_int = 0;\n-pub const RLIMIT_FSIZE: ::c_int = 1;\n-pub const RLIMIT_DATA: ::c_int = 2;\n-pub const RLIMIT_STACK: ::c_int = 3;\n-pub const RLIMIT_CORE: ::c_int = 4;\n-pub const RLIMIT_AS: ::c_int = 5;\n-pub const RLIMIT_RSS: ::c_int = RLIMIT_AS;\n-pub const RLIMIT_MEMLOCK: ::c_int = 6;\n-pub const RLIMIT_NPROC: ::c_int = 7;\n-pub const RLIMIT_NOFILE: ::c_int = 8;\n-pub const RLIM_NLIMITS: ::c_int = 9;\n-pub const _RLIMIT_POSIX_FLAG: ::c_int = 0x1000;\n-\n-pub const RLIM_INFINITY: rlim_t = 0x7fff_ffff_ffff_ffff;\n-\n-pub const RUSAGE_SELF: ::c_int = 0;\n-pub const RUSAGE_CHILDREN: ::c_int = -1;\n-\n-pub const MADV_NORMAL: ::c_int = 0;\n-pub const MADV_RANDOM: ::c_int = 1;\n-pub const MADV_SEQUENTIAL: ::c_int = 2;\n-pub const MADV_WILLNEED: ::c_int = 3;\n-pub const MADV_DONTNEED: ::c_int = 4;\n-pub const MADV_FREE: ::c_int = 5;\n-pub const MADV_ZERO_WIRED_PAGES: ::c_int = 6;\n-pub const MADV_FREE_REUSABLE: ::c_int = 7;\n-pub const MADV_FREE_REUSE: ::c_int = 8;\n-pub const MADV_CAN_REUSE: ::c_int = 9;\n-\n-pub const MINCORE_INCORE: ::c_int =  0x1;\n-pub const MINCORE_REFERENCED: ::c_int = 0x2;\n-pub const MINCORE_MODIFIED: ::c_int = 0x4;\n-pub const MINCORE_REFERENCED_OTHER: ::c_int = 0x8;\n-pub const MINCORE_MODIFIED_OTHER: ::c_int = 0x10;\n-\n-pub const AF_UNIX: ::c_int = 1;\n-pub const AF_INET: ::c_int = 2;\n-pub const AF_INET6: ::c_int = 30;\n-pub const SOCK_STREAM: ::c_int = 1;\n-pub const SOCK_DGRAM: ::c_int = 2;\n-pub const SOCK_RAW: ::c_int = 3;\n-pub const SOCK_SEQPACKET: ::c_int = 5;\n-pub const IPPROTO_TCP: ::c_int = 6;\n-pub const IPPROTO_IP: ::c_int = 0;\n-pub const IPPROTO_IPV6: ::c_int = 41;\n-pub const IP_MULTICAST_TTL: ::c_int = 10;\n-pub const IP_MULTICAST_LOOP: ::c_int = 11;\n-pub const IP_TTL: ::c_int = 4;\n-pub const IP_HDRINCL: ::c_int = 2;\n-pub const IP_ADD_MEMBERSHIP: ::c_int = 12;\n-pub const IP_DROP_MEMBERSHIP: ::c_int = 13;\n-pub const IPV6_JOIN_GROUP: ::c_int = 12;\n-pub const IPV6_LEAVE_GROUP: ::c_int = 13;\n-\n-pub const TCP_NODELAY: ::c_int = 0x01;\n-pub const TCP_KEEPALIVE: ::c_int = 0x10;\n-pub const SOL_SOCKET: ::c_int = 0xffff;\n-\n-pub const SO_DEBUG: ::c_int = 0x01;\n-pub const SO_ACCEPTCONN: ::c_int = 0x0002;\n-pub const SO_REUSEADDR: ::c_int = 0x0004;\n-pub const SO_KEEPALIVE: ::c_int = 0x0008;\n-pub const SO_DONTROUTE: ::c_int = 0x0010;\n-pub const SO_BROADCAST: ::c_int = 0x0020;\n-pub const SO_USELOOPBACK: ::c_int = 0x0040;\n-pub const SO_LINGER: ::c_int = 0x0080;\n-pub const SO_OOBINLINE: ::c_int = 0x0100;\n-pub const SO_REUSEPORT: ::c_int = 0x0200;\n-pub const SO_SNDBUF: ::c_int = 0x1001;\n-pub const SO_RCVBUF: ::c_int = 0x1002;\n-pub const SO_SNDLOWAT: ::c_int = 0x1003;\n-pub const SO_RCVLOWAT: ::c_int = 0x1004;\n-pub const SO_SNDTIMEO: ::c_int = 0x1005;\n-pub const SO_RCVTIMEO: ::c_int = 0x1006;\n-pub const SO_ERROR: ::c_int = 0x1007;\n-pub const SO_TYPE: ::c_int = 0x1008;\n-\n-pub const IFF_LOOPBACK: ::c_int = 0x8;\n-\n-pub const SHUT_RD: ::c_int = 0;\n-pub const SHUT_WR: ::c_int = 1;\n-pub const SHUT_RDWR: ::c_int = 2;\n-\n-pub const LOCK_SH: ::c_int = 1;\n-pub const LOCK_EX: ::c_int = 2;\n-pub const LOCK_NB: ::c_int = 4;\n-pub const LOCK_UN: ::c_int = 8;\n-\n-pub const O_DSYNC: ::c_int = 4194304;\n-pub const O_SYNC: ::c_int = 128;\n-pub const O_NONBLOCK: ::c_int = 4;\n-\n-pub const MAP_COPY: ::c_int = 0x0002;\n-pub const MAP_RENAME: ::c_int = 0x0020;\n-pub const MAP_NORESERVE: ::c_int = 0x0040;\n-pub const MAP_NOEXTEND: ::c_int = 0x0100;\n-pub const MAP_HASSEMAPHORE: ::c_int = 0x0200;\n-pub const MAP_NOCACHE: ::c_int = 0x0400;\n-pub const MAP_JIT: ::c_int = 0x0800;\n-\n-pub const IPPROTO_RAW: ::c_int = 255;\n-\n-pub const SO_NREAD: ::c_int = 0x1020;\n-pub const SO_NKE: ::c_int = 0x1021;\n-pub const SO_NOSIGPIPE: ::c_int = 0x1022;\n-pub const SO_NOADDRERR: ::c_int = 0x1023;\n-pub const SO_NWRITE: ::c_int = 0x1024;\n-pub const SO_DONTTRUNC: ::c_int = 0x2000;\n-pub const SO_WANTMORE: ::c_int = 0x4000;\n-pub const SO_WANTOOBFLAG: ::c_int = 0x8000;\n-\n-pub const _SC_ARG_MAX: ::c_int = 1;\n-pub const _SC_CHILD_MAX: ::c_int = 2;\n-pub const _SC_CLK_TCK: ::c_int = 3;\n-pub const _SC_NGROUPS_MAX: ::c_int = 4;\n-pub const _SC_OPEN_MAX: ::c_int = 5;\n-pub const _SC_JOB_CONTROL: ::c_int = 6;\n-pub const _SC_SAVED_IDS: ::c_int = 7;\n-pub const _SC_VERSION: ::c_int = 8;\n-pub const _SC_BC_BASE_MAX: ::c_int = 9;\n-pub const _SC_BC_DIM_MAX: ::c_int = 10;\n-pub const _SC_BC_SCALE_MAX: ::c_int = 11;\n-pub const _SC_BC_STRING_MAX: ::c_int = 12;\n-pub const _SC_COLL_WEIGHTS_MAX: ::c_int = 13;\n-pub const _SC_EXPR_NEST_MAX: ::c_int = 14;\n-pub const _SC_LINE_MAX: ::c_int = 15;\n-pub const _SC_RE_DUP_MAX: ::c_int = 16;\n-pub const _SC_2_VERSION: ::c_int = 17;\n-pub const _SC_2_C_BIND: ::c_int = 18;\n-pub const _SC_2_C_DEV: ::c_int = 19;\n-pub const _SC_2_CHAR_TERM: ::c_int = 20;\n-pub const _SC_2_FORT_DEV: ::c_int = 21;\n-pub const _SC_2_FORT_RUN: ::c_int = 22;\n-pub const _SC_2_LOCALEDEF: ::c_int = 23;\n-pub const _SC_2_SW_DEV: ::c_int = 24;\n-pub const _SC_2_UPE: ::c_int = 25;\n-pub const _SC_STREAM_MAX: ::c_int = 26;\n-pub const _SC_TZNAME_MAX: ::c_int = 27;\n-pub const _SC_ASYNCHRONOUS_IO: ::c_int = 28;\n-pub const _SC_PAGESIZE: ::c_int = 29;\n-pub const _SC_MEMLOCK: ::c_int = 30;\n-pub const _SC_MEMLOCK_RANGE: ::c_int = 31;\n-pub const _SC_MEMORY_PROTECTION: ::c_int = 32;\n-pub const _SC_MESSAGE_PASSING: ::c_int = 33;\n-pub const _SC_PRIORITIZED_IO: ::c_int = 34;\n-pub const _SC_PRIORITY_SCHEDULING: ::c_int = 35;\n-pub const _SC_REALTIME_SIGNALS: ::c_int = 36;\n-pub const _SC_SEMAPHORES: ::c_int = 37;\n-pub const _SC_FSYNC: ::c_int = 38;\n-pub const _SC_SHARED_MEMORY_OBJECTS: ::c_int = 39;\n-pub const _SC_SYNCHRONIZED_IO: ::c_int = 40;\n-pub const _SC_TIMERS: ::c_int = 41;\n-pub const _SC_AIO_LISTIO_MAX: ::c_int = 42;\n-pub const _SC_AIO_MAX: ::c_int = 43;\n-pub const _SC_AIO_PRIO_DELTA_MAX: ::c_int = 44;\n-pub const _SC_DELAYTIMER_MAX: ::c_int = 45;\n-pub const _SC_MQ_OPEN_MAX: ::c_int = 46;\n-pub const _SC_MAPPED_FILES: ::c_int = 47;\n-pub const _SC_RTSIG_MAX: ::c_int = 48;\n-pub const _SC_SEM_NSEMS_MAX: ::c_int = 49;\n-pub const _SC_SEM_VALUE_MAX: ::c_int = 50;\n-pub const _SC_SIGQUEUE_MAX: ::c_int = 51;\n-pub const _SC_TIMER_MAX: ::c_int = 52;\n-pub const _SC_NPROCESSORS_CONF: ::c_int = 57;\n-pub const _SC_NPROCESSORS_ONLN: ::c_int = 58;\n-pub const _SC_2_PBS: ::c_int = 59;\n-pub const _SC_2_PBS_ACCOUNTING: ::c_int = 60;\n-pub const _SC_2_PBS_CHECKPOINT: ::c_int = 61;\n-pub const _SC_2_PBS_LOCATE: ::c_int = 62;\n-pub const _SC_2_PBS_MESSAGE: ::c_int = 63;\n-pub const _SC_2_PBS_TRACK: ::c_int = 64;\n-pub const _SC_ADVISORY_INFO: ::c_int = 65;\n-pub const _SC_BARRIERS: ::c_int = 66;\n-pub const _SC_CLOCK_SELECTION: ::c_int = 67;\n-pub const _SC_CPUTIME: ::c_int = 68;\n-pub const _SC_FILE_LOCKING: ::c_int = 69;\n-pub const _SC_HOST_NAME_MAX: ::c_int = 72;\n-pub const _SC_MONOTONIC_CLOCK: ::c_int = 74;\n-pub const _SC_READER_WRITER_LOCKS: ::c_int = 76;\n-pub const _SC_REGEXP: ::c_int = 77;\n-pub const _SC_SHELL: ::c_int = 78;\n-pub const _SC_SPAWN: ::c_int = 79;\n-pub const _SC_SPIN_LOCKS: ::c_int = 80;\n-pub const _SC_SPORADIC_SERVER: ::c_int = 81;\n-pub const _SC_THREAD_CPUTIME: ::c_int = 84;\n-pub const _SC_THREAD_SPORADIC_SERVER: ::c_int = 92;\n-pub const _SC_TIMEOUTS: ::c_int = 95;\n-pub const _SC_TRACE: ::c_int = 97;\n-pub const _SC_TRACE_EVENT_FILTER: ::c_int = 98;\n-pub const _SC_TRACE_INHERIT: ::c_int = 99;\n-pub const _SC_TRACE_LOG: ::c_int = 100;\n-pub const _SC_TYPED_MEMORY_OBJECTS: ::c_int = 102;\n-pub const _SC_V6_ILP32_OFF32: ::c_int = 103;\n-pub const _SC_V6_ILP32_OFFBIG: ::c_int = 104;\n-pub const _SC_V6_LP64_OFF64: ::c_int = 105;\n-pub const _SC_V6_LPBIG_OFFBIG: ::c_int = 106;\n-pub const _SC_IPV6: ::c_int = 118;\n-pub const _SC_RAW_SOCKETS: ::c_int = 119;\n-pub const _SC_SYMLOOP_MAX: ::c_int = 120;\n-pub const _SC_PAGE_SIZE: ::c_int = _SC_PAGESIZE;\n-pub const _SC_XOPEN_STREAMS: ::c_int = 114;\n-pub const _SC_XBS5_ILP32_OFF32: ::c_int = 122;\n-pub const _SC_XBS5_ILP32_OFFBIG: ::c_int = 123;\n-pub const _SC_XBS5_LP64_OFF64: ::c_int = 124;\n-pub const _SC_XBS5_LPBIG_OFFBIG: ::c_int = 125;\n-pub const _SC_SS_REPL_MAX: ::c_int = 126;\n-pub const _SC_TRACE_EVENT_NAME_MAX: ::c_int = 127;\n-pub const _SC_TRACE_NAME_MAX: ::c_int = 128;\n-pub const _SC_TRACE_SYS_MAX: ::c_int = 129;\n-pub const _SC_TRACE_USER_EVENT_MAX: ::c_int = 130;\n-pub const _SC_PASS_MAX: ::c_int = 131;\n-\n-pub const PTHREAD_MUTEX_NORMAL: ::c_int = 0;\n-pub const PTHREAD_MUTEX_ERRORCHECK: ::c_int = 1;\n-pub const PTHREAD_MUTEX_RECURSIVE: ::c_int = 2;\n-pub const PTHREAD_MUTEX_DEFAULT: ::c_int = PTHREAD_MUTEX_NORMAL;\n-pub const _PTHREAD_MUTEX_SIG_init: ::c_long = 0x32AAABA7;\n-pub const _PTHREAD_COND_SIG_init: ::c_long = 0x3CB0B1BB;\n-pub const _PTHREAD_RWLOCK_SIG_init: ::c_long = 0x2DA8B3B4;\n-pub const PTHREAD_MUTEX_INITIALIZER: pthread_mutex_t = pthread_mutex_t {\n-    __sig: _PTHREAD_MUTEX_SIG_init,\n-    __opaque: [0; __PTHREAD_MUTEX_SIZE__],\n-};\n-pub const PTHREAD_COND_INITIALIZER: pthread_cond_t = pthread_cond_t {\n-    __sig: _PTHREAD_COND_SIG_init,\n-    __opaque: [0; __PTHREAD_COND_SIZE__],\n-};\n-pub const PTHREAD_RWLOCK_INITIALIZER: pthread_rwlock_t = pthread_rwlock_t {\n-    __sig: _PTHREAD_RWLOCK_SIG_init,\n-    __opaque: [0; __PTHREAD_RWLOCK_SIZE__],\n-};\n-\n-pub const SIGSTKSZ: ::size_t = 131072;\n-\n-pub const FD_SETSIZE: usize = 1024;\n-\n-pub const ST_NOSUID: ::c_ulong = 2;\n-\n-pub const EVFILT_READ: ::int16_t = -1;\n-pub const EVFILT_WRITE: ::int16_t = -2;\n-pub const EVFILT_AIO: ::int16_t = -3;\n-pub const EVFILT_VNODE: ::int16_t = -4;\n-pub const EVFILT_PROC: ::int16_t = -5;\n-pub const EVFILT_SIGNAL: ::int16_t = -6;\n-pub const EVFILT_TIMER: ::int16_t = -7;\n-pub const EVFILT_MACHPORT: ::int16_t = -8;\n-pub const EVFILT_FS: ::int16_t = -9;\n-pub const EVFILT_USER: ::int16_t = -10;\n-pub const EVFILT_VM: ::int16_t = -12;\n-\n-pub const EV_ADD: ::uint16_t = 0x1;\n-pub const EV_DELETE: ::uint16_t = 0x2;\n-pub const EV_ENABLE: ::uint16_t = 0x4;\n-pub const EV_DISABLE: ::uint16_t = 0x8;\n-pub const EV_ONESHOT: ::uint16_t = 0x10;\n-pub const EV_CLEAR: ::uint16_t = 0x20;\n-pub const EV_RECEIPT: ::uint16_t = 0x40;\n-pub const EV_DISPATCH: ::uint16_t = 0x80;\n-pub const EV_FLAG0: ::uint16_t = 0x1000;\n-pub const EV_POLL: ::uint16_t = 0x1000;\n-pub const EV_FLAG1: ::uint16_t = 0x2000;\n-pub const EV_OOBAND: ::uint16_t = 0x2000;\n-pub const EV_ERROR: ::uint16_t = 0x4000;\n-pub const EV_EOF: ::uint16_t = 0x8000;\n-pub const EV_SYSFLAGS: ::uint16_t = 0xf000;\n-\n-pub const NOTE_TRIGGER: ::uint32_t = 0x01000000;\n-pub const NOTE_FFNOP: ::uint32_t = 0x00000000;\n-pub const NOTE_FFAND: ::uint32_t = 0x40000000;\n-pub const NOTE_FFOR: ::uint32_t = 0x80000000;\n-pub const NOTE_FFCOPY: ::uint32_t = 0xc0000000;\n-pub const NOTE_FFCTRLMASK: ::uint32_t = 0xc0000000;\n-pub const NOTE_FFLAGSMASK: ::uint32_t = 0x00ffffff;\n-pub const NOTE_LOWAT: ::uint32_t = 0x00000001;\n-pub const NOTE_DELETE: ::uint32_t = 0x00000001;\n-pub const NOTE_WRITE: ::uint32_t = 0x00000002;\n-pub const NOTE_EXTEND: ::uint32_t = 0x00000004;\n-pub const NOTE_ATTRIB: ::uint32_t = 0x00000008;\n-pub const NOTE_LINK: ::uint32_t = 0x00000010;\n-pub const NOTE_RENAME: ::uint32_t = 0x00000020;\n-pub const NOTE_REVOKE: ::uint32_t = 0x00000040;\n-pub const NOTE_NONE: ::uint32_t = 0x00000080;\n-pub const NOTE_EXIT: ::uint32_t = 0x80000000;\n-pub const NOTE_FORK: ::uint32_t = 0x40000000;\n-pub const NOTE_EXEC: ::uint32_t = 0x20000000;\n-pub const NOTE_REAP: ::uint32_t = 0x10000000;\n-pub const NOTE_SIGNAL: ::uint32_t = 0x08000000;\n-pub const NOTE_EXITSTATUS: ::uint32_t = 0x04000000;\n-pub const NOTE_EXIT_DETAIL: ::uint32_t = 0x02000000;\n-pub const NOTE_PDATAMASK: ::uint32_t = 0x000fffff;\n-pub const NOTE_PCTRLMASK: ::uint32_t = 0xfff00000;\n-pub const NOTE_EXIT_REPARENTED: ::uint32_t = 0x00080000;\n-pub const NOTE_EXIT_DETAIL_MASK: ::uint32_t = 0x00070000;\n-pub const NOTE_EXIT_DECRYPTFAIL: ::uint32_t = 0x00010000;\n-pub const NOTE_EXIT_MEMORY: ::uint32_t = 0x00020000;\n-pub const NOTE_EXIT_CSERROR: ::uint32_t = 0x00040000;\n-pub const NOTE_VM_PRESSURE: ::uint32_t = 0x80000000;\n-pub const NOTE_VM_PRESSURE_TERMINATE: ::uint32_t = 0x40000000;\n-pub const NOTE_VM_PRESSURE_SUDDEN_TERMINATE: ::uint32_t = 0x20000000;\n-pub const NOTE_VM_ERROR: ::uint32_t = 0x10000000;\n-pub const NOTE_SECONDS: ::uint32_t = 0x00000001;\n-pub const NOTE_USECONDS: ::uint32_t = 0x00000002;\n-pub const NOTE_NSECONDS: ::uint32_t = 0x00000004;\n-pub const NOTE_ABSOLUTE: ::uint32_t = 0x00000008;\n-pub const NOTE_LEEWAY: ::uint32_t = 0x00000010;\n-pub const NOTE_CRITICAL: ::uint32_t = 0x00000020;\n-pub const NOTE_BACKGROUND: ::uint32_t = 0x00000040;\n-pub const NOTE_TRACK: ::uint32_t = 0x00000001;\n-pub const NOTE_TRACKERR: ::uint32_t = 0x00000002;\n-pub const NOTE_CHILD: ::uint32_t = 0x00000004;\n-\n-pub const NL0: ::c_int  = 0x00000000;\n-pub const NL1: ::c_int  = 0x00000100;\n-pub const TAB0: ::c_int = 0x00000000;\n-pub const TAB1: ::c_int = 0x00000400;\n-pub const TAB2: ::c_int = 0x00000800;\n-pub const CR0: ::c_int  = 0x00000000;\n-pub const CR1: ::c_int  = 0x00001000;\n-pub const CR2: ::c_int  = 0x00002000;\n-pub const CR3: ::c_int  = 0x00003000;\n-pub const FF0: ::c_int  = 0x00000000;\n-pub const FF1: ::c_int  = 0x00004000;\n-pub const BS0: ::c_int  = 0x00000000;\n-pub const BS1: ::c_int  = 0x00008000;\n-pub const TAB3: ::c_int = 0x00000004;\n-pub const VT0: ::c_int  = 0x00000000;\n-pub const VT1: ::c_int  = 0x00010000;\n-pub const IUTF8: ::tcflag_t = 0x00004000;\n-pub const CRTSCTS: ::tcflag_t = 0x00030000;\n-\n-pub const NI_MAXHOST: ::socklen_t = 1025;\n-\n-pub const Q_GETQUOTA: ::c_int = 0x300;\n-pub const Q_SETQUOTA: ::c_int = 0x400;\n-\n-pub const RTLD_LOCAL: ::c_int = 0x4;\n-pub const RTLD_FIRST: ::c_int = 0x100;\n-pub const RTLD_NODELETE: ::c_int = 0x80;\n-pub const RTLD_NOLOAD: ::c_int = 0x10;\n-pub const RTLD_GLOBAL: ::c_int = 0x8;\n-\n-pub const _WSTOPPED: ::c_int = 0o177;\n-\n-pub const LOG_NETINFO: ::c_int = 12 << 3;\n-pub const LOG_REMOTEAUTH: ::c_int = 13 << 3;\n-pub const LOG_INSTALL: ::c_int = 14 << 3;\n-pub const LOG_RAS: ::c_int = 15 << 3;\n-pub const LOG_LAUNCHD: ::c_int = 24 << 3;\n-pub const LOG_NFACILITIES: ::c_int = 25;\n-\n-pub const CTLTYPE: ::c_int = 0xf;\n-pub const CTLTYPE_NODE: ::c_int = 1;\n-pub const CTLTYPE_INT: ::c_int = 2;\n-pub const CTLTYPE_STRING: ::c_int = 3;\n-pub const CTLTYPE_QUAD: ::c_int = 4;\n-pub const CTLTYPE_OPAQUE: ::c_int = 5;\n-pub const CTLTYPE_STRUCT: ::c_int = CTLTYPE_OPAQUE;\n-pub const CTLFLAG_RD: ::c_int = 0x80000000;\n-pub const CTLFLAG_WR: ::c_int = 0x40000000;\n-pub const CTLFLAG_RW: ::c_int = CTLFLAG_RD | CTLFLAG_WR;\n-pub const CTLFLAG_NOLOCK: ::c_int = 0x20000000;\n-pub const CTLFLAG_ANYBODY: ::c_int = 0x10000000;\n-pub const CTLFLAG_SECURE: ::c_int = 0x08000000;\n-pub const CTLFLAG_MASKED: ::c_int = 0x04000000;\n-pub const CTLFLAG_NOAUTO: ::c_int = 0x02000000;\n-pub const CTLFLAG_KERN: ::c_int = 0x01000000;\n-pub const CTLFLAG_LOCKED: ::c_int = 0x00800000;\n-pub const CTLFLAG_OID2: ::c_int = 0x00400000;\n-pub const CTL_UNSPEC: ::c_int = 0;\n-pub const CTL_KERN: ::c_int = 1;\n-pub const CTL_VM: ::c_int = 2;\n-pub const CTL_VFS: ::c_int = 3;\n-pub const CTL_NET: ::c_int = 4;\n-pub const CTL_DEBUG: ::c_int = 5;\n-pub const CTL_HW: ::c_int = 6;\n-pub const CTL_MACHDEP: ::c_int = 7;\n-pub const CTL_USER: ::c_int = 8;\n-pub const CTL_MAXID: ::c_int = 9;\n-pub const KERN_OSTYPE: ::c_int = 1;\n-pub const KERN_OSRELEASE: ::c_int = 2;\n-pub const KERN_OSREV: ::c_int = 3;\n-pub const KERN_VERSION: ::c_int = 4;\n-pub const KERN_MAXVNODES: ::c_int = 5;\n-pub const KERN_MAXPROC: ::c_int = 6;\n-pub const KERN_MAXFILES: ::c_int = 7;\n-pub const KERN_ARGMAX: ::c_int = 8;\n-pub const KERN_SECURELVL: ::c_int = 9;\n-pub const KERN_HOSTNAME: ::c_int = 10;\n-pub const KERN_HOSTID: ::c_int = 11;\n-pub const KERN_CLOCKRATE: ::c_int = 12;\n-pub const KERN_VNODE: ::c_int = 13;\n-pub const KERN_PROC: ::c_int = 14;\n-pub const KERN_FILE: ::c_int = 15;\n-pub const KERN_PROF: ::c_int = 16;\n-pub const KERN_POSIX1: ::c_int = 17;\n-pub const KERN_NGROUPS: ::c_int = 18;\n-pub const KERN_JOB_CONTROL: ::c_int = 19;\n-pub const KERN_SAVED_IDS: ::c_int = 20;\n-pub const KERN_BOOTTIME: ::c_int = 21;\n-pub const KERN_NISDOMAINNAME: ::c_int = 22;\n-pub const KERN_DOMAINNAME: ::c_int = KERN_NISDOMAINNAME;\n-pub const KERN_MAXPARTITIONS: ::c_int = 23;\n-pub const KERN_KDEBUG: ::c_int = 24;\n-pub const KERN_UPDATEINTERVAL: ::c_int = 25;\n-pub const KERN_OSRELDATE: ::c_int = 26;\n-pub const KERN_NTP_PLL: ::c_int = 27;\n-pub const KERN_BOOTFILE: ::c_int = 28;\n-pub const KERN_MAXFILESPERPROC: ::c_int = 29;\n-pub const KERN_MAXPROCPERUID: ::c_int = 30;\n-pub const KERN_DUMPDEV: ::c_int = 31;\n-pub const KERN_IPC: ::c_int = 32;\n-pub const KERN_DUMMY: ::c_int = 33;\n-pub const KERN_PS_STRINGS: ::c_int = 34;\n-pub const KERN_USRSTACK32: ::c_int = 35;\n-pub const KERN_LOGSIGEXIT: ::c_int = 36;\n-pub const KERN_SYMFILE: ::c_int = 37;\n-pub const KERN_PROCARGS: ::c_int = 38;\n-pub const KERN_NETBOOT: ::c_int = 40;\n-pub const KERN_SYSV: ::c_int = 42;\n-pub const KERN_AFFINITY: ::c_int = 43;\n-pub const KERN_TRANSLATE: ::c_int = 44;\n-pub const KERN_CLASSIC: ::c_int = KERN_TRANSLATE;\n-pub const KERN_EXEC: ::c_int = 45;\n-pub const KERN_CLASSICHANDLER: ::c_int = KERN_EXEC;\n-pub const KERN_AIOMAX: ::c_int = 46;\n-pub const KERN_AIOPROCMAX: ::c_int = 47;\n-pub const KERN_AIOTHREADS: ::c_int = 48;\n-pub const KERN_COREFILE: ::c_int = 50;\n-pub const KERN_COREDUMP: ::c_int = 51;\n-pub const KERN_SUGID_COREDUMP: ::c_int = 52;\n-pub const KERN_PROCDELAYTERM: ::c_int = 53;\n-pub const KERN_SHREG_PRIVATIZABLE: ::c_int = 54;\n-pub const KERN_LOW_PRI_WINDOW: ::c_int = 56;\n-pub const KERN_LOW_PRI_DELAY: ::c_int = 57;\n-pub const KERN_POSIX: ::c_int = 58;\n-pub const KERN_USRSTACK64: ::c_int = 59;\n-pub const KERN_NX_PROTECTION: ::c_int = 60;\n-pub const KERN_TFP: ::c_int = 61;\n-pub const KERN_PROCNAME: ::c_int = 62;\n-pub const KERN_THALTSTACK: ::c_int = 63;\n-pub const KERN_SPECULATIVE_READS: ::c_int = 64;\n-pub const KERN_OSVERSION: ::c_int = 65;\n-pub const KERN_SAFEBOOT: ::c_int = 66;\n-pub const KERN_RAGEVNODE: ::c_int = 68;\n-pub const KERN_TTY: ::c_int = 69;\n-pub const KERN_CHECKOPENEVT: ::c_int = 70;\n-pub const KERN_THREADNAME: ::c_int = 71;\n-pub const KERN_MAXID: ::c_int = 72;\n-pub const KERN_RAGE_PROC: ::c_int = 1;\n-pub const KERN_RAGE_THREAD: ::c_int = 2;\n-pub const KERN_UNRAGE_PROC: ::c_int = 3;\n-pub const KERN_UNRAGE_THREAD: ::c_int = 4;\n-pub const KERN_OPENEVT_PROC: ::c_int = 1;\n-pub const KERN_UNOPENEVT_PROC: ::c_int = 2;\n-pub const KERN_TFP_POLICY: ::c_int = 1;\n-pub const KERN_TFP_POLICY_DENY: ::c_int = 0;\n-pub const KERN_TFP_POLICY_DEFAULT: ::c_int = 2;\n-pub const KERN_KDEFLAGS: ::c_int = 1;\n-pub const KERN_KDDFLAGS: ::c_int = 2;\n-pub const KERN_KDENABLE: ::c_int = 3;\n-pub const KERN_KDSETBUF: ::c_int = 4;\n-pub const KERN_KDGETBUF: ::c_int = 5;\n-pub const KERN_KDSETUP: ::c_int = 6;\n-pub const KERN_KDREMOVE: ::c_int = 7;\n-pub const KERN_KDSETREG: ::c_int = 8;\n-pub const KERN_KDGETREG: ::c_int = 9;\n-pub const KERN_KDREADTR: ::c_int = 10;\n-pub const KERN_KDPIDTR: ::c_int = 11;\n-pub const KERN_KDTHRMAP: ::c_int = 12;\n-pub const KERN_KDPIDEX: ::c_int = 14;\n-pub const KERN_KDSETRTCDEC: ::c_int = 15;\n-pub const KERN_KDGETENTROPY: ::c_int = 16;\n-pub const KERN_KDWRITETR: ::c_int = 17;\n-pub const KERN_KDWRITEMAP: ::c_int = 18;\n-pub const KERN_KDENABLE_BG_TRACE: ::c_int = 19;\n-pub const KERN_KDDISABLE_BG_TRACE: ::c_int = 20;\n-pub const KERN_KDREADCURTHRMAP: ::c_int = 21;\n-pub const KERN_KDSET_TYPEFILTER: ::c_int = 22;\n-pub const KERN_KDBUFWAIT: ::c_int = 23;\n-pub const KERN_KDCPUMAP: ::c_int = 24;\n-pub const KERN_PROC_ALL: ::c_int = 0;\n-pub const KERN_PROC_PID: ::c_int = 1;\n-pub const KERN_PROC_PGRP: ::c_int = 2;\n-pub const KERN_PROC_SESSION: ::c_int = 3;\n-pub const KERN_PROC_TTY: ::c_int = 4;\n-pub const KERN_PROC_UID: ::c_int = 5;\n-pub const KERN_PROC_RUID: ::c_int = 6;\n-pub const KERN_PROC_LCID: ::c_int = 7;\n-pub const KIPC_MAXSOCKBUF: ::c_int = 1;\n-pub const KIPC_SOCKBUF_WASTE: ::c_int = 2;\n-pub const KIPC_SOMAXCONN: ::c_int = 3;\n-pub const KIPC_MAX_LINKHDR: ::c_int = 4;\n-pub const KIPC_MAX_PROTOHDR: ::c_int = 5;\n-pub const KIPC_MAX_HDR: ::c_int = 6;\n-pub const KIPC_MAX_DATALEN: ::c_int = 7;\n-pub const KIPC_MBSTAT: ::c_int = 8;\n-pub const KIPC_NMBCLUSTERS: ::c_int = 9;\n-pub const KIPC_SOQLIMITCOMPAT: ::c_int = 10;\n-pub const VM_METER: ::c_int = 1;\n-pub const VM_LOADAVG: ::c_int = 2;\n-pub const VM_MACHFACTOR: ::c_int = 4;\n-pub const VM_SWAPUSAGE: ::c_int = 5;\n-pub const VM_MAXID: ::c_int = 6;\n-pub const HW_MACHINE: ::c_int = 1;\n-pub const HW_MODEL: ::c_int = 2;\n-pub const HW_NCPU: ::c_int = 3;\n-pub const HW_BYTEORDER: ::c_int = 4;\n-pub const HW_PHYSMEM: ::c_int = 5;\n-pub const HW_USERMEM: ::c_int = 6;\n-pub const HW_PAGESIZE: ::c_int = 7;\n-pub const HW_DISKNAMES: ::c_int = 8;\n-pub const HW_DISKSTATS: ::c_int = 9;\n-pub const HW_EPOCH: ::c_int = 10;\n-pub const HW_FLOATINGPT: ::c_int = 11;\n-pub const HW_MACHINE_ARCH: ::c_int = 12;\n-pub const HW_VECTORUNIT: ::c_int = 13;\n-pub const HW_BUS_FREQ: ::c_int = 14;\n-pub const HW_CPU_FREQ: ::c_int = 15;\n-pub const HW_CACHELINE: ::c_int = 16;\n-pub const HW_L1ICACHESIZE: ::c_int = 17;\n-pub const HW_L1DCACHESIZE: ::c_int = 18;\n-pub const HW_L2SETTINGS: ::c_int = 19;\n-pub const HW_L2CACHESIZE: ::c_int = 20;\n-pub const HW_L3SETTINGS: ::c_int = 21;\n-pub const HW_L3CACHESIZE: ::c_int = 22;\n-pub const HW_TB_FREQ: ::c_int = 23;\n-pub const HW_MEMSIZE: ::c_int = 24;\n-pub const HW_AVAILCPU: ::c_int = 25;\n-pub const HW_MAXID: ::c_int = 26;\n-pub const USER_CS_PATH: ::c_int = 1;\n-pub const USER_BC_BASE_MAX: ::c_int = 2;\n-pub const USER_BC_DIM_MAX: ::c_int = 3;\n-pub const USER_BC_SCALE_MAX: ::c_int = 4;\n-pub const USER_BC_STRING_MAX: ::c_int = 5;\n-pub const USER_COLL_WEIGHTS_MAX: ::c_int = 6;\n-pub const USER_EXPR_NEST_MAX: ::c_int = 7;\n-pub const USER_LINE_MAX: ::c_int = 8;\n-pub const USER_RE_DUP_MAX: ::c_int = 9;\n-pub const USER_POSIX2_VERSION: ::c_int = 10;\n-pub const USER_POSIX2_C_BIND: ::c_int = 11;\n-pub const USER_POSIX2_C_DEV: ::c_int = 12;\n-pub const USER_POSIX2_CHAR_TERM: ::c_int = 13;\n-pub const USER_POSIX2_FORT_DEV: ::c_int = 14;\n-pub const USER_POSIX2_FORT_RUN: ::c_int = 15;\n-pub const USER_POSIX2_LOCALEDEF: ::c_int = 16;\n-pub const USER_POSIX2_SW_DEV: ::c_int = 17;\n-pub const USER_POSIX2_UPE: ::c_int = 18;\n-pub const USER_STREAM_MAX: ::c_int = 19;\n-pub const USER_TZNAME_MAX: ::c_int = 20;\n-pub const USER_MAXID: ::c_int = 21;\n-pub const CTL_DEBUG_NAME: ::c_int = 0;\n-pub const CTL_DEBUG_VALUE: ::c_int = 1;\n-pub const CTL_DEBUG_MAXID: ::c_int = 20;\n-\n-pub const POLLRDNORM: ::c_short = 0x040;\n-pub const POLLWRNORM: ::c_short = 0x004;\n-pub const POLLRDBAND: ::c_short = 0x080;\n-pub const POLLWRBAND: ::c_short = 0x100;\n-\n-pub const PRIO_DARWIN_THREAD: ::c_int = 3;\n-pub const PRIO_DARWIN_PROCESS: ::c_int = 4;\n-pub const PRIO_DARWIN_BG: ::c_int = 0x1000;\n-pub const PRIO_DARWIN_NONUI: ::c_int = 0x1001;\n-\n-pub const SEM_FAILED: *mut sem_t = -1isize as *mut ::sem_t;\n-\n-f! {\n-    pub fn WSTOPSIG(status: ::c_int) -> ::c_int {\n-        status >> 8\n-    }\n-\n-    pub fn _WSTATUS(status: ::c_int) -> ::c_int {\n-        status & 0x7f\n-    }\n-\n-    pub fn WIFCONTINUED(status: ::c_int) -> bool {\n-        _WSTATUS(status) == _WSTOPPED && WSTOPSIG(status) == 0x13\n-    }\n-\n-    pub fn WIFSIGNALED(status: ::c_int) -> bool {\n-        _WSTATUS(status) != _WSTOPPED && _WSTATUS(status) != 0\n-    }\n-\n-    pub fn WIFSTOPPED(status: ::c_int) -> bool {\n-        _WSTATUS(status) == _WSTOPPED && WSTOPSIG(status) != 0x13\n-    }\n-}\n-\n-extern {\n-    pub fn lutimes(file: *const ::c_char, times: *const ::timeval) -> ::c_int;\n-\n-    pub fn getutxent() -> *mut utmpx;\n-    pub fn getutxid(ut: *const utmpx) -> *mut utmpx;\n-    pub fn getutxline(ut: *const utmpx) -> *mut utmpx;\n-    pub fn pututxline(ut: *const utmpx) -> *mut utmpx;\n-    pub fn setutxent();\n-    pub fn endutxent();\n-    pub fn utmpxname(file: *const ::c_char) -> ::c_int;\n-\n-    pub fn getnameinfo(sa: *const ::sockaddr,\n-                       salen: ::socklen_t,\n-                       host: *mut ::c_char,\n-                       hostlen: ::socklen_t,\n-                       serv: *mut ::c_char,\n-                       sevlen: ::socklen_t,\n-                       flags: ::c_int) -> ::c_int;\n-    pub fn mincore(addr: *const ::c_void, len: ::size_t,\n-                   vec: *mut ::c_char) -> ::c_int;\n-    pub fn sysctlnametomib(name: *const ::c_char,\n-                           mibp: *mut ::c_int,\n-                           sizep: *mut ::size_t)\n-                           -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"mprotect$UNIX2003\")]\n-    pub fn mprotect(addr: *mut ::c_void, len: ::size_t, prot: ::c_int)\n-                    -> ::c_int;\n-    pub fn shm_open(name: *const ::c_char, oflag: ::c_int, ...) -> ::c_int;\n-    pub fn sysctl(name: *mut ::c_int,\n-                  namelen: ::c_uint,\n-                  oldp: *mut ::c_void,\n-                  oldlenp: *mut ::size_t,\n-                  newp: *mut ::c_void,\n-                  newlen: ::size_t)\n-                  -> ::c_int;\n-    pub fn sysctlbyname(name: *const ::c_char,\n-                        oldp: *mut ::c_void,\n-                        oldlenp: *mut ::size_t,\n-                        newp: *mut ::c_void,\n-                        newlen: ::size_t)\n-                        -> ::c_int;\n-    pub fn mach_absolute_time() -> u64;\n-    pub fn mach_timebase_info(info: *mut ::mach_timebase_info) -> ::c_int;\n-    pub fn pthread_setname_np(name: *const ::c_char) -> ::c_int;\n-    pub fn pthread_get_stackaddr_np(thread: ::pthread_t) -> *mut ::c_void;\n-    pub fn pthread_get_stacksize_np(thread: ::pthread_t) -> ::size_t;\n-    pub fn __error() -> *mut ::c_int;\n-    pub fn backtrace(buf: *mut *mut ::c_void,\n-                     sz: ::c_int) -> ::c_int;\n-    #[cfg_attr(target_os = \"macos\", link_name = \"statfs$INODE64\")]\n-    pub fn statfs(path: *const ::c_char, buf: *mut statfs) -> ::c_int;\n-    #[cfg_attr(target_os = \"macos\", link_name = \"fstatfs$INODE64\")]\n-    pub fn fstatfs(fd: ::c_int, buf: *mut statfs) -> ::c_int;\n-    pub fn kevent(kq: ::c_int,\n-                  changelist: *const ::kevent,\n-                  nchanges: ::c_int,\n-                  eventlist: *mut ::kevent,\n-                  nevents: ::c_int,\n-                  timeout: *const ::timespec) -> ::c_int;\n-    pub fn kevent64(kq: ::c_int,\n-                    changelist: *const ::kevent64_s,\n-                    nchanges: ::c_int,\n-                    eventlist: *mut ::kevent64_s,\n-                    nevents: ::c_int,\n-                    flags: ::c_uint,\n-                    timeout: *const ::timespec) -> ::c_int;\n-    pub fn mount(src: *const ::c_char,\n-                 target: *const ::c_char,\n-                 flags: ::c_int,\n-                 data: *mut ::c_void) -> ::c_int;\n-    pub fn ptrace(requeset: ::c_int,\n-                  pid: ::pid_t,\n-                  addr: *mut ::c_char,\n-                  data: ::c_int) -> ::c_int;\n-    pub fn quotactl(special: *const ::c_char,\n-                    cmd: ::c_int,\n-                    id: ::c_int,\n-                    data: *mut ::c_char) -> ::c_int;\n-    pub fn sethostname(name: *const ::c_char, len: ::c_int) -> ::c_int;\n-    pub fn sendfile(fd: ::c_int,\n-                    s: ::c_int,\n-                    offset: ::off_t,\n-                    len: *mut ::off_t,\n-                    hdtr: *mut ::sf_hdtr,\n-                    flags: ::c_int) -> ::c_int;\n-    pub fn openpty(amaster: *mut ::c_int,\n-                   aslave: *mut ::c_int,\n-                   name: *mut ::c_char,\n-                   termp: *mut termios,\n-                   winp: *mut ::winsize) -> ::c_int;\n-    pub fn forkpty(amaster: *mut ::c_int,\n-                   name: *mut ::c_char,\n-                   termp: *mut termios,\n-                   winp: *mut ::winsize) -> ::pid_t;\n-    pub fn duplocale(base: ::locale_t) -> ::locale_t;\n-    pub fn freelocale(loc: ::locale_t) -> ::c_int;\n-    pub fn localeconv_l(loc: ::locale_t) -> *mut lconv;\n-    pub fn newlocale(mask: ::c_int,\n-                     locale: *const ::c_char,\n-                     base: ::locale_t) -> ::locale_t;\n-    pub fn uselocale(loc: ::locale_t) -> ::locale_t;\n-    pub fn querylocale(mask: ::c_int, loc: ::locale_t) -> *const ::c_char;\n-    pub fn getpriority(which: ::c_int, who: ::id_t) -> ::c_int;\n-    pub fn setpriority(which: ::c_int, who: ::id_t, prio: ::c_int) -> ::c_int;\n-\n-    pub fn openat(dirfd: ::c_int, pathname: *const ::c_char,\n-                  flags: ::c_int, ...) -> ::c_int;\n-    pub fn faccessat(dirfd: ::c_int, pathname: *const ::c_char,\n-                     mode: ::c_int, flags: ::c_int) -> ::c_int;\n-    pub fn fchmodat(dirfd: ::c_int, pathname: *const ::c_char,\n-                    mode: ::mode_t, flags: ::c_int) -> ::c_int;\n-    pub fn fchownat(dirfd: ::c_int, pathname: *const ::c_char,\n-                    owner: ::uid_t, group: ::gid_t,\n-                    flags: ::c_int) -> ::c_int;\n-    #[cfg_attr(target_os = \"macos\", link_name = \"fstatat$INODE64\")]\n-    pub fn fstatat(dirfd: ::c_int, pathname: *const ::c_char,\n-                   buf: *mut stat, flags: ::c_int) -> ::c_int;\n-    pub fn linkat(olddirfd: ::c_int, oldpath: *const ::c_char,\n-                  newdirfd: ::c_int, newpath: *const ::c_char,\n-                  flags: ::c_int) -> ::c_int;\n-   pub fn mkdirat(dirfd: ::c_int, pathname: *const ::c_char,\n-                  mode: ::mode_t) -> ::c_int;\n-   pub fn readlinkat(dirfd: ::c_int, pathname: *const ::c_char,\n-                     buf: *mut ::c_char, bufsiz: ::size_t) -> ::ssize_t;\n-   pub fn renameat(olddirfd: ::c_int, oldpath: *const ::c_char,\n-                   newdirfd: ::c_int, newpath: *const ::c_char)\n-                   -> ::c_int;\n-   pub fn symlinkat(target: *const ::c_char, newdirfd: ::c_int,\n-                    linkpath: *const ::c_char) -> ::c_int;\n-   pub fn unlinkat(dirfd: ::c_int, pathname: *const ::c_char,\n-                   flags: ::c_int) -> ::c_int;\n-}\n-\n-cfg_if! {\n-    if #[cfg(any(target_arch = \"arm\", target_arch = \"x86\"))] {\n-        mod b32;\n-        pub use self::b32::*;\n-    } else if #[cfg(any(target_arch = \"x86_64\", target_arch = \"aarch64\"))] {\n-        mod b64;\n-        pub use self::b64::*;\n-    } else {\n-        // Unknown target_arch\n-    }\n-}"}, {"sha": "179cd913b3862e402c92a9211225de6425d19bd6", "filename": "src/vendor/libc/src/unix/bsd/freebsdlike/dragonfly/mod.rs", "status": "removed", "additions": 0, "deletions": 303, "changes": 303, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Fdragonfly%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Fdragonfly%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Fdragonfly%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,303 +0,0 @@\n-pub type clock_t = u64;\n-pub type ino_t = u64;\n-pub type nlink_t = u32;\n-pub type blksize_t = i64;\n-pub type clockid_t = ::c_ulong;\n-\n-pub type c_long = i64;\n-pub type c_ulong = u64;\n-pub type time_t = i64;\n-pub type suseconds_t = i64;\n-\n-pub type uuid_t = ::uuid;\n-\n-pub type fsblkcnt_t = u64;\n-pub type fsfilcnt_t = u64;\n-\n-s! {\n-    pub struct dirent {\n-        pub d_fileno: ::ino_t,\n-        pub d_namlen: u16,\n-        pub d_type: u8,\n-        __unused1: u8,\n-        __unused2: u32,\n-        pub d_name: [::c_char; 256],\n-    }\n-\n-    pub struct uuid {\n-        pub time_low: u32,\n-        pub time_mid: u16,\n-        pub time_hi_and_version: u16,\n-        pub clock_seq_hi_and_reserved: u8,\n-        pub clock_seq_low: u8,\n-        pub node: [u8; 6],\n-    }\n-\n-    pub struct statvfs {\n-        pub f_bsize: ::c_ulong,\n-        pub f_frsize: ::c_ulong,\n-        pub f_blocks: ::fsblkcnt_t,\n-        pub f_bfree: ::fsblkcnt_t,\n-        pub f_bavail: ::fsblkcnt_t,\n-        pub f_files: ::fsfilcnt_t,\n-        pub f_ffree: ::fsfilcnt_t,\n-        pub f_favail: ::fsfilcnt_t,\n-        pub f_fsid: ::c_ulong,\n-        pub f_flag: ::c_ulong,\n-        pub f_namemax: ::c_ulong,\n-        pub f_owner: ::uid_t,\n-        pub f_type: ::c_uint,\n-        pub f_syncreads: u64,\n-        pub f_syncwrites: u64,\n-        pub f_asyncreads: u64,\n-        pub f_asyncwrites: u64,\n-        pub f_fsid_uuid: ::uuid_t,\n-        pub f_uid_uuid: ::uuid_t,\n-    }\n-\n-    pub struct stat {\n-        pub st_ino: ::ino_t,\n-        pub st_nlink: ::nlink_t,\n-        pub st_dev: ::dev_t,\n-        pub st_mode: ::mode_t,\n-        pub st_padding1: ::uint16_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::dev_t,\n-        pub st_atime: ::time_t,\n-        pub st_atime_nsec: ::c_long,\n-        pub st_mtime: ::time_t,\n-        pub st_mtime_nsec: ::c_long,\n-        pub st_ctime: ::time_t,\n-        pub st_ctime_nsec: ::c_long,\n-        pub st_size: ::off_t,\n-        pub st_blocks: ::int64_t,\n-        pub st_blksize: ::uint32_t,\n-        pub st_flags: ::uint32_t,\n-        pub st_gen: ::uint32_t,\n-        pub st_lspare: ::int32_t,\n-        pub st_qspare1: ::int64_t,\n-        pub st_qspare2: ::int64_t,\n-    }\n-}\n-\n-pub const RAND_MAX: ::c_int = 0x7fff_ffff;\n-pub const PTHREAD_STACK_MIN: ::size_t = 1024;\n-pub const SIGSTKSZ: ::size_t = 40960;\n-pub const MADV_INVAL: ::c_int = 10;\n-pub const O_CLOEXEC: ::c_int = 0x00020000;\n-pub const F_GETLK: ::c_int = 7;\n-pub const F_SETLK: ::c_int = 8;\n-pub const F_SETLKW: ::c_int = 9;\n-pub const ELAST: ::c_int = 99;\n-pub const RLIMIT_POSIXLOCKS: ::c_int = 11;\n-pub const RLIM_NLIMITS: ::rlim_t = 12;\n-\n-pub const Q_GETQUOTA: ::c_int = 0x300;\n-pub const Q_SETQUOTA: ::c_int = 0x400;\n-\n-pub const CLOCK_REALTIME: clockid_t = 0;\n-pub const CLOCK_VIRTUAL: clockid_t = 1;\n-pub const CLOCK_PROF: clockid_t = 2;\n-pub const CLOCK_MONOTONIC: clockid_t = 4;\n-pub const CLOCK_UPTIME: clockid_t = 5;\n-pub const CLOCK_UPTIME_PRECISE: clockid_t = 7;\n-pub const CLOCK_UPTIME_FAST: clockid_t = 8;\n-pub const CLOCK_REALTIME_PRECISE: clockid_t = 9;\n-pub const CLOCK_REALTIME_FAST: clockid_t = 10;\n-pub const CLOCK_MONOTONIC_PRECISE: clockid_t = 11;\n-pub const CLOCK_MONOTONIC_FAST: clockid_t = 12;\n-pub const CLOCK_SECOND: clockid_t = 13;\n-pub const CLOCK_THREAD_CPUTIME_ID: clockid_t = 14;\n-pub const CLOCK_PROCESS_CPUTIME_ID: clockid_t = 15;\n-\n-pub const CTL_UNSPEC: ::c_int = 0;\n-pub const CTL_KERN: ::c_int = 1;\n-pub const CTL_VM: ::c_int = 2;\n-pub const CTL_VFS: ::c_int = 3;\n-pub const CTL_NET: ::c_int = 4;\n-pub const CTL_DEBUG: ::c_int = 5;\n-pub const CTL_HW: ::c_int = 6;\n-pub const CTL_MACHDEP: ::c_int = 7;\n-pub const CTL_USER: ::c_int = 8;\n-pub const CTL_P1003_1B: ::c_int = 9;\n-pub const CTL_LWKT: ::c_int = 10;\n-pub const CTL_MAXID: ::c_int = 11;\n-pub const KERN_OSTYPE: ::c_int = 1;\n-pub const KERN_OSRELEASE: ::c_int = 2;\n-pub const KERN_OSREV: ::c_int = 3;\n-pub const KERN_VERSION: ::c_int = 4;\n-pub const KERN_MAXVNODES: ::c_int = 5;\n-pub const KERN_MAXPROC: ::c_int = 6;\n-pub const KERN_MAXFILES: ::c_int = 7;\n-pub const KERN_ARGMAX: ::c_int = 8;\n-pub const KERN_SECURELVL: ::c_int = 9;\n-pub const KERN_HOSTNAME: ::c_int = 10;\n-pub const KERN_HOSTID: ::c_int = 11;\n-pub const KERN_CLOCKRATE: ::c_int = 12;\n-pub const KERN_VNODE: ::c_int = 13;\n-pub const KERN_PROC: ::c_int = 14;\n-pub const KERN_FILE: ::c_int = 15;\n-pub const KERN_PROF: ::c_int = 16;\n-pub const KERN_POSIX1: ::c_int = 17;\n-pub const KERN_NGROUPS: ::c_int = 18;\n-pub const KERN_JOB_CONTROL: ::c_int = 19;\n-pub const KERN_SAVED_IDS: ::c_int = 20;\n-pub const KERN_BOOTTIME: ::c_int = 21;\n-pub const KERN_NISDOMAINNAME: ::c_int = 22;\n-pub const KERN_UPDATEINTERVAL: ::c_int = 23;\n-pub const KERN_OSRELDATE: ::c_int = 24;\n-pub const KERN_NTP_PLL: ::c_int = 25;\n-pub const KERN_BOOTFILE: ::c_int = 26;\n-pub const KERN_MAXFILESPERPROC: ::c_int = 27;\n-pub const KERN_MAXPROCPERUID: ::c_int = 28;\n-pub const KERN_DUMPDEV: ::c_int = 29;\n-pub const KERN_IPC: ::c_int = 30;\n-pub const KERN_DUMMY: ::c_int = 31;\n-pub const KERN_PS_STRINGS: ::c_int = 32;\n-pub const KERN_USRSTACK: ::c_int = 33;\n-pub const KERN_LOGSIGEXIT: ::c_int = 34;\n-pub const KERN_IOV_MAX: ::c_int = 35;\n-pub const KERN_MAXPOSIXLOCKSPERUID: ::c_int = 36;\n-pub const KERN_MAXID: ::c_int = 37;\n-pub const KERN_PROC_ALL: ::c_int = 0;\n-pub const KERN_PROC_PID: ::c_int = 1;\n-pub const KERN_PROC_PGRP: ::c_int = 2;\n-pub const KERN_PROC_SESSION: ::c_int = 3;\n-pub const KERN_PROC_TTY: ::c_int = 4;\n-pub const KERN_PROC_UID: ::c_int = 5;\n-pub const KERN_PROC_RUID: ::c_int = 6;\n-pub const KERN_PROC_ARGS: ::c_int = 7;\n-pub const KERN_PROC_CWD: ::c_int = 8;\n-pub const KERN_PROC_PATHNAME: ::c_int = 9;\n-pub const KERN_PROC_FLAGMASK: ::c_int = 0x10;\n-pub const KERN_PROC_FLAG_LWP: ::c_int = 0x10;\n-pub const KIPC_MAXSOCKBUF: ::c_int = 1;\n-pub const KIPC_SOCKBUF_WASTE: ::c_int = 2;\n-pub const KIPC_SOMAXCONN: ::c_int = 3;\n-pub const KIPC_MAX_LINKHDR: ::c_int = 4;\n-pub const KIPC_MAX_PROTOHDR: ::c_int = 5;\n-pub const KIPC_MAX_HDR: ::c_int = 6;\n-pub const KIPC_MAX_DATALEN: ::c_int = 7;\n-pub const KIPC_MBSTAT: ::c_int = 8;\n-pub const KIPC_NMBCLUSTERS: ::c_int = 9;\n-pub const HW_MACHINE: ::c_int = 1;\n-pub const HW_MODEL: ::c_int = 2;\n-pub const HW_NCPU: ::c_int = 3;\n-pub const HW_BYTEORDER: ::c_int = 4;\n-pub const HW_PHYSMEM: ::c_int = 5;\n-pub const HW_USERMEM: ::c_int = 6;\n-pub const HW_PAGESIZE: ::c_int = 7;\n-pub const HW_DISKNAMES: ::c_int = 8;\n-pub const HW_DISKSTATS: ::c_int = 9;\n-pub const HW_FLOATINGPT: ::c_int = 10;\n-pub const HW_MACHINE_ARCH: ::c_int = 11;\n-pub const HW_MACHINE_PLATFORM: ::c_int = 12;\n-pub const HW_SENSORS: ::c_int = 13;\n-pub const HW_MAXID: ::c_int = 14;\n-pub const USER_CS_PATH: ::c_int = 1;\n-pub const USER_BC_BASE_MAX: ::c_int = 2;\n-pub const USER_BC_DIM_MAX: ::c_int = 3;\n-pub const USER_BC_SCALE_MAX: ::c_int = 4;\n-pub const USER_BC_STRING_MAX: ::c_int = 5;\n-pub const USER_COLL_WEIGHTS_MAX: ::c_int = 6;\n-pub const USER_EXPR_NEST_MAX: ::c_int = 7;\n-pub const USER_LINE_MAX: ::c_int = 8;\n-pub const USER_RE_DUP_MAX: ::c_int = 9;\n-pub const USER_POSIX2_VERSION: ::c_int = 10;\n-pub const USER_POSIX2_C_BIND: ::c_int = 11;\n-pub const USER_POSIX2_C_DEV: ::c_int = 12;\n-pub const USER_POSIX2_CHAR_TERM: ::c_int = 13;\n-pub const USER_POSIX2_FORT_DEV: ::c_int = 14;\n-pub const USER_POSIX2_FORT_RUN: ::c_int = 15;\n-pub const USER_POSIX2_LOCALEDEF: ::c_int = 16;\n-pub const USER_POSIX2_SW_DEV: ::c_int = 17;\n-pub const USER_POSIX2_UPE: ::c_int = 18;\n-pub const USER_STREAM_MAX: ::c_int = 19;\n-pub const USER_TZNAME_MAX: ::c_int = 20;\n-pub const USER_MAXID: ::c_int = 21;\n-pub const CTL_P1003_1B_ASYNCHRONOUS_IO: ::c_int = 1;\n-pub const CTL_P1003_1B_MAPPED_FILES: ::c_int = 2;\n-pub const CTL_P1003_1B_MEMLOCK: ::c_int = 3;\n-pub const CTL_P1003_1B_MEMLOCK_RANGE: ::c_int = 4;\n-pub const CTL_P1003_1B_MEMORY_PROTECTION: ::c_int = 5;\n-pub const CTL_P1003_1B_MESSAGE_PASSING: ::c_int = 6;\n-pub const CTL_P1003_1B_PRIORITIZED_IO: ::c_int = 7;\n-pub const CTL_P1003_1B_PRIORITY_SCHEDULING: ::c_int = 8;\n-pub const CTL_P1003_1B_REALTIME_SIGNALS: ::c_int = 9;\n-pub const CTL_P1003_1B_SEMAPHORES: ::c_int = 10;\n-pub const CTL_P1003_1B_FSYNC: ::c_int = 11;\n-pub const CTL_P1003_1B_SHARED_MEMORY_OBJECTS: ::c_int = 12;\n-pub const CTL_P1003_1B_SYNCHRONIZED_IO: ::c_int = 13;\n-pub const CTL_P1003_1B_TIMERS: ::c_int = 14;\n-pub const CTL_P1003_1B_AIO_LISTIO_MAX: ::c_int = 15;\n-pub const CTL_P1003_1B_AIO_MAX: ::c_int = 16;\n-pub const CTL_P1003_1B_AIO_PRIO_DELTA_MAX: ::c_int = 17;\n-pub const CTL_P1003_1B_DELAYTIMER_MAX: ::c_int = 18;\n-pub const CTL_P1003_1B_UNUSED1: ::c_int = 19;\n-pub const CTL_P1003_1B_PAGESIZE: ::c_int = 20;\n-pub const CTL_P1003_1B_RTSIG_MAX: ::c_int = 21;\n-pub const CTL_P1003_1B_SEM_NSEMS_MAX: ::c_int = 22;\n-pub const CTL_P1003_1B_SEM_VALUE_MAX: ::c_int = 23;\n-pub const CTL_P1003_1B_SIGQUEUE_MAX: ::c_int = 24;\n-pub const CTL_P1003_1B_TIMER_MAX: ::c_int = 25;\n-pub const CTL_P1003_1B_MAXID: ::c_int = 26;\n-\n-pub const EVFILT_READ: ::int16_t = -1;\n-pub const EVFILT_WRITE: ::int16_t = -2;\n-pub const EVFILT_AIO: ::int16_t = -3;\n-pub const EVFILT_VNODE: ::int16_t = -4;\n-pub const EVFILT_PROC: ::int16_t = -5;\n-pub const EVFILT_SIGNAL: ::int16_t = -6;\n-pub const EVFILT_TIMER: ::int16_t = -7;\n-pub const EVFILT_PROCDESC: ::int16_t = -8;\n-pub const EVFILT_USER: ::int16_t = -9;\n-pub const EVFILT_FS: ::int16_t = -10;\n-\n-pub const EV_ADD: ::uint16_t = 0x1;\n-pub const EV_DELETE: ::uint16_t = 0x2;\n-pub const EV_ENABLE: ::uint16_t = 0x4;\n-pub const EV_DISABLE: ::uint16_t = 0x8;\n-pub const EV_ONESHOT: ::uint16_t = 0x10;\n-pub const EV_CLEAR: ::uint16_t = 0x20;\n-pub const EV_RECEIPT: ::uint16_t = 0x40;\n-pub const EV_DISPATCH: ::uint16_t = 0x80;\n-pub const EV_NODATA: ::uint16_t = 0x1000;\n-pub const EV_FLAG1: ::uint16_t = 0x2000;\n-pub const EV_ERROR: ::uint16_t = 0x4000;\n-pub const EV_EOF: ::uint16_t = 0x8000;\n-pub const EV_SYSFLAGS: ::uint16_t = 0xf000;\n-\n-pub const NOTE_TRIGGER: ::uint32_t = 0x01000000;\n-pub const NOTE_FFNOP: ::uint32_t = 0x00000000;\n-pub const NOTE_FFAND: ::uint32_t = 0x40000000;\n-pub const NOTE_FFOR: ::uint32_t = 0x80000000;\n-pub const NOTE_FFCOPY: ::uint32_t = 0xc0000000;\n-pub const NOTE_FFCTRLMASK: ::uint32_t = 0xc0000000;\n-pub const NOTE_FFLAGSMASK: ::uint32_t = 0x00ffffff;\n-pub const NOTE_LOWAT: ::uint32_t = 0x00000001;\n-pub const NOTE_OOB: ::uint32_t = 0x00000002;\n-pub const NOTE_DELETE: ::uint32_t = 0x00000001;\n-pub const NOTE_WRITE: ::uint32_t = 0x00000002;\n-pub const NOTE_EXTEND: ::uint32_t = 0x00000004;\n-pub const NOTE_ATTRIB: ::uint32_t = 0x00000008;\n-pub const NOTE_LINK: ::uint32_t = 0x00000010;\n-pub const NOTE_RENAME: ::uint32_t = 0x00000020;\n-pub const NOTE_REVOKE: ::uint32_t = 0x00000040;\n-pub const NOTE_EXIT: ::uint32_t = 0x80000000;\n-pub const NOTE_FORK: ::uint32_t = 0x40000000;\n-pub const NOTE_EXEC: ::uint32_t = 0x20000000;\n-pub const NOTE_PDATAMASK: ::uint32_t = 0x000fffff;\n-pub const NOTE_PCTRLMASK: ::uint32_t = 0xf0000000;\n-pub const NOTE_TRACK: ::uint32_t = 0x00000001;\n-pub const NOTE_TRACKERR: ::uint32_t = 0x00000002;\n-pub const NOTE_CHILD: ::uint32_t = 0x00000004;\n-\n-pub const MSG_NOSIGNAL: ::uint32_t = 0x400;\n-\n-extern {\n-    pub fn mprotect(addr: *mut ::c_void, len: ::size_t, prot: ::c_int)\n-                    -> ::c_int;\n-    pub fn clock_getres(clk_id: clockid_t, tp: *mut ::timespec) -> ::c_int;\n-    pub fn clock_gettime(clk_id: clockid_t, tp: *mut ::timespec) -> ::c_int;\n-}"}, {"sha": "a89440ebdebace111efc454cb2e7216967078a27", "filename": "src/vendor/libc/src/unix/bsd/freebsdlike/freebsd/mod.rs", "status": "removed", "additions": 0, "deletions": 306, "changes": 306, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Ffreebsd%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Ffreebsd%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Ffreebsd%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,306 +0,0 @@\n-pub type fflags_t = u32;\n-pub type clock_t = i32;\n-pub type ino_t = u32;\n-pub type nlink_t = u16;\n-pub type blksize_t = u32;\n-pub type clockid_t = ::c_int;\n-\n-pub type fsblkcnt_t = ::uint64_t;\n-pub type fsfilcnt_t = ::uint64_t;\n-\n-s! {\n-    pub struct dirent {\n-        pub d_fileno: u32,\n-        pub d_reclen: u16,\n-        pub d_type: u8,\n-        pub d_namlen: u8,\n-        pub d_name: [::c_char; 256],\n-    }\n-\n-    pub struct statvfs {\n-        pub f_bavail: ::fsblkcnt_t,\n-        pub f_bfree: ::fsblkcnt_t,\n-        pub f_blocks: ::fsblkcnt_t,\n-        pub f_favail: ::fsfilcnt_t,\n-        pub f_ffree: ::fsfilcnt_t,\n-        pub f_files: ::fsfilcnt_t,\n-        pub f_bsize: ::c_ulong,\n-        pub f_flag: ::c_ulong,\n-        pub f_frsize: ::c_ulong,\n-        pub f_fsid: ::c_ulong,\n-        pub f_namemax: ::c_ulong,\n-    }\n-}\n-\n-pub const RAND_MAX: ::c_int = 0x7fff_fffd;\n-pub const PTHREAD_STACK_MIN: ::size_t = 2048;\n-pub const SIGSTKSZ: ::size_t = 34816;\n-pub const SF_NODISKIO: ::c_int = 0x00000001;\n-pub const SF_MNOWAIT: ::c_int = 0x00000002;\n-pub const SF_SYNC: ::c_int = 0x00000004;\n-pub const O_CLOEXEC: ::c_int = 0x00100000;\n-pub const F_GETLK: ::c_int = 11;\n-pub const F_SETLK: ::c_int = 12;\n-pub const F_SETLKW: ::c_int = 13;\n-pub const ELAST: ::c_int = 96;\n-pub const RLIMIT_NPTS: ::c_int = 11;\n-pub const RLIMIT_SWAP: ::c_int = 12;\n-pub const RLIM_NLIMITS: ::rlim_t = 13;\n-\n-pub const Q_GETQUOTA: ::c_int = 0x700;\n-pub const Q_SETQUOTA: ::c_int = 0x800;\n-\n-pub const POSIX_FADV_NORMAL: ::c_int = 0;\n-pub const POSIX_FADV_RANDOM: ::c_int = 1;\n-pub const POSIX_FADV_SEQUENTIAL: ::c_int = 2;\n-pub const POSIX_FADV_WILLNEED: ::c_int = 3;\n-pub const POSIX_FADV_DONTNEED: ::c_int = 4;\n-pub const POSIX_FADV_NOREUSE: ::c_int = 5;\n-\n-pub const EVFILT_READ: ::int16_t = -1;\n-pub const EVFILT_WRITE: ::int16_t = -2;\n-pub const EVFILT_AIO: ::int16_t = -3;\n-pub const EVFILT_VNODE: ::int16_t = -4;\n-pub const EVFILT_PROC: ::int16_t = -5;\n-pub const EVFILT_SIGNAL: ::int16_t = -6;\n-pub const EVFILT_TIMER: ::int16_t = -7;\n-pub const EVFILT_FS: ::int16_t = -9;\n-pub const EVFILT_LIO: ::int16_t = -10;\n-pub const EVFILT_USER: ::int16_t = -11;\n-\n-pub const EV_ADD: ::uint16_t = 0x1;\n-pub const EV_DELETE: ::uint16_t = 0x2;\n-pub const EV_ENABLE: ::uint16_t = 0x4;\n-pub const EV_DISABLE: ::uint16_t = 0x8;\n-pub const EV_ONESHOT: ::uint16_t = 0x10;\n-pub const EV_CLEAR: ::uint16_t = 0x20;\n-pub const EV_RECEIPT: ::uint16_t = 0x40;\n-pub const EV_DISPATCH: ::uint16_t = 0x80;\n-pub const EV_DROP: ::uint16_t = 0x1000;\n-pub const EV_FLAG1: ::uint16_t = 0x2000;\n-pub const EV_ERROR: ::uint16_t = 0x4000;\n-pub const EV_EOF: ::uint16_t = 0x8000;\n-pub const EV_SYSFLAGS: ::uint16_t = 0xf000;\n-\n-pub const NOTE_TRIGGER: ::uint32_t = 0x01000000;\n-pub const NOTE_FFNOP: ::uint32_t = 0x00000000;\n-pub const NOTE_FFAND: ::uint32_t = 0x40000000;\n-pub const NOTE_FFOR: ::uint32_t = 0x80000000;\n-pub const NOTE_FFCOPY: ::uint32_t = 0xc0000000;\n-pub const NOTE_FFCTRLMASK: ::uint32_t = 0xc0000000;\n-pub const NOTE_FFLAGSMASK: ::uint32_t = 0x00ffffff;\n-pub const NOTE_LOWAT: ::uint32_t = 0x00000001;\n-pub const NOTE_DELETE: ::uint32_t = 0x00000001;\n-pub const NOTE_WRITE: ::uint32_t = 0x00000002;\n-pub const NOTE_EXTEND: ::uint32_t = 0x00000004;\n-pub const NOTE_ATTRIB: ::uint32_t = 0x00000008;\n-pub const NOTE_LINK: ::uint32_t = 0x00000010;\n-pub const NOTE_RENAME: ::uint32_t = 0x00000020;\n-pub const NOTE_REVOKE: ::uint32_t = 0x00000040;\n-pub const NOTE_EXIT: ::uint32_t = 0x80000000;\n-pub const NOTE_FORK: ::uint32_t = 0x40000000;\n-pub const NOTE_EXEC: ::uint32_t = 0x20000000;\n-pub const NOTE_PDATAMASK: ::uint32_t = 0x000fffff;\n-pub const NOTE_PCTRLMASK: ::uint32_t = 0xf0000000;\n-pub const NOTE_TRACK: ::uint32_t = 0x00000001;\n-pub const NOTE_TRACKERR: ::uint32_t = 0x00000002;\n-pub const NOTE_CHILD: ::uint32_t = 0x00000004;\n-pub const NOTE_SECONDS: ::uint32_t = 0x00000001;\n-pub const NOTE_MSECONDS: ::uint32_t = 0x00000002;\n-pub const NOTE_USECONDS: ::uint32_t = 0x00000004;\n-pub const NOTE_NSECONDS: ::uint32_t = 0x00000008;\n-\n-pub const MADV_PROTECT: ::c_int = 10;\n-pub const RUSAGE_THREAD: ::c_int = 1;\n-\n-pub const CLOCK_REALTIME: clockid_t = 0;\n-pub const CLOCK_VIRTUAL: clockid_t = 1;\n-pub const CLOCK_PROF: clockid_t = 2;\n-pub const CLOCK_MONOTONIC: clockid_t = 4;\n-pub const CLOCK_UPTIME: clockid_t = 5;\n-pub const CLOCK_UPTIME_PRECISE: clockid_t = 7;\n-pub const CLOCK_UPTIME_FAST: clockid_t = 8;\n-pub const CLOCK_REALTIME_PRECISE: clockid_t = 9;\n-pub const CLOCK_REALTIME_FAST: clockid_t = 10;\n-pub const CLOCK_MONOTONIC_PRECISE: clockid_t = 11;\n-pub const CLOCK_MONOTONIC_FAST: clockid_t = 12;\n-pub const CLOCK_SECOND: clockid_t = 13;\n-pub const CLOCK_THREAD_CPUTIME_ID: clockid_t = 14;\n-pub const CLOCK_PROCESS_CPUTIME_ID: clockid_t = 15;\n-\n-pub const CTL_UNSPEC: ::c_int = 0;\n-pub const CTL_KERN: ::c_int = 1;\n-pub const CTL_VM: ::c_int = 2;\n-pub const CTL_VFS: ::c_int = 3;\n-pub const CTL_NET: ::c_int = 4;\n-pub const CTL_DEBUG: ::c_int = 5;\n-pub const CTL_HW: ::c_int = 6;\n-pub const CTL_MACHDEP: ::c_int = 7;\n-pub const CTL_USER: ::c_int = 8;\n-pub const CTL_P1003_1B: ::c_int = 9;\n-pub const CTL_MAXID: ::c_int = 10;\n-pub const KERN_OSTYPE: ::c_int = 1;\n-pub const KERN_OSRELEASE: ::c_int = 2;\n-pub const KERN_OSREV: ::c_int = 3;\n-pub const KERN_VERSION: ::c_int = 4;\n-pub const KERN_MAXVNODES: ::c_int = 5;\n-pub const KERN_MAXPROC: ::c_int = 6;\n-pub const KERN_MAXFILES: ::c_int = 7;\n-pub const KERN_ARGMAX: ::c_int = 8;\n-pub const KERN_SECURELVL: ::c_int = 9;\n-pub const KERN_HOSTNAME: ::c_int = 10;\n-pub const KERN_HOSTID: ::c_int = 11;\n-pub const KERN_CLOCKRATE: ::c_int = 12;\n-pub const KERN_VNODE: ::c_int = 13;\n-pub const KERN_PROC: ::c_int = 14;\n-pub const KERN_FILE: ::c_int = 15;\n-pub const KERN_PROF: ::c_int = 16;\n-pub const KERN_POSIX1: ::c_int = 17;\n-pub const KERN_NGROUPS: ::c_int = 18;\n-pub const KERN_JOB_CONTROL: ::c_int = 19;\n-pub const KERN_SAVED_IDS: ::c_int = 20;\n-pub const KERN_BOOTTIME: ::c_int = 21;\n-pub const KERN_NISDOMAINNAME: ::c_int = 22;\n-pub const KERN_UPDATEINTERVAL: ::c_int = 23;\n-pub const KERN_OSRELDATE: ::c_int = 24;\n-pub const KERN_NTP_PLL: ::c_int = 25;\n-pub const KERN_BOOTFILE: ::c_int = 26;\n-pub const KERN_MAXFILESPERPROC: ::c_int = 27;\n-pub const KERN_MAXPROCPERUID: ::c_int = 28;\n-pub const KERN_DUMPDEV: ::c_int = 29;\n-pub const KERN_IPC: ::c_int = 30;\n-pub const KERN_DUMMY: ::c_int = 31;\n-pub const KERN_PS_STRINGS: ::c_int = 32;\n-pub const KERN_USRSTACK: ::c_int = 33;\n-pub const KERN_LOGSIGEXIT: ::c_int = 34;\n-pub const KERN_IOV_MAX: ::c_int = 35;\n-pub const KERN_HOSTUUID: ::c_int = 36;\n-pub const KERN_ARND: ::c_int = 37;\n-pub const KERN_MAXID: ::c_int = 38;\n-pub const KERN_PROC_ALL: ::c_int = 0;\n-pub const KERN_PROC_PID: ::c_int = 1;\n-pub const KERN_PROC_PGRP: ::c_int = 2;\n-pub const KERN_PROC_SESSION: ::c_int = 3;\n-pub const KERN_PROC_TTY: ::c_int = 4;\n-pub const KERN_PROC_UID: ::c_int = 5;\n-pub const KERN_PROC_RUID: ::c_int = 6;\n-pub const KERN_PROC_ARGS: ::c_int = 7;\n-pub const KERN_PROC_PROC: ::c_int = 8;\n-pub const KERN_PROC_SV_NAME: ::c_int = 9;\n-pub const KERN_PROC_RGID: ::c_int = 10;\n-pub const KERN_PROC_GID: ::c_int = 11;\n-pub const KERN_PROC_PATHNAME: ::c_int = 12;\n-pub const KERN_PROC_OVMMAP: ::c_int = 13;\n-pub const KERN_PROC_OFILEDESC: ::c_int = 14;\n-pub const KERN_PROC_KSTACK: ::c_int = 15;\n-pub const KERN_PROC_INC_THREAD: ::c_int = 0x10;\n-pub const KERN_PROC_VMMAP: ::c_int = 32;\n-pub const KERN_PROC_FILEDESC: ::c_int = 33;\n-pub const KERN_PROC_GROUPS: ::c_int = 34;\n-pub const KERN_PROC_ENV: ::c_int = 35;\n-pub const KERN_PROC_AUXV: ::c_int = 36;\n-pub const KERN_PROC_RLIMIT: ::c_int = 37;\n-pub const KERN_PROC_PS_STRINGS: ::c_int = 38;\n-pub const KERN_PROC_UMASK: ::c_int = 39;\n-pub const KERN_PROC_OSREL: ::c_int = 40;\n-pub const KERN_PROC_SIGTRAMP: ::c_int = 41;\n-pub const KIPC_MAXSOCKBUF: ::c_int = 1;\n-pub const KIPC_SOCKBUF_WASTE: ::c_int = 2;\n-pub const KIPC_SOMAXCONN: ::c_int = 3;\n-pub const KIPC_MAX_LINKHDR: ::c_int = 4;\n-pub const KIPC_MAX_PROTOHDR: ::c_int = 5;\n-pub const KIPC_MAX_HDR: ::c_int = 6;\n-pub const KIPC_MAX_DATALEN: ::c_int = 7;\n-pub const HW_MACHINE: ::c_int = 1;\n-pub const HW_MODEL: ::c_int = 2;\n-pub const HW_NCPU: ::c_int = 3;\n-pub const HW_BYTEORDER: ::c_int = 4;\n-pub const HW_PHYSMEM: ::c_int = 5;\n-pub const HW_USERMEM: ::c_int = 6;\n-pub const HW_PAGESIZE: ::c_int = 7;\n-pub const HW_DISKNAMES: ::c_int = 8;\n-pub const HW_DISKSTATS: ::c_int = 9;\n-pub const HW_FLOATINGPT: ::c_int = 10;\n-pub const HW_MACHINE_ARCH: ::c_int = 11;\n-pub const HW_REALMEM: ::c_int = 12;\n-pub const HW_MAXID: ::c_int = 13;\n-pub const USER_CS_PATH: ::c_int = 1;\n-pub const USER_BC_BASE_MAX: ::c_int = 2;\n-pub const USER_BC_DIM_MAX: ::c_int = 3;\n-pub const USER_BC_SCALE_MAX: ::c_int = 4;\n-pub const USER_BC_STRING_MAX: ::c_int = 5;\n-pub const USER_COLL_WEIGHTS_MAX: ::c_int = 6;\n-pub const USER_EXPR_NEST_MAX: ::c_int = 7;\n-pub const USER_LINE_MAX: ::c_int = 8;\n-pub const USER_RE_DUP_MAX: ::c_int = 9;\n-pub const USER_POSIX2_VERSION: ::c_int = 10;\n-pub const USER_POSIX2_C_BIND: ::c_int = 11;\n-pub const USER_POSIX2_C_DEV: ::c_int = 12;\n-pub const USER_POSIX2_CHAR_TERM: ::c_int = 13;\n-pub const USER_POSIX2_FORT_DEV: ::c_int = 14;\n-pub const USER_POSIX2_FORT_RUN: ::c_int = 15;\n-pub const USER_POSIX2_LOCALEDEF: ::c_int = 16;\n-pub const USER_POSIX2_SW_DEV: ::c_int = 17;\n-pub const USER_POSIX2_UPE: ::c_int = 18;\n-pub const USER_STREAM_MAX: ::c_int = 19;\n-pub const USER_TZNAME_MAX: ::c_int = 20;\n-pub const USER_MAXID: ::c_int = 21;\n-pub const CTL_P1003_1B_ASYNCHRONOUS_IO: ::c_int = 1;\n-pub const CTL_P1003_1B_MAPPED_FILES: ::c_int = 2;\n-pub const CTL_P1003_1B_MEMLOCK: ::c_int = 3;\n-pub const CTL_P1003_1B_MEMLOCK_RANGE: ::c_int = 4;\n-pub const CTL_P1003_1B_MEMORY_PROTECTION: ::c_int = 5;\n-pub const CTL_P1003_1B_MESSAGE_PASSING: ::c_int = 6;\n-pub const CTL_P1003_1B_PRIORITIZED_IO: ::c_int = 7;\n-pub const CTL_P1003_1B_PRIORITY_SCHEDULING: ::c_int = 8;\n-pub const CTL_P1003_1B_REALTIME_SIGNALS: ::c_int = 9;\n-pub const CTL_P1003_1B_SEMAPHORES: ::c_int = 10;\n-pub const CTL_P1003_1B_FSYNC: ::c_int = 11;\n-pub const CTL_P1003_1B_SHARED_MEMORY_OBJECTS: ::c_int = 12;\n-pub const CTL_P1003_1B_SYNCHRONIZED_IO: ::c_int = 13;\n-pub const CTL_P1003_1B_TIMERS: ::c_int = 14;\n-pub const CTL_P1003_1B_AIO_LISTIO_MAX: ::c_int = 15;\n-pub const CTL_P1003_1B_AIO_MAX: ::c_int = 16;\n-pub const CTL_P1003_1B_AIO_PRIO_DELTA_MAX: ::c_int = 17;\n-pub const CTL_P1003_1B_DELAYTIMER_MAX: ::c_int = 18;\n-pub const CTL_P1003_1B_MQ_OPEN_MAX: ::c_int = 19;\n-pub const CTL_P1003_1B_PAGESIZE: ::c_int = 20;\n-pub const CTL_P1003_1B_RTSIG_MAX: ::c_int = 21;\n-pub const CTL_P1003_1B_SEM_NSEMS_MAX: ::c_int = 22;\n-pub const CTL_P1003_1B_SEM_VALUE_MAX: ::c_int = 23;\n-pub const CTL_P1003_1B_SIGQUEUE_MAX: ::c_int = 24;\n-pub const CTL_P1003_1B_TIMER_MAX: ::c_int = 25;\n-pub const CTL_P1003_1B_MAXID: ::c_int = 26;\n-\n-pub const MSG_NOSIGNAL: ::c_int = 0x20000;\n-\n-extern {\n-    pub fn __error() -> *mut ::c_int;\n-\n-    pub fn mprotect(addr: *const ::c_void, len: ::size_t, prot: ::c_int)\n-                    -> ::c_int;\n-\n-    pub fn clock_getres(clk_id: clockid_t, tp: *mut ::timespec) -> ::c_int;\n-    pub fn clock_gettime(clk_id: clockid_t, tp: *mut ::timespec) -> ::c_int;\n-\n-    pub fn posix_fallocate(fd: ::c_int, offset: ::off_t,\n-                           len: ::off_t) -> ::c_int;\n-    pub fn posix_fadvise(fd: ::c_int, offset: ::off_t, len: ::off_t,\n-                         advise: ::c_int) -> ::c_int;\n-    pub fn mkostemp(template: *mut ::c_char, flags: ::c_int) -> ::c_int;\n-    pub fn mkostemps(template: *mut ::c_char,\n-                     suffixlen: ::c_int,\n-                     flags: ::c_int) -> ::c_int;\n-}\n-\n-cfg_if! {\n-    if #[cfg(target_arch = \"x86\")] {\n-        mod x86;\n-        pub use self::x86::*;\n-    } else if #[cfg(target_arch = \"x86_64\")] {\n-        mod x86_64;\n-        pub use self::x86_64::*;\n-    } else {\n-        // Unknown target_arch\n-    }\n-}"}, {"sha": "8a5e5f9fb8d28fb9b624e02af35b244b95a4f7c0", "filename": "src/vendor/libc/src/unix/bsd/freebsdlike/freebsd/x86.rs", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Ffreebsd%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Ffreebsd%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Ffreebsd%2Fx86.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,31 +0,0 @@\n-pub type c_long = i32;\n-pub type c_ulong = u32;\n-pub type time_t = i32;\n-pub type suseconds_t = i32;\n-\n-s! {\n-    pub struct stat {\n-        pub st_dev: ::dev_t,\n-        pub st_ino: ::ino_t,\n-        pub st_mode: ::mode_t,\n-        pub st_nlink: ::nlink_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::dev_t,\n-        pub st_atime: ::time_t,\n-        pub st_atime_nsec: ::c_long,\n-        pub st_mtime: ::time_t,\n-        pub st_mtime_nsec: ::c_long,\n-        pub st_ctime: ::time_t,\n-        pub st_ctime_nsec: ::c_long,\n-        pub st_size: ::off_t,\n-        pub st_blocks: ::blkcnt_t,\n-        pub st_blksize: ::blksize_t,\n-        pub st_flags: ::fflags_t,\n-        pub st_gen: ::uint32_t,\n-        pub st_lspare: ::int32_t,\n-        pub st_birthtime: ::time_t,\n-        pub st_birthtime_nsec: ::c_long,\n-        __unused: [u8; 8],\n-    }\n-}"}, {"sha": "a2da8452c4d341f0d43736c244226fd723b6f55d", "filename": "src/vendor/libc/src/unix/bsd/freebsdlike/freebsd/x86_64.rs", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Ffreebsd%2Fx86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Ffreebsd%2Fx86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Ffreebsd%2Fx86_64.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,30 +0,0 @@\n-pub type c_long = i64;\n-pub type c_ulong = u64;\n-pub type time_t = i64;\n-pub type suseconds_t = i64;\n-\n-s! {\n-    pub struct stat {\n-        pub st_dev: ::dev_t,\n-        pub st_ino: ::ino_t,\n-        pub st_mode: ::mode_t,\n-        pub st_nlink: ::nlink_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::dev_t,\n-        pub st_atime: ::time_t,\n-        pub st_atime_nsec: ::c_long,\n-        pub st_mtime: ::time_t,\n-        pub st_mtime_nsec: ::c_long,\n-        pub st_ctime: ::time_t,\n-        pub st_ctime_nsec: ::c_long,\n-        pub st_size: ::off_t,\n-        pub st_blocks: ::blkcnt_t,\n-        pub st_blksize: ::blksize_t,\n-        pub st_flags: ::fflags_t,\n-        pub st_gen: ::uint32_t,\n-        pub st_lspare: ::int32_t,\n-        pub st_birthtime: ::time_t,\n-        pub st_birthtime_nsec: ::c_long,\n-    }\n-}"}, {"sha": "2cfb323c061d6ac44935991492c93c735ff4df9a", "filename": "src/vendor/libc/src/unix/bsd/freebsdlike/mod.rs", "status": "removed", "additions": 0, "deletions": 879, "changes": 879, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Ffreebsdlike%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,879 +0,0 @@\n-pub type dev_t = u32;\n-pub type mode_t = u16;\n-pub type pthread_attr_t = *mut ::c_void;\n-pub type rlim_t = i64;\n-pub type pthread_mutex_t = *mut ::c_void;\n-pub type pthread_mutexattr_t = *mut ::c_void;\n-pub type pthread_cond_t = *mut ::c_void;\n-pub type pthread_condattr_t = *mut ::c_void;\n-pub type pthread_rwlock_t = *mut ::c_void;\n-pub type pthread_key_t = ::c_int;\n-pub type tcflag_t = ::c_uint;\n-pub type speed_t = ::c_uint;\n-pub type nl_item = ::c_int;\n-pub type id_t = i64;\n-pub type sem_t = _sem;\n-\n-pub enum timezone {}\n-\n-s! {\n-    pub struct utmpx {\n-        pub ut_type: ::c_short,\n-        pub ut_tv: ::timeval,\n-        pub ut_id: [::c_char; 8],\n-        pub ut_pid: ::pid_t,\n-        pub ut_user: [::c_char; 32],\n-        pub ut_line: [::c_char; 16],\n-        pub ut_host: [::c_char; 128],\n-        pub __ut_spare: [::c_char; 64],\n-    }\n-\n-    pub struct glob_t {\n-        pub gl_pathc:  ::size_t,\n-        pub gl_matchc: ::size_t,\n-        pub gl_offs:   ::size_t,\n-        pub gl_flags:  ::c_int,\n-        pub gl_pathv:  *mut *mut ::c_char,\n-        __unused3: *mut ::c_void,\n-        __unused4: *mut ::c_void,\n-        __unused5: *mut ::c_void,\n-        __unused6: *mut ::c_void,\n-        __unused7: *mut ::c_void,\n-        __unused8: *mut ::c_void,\n-    }\n-\n-    pub struct kevent {\n-        pub ident: ::uintptr_t,\n-        pub filter: ::c_short,\n-        pub flags: ::c_ushort,\n-        pub fflags: ::c_uint,\n-        pub data: ::intptr_t,\n-        pub udata: *mut ::c_void,\n-    }\n-\n-    pub struct sockaddr_storage {\n-        pub ss_len: u8,\n-        pub ss_family: ::sa_family_t,\n-        __ss_pad1: [u8; 6],\n-        __ss_align: i64,\n-        __ss_pad2: [u8; 112],\n-    }\n-\n-    pub struct addrinfo {\n-        pub ai_flags: ::c_int,\n-        pub ai_family: ::c_int,\n-        pub ai_socktype: ::c_int,\n-        pub ai_protocol: ::c_int,\n-        pub ai_addrlen: ::socklen_t,\n-        pub ai_canonname: *mut ::c_char,\n-        pub ai_addr: *mut ::sockaddr,\n-        pub ai_next: *mut addrinfo,\n-    }\n-\n-    pub struct sigset_t {\n-        bits: [u32; 4],\n-    }\n-\n-    pub struct siginfo_t {\n-        pub si_signo: ::c_int,\n-        pub si_errno: ::c_int,\n-        pub si_code: ::c_int,\n-        pub si_pid: ::pid_t,\n-        pub si_uid: ::uid_t,\n-        pub si_status: ::c_int,\n-        pub si_addr: *mut ::c_void,\n-        _pad: [::c_int; 12],\n-    }\n-\n-    pub struct sigaction {\n-        pub sa_sigaction: ::sighandler_t,\n-        pub sa_flags: ::c_int,\n-        pub sa_mask: sigset_t,\n-    }\n-\n-    pub struct stack_t {\n-        pub ss_sp: *mut ::c_char,\n-        pub ss_size: ::size_t,\n-        pub ss_flags: ::c_int,\n-    }\n-\n-    pub struct sched_param {\n-        pub sched_priority: ::c_int,\n-    }\n-\n-    pub struct Dl_info {\n-        pub dli_fname: *const ::c_char,\n-        pub dli_fbase: *mut ::c_void,\n-        pub dli_sname: *const ::c_char,\n-        pub dli_saddr: *mut ::c_void,\n-    }\n-\n-    pub struct sockaddr_in {\n-        pub sin_len: u8,\n-        pub sin_family: ::sa_family_t,\n-        pub sin_port: ::in_port_t,\n-        pub sin_addr: ::in_addr,\n-        pub sin_zero: [::c_char; 8],\n-    }\n-\n-    pub struct termios {\n-        pub c_iflag: ::tcflag_t,\n-        pub c_oflag: ::tcflag_t,\n-        pub c_cflag: ::tcflag_t,\n-        pub c_lflag: ::tcflag_t,\n-        pub c_cc: [::cc_t; ::NCCS],\n-        pub c_ispeed: ::speed_t,\n-        pub c_ospeed: ::speed_t,\n-    }\n-\n-    pub struct flock {\n-        pub l_start: ::off_t,\n-        pub l_len: ::off_t,\n-        pub l_pid: ::pid_t,\n-        pub l_type: ::c_short,\n-        pub l_whence: ::c_short,\n-        #[cfg(not(target_os = \"dragonfly\"))]\n-        pub l_sysid: ::c_int,\n-    }\n-\n-    pub struct sf_hdtr {\n-        pub headers: *mut ::iovec,\n-        pub hdr_cnt: ::c_int,\n-        pub trailers: *mut ::iovec,\n-        pub trl_cnt: ::c_int,\n-    }\n-\n-    pub struct lconv {\n-        pub decimal_point: *mut ::c_char,\n-        pub thousands_sep: *mut ::c_char,\n-        pub grouping: *mut ::c_char,\n-        pub int_curr_symbol: *mut ::c_char,\n-        pub currency_symbol: *mut ::c_char,\n-        pub mon_decimal_point: *mut ::c_char,\n-        pub mon_thousands_sep: *mut ::c_char,\n-        pub mon_grouping: *mut ::c_char,\n-        pub positive_sign: *mut ::c_char,\n-        pub negative_sign: *mut ::c_char,\n-        pub int_frac_digits: ::c_char,\n-        pub frac_digits: ::c_char,\n-        pub p_cs_precedes: ::c_char,\n-        pub p_sep_by_space: ::c_char,\n-        pub n_cs_precedes: ::c_char,\n-        pub n_sep_by_space: ::c_char,\n-        pub p_sign_posn: ::c_char,\n-        pub n_sign_posn: ::c_char,\n-        pub int_p_cs_precedes: ::c_char,\n-        pub int_n_cs_precedes: ::c_char,\n-        pub int_p_sep_by_space: ::c_char,\n-        pub int_n_sep_by_space: ::c_char,\n-        pub int_p_sign_posn: ::c_char,\n-        pub int_n_sign_posn: ::c_char,\n-    }\n-\n-    // internal structure has changed over time\n-    pub struct _sem {\n-        data: [u32; 4],\n-    }\n-}\n-\n-pub const EMPTY: ::c_short = 0;\n-pub const BOOT_TIME: ::c_short = 1;\n-pub const OLD_TIME: ::c_short = 2;\n-pub const NEW_TIME: ::c_short = 3;\n-pub const USER_PROCESS: ::c_short = 4;\n-pub const INIT_PROCESS: ::c_short = 5;\n-pub const LOGIN_PROCESS: ::c_short = 6;\n-pub const DEAD_PROCESS: ::c_short = 7;\n-pub const SHUTDOWN_TIME: ::c_short = 8;\n-\n-pub const LC_COLLATE_MASK: ::c_int = (1 << 0);\n-pub const LC_CTYPE_MASK: ::c_int = (1 << 1);\n-pub const LC_MESSAGES_MASK: ::c_int = (1 << 2);\n-pub const LC_MONETARY_MASK: ::c_int = (1 << 3);\n-pub const LC_NUMERIC_MASK: ::c_int = (1 << 4);\n-pub const LC_TIME_MASK: ::c_int = (1 << 5);\n-pub const LC_ALL_MASK: ::c_int = LC_COLLATE_MASK\n-                               | LC_CTYPE_MASK\n-                               | LC_MESSAGES_MASK\n-                               | LC_MONETARY_MASK\n-                               | LC_NUMERIC_MASK\n-                               | LC_TIME_MASK;\n-\n-pub const CODESET: ::nl_item = 0;\n-pub const D_T_FMT: ::nl_item = 1;\n-pub const D_FMT: ::nl_item = 2;\n-pub const T_FMT: ::nl_item = 3;\n-pub const T_FMT_AMPM: ::nl_item = 4;\n-pub const AM_STR: ::nl_item = 5;\n-pub const PM_STR: ::nl_item = 6;\n-\n-pub const DAY_1: ::nl_item = 7;\n-pub const DAY_2: ::nl_item = 8;\n-pub const DAY_3: ::nl_item = 9;\n-pub const DAY_4: ::nl_item = 10;\n-pub const DAY_5: ::nl_item = 11;\n-pub const DAY_6: ::nl_item = 12;\n-pub const DAY_7: ::nl_item = 13;\n-\n-pub const ABDAY_1: ::nl_item = 14;\n-pub const ABDAY_2: ::nl_item = 15;\n-pub const ABDAY_3: ::nl_item = 16;\n-pub const ABDAY_4: ::nl_item = 17;\n-pub const ABDAY_5: ::nl_item = 18;\n-pub const ABDAY_6: ::nl_item = 19;\n-pub const ABDAY_7: ::nl_item = 20;\n-\n-pub const MON_1: ::nl_item = 21;\n-pub const MON_2: ::nl_item = 22;\n-pub const MON_3: ::nl_item = 23;\n-pub const MON_4: ::nl_item = 24;\n-pub const MON_5: ::nl_item = 25;\n-pub const MON_6: ::nl_item = 26;\n-pub const MON_7: ::nl_item = 27;\n-pub const MON_8: ::nl_item = 28;\n-pub const MON_9: ::nl_item = 29;\n-pub const MON_10: ::nl_item = 30;\n-pub const MON_11: ::nl_item = 31;\n-pub const MON_12: ::nl_item = 32;\n-\n-pub const ABMON_1: ::nl_item = 33;\n-pub const ABMON_2: ::nl_item = 34;\n-pub const ABMON_3: ::nl_item = 35;\n-pub const ABMON_4: ::nl_item = 36;\n-pub const ABMON_5: ::nl_item = 37;\n-pub const ABMON_6: ::nl_item = 38;\n-pub const ABMON_7: ::nl_item = 39;\n-pub const ABMON_8: ::nl_item = 40;\n-pub const ABMON_9: ::nl_item = 41;\n-pub const ABMON_10: ::nl_item = 42;\n-pub const ABMON_11: ::nl_item = 43;\n-pub const ABMON_12: ::nl_item = 44;\n-\n-pub const ERA: ::nl_item = 45;\n-pub const ERA_D_FMT: ::nl_item = 46;\n-pub const ERA_D_T_FMT: ::nl_item = 47;\n-pub const ERA_T_FMT: ::nl_item = 48;\n-pub const ALT_DIGITS: ::nl_item = 49;\n-\n-pub const RADIXCHAR: ::nl_item = 50;\n-pub const THOUSEP: ::nl_item = 51;\n-\n-pub const YESEXPR: ::nl_item = 52;\n-pub const NOEXPR: ::nl_item = 53;\n-\n-pub const YESSTR: ::nl_item = 54;\n-pub const NOSTR: ::nl_item = 55;\n-\n-pub const CRNCYSTR: ::nl_item = 56;\n-\n-pub const D_MD_ORDER: ::nl_item = 57;\n-\n-pub const ALTMON_1: ::nl_item = 58;\n-pub const ALTMON_2: ::nl_item = 59;\n-pub const ALTMON_3: ::nl_item = 60;\n-pub const ALTMON_4: ::nl_item = 61;\n-pub const ALTMON_5: ::nl_item = 62;\n-pub const ALTMON_6: ::nl_item = 63;\n-pub const ALTMON_7: ::nl_item = 64;\n-pub const ALTMON_8: ::nl_item = 65;\n-pub const ALTMON_9: ::nl_item = 66;\n-pub const ALTMON_10: ::nl_item = 67;\n-pub const ALTMON_11: ::nl_item = 68;\n-pub const ALTMON_12: ::nl_item = 69;\n-\n-pub const EXIT_FAILURE: ::c_int = 1;\n-pub const EXIT_SUCCESS: ::c_int = 0;\n-pub const EOF: ::c_int = -1;\n-pub const SEEK_SET: ::c_int = 0;\n-pub const SEEK_CUR: ::c_int = 1;\n-pub const SEEK_END: ::c_int = 2;\n-pub const _IOFBF: ::c_int = 0;\n-pub const _IONBF: ::c_int = 2;\n-pub const _IOLBF: ::c_int = 1;\n-pub const BUFSIZ: ::c_uint = 1024;\n-pub const FOPEN_MAX: ::c_uint = 20;\n-pub const FILENAME_MAX: ::c_uint = 1024;\n-pub const L_tmpnam: ::c_uint = 1024;\n-pub const TMP_MAX: ::c_uint = 308915776;\n-\n-pub const O_RDONLY: ::c_int = 0;\n-pub const O_WRONLY: ::c_int = 1;\n-pub const O_RDWR: ::c_int = 2;\n-pub const O_ACCMODE: ::c_int = 3;\n-pub const O_APPEND: ::c_int = 8;\n-pub const O_CREAT: ::c_int = 512;\n-pub const O_EXCL: ::c_int = 2048;\n-pub const O_NOCTTY: ::c_int = 32768;\n-pub const O_TRUNC: ::c_int = 1024;\n-pub const S_IFIFO: mode_t = 4096;\n-pub const S_IFCHR: mode_t = 8192;\n-pub const S_IFBLK: mode_t = 24576;\n-pub const S_IFDIR: mode_t = 16384;\n-pub const S_IFREG: mode_t = 32768;\n-pub const S_IFLNK: mode_t = 40960;\n-pub const S_IFSOCK: mode_t = 49152;\n-pub const S_IFMT: mode_t = 61440;\n-pub const S_IEXEC: mode_t = 64;\n-pub const S_IWRITE: mode_t = 128;\n-pub const S_IREAD: mode_t = 256;\n-pub const S_IRWXU: mode_t = 448;\n-pub const S_IXUSR: mode_t = 64;\n-pub const S_IWUSR: mode_t = 128;\n-pub const S_IRUSR: mode_t = 256;\n-pub const S_IRWXG: mode_t = 56;\n-pub const S_IXGRP: mode_t = 8;\n-pub const S_IWGRP: mode_t = 16;\n-pub const S_IRGRP: mode_t = 32;\n-pub const S_IRWXO: mode_t = 7;\n-pub const S_IXOTH: mode_t = 1;\n-pub const S_IWOTH: mode_t = 2;\n-pub const S_IROTH: mode_t = 4;\n-pub const F_OK: ::c_int = 0;\n-pub const R_OK: ::c_int = 4;\n-pub const W_OK: ::c_int = 2;\n-pub const X_OK: ::c_int = 1;\n-pub const STDIN_FILENO: ::c_int = 0;\n-pub const STDOUT_FILENO: ::c_int = 1;\n-pub const STDERR_FILENO: ::c_int = 2;\n-pub const F_LOCK: ::c_int = 1;\n-pub const F_TEST: ::c_int = 3;\n-pub const F_TLOCK: ::c_int = 2;\n-pub const F_ULOCK: ::c_int = 0;\n-pub const F_DUPFD_CLOEXEC: ::c_int = 17;\n-pub const SIGHUP: ::c_int = 1;\n-pub const SIGINT: ::c_int = 2;\n-pub const SIGQUIT: ::c_int = 3;\n-pub const SIGILL: ::c_int = 4;\n-pub const SIGABRT: ::c_int = 6;\n-pub const SIGEMT: ::c_int = 7;\n-pub const SIGFPE: ::c_int = 8;\n-pub const SIGKILL: ::c_int = 9;\n-pub const SIGSEGV: ::c_int = 11;\n-pub const SIGPIPE: ::c_int = 13;\n-pub const SIGALRM: ::c_int = 14;\n-pub const SIGTERM: ::c_int = 15;\n-\n-pub const PROT_NONE: ::c_int = 0;\n-pub const PROT_READ: ::c_int = 1;\n-pub const PROT_WRITE: ::c_int = 2;\n-pub const PROT_EXEC: ::c_int = 4;\n-\n-pub const MAP_FILE: ::c_int = 0x0000;\n-pub const MAP_SHARED: ::c_int = 0x0001;\n-pub const MAP_PRIVATE: ::c_int = 0x0002;\n-pub const MAP_FIXED: ::c_int = 0x0010;\n-pub const MAP_ANON: ::c_int = 0x1000;\n-\n-pub const MAP_FAILED: *mut ::c_void = !0 as *mut ::c_void;\n-\n-pub const MCL_CURRENT: ::c_int = 0x0001;\n-pub const MCL_FUTURE: ::c_int = 0x0002;\n-\n-pub const MS_SYNC: ::c_int = 0x0000;\n-pub const MS_ASYNC: ::c_int = 0x0001;\n-pub const MS_INVALIDATE: ::c_int = 0x0002;\n-\n-pub const EPERM: ::c_int = 1;\n-pub const ENOENT: ::c_int = 2;\n-pub const ESRCH: ::c_int = 3;\n-pub const EINTR: ::c_int = 4;\n-pub const EIO: ::c_int = 5;\n-pub const ENXIO: ::c_int = 6;\n-pub const E2BIG: ::c_int = 7;\n-pub const ENOEXEC: ::c_int = 8;\n-pub const EBADF: ::c_int = 9;\n-pub const ECHILD: ::c_int = 10;\n-pub const EDEADLK: ::c_int = 11;\n-pub const ENOMEM: ::c_int = 12;\n-pub const EACCES: ::c_int = 13;\n-pub const EFAULT: ::c_int = 14;\n-pub const ENOTBLK: ::c_int = 15;\n-pub const EBUSY: ::c_int = 16;\n-pub const EEXIST: ::c_int = 17;\n-pub const EXDEV: ::c_int = 18;\n-pub const ENODEV: ::c_int = 19;\n-pub const ENOTDIR: ::c_int = 20;\n-pub const EISDIR: ::c_int = 21;\n-pub const EINVAL: ::c_int = 22;\n-pub const ENFILE: ::c_int = 23;\n-pub const EMFILE: ::c_int = 24;\n-pub const ENOTTY: ::c_int = 25;\n-pub const ETXTBSY: ::c_int = 26;\n-pub const EFBIG: ::c_int = 27;\n-pub const ENOSPC: ::c_int = 28;\n-pub const ESPIPE: ::c_int = 29;\n-pub const EROFS: ::c_int = 30;\n-pub const EMLINK: ::c_int = 31;\n-pub const EPIPE: ::c_int = 32;\n-pub const EDOM: ::c_int = 33;\n-pub const ERANGE: ::c_int = 34;\n-pub const EAGAIN: ::c_int = 35;\n-pub const EWOULDBLOCK: ::c_int = 35;\n-pub const EINPROGRESS: ::c_int = 36;\n-pub const EALREADY: ::c_int = 37;\n-pub const ENOTSOCK: ::c_int = 38;\n-pub const EDESTADDRREQ: ::c_int = 39;\n-pub const EMSGSIZE: ::c_int = 40;\n-pub const EPROTOTYPE: ::c_int = 41;\n-pub const ENOPROTOOPT: ::c_int = 42;\n-pub const EPROTONOSUPPORT: ::c_int = 43;\n-pub const ESOCKTNOSUPPORT: ::c_int = 44;\n-pub const EOPNOTSUPP: ::c_int = 45;\n-pub const EPFNOSUPPORT: ::c_int = 46;\n-pub const EAFNOSUPPORT: ::c_int = 47;\n-pub const EADDRINUSE: ::c_int = 48;\n-pub const EADDRNOTAVAIL: ::c_int = 49;\n-pub const ENETDOWN: ::c_int = 50;\n-pub const ENETUNREACH: ::c_int = 51;\n-pub const ENETRESET: ::c_int = 52;\n-pub const ECONNABORTED: ::c_int = 53;\n-pub const ECONNRESET: ::c_int = 54;\n-pub const ENOBUFS: ::c_int = 55;\n-pub const EISCONN: ::c_int = 56;\n-pub const ENOTCONN: ::c_int = 57;\n-pub const ESHUTDOWN: ::c_int = 58;\n-pub const ETOOMANYREFS: ::c_int = 59;\n-pub const ETIMEDOUT: ::c_int = 60;\n-pub const ECONNREFUSED: ::c_int = 61;\n-pub const ELOOP: ::c_int = 62;\n-pub const ENAMETOOLONG: ::c_int = 63;\n-pub const EHOSTDOWN: ::c_int = 64;\n-pub const EHOSTUNREACH: ::c_int = 65;\n-pub const ENOTEMPTY: ::c_int = 66;\n-pub const EPROCLIM: ::c_int = 67;\n-pub const EUSERS: ::c_int = 68;\n-pub const EDQUOT: ::c_int = 69;\n-pub const ESTALE: ::c_int = 70;\n-pub const EREMOTE: ::c_int = 71;\n-pub const EBADRPC: ::c_int = 72;\n-pub const ERPCMISMATCH: ::c_int = 73;\n-pub const EPROGUNAVAIL: ::c_int = 74;\n-pub const EPROGMISMATCH: ::c_int = 75;\n-pub const EPROCUNAVAIL: ::c_int = 76;\n-pub const ENOLCK: ::c_int = 77;\n-pub const ENOSYS: ::c_int = 78;\n-pub const EFTYPE: ::c_int = 79;\n-pub const EAUTH: ::c_int = 80;\n-pub const ENEEDAUTH: ::c_int = 81;\n-pub const EIDRM: ::c_int = 82;\n-pub const ENOMSG: ::c_int = 83;\n-pub const EOVERFLOW: ::c_int = 84;\n-pub const ECANCELED: ::c_int = 85;\n-pub const EILSEQ: ::c_int = 86;\n-pub const ENOATTR: ::c_int = 87;\n-pub const EDOOFUS: ::c_int = 88;\n-pub const EBADMSG: ::c_int = 89;\n-pub const EMULTIHOP: ::c_int = 90;\n-pub const ENOLINK: ::c_int = 91;\n-pub const EPROTO: ::c_int = 92;\n-\n-pub const EAI_SYSTEM: ::c_int = 11;\n-\n-pub const F_DUPFD: ::c_int = 0;\n-pub const F_GETFD: ::c_int = 1;\n-pub const F_SETFD: ::c_int = 2;\n-pub const F_GETFL: ::c_int = 3;\n-pub const F_SETFL: ::c_int = 4;\n-\n-pub const SIGTRAP: ::c_int = 5;\n-\n-pub const GLOB_APPEND  : ::c_int = 0x0001;\n-pub const GLOB_DOOFFS  : ::c_int = 0x0002;\n-pub const GLOB_ERR     : ::c_int = 0x0004;\n-pub const GLOB_MARK    : ::c_int = 0x0008;\n-pub const GLOB_NOCHECK : ::c_int = 0x0010;\n-pub const GLOB_NOSORT  : ::c_int = 0x0020;\n-pub const GLOB_NOESCAPE: ::c_int = 0x2000;\n-\n-pub const GLOB_NOSPACE : ::c_int = -1;\n-pub const GLOB_ABORTED : ::c_int = -2;\n-pub const GLOB_NOMATCH : ::c_int = -3;\n-\n-pub const POSIX_MADV_NORMAL: ::c_int = 0;\n-pub const POSIX_MADV_RANDOM: ::c_int = 1;\n-pub const POSIX_MADV_SEQUENTIAL: ::c_int = 2;\n-pub const POSIX_MADV_WILLNEED: ::c_int = 3;\n-pub const POSIX_MADV_DONTNEED: ::c_int = 4;\n-\n-pub const _SC_IOV_MAX: ::c_int = 56;\n-pub const _SC_GETGR_R_SIZE_MAX: ::c_int = 70;\n-pub const _SC_GETPW_R_SIZE_MAX: ::c_int = 71;\n-pub const _SC_LOGIN_NAME_MAX: ::c_int = 73;\n-pub const _SC_MQ_PRIO_MAX: ::c_int = 75;\n-pub const _SC_NPROCESSORS_ONLN: ::c_int = 58;\n-pub const _SC_THREAD_ATTR_STACKADDR: ::c_int = 82;\n-pub const _SC_THREAD_ATTR_STACKSIZE: ::c_int = 83;\n-pub const _SC_THREAD_DESTRUCTOR_ITERATIONS: ::c_int = 85;\n-pub const _SC_THREAD_KEYS_MAX: ::c_int = 86;\n-pub const _SC_THREAD_PRIO_INHERIT: ::c_int = 87;\n-pub const _SC_THREAD_PRIO_PROTECT: ::c_int = 88;\n-pub const _SC_THREAD_PRIORITY_SCHEDULING: ::c_int = 89;\n-pub const _SC_THREAD_PROCESS_SHARED: ::c_int = 90;\n-pub const _SC_THREAD_SAFE_FUNCTIONS: ::c_int = 91;\n-pub const _SC_THREAD_STACK_MIN: ::c_int = 93;\n-pub const _SC_THREAD_THREADS_MAX: ::c_int = 94;\n-pub const _SC_THREADS: ::c_int = 96;\n-pub const _SC_TTY_NAME_MAX: ::c_int = 101;\n-pub const _SC_ATEXIT_MAX: ::c_int = 107;\n-pub const _SC_XOPEN_CRYPT: ::c_int = 108;\n-pub const _SC_XOPEN_ENH_I18N: ::c_int = 109;\n-pub const _SC_XOPEN_LEGACY: ::c_int = 110;\n-pub const _SC_XOPEN_REALTIME: ::c_int = 111;\n-pub const _SC_XOPEN_REALTIME_THREADS: ::c_int = 112;\n-pub const _SC_XOPEN_SHM: ::c_int = 113;\n-pub const _SC_XOPEN_UNIX: ::c_int = 115;\n-pub const _SC_XOPEN_VERSION: ::c_int = 116;\n-pub const _SC_XOPEN_XCU_VERSION: ::c_int = 117;\n-\n-pub const PTHREAD_CREATE_JOINABLE: ::c_int = 0;\n-pub const PTHREAD_CREATE_DETACHED: ::c_int = 1;\n-\n-pub const RLIMIT_CPU: ::c_int = 0;\n-pub const RLIMIT_FSIZE: ::c_int = 1;\n-pub const RLIMIT_DATA: ::c_int = 2;\n-pub const RLIMIT_STACK: ::c_int = 3;\n-pub const RLIMIT_CORE: ::c_int = 4;\n-pub const RLIMIT_RSS: ::c_int = 5;\n-pub const RLIMIT_MEMLOCK: ::c_int = 6;\n-pub const RLIMIT_NPROC: ::c_int = 7;\n-pub const RLIMIT_NOFILE: ::c_int = 8;\n-pub const RLIMIT_SBSIZE: ::c_int = 9;\n-pub const RLIMIT_VMEM: ::c_int = 10;\n-pub const RLIMIT_AS: ::c_int = RLIMIT_VMEM;\n-pub const RLIM_INFINITY: rlim_t = 0x7fff_ffff_ffff_ffff;\n-\n-pub const RUSAGE_SELF: ::c_int = 0;\n-pub const RUSAGE_CHILDREN: ::c_int = -1;\n-\n-pub const MADV_NORMAL: ::c_int = 0;\n-pub const MADV_RANDOM: ::c_int = 1;\n-pub const MADV_SEQUENTIAL: ::c_int = 2;\n-pub const MADV_WILLNEED: ::c_int = 3;\n-pub const MADV_DONTNEED: ::c_int = 4;\n-pub const MADV_FREE: ::c_int = 5;\n-pub const MADV_NOSYNC: ::c_int = 6;\n-pub const MADV_AUTOSYNC: ::c_int = 7;\n-pub const MADV_NOCORE: ::c_int = 8;\n-pub const MADV_CORE: ::c_int = 9;\n-\n-pub const MINCORE_INCORE: ::c_int =  0x1;\n-pub const MINCORE_REFERENCED: ::c_int = 0x2;\n-pub const MINCORE_MODIFIED: ::c_int = 0x4;\n-pub const MINCORE_REFERENCED_OTHER: ::c_int = 0x8;\n-pub const MINCORE_MODIFIED_OTHER: ::c_int = 0x10;\n-pub const MINCORE_SUPER: ::c_int = 0x20;\n-\n-pub const AF_INET: ::c_int = 2;\n-pub const AF_INET6: ::c_int = 28;\n-pub const AF_UNIX: ::c_int = 1;\n-pub const SOCK_STREAM: ::c_int = 1;\n-pub const SOCK_DGRAM: ::c_int = 2;\n-pub const SOCK_RAW: ::c_int = 3;\n-pub const SOCK_SEQPACKET: ::c_int = 5;\n-pub const IPPROTO_TCP: ::c_int = 6;\n-pub const IPPROTO_IP: ::c_int = 0;\n-pub const IPPROTO_IPV6: ::c_int = 41;\n-pub const IP_MULTICAST_TTL: ::c_int = 10;\n-pub const IP_MULTICAST_LOOP: ::c_int = 11;\n-pub const IP_TTL: ::c_int = 4;\n-pub const IP_HDRINCL: ::c_int = 2;\n-pub const IP_ADD_MEMBERSHIP: ::c_int = 12;\n-pub const IP_DROP_MEMBERSHIP: ::c_int = 13;\n-pub const IPV6_JOIN_GROUP: ::c_int = 12;\n-pub const IPV6_LEAVE_GROUP: ::c_int = 13;\n-\n-pub const TCP_NODELAY: ::c_int = 1;\n-pub const TCP_KEEPIDLE: ::c_int = 256;\n-pub const SOL_SOCKET: ::c_int = 0xffff;\n-pub const SO_DEBUG: ::c_int = 0x01;\n-pub const SO_ACCEPTCONN: ::c_int = 0x0002;\n-pub const SO_REUSEADDR: ::c_int = 0x0004;\n-pub const SO_KEEPALIVE: ::c_int = 0x0008;\n-pub const SO_DONTROUTE: ::c_int = 0x0010;\n-pub const SO_BROADCAST: ::c_int = 0x0020;\n-pub const SO_USELOOPBACK: ::c_int = 0x0040;\n-pub const SO_LINGER: ::c_int = 0x0080;\n-pub const SO_OOBINLINE: ::c_int = 0x0100;\n-pub const SO_REUSEPORT: ::c_int = 0x0200;\n-pub const SO_SNDBUF: ::c_int = 0x1001;\n-pub const SO_RCVBUF: ::c_int = 0x1002;\n-pub const SO_SNDLOWAT: ::c_int = 0x1003;\n-pub const SO_RCVLOWAT: ::c_int = 0x1004;\n-pub const SO_SNDTIMEO: ::c_int = 0x1005;\n-pub const SO_RCVTIMEO: ::c_int = 0x1006;\n-pub const SO_ERROR: ::c_int = 0x1007;\n-pub const SO_TYPE: ::c_int = 0x1008;\n-\n-pub const IFF_LOOPBACK: ::c_int = 0x8;\n-\n-pub const SHUT_RD: ::c_int = 0;\n-pub const SHUT_WR: ::c_int = 1;\n-pub const SHUT_RDWR: ::c_int = 2;\n-\n-pub const LOCK_SH: ::c_int = 1;\n-pub const LOCK_EX: ::c_int = 2;\n-pub const LOCK_NB: ::c_int = 4;\n-pub const LOCK_UN: ::c_int = 8;\n-\n-pub const O_SYNC: ::c_int = 128;\n-pub const O_NONBLOCK: ::c_int = 4;\n-\n-pub const MAP_COPY: ::c_int = 0x0002;\n-pub const MAP_RENAME: ::c_int = 0x0020;\n-pub const MAP_NORESERVE: ::c_int = 0x0040;\n-pub const MAP_HASSEMAPHORE: ::c_int = 0x0200;\n-pub const MAP_STACK: ::c_int = 0x0400;\n-pub const MAP_NOSYNC: ::c_int = 0x0800;\n-pub const MAP_NOCORE: ::c_int = 0x020000;\n-\n-pub const IPPROTO_RAW: ::c_int = 255;\n-\n-pub const _SC_ARG_MAX: ::c_int = 1;\n-pub const _SC_CHILD_MAX: ::c_int = 2;\n-pub const _SC_CLK_TCK: ::c_int = 3;\n-pub const _SC_NGROUPS_MAX: ::c_int = 4;\n-pub const _SC_OPEN_MAX: ::c_int = 5;\n-pub const _SC_JOB_CONTROL: ::c_int = 6;\n-pub const _SC_SAVED_IDS: ::c_int = 7;\n-pub const _SC_VERSION: ::c_int = 8;\n-pub const _SC_BC_BASE_MAX: ::c_int = 9;\n-pub const _SC_BC_DIM_MAX: ::c_int = 10;\n-pub const _SC_BC_SCALE_MAX: ::c_int = 11;\n-pub const _SC_BC_STRING_MAX: ::c_int = 12;\n-pub const _SC_COLL_WEIGHTS_MAX: ::c_int = 13;\n-pub const _SC_EXPR_NEST_MAX: ::c_int = 14;\n-pub const _SC_LINE_MAX: ::c_int = 15;\n-pub const _SC_RE_DUP_MAX: ::c_int = 16;\n-pub const _SC_2_VERSION: ::c_int = 17;\n-pub const _SC_2_C_BIND: ::c_int = 18;\n-pub const _SC_2_C_DEV: ::c_int = 19;\n-pub const _SC_2_CHAR_TERM: ::c_int = 20;\n-pub const _SC_2_FORT_DEV: ::c_int = 21;\n-pub const _SC_2_FORT_RUN: ::c_int = 22;\n-pub const _SC_2_LOCALEDEF: ::c_int = 23;\n-pub const _SC_2_SW_DEV: ::c_int = 24;\n-pub const _SC_2_UPE: ::c_int = 25;\n-pub const _SC_STREAM_MAX: ::c_int = 26;\n-pub const _SC_TZNAME_MAX: ::c_int = 27;\n-pub const _SC_ASYNCHRONOUS_IO: ::c_int = 28;\n-pub const _SC_MAPPED_FILES: ::c_int = 29;\n-pub const _SC_MEMLOCK: ::c_int = 30;\n-pub const _SC_MEMLOCK_RANGE: ::c_int = 31;\n-pub const _SC_MEMORY_PROTECTION: ::c_int = 32;\n-pub const _SC_MESSAGE_PASSING: ::c_int = 33;\n-pub const _SC_PRIORITIZED_IO: ::c_int = 34;\n-pub const _SC_PRIORITY_SCHEDULING: ::c_int = 35;\n-pub const _SC_REALTIME_SIGNALS: ::c_int = 36;\n-pub const _SC_SEMAPHORES: ::c_int = 37;\n-pub const _SC_FSYNC: ::c_int = 38;\n-pub const _SC_SHARED_MEMORY_OBJECTS: ::c_int = 39;\n-pub const _SC_SYNCHRONIZED_IO: ::c_int = 40;\n-pub const _SC_TIMERS: ::c_int = 41;\n-pub const _SC_AIO_LISTIO_MAX: ::c_int = 42;\n-pub const _SC_AIO_MAX: ::c_int = 43;\n-pub const _SC_AIO_PRIO_DELTA_MAX: ::c_int = 44;\n-pub const _SC_DELAYTIMER_MAX: ::c_int = 45;\n-pub const _SC_MQ_OPEN_MAX: ::c_int = 46;\n-pub const _SC_PAGESIZE: ::c_int = 47;\n-pub const _SC_PAGE_SIZE: ::c_int = _SC_PAGESIZE;\n-pub const _SC_RTSIG_MAX: ::c_int = 48;\n-pub const _SC_SEM_NSEMS_MAX: ::c_int = 49;\n-pub const _SC_SEM_VALUE_MAX: ::c_int = 50;\n-pub const _SC_SIGQUEUE_MAX: ::c_int = 51;\n-pub const _SC_TIMER_MAX: ::c_int = 52;\n-pub const _SC_HOST_NAME_MAX: ::c_int = 72;\n-\n-pub const PTHREAD_MUTEX_INITIALIZER: pthread_mutex_t = 0 as *mut _;\n-pub const PTHREAD_COND_INITIALIZER: pthread_cond_t = 0 as *mut _;\n-pub const PTHREAD_RWLOCK_INITIALIZER: pthread_rwlock_t = 0 as *mut _;\n-pub const PTHREAD_MUTEX_ERRORCHECK: ::c_int = 1;\n-pub const PTHREAD_MUTEX_RECURSIVE: ::c_int = 2;\n-pub const PTHREAD_MUTEX_NORMAL: ::c_int = 3;\n-pub const PTHREAD_MUTEX_ADAPTIVE_NP: ::c_int = 4;\n-pub const PTHREAD_MUTEX_DEFAULT: ::c_int = PTHREAD_MUTEX_ERRORCHECK;\n-\n-pub const SCHED_FIFO: ::c_int = 1;\n-pub const SCHED_OTHER: ::c_int = 2;\n-pub const SCHED_RR: ::c_int = 3;\n-\n-pub const FD_SETSIZE: usize = 1024;\n-\n-pub const ST_NOSUID: ::c_ulong = 2;\n-\n-pub const NI_MAXHOST: ::size_t = 1025;\n-\n-pub const RTLD_LOCAL: ::c_int = 0;\n-pub const RTLD_NODELETE: ::c_int = 0x1000;\n-pub const RTLD_NOLOAD: ::c_int = 0x2000;\n-pub const RTLD_GLOBAL: ::c_int = 0x100;\n-\n-pub const LOG_NTP: ::c_int = 12 << 3;\n-pub const LOG_SECURITY: ::c_int = 13 << 3;\n-pub const LOG_CONSOLE: ::c_int = 14 << 3;\n-pub const LOG_NFACILITIES: ::c_int = 24;\n-\n-pub const TIOCGWINSZ: ::c_ulong = 0x40087468;\n-pub const TIOCSWINSZ: ::c_ulong = 0x80087467;\n-\n-pub const SEM_FAILED: *mut sem_t = 0 as *mut sem_t;\n-\n-f! {\n-    pub fn WSTOPSIG(status: ::c_int) -> ::c_int {\n-        status >> 8\n-    }\n-\n-    pub fn WIFSIGNALED(status: ::c_int) -> bool {\n-        (status & 0o177) != 0o177 && (status & 0o177) != 0\n-    }\n-\n-    pub fn WIFSTOPPED(status: ::c_int) -> bool {\n-        (status & 0o177) == 0o177\n-    }\n-}\n-\n-extern {\n-    pub fn lutimes(file: *const ::c_char, times: *const ::timeval) -> ::c_int;\n-    pub fn endutxent();\n-    pub fn getutxent() -> *mut utmpx;\n-    pub fn getutxid(ut: *const utmpx) -> *mut utmpx;\n-    pub fn getutxline(ut: *const utmpx) -> *mut utmpx;\n-    pub fn pututxline(ut: *const utmpx) -> *mut utmpx;\n-    pub fn setutxent();\n-    pub fn getutxuser(user: *const ::c_char) -> *mut utmpx;\n-    pub fn setutxdb(_type: ::c_int, file: *const ::c_char) -> ::c_int;\n-}\n-\n-#[link(name = \"util\")]\n-extern {\n-    pub fn getnameinfo(sa: *const ::sockaddr,\n-                       salen: ::socklen_t,\n-                       host: *mut ::c_char,\n-                       hostlen: ::size_t,\n-                       serv: *mut ::c_char,\n-                       servlen: ::size_t,\n-                       flags: ::c_int) -> ::c_int;\n-    pub fn kevent(kq: ::c_int,\n-                  changelist: *const ::kevent,\n-                  nchanges: ::c_int,\n-                  eventlist: *mut ::kevent,\n-                  nevents: ::c_int,\n-                  timeout: *const ::timespec) -> ::c_int;\n-    pub fn mincore(addr: *const ::c_void, len: ::size_t,\n-                   vec: *mut ::c_char) -> ::c_int;\n-    pub fn sysctlnametomib(name: *const ::c_char,\n-                           mibp: *mut ::c_int,\n-                           sizep: *mut ::size_t)\n-                           -> ::c_int;\n-    pub fn shm_open(name: *const ::c_char, oflag: ::c_int, mode: ::mode_t)\n-                    -> ::c_int;\n-    pub fn sysctl(name: *const ::c_int,\n-                  namelen: ::c_uint,\n-                  oldp: *mut ::c_void,\n-                  oldlenp: *mut ::size_t,\n-                  newp: *const ::c_void,\n-                  newlen: ::size_t)\n-                  -> ::c_int;\n-    pub fn sysctlbyname(name: *const ::c_char,\n-                        oldp: *mut ::c_void,\n-                        oldlenp: *mut ::size_t,\n-                        newp: *const ::c_void,\n-                        newlen: ::size_t)\n-                        -> ::c_int;\n-    pub fn sched_setscheduler(pid: ::pid_t,\n-                              policy: ::c_int,\n-                              param: *const sched_param) -> ::c_int;\n-    pub fn sched_getscheduler(pid: ::pid_t) -> ::c_int;\n-    pub fn memrchr(cx: *const ::c_void,\n-                   c: ::c_int,\n-                   n: ::size_t) -> *mut ::c_void;\n-    pub fn sendfile(fd: ::c_int,\n-                    s: ::c_int,\n-                    offset: ::off_t,\n-                    nbytes: ::size_t,\n-                    hdtr: *mut ::sf_hdtr,\n-                    sbytes: *mut ::off_t,\n-                    flags: ::c_int) -> ::c_int;\n-    pub fn sigtimedwait(set: *const sigset_t,\n-                        info: *mut siginfo_t,\n-                        timeout: *const ::timespec) -> ::c_int;\n-    pub fn sigwaitinfo(set: *const sigset_t,\n-                       info: *mut siginfo_t) -> ::c_int;\n-    pub fn openpty(amaster: *mut ::c_int,\n-                   aslave: *mut ::c_int,\n-                   name: *mut ::c_char,\n-                   termp: *mut termios,\n-                   winp: *mut ::winsize) -> ::c_int;\n-    pub fn forkpty(amaster: *mut ::c_int,\n-                   name: *mut ::c_char,\n-                   termp: *mut termios,\n-                   winp: *mut ::winsize) -> ::pid_t;\n-    pub fn nl_langinfo_l(item: ::nl_item, locale: ::locale_t) -> *mut ::c_char;\n-    pub fn duplocale(base: ::locale_t) -> ::locale_t;\n-    pub fn freelocale(loc: ::locale_t) -> ::c_int;\n-    pub fn newlocale(mask: ::c_int,\n-                     locale: *const ::c_char,\n-                     base: ::locale_t) -> ::locale_t;\n-    pub fn uselocale(loc: ::locale_t) -> ::locale_t;\n-    pub fn querylocale(mask: ::c_int, loc: ::locale_t) -> *const ::c_char;\n-    pub fn pthread_set_name_np(tid: ::pthread_t, name: *const ::c_char);\n-    pub fn pthread_attr_get_np(tid: ::pthread_t,\n-                               attr: *mut ::pthread_attr_t) -> ::c_int;\n-    pub fn pthread_attr_getguardsize(attr: *const ::pthread_attr_t,\n-                                     guardsize: *mut ::size_t) -> ::c_int;\n-    pub fn pthread_attr_getstack(attr: *const ::pthread_attr_t,\n-                                 stackaddr: *mut *mut ::c_void,\n-                                 stacksize: *mut ::size_t) -> ::c_int;\n-    pub fn getpriority(which: ::c_int, who: ::c_int) -> ::c_int;\n-    pub fn setpriority(which: ::c_int, who: ::c_int, prio: ::c_int) -> ::c_int;\n-\n-    pub fn openat(dirfd: ::c_int, pathname: *const ::c_char,\n-                  flags: ::c_int, ...) -> ::c_int;\n-    pub fn faccessat(dirfd: ::c_int, pathname: *const ::c_char,\n-                     mode: ::c_int, flags: ::c_int) -> ::c_int;\n-    pub fn fchmodat(dirfd: ::c_int, pathname: *const ::c_char,\n-                    mode: ::mode_t, flags: ::c_int) -> ::c_int;\n-    pub fn fchownat(dirfd: ::c_int, pathname: *const ::c_char,\n-                    owner: ::uid_t, group: ::gid_t,\n-                    flags: ::c_int) -> ::c_int;\n-    pub fn fstatat(dirfd: ::c_int, pathname: *const ::c_char,\n-                   buf: *mut stat, flags: ::c_int) -> ::c_int;\n-    pub fn linkat(olddirfd: ::c_int, oldpath: *const ::c_char,\n-                  newdirfd: ::c_int, newpath: *const ::c_char,\n-                  flags: ::c_int) -> ::c_int;\n-   pub fn mkdirat(dirfd: ::c_int, pathname: *const ::c_char,\n-                  mode: ::mode_t) -> ::c_int;\n-   pub fn mknodat(dirfd: ::c_int, pathname: *const ::c_char,\n-                 mode: ::mode_t, dev: dev_t) -> ::c_int;\n-   pub fn readlinkat(dirfd: ::c_int, pathname: *const ::c_char,\n-                     buf: *mut ::c_char, bufsiz: ::size_t) -> ::ssize_t;\n-   pub fn renameat(olddirfd: ::c_int, oldpath: *const ::c_char,\n-                   newdirfd: ::c_int, newpath: *const ::c_char)\n-                   -> ::c_int;\n-   pub fn symlinkat(target: *const ::c_char, newdirfd: ::c_int,\n-                    linkpath: *const ::c_char) -> ::c_int;\n-   pub fn unlinkat(dirfd: ::c_int, pathname: *const ::c_char,\n-                   flags: ::c_int) -> ::c_int;\n-   pub fn mkfifoat(dirfd: ::c_int, pathname: *const ::c_char,\n-                   mode: ::mode_t) -> ::c_int;\n-    pub fn pthread_condattr_getclock(attr: *const pthread_condattr_t,\n-                                     clock_id: *mut clockid_t) -> ::c_int;\n-    pub fn pthread_condattr_setclock(attr: *mut pthread_condattr_t,\n-                                     clock_id: clockid_t) -> ::c_int;\n-    pub fn sethostname(name: *const ::c_char, len: ::c_int) -> ::c_int;\n-    pub fn sem_timedwait(sem: *mut sem_t,\n-                         abstime: *const ::timespec) -> ::c_int;\n-    pub fn pthread_mutex_timedlock(lock: *mut pthread_mutex_t,\n-                                   abstime: *const ::timespec) -> ::c_int;\n-}\n-\n-cfg_if! {\n-    if #[cfg(target_os = \"freebsd\")] {\n-        mod freebsd;\n-        pub use self::freebsd::*;\n-    } else if #[cfg(target_os = \"dragonfly\")] {\n-        mod dragonfly;\n-        pub use self::dragonfly::*;\n-    } else {\n-        // ...\n-    }\n-}"}, {"sha": "0616cd3518428cb8447133c477cf30c0848c1442", "filename": "src/vendor/libc/src/unix/bsd/mod.rs", "status": "removed", "additions": 0, "deletions": 368, "changes": 368, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,368 +0,0 @@\n-use dox::mem;\n-\n-pub type c_char = i8;\n-pub type wchar_t = i32;\n-pub type off_t = i64;\n-pub type useconds_t = u32;\n-pub type blkcnt_t = i64;\n-pub type socklen_t = u32;\n-pub type sa_family_t = u8;\n-pub type pthread_t = ::uintptr_t;\n-pub type nfds_t = ::c_uint;\n-\n-s! {\n-    pub struct sockaddr {\n-        pub sa_len: u8,\n-        pub sa_family: sa_family_t,\n-        pub sa_data: [::c_char; 14],\n-    }\n-\n-    pub struct sockaddr_in6 {\n-        pub sin6_len: u8,\n-        pub sin6_family: sa_family_t,\n-        pub sin6_port: ::in_port_t,\n-        pub sin6_flowinfo: u32,\n-        pub sin6_addr: ::in6_addr,\n-        pub sin6_scope_id: u32,\n-    }\n-\n-    pub struct sockaddr_un {\n-        pub sun_len: u8,\n-        pub sun_family: sa_family_t,\n-        pub sun_path: [c_char; 104]\n-    }\n-\n-    pub struct passwd {\n-        pub pw_name: *mut ::c_char,\n-        pub pw_passwd: *mut ::c_char,\n-        pub pw_uid: ::uid_t,\n-        pub pw_gid: ::gid_t,\n-        pub pw_change: ::time_t,\n-        pub pw_class: *mut ::c_char,\n-        pub pw_gecos: *mut ::c_char,\n-        pub pw_dir: *mut ::c_char,\n-        pub pw_shell: *mut ::c_char,\n-        pub pw_expire: ::time_t,\n-\n-        #[cfg(not(any(target_os = \"macos\",\n-                      target_os = \"ios\",\n-                      target_os = \"netbsd\",\n-                      target_os = \"openbsd\")))]\n-        pub pw_fields: ::c_int,\n-    }\n-\n-    pub struct ifaddrs {\n-        pub ifa_next: *mut ifaddrs,\n-        pub ifa_name: *mut ::c_char,\n-        pub ifa_flags: ::c_uint,\n-        pub ifa_addr: *mut ::sockaddr,\n-        pub ifa_netmask: *mut ::sockaddr,\n-        pub ifa_dstaddr: *mut ::sockaddr,\n-        pub ifa_data: *mut ::c_void\n-    }\n-\n-    pub struct fd_set {\n-        #[cfg(all(target_pointer_width = \"64\",\n-                  any(target_os = \"freebsd\", target_os = \"dragonfly\")))]\n-        fds_bits: [i64; FD_SETSIZE / 64],\n-        #[cfg(not(all(target_pointer_width = \"64\",\n-                      any(target_os = \"freebsd\", target_os = \"dragonfly\"))))]\n-        fds_bits: [i32; FD_SETSIZE / 32],\n-    }\n-\n-    pub struct tm {\n-        pub tm_sec: ::c_int,\n-        pub tm_min: ::c_int,\n-        pub tm_hour: ::c_int,\n-        pub tm_mday: ::c_int,\n-        pub tm_mon: ::c_int,\n-        pub tm_year: ::c_int,\n-        pub tm_wday: ::c_int,\n-        pub tm_yday: ::c_int,\n-        pub tm_isdst: ::c_int,\n-        pub tm_gmtoff: ::c_long,\n-        pub tm_zone: *mut ::c_char,\n-    }\n-\n-    pub struct utsname {\n-        #[cfg(not(target_os = \"dragonfly\"))]\n-        pub sysname: [::c_char; 256],\n-        #[cfg(target_os = \"dragonfly\")]\n-        pub sysname: [::c_char; 32],\n-        #[cfg(not(target_os = \"dragonfly\"))]\n-        pub nodename: [::c_char; 256],\n-        #[cfg(target_os = \"dragonfly\")]\n-        pub nodename: [::c_char; 32],\n-        #[cfg(not(target_os = \"dragonfly\"))]\n-        pub release: [::c_char; 256],\n-        #[cfg(target_os = \"dragonfly\")]\n-        pub release: [::c_char; 32],\n-        #[cfg(not(target_os = \"dragonfly\"))]\n-        pub version: [::c_char; 256],\n-        #[cfg(target_os = \"dragonfly\")]\n-        pub version: [::c_char; 32],\n-        #[cfg(not(target_os = \"dragonfly\"))]\n-        pub machine: [::c_char; 256],\n-        #[cfg(target_os = \"dragonfly\")]\n-        pub machine: [::c_char; 32],\n-    }\n-\n-    pub struct msghdr {\n-        pub msg_name: *mut ::c_void,\n-        pub msg_namelen: ::socklen_t,\n-        pub msg_iov: *mut ::iovec,\n-        pub msg_iovlen: ::c_int,\n-        pub msg_control: *mut ::c_void,\n-        pub msg_controllen: ::socklen_t,\n-        pub msg_flags: ::c_int,\n-    }\n-\n-    pub struct fsid_t {\n-        __fsid_val: [::int32_t; 2],\n-    }\n-\n-    pub struct if_nameindex {\n-        pub if_index: ::c_uint,\n-        pub if_name: *mut ::c_char,\n-    }\n-}\n-\n-pub const LC_ALL: ::c_int = 0;\n-pub const LC_COLLATE: ::c_int = 1;\n-pub const LC_CTYPE: ::c_int = 2;\n-pub const LC_MONETARY: ::c_int = 3;\n-pub const LC_NUMERIC: ::c_int = 4;\n-pub const LC_TIME: ::c_int = 5;\n-pub const LC_MESSAGES: ::c_int = 6;\n-\n-pub const FIOCLEX: ::c_ulong = 0x20006601;\n-pub const FIONBIO: ::c_ulong = 0x8004667e;\n-\n-pub const PATH_MAX: ::c_int = 1024;\n-\n-pub const SA_ONSTACK: ::c_int = 0x0001;\n-pub const SA_SIGINFO: ::c_int = 0x0040;\n-pub const SA_RESTART: ::c_int = 0x0002;\n-pub const SA_RESETHAND: ::c_int = 0x0004;\n-pub const SA_NOCLDSTOP: ::c_int = 0x0008;\n-pub const SA_NODEFER: ::c_int = 0x0010;\n-pub const SA_NOCLDWAIT: ::c_int = 0x0020;\n-\n-pub const SS_ONSTACK: ::c_int = 1;\n-pub const SS_DISABLE: ::c_int = 4;\n-\n-pub const SIGCHLD: ::c_int = 20;\n-pub const SIGBUS: ::c_int = 10;\n-pub const SIGUSR1: ::c_int = 30;\n-pub const SIGUSR2: ::c_int = 31;\n-pub const SIGCONT: ::c_int = 19;\n-pub const SIGSTOP: ::c_int = 17;\n-pub const SIGTSTP: ::c_int = 18;\n-pub const SIGURG: ::c_int = 16;\n-pub const SIGIO: ::c_int = 23;\n-pub const SIGSYS: ::c_int = 12;\n-pub const SIGTTIN: ::c_int = 21;\n-pub const SIGTTOU: ::c_int = 22;\n-pub const SIGXCPU: ::c_int = 24;\n-pub const SIGXFSZ: ::c_int = 25;\n-pub const SIGVTALRM: ::c_int = 26;\n-pub const SIGPROF: ::c_int = 27;\n-pub const SIGWINCH: ::c_int = 28;\n-pub const SIGINFO: ::c_int = 29;\n-\n-pub const SIG_SETMASK: ::c_int = 3;\n-pub const SIG_BLOCK: ::c_int = 0x1;\n-pub const SIG_UNBLOCK: ::c_int = 0x2;\n-\n-pub const IPV6_MULTICAST_LOOP: ::c_int = 11;\n-pub const IPV6_V6ONLY: ::c_int = 27;\n-\n-pub const ST_RDONLY: ::c_ulong = 1;\n-\n-pub const NCCS: usize = 20;\n-\n-pub const O_ASYNC: ::c_int = 0x40;\n-pub const O_FSYNC: ::c_int = 0x80;\n-pub const O_NDELAY: ::c_int = 0x4;\n-pub const O_NOFOLLOW: ::c_int = 0x100;\n-\n-pub const F_GETOWN: ::c_int = 5;\n-pub const F_SETOWN: ::c_int = 6;\n-\n-pub const MNT_FORCE: ::c_int = 0x80000;\n-\n-pub const Q_SYNC: ::c_int = 0x600;\n-pub const Q_QUOTAON: ::c_int = 0x100;\n-pub const Q_QUOTAOFF: ::c_int = 0x200;\n-\n-pub const TCIOFF: ::c_int = 3;\n-pub const TCION: ::c_int = 4;\n-pub const TCOOFF: ::c_int = 1;\n-pub const TCOON: ::c_int = 2;\n-pub const TCIFLUSH: ::c_int = 1;\n-pub const TCOFLUSH: ::c_int = 2;\n-pub const TCIOFLUSH: ::c_int = 3;\n-pub const TCSANOW: ::c_int = 0;\n-pub const TCSADRAIN: ::c_int = 1;\n-pub const TCSAFLUSH: ::c_int = 2;\n-pub const VEOF: usize = 0;\n-pub const VEOL: usize = 1;\n-pub const VEOL2: usize = 2;\n-pub const VERASE: usize = 3;\n-pub const VWERASE: usize = 4;\n-pub const VKILL: usize = 5;\n-pub const VREPRINT: usize = 6;\n-pub const VINTR: usize = 8;\n-pub const VQUIT: usize = 9;\n-pub const VSUSP: usize = 10;\n-pub const VSTART: usize = 12;\n-pub const VSTOP: usize = 13;\n-pub const VLNEXT: usize = 14;\n-pub const VDISCARD: usize = 15;\n-pub const VMIN: usize = 16;\n-pub const VTIME: usize = 17;\n-pub const IGNBRK: ::tcflag_t = 0x00000001;\n-pub const BRKINT: ::tcflag_t = 0x00000002;\n-pub const IGNPAR: ::tcflag_t = 0x00000004;\n-pub const PARMRK: ::tcflag_t = 0x00000008;\n-pub const INPCK: ::tcflag_t = 0x00000010;\n-pub const ISTRIP: ::tcflag_t = 0x00000020;\n-pub const INLCR: ::tcflag_t = 0x00000040;\n-pub const IGNCR: ::tcflag_t = 0x00000080;\n-pub const ICRNL: ::tcflag_t = 0x00000100;\n-pub const IXON: ::tcflag_t = 0x00000200;\n-pub const IXOFF: ::tcflag_t = 0x00000400;\n-pub const IXANY: ::tcflag_t = 0x00000800;\n-pub const IMAXBEL: ::tcflag_t = 0x00002000;\n-pub const OPOST: ::tcflag_t = 0x1;\n-pub const ONLCR: ::tcflag_t = 0x2;\n-pub const CSIZE: ::tcflag_t = 0x00000300;\n-pub const CS5: ::tcflag_t = 0x00000000;\n-pub const CS6: ::tcflag_t = 0x00000100;\n-pub const CS7: ::tcflag_t = 0x00000200;\n-pub const CS8: ::tcflag_t = 0x00000300;\n-pub const CSTOPB: ::tcflag_t = 0x00000400;\n-pub const CREAD: ::tcflag_t = 0x00000800;\n-pub const PARENB: ::tcflag_t = 0x00001000;\n-pub const PARODD: ::tcflag_t = 0x00002000;\n-pub const HUPCL: ::tcflag_t = 0x00004000;\n-pub const CLOCAL: ::tcflag_t = 0x00008000;\n-pub const ECHOKE: ::tcflag_t = 0x00000001;\n-pub const ECHOE: ::tcflag_t = 0x00000002;\n-pub const ECHOK: ::tcflag_t = 0x00000004;\n-pub const ECHO: ::tcflag_t = 0x00000008;\n-pub const ECHONL: ::tcflag_t = 0x00000010;\n-pub const ECHOPRT: ::tcflag_t = 0x00000020;\n-pub const ECHOCTL: ::tcflag_t = 0x00000040;\n-pub const ISIG: ::tcflag_t = 0x00000080;\n-pub const ICANON: ::tcflag_t = 0x00000100;\n-pub const IEXTEN: ::tcflag_t = 0x00000400;\n-pub const EXTPROC: ::tcflag_t = 0x00000800;\n-pub const TOSTOP: ::tcflag_t = 0x00400000;\n-pub const FLUSHO: ::tcflag_t = 0x00800000;\n-pub const PENDIN: ::tcflag_t = 0x20000000;\n-pub const NOFLSH: ::tcflag_t = 0x80000000;\n-\n-pub const WNOHANG: ::c_int = 0x00000001;\n-pub const WUNTRACED: ::c_int = 0x00000002;\n-\n-pub const RTLD_NOW: ::c_int = 0x2;\n-pub const RTLD_DEFAULT: *mut ::c_void = -2isize as *mut ::c_void;\n-\n-pub const LOG_CRON: ::c_int = 9 << 3;\n-pub const LOG_AUTHPRIV: ::c_int = 10 << 3;\n-pub const LOG_FTP: ::c_int = 11 << 3;\n-pub const LOG_PERROR: ::c_int = 0x20;\n-\n-pub const PIPE_BUF: usize = 512;\n-\n-f! {\n-    pub fn FD_CLR(fd: ::c_int, set: *mut fd_set) -> () {\n-        let bits = mem::size_of_val(&(*set).fds_bits[0]) * 8;\n-        let fd = fd as usize;\n-        (*set).fds_bits[fd / bits] &= !(1 << (fd % bits));\n-        return\n-    }\n-\n-    pub fn FD_ISSET(fd: ::c_int, set: *mut fd_set) -> bool {\n-        let bits = mem::size_of_val(&(*set).fds_bits[0]) * 8;\n-        let fd = fd as usize;\n-        return ((*set).fds_bits[fd / bits] & (1 << (fd % bits))) != 0\n-    }\n-\n-    pub fn FD_SET(fd: ::c_int, set: *mut fd_set) -> () {\n-        let bits = mem::size_of_val(&(*set).fds_bits[0]) * 8;\n-        let fd = fd as usize;\n-        (*set).fds_bits[fd / bits] |= 1 << (fd % bits);\n-        return\n-    }\n-\n-    pub fn FD_ZERO(set: *mut fd_set) -> () {\n-        for slot in (*set).fds_bits.iter_mut() {\n-            *slot = 0;\n-        }\n-    }\n-\n-    pub fn WTERMSIG(status: ::c_int) -> ::c_int {\n-        status & 0o177\n-    }\n-\n-    pub fn WIFEXITED(status: ::c_int) -> bool {\n-        (status & 0o177) == 0\n-    }\n-\n-    pub fn WEXITSTATUS(status: ::c_int) -> ::c_int {\n-        status >> 8\n-    }\n-\n-    pub fn WCOREDUMP(status: ::c_int) -> bool {\n-        (status & 0o200) != 0\n-    }\n-}\n-\n-extern {\n-    pub fn getifaddrs(ifap: *mut *mut ::ifaddrs) -> ::c_int;\n-    pub fn freeifaddrs(ifa: *mut ::ifaddrs);\n-    pub fn setgroups(ngroups: ::c_int,\n-                     ptr: *const ::gid_t) -> ::c_int;\n-    pub fn ioctl(fd: ::c_int, request: ::c_ulong, ...) -> ::c_int;\n-    pub fn kqueue() -> ::c_int;\n-    pub fn unmount(target: *const ::c_char, arg: ::c_int) -> ::c_int;\n-    pub fn syscall(num: ::c_int, ...) -> ::c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__getpwnam_r50\")]\n-    pub fn getpwnam_r(name: *const ::c_char,\n-                      pwd: *mut passwd,\n-                      buf: *mut ::c_char,\n-                      buflen: ::size_t,\n-                      result: *mut *mut passwd) -> ::c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__getpwuid_r50\")]\n-    pub fn getpwuid_r(uid: ::uid_t,\n-                      pwd: *mut passwd,\n-                      buf: *mut ::c_char,\n-                      buflen: ::size_t,\n-                      result: *mut *mut passwd) -> ::c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__getpwent50\")]\n-    pub fn getpwent() -> *mut passwd;\n-    pub fn setpwent();\n-    pub fn getprogname() -> *const ::c_char;\n-    pub fn setprogname(name: *const ::c_char);\n-    pub fn getloadavg(loadavg: *mut ::c_double, nelem: ::c_int) -> ::c_int;\n-    pub fn if_nameindex() -> *mut if_nameindex;\n-    pub fn if_freenameindex(ptr: *mut if_nameindex);\n-}\n-\n-cfg_if! {\n-    if #[cfg(any(target_os = \"macos\", target_os = \"ios\"))] {\n-        mod apple;\n-        pub use self::apple::*;\n-    } else if #[cfg(any(target_os = \"openbsd\", target_os = \"netbsd\",\n-                        target_os = \"bitrig\"))] {\n-        mod netbsdlike;\n-        pub use self::netbsdlike::*;\n-    } else if #[cfg(any(target_os = \"freebsd\", target_os = \"dragonfly\"))] {\n-        mod freebsdlike;\n-        pub use self::freebsdlike::*;\n-    } else {\n-        // Unknown target_os\n-    }\n-}"}, {"sha": "6604ec03b2cb23be55191fcd2841523b73f48b5f", "filename": "src/vendor/libc/src/unix/bsd/netbsdlike/mod.rs", "status": "removed", "additions": 0, "deletions": 547, "changes": 547, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,547 +0,0 @@\n-pub type time_t = i64;\n-pub type mode_t = u32;\n-pub type nlink_t = ::uint32_t;\n-pub type ino_t = ::uint64_t;\n-pub type pthread_key_t = ::c_int;\n-pub type rlim_t = u64;\n-pub type speed_t = ::c_uint;\n-pub type tcflag_t = ::c_uint;\n-pub type nl_item = c_long;\n-pub type clockid_t = ::c_int;\n-pub type id_t = ::uint32_t;\n-pub type sem_t = *mut sem;\n-\n-pub enum timezone {}\n-pub enum sem {}\n-\n-s! {\n-    pub struct sigaction {\n-        pub sa_sigaction: ::sighandler_t,\n-        pub sa_mask: ::sigset_t,\n-        pub sa_flags: ::c_int,\n-    }\n-\n-    pub struct stack_t {\n-        pub ss_sp: *mut ::c_void,\n-        pub ss_size: ::size_t,\n-        pub ss_flags: ::c_int,\n-    }\n-\n-    pub struct sockaddr_in {\n-        pub sin_len: u8,\n-        pub sin_family: ::sa_family_t,\n-        pub sin_port: ::in_port_t,\n-        pub sin_addr: ::in_addr,\n-        pub sin_zero: [::int8_t; 8],\n-    }\n-\n-    pub struct termios {\n-        pub c_iflag: ::tcflag_t,\n-        pub c_oflag: ::tcflag_t,\n-        pub c_cflag: ::tcflag_t,\n-        pub c_lflag: ::tcflag_t,\n-        pub c_cc: [::cc_t; ::NCCS],\n-        pub c_ispeed: ::c_int,\n-        pub c_ospeed: ::c_int,\n-    }\n-\n-    pub struct flock {\n-        pub l_start: ::off_t,\n-        pub l_len: ::off_t,\n-        pub l_pid: ::pid_t,\n-        pub l_type: ::c_short,\n-        pub l_whence: ::c_short,\n-    }\n-}\n-\n-pub const D_T_FMT: ::nl_item = 0;\n-pub const D_FMT: ::nl_item = 1;\n-pub const T_FMT: ::nl_item = 2;\n-pub const T_FMT_AMPM: ::nl_item = 3;\n-pub const AM_STR: ::nl_item = 4;\n-pub const PM_STR: ::nl_item = 5;\n-\n-pub const DAY_1: ::nl_item = 6;\n-pub const DAY_2: ::nl_item = 7;\n-pub const DAY_3: ::nl_item = 8;\n-pub const DAY_4: ::nl_item = 9;\n-pub const DAY_5: ::nl_item = 10;\n-pub const DAY_6: ::nl_item = 11;\n-pub const DAY_7: ::nl_item = 12;\n-\n-pub const ABDAY_1: ::nl_item = 13;\n-pub const ABDAY_2: ::nl_item = 14;\n-pub const ABDAY_3: ::nl_item = 15;\n-pub const ABDAY_4: ::nl_item = 16;\n-pub const ABDAY_5: ::nl_item = 17;\n-pub const ABDAY_6: ::nl_item = 18;\n-pub const ABDAY_7: ::nl_item = 19;\n-\n-pub const MON_1: ::nl_item = 20;\n-pub const MON_2: ::nl_item = 21;\n-pub const MON_3: ::nl_item = 22;\n-pub const MON_4: ::nl_item = 23;\n-pub const MON_5: ::nl_item = 24;\n-pub const MON_6: ::nl_item = 25;\n-pub const MON_7: ::nl_item = 26;\n-pub const MON_8: ::nl_item = 27;\n-pub const MON_9: ::nl_item = 28;\n-pub const MON_10: ::nl_item = 29;\n-pub const MON_11: ::nl_item = 30;\n-pub const MON_12: ::nl_item = 31;\n-\n-pub const ABMON_1: ::nl_item = 32;\n-pub const ABMON_2: ::nl_item = 33;\n-pub const ABMON_3: ::nl_item = 34;\n-pub const ABMON_4: ::nl_item = 35;\n-pub const ABMON_5: ::nl_item = 36;\n-pub const ABMON_6: ::nl_item = 37;\n-pub const ABMON_7: ::nl_item = 38;\n-pub const ABMON_8: ::nl_item = 39;\n-pub const ABMON_9: ::nl_item = 40;\n-pub const ABMON_10: ::nl_item = 41;\n-pub const ABMON_11: ::nl_item = 42;\n-pub const ABMON_12: ::nl_item = 43;\n-\n-pub const RADIXCHAR: ::nl_item = 44;\n-pub const THOUSEP: ::nl_item = 45;\n-pub const YESSTR: ::nl_item = 46;\n-pub const YESEXPR: ::nl_item = 47;\n-pub const NOSTR: ::nl_item = 48;\n-pub const NOEXPR: ::nl_item = 49;\n-pub const CRNCYSTR: ::nl_item = 50;\n-\n-pub const CODESET: ::nl_item = 51;\n-\n-pub const EXIT_FAILURE : ::c_int = 1;\n-pub const EXIT_SUCCESS : ::c_int = 0;\n-pub const RAND_MAX : ::c_int = 2147483647;\n-pub const EOF : ::c_int = -1;\n-pub const SEEK_SET : ::c_int = 0;\n-pub const SEEK_CUR : ::c_int = 1;\n-pub const SEEK_END : ::c_int = 2;\n-pub const _IOFBF : ::c_int = 0;\n-pub const _IONBF : ::c_int = 2;\n-pub const _IOLBF : ::c_int = 1;\n-pub const BUFSIZ : ::c_uint = 1024;\n-pub const FOPEN_MAX : ::c_uint = 20;\n-pub const FILENAME_MAX : ::c_uint = 1024;\n-pub const L_tmpnam : ::c_uint = 1024;\n-pub const O_RDONLY : ::c_int = 0;\n-pub const O_WRONLY : ::c_int = 1;\n-pub const O_RDWR : ::c_int = 2;\n-pub const O_ACCMODE : ::c_int = 3;\n-pub const O_APPEND : ::c_int = 8;\n-pub const O_CREAT : ::c_int = 512;\n-pub const O_EXCL : ::c_int = 2048;\n-pub const O_NOCTTY : ::c_int = 32768;\n-pub const O_TRUNC : ::c_int = 1024;\n-pub const O_SYNC : ::c_int = 128;\n-pub const S_IFIFO : mode_t = 4096;\n-pub const S_IFCHR : mode_t = 8192;\n-pub const S_IFBLK : mode_t = 24576;\n-pub const S_IFDIR : mode_t = 16384;\n-pub const S_IFREG : mode_t = 32768;\n-pub const S_IFLNK : mode_t = 40960;\n-pub const S_IFSOCK : mode_t = 49152;\n-pub const S_IFMT : mode_t = 61440;\n-pub const S_IEXEC : mode_t = 64;\n-pub const S_IWRITE : mode_t = 128;\n-pub const S_IREAD : mode_t = 256;\n-pub const S_IRWXU : mode_t = 448;\n-pub const S_IXUSR : mode_t = 64;\n-pub const S_IWUSR : mode_t = 128;\n-pub const S_IRUSR : mode_t = 256;\n-pub const S_IRWXG : mode_t = 56;\n-pub const S_IXGRP : mode_t = 8;\n-pub const S_IWGRP : mode_t = 16;\n-pub const S_IRGRP : mode_t = 32;\n-pub const S_IRWXO : mode_t = 7;\n-pub const S_IXOTH : mode_t = 1;\n-pub const S_IWOTH : mode_t = 2;\n-pub const S_IROTH : mode_t = 4;\n-pub const F_OK : ::c_int = 0;\n-pub const R_OK : ::c_int = 4;\n-pub const W_OK : ::c_int = 2;\n-pub const X_OK : ::c_int = 1;\n-pub const STDIN_FILENO : ::c_int = 0;\n-pub const STDOUT_FILENO : ::c_int = 1;\n-pub const STDERR_FILENO : ::c_int = 2;\n-pub const F_LOCK : ::c_int = 1;\n-pub const F_TEST : ::c_int = 3;\n-pub const F_TLOCK : ::c_int = 2;\n-pub const F_ULOCK : ::c_int = 0;\n-pub const F_GETLK: ::c_int = 7;\n-pub const F_SETLK: ::c_int = 8;\n-pub const F_SETLKW: ::c_int = 9;\n-pub const SIGHUP : ::c_int = 1;\n-pub const SIGINT : ::c_int = 2;\n-pub const SIGQUIT : ::c_int = 3;\n-pub const SIGILL : ::c_int = 4;\n-pub const SIGABRT : ::c_int = 6;\n-pub const SIGEMT: ::c_int = 7;\n-pub const SIGFPE : ::c_int = 8;\n-pub const SIGKILL : ::c_int = 9;\n-pub const SIGSEGV : ::c_int = 11;\n-pub const SIGPIPE : ::c_int = 13;\n-pub const SIGALRM : ::c_int = 14;\n-pub const SIGTERM : ::c_int = 15;\n-pub const SIGSTKSZ : ::size_t = 40960;\n-\n-pub const PROT_NONE : ::c_int = 0;\n-pub const PROT_READ : ::c_int = 1;\n-pub const PROT_WRITE : ::c_int = 2;\n-pub const PROT_EXEC : ::c_int = 4;\n-\n-pub const MAP_FILE : ::c_int = 0x0000;\n-pub const MAP_SHARED : ::c_int = 0x0001;\n-pub const MAP_PRIVATE : ::c_int = 0x0002;\n-pub const MAP_FIXED : ::c_int = 0x0010;\n-pub const MAP_ANON : ::c_int = 0x1000;\n-\n-pub const MAP_FAILED : *mut ::c_void = !0 as *mut ::c_void;\n-\n-pub const MCL_CURRENT : ::c_int = 0x0001;\n-pub const MCL_FUTURE : ::c_int = 0x0002;\n-\n-pub const MS_ASYNC : ::c_int = 0x0001;\n-\n-pub const EPERM : ::c_int = 1;\n-pub const ENOENT : ::c_int = 2;\n-pub const ESRCH : ::c_int = 3;\n-pub const EINTR : ::c_int = 4;\n-pub const EIO : ::c_int = 5;\n-pub const ENXIO : ::c_int = 6;\n-pub const E2BIG : ::c_int = 7;\n-pub const ENOEXEC : ::c_int = 8;\n-pub const EBADF : ::c_int = 9;\n-pub const ECHILD : ::c_int = 10;\n-pub const EDEADLK : ::c_int = 11;\n-pub const ENOMEM : ::c_int = 12;\n-pub const EACCES : ::c_int = 13;\n-pub const EFAULT : ::c_int = 14;\n-pub const ENOTBLK : ::c_int = 15;\n-pub const EBUSY : ::c_int = 16;\n-pub const EEXIST : ::c_int = 17;\n-pub const EXDEV : ::c_int = 18;\n-pub const ENODEV : ::c_int = 19;\n-pub const ENOTDIR : ::c_int = 20;\n-pub const EISDIR : ::c_int = 21;\n-pub const EINVAL : ::c_int = 22;\n-pub const ENFILE : ::c_int = 23;\n-pub const EMFILE : ::c_int = 24;\n-pub const ENOTTY : ::c_int = 25;\n-pub const ETXTBSY : ::c_int = 26;\n-pub const EFBIG : ::c_int = 27;\n-pub const ENOSPC : ::c_int = 28;\n-pub const ESPIPE : ::c_int = 29;\n-pub const EROFS : ::c_int = 30;\n-pub const EMLINK : ::c_int = 31;\n-pub const EPIPE : ::c_int = 32;\n-pub const EDOM : ::c_int = 33;\n-pub const ERANGE : ::c_int = 34;\n-pub const EAGAIN : ::c_int = 35;\n-pub const EWOULDBLOCK : ::c_int = 35;\n-pub const EINPROGRESS : ::c_int = 36;\n-pub const EALREADY : ::c_int = 37;\n-pub const ENOTSOCK : ::c_int = 38;\n-pub const EDESTADDRREQ : ::c_int = 39;\n-pub const EMSGSIZE : ::c_int = 40;\n-pub const EPROTOTYPE : ::c_int = 41;\n-pub const ENOPROTOOPT : ::c_int = 42;\n-pub const EPROTONOSUPPORT : ::c_int = 43;\n-pub const ESOCKTNOSUPPORT : ::c_int = 44;\n-pub const EOPNOTSUPP : ::c_int = 45;\n-pub const EPFNOSUPPORT : ::c_int = 46;\n-pub const EAFNOSUPPORT : ::c_int = 47;\n-pub const EADDRINUSE : ::c_int = 48;\n-pub const EADDRNOTAVAIL : ::c_int = 49;\n-pub const ENETDOWN : ::c_int = 50;\n-pub const ENETUNREACH : ::c_int = 51;\n-pub const ENETRESET : ::c_int = 52;\n-pub const ECONNABORTED : ::c_int = 53;\n-pub const ECONNRESET : ::c_int = 54;\n-pub const ENOBUFS : ::c_int = 55;\n-pub const EISCONN : ::c_int = 56;\n-pub const ENOTCONN : ::c_int = 57;\n-pub const ESHUTDOWN : ::c_int = 58;\n-pub const ETOOMANYREFS : ::c_int = 59;\n-pub const ETIMEDOUT : ::c_int = 60;\n-pub const ECONNREFUSED : ::c_int = 61;\n-pub const ELOOP : ::c_int = 62;\n-pub const ENAMETOOLONG : ::c_int = 63;\n-pub const EHOSTDOWN : ::c_int = 64;\n-pub const EHOSTUNREACH : ::c_int = 65;\n-pub const ENOTEMPTY : ::c_int = 66;\n-pub const EPROCLIM : ::c_int = 67;\n-pub const EUSERS : ::c_int = 68;\n-pub const EDQUOT : ::c_int = 69;\n-pub const ESTALE : ::c_int = 70;\n-pub const EREMOTE : ::c_int = 71;\n-pub const EBADRPC : ::c_int = 72;\n-pub const ERPCMISMATCH : ::c_int = 73;\n-pub const EPROGUNAVAIL : ::c_int = 74;\n-pub const EPROGMISMATCH : ::c_int = 75;\n-pub const EPROCUNAVAIL : ::c_int = 76;\n-pub const ENOLCK : ::c_int = 77;\n-pub const ENOSYS : ::c_int = 78;\n-pub const EFTYPE : ::c_int = 79;\n-pub const EAUTH : ::c_int = 80;\n-pub const ENEEDAUTH : ::c_int = 81;\n-\n-pub const F_DUPFD : ::c_int = 0;\n-pub const F_GETFD : ::c_int = 1;\n-pub const F_SETFD : ::c_int = 2;\n-pub const F_GETFL : ::c_int = 3;\n-pub const F_SETFL : ::c_int = 4;\n-\n-pub const SIGTRAP : ::c_int = 5;\n-\n-pub const GLOB_APPEND   : ::c_int = 0x0001;\n-pub const GLOB_DOOFFS   : ::c_int = 0x0002;\n-pub const GLOB_ERR      : ::c_int = 0x0004;\n-pub const GLOB_MARK     : ::c_int = 0x0008;\n-pub const GLOB_NOCHECK  : ::c_int = 0x0010;\n-pub const GLOB_NOSORT   : ::c_int = 0x0020;\n-pub const GLOB_NOESCAPE : ::c_int = 0x1000;\n-\n-pub const GLOB_NOSPACE  : ::c_int = -1;\n-pub const GLOB_ABORTED  : ::c_int = -2;\n-pub const GLOB_NOMATCH  : ::c_int = -3;\n-pub const GLOB_NOSYS : ::c_int = -4;\n-\n-pub const POSIX_MADV_NORMAL : ::c_int = 0;\n-pub const POSIX_MADV_RANDOM : ::c_int = 1;\n-pub const POSIX_MADV_SEQUENTIAL : ::c_int = 2;\n-pub const POSIX_MADV_WILLNEED : ::c_int = 3;\n-pub const POSIX_MADV_DONTNEED : ::c_int = 4;\n-\n-pub const _SC_XOPEN_SHM : ::c_int = 30;\n-\n-pub const PTHREAD_CREATE_JOINABLE : ::c_int = 0;\n-pub const PTHREAD_CREATE_DETACHED : ::c_int = 1;\n-\n-// http://man.openbsd.org/OpenBSD-current/man2/clock_getres.2\n-// The man page says clock_gettime(3) can accept various values as clockid_t but\n-// http://fxr.watson.org/fxr/source/kern/kern_time.c?v=OPENBSD;im=excerpts#L161\n-// the implementation rejects anything other than the below two\n-//\n-// http://netbsd.gw.com/cgi-bin/man-cgi?clock_gettime\n-// https://github.com/jsonn/src/blob/HEAD/sys/kern/subr_time.c#L222\n-// Basically the same goes for NetBSD\n-pub const CLOCK_REALTIME: clockid_t = 0;\n-pub const CLOCK_MONOTONIC: clockid_t = 3;\n-\n-pub const RLIMIT_CPU: ::c_int = 0;\n-pub const RLIMIT_FSIZE: ::c_int = 1;\n-pub const RLIMIT_DATA: ::c_int = 2;\n-pub const RLIMIT_STACK: ::c_int = 3;\n-pub const RLIMIT_CORE: ::c_int = 4;\n-pub const RLIMIT_RSS: ::c_int = 5;\n-pub const RLIMIT_MEMLOCK: ::c_int = 6;\n-pub const RLIMIT_NPROC: ::c_int = 7;\n-pub const RLIMIT_NOFILE: ::c_int = 8;\n-\n-pub const RLIM_INFINITY: rlim_t = 0x7fff_ffff_ffff_ffff;\n-pub const RLIM_SAVED_MAX: rlim_t = RLIM_INFINITY;\n-pub const RLIM_SAVED_CUR: rlim_t = RLIM_INFINITY;\n-\n-pub const RUSAGE_SELF: ::c_int = 0;\n-pub const RUSAGE_CHILDREN: ::c_int = -1;\n-\n-pub const MADV_NORMAL : ::c_int = 0;\n-pub const MADV_RANDOM : ::c_int = 1;\n-pub const MADV_SEQUENTIAL : ::c_int = 2;\n-pub const MADV_WILLNEED : ::c_int = 3;\n-pub const MADV_DONTNEED : ::c_int = 4;\n-pub const MADV_FREE : ::c_int = 6;\n-\n-pub const AF_UNIX: ::c_int = 1;\n-pub const AF_INET: ::c_int = 2;\n-pub const AF_INET6: ::c_int = 24;\n-pub const SOCK_STREAM: ::c_int = 1;\n-pub const SOCK_DGRAM: ::c_int = 2;\n-pub const SOCK_RAW: ::c_int = 3;\n-pub const SOCK_SEQPACKET: ::c_int = 5;\n-pub const IPPROTO_TCP: ::c_int = 6;\n-pub const IPPROTO_IP: ::c_int = 0;\n-pub const IPPROTO_IPV6: ::c_int = 41;\n-pub const IP_MULTICAST_TTL: ::c_int = 10;\n-pub const IP_MULTICAST_LOOP: ::c_int = 11;\n-pub const IP_TTL: ::c_int = 4;\n-pub const IP_HDRINCL: ::c_int = 2;\n-pub const IP_ADD_MEMBERSHIP: ::c_int = 12;\n-pub const IP_DROP_MEMBERSHIP: ::c_int = 13;\n-\n-pub const TCP_NODELAY: ::c_int = 0x01;\n-pub const SOL_SOCKET: ::c_int = 0xffff;\n-pub const SO_DEBUG: ::c_int = 0x01;\n-pub const SO_ACCEPTCONN: ::c_int = 0x0002;\n-pub const SO_REUSEADDR: ::c_int = 0x0004;\n-pub const SO_KEEPALIVE: ::c_int = 0x0008;\n-pub const SO_DONTROUTE: ::c_int = 0x0010;\n-pub const SO_BROADCAST: ::c_int = 0x0020;\n-pub const SO_USELOOPBACK: ::c_int = 0x0040;\n-pub const SO_LINGER: ::c_int = 0x0080;\n-pub const SO_OOBINLINE: ::c_int = 0x0100;\n-pub const SO_REUSEPORT: ::c_int = 0x0200;\n-pub const SO_SNDBUF: ::c_int = 0x1001;\n-pub const SO_RCVBUF: ::c_int = 0x1002;\n-pub const SO_SNDLOWAT: ::c_int = 0x1003;\n-pub const SO_RCVLOWAT: ::c_int = 0x1004;\n-pub const SO_ERROR: ::c_int = 0x1007;\n-pub const SO_TYPE: ::c_int = 0x1008;\n-\n-pub const MSG_NOSIGNAL: ::c_int = 0x400;\n-\n-pub const IFF_LOOPBACK: ::c_int = 0x8;\n-\n-pub const SHUT_RD: ::c_int = 0;\n-pub const SHUT_WR: ::c_int = 1;\n-pub const SHUT_RDWR: ::c_int = 2;\n-\n-pub const LOCK_SH: ::c_int = 1;\n-pub const LOCK_EX: ::c_int = 2;\n-pub const LOCK_NB: ::c_int = 4;\n-pub const LOCK_UN: ::c_int = 8;\n-\n-pub const O_NONBLOCK : ::c_int = 4;\n-\n-pub const IPPROTO_RAW : ::c_int = 255;\n-\n-pub const _SC_ARG_MAX : ::c_int = 1;\n-pub const _SC_CHILD_MAX : ::c_int = 2;\n-pub const _SC_NGROUPS_MAX : ::c_int = 4;\n-pub const _SC_OPEN_MAX : ::c_int = 5;\n-pub const _SC_JOB_CONTROL : ::c_int = 6;\n-pub const _SC_SAVED_IDS : ::c_int = 7;\n-pub const _SC_VERSION : ::c_int = 8;\n-pub const _SC_BC_BASE_MAX : ::c_int = 9;\n-pub const _SC_BC_DIM_MAX : ::c_int = 10;\n-pub const _SC_BC_SCALE_MAX : ::c_int = 11;\n-pub const _SC_BC_STRING_MAX : ::c_int = 12;\n-pub const _SC_COLL_WEIGHTS_MAX : ::c_int = 13;\n-pub const _SC_EXPR_NEST_MAX : ::c_int = 14;\n-pub const _SC_LINE_MAX : ::c_int = 15;\n-pub const _SC_RE_DUP_MAX : ::c_int = 16;\n-pub const _SC_2_VERSION : ::c_int = 17;\n-pub const _SC_2_C_BIND : ::c_int = 18;\n-pub const _SC_2_C_DEV : ::c_int = 19;\n-pub const _SC_2_CHAR_TERM : ::c_int = 20;\n-pub const _SC_2_FORT_DEV : ::c_int = 21;\n-pub const _SC_2_FORT_RUN : ::c_int = 22;\n-pub const _SC_2_LOCALEDEF : ::c_int = 23;\n-pub const _SC_2_SW_DEV : ::c_int = 24;\n-pub const _SC_2_UPE : ::c_int = 25;\n-pub const _SC_STREAM_MAX : ::c_int = 26;\n-pub const _SC_TZNAME_MAX : ::c_int = 27;\n-pub const _SC_PAGESIZE : ::c_int = 28;\n-pub const _SC_PAGE_SIZE: ::c_int = _SC_PAGESIZE;\n-pub const _SC_FSYNC : ::c_int = 29;\n-\n-pub const Q_GETQUOTA: ::c_int = 0x300;\n-pub const Q_SETQUOTA: ::c_int = 0x400;\n-\n-pub const RTLD_GLOBAL: ::c_int = 0x100;\n-\n-pub const LOG_NFACILITIES: ::c_int = 24;\n-\n-pub const HW_NCPU: ::c_int = 3;\n-\n-pub const SEM_FAILED: *mut sem_t = 0 as *mut sem_t;\n-\n-f! {\n-    pub fn WSTOPSIG(status: ::c_int) -> ::c_int {\n-        status >> 8\n-    }\n-\n-    pub fn WIFSIGNALED(status: ::c_int) -> bool {\n-        (status & 0o177) != 0o177 && (status & 0o177) != 0\n-    }\n-\n-    pub fn WIFSTOPPED(status: ::c_int) -> bool {\n-        (status & 0o177) == 0o177\n-    }\n-}\n-\n-#[link(name = \"util\")]\n-extern {\n-    pub fn mincore(addr: *mut ::c_void, len: ::size_t,\n-                   vec: *mut ::c_char) -> ::c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__clock_getres50\")]\n-    pub fn clock_getres(clk_id: clockid_t, tp: *mut ::timespec) -> ::c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__clock_gettime50\")]\n-    pub fn clock_gettime(clk_id: clockid_t, tp: *mut ::timespec) -> ::c_int;\n-    pub fn __errno() -> *mut ::c_int;\n-    pub fn shm_open(name: *const ::c_char, oflag: ::c_int, mode: ::mode_t)\n-                    -> ::c_int;\n-    pub fn memrchr(cx: *const ::c_void,\n-                   c: ::c_int,\n-                   n: ::size_t) -> *mut ::c_void;\n-    pub fn mkostemp(template: *mut ::c_char, flags: ::c_int) -> ::c_int;\n-    pub fn mkostemps(template: *mut ::c_char,\n-                     suffixlen: ::c_int,\n-                     flags: ::c_int) -> ::c_int;\n-    pub fn futimens(fd: ::c_int, times: *const ::timespec) -> ::c_int;\n-    pub fn fdatasync(fd: ::c_int) -> ::c_int;\n-    pub fn openpty(amaster: *mut ::c_int,\n-                   aslave: *mut ::c_int,\n-                   name: *mut ::c_char,\n-                   termp: *mut termios,\n-                   winp: *mut ::winsize) -> ::c_int;\n-    pub fn forkpty(amaster: *mut ::c_int,\n-                   name: *mut ::c_char,\n-                   termp: *mut termios,\n-                   winp: *mut ::winsize) -> ::pid_t;\n-    pub fn getpriority(which: ::c_int, who: ::id_t) -> ::c_int;\n-    pub fn setpriority(which: ::c_int, who: ::id_t, prio: ::c_int) -> ::c_int;\n-\n-    pub fn openat(dirfd: ::c_int, pathname: *const ::c_char,\n-                  flags: ::c_int, ...) -> ::c_int;\n-    pub fn faccessat(dirfd: ::c_int, pathname: *const ::c_char,\n-                     mode: ::c_int, flags: ::c_int) -> ::c_int;\n-    pub fn fchmodat(dirfd: ::c_int, pathname: *const ::c_char,\n-                    mode: ::mode_t, flags: ::c_int) -> ::c_int;\n-    pub fn fchownat(dirfd: ::c_int, pathname: *const ::c_char,\n-                    owner: ::uid_t, group: ::gid_t,\n-                    flags: ::c_int) -> ::c_int;\n-    pub fn fstatat(dirfd: ::c_int, pathname: *const ::c_char,\n-                   buf: *mut stat, flags: ::c_int) -> ::c_int;\n-    pub fn linkat(olddirfd: ::c_int, oldpath: *const ::c_char,\n-                  newdirfd: ::c_int, newpath: *const ::c_char,\n-                  flags: ::c_int) -> ::c_int;\n-   pub fn mkdirat(dirfd: ::c_int, pathname: *const ::c_char,\n-                  mode: ::mode_t) -> ::c_int;\n-   pub fn mknodat(dirfd: ::c_int, pathname: *const ::c_char,\n-                 mode: ::mode_t, dev: dev_t) -> ::c_int;\n-   pub fn readlinkat(dirfd: ::c_int, pathname: *const ::c_char,\n-                     buf: *mut ::c_char, bufsiz: ::size_t) -> ::ssize_t;\n-   pub fn renameat(olddirfd: ::c_int, oldpath: *const ::c_char,\n-                   newdirfd: ::c_int, newpath: *const ::c_char)\n-                   -> ::c_int;\n-   pub fn symlinkat(target: *const ::c_char, newdirfd: ::c_int,\n-                    linkpath: *const ::c_char) -> ::c_int;\n-   pub fn unlinkat(dirfd: ::c_int, pathname: *const ::c_char,\n-                   flags: ::c_int) -> ::c_int;\n-   pub fn mkfifoat(dirfd: ::c_int, pathname: *const ::c_char,\n-                   mode: ::mode_t) -> ::c_int;\n-   pub fn sem_timedwait(sem: *mut sem_t,\n-                        abstime: *const ::timespec) -> ::c_int;\n-   pub fn pthread_condattr_setclock(attr: *mut pthread_condattr_t,\n-                                    clock_id: clockid_t) -> ::c_int;\n-    pub fn sethostname(name: *const ::c_char, len: ::size_t) -> ::c_int;\n-    pub fn pthread_mutex_timedlock(lock: *mut pthread_mutex_t,\n-                                   abstime: *const ::timespec) -> ::c_int;\n-}\n-\n-cfg_if! {\n-    if #[cfg(target_os = \"netbsd\")] {\n-        mod netbsd;\n-        pub use self::netbsd::*;\n-    } else if #[cfg(any(target_os = \"openbsd\", target_os = \"bitrig\"))] {\n-        mod openbsdlike;\n-        pub use self::openbsdlike::*;\n-    } else {\n-        // Unknown target_os\n-    }\n-}"}, {"sha": "aa46aff191037b9b18f300336f525e21bb571292", "filename": "src/vendor/libc/src/unix/bsd/netbsdlike/netbsd/mod.rs", "status": "removed", "additions": 0, "deletions": 618, "changes": 618, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fnetbsd%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fnetbsd%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fnetbsd%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,618 +0,0 @@\n-pub type clock_t = ::c_uint;\n-pub type suseconds_t = ::c_int;\n-pub type dev_t = u64;\n-pub type blksize_t = ::int32_t;\n-pub type fsblkcnt_t = ::uint64_t;\n-pub type fsfilcnt_t = ::uint64_t;\n-\n-s! {\n-    pub struct dirent {\n-        pub d_fileno: ::ino_t,\n-        pub d_reclen: u16,\n-        pub d_namlen: u16,\n-        pub d_type: u8,\n-        pub d_name: [::c_char; 512],\n-    }\n-\n-    pub struct glob_t {\n-        pub gl_pathc:   ::size_t,\n-        pub gl_matchc:  ::size_t,\n-        pub gl_offs:    ::size_t,\n-        pub gl_flags:   ::c_int,\n-        pub gl_pathv:   *mut *mut ::c_char,\n-\n-        __unused3: *mut ::c_void,\n-\n-        __unused4: *mut ::c_void,\n-        __unused5: *mut ::c_void,\n-        __unused6: *mut ::c_void,\n-        __unused7: *mut ::c_void,\n-        __unused8: *mut ::c_void,\n-    }\n-\n-    pub struct sigset_t {\n-        __bits: [u32; 4],\n-    }\n-\n-    pub struct stat {\n-        pub st_dev: ::dev_t,\n-        pub st_mode: ::mode_t,\n-        pub st_ino: ::ino_t,\n-        pub st_nlink: ::nlink_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::dev_t,\n-        pub st_atime: ::time_t,\n-        pub st_atimensec: ::c_long,\n-        pub st_mtime: ::time_t,\n-        pub st_mtimensec: ::c_long,\n-        pub st_ctime: ::time_t,\n-        pub st_ctimensec: ::c_long,\n-        pub st_birthtime: ::time_t,\n-        pub st_birthtimensec: ::c_long,\n-        pub st_size: ::off_t,\n-        pub st_blocks: ::blkcnt_t,\n-        pub st_blksize: ::blksize_t,\n-        pub st_flags: ::uint32_t,\n-        pub st_gen: ::uint32_t,\n-        pub st_spare: [::uint32_t; 2],\n-    }\n-\n-    pub struct statvfs {\n-        pub f_flag: ::c_ulong,\n-        pub f_bsize: ::c_ulong,\n-        pub f_frsize: ::c_ulong,\n-        pub f_iosize: ::c_ulong,\n-\n-        pub f_blocks: ::fsblkcnt_t,\n-        pub f_bfree: ::fsblkcnt_t,\n-        pub f_bavail: ::fsblkcnt_t,\n-        pub f_bresvd: ::fsblkcnt_t,\n-\n-        pub f_files: ::fsfilcnt_t,\n-        pub f_ffree: ::fsfilcnt_t,\n-        pub f_favail: ::fsfilcnt_t,\n-        pub f_fresvd: ::fsfilcnt_t,\n-\n-        pub f_syncreads: ::uint64_t,\n-        pub f_syncwrites: ::uint64_t,\n-\n-        pub f_asyncreads: ::uint64_t,\n-        pub f_asyncwrites: ::uint64_t,\n-\n-        pub f_fsidx: ::fsid_t,\n-        pub f_fsid: ::c_ulong,\n-        pub f_namemax: ::c_ulong,\n-        pub f_owner: ::uid_t,\n-\n-        pub f_spare: [::uint32_t; 4],\n-\n-        pub f_fstypename: [::c_char; 32],\n-        pub f_mntonname: [::c_char; 1024],\n-        pub f_mntfromname: [::c_char; 1024],\n-    }\n-\n-    pub struct addrinfo {\n-        pub ai_flags: ::c_int,\n-        pub ai_family: ::c_int,\n-        pub ai_socktype: ::c_int,\n-        pub ai_protocol: ::c_int,\n-        pub ai_addrlen: ::socklen_t,\n-        pub ai_canonname: *mut ::c_char,\n-        pub ai_addr: *mut ::sockaddr,\n-        pub ai_next: *mut ::addrinfo,\n-    }\n-\n-    pub struct sockaddr_storage {\n-        pub ss_len: u8,\n-        pub ss_family: ::sa_family_t,\n-        __ss_pad1: [u8; 6],\n-        __ss_pad2: i64,\n-        __ss_pad3: [u8; 112],\n-    }\n-\n-    pub struct siginfo_t {\n-        pub si_signo: ::c_int,\n-        pub si_code: ::c_int,\n-        pub si_errno: ::c_int,\n-        __pad1: ::c_int,\n-        pub si_addr: *mut ::c_void,\n-        __pad2: [u64; 13],\n-    }\n-\n-    pub struct pthread_attr_t {\n-        pta_magic: ::c_uint,\n-        pta_flags: ::c_int,\n-        pta_private: *mut ::c_void,\n-    }\n-\n-    pub struct pthread_mutex_t {\n-        ptm_magic: ::c_uint,\n-        ptm_errorcheck: ::c_uchar,\n-        ptm_pad1: [u8; 3],\n-        ptm_interlock: ::c_uchar,\n-        ptm_pad2: [u8; 3],\n-        ptm_owner: ::pthread_t,\n-        ptm_waiters: *mut u8,\n-        ptm_recursed: ::c_uint,\n-        ptm_spare2: *mut ::c_void,\n-    }\n-\n-    pub struct pthread_mutexattr_t {\n-        ptma_magic: ::c_uint,\n-        ptma_private: *mut ::c_void,\n-    }\n-\n-    pub struct pthread_cond_t {\n-        ptc_magic: ::c_uint,\n-        ptc_lock: ::c_uchar,\n-        ptc_waiters_first: *mut u8,\n-        ptc_waiters_last: *mut u8,\n-        ptc_mutex: *mut ::pthread_mutex_t,\n-        ptc_private: *mut ::c_void,\n-    }\n-\n-    pub struct pthread_condattr_t {\n-        ptca_magic: ::c_uint,\n-        ptca_private: *mut ::c_void,\n-    }\n-\n-    pub struct pthread_rwlock_t {\n-        ptr_magic: ::c_uint,\n-        ptr_interlock: ::c_uchar,\n-        ptr_rblocked_first: *mut u8,\n-        ptr_rblocked_last: *mut u8,\n-        ptr_wblocked_first: *mut u8,\n-        ptr_wblocked_last: *mut u8,\n-        ptr_nreaders: ::c_uint,\n-        ptr_owner: ::pthread_t,\n-        ptr_private: *mut ::c_void,\n-    }\n-\n-    pub struct kevent {\n-        pub ident: ::uintptr_t,\n-        pub filter: ::uint32_t,\n-        pub flags: ::uint32_t,\n-        pub fflags: ::uint32_t,\n-        pub data: ::int64_t,\n-        pub udata: ::intptr_t,\n-    }\n-\n-    pub struct dqblk {\n-        pub dqb_bhardlimit: ::uint32_t,\n-        pub dqb_bsoftlimit: ::uint32_t,\n-        pub dqb_curblocks: ::uint32_t,\n-        pub dqb_ihardlimit: ::uint32_t,\n-        pub dqb_isoftlimit: ::uint32_t,\n-        pub dqb_curinodes: ::uint32_t,\n-        pub dqb_btime: ::int32_t,\n-        pub dqb_itime: ::int32_t,\n-    }\n-\n-    pub struct Dl_info {\n-        pub dli_fname: *const ::c_char,\n-        pub dli_fbase: *mut ::c_void,\n-        pub dli_sname: *const ::c_char,\n-        pub dli_saddr: *const ::c_void,\n-    }\n-\n-    pub struct lconv {\n-        pub decimal_point: *mut ::c_char,\n-        pub thousands_sep: *mut ::c_char,\n-        pub grouping: *mut ::c_char,\n-        pub int_curr_symbol: *mut ::c_char,\n-        pub currency_symbol: *mut ::c_char,\n-        pub mon_decimal_point: *mut ::c_char,\n-        pub mon_thousands_sep: *mut ::c_char,\n-        pub mon_grouping: *mut ::c_char,\n-        pub positive_sign: *mut ::c_char,\n-        pub negative_sign: *mut ::c_char,\n-        pub int_frac_digits: ::c_char,\n-        pub frac_digits: ::c_char,\n-        pub p_cs_precedes: ::c_char,\n-        pub p_sep_by_space: ::c_char,\n-        pub n_cs_precedes: ::c_char,\n-        pub n_sep_by_space: ::c_char,\n-        pub p_sign_posn: ::c_char,\n-        pub n_sign_posn: ::c_char,\n-        pub int_p_cs_precedes: ::c_char,\n-        pub int_n_cs_precedes: ::c_char,\n-        pub int_p_sep_by_space: ::c_char,\n-        pub int_n_sep_by_space: ::c_char,\n-        pub int_p_sign_posn: ::c_char,\n-        pub int_n_sign_posn: ::c_char,\n-    }\n-}\n-\n-pub const LC_COLLATE_MASK: ::c_int = (1 << ::LC_COLLATE);\n-pub const LC_CTYPE_MASK: ::c_int = (1 << ::LC_CTYPE);\n-pub const LC_MONETARY_MASK: ::c_int = (1 << ::LC_MONETARY);\n-pub const LC_NUMERIC_MASK: ::c_int = (1 << ::LC_NUMERIC);\n-pub const LC_TIME_MASK: ::c_int = (1 << ::LC_TIME);\n-pub const LC_MESSAGES_MASK: ::c_int = (1 << ::LC_MESSAGES);\n-pub const LC_ALL_MASK: ::c_int = !0;\n-\n-pub const ERA: ::nl_item = 52;\n-pub const ERA_D_FMT: ::nl_item = 53;\n-pub const ERA_D_T_FMT: ::nl_item = 54;\n-pub const ERA_T_FMT: ::nl_item = 55;\n-pub const ALT_DIGITS: ::nl_item = 56;\n-\n-pub const O_CLOEXEC: ::c_int = 0x400000;\n-pub const O_ALT_IO: ::c_int = 0x40000;\n-pub const O_NOSIGPIPE: ::c_int = 0x1000000;\n-pub const O_SEARCH: ::c_int = 0x800000;\n-pub const O_EXLOCK: ::c_int = 0x20;\n-pub const O_SHLOCK: ::c_int = 0x10;\n-pub const O_DIRECTORY: ::c_int = 0x200000;\n-\n-pub const MS_SYNC : ::c_int = 0x4;\n-pub const MS_INVALIDATE : ::c_int = 0x2;\n-\n-pub const RLIM_NLIMITS: ::c_int = 12;\n-\n-pub const ENOATTR : ::c_int = 93;\n-pub const EILSEQ : ::c_int = 85;\n-pub const EOVERFLOW : ::c_int = 84;\n-pub const ECANCELED : ::c_int = 87;\n-pub const EIDRM : ::c_int = 82;\n-pub const ENOMSG : ::c_int = 83;\n-pub const ENOTSUP : ::c_int = 86;\n-pub const ELAST : ::c_int = 96;\n-\n-pub const F_DUPFD_CLOEXEC : ::c_int = 12;\n-pub const F_CLOSEM: ::c_int = 10;\n-pub const F_GETNOSIGPIPE: ::c_int = 13;\n-pub const F_SETNOSIGPIPE: ::c_int = 14;\n-pub const F_MAXFD: ::c_int = 11;\n-\n-pub const IPV6_JOIN_GROUP: ::c_int = 12;\n-pub const IPV6_LEAVE_GROUP: ::c_int = 13;\n-\n-pub const SO_SNDTIMEO: ::c_int = 0x100b;\n-pub const SO_RCVTIMEO: ::c_int = 0x100c;\n-\n-pub const O_DSYNC : ::c_int = 0x10000;\n-\n-pub const MAP_RENAME : ::c_int = 0x20;\n-pub const MAP_NORESERVE : ::c_int = 0x40;\n-pub const MAP_HASSEMAPHORE : ::c_int = 0x200;\n-pub const MAP_WIRED: ::c_int = 0x800;\n-\n-pub const _SC_IOV_MAX : ::c_int = 32;\n-pub const _SC_GETGR_R_SIZE_MAX : ::c_int = 47;\n-pub const _SC_GETPW_R_SIZE_MAX : ::c_int = 48;\n-pub const _SC_LOGIN_NAME_MAX : ::c_int = 37;\n-pub const _SC_MQ_PRIO_MAX : ::c_int = 55;\n-pub const _SC_NPROCESSORS_ONLN : ::c_int = 1002;\n-pub const _SC_THREADS : ::c_int = 41;\n-pub const _SC_THREAD_ATTR_STACKADDR : ::c_int = 61;\n-pub const _SC_THREAD_ATTR_STACKSIZE : ::c_int = 62;\n-pub const _SC_THREAD_DESTRUCTOR_ITERATIONS : ::c_int = 57;\n-pub const _SC_THREAD_KEYS_MAX : ::c_int = 58;\n-pub const _SC_THREAD_PRIO_INHERIT : ::c_int = 64;\n-pub const _SC_THREAD_PRIO_PROTECT : ::c_int = 65;\n-pub const _SC_THREAD_PRIORITY_SCHEDULING : ::c_int = 63;\n-pub const _SC_THREAD_PROCESS_SHARED : ::c_int = 66;\n-pub const _SC_THREAD_SAFE_FUNCTIONS : ::c_int = 67;\n-pub const _SC_THREAD_STACK_MIN : ::c_int = 59;\n-pub const _SC_THREAD_THREADS_MAX : ::c_int = 60;\n-pub const _SC_TTY_NAME_MAX : ::c_int = 68;\n-pub const _SC_ATEXIT_MAX : ::c_int = 40;\n-pub const _SC_CLK_TCK : ::c_int = 39;\n-pub const _SC_AIO_LISTIO_MAX : ::c_int = 51;\n-pub const _SC_AIO_MAX : ::c_int = 52;\n-pub const _SC_ASYNCHRONOUS_IO : ::c_int = 50;\n-pub const _SC_MAPPED_FILES : ::c_int = 33;\n-pub const _SC_MEMLOCK : ::c_int = 34;\n-pub const _SC_MEMLOCK_RANGE : ::c_int = 35;\n-pub const _SC_MEMORY_PROTECTION : ::c_int = 36;\n-pub const _SC_MESSAGE_PASSING : ::c_int = 53;\n-pub const _SC_MQ_OPEN_MAX : ::c_int = 54;\n-pub const _SC_PRIORITY_SCHEDULING : ::c_int = 56;\n-pub const _SC_SEMAPHORES : ::c_int = 42;\n-pub const _SC_SHARED_MEMORY_OBJECTS : ::c_int = 87;\n-pub const _SC_SYNCHRONIZED_IO : ::c_int = 31;\n-pub const _SC_TIMERS : ::c_int = 44;\n-pub const _SC_HOST_NAME_MAX : ::c_int = 69;\n-\n-pub const FD_SETSIZE: usize = 0x100;\n-\n-pub const ST_NOSUID: ::c_ulong = 8;\n-\n-pub const PTHREAD_MUTEX_INITIALIZER: pthread_mutex_t = pthread_mutex_t {\n-    ptm_magic: 0x33330003,\n-    ptm_errorcheck: 0,\n-    ptm_interlock: 0,\n-    ptm_waiters: 0 as *mut _,\n-    ptm_owner: 0,\n-    ptm_pad1: [0; 3],\n-    ptm_pad2: [0; 3],\n-    ptm_recursed: 0,\n-    ptm_spare2: 0 as *mut _,\n-};\n-pub const PTHREAD_COND_INITIALIZER: pthread_cond_t = pthread_cond_t {\n-    ptc_magic: 0x55550005,\n-    ptc_lock: 0,\n-    ptc_waiters_first: 0 as *mut _,\n-    ptc_waiters_last: 0 as *mut _,\n-    ptc_mutex: 0 as *mut _,\n-    ptc_private: 0 as *mut _,\n-};\n-pub const PTHREAD_RWLOCK_INITIALIZER: pthread_rwlock_t = pthread_rwlock_t {\n-    ptr_magic: 0x99990009,\n-    ptr_interlock: 0,\n-    ptr_rblocked_first: 0 as *mut _,\n-    ptr_rblocked_last: 0 as *mut _,\n-    ptr_wblocked_first: 0 as *mut _,\n-    ptr_wblocked_last: 0 as *mut _,\n-    ptr_nreaders: 0,\n-    ptr_owner: 0,\n-    ptr_private: 0 as *mut _,\n-};\n-pub const PTHREAD_MUTEX_NORMAL: ::c_int = 0;\n-pub const PTHREAD_MUTEX_ERRORCHECK: ::c_int = 1;\n-pub const PTHREAD_MUTEX_RECURSIVE: ::c_int = 2;\n-pub const PTHREAD_MUTEX_DEFAULT: ::c_int = PTHREAD_MUTEX_NORMAL;\n-\n-pub const EVFILT_AIO: ::int32_t = 2;\n-pub const EVFILT_PROC: ::int32_t = 4;\n-pub const EVFILT_READ: ::int32_t = 0;\n-pub const EVFILT_SIGNAL: ::int32_t = 5;\n-pub const EVFILT_TIMER: ::int32_t = 6;\n-pub const EVFILT_VNODE: ::int32_t = 3;\n-pub const EVFILT_WRITE: ::int32_t = 1;\n-\n-pub const EV_ADD: ::uint32_t = 0x1;\n-pub const EV_DELETE: ::uint32_t = 0x2;\n-pub const EV_ENABLE: ::uint32_t = 0x4;\n-pub const EV_DISABLE: ::uint32_t = 0x8;\n-pub const EV_ONESHOT: ::uint32_t = 0x10;\n-pub const EV_CLEAR: ::uint32_t = 0x20;\n-pub const EV_RECEIPT: ::uint32_t = 0x40;\n-pub const EV_DISPATCH: ::uint32_t = 0x80;\n-pub const EV_FLAG1: ::uint32_t = 0x2000;\n-pub const EV_ERROR: ::uint32_t = 0x4000;\n-pub const EV_EOF: ::uint32_t = 0x8000;\n-pub const EV_SYSFLAGS: ::uint32_t = 0xf000;\n-\n-pub const NOTE_LOWAT: ::uint32_t = 0x00000001;\n-pub const NOTE_DELETE: ::uint32_t = 0x00000001;\n-pub const NOTE_WRITE: ::uint32_t = 0x00000002;\n-pub const NOTE_EXTEND: ::uint32_t = 0x00000004;\n-pub const NOTE_ATTRIB: ::uint32_t = 0x00000008;\n-pub const NOTE_LINK: ::uint32_t = 0x00000010;\n-pub const NOTE_RENAME: ::uint32_t = 0x00000020;\n-pub const NOTE_REVOKE: ::uint32_t = 0x00000040;\n-pub const NOTE_EXIT: ::uint32_t = 0x80000000;\n-pub const NOTE_FORK: ::uint32_t = 0x40000000;\n-pub const NOTE_EXEC: ::uint32_t = 0x20000000;\n-pub const NOTE_PDATAMASK: ::uint32_t = 0x000fffff;\n-pub const NOTE_PCTRLMASK: ::uint32_t = 0xf0000000;\n-pub const NOTE_TRACK: ::uint32_t = 0x00000001;\n-pub const NOTE_TRACKERR: ::uint32_t = 0x00000002;\n-pub const NOTE_CHILD: ::uint32_t = 0x00000004;\n-\n-pub const CRTSCTS: ::tcflag_t = 0x00010000;\n-\n-pub const TMP_MAX : ::c_uint = 308915776;\n-\n-pub const NI_MAXHOST: ::socklen_t = 1025;\n-\n-pub const RTLD_NOLOAD: ::c_int = 0x2000;\n-pub const RTLD_LOCAL: ::c_int = 0x200;\n-\n-pub const CTL_MAXNAME: ::c_int = 12;\n-pub const SYSCTL_NAMELEN: ::c_int = 32;\n-pub const SYSCTL_DEFSIZE: ::c_int = 8;\n-pub const CTLTYPE_NODE: ::c_int = 1;\n-pub const CTLTYPE_INT: ::c_int = 2;\n-pub const CTLTYPE_STRING: ::c_int = 3;\n-pub const CTLTYPE_QUAD: ::c_int = 4;\n-pub const CTLTYPE_STRUCT: ::c_int = 5;\n-pub const CTLTYPE_BOOL: ::c_int = 6;\n-pub const CTLFLAG_READONLY: ::c_int = 0x00000000;\n-pub const CTLFLAG_READWRITE: ::c_int = 0x00000070;\n-pub const CTLFLAG_ANYWRITE: ::c_int = 0x00000080;\n-pub const CTLFLAG_PRIVATE: ::c_int = 0x00000100;\n-pub const CTLFLAG_PERMANENT: ::c_int = 0x00000200;\n-pub const CTLFLAG_OWNDATA: ::c_int = 0x00000400;\n-pub const CTLFLAG_IMMEDIATE: ::c_int = 0x00000800;\n-pub const CTLFLAG_HEX: ::c_int = 0x00001000;\n-pub const CTLFLAG_ROOT: ::c_int = 0x00002000;\n-pub const CTLFLAG_ANYNUMBER: ::c_int = 0x00004000;\n-pub const CTLFLAG_HIDDEN: ::c_int = 0x00008000;\n-pub const CTLFLAG_ALIAS: ::c_int = 0x00010000;\n-pub const CTLFLAG_MMAP: ::c_int = 0x00020000;\n-pub const CTLFLAG_OWNDESC: ::c_int = 0x00040000;\n-pub const CTLFLAG_UNSIGNED: ::c_int = 0x00080000;\n-pub const SYSCTL_VERS_MASK: ::c_int = 0xff000000;\n-pub const SYSCTL_VERS_0: ::c_int = 0x00000000;\n-pub const SYSCTL_VERS_1: ::c_int = 0x01000000;\n-pub const SYSCTL_VERSION: ::c_int = SYSCTL_VERS_1;\n-pub const CTL_EOL: ::c_int = -1;\n-pub const CTL_QUERY: ::c_int = -2;\n-pub const CTL_CREATE: ::c_int = -3;\n-pub const CTL_CREATESYM: ::c_int = -4;\n-pub const CTL_DESTROY: ::c_int = -5;\n-pub const CTL_MMAP: ::c_int = -6;\n-pub const CTL_DESCRIBE: ::c_int = -7;\n-pub const CTL_UNSPEC: ::c_int = 0;\n-pub const CTL_KERN: ::c_int = 1;\n-pub const CTL_VM: ::c_int = 2;\n-pub const CTL_VFS: ::c_int = 3;\n-pub const CTL_NET: ::c_int = 4;\n-pub const CTL_DEBUG: ::c_int = 5;\n-pub const CTL_HW: ::c_int = 6;\n-pub const CTL_MACHDEP: ::c_int = 7;\n-pub const CTL_USER: ::c_int = 8;\n-pub const CTL_DDB: ::c_int = 9;\n-pub const CTL_PROC: ::c_int = 10;\n-pub const CTL_VENDOR: ::c_int = 11;\n-pub const CTL_EMUL: ::c_int = 12;\n-pub const CTL_SECURITY: ::c_int = 13;\n-pub const CTL_MAXID: ::c_int = 14;\n-pub const KERN_OSTYPE: ::c_int = 1;\n-pub const KERN_OSRELEASE: ::c_int = 2;\n-pub const KERN_OSREV: ::c_int = 3;\n-pub const KERN_VERSION: ::c_int = 4;\n-pub const KERN_MAXVNODES: ::c_int = 5;\n-pub const KERN_MAXPROC: ::c_int = 6;\n-pub const KERN_MAXFILES: ::c_int = 7;\n-pub const KERN_ARGMAX: ::c_int = 8;\n-pub const KERN_SECURELVL: ::c_int = 9;\n-pub const KERN_HOSTNAME: ::c_int = 10;\n-pub const KERN_HOSTID: ::c_int = 11;\n-pub const KERN_CLOCKRATE: ::c_int = 12;\n-pub const KERN_VNODE: ::c_int = 13;\n-pub const KERN_PROC: ::c_int = 14;\n-pub const KERN_FILE: ::c_int = 15;\n-pub const KERN_PROF: ::c_int = 16;\n-pub const KERN_POSIX1: ::c_int = 17;\n-pub const KERN_NGROUPS: ::c_int = 18;\n-pub const KERN_JOB_CONTROL: ::c_int = 19;\n-pub const KERN_SAVED_IDS: ::c_int = 20;\n-pub const KERN_OBOOTTIME: ::c_int = 21;\n-pub const KERN_DOMAINNAME: ::c_int = 22;\n-pub const KERN_MAXPARTITIONS: ::c_int = 23;\n-pub const KERN_RAWPARTITION: ::c_int = 24;\n-pub const KERN_NTPTIME: ::c_int = 25;\n-pub const KERN_TIMEX: ::c_int = 26;\n-pub const KERN_AUTONICETIME: ::c_int = 27;\n-pub const KERN_AUTONICEVAL: ::c_int = 28;\n-pub const KERN_RTC_OFFSET: ::c_int = 29;\n-pub const KERN_ROOT_DEVICE: ::c_int = 30;\n-pub const KERN_MSGBUFSIZE: ::c_int = 31;\n-pub const KERN_FSYNC: ::c_int = 32;\n-pub const KERN_OLDSYSVMSG: ::c_int = 33;\n-pub const KERN_OLDSYSVSEM: ::c_int = 34;\n-pub const KERN_OLDSYSVSHM: ::c_int = 35;\n-pub const KERN_OLDSHORTCORENAME: ::c_int = 36;\n-pub const KERN_SYNCHRONIZED_IO: ::c_int = 37;\n-pub const KERN_IOV_MAX: ::c_int = 38;\n-pub const KERN_MBUF: ::c_int = 39;\n-pub const KERN_MAPPED_FILES: ::c_int = 40;\n-pub const KERN_MEMLOCK: ::c_int = 41;\n-pub const KERN_MEMLOCK_RANGE: ::c_int = 42;\n-pub const KERN_MEMORY_PROTECTION: ::c_int = 43;\n-pub const KERN_LOGIN_NAME_MAX: ::c_int = 44;\n-pub const KERN_DEFCORENAME: ::c_int = 45;\n-pub const KERN_LOGSIGEXIT: ::c_int = 46;\n-pub const KERN_PROC2: ::c_int = 47;\n-pub const KERN_PROC_ARGS: ::c_int = 48;\n-pub const KERN_FSCALE: ::c_int = 49;\n-pub const KERN_CCPU: ::c_int = 50;\n-pub const KERN_CP_TIME: ::c_int = 51;\n-pub const KERN_OLDSYSVIPC_INFO: ::c_int = 52;\n-pub const KERN_MSGBUF: ::c_int = 53;\n-pub const KERN_CONSDEV: ::c_int = 54;\n-pub const KERN_MAXPTYS: ::c_int = 55;\n-pub const KERN_PIPE: ::c_int = 56;\n-pub const KERN_MAXPHYS: ::c_int = 57;\n-pub const KERN_SBMAX: ::c_int = 58;\n-pub const KERN_TKSTAT: ::c_int = 59;\n-pub const KERN_MONOTONIC_CLOCK: ::c_int = 60;\n-pub const KERN_URND: ::c_int = 61;\n-pub const KERN_LABELSECTOR: ::c_int = 62;\n-pub const KERN_LABELOFFSET: ::c_int = 63;\n-pub const KERN_LWP: ::c_int = 64;\n-pub const KERN_FORKFSLEEP: ::c_int = 65;\n-pub const KERN_POSIX_THREADS: ::c_int = 66;\n-pub const KERN_POSIX_SEMAPHORES: ::c_int = 67;\n-pub const KERN_POSIX_BARRIERS: ::c_int = 68;\n-pub const KERN_POSIX_TIMERS: ::c_int = 69;\n-pub const KERN_POSIX_SPIN_LOCKS: ::c_int = 70;\n-pub const KERN_POSIX_READER_WRITER_LOCKS: ::c_int = 71;\n-pub const KERN_DUMP_ON_PANIC: ::c_int = 72;\n-pub const KERN_SOMAXKVA: ::c_int = 73;\n-pub const KERN_ROOT_PARTITION: ::c_int = 74;\n-pub const KERN_DRIVERS: ::c_int = 75;\n-pub const KERN_BUF: ::c_int = 76;\n-pub const KERN_FILE2: ::c_int = 77;\n-pub const KERN_VERIEXEC: ::c_int = 78;\n-pub const KERN_CP_ID: ::c_int = 79;\n-pub const KERN_HARDCLOCK_TICKS: ::c_int = 80;\n-pub const KERN_ARND: ::c_int = 81;\n-pub const KERN_SYSVIPC: ::c_int = 82;\n-pub const KERN_BOOTTIME: ::c_int = 83;\n-pub const KERN_EVCNT: ::c_int = 84;\n-pub const KERN_MAXID: ::c_int = 85;\n-pub const KERN_PROC_ALL: ::c_int = 0;\n-pub const KERN_PROC_PID: ::c_int = 1;\n-pub const KERN_PROC_PGRP: ::c_int = 2;\n-pub const KERN_PROC_SESSION: ::c_int = 3;\n-pub const KERN_PROC_TTY: ::c_int = 4;\n-pub const KERN_PROC_UID: ::c_int = 5;\n-pub const KERN_PROC_RUID: ::c_int = 6;\n-pub const KERN_PROC_GID: ::c_int = 7;\n-pub const KERN_PROC_RGID: ::c_int = 8;\n-\n-pub const EAI_SYSTEM: ::c_int = 11;\n-\n-extern {\n-    pub fn lutimes(file: *const ::c_char, times: *const ::timeval) -> ::c_int;\n-    pub fn getnameinfo(sa: *const ::sockaddr,\n-                       salen: ::socklen_t,\n-                       host: *mut ::c_char,\n-                       hostlen: ::socklen_t,\n-                       serv: *mut ::c_char,\n-                       sevlen: ::socklen_t,\n-                       flags: ::c_int) -> ::c_int;\n-    pub fn mprotect(addr: *mut ::c_void, len: ::size_t, prot: ::c_int)\n-                    -> ::c_int;\n-    pub fn sysctl(name: *const ::c_int,\n-                  namelen: ::c_uint,\n-                  oldp: *mut ::c_void,\n-                  oldlenp: *mut ::size_t,\n-                  newp: *const ::c_void,\n-                  newlen: ::size_t)\n-                  -> ::c_int;\n-    pub fn sysctlbyname(name: *const ::c_char,\n-                        oldp: *mut ::c_void,\n-                        oldlenp: *mut ::size_t,\n-                        newp: *const ::c_void,\n-                        newlen: ::size_t)\n-                        -> ::c_int;\n-    #[link_name = \"__kevent50\"]\n-    pub fn kevent(kq: ::c_int,\n-                  changelist: *const ::kevent,\n-                  nchanges: ::size_t,\n-                  eventlist: *mut ::kevent,\n-                  nevents: ::size_t,\n-                  timeout: *const ::timespec) -> ::c_int;\n-    #[link_name = \"__mount50\"]\n-    pub fn mount(src: *const ::c_char,\n-                 target: *const ::c_char,\n-                 flags: ::c_int,\n-                 data: *mut ::c_void,\n-                 size: ::size_t) -> ::c_int;\n-    pub fn ptrace(requeset: ::c_int,\n-                  pid: ::pid_t,\n-                  addr: *mut ::c_void,\n-                  data: ::c_int) -> ::c_int;\n-    pub fn pthread_setname_np(t: ::pthread_t,\n-                              name: *const ::c_char,\n-                              arg: *mut ::c_void) -> ::c_int;\n-    pub fn pthread_getattr_np(native: ::pthread_t,\n-                              attr: *mut ::pthread_attr_t) -> ::c_int;\n-    pub fn pthread_attr_getguardsize(attr: *const ::pthread_attr_t,\n-                                     guardsize: *mut ::size_t) -> ::c_int;\n-    pub fn pthread_attr_getstack(attr: *const ::pthread_attr_t,\n-                                 stackaddr: *mut *mut ::c_void,\n-                                 stacksize: *mut ::size_t) -> ::c_int;\n-    #[link_name = \"__sigtimedwait50\"]\n-    pub fn sigtimedwait(set: *const sigset_t,\n-                        info: *mut siginfo_t,\n-                        timeout: *const ::timespec) -> ::c_int;\n-    pub fn sigwaitinfo(set: *const sigset_t,\n-                       info: *mut siginfo_t) -> ::c_int;\n-    pub fn duplocale(base: ::locale_t) -> ::locale_t;\n-    pub fn freelocale(loc: ::locale_t);\n-    pub fn localeconv_l(loc: ::locale_t) -> *mut lconv;\n-    pub fn newlocale(mask: ::c_int,\n-                     locale: *const ::c_char,\n-                     base: ::locale_t) -> ::locale_t;\n-}\n-\n-mod other;\n-pub use self::other::*;"}, {"sha": "9b0b338b91e5b52050c6d0edab5b3d5ea0263037", "filename": "src/vendor/libc/src/unix/bsd/netbsdlike/netbsd/other/b32/mod.rs", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fnetbsd%2Fother%2Fb32%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fnetbsd%2Fother%2Fb32%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fnetbsd%2Fother%2Fb32%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,2 +0,0 @@\n-pub type c_long = i32;\n-pub type c_ulong = u32;"}, {"sha": "b07c476aa49d963c7476fa17418927e5ffc9c2e4", "filename": "src/vendor/libc/src/unix/bsd/netbsdlike/netbsd/other/b64/mod.rs", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fnetbsd%2Fother%2Fb64%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fnetbsd%2Fother%2Fb64%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fnetbsd%2Fother%2Fb64%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,2 +0,0 @@\n-pub type c_long = i64;\n-pub type c_ulong = u64;"}, {"sha": "f4e7cc406125bdf6e2d18e5a10bf2c8fce410127", "filename": "src/vendor/libc/src/unix/bsd/netbsdlike/netbsd/other/mod.rs", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fnetbsd%2Fother%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fnetbsd%2Fother%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fnetbsd%2Fother%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,13 +0,0 @@\n-cfg_if! {\n-    if #[cfg(target_arch = \"x86_64\")] {\n-        mod b64;\n-        pub use self::b64::*;\n-    } else if #[cfg(any(target_arch = \"arm\",\n-                        target_arch = \"powerpc\",\n-                        target_arch = \"x86\"))] {\n-        mod b32;\n-        pub use self::b32::*;\n-    } else {\n-        // Unknown target_arch\n-    }\n-}"}, {"sha": "695cf68dc5a4e9ac87c2962674a1c3990ffab01d", "filename": "src/vendor/libc/src/unix/bsd/netbsdlike/openbsdlike/bitrig.rs", "status": "removed", "additions": 0, "deletions": 75, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fopenbsdlike%2Fbitrig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fopenbsdlike%2Fbitrig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fopenbsdlike%2Fbitrig.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,75 +0,0 @@\n-s! {\n-    pub struct lconv {\n-        pub decimal_point: *mut ::c_char,\n-        pub thousands_sep: *mut ::c_char,\n-        pub grouping: *mut ::c_char,\n-        pub int_curr_symbol: *mut ::c_char,\n-        pub currency_symbol: *mut ::c_char,\n-        pub mon_decimal_point: *mut ::c_char,\n-        pub mon_thousands_sep: *mut ::c_char,\n-        pub mon_grouping: *mut ::c_char,\n-        pub positive_sign: *mut ::c_char,\n-        pub negative_sign: *mut ::c_char,\n-        pub int_frac_digits: ::c_char,\n-        pub frac_digits: ::c_char,\n-        pub p_cs_precedes: ::c_char,\n-        pub p_sep_by_space: ::c_char,\n-        pub n_cs_precedes: ::c_char,\n-        pub n_sep_by_space: ::c_char,\n-        pub p_sign_posn: ::c_char,\n-        pub n_sign_posn: ::c_char,\n-        pub int_p_cs_precedes: ::c_char,\n-        pub int_n_cs_precedes: ::c_char,\n-        pub int_p_sep_by_space: ::c_char,\n-        pub int_n_sep_by_space: ::c_char,\n-        pub int_p_sign_posn: ::c_char,\n-        pub int_n_sign_posn: ::c_char,\n-    }\n-}\n-\n-pub const LC_COLLATE_MASK: ::c_int = (1 << 0);\n-pub const LC_CTYPE_MASK: ::c_int = (1 << 1);\n-pub const LC_MESSAGES_MASK: ::c_int = (1 << 2);\n-pub const LC_MONETARY_MASK: ::c_int = (1 << 3);\n-pub const LC_NUMERIC_MASK: ::c_int = (1 << 4);\n-pub const LC_TIME_MASK: ::c_int = (1 << 5);\n-pub const LC_ALL_MASK: ::c_int = LC_COLLATE_MASK\n-                               | LC_CTYPE_MASK\n-                               | LC_MESSAGES_MASK\n-                               | LC_MONETARY_MASK\n-                               | LC_NUMERIC_MASK\n-                               | LC_TIME_MASK;\n-\n-pub const ERA: ::nl_item = 52;\n-pub const ERA_D_FMT: ::nl_item = 53;\n-pub const ERA_D_T_FMT: ::nl_item = 54;\n-pub const ERA_T_FMT: ::nl_item = 55;\n-pub const ALT_DIGITS: ::nl_item = 56;\n-\n-pub const D_MD_ORDER: ::nl_item = 57;\n-\n-pub const ALTMON_1: ::nl_item = 58;\n-pub const ALTMON_2: ::nl_item = 59;\n-pub const ALTMON_3: ::nl_item = 60;\n-pub const ALTMON_4: ::nl_item = 61;\n-pub const ALTMON_5: ::nl_item = 62;\n-pub const ALTMON_6: ::nl_item = 63;\n-pub const ALTMON_7: ::nl_item = 64;\n-pub const ALTMON_8: ::nl_item = 65;\n-pub const ALTMON_9: ::nl_item = 66;\n-pub const ALTMON_10: ::nl_item = 67;\n-pub const ALTMON_11: ::nl_item = 68;\n-pub const ALTMON_12: ::nl_item = 69;\n-\n-pub const KERN_RND: ::c_int = 31;\n-\n-extern {\n-    pub fn nl_langinfo_l(item: ::nl_item, locale: ::locale_t) -> *mut ::c_char;\n-    pub fn duplocale(base: ::locale_t) -> ::locale_t;\n-    pub fn freelocale(loc: ::locale_t) -> ::c_int;\n-    pub fn newlocale(mask: ::c_int,\n-                     locale: *const ::c_char,\n-                     base: ::locale_t) -> ::locale_t;\n-    pub fn uselocale(loc: ::locale_t) -> ::locale_t;\n-    pub fn querylocale(mask: ::c_int, loc: ::locale_t) -> *const ::c_char;\n-}"}, {"sha": "d7afb11eddd808306d074431289d511559975bec", "filename": "src/vendor/libc/src/unix/bsd/netbsdlike/openbsdlike/mod.rs", "status": "removed", "additions": 0, "deletions": 448, "changes": 448, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fopenbsdlike%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fopenbsdlike%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fopenbsdlike%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,448 +0,0 @@\n-pub type c_long = i64;\n-pub type c_ulong = u64;\n-pub type clock_t = i64;\n-pub type suseconds_t = i64;\n-pub type dev_t = i32;\n-pub type sigset_t = ::c_uint;\n-pub type blksize_t = ::int32_t;\n-pub type fsblkcnt_t = ::uint64_t;\n-pub type fsfilcnt_t = ::uint64_t;\n-pub type pthread_attr_t = *mut ::c_void;\n-pub type pthread_mutex_t = *mut ::c_void;\n-pub type pthread_mutexattr_t = *mut ::c_void;\n-pub type pthread_cond_t = *mut ::c_void;\n-pub type pthread_condattr_t = *mut ::c_void;\n-pub type pthread_rwlock_t = *mut ::c_void;\n-\n-s! {\n-    pub struct dirent {\n-        pub d_fileno: ::ino_t,\n-        pub d_off: ::off_t,\n-        pub d_reclen: u16,\n-        pub d_type: u8,\n-        pub d_namlen: u8,\n-        __d_padding: [u8; 4],\n-        pub d_name: [::c_char; 256],\n-    }\n-\n-    pub struct glob_t {\n-        pub gl_pathc:   ::c_int,\n-        pub gl_matchc:  ::c_int,\n-        pub gl_offs:    ::c_int,\n-        pub gl_flags:   ::c_int,\n-        pub gl_pathv:   *mut *mut ::c_char,\n-        __unused1: *mut ::c_void,\n-        __unused2: *mut ::c_void,\n-        __unused3: *mut ::c_void,\n-        __unused4: *mut ::c_void,\n-        __unused5: *mut ::c_void,\n-        __unused6: *mut ::c_void,\n-        __unused7: *mut ::c_void,\n-    }\n-\n-    pub struct kevent {\n-        pub ident: ::uintptr_t,\n-        pub filter: ::c_short,\n-        pub flags: ::c_ushort,\n-        pub fflags: ::c_uint,\n-        pub data: ::int64_t,\n-        pub udata: *mut ::c_void,\n-    }\n-\n-    pub struct stat {\n-        pub st_mode: ::mode_t,\n-        pub st_dev: ::dev_t,\n-        pub st_ino: ::ino_t,\n-        pub st_nlink: ::nlink_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::dev_t,\n-        pub st_atime: ::time_t,\n-        pub st_atime_nsec: ::c_long,\n-        pub st_mtime: ::time_t,\n-        pub st_mtime_nsec: ::c_long,\n-        pub st_ctime: ::time_t,\n-        pub st_ctime_nsec: ::c_long,\n-        pub st_size: ::off_t,\n-        pub st_blocks: ::blkcnt_t,\n-        pub st_blksize: ::blksize_t,\n-        pub st_flags: ::uint32_t,\n-        pub st_gen: ::uint32_t,\n-        pub st_birthtime: ::time_t,\n-        pub st_birthtime_nsec: ::c_long,\n-    }\n-\n-    pub struct statvfs {\n-        pub f_bsize: ::c_ulong,\n-        pub f_frsize: ::c_ulong,\n-        pub f_blocks: ::fsblkcnt_t,\n-        pub f_bfree: ::fsblkcnt_t,\n-        pub f_bavail: ::fsblkcnt_t,\n-        pub f_files: ::fsfilcnt_t,\n-        pub f_ffree: ::fsfilcnt_t,\n-        pub f_favail: ::fsfilcnt_t,\n-        pub f_fsid: ::c_ulong,\n-        pub f_flag: ::c_ulong,\n-        pub f_namemax: ::c_ulong,\n-    }\n-\n-    pub struct addrinfo {\n-        pub ai_flags: ::c_int,\n-        pub ai_family: ::c_int,\n-        pub ai_socktype: ::c_int,\n-        pub ai_protocol: ::c_int,\n-        pub ai_addrlen: ::socklen_t,\n-        pub ai_addr: *mut ::sockaddr,\n-        pub ai_canonname: *mut ::c_char,\n-        pub ai_next: *mut ::addrinfo,\n-    }\n-\n-    pub struct sockaddr_storage {\n-        pub ss_len: u8,\n-        pub ss_family: ::sa_family_t,\n-        __ss_pad1: [u8; 6],\n-        __ss_pad2: i64,\n-        __ss_pad3: [u8; 240],\n-    }\n-\n-    pub struct siginfo_t {\n-        pub si_signo: ::c_int,\n-        pub si_code: ::c_int,\n-        pub si_errno: ::c_int,\n-        pub si_addr: *mut ::c_char,\n-        __pad: [u8; 108],\n-    }\n-\n-    pub struct Dl_info {\n-        pub dli_fname: *const ::c_char,\n-        pub dli_fbase: *mut ::c_void,\n-        pub dli_sname: *const ::c_char,\n-        pub dli_saddr: *mut ::c_void,\n-    }\n-\n-    pub struct lastlog {\n-        ll_time: ::time_t,\n-        ll_line: [::c_char; UT_LINESIZE],\n-        ll_host: [::c_char; UT_HOSTSIZE],\n-    }\n-\n-    pub struct utmp {\n-        pub ut_line: [::c_char; UT_LINESIZE],\n-        pub ut_name: [::c_char; UT_NAMESIZE],\n-        pub ut_host: [::c_char; UT_HOSTSIZE],\n-        pub ut_time: ::time_t,\n-    }\n-}\n-\n-pub const UT_NAMESIZE: usize = 32;\n-pub const UT_LINESIZE: usize = 8;\n-pub const UT_HOSTSIZE: usize = 256;\n-\n-pub const O_CLOEXEC: ::c_int = 0x10000;\n-\n-pub const MS_SYNC : ::c_int = 0x0002;\n-pub const MS_INVALIDATE : ::c_int = 0x0004;\n-\n-pub const PTHREAD_STACK_MIN : ::size_t = 2048;\n-\n-pub const ENOATTR : ::c_int = 83;\n-pub const EILSEQ : ::c_int = 84;\n-pub const EOVERFLOW : ::c_int = 87;\n-pub const ECANCELED : ::c_int = 88;\n-pub const EIDRM : ::c_int = 89;\n-pub const ENOMSG : ::c_int = 90;\n-pub const ENOTSUP : ::c_int = 91;\n-pub const ELAST : ::c_int = 91;\n-\n-pub const F_DUPFD_CLOEXEC : ::c_int = 10;\n-\n-pub const RLIM_NLIMITS: ::c_int = 9;\n-\n-pub const SO_SNDTIMEO: ::c_int = 0x1005;\n-pub const SO_RCVTIMEO: ::c_int = 0x1006;\n-\n-pub const IPV6_JOIN_GROUP: ::c_int = 12;\n-pub const IPV6_LEAVE_GROUP: ::c_int = 13;\n-\n-pub const O_DSYNC : ::c_int = 128;\n-\n-pub const MAP_RENAME : ::c_int = 0x0000;\n-pub const MAP_NORESERVE : ::c_int = 0x0000;\n-pub const MAP_HASSEMAPHORE : ::c_int = 0x0000;\n-\n-pub const EIPSEC : ::c_int = 82;\n-pub const ENOMEDIUM : ::c_int = 85;\n-pub const EMEDIUMTYPE : ::c_int = 86;\n-\n-pub const EAI_SYSTEM: ::c_int = -11;\n-\n-pub const RUSAGE_THREAD: ::c_int = 1;\n-\n-pub const MAP_COPY : ::c_int = 0x0002;\n-pub const MAP_NOEXTEND : ::c_int = 0x0000;\n-\n-pub const _SC_CLK_TCK : ::c_int = 3;\n-pub const _SC_IOV_MAX : ::c_int = 51;\n-pub const _SC_GETGR_R_SIZE_MAX : ::c_int = 100;\n-pub const _SC_GETPW_R_SIZE_MAX : ::c_int = 101;\n-pub const _SC_LOGIN_NAME_MAX : ::c_int = 102;\n-pub const _SC_MQ_PRIO_MAX : ::c_int = 59;\n-pub const _SC_NPROCESSORS_ONLN : ::c_int = 503;\n-pub const _SC_THREADS : ::c_int = 91;\n-pub const _SC_THREAD_ATTR_STACKADDR : ::c_int = 77;\n-pub const _SC_THREAD_ATTR_STACKSIZE : ::c_int = 78;\n-pub const _SC_THREAD_DESTRUCTOR_ITERATIONS : ::c_int = 80;\n-pub const _SC_THREAD_KEYS_MAX : ::c_int = 81;\n-pub const _SC_THREAD_PRIO_INHERIT : ::c_int = 82;\n-pub const _SC_THREAD_PRIO_PROTECT : ::c_int = 83;\n-pub const _SC_THREAD_PRIORITY_SCHEDULING : ::c_int = 84;\n-pub const _SC_THREAD_PROCESS_SHARED : ::c_int = 85;\n-pub const _SC_THREAD_SAFE_FUNCTIONS : ::c_int = 103;\n-pub const _SC_THREAD_STACK_MIN : ::c_int = 89;\n-pub const _SC_THREAD_THREADS_MAX : ::c_int = 90;\n-pub const _SC_TTY_NAME_MAX : ::c_int = 107;\n-pub const _SC_ATEXIT_MAX : ::c_int = 46;\n-pub const _SC_AIO_LISTIO_MAX : ::c_int = 42;\n-pub const _SC_AIO_MAX : ::c_int = 43;\n-pub const _SC_ASYNCHRONOUS_IO : ::c_int = 45;\n-pub const _SC_MAPPED_FILES : ::c_int = 53;\n-pub const _SC_MEMLOCK : ::c_int = 54;\n-pub const _SC_MEMLOCK_RANGE : ::c_int = 55;\n-pub const _SC_MEMORY_PROTECTION : ::c_int = 56;\n-pub const _SC_MESSAGE_PASSING : ::c_int = 57;\n-pub const _SC_MQ_OPEN_MAX : ::c_int = 58;\n-pub const _SC_PRIORITY_SCHEDULING : ::c_int = 61;\n-pub const _SC_SEMAPHORES : ::c_int = 67;\n-pub const _SC_SHARED_MEMORY_OBJECTS : ::c_int = 68;\n-pub const _SC_SYNCHRONIZED_IO : ::c_int = 75;\n-pub const _SC_TIMERS : ::c_int = 94;\n-pub const _SC_XOPEN_CRYPT : ::c_int = 117;\n-pub const _SC_XOPEN_ENH_I18N : ::c_int = 118;\n-pub const _SC_XOPEN_LEGACY : ::c_int = 119;\n-pub const _SC_XOPEN_REALTIME : ::c_int = 120;\n-pub const _SC_XOPEN_REALTIME_THREADS : ::c_int = 121;\n-pub const _SC_XOPEN_UNIX : ::c_int = 123;\n-pub const _SC_XOPEN_VERSION : ::c_int = 125;\n-pub const _SC_SEM_NSEMS_MAX : ::c_int = 31;\n-pub const _SC_SEM_VALUE_MAX : ::c_int = 32;\n-pub const _SC_AIO_PRIO_DELTA_MAX : ::c_int = 44;\n-pub const _SC_DELAYTIMER_MAX : ::c_int = 50;\n-pub const _SC_PRIORITIZED_IO : ::c_int = 60;\n-pub const _SC_REALTIME_SIGNALS : ::c_int = 64;\n-pub const _SC_RTSIG_MAX : ::c_int = 66;\n-pub const _SC_SIGQUEUE_MAX : ::c_int = 70;\n-pub const _SC_TIMER_MAX : ::c_int = 93;\n-pub const _SC_HOST_NAME_MAX : ::c_int = 33;\n-\n-pub const FD_SETSIZE: usize = 1024;\n-\n-pub const ST_NOSUID: ::c_ulong = 2;\n-\n-pub const PTHREAD_MUTEX_INITIALIZER: pthread_mutex_t = 0 as *mut _;\n-pub const PTHREAD_COND_INITIALIZER: pthread_cond_t = 0 as *mut _;\n-pub const PTHREAD_RWLOCK_INITIALIZER: pthread_rwlock_t = 0 as *mut _;\n-\n-pub const PTHREAD_MUTEX_ERRORCHECK: ::c_int = 1;\n-pub const PTHREAD_MUTEX_RECURSIVE: ::c_int = 2;\n-pub const PTHREAD_MUTEX_NORMAL: ::c_int = 3;\n-pub const PTHREAD_MUTEX_STRICT_NP: ::c_int = 4;\n-pub const PTHREAD_MUTEX_DEFAULT: ::c_int = PTHREAD_MUTEX_STRICT_NP;\n-\n-pub const EVFILT_AIO: ::int16_t = -3;\n-pub const EVFILT_PROC: ::int16_t = -5;\n-pub const EVFILT_READ: ::int16_t = -1;\n-pub const EVFILT_SIGNAL: ::int16_t = -6;\n-pub const EVFILT_TIMER: ::int16_t = -7;\n-pub const EVFILT_VNODE: ::int16_t = -4;\n-pub const EVFILT_WRITE: ::int16_t = -2;\n-\n-pub const EV_ADD: ::uint16_t = 0x1;\n-pub const EV_DELETE: ::uint16_t = 0x2;\n-pub const EV_ENABLE: ::uint16_t = 0x4;\n-pub const EV_DISABLE: ::uint16_t = 0x8;\n-pub const EV_ONESHOT: ::uint16_t = 0x10;\n-pub const EV_CLEAR: ::uint16_t = 0x20;\n-pub const EV_FLAG1: ::uint16_t = 0x2000;\n-pub const EV_ERROR: ::uint16_t = 0x4000;\n-pub const EV_EOF: ::uint16_t = 0x8000;\n-pub const EV_SYSFLAGS: ::uint16_t = 0xf000;\n-\n-pub const NOTE_LOWAT: ::uint32_t = 0x00000001;\n-pub const NOTE_EOF: ::uint32_t = 0x00000002;\n-pub const NOTE_DELETE: ::uint32_t = 0x00000001;\n-pub const NOTE_WRITE: ::uint32_t = 0x00000002;\n-pub const NOTE_EXTEND: ::uint32_t = 0x00000004;\n-pub const NOTE_ATTRIB: ::uint32_t = 0x00000008;\n-pub const NOTE_LINK: ::uint32_t = 0x00000010;\n-pub const NOTE_RENAME: ::uint32_t = 0x00000020;\n-pub const NOTE_REVOKE: ::uint32_t = 0x00000040;\n-pub const NOTE_TRUNCATE: ::uint32_t = 0x00000080;\n-pub const NOTE_EXIT: ::uint32_t = 0x80000000;\n-pub const NOTE_FORK: ::uint32_t = 0x40000000;\n-pub const NOTE_EXEC: ::uint32_t = 0x20000000;\n-pub const NOTE_PDATAMASK: ::uint32_t = 0x000fffff;\n-pub const NOTE_PCTRLMASK: ::uint32_t = 0xf0000000;\n-pub const NOTE_TRACK: ::uint32_t = 0x00000001;\n-pub const NOTE_TRACKERR: ::uint32_t = 0x00000002;\n-pub const NOTE_CHILD: ::uint32_t = 0x00000004;\n-\n-pub const TMP_MAX : ::c_uint = 0x7fffffff;\n-\n-pub const NI_MAXHOST: ::size_t = 256;\n-\n-pub const RTLD_LOCAL: ::c_int = 0;\n-pub const CTL_MAXNAME: ::c_int = 12;\n-pub const CTLTYPE_NODE: ::c_int = 1;\n-pub const CTLTYPE_INT: ::c_int = 2;\n-pub const CTLTYPE_STRING: ::c_int = 3;\n-pub const CTLTYPE_QUAD: ::c_int = 4;\n-pub const CTLTYPE_STRUCT: ::c_int = 5;\n-pub const CTL_UNSPEC: ::c_int = 0;\n-pub const CTL_KERN: ::c_int = 1;\n-pub const CTL_VM: ::c_int = 2;\n-pub const CTL_FS: ::c_int = 3;\n-pub const CTL_NET: ::c_int = 4;\n-pub const CTL_DEBUG: ::c_int = 5;\n-pub const CTL_HW: ::c_int = 6;\n-pub const CTL_MACHDEP: ::c_int = 7;\n-pub const CTL_DDB: ::c_int = 9;\n-pub const CTL_VFS: ::c_int = 10;\n-pub const CTL_MAXID: ::c_int = 11;\n-pub const KERN_OSTYPE: ::c_int = 1;\n-pub const KERN_OSRELEASE: ::c_int = 2;\n-pub const KERN_OSREV: ::c_int = 3;\n-pub const KERN_VERSION: ::c_int = 4;\n-pub const KERN_MAXVNODES: ::c_int = 5;\n-pub const KERN_MAXPROC: ::c_int = 6;\n-pub const KERN_MAXFILES: ::c_int = 7;\n-pub const KERN_ARGMAX: ::c_int = 8;\n-pub const KERN_SECURELVL: ::c_int = 9;\n-pub const KERN_HOSTNAME: ::c_int = 10;\n-pub const KERN_HOSTID: ::c_int = 11;\n-pub const KERN_CLOCKRATE: ::c_int = 12;\n-pub const KERN_PROF: ::c_int = 16;\n-pub const KERN_POSIX1: ::c_int = 17;\n-pub const KERN_NGROUPS: ::c_int = 18;\n-pub const KERN_JOB_CONTROL: ::c_int = 19;\n-pub const KERN_SAVED_IDS: ::c_int = 20;\n-pub const KERN_BOOTTIME: ::c_int = 21;\n-pub const KERN_DOMAINNAME: ::c_int = 22;\n-pub const KERN_MAXPARTITIONS: ::c_int = 23;\n-pub const KERN_RAWPARTITION: ::c_int = 24;\n-pub const KERN_MAXTHREAD: ::c_int = 25;\n-pub const KERN_NTHREADS: ::c_int = 26;\n-pub const KERN_OSVERSION: ::c_int = 27;\n-pub const KERN_SOMAXCONN: ::c_int = 28;\n-pub const KERN_SOMINCONN: ::c_int = 29;\n-pub const KERN_USERMOUNT: ::c_int = 30;\n-pub const KERN_NOSUIDCOREDUMP: ::c_int = 32;\n-pub const KERN_FSYNC: ::c_int = 33;\n-pub const KERN_SYSVMSG: ::c_int = 34;\n-pub const KERN_SYSVSEM: ::c_int = 35;\n-pub const KERN_SYSVSHM: ::c_int = 36;\n-pub const KERN_ARND: ::c_int = 37;\n-pub const KERN_MSGBUFSIZE: ::c_int = 38;\n-pub const KERN_MALLOCSTATS: ::c_int = 39;\n-pub const KERN_CPTIME: ::c_int = 40;\n-pub const KERN_NCHSTATS: ::c_int = 41;\n-pub const KERN_FORKSTAT: ::c_int = 42;\n-pub const KERN_NSELCOLL: ::c_int = 43;\n-pub const KERN_TTY: ::c_int = 44;\n-pub const KERN_CCPU: ::c_int = 45;\n-pub const KERN_FSCALE: ::c_int = 46;\n-pub const KERN_NPROCS: ::c_int = 47;\n-pub const KERN_MSGBUF: ::c_int = 48;\n-pub const KERN_POOL: ::c_int = 49;\n-pub const KERN_STACKGAPRANDOM: ::c_int = 50;\n-pub const KERN_SYSVIPC_INFO: ::c_int = 51;\n-pub const KERN_SPLASSERT: ::c_int = 54;\n-pub const KERN_PROC_ARGS: ::c_int = 55;\n-pub const KERN_NFILES: ::c_int = 56;\n-pub const KERN_TTYCOUNT: ::c_int = 57;\n-pub const KERN_NUMVNODES: ::c_int = 58;\n-pub const KERN_MBSTAT: ::c_int = 59;\n-pub const KERN_SEMINFO: ::c_int = 61;\n-pub const KERN_SHMINFO: ::c_int = 62;\n-pub const KERN_INTRCNT: ::c_int = 63;\n-pub const KERN_WATCHDOG: ::c_int = 64;\n-pub const KERN_PROC: ::c_int = 66;\n-pub const KERN_MAXCLUSTERS: ::c_int = 67;\n-pub const KERN_EVCOUNT: ::c_int = 68;\n-pub const KERN_TIMECOUNTER: ::c_int = 69;\n-pub const KERN_MAXLOCKSPERUID: ::c_int = 70;\n-pub const KERN_CPTIME2: ::c_int = 71;\n-pub const KERN_CACHEPCT: ::c_int = 72;\n-pub const KERN_FILE: ::c_int = 73;\n-pub const KERN_CONSDEV: ::c_int = 75;\n-pub const KERN_NETLIVELOCKS: ::c_int = 76;\n-pub const KERN_POOL_DEBUG: ::c_int = 77;\n-pub const KERN_PROC_CWD: ::c_int = 78;\n-pub const KERN_PROC_NOBROADCASTKILL: ::c_int = 79;\n-pub const KERN_PROC_VMMAP: ::c_int = 80;\n-pub const KERN_GLOBAL_PTRACE: ::c_int = 81;\n-pub const KERN_CONSBUFSIZE: ::c_int = 82;\n-pub const KERN_CONSBUF: ::c_int = 83;\n-pub const KERN_MAXID: ::c_int = 84;\n-pub const KERN_PROC_ALL: ::c_int = 0;\n-pub const KERN_PROC_PID: ::c_int = 1;\n-pub const KERN_PROC_PGRP: ::c_int = 2;\n-pub const KERN_PROC_SESSION: ::c_int = 3;\n-pub const KERN_PROC_TTY: ::c_int = 4;\n-pub const KERN_PROC_UID: ::c_int = 5;\n-pub const KERN_PROC_RUID: ::c_int = 6;\n-pub const KERN_PROC_KTHREAD: ::c_int = 7;\n-pub const KERN_PROC_SHOW_THREADS: ::c_int = 0x40000000;\n-pub const KERN_SYSVIPC_MSG_INFO: ::c_int = 1;\n-pub const KERN_SYSVIPC_SEM_INFO: ::c_int = 2;\n-pub const KERN_SYSVIPC_SHM_INFO: ::c_int = 3;\n-pub const KERN_PROC_ARGV: ::c_int = 1;\n-pub const KERN_PROC_NARGV: ::c_int = 2;\n-pub const KERN_PROC_ENV: ::c_int = 3;\n-pub const KERN_PROC_NENV: ::c_int = 4;\n-pub const KI_NGROUPS: ::c_int = 16;\n-pub const KI_MAXCOMLEN: ::c_int = 24;\n-pub const KI_WMESGLEN: ::c_int = 8;\n-pub const KI_MAXLOGNAME: ::c_int = 32;\n-pub const KI_EMULNAMELEN: ::c_int = 8;\n-\n-extern {\n-    pub fn getnameinfo(sa: *const ::sockaddr,\n-                       salen: ::socklen_t,\n-                       host: *mut ::c_char,\n-                       hostlen: ::size_t,\n-                       serv: *mut ::c_char,\n-                       servlen: ::size_t,\n-                       flags: ::c_int) -> ::c_int;\n-    pub fn kevent(kq: ::c_int,\n-                  changelist: *const ::kevent,\n-                  nchanges: ::c_int,\n-                  eventlist: *mut ::kevent,\n-                  nevents: ::c_int,\n-                  timeout: *const ::timespec) -> ::c_int;\n-    pub fn mprotect(addr: *mut ::c_void, len: ::size_t, prot: ::c_int)\n-                    -> ::c_int;\n-    pub fn pthread_main_np() -> ::c_int;\n-    pub fn pthread_set_name_np(tid: ::pthread_t, name: *const ::c_char);\n-    pub fn pthread_stackseg_np(thread: ::pthread_t,\n-                               sinfo: *mut ::stack_t) -> ::c_int;\n-    pub fn sysctl(name: *const ::c_int,\n-                  namelen: ::c_uint,\n-                  oldp: *mut ::c_void,\n-                  oldlenp: *mut ::size_t,\n-                  newp: *mut ::c_void,\n-                  newlen: ::size_t)\n-                  -> ::c_int;\n-    pub fn getentropy(buf: *mut ::c_void, buflen: ::size_t) -> ::c_int;\n-}\n-\n-cfg_if! {\n-    if #[cfg(target_os = \"openbsd\")] {\n-        mod openbsd;\n-        pub use self::openbsd::*;\n-    } else if #[cfg(target_os = \"bitrig\")] {\n-        mod bitrig;\n-        pub use self::bitrig::*;\n-    } else {\n-        // Unknown target_os\n-    }\n-}"}, {"sha": "b7fed64ede5b0d1d8ebe6089bc8b308dc5c70452", "filename": "src/vendor/libc/src/unix/bsd/netbsdlike/openbsdlike/openbsd.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fopenbsdlike%2Fopenbsd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fopenbsdlike%2Fopenbsd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fbsd%2Fnetbsdlike%2Fopenbsdlike%2Fopenbsd.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,28 +0,0 @@\n-s! {\n-    pub struct lconv {\n-        pub decimal_point: *mut ::c_char,\n-        pub thousands_sep: *mut ::c_char,\n-        pub grouping: *mut ::c_char,\n-        pub int_curr_symbol: *mut ::c_char,\n-        pub currency_symbol: *mut ::c_char,\n-        pub mon_decimal_point: *mut ::c_char,\n-        pub mon_thousands_sep: *mut ::c_char,\n-        pub mon_grouping: *mut ::c_char,\n-        pub positive_sign: *mut ::c_char,\n-        pub negative_sign: *mut ::c_char,\n-        pub int_frac_digits: ::c_char,\n-        pub frac_digits: ::c_char,\n-        pub p_cs_precedes: ::c_char,\n-        pub p_sep_by_space: ::c_char,\n-        pub n_cs_precedes: ::c_char,\n-        pub n_sep_by_space: ::c_char,\n-        pub p_sign_posn: ::c_char,\n-        pub n_sign_posn: ::c_char,\n-        pub int_p_cs_precedes: ::c_char,\n-        pub int_p_sep_by_space: ::c_char,\n-        pub int_n_cs_precedes: ::c_char,\n-        pub int_n_sep_by_space: ::c_char,\n-        pub int_p_sign_posn: ::c_char,\n-        pub int_n_sign_posn: ::c_char,\n-    }\n-}"}, {"sha": "9b0b338b91e5b52050c6d0edab5b3d5ea0263037", "filename": "src/vendor/libc/src/unix/haiku/b32.rs", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fhaiku%2Fb32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fhaiku%2Fb32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fhaiku%2Fb32.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,2 +0,0 @@\n-pub type c_long = i32;\n-pub type c_ulong = u32;"}, {"sha": "5d63ce9ce43e04c7801a6944fc9bb5cfb8db0d3b", "filename": "src/vendor/libc/src/unix/haiku/b64.rs", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fhaiku%2Fb64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fhaiku%2Fb64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fhaiku%2Fb64.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,2 +0,0 @@\n-pub type c_ulong = u64;\n-pub type c_long = i64;"}, {"sha": "a241a020548109e43428d9dcc363c4bdcfd0ec38", "filename": "src/vendor/libc/src/unix/haiku/mod.rs", "status": "removed", "additions": 0, "deletions": 748, "changes": 748, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fhaiku%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fhaiku%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fhaiku%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,748 +0,0 @@\n-use dox::mem;\n-\n-pub type rlim_t = ::uintptr_t;\n-pub type sa_family_t = u8;\n-pub type pthread_key_t = ::c_int;\n-pub type nfds_t = ::c_long;\n-pub type tcflag_t = ::c_uint;\n-pub type speed_t = ::c_uint;\n-pub type c_char = i8;\n-pub type clock_t = i32;\n-pub type clockid_t = i32;\n-pub type time_t = i32;\n-pub type suseconds_t = i32;\n-pub type wchar_t = i32;\n-pub type off_t = i64;\n-pub type ino_t = i64;\n-pub type blkcnt_t = i64;\n-pub type blksize_t = i32;\n-pub type dev_t = i32;\n-pub type mode_t = u32;\n-pub type nlink_t = i32;\n-pub type useconds_t = u32;\n-pub type socklen_t = u32;\n-pub type pthread_t = ::uintptr_t;\n-pub type pthread_mutexattr_t = ::uintptr_t;\n-pub type sigset_t = u64;\n-pub type fsblkcnt_t = i64;\n-pub type fsfilcnt_t = i64;\n-pub type pthread_attr_t = *mut ::c_void;\n-pub type nl_item = ::c_int;\n-\n-pub enum timezone {}\n-\n-s! {\n-    pub struct sockaddr {\n-        pub sa_len: u8,\n-        pub sa_family: sa_family_t,\n-        pub sa_data: [::c_char; 30],\n-    }\n-\n-    pub struct sockaddr_in {\n-        pub sin_len: u8,\n-        pub sin_family: sa_family_t,\n-        pub sin_port: ::in_port_t,\n-        pub sin_addr: ::in_addr,\n-        pub sin_zero: [u8; 24],\n-    }\n-\n-    pub struct sockaddr_in6 {\n-        pub sin6_len: u8,\n-        pub sin6_family: sa_family_t,\n-        pub sin6_port: ::in_port_t,\n-        pub sin6_flowinfo: u32,\n-        pub sin6_addr: ::in6_addr,\n-        pub sin6_scope_id: u32,\n-    }\n-\n-    pub struct sockaddr_un {\n-        pub sun_len: u8,\n-        pub sun_family: sa_family_t,\n-        pub sun_path: [::c_char; 126]\n-    }\n-\n-    pub struct sockaddr_storage {\n-        pub ss_len: u8,\n-        pub ss_family: sa_family_t,\n-        __ss_pad1: [u8; 6],\n-        __ss_pad2: u64,\n-        __ss_pad3: [u8; 112],\n-    }\n-\n-    pub struct addrinfo {\n-        pub ai_flags: ::c_int,\n-        pub ai_family: ::c_int,\n-        pub ai_socktype: ::c_int,\n-        pub ai_protocol: ::c_int,\n-        pub ai_addrlen: socklen_t,\n-        pub ai_canonname: *mut c_char,\n-        pub ai_addr: *mut ::sockaddr,\n-        pub ai_next: *mut addrinfo,\n-    }\n-\n-    pub struct fd_set {\n-        fds_bits: [c_ulong; FD_SETSIZE / ULONG_SIZE],\n-    }\n-\n-    pub struct tm {\n-        pub tm_sec: ::c_int,\n-        pub tm_min: ::c_int,\n-        pub tm_hour: ::c_int,\n-        pub tm_mday: ::c_int,\n-        pub tm_mon: ::c_int,\n-        pub tm_year: ::c_int,\n-        pub tm_wday: ::c_int,\n-        pub tm_yday: ::c_int,\n-        pub tm_isdst: ::c_int,\n-        pub tm_gmtoff: ::c_long,\n-        pub tm_zone: *const ::c_char,\n-    }\n-\n-    pub struct utsname {\n-        pub sysname: [::c_char; 32],\n-        pub nodename: [::c_char; 32],\n-        pub release: [::c_char; 32],\n-        pub version: [::c_char; 32],\n-        pub machine: [::c_char; 32],\n-    }\n-\n-    pub struct lconv {\n-        pub decimal_point: *mut ::c_char,\n-        pub thousands_sep: *mut ::c_char,\n-        pub grouping: *mut ::c_char,\n-        pub int_curr_symbol: *mut ::c_char,\n-        pub currency_symbol: *mut ::c_char,\n-        pub mon_decimal_point: *mut ::c_char,\n-        pub mon_thousands_sep: *mut ::c_char,\n-        pub mon_grouping: *mut ::c_char,\n-        pub positive_sign: *mut ::c_char,\n-        pub negative_sign: *mut ::c_char,\n-        pub int_frac_digits: ::c_char,\n-        pub frac_digits: ::c_char,\n-        pub p_cs_precedes: ::c_char,\n-        pub p_sep_by_space: ::c_char,\n-        pub n_cs_precedes: ::c_char,\n-        pub n_sep_by_space: ::c_char,\n-        pub p_sign_posn: ::c_char,\n-        pub n_sign_posn: ::c_char,\n-        pub int_p_cs_precedes: ::c_char,\n-        pub int_p_sep_by_space: ::c_char,\n-        pub int_n_cs_precedes: ::c_char,\n-        pub int_n_sep_by_space: ::c_char,\n-        pub int_p_sign_posn: ::c_char,\n-        pub int_n_sign_posn: ::c_char,\n-    }\n-\n-    pub struct msghdr {\n-        pub msg_name: *mut ::c_void,\n-        pub msg_namelen: ::socklen_t,\n-        pub msg_iov: *mut ::iovec,\n-        pub msg_iovlen: ::c_int,\n-        pub msg_control: *mut ::c_void,\n-        pub msg_controllen: ::socklen_t,\n-        pub msg_flags: ::c_int,\n-    }\n-\n-    pub struct Dl_info {\n-        pub dli_fname: *const ::c_char,\n-        pub dli_fbase: *mut ::c_void,\n-        pub dli_sname: *const ::c_char,\n-        pub dli_saddr: *mut ::c_void,\n-    }\n-\n-    pub struct termios {\n-        pub c_iflag: ::tcflag_t,\n-        pub c_oflag: ::tcflag_t,\n-        pub c_cflag: ::tcflag_t,\n-        pub c_lflag: ::tcflag_t,\n-        pub c_line:  ::c_char,\n-        pub c_ispeed: ::speed_t,\n-        pub c_ospeed: ::speed_t,\n-        pub c_cc: [::cc_t; ::NCCS],\n-    }\n-\n-    pub struct stat {\n-        pub st_dev: dev_t,\n-        pub st_ino: ino_t,\n-        pub st_mode: mode_t,\n-        pub st_nlink: nlink_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_size: off_t,\n-        pub st_rdev: dev_t,\n-        pub st_blksize: blksize_t,\n-        pub st_atime: time_t,\n-        pub st_atime_nsec: c_long,\n-        pub st_mtime: time_t,\n-        pub st_mtime_nsec: c_long,\n-        pub st_ctime: time_t,\n-        pub st_ctime_nsec: c_long,\n-        pub st_crtime: time_t,\n-        pub st_crtime_nsec: c_long,\n-        pub st_type: u32,\n-        pub st_blocks: blkcnt_t,\n-    }\n-\n-    pub struct dirent {\n-        pub d_dev: dev_t,\n-        pub d_pdev: dev_t,\n-        pub d_ino: ino_t,\n-        pub d_pino: i64,\n-        pub d_reclen: ::c_ushort,\n-        pub d_name: [::c_char; 1024], // Max length is _POSIX_PATH_MAX\n-    }\n-\n-    pub struct glob_t {\n-        pub gl_pathc: ::size_t,\n-        __unused1: ::size_t,\n-        pub gl_offs: ::size_t,\n-        __unused2: ::size_t,\n-        pub gl_pathv: *mut *mut c_char,\n-\n-        __unused3: *mut ::c_void,\n-        __unused4: *mut ::c_void,\n-        __unused5: *mut ::c_void,\n-        __unused6: *mut ::c_void,\n-        __unused7: *mut ::c_void,\n-        __unused8: *mut ::c_void,\n-    }\n-\n-    pub struct pthread_mutex_t {\n-        flags: u32,\n-        lock: i32,\n-        unused: i32,\n-        owner: i32,\n-        owner_count: i32,\n-    }\n-\n-    pub struct pthread_cond_t {\n-        flags: u32,\n-        unused: i32,\n-        mutex: *mut ::c_void,\n-        waiter_count: i32,\n-        lock: i32,\n-    }\n-\n-    pub struct pthread_rwlock_t {\n-        flags: u32,\n-        owner: i32,\n-        lock_sem: i32,      // this is actually a union\n-        lock_count: i32,\n-        reader_count: i32,\n-        writer_count: i32,\n-        waiters: [*mut ::c_void; 2],\n-    }\n-\n-    pub struct passwd {\n-        pub pw_name: *mut ::c_char,\n-        pub pw_passwd: *mut ::c_char,\n-        pub pw_uid: ::uid_t,\n-        pub pw_gid: ::gid_t,\n-        pub pw_dir: *mut ::c_char,\n-        pub pw_shell: *mut ::c_char,\n-        pub pw_gecos: *mut ::c_char,\n-    }\n-\n-    pub struct statvfs {\n-        pub f_bsize: ::c_ulong,\n-        pub f_frsize: ::c_ulong,\n-        pub f_blocks: ::fsblkcnt_t,\n-        pub f_bfree: ::fsblkcnt_t,\n-        pub f_bavail: ::fsblkcnt_t,\n-        pub f_files: ::fsfilcnt_t,\n-        pub f_ffree: ::fsfilcnt_t,\n-        pub f_favail: ::fsfilcnt_t,\n-        pub f_fsid: ::c_ulong,\n-        pub f_flag: ::c_ulong,\n-        pub f_namemax: ::c_ulong,\n-    }\n-\n-    pub struct stack_t {\n-        pub ss_sp: *mut ::c_void,\n-        pub ss_size: ::size_t,\n-        pub ss_flags: ::c_int,\n-    }\n-\n-    pub struct siginfo_t {\n-        pub si_signo: ::c_int,\n-        pub si_code: ::c_int,\n-        pub si_errno: ::c_int,\n-        pub si_pid: ::pid_t,\n-        pub si_uid: ::uid_t,\n-        pub si_addr: *mut ::c_void,\n-        pub si_status: ::c_int,\n-        pub si_band: c_long,\n-        pub sigval: *mut ::c_void,\n-    }\n-\n-    pub struct sigaction {\n-        pub sa_sigaction: ::sighandler_t,\n-        pub sa_mask: ::sigset_t,\n-        pub sa_flags: ::c_int,\n-        sa_userdata: *mut ::c_void,\n-    }\n-\n-    pub struct sem_t {\n-        pub se_type: i32,\n-        pub se_named_id: i32, // this is actually a union\n-        pub se_unnamed: i32,\n-        pub se_padding: [i32; 4],\n-    }\n-\n-    pub struct pthread_condattr_t {\n-        pub process_shared: bool,\n-        pub clock_id: i32,\n-    }\n-}\n-\n-// intentionally not public, only used for fd_set\n-cfg_if! {\n-    if #[cfg(target_pointer_width = \"32\")] {\n-        const ULONG_SIZE: usize = 32;\n-    } else if #[cfg(target_pointer_width = \"64\")] {\n-        const ULONG_SIZE: usize = 64;\n-    } else {\n-        // Unknown target_pointer_width\n-    }\n-}\n-\n-pub const EXIT_FAILURE: ::c_int = 1;\n-pub const EXIT_SUCCESS: ::c_int = 0;\n-pub const RAND_MAX: ::c_int = 2147483647;\n-pub const EOF: ::c_int = -1;\n-pub const SEEK_SET: ::c_int = 0;\n-pub const SEEK_CUR: ::c_int = 1;\n-pub const SEEK_END: ::c_int = 2;\n-pub const _IOFBF: ::c_int = 0;\n-pub const _IONBF: ::c_int = 2;\n-pub const _IOLBF: ::c_int = 1;\n-\n-pub const F_DUPFD: ::c_int = 0x0001;\n-pub const F_GETFD: ::c_int = 0x0002;\n-pub const F_SETFD: ::c_int = 0x0004;\n-pub const F_GETFL: ::c_int = 0x0008;\n-pub const F_SETFL: ::c_int = 0x0010;\n-\n-pub const SIGTRAP: ::c_int = 22;\n-\n-pub const PTHREAD_CREATE_JOINABLE: ::c_int = 0;\n-pub const PTHREAD_CREATE_DETACHED: ::c_int = 1;\n-\n-pub const CLOCK_REALTIME: ::c_int = -1;\n-pub const CLOCK_MONOTONIC: ::c_int = 0;\n-\n-pub const RLIMIT_CORE: ::c_int = 0;\n-pub const RLIMIT_CPU: ::c_int = 1;\n-pub const RLIMIT_DATA: ::c_int = 2;\n-pub const RLIMIT_FSIZE: ::c_int = 3;\n-pub const RLIMIT_NOFILE: ::c_int = 4;\n-pub const RLIMIT_AS: ::c_int = 6;\n-// Haiku specific\n-pub const RLIMIT_NOVMON: ::c_int = 7;\n-pub const RLIMIT_NLIMITS: ::c_int = 8;\n-\n-pub const RUSAGE_SELF: ::c_int = 0;\n-\n-pub const NCCS: usize = 11;\n-\n-pub const O_RDONLY: ::c_int = 0x0000;\n-pub const O_WRONLY: ::c_int = 0x0001;\n-pub const O_RDWR: ::c_int = 0x0002;\n-pub const O_ACCMODE: ::c_int = 0x0003;\n-\n-pub const O_EXCL: ::c_int = 0x0100;\n-pub const O_CREAT: ::c_int = 0x0200;\n-pub const O_TRUNC: ::c_int = 0x0400;\n-pub const O_NOCTTY: ::c_int = 0x1000;\n-pub const O_NOTRAVERSE: ::c_int = 0x2000;\n-\n-pub const O_CLOEXEC: ::c_int = 0x00000040;\n-pub const O_NONBLOCK: ::c_int = 0x00000080;\n-pub const O_APPEND: ::c_int = 0x00000800;\n-pub const O_SYNC: ::c_int = 0x00010000;\n-pub const O_RSYNC: ::c_int = 0x00020000;\n-pub const O_DSYNC: ::c_int = 0x00040000;\n-pub const O_NOFOLLOW: ::c_int = 0x00080000;\n-pub const O_NOCACHE: ::c_int = 0x00100000;\n-pub const O_DIRECTORY: ::c_int = 0x00200000;\n-\n-pub const S_IFIFO: ::mode_t = 61440;\n-pub const S_IFCHR: ::mode_t = 49152;\n-pub const S_IFBLK: ::mode_t = 24576;\n-pub const S_IFDIR: ::mode_t = 16384;\n-pub const S_IFREG: ::mode_t = 32768;\n-pub const S_IFLNK: ::mode_t = 40960;\n-pub const S_IFSOCK: ::mode_t = 49152;\n-pub const S_IFMT: ::mode_t = 61440;\n-pub const S_IRWXU: ::mode_t = 448;\n-pub const S_IXUSR: ::mode_t = 64;\n-pub const S_IWUSR: ::mode_t = 128;\n-pub const S_IRUSR: ::mode_t = 256;\n-pub const S_IRWXG: ::mode_t = 70;\n-pub const S_IXGRP: ::mode_t = 10;\n-pub const S_IWGRP: ::mode_t = 20;\n-pub const S_IRGRP: ::mode_t = 40;\n-pub const S_IRWXO: ::mode_t = 7;\n-pub const S_IXOTH: ::mode_t = 1;\n-pub const S_IWOTH: ::mode_t = 2;\n-pub const S_IROTH: ::mode_t = 4;\n-pub const F_OK: ::c_int = 0;\n-pub const R_OK: ::c_int = 4;\n-pub const W_OK: ::c_int = 2;\n-pub const X_OK: ::c_int = 1;\n-pub const STDIN_FILENO: ::c_int = 0;\n-pub const STDOUT_FILENO: ::c_int = 1;\n-pub const STDERR_FILENO: ::c_int = 2;\n-pub const SIGHUP: ::c_int = 1;\n-pub const SIGINT: ::c_int = 2;\n-pub const SIGQUIT: ::c_int = 3;\n-pub const SIGILL: ::c_int = 4;\n-pub const SIGABRT: ::c_int = 6;\n-pub const SIGFPE: ::c_int = 8;\n-pub const SIGKILL: ::c_int = 9;\n-pub const SIGSEGV: ::c_int = 11;\n-pub const SIGPIPE: ::c_int = 7;\n-pub const SIGALRM: ::c_int = 14;\n-pub const SIGTERM: ::c_int = 15;\n-\n-pub const EAI_SYSTEM: ::c_int = 11;\n-\n-pub const PROT_NONE: ::c_int = 0;\n-pub const PROT_READ: ::c_int = 1;\n-pub const PROT_WRITE: ::c_int = 2;\n-pub const PROT_EXEC: ::c_int = 4;\n-\n-pub const LC_ALL: ::c_int = 0;\n-pub const LC_COLLATE: ::c_int = 1;\n-pub const LC_CTYPE: ::c_int = 2;\n-pub const LC_MONETARY: ::c_int = 3;\n-pub const LC_NUMERIC: ::c_int = 4;\n-pub const LC_TIME: ::c_int = 5;\n-pub const LC_MESSAGES: ::c_int = 6;\n-\n-// TODO: Haiku does not have MAP_FILE, but libstd/os.rs requires it\n-pub const MAP_FILE: ::c_int = 0x00;\n-pub const MAP_SHARED: ::c_int = 0x01;\n-pub const MAP_PRIVATE: ::c_int = 0x02;\n-pub const MAP_FIXED: ::c_int = 0x004;\n-\n-pub const MAP_FAILED: *mut ::c_void = !0 as *mut ::c_void;\n-\n-pub const MS_ASYNC: ::c_int = 0x01;\n-pub const MS_INVALIDATE: ::c_int = 0x04;\n-pub const MS_SYNC: ::c_int = 0x02;\n-\n-pub const EPERM : ::c_int = -2147483633;\n-pub const ENOENT : ::c_int = -2147459069;\n-pub const ESRCH : ::c_int = -2147454963;\n-pub const EINTR : ::c_int = -2147483638;\n-pub const EIO : ::c_int = -2147483647;\n-pub const ENXIO : ::c_int = -2147454965;\n-pub const E2BIG : ::c_int = -2147454975;\n-pub const ENOEXEC : ::c_int = -2147478782;\n-pub const EBADF : ::c_int = -2147459072;\n-pub const ECHILD : ::c_int = -2147454974;\n-pub const EDEADLK : ::c_int = -2147454973;\n-pub const ENOMEM : ::c_int = -2147454976;\n-pub const EACCES : ::c_int = -2147483646;\n-pub const EFAULT : ::c_int = -2147478783;\n-// pub const ENOTBLK : ::c_int = 15;\n-pub const EBUSY : ::c_int = -2147483634;\n-pub const EEXIST : ::c_int = -2147459070;\n-pub const EXDEV : ::c_int = -2147459061;\n-pub const ENODEV : ::c_int = -2147454969;\n-pub const ENOTDIR : ::c_int = -2147459067;\n-pub const EISDIR : ::c_int = -2147459063;\n-pub const EINVAL : ::c_int = -2147483643;\n-pub const ENFILE : ::c_int = -2147454970;\n-pub const EMFILE : ::c_int = -2147459062;\n-pub const ENOTTY : ::c_int = -2147454966;\n-pub const ETXTBSY : ::c_int = -2147454917;\n-pub const EFBIG : ::c_int = -2147454972;\n-pub const ENOSPC : ::c_int = -2147459065;\n-pub const ESPIPE : ::c_int = -2147454964;\n-pub const EROFS : ::c_int = -2147459064;\n-pub const EMLINK : ::c_int = -2147454971;\n-pub const EPIPE : ::c_int = -2147459059;\n-pub const EDOM : ::c_int = -2147454960;\n-pub const ERANGE : ::c_int = -2147454959;\n-pub const EAGAIN : ::c_int = -2147483637;\n-pub const EWOULDBLOCK : ::c_int = -2147483637;\n-\n-pub const EINPROGRESS : ::c_int = -2147454940;\n-pub const EALREADY : ::c_int = -2147454939;\n-pub const ENOTSOCK : ::c_int = -2147454932;\n-pub const EDESTADDRREQ : ::c_int = -2147454928;\n-pub const EMSGSIZE : ::c_int = -2147454934;\n-pub const EPROTOTYPE : ::c_int = -2147454958;\n-pub const ENOPROTOOPT : ::c_int = -2147454942;\n-pub const EPROTONOSUPPORT : ::c_int = -2147454957;\n-pub const EOPNOTSUPP : ::c_int = -2147454933;\n-pub const EPFNOSUPPORT : ::c_int = -2147454956;\n-pub const EAFNOSUPPORT : ::c_int = -2147454955;\n-pub const EADDRINUSE : ::c_int = -2147454954;\n-pub const EADDRNOTAVAIL : ::c_int = -2147454953;\n-pub const ENETDOWN : ::c_int = -2147454953;\n-pub const ENETUNREACH : ::c_int = -2147454951;\n-pub const ENETRESET : ::c_int = -2147454950;\n-pub const ECONNABORTED : ::c_int = -2147454949;\n-pub const ECONNRESET : ::c_int = -2147454948;\n-pub const ENOBUFS : ::c_int = -2147454941;\n-pub const EISCONN : ::c_int = -2147454947;\n-pub const ENOTCONN : ::c_int = -2147454946;\n-pub const ESHUTDOWN : ::c_int = -2147454945;\n-pub const ETIMEDOUT : ::c_int = -2147483639;\n-pub const ECONNREFUSED : ::c_int = -2147454944;\n-pub const ELOOP : ::c_int = -2147459060;\n-pub const ENAMETOOLONG : ::c_int = -2147459068;\n-pub const EHOSTDOWN : ::c_int = -2147454931;\n-pub const EHOSTUNREACH : ::c_int = -2147454943;\n-pub const ENOTEMPTY : ::c_int = -2147459066;\n-pub const EDQUOT : ::c_int = -2147454927;\n-pub const ESTALE : ::c_int = -2147454936;\n-pub const ENOLCK : ::c_int = -2147454968;\n-pub const ENOSYS : ::c_int = -2147454967;\n-pub const EIDRM : ::c_int = -2147454926;\n-pub const ENOMSG : ::c_int = -2147454937;\n-pub const EOVERFLOW : ::c_int = -2147454935;\n-pub const ECANCELED : ::c_int = -2147454929;\n-pub const EILSEQ : ::c_int = -2147454938;\n-pub const ENOATTR : ::c_int = -2147454916;\n-pub const EBADMSG : ::c_int = -2147454930;\n-pub const EMULTIHOP : ::c_int = -2147454925;\n-pub const ENOLINK : ::c_int = -2147454923;\n-pub const EPROTO : ::c_int = -2147454919;\n-\n-pub const IPPROTO_RAW: ::c_int = 255;\n-\n-// These are prefixed with POSIX_ on Haiku\n-pub const MADV_NORMAL: ::c_int = 1;\n-pub const MADV_SEQUENTIAL: ::c_int = 2;\n-pub const MADV_RANDOM: ::c_int = 3;\n-pub const MADV_WILLNEED: ::c_int = 4;\n-pub const MADV_DONTNEED: ::c_int = 5;\n-\n-pub const IFF_LOOPBACK: ::c_int = 0x0008;\n-\n-pub const AF_UNIX: ::c_int = 9;\n-pub const AF_INET: ::c_int = 1;\n-pub const AF_INET6: ::c_int = 6;\n-pub const SOCK_RAW: ::c_int = 3;\n-pub const IPPROTO_TCP: ::c_int = 6;\n-pub const IPPROTO_IP: ::c_int = 0;\n-pub const IPPROTO_IPV6: ::c_int = 41;\n-pub const IP_MULTICAST_TTL: ::c_int = 10;\n-pub const IP_MULTICAST_LOOP: ::c_int = 11;\n-pub const IP_TTL: ::c_int = 4;\n-pub const IP_HDRINCL: ::c_int = 2;\n-pub const IP_ADD_MEMBERSHIP: ::c_int = 12;\n-pub const IP_DROP_MEMBERSHIP: ::c_int = 13;\n-\n-pub const TCP_NODELAY: ::c_int = 0x01;\n-pub const TCP_MAXSEG: ::c_int = 0x02;\n-pub const TCP_NOPUSH: ::c_int = 0x04;\n-pub const TCP_NOOPT: ::c_int = 0x08;\n-\n-pub const IPV6_MULTICAST_LOOP: ::c_int = 26;\n-pub const IPV6_JOIN_GROUP: ::c_int = 28;\n-pub const IPV6_LEAVE_GROUP: ::c_int = 29;\n-pub const IPV6_V6ONLY: ::c_int = 30;\n-\n-pub const SO_DEBUG: ::c_int = 0x00000004;\n-\n-pub const MSG_NOSIGNAL: ::c_int = 0x0800;\n-\n-pub const SHUT_RD: ::c_int = 0;\n-pub const SHUT_WR: ::c_int = 1;\n-pub const SHUT_RDWR: ::c_int = 2;\n-\n-pub const LOCK_SH: ::c_int = 0x01;\n-pub const LOCK_EX: ::c_int = 0x02;\n-pub const LOCK_NB: ::c_int = 0x04;\n-pub const LOCK_UN: ::c_int = 0x08;\n-\n-pub const SIGSTKSZ: ::size_t = 16384;\n-\n-pub const SA_NODEFER: ::c_int = 0x08;\n-pub const SA_RESETHAND: ::c_int = 0x04;\n-pub const SA_RESTART: ::c_int = 0x10;\n-pub const SA_NOCLDSTOP: ::c_int = 0x01;\n-\n-pub const FD_SETSIZE: usize = 1024;\n-\n-pub const RTLD_NOW: ::c_int = 0x1;\n-pub const RTLD_DEFAULT: *mut ::c_void = 0isize as *mut ::c_void;\n-\n-pub const BUFSIZ: ::c_uint = 8192;\n-pub const FILENAME_MAX: ::c_uint = 256;\n-pub const FOPEN_MAX: ::c_uint = 128;\n-pub const L_tmpnam: ::c_uint = 512;\n-pub const TMP_MAX: ::c_uint = 32768;\n-pub const _PC_NAME_MAX: ::c_int = 4;\n-\n-pub const FIONBIO: ::c_int = 0xbe000000;\n-\n-pub const _SC_IOV_MAX : ::c_int = 32;\n-pub const _SC_GETGR_R_SIZE_MAX : ::c_int = 25;\n-pub const _SC_GETPW_R_SIZE_MAX : ::c_int = 26;\n-pub const _SC_PAGESIZE : ::c_int = 27;\n-pub const _SC_THREAD_ATTR_STACKADDR : ::c_int = 48;\n-pub const _SC_THREAD_ATTR_STACKSIZE : ::c_int = 49;\n-pub const _SC_THREAD_PRIORITY_SCHEDULING : ::c_int = 50;\n-pub const _SC_THREAD_PROCESS_SHARED : ::c_int = 46;\n-pub const _SC_THREAD_STACK_MIN : ::c_int = 47;\n-pub const _SC_THREADS : ::c_int = 31;\n-pub const _SC_ATEXIT_MAX : ::c_int = 37;\n-\n-pub const PTHREAD_STACK_MIN: ::size_t = 8192;\n-\n-pub const PTHREAD_MUTEX_INITIALIZER: pthread_mutex_t = pthread_mutex_t {\n-    flags: 0,\n-    lock: 0,\n-    unused: -42,\n-    owner: -1,\n-    owner_count: 0,\n-};\n-pub const PTHREAD_COND_INITIALIZER: pthread_cond_t = pthread_cond_t {\n-    flags: 0,\n-    unused: -42,\n-    mutex: 0 as *mut _,\n-    waiter_count: 0,\n-    lock: 0,\n-};\n-pub const PTHREAD_RWLOCK_INITIALIZER: pthread_rwlock_t = pthread_rwlock_t {\n-    flags: 0,\n-    owner: 0,\n-    lock_sem: 0,\n-    lock_count: 0,\n-    reader_count: 0,\n-    writer_count: 0,\n-    waiters: [0 as *mut _; 2],\n-};\n-\n-pub const PTHREAD_MUTEX_DEFAULT: ::c_int = 0;\n-pub const PTHREAD_MUTEX_NORMAL: ::c_int = 1;\n-pub const PTHREAD_MUTEX_ERRORCHECK: ::c_int = 2;\n-pub const PTHREAD_MUTEX_RECURSIVE: ::c_int = 3;\n-\n-pub const FIOCLEX: c_ulong = 0; // TODO: does not exist on Haiku!\n-\n-pub const SA_ONSTACK: c_ulong = 0x20;\n-pub const SA_SIGINFO: c_ulong = 0x40;\n-pub const SA_NOCLDWAIT: c_ulong = 0x02;\n-\n-pub const SIGCHLD: ::c_int = 5;\n-pub const SIGBUS: ::c_int = 30;\n-pub const SIG_SETMASK: ::c_int = 3;\n-\n-pub const RUSAGE_CHILDREN: ::c_int = -1;\n-\n-pub const SOCK_STREAM: ::c_int = 1;\n-pub const SOCK_DGRAM: ::c_int = 2;\n-\n-pub const SOL_SOCKET: ::c_int = -1;\n-pub const SO_ACCEPTCONN: ::c_int = 0x00000001;\n-pub const SO_BROADCAST: ::c_int = 0x00000002;\n-pub const SO_DONTROUTE: ::c_int = 0x00000008;\n-pub const SO_KEEPALIVE: ::c_int = 0x00000010;\n-pub const SO_OOBINLINE: ::c_int = 0x00000020;\n-pub const SO_REUSEADDR: ::c_int = 0x00000040;\n-pub const SO_REUSEPORT: ::c_int = 0x00000080;\n-pub const SO_USELOOPBACK: ::c_int = 0x00000100;\n-pub const SO_LINGER: ::c_int = 0x00000200;\n-pub const SO_SNDBUF: ::c_int = 0x40000001;\n-pub const SO_SNDLOWAT: ::c_int = 0x40000002;\n-pub const SO_SNDTIMEO: ::c_int = 0x40000003;\n-pub const SO_RCVBUF: ::c_int = 0x40000004;\n-pub const SO_RCVLOWAT: ::c_int = 0x40000005;\n-pub const SO_RCVTIMEO: ::c_int = 0x40000006;\n-pub const SO_ERROR: ::c_int = 0x40000007;\n-pub const SO_TYPE: ::c_int = 0x40000008;\n-pub const SO_NONBLOCK: ::c_int = 0x40000009;\n-pub const SO_BINDTODEVICE: ::c_int = 0x4000000a;\n-pub const SO_PEERCRED: ::c_int = 0x4000000b;\n-\n-pub const NI_MAXHOST: ::size_t = 1025;\n-\n-f! {\n-    pub fn FD_CLR(fd: ::c_int, set: *mut fd_set) -> () {\n-        let fd = fd as usize;\n-        let size = mem::size_of_val(&(*set).fds_bits[0]) * 8;\n-        (*set).fds_bits[fd / size] &= !(1 << (fd % size));\n-        return\n-    }\n-\n-    pub fn FD_ISSET(fd: ::c_int, set: *mut fd_set) -> bool {\n-        let fd = fd as usize;\n-        let size = mem::size_of_val(&(*set).fds_bits[0]) * 8;\n-        return ((*set).fds_bits[fd / size] & (1 << (fd % size))) != 0\n-    }\n-\n-    pub fn FD_SET(fd: ::c_int, set: *mut fd_set) -> () {\n-        let fd = fd as usize;\n-        let size = mem::size_of_val(&(*set).fds_bits[0]) * 8;\n-        (*set).fds_bits[fd / size] |= 1 << (fd % size);\n-        return\n-    }\n-\n-    pub fn FD_ZERO(set: *mut fd_set) -> () {\n-        for slot in (*set).fds_bits.iter_mut() {\n-            *slot = 0;\n-        }\n-    }\n-\n-    pub fn WIFEXITED(status: ::c_int) -> bool {\n-        (status >> 8) == 0\n-    }\n-\n-    pub fn WEXITSTATUS(status: ::c_int) -> ::c_int {\n-        (status & 0xff)\n-    }\n-\n-    pub fn WTERMSIG(status: ::c_int) -> ::c_int {\n-        (status >> 8) & 0xff\n-    }\n-}\n-\n-extern {\n-    pub fn clock_gettime(clk_id: ::c_int, tp: *mut ::timespec) -> ::c_int;\n-    pub fn pthread_attr_getguardsize(attr: *const ::pthread_attr_t,\n-                                     guardsize: *mut ::size_t) -> ::c_int;\n-    pub fn pthread_attr_getstack(attr: *const ::pthread_attr_t,\n-                                 stackaddr: *mut *mut ::c_void,\n-                                 stacksize: *mut ::size_t) -> ::c_int;\n-    pub fn pthread_condattr_getclock(attr: *const pthread_condattr_t,\n-                                     clock_id: *mut clockid_t) -> ::c_int;\n-    pub fn pthread_condattr_setclock(attr: *mut pthread_condattr_t,\n-                                     clock_id: clockid_t) -> ::c_int;\n-    pub fn memalign(align: ::size_t, size: ::size_t) -> *mut ::c_void;\n-    pub fn setgroups(ngroups: ::size_t,\n-                     ptr: *const ::gid_t) -> ::c_int;\n-    pub fn getpwuid_r(uid: ::uid_t,\n-                      pwd: *mut passwd,\n-                      buffer: *mut ::c_char,\n-                      bufferSize: ::size_t,\n-                      result: *mut *mut passwd) -> ::c_int;\n-    pub fn ioctl(fd: ::c_int, request: ::c_int, ...) -> ::c_int;\n-    pub fn mprotect(addr: *const ::c_void, len: ::size_t, prot: ::c_int)\n-                    -> ::c_int;\n-    pub fn getnameinfo(sa: *const ::sockaddr,\n-                       salen: ::socklen_t,\n-                       host: *mut ::c_char,\n-                       hostlen: ::size_t,\n-                       serv: *mut ::c_char,\n-                       sevlen: ::size_t,\n-                       flags: ::c_int) -> ::c_int;\n-    pub fn pthread_mutex_timedlock(lock: *mut pthread_mutex_t,\n-                                   abstime: *const ::timespec) -> ::c_int;\n-}\n-\n-cfg_if! {\n-    if #[cfg(target_pointer_width = \"64\")] {\n-        mod b64;\n-        pub use self::b64::*;\n-    } else {\n-        mod b32;\n-        pub use self::b32::*;\n-    }\n-}"}, {"sha": "e822b063d9f7aed10cf0b2167115c5f4bbf6a7dc", "filename": "src/vendor/libc/src/unix/mod.rs", "status": "removed", "additions": 0, "deletions": 862, "changes": 862, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,862 +0,0 @@\n-//! Definitions found commonly among almost all Unix derivatives\n-//!\n-//! More functions and definitions can be found in the more specific modules\n-//! according to the platform in question.\n-\n-use dox::Option;\n-\n-pub type pid_t = i32;\n-pub type uid_t = u32;\n-pub type gid_t = u32;\n-pub type in_addr_t = u32;\n-pub type in_port_t = u16;\n-pub type sighandler_t = ::size_t;\n-pub type cc_t = ::c_uchar;\n-\n-pub enum DIR {}\n-pub enum locale_t {}\n-\n-s! {\n-    pub struct group {\n-        pub gr_name: *mut ::c_char,\n-        pub gr_passwd: *mut ::c_char,\n-        pub gr_gid: ::gid_t,\n-        pub gr_mem: *mut *mut ::c_char,\n-    }\n-\n-    pub struct utimbuf {\n-        pub actime: time_t,\n-        pub modtime: time_t,\n-    }\n-\n-    pub struct timeval {\n-        pub tv_sec: time_t,\n-        pub tv_usec: suseconds_t,\n-    }\n-\n-    pub struct timespec {\n-        pub tv_sec: time_t,\n-        pub tv_nsec: c_long,\n-    }\n-\n-    pub struct rlimit {\n-        pub rlim_cur: rlim_t,\n-        pub rlim_max: rlim_t,\n-    }\n-\n-    pub struct rusage {\n-        pub ru_utime: timeval,\n-        pub ru_stime: timeval,\n-        pub ru_maxrss: c_long,\n-        pub ru_ixrss: c_long,\n-        pub ru_idrss: c_long,\n-        pub ru_isrss: c_long,\n-        pub ru_minflt: c_long,\n-        pub ru_majflt: c_long,\n-        pub ru_nswap: c_long,\n-        pub ru_inblock: c_long,\n-        pub ru_oublock: c_long,\n-        pub ru_msgsnd: c_long,\n-        pub ru_msgrcv: c_long,\n-        pub ru_nsignals: c_long,\n-        pub ru_nvcsw: c_long,\n-        pub ru_nivcsw: c_long,\n-\n-        #[cfg(any(target_env = \"musl\"))]\n-        __reserved: [c_long; 16],\n-    }\n-\n-    #[cfg_attr(target_os = \"netbsd\", repr(packed))]\n-    pub struct in_addr {\n-        pub s_addr: in_addr_t,\n-    }\n-\n-    pub struct in6_addr {\n-        pub s6_addr: [u8; 16],\n-        __align: [u32; 0],\n-    }\n-\n-    pub struct ip_mreq {\n-        pub imr_multiaddr: in_addr,\n-        pub imr_interface: in_addr,\n-    }\n-\n-    pub struct ipv6_mreq {\n-        pub ipv6mr_multiaddr: in6_addr,\n-        #[cfg(target_os = \"android\")]\n-        pub ipv6mr_interface: ::c_int,\n-        #[cfg(not(target_os = \"android\"))]\n-        pub ipv6mr_interface: ::c_uint,\n-    }\n-\n-    pub struct hostent {\n-        pub h_name: *mut ::c_char,\n-        pub h_aliases: *mut *mut ::c_char,\n-        pub h_addrtype: ::c_int,\n-        pub h_length: ::c_int,\n-        pub h_addr_list: *mut *mut ::c_char,\n-    }\n-\n-    pub struct iovec {\n-        pub iov_base: *mut ::c_void,\n-        pub iov_len: ::size_t,\n-    }\n-\n-    pub struct pollfd {\n-        pub fd: ::c_int,\n-        pub events: ::c_short,\n-        pub revents: ::c_short,\n-    }\n-\n-    pub struct winsize {\n-        pub ws_row: ::c_ushort,\n-        pub ws_col: ::c_ushort,\n-        pub ws_xpixel: ::c_ushort,\n-        pub ws_ypixel: ::c_ushort,\n-    }\n-\n-    pub struct linger {\n-        pub l_onoff: ::c_int,\n-        pub l_linger: ::c_int,\n-    }\n-}\n-\n-pub const SIG_DFL: sighandler_t = 0 as sighandler_t;\n-pub const SIG_IGN: sighandler_t = 1 as sighandler_t;\n-pub const SIG_ERR: sighandler_t = !0 as sighandler_t;\n-\n-pub const DT_FIFO: u8 = 1;\n-pub const DT_CHR: u8 = 2;\n-pub const DT_DIR: u8 = 4;\n-pub const DT_BLK: u8 = 6;\n-pub const DT_REG: u8 = 8;\n-pub const DT_LNK: u8 = 10;\n-pub const DT_SOCK: u8 = 12;\n-\n-pub const FD_CLOEXEC: ::c_int = 0x1;\n-\n-pub const USRQUOTA: ::c_int = 0;\n-pub const GRPQUOTA: ::c_int = 1;\n-\n-pub const SIGIOT: ::c_int = 6;\n-\n-pub const S_ISUID: ::c_int = 0x800;\n-pub const S_ISGID: ::c_int = 0x400;\n-pub const S_ISVTX: ::c_int = 0x200;\n-\n-pub const POLLIN: ::c_short = 0x1;\n-pub const POLLPRI: ::c_short = 0x2;\n-pub const POLLOUT: ::c_short = 0x4;\n-pub const POLLERR: ::c_short = 0x8;\n-pub const POLLHUP: ::c_short = 0x10;\n-pub const POLLNVAL: ::c_short = 0x20;\n-\n-pub const IF_NAMESIZE: ::size_t = 16;\n-\n-pub const RTLD_LAZY: ::c_int = 0x1;\n-\n-pub const LOG_EMERG: ::c_int = 0;\n-pub const LOG_ALERT: ::c_int = 1;\n-pub const LOG_CRIT: ::c_int = 2;\n-pub const LOG_ERR: ::c_int = 3;\n-pub const LOG_WARNING: ::c_int = 4;\n-pub const LOG_NOTICE: ::c_int = 5;\n-pub const LOG_INFO: ::c_int = 6;\n-pub const LOG_DEBUG: ::c_int = 7;\n-\n-pub const LOG_KERN: ::c_int = 0;\n-pub const LOG_USER: ::c_int = 1 << 3;\n-pub const LOG_MAIL: ::c_int = 2 << 3;\n-pub const LOG_DAEMON: ::c_int = 3 << 3;\n-pub const LOG_AUTH: ::c_int = 4 << 3;\n-pub const LOG_SYSLOG: ::c_int = 5 << 3;\n-pub const LOG_LPR: ::c_int = 6 << 3;\n-pub const LOG_NEWS: ::c_int = 7 << 3;\n-pub const LOG_UUCP: ::c_int = 8 << 3;\n-pub const LOG_LOCAL0: ::c_int = 16 << 3;\n-pub const LOG_LOCAL1: ::c_int = 17 << 3;\n-pub const LOG_LOCAL2: ::c_int = 18 << 3;\n-pub const LOG_LOCAL3: ::c_int = 19 << 3;\n-pub const LOG_LOCAL4: ::c_int = 20 << 3;\n-pub const LOG_LOCAL5: ::c_int = 21 << 3;\n-pub const LOG_LOCAL6: ::c_int = 22 << 3;\n-pub const LOG_LOCAL7: ::c_int = 23 << 3;\n-\n-pub const LOG_PID: ::c_int = 0x01;\n-pub const LOG_CONS: ::c_int = 0x02;\n-pub const LOG_ODELAY: ::c_int = 0x04;\n-pub const LOG_NDELAY: ::c_int = 0x08;\n-pub const LOG_NOWAIT: ::c_int = 0x10;\n-\n-pub const LOG_PRIMASK: ::c_int = 7;\n-pub const LOG_FACMASK: ::c_int = 0x3f8;\n-\n-pub const PRIO_PROCESS: ::c_int = 0;\n-pub const PRIO_PGRP: ::c_int = 1;\n-pub const PRIO_USER: ::c_int = 2;\n-\n-pub const PRIO_MIN: ::c_int = -20;\n-pub const PRIO_MAX: ::c_int = 20;\n-\n-cfg_if! {\n-    if #[cfg(dox)] {\n-        // on dox builds don't pull in anything\n-    } else if #[cfg(all(not(stdbuild), feature = \"use_std\"))] {\n-        // cargo build, don't pull in anything extra as the libstd  dep\n-        // already pulls in all libs.\n-    } else if #[cfg(any(all(target_env = \"musl\", not(target_arch = \"mips\"))))] {\n-        #[link(name = \"c\", kind = \"static\")]\n-        extern {}\n-    } else if #[cfg(target_os = \"emscripten\")] {\n-        #[link(name = \"c\")]\n-        extern {}\n-    } else if #[cfg(all(target_os = \"netbsd\", target_vendor = \"rumprun\"))] {\n-        // Since we don't use -nodefaultlibs on Rumprun, libc is always pulled\n-        // in automatically by the linker. We avoid passing it explicitly, as it\n-        // causes some versions of binutils to crash with an assertion failure.\n-        #[link(name = \"m\")]\n-        extern {}\n-    } else if #[cfg(any(target_os = \"macos\",\n-                        target_os = \"ios\",\n-                        target_os = \"android\",\n-                        target_os = \"openbsd\",\n-                        target_os = \"bitrig\"))] {\n-        #[link(name = \"c\")]\n-        #[link(name = \"m\")]\n-        extern {}\n-    } else if #[cfg(target_os = \"haiku\")] {\n-        #[link(name = \"root\")]\n-        #[link(name = \"network\")]\n-        extern {}\n-    } else {\n-        #[link(name = \"c\")]\n-        #[link(name = \"m\")]\n-        #[link(name = \"rt\")]\n-        extern {}\n-    }\n-}\n-\n-extern {\n-    pub fn getgrnam(name: *const ::c_char) -> *mut group;\n-    pub fn getgrgid(gid: ::gid_t) -> *mut group;\n-\n-    pub fn endpwent();\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__getpwnam50\")]\n-    pub fn getpwnam(name: *const ::c_char) -> *mut passwd;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__getpwuid50\")]\n-    pub fn getpwuid(uid: ::uid_t) -> *mut passwd;\n-\n-    pub fn fprintf(stream: *mut ::FILE,\n-                   format: *const ::c_char, ...) -> ::c_int;\n-    pub fn printf(format: *const ::c_char, ...) -> ::c_int;\n-    pub fn snprintf(s: *mut ::c_char, n: ::size_t,\n-                    format: *const ::c_char, ...) -> ::c_int;\n-    pub fn sprintf(s: *mut ::c_char, format: *const ::c_char, ...) -> ::c_int;\n-    pub fn fscanf(stream: *mut ::FILE, format: *const ::c_char, ...) -> ::c_int;\n-    pub fn scanf(format: *const ::c_char, ...) -> ::c_int;\n-    pub fn sscanf(s: *const ::c_char, format: *const ::c_char, ...) -> ::c_int;\n-    pub fn getchar_unlocked() -> ::c_int;\n-    pub fn putchar_unlocked(c: ::c_int) -> ::c_int;\n-\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__socket30\")]\n-    pub fn socket(domain: ::c_int, ty: ::c_int, protocol: ::c_int) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"connect$UNIX2003\")]\n-    pub fn connect(socket: ::c_int, address: *const sockaddr,\n-                   len: socklen_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"bind$UNIX2003\")]\n-    pub fn bind(socket: ::c_int, address: *const sockaddr,\n-                address_len: socklen_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"listen$UNIX2003\")]\n-    pub fn listen(socket: ::c_int, backlog: ::c_int) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"accept$UNIX2003\")]\n-    pub fn accept(socket: ::c_int, address: *mut sockaddr,\n-                  address_len: *mut socklen_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"getpeername$UNIX2003\")]\n-    pub fn getpeername(socket: ::c_int, address: *mut sockaddr,\n-                       address_len: *mut socklen_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"getsockname$UNIX2003\")]\n-    pub fn getsockname(socket: ::c_int, address: *mut sockaddr,\n-                       address_len: *mut socklen_t) -> ::c_int;\n-    pub fn setsockopt(socket: ::c_int, level: ::c_int, name: ::c_int,\n-                      value: *const ::c_void,\n-                      option_len: socklen_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"socketpair$UNIX2003\")]\n-    pub fn socketpair(domain: ::c_int, type_: ::c_int, protocol: ::c_int,\n-                      socket_vector: *mut ::c_int) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"sendto$UNIX2003\")]\n-    pub fn sendto(socket: ::c_int, buf: *const ::c_void, len: ::size_t,\n-                  flags: ::c_int, addr: *const sockaddr,\n-                  addrlen: socklen_t) -> ::ssize_t;\n-    pub fn shutdown(socket: ::c_int, how: ::c_int) -> ::c_int;\n-\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"chmod$UNIX2003\")]\n-    pub fn chmod(path: *const c_char, mode: mode_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"fchmod$UNIX2003\")]\n-    pub fn fchmod(fd: ::c_int, mode: mode_t) -> ::c_int;\n-\n-    #[cfg_attr(target_os = \"macos\", link_name = \"fstat$INODE64\")]\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__fstat50\")]\n-    pub fn fstat(fildes: ::c_int, buf: *mut stat) -> ::c_int;\n-\n-    pub fn mkdir(path: *const c_char, mode: mode_t) -> ::c_int;\n-\n-    #[cfg_attr(target_os = \"macos\", link_name = \"stat$INODE64\")]\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__stat50\")]\n-    pub fn stat(path: *const c_char, buf: *mut stat) -> ::c_int;\n-\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"popen$UNIX2003\")]\n-    pub fn popen(command: *const c_char,\n-                 mode: *const c_char) -> *mut ::FILE;\n-    pub fn pclose(stream: *mut ::FILE) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"fdopen$UNIX2003\")]\n-    pub fn fdopen(fd: ::c_int, mode: *const c_char) -> *mut ::FILE;\n-    pub fn fileno(stream: *mut ::FILE) -> ::c_int;\n-\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"open$UNIX2003\")]\n-    pub fn open(path: *const c_char, oflag: ::c_int, ...) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"creat$UNIX2003\")]\n-    pub fn creat(path: *const c_char, mode: mode_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"fcntl$UNIX2003\")]\n-    pub fn fcntl(fd: ::c_int, cmd: ::c_int, ...) -> ::c_int;\n-\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86_64\"),\n-               link_name = \"opendir$INODE64\")]\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"opendir$INODE64$UNIX2003\")]\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__opendir30\")]\n-    pub fn opendir(dirname: *const c_char) -> *mut ::DIR;\n-    #[cfg_attr(target_os = \"macos\", link_name = \"readdir_r$INODE64\")]\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__readdir_r30\")]\n-    pub fn readdir_r(dirp: *mut ::DIR, entry: *mut ::dirent,\n-                     result: *mut *mut ::dirent) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"closedir$UNIX2003\")]\n-    pub fn closedir(dirp: *mut ::DIR) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86_64\"),\n-               link_name = \"rewinddir$INODE64\")]\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"rewinddir$INODE64$UNIX2003\")]\n-    pub fn rewinddir(dirp: *mut ::DIR);\n-\n-    pub fn access(path: *const c_char, amode: ::c_int) -> ::c_int;\n-    pub fn alarm(seconds: ::c_uint) -> ::c_uint;\n-    pub fn chdir(dir: *const c_char) -> ::c_int;\n-    pub fn chown(path: *const c_char, uid: uid_t,\n-                 gid: gid_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"lchown$UNIX2003\")]\n-    pub fn lchown(path: *const c_char, uid: uid_t,\n-                  gid: gid_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"close$UNIX2003\")]\n-    pub fn close(fd: ::c_int) -> ::c_int;\n-    pub fn dup(fd: ::c_int) -> ::c_int;\n-    pub fn dup2(src: ::c_int, dst: ::c_int) -> ::c_int;\n-    pub fn execv(prog: *const c_char,\n-                 argv: *const *const c_char) -> ::c_int;\n-    pub fn execve(prog: *const c_char, argv: *const *const c_char,\n-                  envp: *const *const c_char)\n-                  -> ::c_int;\n-    pub fn execvp(c: *const c_char,\n-                  argv: *const *const c_char) -> ::c_int;\n-    pub fn fork() -> pid_t;\n-    pub fn fpathconf(filedes: ::c_int, name: ::c_int) -> c_long;\n-    pub fn getcwd(buf: *mut c_char, size: ::size_t) -> *mut c_char;\n-    pub fn getegid() -> gid_t;\n-    pub fn geteuid() -> uid_t;\n-    pub fn getgid() -> gid_t;\n-    pub fn getgroups(ngroups_max: ::c_int, groups: *mut gid_t)\n-                     -> ::c_int;\n-    pub fn getlogin() -> *mut c_char;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"getopt$UNIX2003\")]\n-    pub fn getopt(argc: ::c_int, argv: *const *mut c_char,\n-                  optstr: *const c_char) -> ::c_int;\n-    pub fn getpgid(pid: pid_t) -> pid_t;\n-    pub fn getpgrp() -> pid_t;\n-    pub fn getpid() -> pid_t;\n-    pub fn getppid() -> pid_t;\n-    pub fn getuid() -> uid_t;\n-    pub fn isatty(fd: ::c_int) -> ::c_int;\n-    pub fn link(src: *const c_char, dst: *const c_char) -> ::c_int;\n-    pub fn lseek(fd: ::c_int, offset: off_t, whence: ::c_int) -> off_t;\n-    pub fn pathconf(path: *const c_char, name: ::c_int) -> c_long;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pause$UNIX2003\")]\n-    pub fn pause() -> ::c_int;\n-    pub fn pipe(fds: *mut ::c_int) -> ::c_int;\n-    pub fn posix_memalign(memptr: *mut *mut ::c_void,\n-                      align: ::size_t,\n-                      size: ::size_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"read$UNIX2003\")]\n-    pub fn read(fd: ::c_int, buf: *mut ::c_void, count: ::size_t)\n-                -> ::ssize_t;\n-    pub fn rmdir(path: *const c_char) -> ::c_int;\n-    pub fn setgid(gid: gid_t) -> ::c_int;\n-    pub fn setpgid(pid: pid_t, pgid: pid_t) -> ::c_int;\n-    pub fn setsid() -> pid_t;\n-    pub fn setuid(uid: uid_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"sleep$UNIX2003\")]\n-    pub fn sleep(secs: ::c_uint) -> ::c_uint;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"nanosleep$UNIX2003\")]\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__nanosleep50\")]\n-    pub fn nanosleep(rqtp: *const timespec,\n-                     rmtp: *mut timespec) -> ::c_int;\n-    pub fn tcgetpgrp(fd: ::c_int) -> pid_t;\n-    pub fn ttyname(fd: ::c_int) -> *mut c_char;\n-    pub fn unlink(c: *const c_char) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"wait$UNIX2003\")]\n-    pub fn wait(status: *mut ::c_int) -> pid_t;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"waitpid$UNIX2003\")]\n-    pub fn waitpid(pid: pid_t, status: *mut ::c_int, options: ::c_int)\n-                   -> pid_t;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"write$UNIX2003\")]\n-    pub fn write(fd: ::c_int, buf: *const ::c_void, count: ::size_t)\n-                 -> ::ssize_t;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pread$UNIX2003\")]\n-    pub fn pread(fd: ::c_int, buf: *mut ::c_void, count: ::size_t,\n-                 offset: off_t) -> ::ssize_t;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pwrite$UNIX2003\")]\n-    pub fn pwrite(fd: ::c_int, buf: *const ::c_void, count: ::size_t,\n-                  offset: off_t) -> ::ssize_t;\n-    pub fn umask(mask: mode_t) -> mode_t;\n-\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__utime50\")]\n-    pub fn utime(file: *const c_char, buf: *const utimbuf) -> ::c_int;\n-\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-                   link_name = \"kill$UNIX2003\")]\n-    pub fn kill(pid: pid_t, sig: ::c_int) -> ::c_int;\n-\n-    pub fn mlock(addr: *const ::c_void, len: ::size_t) -> ::c_int;\n-    pub fn munlock(addr: *const ::c_void, len: ::size_t) -> ::c_int;\n-    pub fn mlockall(flags: ::c_int) -> ::c_int;\n-    pub fn munlockall() -> ::c_int;\n-\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"mmap$UNIX2003\")]\n-    pub fn mmap(addr: *mut ::c_void,\n-                len: ::size_t,\n-                prot: ::c_int,\n-                flags: ::c_int,\n-                fd: ::c_int,\n-                offset: off_t)\n-                -> *mut ::c_void;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"munmap$UNIX2003\")]\n-    pub fn munmap(addr: *mut ::c_void, len: ::size_t) -> ::c_int;\n-\n-    pub fn if_nametoindex(ifname: *const c_char) -> ::c_uint;\n-    pub fn if_indextoname(ifindex: ::c_uint,\n-                          ifname: *mut ::c_char) -> *mut ::c_char;\n-\n-    #[cfg_attr(target_os = \"macos\", link_name = \"lstat$INODE64\")]\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__lstat50\")]\n-    pub fn lstat(path: *const c_char, buf: *mut stat) -> ::c_int;\n-\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"fsync$UNIX2003\")]\n-    pub fn fsync(fd: ::c_int) -> ::c_int;\n-\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"setenv$UNIX2003\")]\n-    pub fn setenv(name: *const c_char, val: *const c_char,\n-                  overwrite: ::c_int) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"unsetenv$UNIX2003\")]\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__unsetenv13\")]\n-    pub fn unsetenv(name: *const c_char) -> ::c_int;\n-\n-    pub fn symlink(path1: *const c_char,\n-                   path2: *const c_char) -> ::c_int;\n-\n-    pub fn ftruncate(fd: ::c_int, length: off_t) -> ::c_int;\n-\n-    pub fn signal(signum: ::c_int, handler: sighandler_t) -> sighandler_t;\n-\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"getrlimit$UNIX2003\")]\n-    pub fn getrlimit(resource: ::c_int, rlim: *mut rlimit) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"setrlimit$UNIX2003\")]\n-    pub fn setrlimit(resource: ::c_int, rlim: *const rlimit) -> ::c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__getrusage50\")]\n-    pub fn getrusage(resource: ::c_int, usage: *mut rusage) -> ::c_int;\n-\n-    pub fn getdtablesize() -> ::c_int;\n-    #[cfg_attr(any(target_os = \"macos\", target_os = \"ios\"),\n-               link_name = \"realpath$DARWIN_EXTSN\")]\n-    pub fn realpath(pathname: *const ::c_char, resolved: *mut ::c_char)\n-                    -> *mut ::c_char;\n-\n-    pub fn flock(fd: ::c_int, operation: ::c_int) -> ::c_int;\n-\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__gettimeofday50\")]\n-    pub fn gettimeofday(tp: *mut ::timeval,\n-                        tz: *mut ::c_void) -> ::c_int;\n-\n-    pub fn pthread_self() -> ::pthread_t;\n-    pub fn pthread_create(native: *mut ::pthread_t,\n-                          attr: *const ::pthread_attr_t,\n-                          f: extern fn(*mut ::c_void) -> *mut ::c_void,\n-                          value: *mut ::c_void) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pthread_join$UNIX2003\")]\n-    pub fn pthread_join(native: ::pthread_t,\n-                        value: *mut *mut ::c_void) -> ::c_int;\n-    pub fn pthread_attr_init(attr: *mut ::pthread_attr_t) -> ::c_int;\n-    pub fn pthread_attr_destroy(attr: *mut ::pthread_attr_t) -> ::c_int;\n-    pub fn pthread_attr_setstacksize(attr: *mut ::pthread_attr_t,\n-                                     stack_size: ::size_t) -> ::c_int;\n-    pub fn pthread_attr_setdetachstate(attr: *mut ::pthread_attr_t,\n-                                       state: ::c_int) -> ::c_int;\n-    pub fn pthread_detach(thread: ::pthread_t) -> ::c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__libc_thr_yield\")]\n-    pub fn sched_yield() -> ::c_int;\n-    pub fn pthread_key_create(key: *mut pthread_key_t,\n-                              dtor: Option<unsafe extern fn(*mut ::c_void)>)\n-                              -> ::c_int;\n-    pub fn pthread_key_delete(key: pthread_key_t) -> ::c_int;\n-    pub fn pthread_getspecific(key: pthread_key_t) -> *mut ::c_void;\n-    pub fn pthread_setspecific(key: pthread_key_t, value: *const ::c_void)\n-                               -> ::c_int;\n-    pub fn pthread_mutex_init(lock: *mut pthread_mutex_t,\n-                              attr: *const pthread_mutexattr_t) -> ::c_int;\n-    pub fn pthread_mutex_destroy(lock: *mut pthread_mutex_t) -> ::c_int;\n-    pub fn pthread_mutex_lock(lock: *mut pthread_mutex_t) -> ::c_int;\n-    pub fn pthread_mutex_trylock(lock: *mut pthread_mutex_t) -> ::c_int;\n-    pub fn pthread_mutex_unlock(lock: *mut pthread_mutex_t) -> ::c_int;\n-\n-    pub fn pthread_mutexattr_init(attr: *mut pthread_mutexattr_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pthread_mutexattr_destroy$UNIX2003\")]\n-    pub fn pthread_mutexattr_destroy(attr: *mut pthread_mutexattr_t) -> ::c_int;\n-    pub fn pthread_mutexattr_settype(attr: *mut pthread_mutexattr_t,\n-                                     _type: ::c_int) -> ::c_int;\n-\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pthread_cond_init$UNIX2003\")]\n-    pub fn pthread_cond_init(cond: *mut pthread_cond_t,\n-                             attr: *const pthread_condattr_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pthread_cond_wait$UNIX2003\")]\n-    pub fn pthread_cond_wait(cond: *mut pthread_cond_t,\n-                             lock: *mut pthread_mutex_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pthread_cond_timedwait$UNIX2003\")]\n-    pub fn pthread_cond_timedwait(cond: *mut pthread_cond_t,\n-                              lock: *mut pthread_mutex_t,\n-                              abstime: *const ::timespec) -> ::c_int;\n-    pub fn pthread_cond_signal(cond: *mut pthread_cond_t) -> ::c_int;\n-    pub fn pthread_cond_broadcast(cond: *mut pthread_cond_t) -> ::c_int;\n-    pub fn pthread_cond_destroy(cond: *mut pthread_cond_t) -> ::c_int;\n-    pub fn pthread_condattr_init(attr: *mut pthread_condattr_t) -> ::c_int;\n-    pub fn pthread_condattr_destroy(attr: *mut pthread_condattr_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pthread_rwlock_destroy$UNIX2003\")]\n-    pub fn pthread_rwlock_destroy(lock: *mut pthread_rwlock_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pthread_rwlock_rdlock$UNIX2003\")]\n-    pub fn pthread_rwlock_rdlock(lock: *mut pthread_rwlock_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pthread_rwlock_tryrdlock$UNIX2003\")]\n-    pub fn pthread_rwlock_tryrdlock(lock: *mut pthread_rwlock_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pthread_rwlock_wrlock$UNIX2003\")]\n-    pub fn pthread_rwlock_wrlock(lock: *mut pthread_rwlock_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pthread_rwlock_trywrlock$UNIX2003\")]\n-    pub fn pthread_rwlock_trywrlock(lock: *mut pthread_rwlock_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pthread_rwlock_unlock$UNIX2003\")]\n-    pub fn pthread_rwlock_unlock(lock: *mut pthread_rwlock_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pthread_sigmask$UNIX2003\")]\n-    pub fn pthread_sigmask(how: ::c_int, set: *const sigset_t,\n-                           oldset: *mut sigset_t) -> ::c_int;\n-    pub fn pthread_kill(thread: ::pthread_t, sig: ::c_int) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"linux\", not(target_env = \"musl\")),\n-               link_name = \"__xpg_strerror_r\")]\n-    pub fn strerror_r(errnum: ::c_int, buf: *mut c_char,\n-                      buflen: ::size_t) -> ::c_int;\n-\n-    pub fn getsockopt(sockfd: ::c_int,\n-                      level: ::c_int,\n-                      optname: ::c_int,\n-                      optval: *mut ::c_void,\n-                      optlen: *mut ::socklen_t) -> ::c_int;\n-    pub fn raise(signum: ::c_int) -> ::c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__sigaction14\")]\n-    pub fn sigaction(signum: ::c_int,\n-                     act: *const sigaction,\n-                     oldact: *mut sigaction) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"sigaltstack$UNIX2003\")]\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__sigaltstack14\")]\n-    pub fn sigaltstack(ss: *const stack_t,\n-                       oss: *mut stack_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch =\"x86\"),\n-               link_name = \"sigwait$UNIX2003\")]\n-    pub fn sigwait(set: *const sigset_t,\n-                   sig: *mut ::c_int) -> ::c_int;\n-\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__utimes50\")]\n-    pub fn utimes(filename: *const ::c_char,\n-                  times: *const ::timeval) -> ::c_int;\n-    pub fn dlopen(filename: *const ::c_char,\n-                  flag: ::c_int) -> *mut ::c_void;\n-    pub fn dlerror() -> *mut ::c_char;\n-    pub fn dlsym(handle: *mut ::c_void,\n-                 symbol: *const ::c_char) -> *mut ::c_void;\n-    pub fn dlclose(handle: *mut ::c_void) -> ::c_int;\n-    pub fn dladdr(addr: *const ::c_void, info: *mut Dl_info) -> ::c_int;\n-\n-    pub fn getaddrinfo(node: *const c_char,\n-                       service: *const c_char,\n-                       hints: *const addrinfo,\n-                       res: *mut *mut addrinfo) -> ::c_int;\n-    pub fn freeaddrinfo(res: *mut addrinfo);\n-    pub fn gai_strerror(errcode: ::c_int) -> *const ::c_char;\n-\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__gmtime_r50\")]\n-    pub fn gmtime_r(time_p: *const time_t, result: *mut tm) -> *mut tm;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__localtime_r50\")]\n-    pub fn localtime_r(time_p: *const time_t, result: *mut tm) -> *mut tm;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"mktime$UNIX2003\")]\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__mktime50\")]\n-    pub fn mktime(tm: *mut tm) -> time_t;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__time50\")]\n-    pub fn time(time: *mut time_t) -> time_t;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__locatime50\")]\n-    pub fn localtime(time: *const time_t) -> *mut tm;\n-\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__mknod50\")]\n-    pub fn mknod(pathname: *const ::c_char, mode: ::mode_t,\n-                 dev: ::dev_t) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"writev$UNIX2003\")]\n-    pub fn writev(fd: ::c_int,\n-                  iov: *const ::iovec,\n-                  iovcnt: ::c_int) -> ::ssize_t;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"readv$UNIX2003\")]\n-    pub fn readv(fd: ::c_int,\n-                 iov: *const ::iovec,\n-                 iovcnt: ::c_int) -> ::ssize_t;\n-    pub fn uname(buf: *mut ::utsname) -> ::c_int;\n-    pub fn daemon(nochdir: ::c_int, noclose: ::c_int) -> ::c_int;\n-    pub fn gethostname(name: *mut ::c_char, len: ::size_t) -> ::c_int;\n-    pub fn chroot(name: *const ::c_char) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"usleep$UNIX2003\")]\n-    pub fn usleep(secs: ::c_uint) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"send$UNIX2003\")]\n-    pub fn send(socket: ::c_int, buf: *const ::c_void, len: ::size_t,\n-                flags: ::c_int) -> ::ssize_t;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"recv$UNIX2003\")]\n-    pub fn recv(socket: ::c_int, buf: *mut ::c_void, len: ::size_t,\n-                flags: ::c_int) -> ::ssize_t;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"putenv$UNIX2003\")]\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__putenv50\")]\n-    pub fn putenv(string: *mut c_char) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"sendmsg$UNIX2003\")]\n-    pub fn sendmsg(fd: ::c_int,\n-                   msg: *const msghdr,\n-                   flags: ::c_int) -> ::ssize_t;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"recvmsg$UNIX2003\")]\n-    pub fn recvmsg(fd: ::c_int, msg: *mut msghdr, flags: ::c_int) -> ::ssize_t;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"poll$UNIX2003\")]\n-    pub fn poll(fds: *mut pollfd, nfds: nfds_t, timeout: ::c_int) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86_64\"),\n-               link_name = \"select$1050\")]\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"select$UNIX2003\")]\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__select50\")]\n-    pub fn select(nfds: ::c_int,\n-                  readfs: *mut fd_set,\n-                  writefds: *mut fd_set,\n-                  errorfds: *mut fd_set,\n-                  timeout: *mut timeval) -> ::c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__setlocale50\")]\n-    pub fn setlocale(category: ::c_int,\n-                     locale: *const ::c_char) -> *mut ::c_char;\n-    pub fn localeconv() -> *mut lconv;\n-\n-    pub fn sem_destroy(sem: *mut sem_t) -> ::c_int;\n-    pub fn sem_open(name: *const ::c_char, oflag: ::c_int, ...) -> *mut sem_t;\n-    pub fn sem_close(sem: *mut sem_t) -> ::c_int;\n-    pub fn sem_unlink(name: *const ::c_char) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"sem_wait$UNIX2003\")]\n-    pub fn sem_wait(sem: *mut sem_t) -> ::c_int;\n-    pub fn sem_trywait(sem: *mut sem_t) -> ::c_int;\n-    pub fn sem_post(sem: *mut sem_t) -> ::c_int;\n-    pub fn sem_init(sem: *mut sem_t,\n-                    pshared: ::c_int,\n-                    value: ::c_uint)\n-                    -> ::c_int;\n-}\n-\n-// TODO: get rid of this cfg(not(...))\n-#[cfg(not(target_os = \"android\"))] // \" if \" -- appease style checker\n-extern {\n-    #[cfg_attr(target_os = \"macos\", link_name = \"glob$INODE64\")]\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__glob30\")]\n-    pub fn glob(pattern: *const c_char,\n-                flags: ::c_int,\n-                errfunc: Option<extern fn(epath: *const c_char,\n-                                          errno: ::c_int) -> ::c_int>,\n-                pglob: *mut glob_t) -> ::c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__globfree30\")]\n-    pub fn globfree(pglob: *mut glob_t);\n-\n-    pub fn posix_madvise(addr: *mut ::c_void, len: ::size_t, advice: ::c_int)\n-                         -> ::c_int;\n-\n-    pub fn shm_unlink(name: *const c_char) -> ::c_int;\n-\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86_64\"),\n-               link_name = \"seekdir$INODE64\")]\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"seekdir$INODE64$UNIX2003\")]\n-    pub fn seekdir(dirp: *mut ::DIR, loc: c_long);\n-\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86_64\"),\n-               link_name = \"telldir$INODE64\")]\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"telldir$INODE64$UNIX2003\")]\n-    pub fn telldir(dirp: *mut ::DIR) -> c_long;\n-\n-    pub fn getsid(pid: pid_t) -> pid_t;\n-    pub fn madvise(addr: *mut ::c_void, len: ::size_t, advice: ::c_int)\n-                   -> ::c_int;\n-    pub fn readlink(path: *const c_char,\n-                    buf: *mut c_char,\n-                    bufsz: ::size_t)\n-                    -> ::ssize_t;\n-\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"msync$UNIX2003\")]\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__msync13\")]\n-    pub fn msync(addr: *mut ::c_void, len: ::size_t, flags: ::c_int) -> ::c_int;\n-    pub fn sysconf(name: ::c_int) -> c_long;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"recvfrom$UNIX2003\")]\n-    pub fn recvfrom(socket: ::c_int, buf: *mut ::c_void, len: ::size_t,\n-                    flags: ::c_int, addr: *mut sockaddr,\n-                    addrlen: *mut socklen_t) -> ::ssize_t;\n-    pub fn mkfifo(path: *const c_char, mode: mode_t) -> ::c_int;\n-\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__sigemptyset14\")]\n-    pub fn sigemptyset(set: *mut sigset_t) -> ::c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__sigaddset14\")]\n-    pub fn sigaddset(set: *mut sigset_t, signum: ::c_int) -> ::c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__sigfillset14\")]\n-    pub fn sigfillset(set: *mut sigset_t) -> ::c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__sigdelset14\")]\n-    pub fn sigdelset(set: *mut sigset_t, signum: ::c_int) -> ::c_int;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__sigismember14\")]\n-    pub fn sigismember(set: *const sigset_t, signum: ::c_int) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86_64\"),\n-               link_name = \"pselect$1050\")]\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"pselect$UNIX2003\")]\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__pselect50\")]\n-    pub fn pselect(nfds: ::c_int,\n-                   readfs: *mut fd_set,\n-                   writefds: *mut fd_set,\n-                   errorfds: *mut fd_set,\n-                   timeout: *const timespec,\n-                   sigmask: *const sigset_t) -> ::c_int;\n-    pub fn fseeko(stream: *mut ::FILE,\n-                  offset: ::off_t,\n-                  whence: ::c_int) -> ::c_int;\n-    pub fn ftello(stream: *mut ::FILE) -> ::off_t;\n-    #[cfg_attr(target_os = \"netbsd\", link_name = \"__timegm50\")]\n-    pub fn timegm(tm: *mut ::tm) -> time_t;\n-    pub fn statvfs(path: *const c_char, buf: *mut statvfs) -> ::c_int;\n-    pub fn fstatvfs(fd: ::c_int, buf: *mut statvfs) -> ::c_int;\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"tcdrain$UNIX2003\")]\n-    pub fn tcdrain(fd: ::c_int) -> ::c_int;\n-    pub fn cfgetispeed(termios: *const ::termios) -> ::speed_t;\n-    pub fn cfgetospeed(termios: *const ::termios) -> ::speed_t;\n-    pub fn cfsetispeed(termios: *mut ::termios, speed: ::speed_t) -> ::c_int;\n-    pub fn cfsetospeed(termios: *mut ::termios, speed: ::speed_t) -> ::c_int;\n-    pub fn tcgetattr(fd: ::c_int, termios: *mut ::termios) -> ::c_int;\n-    pub fn tcsetattr(fd: ::c_int,\n-                     optional_actions: ::c_int,\n-                     termios: *const ::termios) -> ::c_int;\n-    pub fn tcflow(fd: ::c_int, action: ::c_int) -> ::c_int;\n-    pub fn tcflush(fd: ::c_int, action: ::c_int) -> ::c_int;\n-    pub fn tcsendbreak(fd: ::c_int, duration: ::c_int) -> ::c_int;\n-    pub fn mkstemp(template: *mut ::c_char) -> ::c_int;\n-    pub fn mkstemps(template: *mut ::c_char, suffixlen: ::c_int) -> ::c_int;\n-    pub fn mkdtemp(template: *mut ::c_char) -> *mut ::c_char;\n-    pub fn futimes(fd: ::c_int, times: *const ::timeval) -> ::c_int;\n-    pub fn nl_langinfo(item: ::nl_item) -> *mut ::c_char;\n-\n-    pub fn openlog(ident: *const ::c_char, logopt: ::c_int, facility: ::c_int);\n-    pub fn closelog();\n-    pub fn setlogmask(maskpri: ::c_int) -> ::c_int;\n-    pub fn syslog(priority: ::c_int, message: *const ::c_char, ...);\n-    #[cfg_attr(all(target_os = \"macos\", target_arch = \"x86\"),\n-               link_name = \"nice$UNIX2003\")]\n-    pub fn nice(incr: ::c_int) -> ::c_int;\n-}\n-\n-cfg_if! {\n-    if #[cfg(any(target_os = \"linux\",\n-                 target_os = \"android\",\n-                 target_os = \"emscripten\"))] {\n-        mod notbsd;\n-        pub use self::notbsd::*;\n-    } else if #[cfg(any(target_os = \"macos\",\n-                        target_os = \"ios\",\n-                        target_os = \"freebsd\",\n-                        target_os = \"dragonfly\",\n-                        target_os = \"openbsd\",\n-                        target_os = \"netbsd\",\n-                        target_os = \"bitrig\"))] {\n-        mod bsd;\n-        pub use self::bsd::*;\n-    } else if #[cfg(target_os = \"solaris\")] {\n-        mod solaris;\n-        pub use self::solaris::*;\n-    } else if #[cfg(target_os = \"haiku\")] {\n-        mod haiku;\n-        pub use self::haiku::*;\n-    } else {\n-        // Unknown target_os\n-    }\n-}"}, {"sha": "bd69ccf37d571b910d0ba5ca0836dadf02f43416", "filename": "src/vendor/libc/src/unix/notbsd/android/b32.rs", "status": "removed", "additions": 0, "deletions": 151, "changes": 151, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Fandroid%2Fb32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Fandroid%2Fb32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Fandroid%2Fb32.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,151 +0,0 @@\n-pub type c_long = i32;\n-pub type c_ulong = u32;\n-pub type mode_t = u16;\n-pub type off64_t = ::c_longlong;\n-\n-s! {\n-    pub struct sigaction {\n-        pub sa_sigaction: ::sighandler_t,\n-        pub sa_mask: ::sigset_t,\n-        pub sa_flags: ::c_ulong,\n-        pub sa_restorer: ::dox::Option<extern fn()>,\n-    }\n-\n-    pub struct stat {\n-        pub st_dev: ::c_ulonglong,\n-        __pad0: [::c_uchar; 4],\n-        __st_ino: ::ino_t,\n-        pub st_mode: ::c_uint,\n-        pub st_nlink: ::c_uint,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::c_ulonglong,\n-        __pad3: [::c_uchar; 4],\n-        pub st_size: ::c_longlong,\n-        pub st_blksize: ::blksize_t,\n-        pub st_blocks: ::c_ulonglong,\n-        pub st_atime: ::c_ulong,\n-        pub st_atime_nsec: ::c_ulong,\n-        pub st_mtime: ::c_ulong,\n-        pub st_mtime_nsec: ::c_ulong,\n-        pub st_ctime: ::c_ulong,\n-        pub st_ctime_nsec: ::c_ulong,\n-        pub st_ino: ::c_ulonglong,\n-    }\n-\n-    pub struct stat64 {\n-        pub st_dev: ::c_ulonglong,\n-        __pad0: [::c_uchar; 4],\n-        __st_ino: ::ino_t,\n-        pub st_mode: ::c_uint,\n-        pub st_nlink: ::c_uint,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::c_ulonglong,\n-        __pad3: [::c_uchar; 4],\n-        pub st_size: ::c_longlong,\n-        pub st_blksize: ::blksize_t,\n-        pub st_blocks: ::c_ulonglong,\n-        pub st_atime: ::c_ulong,\n-        pub st_atime_nsec: ::c_ulong,\n-        pub st_mtime: ::c_ulong,\n-        pub st_mtime_nsec: ::c_ulong,\n-        pub st_ctime: ::c_ulong,\n-        pub st_ctime_nsec: ::c_ulong,\n-        pub st_ino: ::c_ulonglong,\n-    }\n-\n-    pub struct pthread_attr_t {\n-        pub flags: ::uint32_t,\n-        pub stack_base: *mut ::c_void,\n-        pub stack_size: ::size_t,\n-        pub guard_size: ::size_t,\n-        pub sched_policy: ::int32_t,\n-        pub sched_priority: ::int32_t,\n-    }\n-\n-    pub struct pthread_mutex_t { value: ::c_int }\n-\n-    pub struct pthread_cond_t { value: ::c_int }\n-\n-    pub struct pthread_rwlock_t {\n-        lock: pthread_mutex_t,\n-        cond: pthread_cond_t,\n-        numLocks: ::c_int,\n-        writerThreadId: ::c_int,\n-        pendingReaders: ::c_int,\n-        pendingWriters: ::c_int,\n-        attr: i32,\n-        __reserved: [::c_char; 12],\n-    }\n-\n-    pub struct passwd {\n-        pub pw_name: *mut ::c_char,\n-        pub pw_passwd: *mut ::c_char,\n-        pub pw_uid: ::uid_t,\n-        pub pw_gid: ::gid_t,\n-        pub pw_dir: *mut ::c_char,\n-        pub pw_shell: *mut ::c_char,\n-    }\n-\n-    pub struct statfs {\n-        pub f_type: ::uint32_t,\n-        pub f_bsize: ::uint32_t,\n-        pub f_blocks: ::uint64_t,\n-        pub f_bfree: ::uint64_t,\n-        pub f_bavail: ::uint64_t,\n-        pub f_files: ::uint64_t,\n-        pub f_ffree: ::uint64_t,\n-        pub f_fsid: ::__fsid_t,\n-        pub f_namelen: ::uint32_t,\n-        pub f_frsize: ::uint32_t,\n-        pub f_flags: ::uint32_t,\n-        pub f_spare: [::uint32_t; 4],\n-    }\n-\n-    pub struct sysinfo {\n-        pub uptime: ::c_long,\n-        pub loads: [::c_ulong; 3],\n-        pub totalram: ::c_ulong,\n-        pub freeram: ::c_ulong,\n-        pub sharedram: ::c_ulong,\n-        pub bufferram: ::c_ulong,\n-        pub totalswap: ::c_ulong,\n-        pub freeswap: ::c_ulong,\n-        pub procs: ::c_ushort,\n-        pub pad: ::c_ushort,\n-        pub totalhigh: ::c_ulong,\n-        pub freehigh: ::c_ulong,\n-        pub mem_unit: ::c_uint,\n-        pub _f: [::c_char; 8],\n-    }\n-}\n-\n-pub const SYS_gettid: ::c_long = 224;\n-pub const PTHREAD_MUTEX_INITIALIZER: pthread_mutex_t = pthread_mutex_t {\n-    value: 0,\n-};\n-pub const PTHREAD_COND_INITIALIZER: pthread_cond_t = pthread_cond_t {\n-    value: 0,\n-};\n-pub const PTHREAD_RWLOCK_INITIALIZER: pthread_rwlock_t = pthread_rwlock_t {\n-    lock: PTHREAD_MUTEX_INITIALIZER,\n-    cond: PTHREAD_COND_INITIALIZER,\n-    numLocks: 0,\n-    writerThreadId: 0,\n-    pendingReaders: 0,\n-    pendingWriters: 0,\n-    attr: 0,\n-    __reserved: [0; 12],\n-};\n-pub const PTHREAD_STACK_MIN: ::size_t = 4096 * 2;\n-pub const CPU_SETSIZE: ::size_t = 32;\n-pub const __CPU_BITS: ::size_t = 32;\n-\n-pub const UT_LINESIZE: usize = 8;\n-pub const UT_NAMESIZE: usize = 8;\n-pub const UT_HOSTSIZE: usize = 16;\n-\n-extern {\n-    pub fn timegm64(tm: *const ::tm) -> ::time64_t;\n-}"}, {"sha": "b35dde4216059931eec5370c719f7fbfa8909b25", "filename": "src/vendor/libc/src/unix/notbsd/android/b64.rs", "status": "removed", "additions": 0, "deletions": 161, "changes": 161, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Fandroid%2Fb64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Fandroid%2Fb64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Fandroid%2Fb64.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,161 +0,0 @@\n-// The following definitions are correct for aarch64 and may be wrong for x86_64\n-\n-pub type c_long = i64;\n-pub type c_ulong = u64;\n-pub type mode_t = u32;\n-pub type off64_t = i64;\n-\n-s! {\n-    pub struct sigaction {\n-        pub sa_flags: ::c_uint,\n-        pub sa_sigaction: ::sighandler_t,\n-        pub sa_mask: ::sigset_t,\n-        _restorer: *mut ::c_void,\n-    }\n-\n-    pub struct stat {\n-        pub st_dev: ::dev_t,\n-        pub st_ino: ::ino_t,\n-        pub st_mode: ::c_uint,\n-        pub st_nlink: ::c_uint,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::dev_t,\n-        __pad1: ::c_ulong,\n-        pub st_size: ::off64_t,\n-        pub st_blksize: ::c_int,\n-        __pad2: ::c_int,\n-        pub st_blocks: ::c_long,\n-        pub st_atime: ::time_t,\n-        pub st_atime_nsec: ::c_ulong,\n-        pub st_mtime: ::time_t,\n-        pub st_mtime_nsec: ::c_ulong,\n-        pub st_ctime: ::time_t,\n-        pub st_ctime_nsec: ::c_ulong,\n-        __unused4: ::c_uint,\n-        __unused5: ::c_uint,\n-    }\n-\n-    pub struct stat64 {\n-        pub st_dev: ::dev_t,\n-        pub st_ino: ::ino_t,\n-        pub st_mode: ::c_uint,\n-        pub st_nlink: ::c_uint,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::dev_t,\n-        __pad1: ::c_ulong,\n-        pub st_size: ::off64_t,\n-        pub st_blksize: ::c_int,\n-        __pad2: ::c_int,\n-        pub st_blocks: ::c_long,\n-        pub st_atime: ::time_t,\n-        pub st_atime_nsec: ::c_ulong,\n-        pub st_mtime: ::time_t,\n-        pub st_mtime_nsec: ::c_ulong,\n-        pub st_ctime: ::time_t,\n-        pub st_ctime_nsec: ::c_ulong,\n-        __unused4: ::c_uint,\n-        __unused5: ::c_uint,\n-    }\n-\n-    pub struct pthread_attr_t {\n-        pub flags: ::uint32_t,\n-        pub stack_base: *mut ::c_void,\n-        pub stack_size: ::size_t,\n-        pub guard_size: ::size_t,\n-        pub sched_policy: ::int32_t,\n-        pub sched_priority: ::int32_t,\n-        __reserved: [::c_char; 16],\n-    }\n-\n-    pub struct pthread_mutex_t {\n-        value: ::c_int,\n-        __reserved: [::c_char; 36],\n-    }\n-\n-    pub struct pthread_cond_t {\n-        value: ::c_int,\n-        __reserved: [::c_char; 44],\n-    }\n-\n-    pub struct pthread_rwlock_t {\n-        numLocks: ::c_int,\n-        writerThreadId: ::c_int,\n-        pendingReaders: ::c_int,\n-        pendingWriters: ::c_int,\n-        attr: i32,\n-        __reserved: [::c_char; 36],\n-    }\n-\n-    pub struct passwd {\n-        pub pw_name: *mut ::c_char,\n-        pub pw_passwd: *mut ::c_char,\n-        pub pw_uid: ::uid_t,\n-        pub pw_gid: ::gid_t,\n-        pub pw_gecos: *mut ::c_char,\n-        pub pw_dir: *mut ::c_char,\n-        pub pw_shell: *mut ::c_char,\n-    }\n-\n-    pub struct statfs {\n-        pub f_type: ::uint64_t,\n-        pub f_bsize: ::uint64_t,\n-        pub f_blocks: ::uint64_t,\n-        pub f_bfree: ::uint64_t,\n-        pub f_bavail: ::uint64_t,\n-        pub f_files: ::uint64_t,\n-        pub f_ffree: ::uint64_t,\n-        pub f_fsid: ::__fsid_t,\n-        pub f_namelen: ::uint64_t,\n-        pub f_frsize: ::uint64_t,\n-        pub f_flags: ::uint64_t,\n-        pub f_spare: [::uint64_t; 4],\n-    }\n-\n-    pub struct sysinfo {\n-        pub uptime: ::c_long,\n-        pub loads: [::c_ulong; 3],\n-        pub totalram: ::c_ulong,\n-        pub freeram: ::c_ulong,\n-        pub sharedram: ::c_ulong,\n-        pub bufferram: ::c_ulong,\n-        pub totalswap: ::c_ulong,\n-        pub freeswap: ::c_ulong,\n-        pub procs: ::c_ushort,\n-        pub pad: ::c_ushort,\n-        pub totalhigh: ::c_ulong,\n-        pub freehigh: ::c_ulong,\n-        pub mem_unit: ::c_uint,\n-        pub _f: [::c_char; 0],\n-    }\n-}\n-\n-pub const SYS_gettid: ::c_long = 178;\n-pub const PTHREAD_MUTEX_INITIALIZER: pthread_mutex_t = pthread_mutex_t {\n-    value: 0,\n-    __reserved: [0; 36],\n-};\n-pub const PTHREAD_COND_INITIALIZER: pthread_cond_t = pthread_cond_t {\n-    value: 0,\n-    __reserved: [0; 44],\n-};\n-pub const PTHREAD_RWLOCK_INITIALIZER: pthread_rwlock_t = pthread_rwlock_t {\n-    numLocks: 0,\n-    writerThreadId: 0,\n-    pendingReaders: 0,\n-    pendingWriters: 0,\n-    attr: 0,\n-    __reserved: [0; 36],\n-};\n-pub const PTHREAD_STACK_MIN: ::size_t = 4096 * 4;\n-pub const CPU_SETSIZE: ::size_t = 1024;\n-pub const __CPU_BITS: ::size_t = 64;\n-\n-pub const UT_LINESIZE: usize = 32;\n-pub const UT_NAMESIZE: usize = 32;\n-pub const UT_HOSTSIZE: usize = 256;\n-\n-extern {\n-    pub fn timegm(tm: *const ::tm) -> ::time64_t;\n-}"}, {"sha": "efc136817db6f1c4d95112d86dab07eae2798d6e", "filename": "src/vendor/libc/src/unix/notbsd/android/mod.rs", "status": "removed", "additions": 0, "deletions": 779, "changes": 779, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Fandroid%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Fandroid%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Fandroid%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,779 +0,0 @@\n-//! Android-specific definitions for linux-like values\n-\n-use dox::mem;\n-\n-pub type c_char = u8;\n-pub type clock_t = ::c_long;\n-pub type time_t = ::c_long;\n-pub type suseconds_t = ::c_long;\n-pub type wchar_t = u32;\n-pub type off_t = ::c_long;\n-pub type blkcnt_t = ::c_ulong;\n-pub type blksize_t = ::c_ulong;\n-pub type nlink_t = u32;\n-pub type useconds_t = u32;\n-pub type socklen_t = i32;\n-pub type pthread_t = ::c_long;\n-pub type pthread_mutexattr_t = ::c_long;\n-pub type pthread_condattr_t = ::c_long;\n-pub type sigset_t = ::c_ulong;\n-pub type time64_t = i64; // N/A on android\n-pub type fsfilcnt_t = ::c_ulong;\n-pub type fsblkcnt_t = ::c_ulong;\n-pub type nfds_t = ::c_uint;\n-pub type rlim_t = ::c_ulong;\n-pub type dev_t = ::c_ulong;\n-pub type ino_t = ::c_ulong;\n-pub type __CPU_BITTYPE = ::c_ulong;\n-\n-s! {\n-    pub struct dirent {\n-        pub d_ino: u64,\n-        pub d_off: i64,\n-        pub d_reclen: ::c_ushort,\n-        pub d_type: ::c_uchar,\n-        pub d_name: [::c_char; 256],\n-    }\n-\n-    pub struct dirent64 {\n-        pub d_ino: u64,\n-        pub d_off: i64,\n-        pub d_reclen: ::c_ushort,\n-        pub d_type: ::c_uchar,\n-        pub d_name: [::c_char; 256],\n-    }\n-\n-    pub struct rlimit64 {\n-        pub rlim_cur: u64,\n-        pub rlim_max: u64,\n-    }\n-\n-    pub struct stack_t {\n-        pub ss_sp: *mut ::c_void,\n-        pub ss_flags: ::c_int,\n-        pub ss_size: ::size_t\n-    }\n-\n-    pub struct siginfo_t {\n-        pub si_signo: ::c_int,\n-        pub si_errno: ::c_int,\n-        pub si_code: ::c_int,\n-        pub _pad: [::c_int; 29],\n-    }\n-\n-    pub struct __fsid_t {\n-        __val: [::c_int; 2],\n-    }\n-\n-    pub struct msghdr {\n-        pub msg_name: *mut ::c_void,\n-        pub msg_namelen: ::c_int,\n-        pub msg_iov: *mut ::iovec,\n-        pub msg_iovlen: ::size_t,\n-        pub msg_control: *mut ::c_void,\n-        pub msg_controllen: ::size_t,\n-        pub msg_flags: ::c_int,\n-    }\n-\n-    pub struct termios {\n-        pub c_iflag: ::tcflag_t,\n-        pub c_oflag: ::tcflag_t,\n-        pub c_cflag: ::tcflag_t,\n-        pub c_lflag: ::tcflag_t,\n-        pub c_line: ::cc_t,\n-        pub c_cc: [::cc_t; ::NCCS],\n-    }\n-\n-    pub struct flock {\n-        pub l_type: ::c_short,\n-        pub l_whence: ::c_short,\n-        pub l_start: ::off_t,\n-        pub l_len: ::off_t,\n-        pub l_pid: ::pid_t,\n-    }\n-\n-    pub struct cpu_set_t {\n-        #[cfg(target_pointer_width = \"64\")]\n-        __bits: [__CPU_BITTYPE; 16],\n-        #[cfg(target_pointer_width = \"32\")]\n-        __bits: [__CPU_BITTYPE; 1],\n-    }\n-\n-    pub struct sem_t {\n-        count: ::c_uint,\n-    }\n-\n-    pub struct lastlog {\n-        ll_time: ::time_t,\n-        ll_line: [::c_char; UT_LINESIZE],\n-        ll_host: [::c_char; UT_HOSTSIZE],\n-    }\n-\n-    pub struct exit_status {\n-        pub e_termination: ::c_short,\n-        pub e_exit: ::c_short,\n-    }\n-\n-    pub struct utmp {\n-        pub ut_type: ::c_short,\n-        pub ut_pid: ::pid_t,\n-        pub ut_line: [::c_char; UT_LINESIZE],\n-        pub ut_id: [::c_char; 4],\n-\n-        pub ut_user: [::c_char; UT_NAMESIZE],\n-        pub ut_host: [::c_char; UT_HOSTSIZE],\n-        pub ut_exit: exit_status,\n-        pub ut_session: ::c_long,\n-        pub ut_tv: ::timeval,\n-\n-        pub ut_addr_v6: [::int32_t; 4],\n-        unused: [::c_char; 20],\n-    }\n-}\n-\n-pub const USER_PROCESS: ::c_short = 7;\n-\n-pub const BUFSIZ: ::c_uint = 1024;\n-pub const FILENAME_MAX: ::c_uint = 1024;\n-pub const FOPEN_MAX: ::c_uint = 20;\n-pub const POSIX_FADV_DONTNEED: ::c_int = 4;\n-pub const POSIX_FADV_NOREUSE: ::c_int = 5;\n-pub const L_tmpnam: ::c_uint = 1024;\n-pub const TMP_MAX: ::c_uint = 308915776;\n-pub const _PC_LINK_MAX: ::c_int = 1;\n-pub const _PC_MAX_CANON: ::c_int = 2;\n-pub const _PC_MAX_INPUT: ::c_int = 3;\n-pub const _PC_NAME_MAX: ::c_int = 4;\n-pub const _PC_PATH_MAX: ::c_int = 5;\n-pub const _PC_PIPE_BUF: ::c_int = 6;\n-pub const _PC_CHOWN_RESTRICTED: ::c_int = 14;\n-pub const _PC_NO_TRUNC: ::c_int = 15;\n-pub const _PC_VDISABLE: ::c_int = 16;\n-\n-pub const FIONBIO: ::c_int = 0x5421;\n-\n-pub const _SC_ARG_MAX: ::c_int = 0;\n-pub const _SC_BC_BASE_MAX: ::c_int = 1;\n-pub const _SC_BC_DIM_MAX: ::c_int = 2;\n-pub const _SC_BC_SCALE_MAX: ::c_int = 3;\n-pub const _SC_BC_STRING_MAX: ::c_int = 4;\n-pub const _SC_CHILD_MAX: ::c_int = 5;\n-pub const _SC_CLK_TCK: ::c_int = 6;\n-pub const _SC_COLL_WEIGHTS_MAX: ::c_int = 7;\n-pub const _SC_EXPR_NEST_MAX: ::c_int = 8;\n-pub const _SC_LINE_MAX: ::c_int = 9;\n-pub const _SC_NGROUPS_MAX: ::c_int = 10;\n-pub const _SC_OPEN_MAX: ::c_int = 11;\n-pub const _SC_2_C_BIND: ::c_int = 13;\n-pub const _SC_2_C_DEV: ::c_int = 14;\n-pub const _SC_2_C_VERSION: ::c_int = 15;\n-pub const _SC_2_CHAR_TERM: ::c_int = 16;\n-pub const _SC_2_FORT_DEV: ::c_int = 17;\n-pub const _SC_2_FORT_RUN: ::c_int = 18;\n-pub const _SC_2_LOCALEDEF: ::c_int = 19;\n-pub const _SC_2_SW_DEV: ::c_int = 20;\n-pub const _SC_2_UPE: ::c_int = 21;\n-pub const _SC_2_VERSION: ::c_int = 22;\n-pub const _SC_JOB_CONTROL: ::c_int = 23;\n-pub const _SC_SAVED_IDS: ::c_int = 24;\n-pub const _SC_VERSION: ::c_int = 25;\n-pub const _SC_RE_DUP_MAX: ::c_int = 26;\n-pub const _SC_STREAM_MAX: ::c_int = 27;\n-pub const _SC_TZNAME_MAX: ::c_int = 28;\n-pub const _SC_XOPEN_CRYPT: ::c_int = 29;\n-pub const _SC_XOPEN_ENH_I18N: ::c_int = 30;\n-pub const _SC_XOPEN_SHM: ::c_int = 31;\n-pub const _SC_XOPEN_VERSION: ::c_int = 32;\n-pub const _SC_XOPEN_XCU_VERSION: ::c_int = 33;\n-pub const _SC_XOPEN_REALTIME: ::c_int = 34;\n-pub const _SC_XOPEN_REALTIME_THREADS: ::c_int = 35;\n-pub const _SC_XOPEN_LEGACY: ::c_int = 36;\n-pub const _SC_ATEXIT_MAX: ::c_int = 37;\n-pub const _SC_IOV_MAX: ::c_int = 38;\n-pub const _SC_PAGESIZE: ::c_int = 39;\n-pub const _SC_PAGE_SIZE: ::c_int = 40;\n-pub const _SC_XOPEN_UNIX: ::c_int = 41;\n-pub const _SC_MQ_PRIO_MAX: ::c_int = 51;\n-pub const _SC_GETGR_R_SIZE_MAX: ::c_int = 71;\n-pub const _SC_GETPW_R_SIZE_MAX: ::c_int = 72;\n-pub const _SC_LOGIN_NAME_MAX: ::c_int = 73;\n-pub const _SC_THREAD_DESTRUCTOR_ITERATIONS: ::c_int = 74;\n-pub const _SC_THREAD_KEYS_MAX: ::c_int = 75;\n-pub const _SC_THREAD_STACK_MIN: ::c_int = 76;\n-pub const _SC_THREAD_THREADS_MAX: ::c_int = 77;\n-pub const _SC_TTY_NAME_MAX: ::c_int = 78;\n-pub const _SC_THREADS: ::c_int = 79;\n-pub const _SC_THREAD_ATTR_STACKADDR: ::c_int = 80;\n-pub const _SC_THREAD_ATTR_STACKSIZE: ::c_int = 81;\n-pub const _SC_THREAD_PRIORITY_SCHEDULING: ::c_int = 82;\n-pub const _SC_THREAD_PRIO_INHERIT: ::c_int = 83;\n-pub const _SC_THREAD_PRIO_PROTECT: ::c_int = 84;\n-pub const _SC_THREAD_SAFE_FUNCTIONS: ::c_int = 85;\n-pub const _SC_NPROCESSORS_ONLN: ::c_int = 97;\n-\n-pub const PTHREAD_MUTEX_NORMAL: ::c_int = 0;\n-pub const PTHREAD_MUTEX_RECURSIVE: ::c_int = 1;\n-pub const PTHREAD_MUTEX_ERRORCHECK: ::c_int = 2;\n-pub const PTHREAD_MUTEX_DEFAULT: ::c_int = PTHREAD_MUTEX_NORMAL;\n-\n-pub const FIOCLEX: ::c_int = 0x5451;\n-\n-pub const SA_ONSTACK: ::c_ulong = 0x08000000;\n-pub const SA_SIGINFO: ::c_ulong = 0x00000004;\n-pub const SA_NOCLDWAIT: ::c_ulong = 0x00000002;\n-\n-pub const SIGCHLD: ::c_int = 17;\n-pub const SIGBUS: ::c_int = 7;\n-pub const SIGUSR1: ::c_int = 10;\n-pub const SIGUSR2: ::c_int = 12;\n-pub const SIGCONT: ::c_int = 18;\n-pub const SIGSTOP: ::c_int = 19;\n-pub const SIGTSTP: ::c_int = 20;\n-pub const SIGURG: ::c_int = 23;\n-pub const SIGIO: ::c_int = 29;\n-pub const SIGSYS: ::c_int = 31;\n-pub const SIGSTKFLT: ::c_int = 16;\n-pub const SIGUNUSED: ::c_int = 31;\n-pub const SIGTTIN: ::c_int = 21;\n-pub const SIGTTOU: ::c_int = 22;\n-pub const SIGXCPU: ::c_int = 24;\n-pub const SIGXFSZ: ::c_int = 25;\n-pub const SIGVTALRM: ::c_int = 26;\n-pub const SIGPROF: ::c_int = 27;\n-pub const SIGWINCH: ::c_int = 28;\n-pub const SIGPOLL: ::c_int = 29;\n-pub const SIGPWR: ::c_int = 30;\n-pub const SIG_SETMASK: ::c_int = 2;\n-pub const SIG_BLOCK: ::c_int = 0x000000;\n-pub const SIG_UNBLOCK: ::c_int = 0x01;\n-\n-pub const RUSAGE_CHILDREN: ::c_int = -1;\n-\n-pub const LC_PAPER: ::c_int = 7;\n-pub const LC_NAME: ::c_int = 8;\n-pub const LC_ADDRESS: ::c_int = 9;\n-pub const LC_TELEPHONE: ::c_int = 10;\n-pub const LC_MEASUREMENT: ::c_int = 11;\n-pub const LC_IDENTIFICATION: ::c_int = 12;\n-pub const LC_PAPER_MASK: ::c_int = (1 << LC_PAPER);\n-pub const LC_NAME_MASK: ::c_int = (1 << LC_NAME);\n-pub const LC_ADDRESS_MASK: ::c_int = (1 << LC_ADDRESS);\n-pub const LC_TELEPHONE_MASK: ::c_int = (1 << LC_TELEPHONE);\n-pub const LC_MEASUREMENT_MASK: ::c_int = (1 << LC_MEASUREMENT);\n-pub const LC_IDENTIFICATION_MASK: ::c_int = (1 << LC_IDENTIFICATION);\n-pub const LC_ALL_MASK: ::c_int = ::LC_CTYPE_MASK\n-                               | ::LC_NUMERIC_MASK\n-                               | ::LC_TIME_MASK\n-                               | ::LC_COLLATE_MASK\n-                               | ::LC_MONETARY_MASK\n-                               | ::LC_MESSAGES_MASK\n-                               | LC_PAPER_MASK\n-                               | LC_NAME_MASK\n-                               | LC_ADDRESS_MASK\n-                               | LC_TELEPHONE_MASK\n-                               | LC_MEASUREMENT_MASK\n-                               | LC_IDENTIFICATION_MASK;\n-\n-pub const MAP_ANON: ::c_int = 0x0020;\n-pub const MAP_ANONYMOUS: ::c_int = 0x0020;\n-pub const MAP_GROWSDOWN: ::c_int = 0x0100;\n-pub const MAP_DENYWRITE: ::c_int = 0x0800;\n-pub const MAP_EXECUTABLE: ::c_int = 0x01000;\n-pub const MAP_LOCKED: ::c_int = 0x02000;\n-pub const MAP_NORESERVE: ::c_int = 0x04000;\n-pub const MAP_POPULATE: ::c_int = 0x08000;\n-pub const MAP_NONBLOCK: ::c_int = 0x010000;\n-pub const MAP_STACK: ::c_int = 0x020000;\n-\n-pub const EDEADLK: ::c_int = 35;\n-pub const ENAMETOOLONG: ::c_int = 36;\n-pub const ENOLCK: ::c_int = 37;\n-pub const ENOSYS: ::c_int = 38;\n-pub const ENOTEMPTY: ::c_int = 39;\n-pub const ELOOP: ::c_int = 40;\n-pub const ENOMSG: ::c_int = 42;\n-pub const EIDRM: ::c_int = 43;\n-pub const ECHRNG: ::c_int = 44;\n-pub const EL2NSYNC: ::c_int = 45;\n-pub const EL3HLT: ::c_int = 46;\n-pub const EL3RST: ::c_int = 47;\n-pub const ELNRNG: ::c_int = 48;\n-pub const EUNATCH: ::c_int = 49;\n-pub const ENOCSI: ::c_int = 50;\n-pub const EL2HLT: ::c_int = 51;\n-pub const EBADE: ::c_int = 52;\n-pub const EBADR: ::c_int = 53;\n-pub const EXFULL: ::c_int = 54;\n-pub const ENOANO: ::c_int = 55;\n-pub const EBADRQC: ::c_int = 56;\n-pub const EBADSLT: ::c_int = 57;\n-\n-pub const EMULTIHOP: ::c_int = 72;\n-pub const EBADMSG: ::c_int = 74;\n-pub const EOVERFLOW: ::c_int = 75;\n-pub const ENOTUNIQ: ::c_int = 76;\n-pub const EBADFD: ::c_int = 77;\n-pub const EREMCHG: ::c_int = 78;\n-pub const ELIBACC: ::c_int = 79;\n-pub const ELIBBAD: ::c_int = 80;\n-pub const ELIBSCN: ::c_int = 81;\n-pub const ELIBMAX: ::c_int = 82;\n-pub const ELIBEXEC: ::c_int = 83;\n-pub const EILSEQ: ::c_int = 84;\n-pub const ERESTART: ::c_int = 85;\n-pub const ESTRPIPE: ::c_int = 86;\n-pub const EUSERS: ::c_int = 87;\n-pub const ENOTSOCK: ::c_int = 88;\n-pub const EDESTADDRREQ: ::c_int = 89;\n-pub const EMSGSIZE: ::c_int = 90;\n-pub const EPROTOTYPE: ::c_int = 91;\n-pub const ENOPROTOOPT: ::c_int = 92;\n-pub const EPROTONOSUPPORT: ::c_int = 93;\n-pub const ESOCKTNOSUPPORT: ::c_int = 94;\n-pub const EOPNOTSUPP: ::c_int = 95;\n-pub const EPFNOSUPPORT: ::c_int = 96;\n-pub const EAFNOSUPPORT: ::c_int = 97;\n-pub const EADDRINUSE: ::c_int = 98;\n-pub const EADDRNOTAVAIL: ::c_int = 99;\n-pub const ENETDOWN: ::c_int = 100;\n-pub const ENETUNREACH: ::c_int = 101;\n-pub const ENETRESET: ::c_int = 102;\n-pub const ECONNABORTED: ::c_int = 103;\n-pub const ECONNRESET: ::c_int = 104;\n-pub const ENOBUFS: ::c_int = 105;\n-pub const EISCONN: ::c_int = 106;\n-pub const ENOTCONN: ::c_int = 107;\n-pub const ESHUTDOWN: ::c_int = 108;\n-pub const ETOOMANYREFS: ::c_int = 109;\n-pub const ETIMEDOUT: ::c_int = 110;\n-pub const ECONNREFUSED: ::c_int = 111;\n-pub const EHOSTDOWN: ::c_int = 112;\n-pub const EHOSTUNREACH: ::c_int = 113;\n-pub const EALREADY: ::c_int = 114;\n-pub const EINPROGRESS: ::c_int = 115;\n-pub const ESTALE: ::c_int = 116;\n-pub const EUCLEAN: ::c_int = 117;\n-pub const ENOTNAM: ::c_int = 118;\n-pub const ENAVAIL: ::c_int = 119;\n-pub const EISNAM: ::c_int = 120;\n-pub const EREMOTEIO: ::c_int = 121;\n-pub const EDQUOT: ::c_int = 122;\n-pub const ENOMEDIUM: ::c_int = 123;\n-pub const EMEDIUMTYPE: ::c_int = 124;\n-pub const ECANCELED: ::c_int = 125;\n-pub const ENOKEY: ::c_int = 126;\n-pub const EKEYEXPIRED: ::c_int = 127;\n-pub const EKEYREVOKED: ::c_int = 128;\n-pub const EKEYREJECTED: ::c_int = 129;\n-pub const EOWNERDEAD: ::c_int = 130;\n-pub const ENOTRECOVERABLE: ::c_int = 131;\n-\n-pub const SOCK_STREAM: ::c_int = 1;\n-pub const SOCK_DGRAM: ::c_int = 2;\n-pub const SOCK_SEQPACKET: ::c_int = 5;\n-\n-pub const SOL_SOCKET: ::c_int = 1;\n-\n-pub const SO_REUSEADDR: ::c_int = 2;\n-pub const SO_TYPE: ::c_int = 3;\n-pub const SO_ERROR: ::c_int = 4;\n-pub const SO_DONTROUTE: ::c_int = 5;\n-pub const SO_BROADCAST: ::c_int = 6;\n-pub const SO_SNDBUF: ::c_int = 7;\n-pub const SO_RCVBUF: ::c_int = 8;\n-pub const SO_KEEPALIVE: ::c_int = 9;\n-pub const SO_OOBINLINE: ::c_int = 10;\n-pub const SO_LINGER: ::c_int = 13;\n-pub const SO_REUSEPORT: ::c_int = 15;\n-pub const SO_RCVLOWAT: ::c_int = 18;\n-pub const SO_SNDLOWAT: ::c_int = 19;\n-pub const SO_RCVTIMEO: ::c_int = 20;\n-pub const SO_SNDTIMEO: ::c_int = 21;\n-pub const SO_ACCEPTCONN: ::c_int = 30;\n-\n-pub const O_ACCMODE: ::c_int = 3;\n-pub const O_APPEND: ::c_int = 1024;\n-pub const O_CREAT: ::c_int = 64;\n-pub const O_EXCL: ::c_int = 128;\n-pub const O_NOCTTY: ::c_int = 256;\n-pub const O_NONBLOCK: ::c_int = 2048;\n-pub const O_SYNC: ::c_int = 0x101000;\n-pub const O_DIRECT: ::c_int = 0x10000;\n-pub const O_DIRECTORY: ::c_int = 0x4000;\n-pub const O_NOFOLLOW: ::c_int = 0x8000;\n-pub const O_ASYNC: ::c_int = 0x2000;\n-pub const O_NDELAY: ::c_int = 0x800;\n-\n-pub const NI_MAXHOST: ::size_t = 1025;\n-\n-pub const NCCS: usize = 19;\n-pub const TCSBRKP: ::c_int = 0x5425;\n-pub const TCSANOW: ::c_int = 0;\n-pub const TCSADRAIN: ::c_int = 0x1;\n-pub const TCSAFLUSH: ::c_int = 0x2;\n-pub const IUTF8: ::tcflag_t = 0x00004000;\n-pub const VEOF: usize = 4;\n-pub const VEOL: usize = 11;\n-pub const VEOL2: usize = 16;\n-pub const VMIN: usize = 6;\n-pub const IEXTEN: ::tcflag_t = 0x00008000;\n-pub const TOSTOP: ::tcflag_t = 0x00000100;\n-pub const FLUSHO: ::tcflag_t = 0x00001000;\n-\n-pub const ADFS_SUPER_MAGIC: ::c_long = 0x0000adf5;\n-pub const AFFS_SUPER_MAGIC: ::c_long = 0x0000adff;\n-pub const CODA_SUPER_MAGIC: ::c_long = 0x73757245;\n-pub const CRAMFS_MAGIC: ::c_long = 0x28cd3d45;\n-pub const EFS_SUPER_MAGIC: ::c_long = 0x00414a53;\n-pub const EXT2_SUPER_MAGIC: ::c_long = 0x0000ef53;\n-pub const EXT3_SUPER_MAGIC: ::c_long = 0x0000ef53;\n-pub const EXT4_SUPER_MAGIC: ::c_long = 0x0000ef53;\n-pub const HPFS_SUPER_MAGIC: ::c_long = 0xf995e849;\n-pub const HUGETLBFS_MAGIC: ::c_long = 0x958458f6;\n-pub const ISOFS_SUPER_MAGIC: ::c_long = 0x00009660;\n-pub const JFFS2_SUPER_MAGIC: ::c_long = 0x000072b6;\n-pub const MINIX_SUPER_MAGIC: ::c_long = 0x0000137f;\n-pub const MINIX_SUPER_MAGIC2: ::c_long = 0x0000138f;\n-pub const MINIX2_SUPER_MAGIC: ::c_long = 0x00002468;\n-pub const MINIX2_SUPER_MAGIC2: ::c_long = 0x00002478;\n-pub const MSDOS_SUPER_MAGIC: ::c_long = 0x00004d44;\n-pub const NCP_SUPER_MAGIC: ::c_long = 0x0000564c;\n-pub const NFS_SUPER_MAGIC: ::c_long = 0x00006969;\n-pub const OPENPROM_SUPER_MAGIC: ::c_long = 0x00009fa1;\n-pub const PROC_SUPER_MAGIC: ::c_long = 0x00009fa0;\n-pub const QNX4_SUPER_MAGIC: ::c_long = 0x0000002f;\n-pub const REISERFS_SUPER_MAGIC: ::c_long = 0x52654973;\n-pub const SMB_SUPER_MAGIC: ::c_long = 0x0000517b;\n-pub const TMPFS_MAGIC: ::c_long = 0x01021994;\n-pub const USBDEVICE_SUPER_MAGIC: ::c_long = 0x00009fa2;\n-\n-pub const MADV_HUGEPAGE: ::c_int = 14;\n-pub const MADV_NOHUGEPAGE: ::c_int = 15;\n-pub const MAP_HUGETLB: ::c_int = 0x040000;\n-\n-pub const PTRACE_TRACEME: ::c_int = 0;\n-pub const PTRACE_PEEKTEXT: ::c_int = 1;\n-pub const PTRACE_PEEKDATA: ::c_int = 2;\n-pub const PTRACE_PEEKUSER: ::c_int = 3;\n-pub const PTRACE_POKETEXT: ::c_int = 4;\n-pub const PTRACE_POKEDATA: ::c_int = 5;\n-pub const PTRACE_POKEUSER: ::c_int = 6;\n-pub const PTRACE_CONT: ::c_int = 7;\n-pub const PTRACE_KILL: ::c_int = 8;\n-pub const PTRACE_SINGLESTEP: ::c_int = 9;\n-pub const PTRACE_ATTACH: ::c_int = 16;\n-pub const PTRACE_DETACH: ::c_int = 17;\n-pub const PTRACE_SYSCALL: ::c_int = 24;\n-pub const PTRACE_SETOPTIONS: ::c_int = 0x4200;\n-pub const PTRACE_GETEVENTMSG: ::c_int = 0x4201;\n-pub const PTRACE_GETSIGINFO: ::c_int = 0x4202;\n-pub const PTRACE_SETSIGINFO: ::c_int = 0x4203;\n-pub const PTRACE_GETFPREGS: ::c_int = 14;\n-pub const PTRACE_SETFPREGS: ::c_int = 15;\n-pub const PTRACE_GETREGS: ::c_int = 12;\n-pub const PTRACE_SETREGS: ::c_int = 13;\n-\n-pub const EFD_NONBLOCK: ::c_int = 0x800;\n-\n-pub const F_GETLK: ::c_int = 5;\n-pub const F_GETOWN: ::c_int = 9;\n-pub const F_SETOWN: ::c_int = 8;\n-pub const F_SETLK: ::c_int = 6;\n-pub const F_SETLKW: ::c_int = 7;\n-\n-pub const TCGETS: ::c_int = 0x5401;\n-pub const TCSETS: ::c_int = 0x5402;\n-pub const TCSETSW: ::c_int = 0x5403;\n-pub const TCSETSF: ::c_int = 0x5404;\n-pub const TCGETA: ::c_int = 0x5405;\n-pub const TCSETA: ::c_int = 0x5406;\n-pub const TCSETAW: ::c_int = 0x5407;\n-pub const TCSETAF: ::c_int = 0x5408;\n-pub const TCSBRK: ::c_int = 0x5409;\n-pub const TCXONC: ::c_int = 0x540A;\n-pub const TCFLSH: ::c_int = 0x540B;\n-pub const TIOCGSOFTCAR: ::c_int = 0x5419;\n-pub const TIOCSSOFTCAR: ::c_int = 0x541A;\n-pub const TIOCINQ: ::c_int = 0x541B;\n-pub const TIOCLINUX: ::c_int = 0x541C;\n-pub const TIOCGSERIAL: ::c_int = 0x541E;\n-pub const TIOCEXCL: ::c_int = 0x540C;\n-pub const TIOCNXCL: ::c_int = 0x540D;\n-pub const TIOCSCTTY: ::c_int = 0x540E;\n-pub const TIOCGPGRP: ::c_int = 0x540F;\n-pub const TIOCSPGRP: ::c_int = 0x5410;\n-pub const TIOCOUTQ: ::c_int = 0x5411;\n-pub const TIOCSTI: ::c_int = 0x5412;\n-pub const TIOCGWINSZ: ::c_int = 0x5413;\n-pub const TIOCSWINSZ: ::c_int = 0x5414;\n-pub const TIOCMGET: ::c_int = 0x5415;\n-pub const TIOCMBIS: ::c_int = 0x5416;\n-pub const TIOCMBIC: ::c_int = 0x5417;\n-pub const TIOCMSET: ::c_int = 0x5418;\n-pub const FIONREAD: ::c_int = 0x541B;\n-pub const TIOCCONS: ::c_int = 0x541D;\n-\n-pub const RTLD_GLOBAL: ::c_int = 0x2;\n-pub const RTLD_NOLOAD: ::c_int = 0x4;\n-pub const RTLD_NOW: ::c_int = 0;\n-pub const RTLD_DEFAULT: *mut ::c_void = -1isize as *mut ::c_void;\n-\n-pub const SEM_FAILED: *mut sem_t = 0 as *mut sem_t;\n-\n-pub const LINUX_REBOOT_MAGIC1: ::c_int = 0xfee1dead;\n-pub const LINUX_REBOOT_MAGIC2: ::c_int = 672274793;\n-pub const LINUX_REBOOT_MAGIC2A: ::c_int = 85072278;\n-pub const LINUX_REBOOT_MAGIC2B: ::c_int = 369367448;\n-pub const LINUX_REBOOT_MAGIC2C: ::c_int = 537993216;\n-\n-pub const LINUX_REBOOT_CMD_RESTART: ::c_int = 0x01234567;\n-pub const LINUX_REBOOT_CMD_HALT: ::c_int = 0xCDEF0123;\n-pub const LINUX_REBOOT_CMD_CAD_ON: ::c_int = 0x89ABCDEF;\n-pub const LINUX_REBOOT_CMD_CAD_OFF: ::c_int = 0x00000000;\n-pub const LINUX_REBOOT_CMD_POWER_OFF: ::c_int = 0x4321FEDC;\n-pub const LINUX_REBOOT_CMD_RESTART2: ::c_int = 0xA1B2C3D4;\n-pub const LINUX_REBOOT_CMD_SW_SUSPEND: ::c_int = 0xD000FCE2;\n-pub const LINUX_REBOOT_CMD_KEXEC: ::c_int = 0x45584543;\n-\n-pub const MCL_CURRENT: ::c_int = 0x0001;\n-pub const MCL_FUTURE: ::c_int = 0x0002;\n-\n-pub const SIGSTKSZ: ::size_t = 8192;\n-pub const CBAUD: ::tcflag_t = 0o0010017;\n-pub const TAB1: ::c_int = 0x00000800;\n-pub const TAB2: ::c_int = 0x00001000;\n-pub const TAB3: ::c_int = 0x00001800;\n-pub const CR1: ::c_int  = 0x00000200;\n-pub const CR2: ::c_int  = 0x00000400;\n-pub const CR3: ::c_int  = 0x00000600;\n-pub const FF1: ::c_int  = 0x00008000;\n-pub const BS1: ::c_int  = 0x00002000;\n-pub const VT1: ::c_int  = 0x00004000;\n-pub const VWERASE: usize = 14;\n-pub const VREPRINT: usize = 12;\n-pub const VSUSP: usize = 10;\n-pub const VSTART: usize = 8;\n-pub const VSTOP: usize = 9;\n-pub const VDISCARD: usize = 13;\n-pub const VTIME: usize = 5;\n-pub const IXON: ::tcflag_t = 0x00000400;\n-pub const IXOFF: ::tcflag_t = 0x00001000;\n-pub const ONLCR: ::tcflag_t = 0x4;\n-pub const CSIZE: ::tcflag_t = 0x00000030;\n-pub const CS6: ::tcflag_t = 0x00000010;\n-pub const CS7: ::tcflag_t = 0x00000020;\n-pub const CS8: ::tcflag_t = 0x00000030;\n-pub const CSTOPB: ::tcflag_t = 0x00000040;\n-pub const CREAD: ::tcflag_t = 0x00000080;\n-pub const PARENB: ::tcflag_t = 0x00000100;\n-pub const PARODD: ::tcflag_t = 0x00000200;\n-pub const HUPCL: ::tcflag_t = 0x00000400;\n-pub const CLOCAL: ::tcflag_t = 0x00000800;\n-pub const ECHOKE: ::tcflag_t = 0x00000800;\n-pub const ECHOE: ::tcflag_t = 0x00000010;\n-pub const ECHOK: ::tcflag_t = 0x00000020;\n-pub const ECHONL: ::tcflag_t = 0x00000040;\n-pub const ECHOPRT: ::tcflag_t = 0x00000400;\n-pub const ECHOCTL: ::tcflag_t = 0x00000200;\n-pub const ISIG: ::tcflag_t = 0x00000001;\n-pub const ICANON: ::tcflag_t = 0x00000002;\n-pub const PENDIN: ::tcflag_t = 0x00004000;\n-pub const NOFLSH: ::tcflag_t = 0x00000080;\n-\n-pub const EAI_SYSTEM: ::c_int = 11;\n-\n-pub const NETLINK_ROUTE: ::c_int = 0;\n-pub const NETLINK_UNUSED: ::c_int = 1;\n-pub const NETLINK_USERSOCK: ::c_int = 2;\n-pub const NETLINK_FIREWALL: ::c_int = 3;\n-pub const NETLINK_SOCK_DIAG: ::c_int = 4;\n-pub const NETLINK_NFLOG: ::c_int = 5;\n-pub const NETLINK_XFRM: ::c_int = 6;\n-pub const NETLINK_SELINUX: ::c_int = 7;\n-pub const NETLINK_ISCSI: ::c_int = 8;\n-pub const NETLINK_AUDIT: ::c_int = 9;\n-pub const NETLINK_FIB_LOOKUP: ::c_int = 10;\n-pub const NETLINK_CONNECTOR: ::c_int = 11;\n-pub const NETLINK_NETFILTER: ::c_int = 12;\n-pub const NETLINK_IP6_FW: ::c_int = 13;\n-pub const NETLINK_DNRTMSG: ::c_int = 14;\n-pub const NETLINK_KOBJECT_UEVENT: ::c_int = 15;\n-pub const NETLINK_GENERIC: ::c_int = 16;\n-pub const NETLINK_SCSITRANSPORT: ::c_int = 18;\n-pub const NETLINK_ECRYPTFS: ::c_int = 19;\n-pub const NETLINK_RDMA: ::c_int = 20;\n-pub const NETLINK_CRYPTO: ::c_int = 21;\n-pub const NETLINK_INET_DIAG: ::c_int = NETLINK_SOCK_DIAG;\n-\n-pub const MAX_LINKS: ::c_int = 32;\n-\n-pub const NLM_F_REQUEST: ::c_int = 1;\n-pub const NLM_F_MULTI: ::c_int = 2;\n-pub const NLM_F_ACK: ::c_int = 4;\n-pub const NLM_F_ECHO: ::c_int = 8;\n-pub const NLM_F_DUMP_INTR: ::c_int = 16;\n-\n-pub const NLM_F_ROOT: ::c_int = 0x100;\n-pub const NLM_F_MATCH: ::c_int = 0x200;\n-pub const NLM_F_ATOMIC: ::c_int = 0x400;\n-pub const NLM_F_DUMP: ::c_int = NLM_F_ROOT | NLM_F_MATCH;\n-\n-pub const NLM_F_REPLACE: ::c_int = 0x100;\n-pub const NLM_F_EXCL: ::c_int = 0x200;\n-pub const NLM_F_CREATE: ::c_int = 0x400;\n-pub const NLM_F_APPEND: ::c_int = 0x800;\n-\n-pub const NLMSG_NOOP: ::c_int = 0x1;\n-pub const NLMSG_ERROR: ::c_int = 0x2;\n-pub const NLMSG_DONE: ::c_int = 0x3;\n-pub const NLMSG_OVERRUN: ::c_int = 0x4;\n-pub const NLMSG_MIN_TYPE: ::c_int = 0x10;\n-\n-pub const NETLINK_ADD_MEMBERSHIP: ::c_int = 1;\n-pub const NETLINK_DROP_MEMBERSHIP: ::c_int = 2;\n-pub const NETLINK_PKTINFO: ::c_int = 3;\n-pub const NETLINK_BROADCAST_ERROR: ::c_int = 4;\n-pub const NETLINK_NO_ENOBUFS: ::c_int = 5;\n-pub const NETLINK_RX_RING: ::c_int = 6;\n-pub const NETLINK_TX_RING: ::c_int = 7;\n-\n-pub const NLA_F_NESTED: ::c_int = 1 << 15;\n-pub const NLA_F_NET_BYTEORDER: ::c_int = 1 << 14;\n-pub const NLA_TYPE_MASK: ::c_int = !(NLA_F_NESTED | NLA_F_NET_BYTEORDER);\n-\n-f! {\n-    pub fn sigemptyset(set: *mut sigset_t) -> ::c_int {\n-        *set = 0;\n-        return 0\n-    }\n-    pub fn sigaddset(set: *mut sigset_t, signum: ::c_int) -> ::c_int {\n-        *set |= signum as sigset_t;\n-        return 0\n-    }\n-    pub fn sigfillset(set: *mut sigset_t) -> ::c_int {\n-        *set = !0;\n-        return 0\n-    }\n-    pub fn sigdelset(set: *mut sigset_t, signum: ::c_int) -> ::c_int {\n-        *set &= !(signum as sigset_t);\n-        return 0\n-    }\n-    pub fn sigismember(set: *const sigset_t, signum: ::c_int) -> ::c_int {\n-        (*set & (signum as sigset_t)) as ::c_int\n-    }\n-    pub fn cfgetispeed(termios: *const ::termios) -> ::speed_t {\n-        (*termios).c_cflag & ::CBAUD\n-    }\n-    pub fn cfgetospeed(termios: *const ::termios) -> ::speed_t {\n-        (*termios).c_cflag & ::CBAUD\n-    }\n-    pub fn cfsetispeed(termios: *mut ::termios, speed: ::speed_t) -> ::c_int {\n-        let cbaud = ::CBAUD;\n-        (*termios).c_cflag = ((*termios).c_cflag & !cbaud) | (speed & cbaud);\n-        return 0\n-    }\n-    pub fn cfsetospeed(termios: *mut ::termios, speed: ::speed_t) -> ::c_int {\n-        let cbaud = ::CBAUD;\n-        (*termios).c_cflag = ((*termios).c_cflag & !cbaud) | (speed & cbaud);\n-        return 0\n-    }\n-    pub fn tcgetattr(fd: ::c_int, termios: *mut ::termios) -> ::c_int {\n-        ioctl(fd, ::TCGETS, termios)\n-    }\n-    pub fn tcsetattr(fd: ::c_int,\n-                     optional_actions: ::c_int,\n-                     termios: *const ::termios) -> ::c_int {\n-        ioctl(fd, optional_actions, termios)\n-    }\n-    pub fn tcflow(fd: ::c_int, action: ::c_int) -> ::c_int {\n-        ioctl(fd, ::TCXONC, action as *mut ::c_void)\n-    }\n-    pub fn tcflush(fd: ::c_int, action: ::c_int) -> ::c_int {\n-        ioctl(fd, ::TCFLSH, action as *mut ::c_void)\n-    }\n-    pub fn tcsendbreak(fd: ::c_int, duration: ::c_int) -> ::c_int {\n-        ioctl(fd, TCSBRKP, duration as *mut ::c_void)\n-    }\n-\n-    pub fn CPU_ZERO(cpuset: &mut cpu_set_t) -> () {\n-        for slot in cpuset.__bits.iter_mut() {\n-            *slot = 0;\n-        }\n-    }\n-\n-    pub fn CPU_SET(cpu: usize, cpuset: &mut cpu_set_t) -> () {\n-        let size_in___bits = 8 * mem::size_of_val(&cpuset.__bits[0]);\n-        let (idx, offset) = (cpu / size_in___bits, cpu % size_in___bits);\n-        cpuset.__bits[idx] |= 1 << offset;\n-        ()\n-    }\n-\n-    pub fn CPU_CLR(cpu: usize, cpuset: &mut cpu_set_t) -> () {\n-        let size_in___bits = 8 * mem::size_of_val(&cpuset.__bits[0]);\n-        let (idx, offset) = (cpu / size_in___bits, cpu % size_in___bits);\n-        cpuset.__bits[idx] &= !(1 << offset);\n-        ()\n-    }\n-\n-    pub fn CPU_ISSET(cpu: usize, cpuset: &cpu_set_t) -> bool {\n-        let size_in___bits = 8 * mem::size_of_val(&cpuset.__bits[0]);\n-        let (idx, offset) = (cpu / size_in___bits, cpu % size_in___bits);\n-        0 != (cpuset.__bits[idx] & (1 << offset))\n-    }\n-\n-    pub fn CPU_EQUAL(set1: &cpu_set_t, set2: &cpu_set_t) -> bool {\n-        set1.__bits == set2.__bits\n-    }\n-}\n-\n-extern {\n-    static mut __progname: *mut ::c_char;\n-}\n-\n-extern {\n-    pub fn madvise(addr: *const ::c_void, len: ::size_t, advice: ::c_int)\n-                   -> ::c_int;\n-    pub fn ioctl(fd: ::c_int, request: ::c_int, ...) -> ::c_int;\n-    pub fn readlink(path: *const ::c_char,\n-                    buf: *mut ::c_char,\n-                    bufsz: ::size_t)\n-                    -> ::c_int;\n-    pub fn msync(addr: *const ::c_void, len: ::size_t,\n-                 flags: ::c_int) -> ::c_int;\n-    pub fn mprotect(addr: *const ::c_void, len: ::size_t, prot: ::c_int)\n-                    -> ::c_int;\n-    pub fn sysconf(name: ::c_int) -> ::c_long;\n-    pub fn recvfrom(socket: ::c_int, buf: *mut ::c_void, len: ::size_t,\n-                    flags: ::c_int, addr: *const ::sockaddr,\n-                    addrlen: *mut ::socklen_t) -> ::ssize_t;\n-    pub fn getnameinfo(sa: *const ::sockaddr,\n-                       salen: ::socklen_t,\n-                       host: *mut ::c_char,\n-                       hostlen: ::size_t,\n-                       serv: *mut ::c_char,\n-                       sevlen: ::size_t,\n-                       flags: ::c_int) -> ::c_int;\n-    pub fn ptrace(request: ::c_int, ...) -> ::c_long;\n-    pub fn getpriority(which: ::c_int, who: ::c_int) -> ::c_int;\n-    pub fn setpriority(which: ::c_int, who: ::c_int, prio: ::c_int) -> ::c_int;\n-    pub fn __sched_cpualloc(count: ::size_t) -> *mut ::cpu_set_t;\n-    pub fn __sched_cpufree(set: *mut ::cpu_set_t);\n-    pub fn __sched_cpucount(setsize: ::size_t, set: *mut cpu_set_t) -> ::c_int;\n-    pub fn sched_getcpu() -> ::c_int;\n-\n-    pub fn utmpname(name: *const ::c_char) -> ::c_int;\n-    pub fn setutent();\n-    pub fn getutent() -> *mut utmp;\n-}\n-\n-cfg_if! {\n-    if #[cfg(target_pointer_width = \"32\")] {\n-        mod b32;\n-        pub use self::b32::*;\n-    } else if #[cfg(target_pointer_width = \"64\")] {\n-        mod b64;\n-        pub use self::b64::*;\n-    } else {\n-        // Unknown target_pointer_width\n-    }\n-}"}, {"sha": "085f2b31ce65c1620a9aaf31b549c6a80e0299ef", "filename": "src/vendor/libc/src/unix/notbsd/linux/mips.rs", "status": "removed", "additions": 0, "deletions": 651, "changes": 651, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmips.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,651 +0,0 @@\n-pub type c_char = i8;\n-pub type c_long = i32;\n-pub type c_ulong = u32;\n-pub type clock_t = i32;\n-pub type time_t = i32;\n-pub type suseconds_t = i32;\n-pub type wchar_t = i32;\n-pub type off_t = i32;\n-pub type ino_t = u32;\n-pub type blkcnt_t = i32;\n-pub type blksize_t = i32;\n-pub type nlink_t = u32;\n-pub type fsblkcnt_t = ::c_ulong;\n-pub type fsfilcnt_t = ::c_ulong;\n-pub type rlim_t = c_ulong;\n-\n-s! {\n-    pub struct stat {\n-        pub st_dev: ::c_ulong,\n-        st_pad1: [::c_long; 3],\n-        pub st_ino: ::ino_t,\n-        pub st_mode: ::mode_t,\n-        pub st_nlink: ::nlink_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::c_ulong,\n-        pub st_pad2: [::c_long; 2],\n-        pub st_size: ::off_t,\n-        st_pad3: ::c_long,\n-        pub st_atime: ::time_t,\n-        pub st_atime_nsec: ::c_long,\n-        pub st_mtime: ::time_t,\n-        pub st_mtime_nsec: ::c_long,\n-        pub st_ctime: ::time_t,\n-        pub st_ctime_nsec: ::c_long,\n-        pub st_blksize: ::blksize_t,\n-        pub st_blocks: ::blkcnt_t,\n-        st_pad5: [::c_long; 14],\n-    }\n-\n-    pub struct stat64 {\n-        pub st_dev: ::c_ulong,\n-        st_pad1: [::c_long; 3],\n-        pub st_ino: ::ino64_t,\n-        pub st_mode: ::mode_t,\n-        pub st_nlink: ::nlink_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::c_ulong,\n-        st_pad2: [::c_long; 2],\n-        pub st_size: ::off64_t,\n-        pub st_atime: ::time_t,\n-        pub st_atime_nsec: ::c_long,\n-        pub st_mtime: ::time_t,\n-        pub st_mtime_nsec: ::c_long,\n-        pub st_ctime: ::time_t,\n-        pub st_ctime_nsec: ::c_long,\n-        pub st_blksize: ::blksize_t,\n-        st_pad3: ::c_long,\n-        pub st_blocks: ::blkcnt64_t,\n-        st_pad5: [::c_long; 14],\n-    }\n-\n-    pub struct pthread_attr_t {\n-        __size: [u32; 9]\n-    }\n-\n-    pub struct sigaction {\n-        pub sa_flags: ::c_int,\n-        pub sa_sigaction: ::sighandler_t,\n-        pub sa_mask: sigset_t,\n-        _restorer: *mut ::c_void,\n-        _resv: [::c_int; 1],\n-    }\n-\n-    pub struct stack_t {\n-        pub ss_sp: *mut ::c_void,\n-        pub ss_size: ::size_t,\n-        pub ss_flags: ::c_int,\n-    }\n-\n-    pub struct sigset_t {\n-        __val: [::c_ulong; 32],\n-    }\n-\n-    pub struct siginfo_t {\n-        pub si_signo: ::c_int,\n-        pub si_code: ::c_int,\n-        pub si_errno: ::c_int,\n-        pub _pad: [::c_int; 29],\n-    }\n-\n-    pub struct glob64_t {\n-        pub gl_pathc: ::size_t,\n-        pub gl_pathv: *mut *mut ::c_char,\n-        pub gl_offs: ::size_t,\n-        pub gl_flags: ::c_int,\n-\n-        __unused1: *mut ::c_void,\n-        __unused2: *mut ::c_void,\n-        __unused3: *mut ::c_void,\n-        __unused4: *mut ::c_void,\n-        __unused5: *mut ::c_void,\n-    }\n-\n-    pub struct ipc_perm {\n-        pub __key: ::key_t,\n-        pub uid: ::uid_t,\n-        pub gid: ::gid_t,\n-        pub cuid: ::uid_t,\n-        pub cgid: ::gid_t,\n-        pub mode: ::c_uint,\n-        pub __seq: ::c_ushort,\n-        __pad1: ::c_ushort,\n-        __unused1: ::c_ulong,\n-        __unused2: ::c_ulong\n-    }\n-\n-    pub struct shmid_ds {\n-        pub shm_perm: ::ipc_perm,\n-        pub shm_segsz: ::size_t,\n-        pub shm_atime: ::time_t,\n-        pub shm_dtime: ::time_t,\n-        pub shm_ctime: ::time_t,\n-        pub shm_cpid: ::pid_t,\n-        pub shm_lpid: ::pid_t,\n-        pub shm_nattch: ::shmatt_t,\n-        __unused4: ::c_ulong,\n-        __unused5: ::c_ulong\n-    }\n-\n-    pub struct msqid_ds {\n-        pub msg_perm: ::ipc_perm,\n-        #[cfg(target_endian = \"big\")]\n-        __glibc_reserved1: ::c_ulong,\n-        pub msg_stime: ::time_t,\n-        #[cfg(target_endian = \"little\")]\n-        __glibc_reserved1: ::c_ulong,\n-        #[cfg(target_endian = \"big\")]\n-        __glibc_reserved2: ::c_ulong,\n-        pub msg_rtime: ::time_t,\n-        #[cfg(target_endian = \"little\")]\n-        __glibc_reserved2: ::c_ulong,\n-        #[cfg(target_endian = \"big\")]\n-        __glibc_reserved3: ::c_ulong,\n-        pub msg_ctime: ::time_t,\n-        #[cfg(target_endian = \"little\")]\n-        __glibc_reserved3: ::c_ulong,\n-        __msg_cbytes: ::c_ulong,\n-        pub msg_qnum: ::msgqnum_t,\n-        pub msg_qbytes: ::msglen_t,\n-        pub msg_lspid: ::pid_t,\n-        pub msg_lrpid: ::pid_t,\n-        __glibc_reserved4: ::c_ulong,\n-        __glibc_reserved5: ::c_ulong,\n-    }\n-\n-    pub struct statfs {\n-        pub f_type: ::c_long,\n-        pub f_bsize: ::c_long,\n-        pub f_frsize: ::c_long,\n-        pub f_blocks: ::fsblkcnt_t,\n-        pub f_bfree: ::fsblkcnt_t,\n-        pub f_files: ::fsblkcnt_t,\n-        pub f_ffree: ::fsblkcnt_t,\n-        pub f_bavail: ::fsblkcnt_t,\n-        pub f_fsid: ::fsid_t,\n-\n-        pub f_namelen: ::c_long,\n-        f_spare: [::c_long; 6],\n-    }\n-\n-    pub struct msghdr {\n-        pub msg_name: *mut ::c_void,\n-        pub msg_namelen: ::socklen_t,\n-        pub msg_iov: *mut ::iovec,\n-        pub msg_iovlen: ::size_t,\n-        pub msg_control: *mut ::c_void,\n-        pub msg_controllen: ::size_t,\n-        pub msg_flags: ::c_int,\n-    }\n-\n-    pub struct termios {\n-        pub c_iflag: ::tcflag_t,\n-        pub c_oflag: ::tcflag_t,\n-        pub c_cflag: ::tcflag_t,\n-        pub c_lflag: ::tcflag_t,\n-        pub c_line: ::cc_t,\n-        pub c_cc: [::cc_t; ::NCCS],\n-    }\n-\n-    pub struct flock {\n-        pub l_type: ::c_short,\n-        pub l_whence: ::c_short,\n-        pub l_start: ::off_t,\n-        pub l_len: ::off_t,\n-        pub l_sysid: ::c_long,\n-        pub l_pid: ::pid_t,\n-        pad: [::c_long; 4],\n-    }\n-\n-    pub struct sysinfo {\n-        pub uptime: ::c_long,\n-        pub loads: [::c_ulong; 3],\n-        pub totalram: ::c_ulong,\n-        pub freeram: ::c_ulong,\n-        pub sharedram: ::c_ulong,\n-        pub bufferram: ::c_ulong,\n-        pub totalswap: ::c_ulong,\n-        pub freeswap: ::c_ulong,\n-        pub procs: ::c_ushort,\n-        pub pad: ::c_ushort,\n-        pub totalhigh: ::c_ulong,\n-        pub freehigh: ::c_ulong,\n-        pub mem_unit: ::c_uint,\n-        pub _f: [::c_char; 8],\n-    }\n-\n-    // FIXME this is actually a union\n-    pub struct sem_t {\n-        #[cfg(target_pointer_width = \"32\")]\n-        __size: [::c_char; 16],\n-        #[cfg(target_pointer_width = \"64\")]\n-        __size: [::c_char; 32],\n-        __align: [::c_long; 0],\n-    }\n-}\n-\n-pub const BUFSIZ: ::c_uint = 8192;\n-pub const TMP_MAX: ::c_uint = 238328;\n-pub const FOPEN_MAX: ::c_uint = 16;\n-pub const POSIX_FADV_DONTNEED: ::c_int = 4;\n-pub const POSIX_FADV_NOREUSE: ::c_int = 5;\n-pub const POSIX_MADV_DONTNEED: ::c_int = 4;\n-pub const _SC_2_C_VERSION: ::c_int = 96;\n-pub const O_ACCMODE: ::c_int = 3;\n-pub const O_DIRECT: ::c_int = 0x8000;\n-pub const O_DIRECTORY: ::c_int = 0x10000;\n-pub const O_NOFOLLOW: ::c_int = 0x20000;\n-pub const ST_RELATIME: ::c_ulong = 4096;\n-pub const NI_MAXHOST: ::socklen_t = 1025;\n-\n-pub const RLIMIT_NOFILE: ::c_int = 5;\n-pub const RLIMIT_AS: ::c_int = 6;\n-pub const RLIMIT_RSS: ::c_int = 7;\n-pub const RLIMIT_NPROC: ::c_int = 8;\n-pub const RLIMIT_MEMLOCK: ::c_int = 9;\n-pub const RLIMIT_NLIMITS: ::c_int = 16;\n-pub const RLIM_INFINITY: ::rlim_t = 0x7fffffff;\n-\n-pub const O_APPEND: ::c_int = 8;\n-pub const O_CREAT: ::c_int = 256;\n-pub const O_EXCL: ::c_int = 1024;\n-pub const O_NOCTTY: ::c_int = 2048;\n-pub const O_NONBLOCK: ::c_int = 128;\n-pub const O_SYNC: ::c_int = 0x4010;\n-pub const O_RSYNC: ::c_int = 0x4010;\n-pub const O_DSYNC: ::c_int = 0x10;\n-pub const O_FSYNC: ::c_int = 0x4010;\n-pub const O_ASYNC: ::c_int = 0x1000;\n-pub const O_NDELAY: ::c_int = 0x80;\n-\n-pub const SOCK_NONBLOCK: ::c_int = 128;\n-\n-pub const EDEADLK: ::c_int = 45;\n-pub const ENAMETOOLONG: ::c_int = 78;\n-pub const ENOLCK: ::c_int = 46;\n-pub const ENOSYS: ::c_int = 89;\n-pub const ENOTEMPTY: ::c_int = 93;\n-pub const ELOOP: ::c_int = 90;\n-pub const ENOMSG: ::c_int = 35;\n-pub const EIDRM: ::c_int = 36;\n-pub const ECHRNG: ::c_int = 37;\n-pub const EL2NSYNC: ::c_int = 38;\n-pub const EL3HLT: ::c_int = 39;\n-pub const EL3RST: ::c_int = 40;\n-pub const ELNRNG: ::c_int = 41;\n-pub const EUNATCH: ::c_int = 42;\n-pub const ENOCSI: ::c_int = 43;\n-pub const EL2HLT: ::c_int = 44;\n-pub const EBADE: ::c_int = 50;\n-pub const EBADR: ::c_int = 51;\n-pub const EXFULL: ::c_int = 52;\n-pub const ENOANO: ::c_int = 53;\n-pub const EBADRQC: ::c_int = 54;\n-pub const EBADSLT: ::c_int = 55;\n-pub const EDEADLOCK: ::c_int = 56;\n-pub const EMULTIHOP: ::c_int = 74;\n-pub const EOVERFLOW: ::c_int = 79;\n-pub const ENOTUNIQ: ::c_int = 80;\n-pub const EBADFD: ::c_int = 81;\n-pub const EBADMSG: ::c_int = 77;\n-pub const EREMCHG: ::c_int = 82;\n-pub const ELIBACC: ::c_int = 83;\n-pub const ELIBBAD: ::c_int = 84;\n-pub const ELIBSCN: ::c_int = 85;\n-pub const ELIBMAX: ::c_int = 86;\n-pub const ELIBEXEC: ::c_int = 87;\n-pub const EILSEQ: ::c_int = 88;\n-pub const ERESTART: ::c_int = 91;\n-pub const ESTRPIPE: ::c_int = 92;\n-pub const EUSERS: ::c_int = 94;\n-pub const ENOTSOCK: ::c_int = 95;\n-pub const EDESTADDRREQ: ::c_int = 96;\n-pub const EMSGSIZE: ::c_int = 97;\n-pub const EPROTOTYPE: ::c_int = 98;\n-pub const ENOPROTOOPT: ::c_int = 99;\n-pub const EPROTONOSUPPORT: ::c_int = 120;\n-pub const ESOCKTNOSUPPORT: ::c_int = 121;\n-pub const EOPNOTSUPP: ::c_int = 122;\n-pub const EPFNOSUPPORT: ::c_int = 123;\n-pub const EAFNOSUPPORT: ::c_int = 124;\n-pub const EADDRINUSE: ::c_int = 125;\n-pub const EADDRNOTAVAIL: ::c_int = 126;\n-pub const ENETDOWN: ::c_int = 127;\n-pub const ENETUNREACH: ::c_int = 128;\n-pub const ENETRESET: ::c_int = 129;\n-pub const ECONNABORTED: ::c_int = 130;\n-pub const ECONNRESET: ::c_int = 131;\n-pub const ENOBUFS: ::c_int = 132;\n-pub const EISCONN: ::c_int = 133;\n-pub const ENOTCONN: ::c_int = 134;\n-pub const ESHUTDOWN: ::c_int = 143;\n-pub const ETOOMANYREFS: ::c_int = 144;\n-pub const ETIMEDOUT: ::c_int = 145;\n-pub const ECONNREFUSED: ::c_int = 146;\n-pub const EHOSTDOWN: ::c_int = 147;\n-pub const EHOSTUNREACH: ::c_int = 148;\n-pub const EALREADY: ::c_int = 149;\n-pub const EINPROGRESS: ::c_int = 150;\n-pub const ESTALE: ::c_int = 151;\n-pub const EUCLEAN: ::c_int = 135;\n-pub const ENOTNAM: ::c_int = 137;\n-pub const ENAVAIL: ::c_int = 138;\n-pub const EISNAM: ::c_int = 139;\n-pub const EREMOTEIO: ::c_int = 140;\n-pub const EDQUOT: ::c_int = 1133;\n-pub const ENOMEDIUM: ::c_int = 159;\n-pub const EMEDIUMTYPE: ::c_int = 160;\n-pub const ECANCELED: ::c_int = 158;\n-pub const ENOKEY: ::c_int = 161;\n-pub const EKEYEXPIRED: ::c_int = 162;\n-pub const EKEYREVOKED: ::c_int = 163;\n-pub const EKEYREJECTED: ::c_int = 164;\n-pub const EOWNERDEAD: ::c_int = 165;\n-pub const ENOTRECOVERABLE: ::c_int = 166;\n-pub const ERFKILL: ::c_int = 167;\n-\n-pub const LC_PAPER: ::c_int = 7;\n-pub const LC_NAME: ::c_int = 8;\n-pub const LC_ADDRESS: ::c_int = 9;\n-pub const LC_TELEPHONE: ::c_int = 10;\n-pub const LC_MEASUREMENT: ::c_int = 11;\n-pub const LC_IDENTIFICATION: ::c_int = 12;\n-pub const LC_PAPER_MASK: ::c_int = (1 << LC_PAPER);\n-pub const LC_NAME_MASK: ::c_int = (1 << LC_NAME);\n-pub const LC_ADDRESS_MASK: ::c_int = (1 << LC_ADDRESS);\n-pub const LC_TELEPHONE_MASK: ::c_int = (1 << LC_TELEPHONE);\n-pub const LC_MEASUREMENT_MASK: ::c_int = (1 << LC_MEASUREMENT);\n-pub const LC_IDENTIFICATION_MASK: ::c_int = (1 << LC_IDENTIFICATION);\n-pub const LC_ALL_MASK: ::c_int = ::LC_CTYPE_MASK\n-                               | ::LC_NUMERIC_MASK\n-                               | ::LC_TIME_MASK\n-                               | ::LC_COLLATE_MASK\n-                               | ::LC_MONETARY_MASK\n-                               | ::LC_MESSAGES_MASK\n-                               | LC_PAPER_MASK\n-                               | LC_NAME_MASK\n-                               | LC_ADDRESS_MASK\n-                               | LC_TELEPHONE_MASK\n-                               | LC_MEASUREMENT_MASK\n-                               | LC_IDENTIFICATION_MASK;\n-\n-pub const MAP_NORESERVE: ::c_int = 0x400;\n-pub const MAP_ANON: ::c_int = 0x800;\n-pub const MAP_ANONYMOUS: ::c_int = 0x800;\n-pub const MAP_GROWSDOWN: ::c_int = 0x1000;\n-pub const MAP_DENYWRITE: ::c_int = 0x2000;\n-pub const MAP_EXECUTABLE: ::c_int = 0x4000;\n-pub const MAP_LOCKED: ::c_int = 0x8000;\n-pub const MAP_POPULATE: ::c_int = 0x10000;\n-pub const MAP_NONBLOCK: ::c_int = 0x20000;\n-pub const MAP_STACK: ::c_int = 0x40000;\n-\n-pub const SOCK_STREAM: ::c_int = 2;\n-pub const SOCK_DGRAM: ::c_int = 1;\n-pub const SOCK_SEQPACKET: ::c_int = 5;\n-\n-pub const SOL_SOCKET: ::c_int = 0xffff;\n-\n-pub const SO_REUSEADDR: ::c_int = 4;\n-pub const SO_REUSEPORT: ::c_int = 0x200;\n-pub const SO_TYPE: ::c_int = 4104;\n-pub const SO_ERROR: ::c_int = 4103;\n-pub const SO_DONTROUTE: ::c_int = 16;\n-pub const SO_BROADCAST: ::c_int = 32;\n-pub const SO_SNDBUF: ::c_int = 4097;\n-pub const SO_RCVBUF: ::c_int = 4098;\n-pub const SO_KEEPALIVE: ::c_int = 8;\n-pub const SO_OOBINLINE: ::c_int = 256;\n-pub const SO_LINGER: ::c_int = 128;\n-pub const SO_RCVLOWAT: ::c_int = 4100;\n-pub const SO_SNDLOWAT: ::c_int = 4099;\n-pub const SO_RCVTIMEO: ::c_int = 4102;\n-pub const SO_SNDTIMEO: ::c_int = 4101;\n-pub const SO_ACCEPTCONN: ::c_int = 4105;\n-\n-pub const __SIZEOF_PTHREAD_CONDATTR_T: usize = 4;\n-pub const __SIZEOF_PTHREAD_MUTEX_T: usize = 24;\n-pub const __SIZEOF_PTHREAD_RWLOCK_T: usize = 32;\n-pub const __SIZEOF_PTHREAD_MUTEXATTR_T: usize = 4;\n-\n-pub const FIOCLEX: ::c_ulong = 0x6601;\n-pub const FIONBIO: ::c_ulong = 0x667e;\n-\n-pub const SA_ONSTACK: ::c_int = 0x08000000;\n-pub const SA_SIGINFO: ::c_int = 0x00000008;\n-pub const SA_NOCLDWAIT: ::c_int = 0x00010000;\n-\n-pub const SIGCHLD: ::c_int = 18;\n-pub const SIGBUS: ::c_int = 10;\n-pub const SIGTTIN: ::c_int = 26;\n-pub const SIGTTOU: ::c_int = 27;\n-pub const SIGXCPU: ::c_int = 30;\n-pub const SIGXFSZ: ::c_int = 31;\n-pub const SIGVTALRM: ::c_int = 28;\n-pub const SIGPROF: ::c_int = 29;\n-pub const SIGWINCH: ::c_int = 20;\n-pub const SIGUSR1: ::c_int = 16;\n-pub const SIGUSR2: ::c_int = 17;\n-pub const SIGCONT: ::c_int = 25;\n-pub const SIGSTOP: ::c_int = 23;\n-pub const SIGTSTP: ::c_int = 24;\n-pub const SIGURG: ::c_int = 21;\n-pub const SIGIO: ::c_int = 22;\n-pub const SIGSYS: ::c_int = 12;\n-pub const SIGPOLL: ::c_int = 22;\n-pub const SIGPWR: ::c_int = 19;\n-pub const SIG_SETMASK: ::c_int = 3;\n-pub const SIG_BLOCK: ::c_int = 0x1;\n-pub const SIG_UNBLOCK: ::c_int = 0x2;\n-\n-pub const POLLRDNORM: ::c_short = 0x040;\n-pub const POLLWRNORM: ::c_short = 0x004;\n-pub const POLLRDBAND: ::c_short = 0x080;\n-pub const POLLWRBAND: ::c_short = 0x100;\n-\n-pub const PTHREAD_STACK_MIN: ::size_t = 131072;\n-\n-pub const ADFS_SUPER_MAGIC: ::c_long = 0x0000adf5;\n-pub const AFFS_SUPER_MAGIC: ::c_long = 0x0000adff;\n-pub const CODA_SUPER_MAGIC: ::c_long = 0x73757245;\n-pub const CRAMFS_MAGIC: ::c_long = 0x28cd3d45;\n-pub const EFS_SUPER_MAGIC: ::c_long = 0x00414a53;\n-pub const EXT2_SUPER_MAGIC: ::c_long = 0x0000ef53;\n-pub const EXT3_SUPER_MAGIC: ::c_long = 0x0000ef53;\n-pub const EXT4_SUPER_MAGIC: ::c_long = 0x0000ef53;\n-pub const HPFS_SUPER_MAGIC: ::c_long = 0xf995e849;\n-pub const HUGETLBFS_MAGIC: ::c_long = 0x958458f6;\n-pub const ISOFS_SUPER_MAGIC: ::c_long = 0x00009660;\n-pub const JFFS2_SUPER_MAGIC: ::c_long = 0x000072b6;\n-pub const MINIX_SUPER_MAGIC: ::c_long = 0x0000137f;\n-pub const MINIX_SUPER_MAGIC2: ::c_long = 0x0000138f;\n-pub const MINIX2_SUPER_MAGIC: ::c_long = 0x00002468;\n-pub const MINIX2_SUPER_MAGIC2: ::c_long = 0x00002478;\n-pub const MSDOS_SUPER_MAGIC: ::c_long = 0x00004d44;\n-pub const NCP_SUPER_MAGIC: ::c_long = 0x0000564c;\n-pub const NFS_SUPER_MAGIC: ::c_long = 0x00006969;\n-pub const OPENPROM_SUPER_MAGIC: ::c_long = 0x00009fa1;\n-pub const PROC_SUPER_MAGIC: ::c_long = 0x00009fa0;\n-pub const QNX4_SUPER_MAGIC: ::c_long = 0x0000002f;\n-pub const REISERFS_SUPER_MAGIC: ::c_long = 0x52654973;\n-pub const SMB_SUPER_MAGIC: ::c_long = 0x0000517b;\n-pub const TMPFS_MAGIC: ::c_long = 0x01021994;\n-pub const USBDEVICE_SUPER_MAGIC: ::c_long = 0x00009fa2;\n-\n-pub const VEOF: usize = 16;\n-pub const VEOL: usize = 17;\n-pub const VEOL2: usize = 6;\n-pub const VMIN: usize = 4;\n-pub const IEXTEN: ::tcflag_t = 0x00000100;\n-pub const TOSTOP: ::tcflag_t = 0x00008000;\n-pub const FLUSHO: ::tcflag_t = 0x00002000;\n-pub const IUTF8: ::tcflag_t = 0x00004000;\n-pub const TCSANOW: ::c_int = 0x540e;\n-pub const TCSADRAIN: ::c_int = 0x540f;\n-pub const TCSAFLUSH: ::c_int = 0x5410;\n-\n-pub const CPU_SETSIZE: ::c_int = 0x400;\n-\n-pub const PTRACE_TRACEME: ::c_uint = 0;\n-pub const PTRACE_PEEKTEXT: ::c_uint = 1;\n-pub const PTRACE_PEEKDATA: ::c_uint = 2;\n-pub const PTRACE_PEEKUSER: ::c_uint = 3;\n-pub const PTRACE_POKETEXT: ::c_uint = 4;\n-pub const PTRACE_POKEDATA: ::c_uint = 5;\n-pub const PTRACE_POKEUSER: ::c_uint = 6;\n-pub const PTRACE_CONT: ::c_uint = 7;\n-pub const PTRACE_KILL: ::c_uint = 8;\n-pub const PTRACE_SINGLESTEP: ::c_uint = 9;\n-pub const PTRACE_ATTACH: ::c_uint = 16;\n-pub const PTRACE_DETACH: ::c_uint = 17;\n-pub const PTRACE_SYSCALL: ::c_uint = 24;\n-pub const PTRACE_SETOPTIONS: ::c_uint = 0x4200;\n-pub const PTRACE_GETEVENTMSG: ::c_uint = 0x4201;\n-pub const PTRACE_GETSIGINFO: ::c_uint = 0x4202;\n-pub const PTRACE_SETSIGINFO: ::c_uint = 0x4203;\n-pub const PTRACE_GETFPREGS: ::c_uint = 14;\n-pub const PTRACE_SETFPREGS: ::c_uint = 15;\n-pub const PTRACE_GETFPXREGS: ::c_uint = 18;\n-pub const PTRACE_SETFPXREGS: ::c_uint = 19;\n-pub const PTRACE_GETREGS: ::c_uint = 12;\n-pub const PTRACE_SETREGS: ::c_uint = 13;\n-\n-pub const MAP_HUGETLB: ::c_int = 0x080000;\n-\n-pub const EFD_NONBLOCK: ::c_int = 0x80;\n-\n-pub const F_GETLK: ::c_int = 14;\n-pub const F_GETOWN: ::c_int = 23;\n-pub const F_SETOWN: ::c_int = 24;\n-pub const F_SETLK: ::c_int = 6;\n-pub const F_SETLKW: ::c_int = 7;\n-\n-pub const SFD_NONBLOCK: ::c_int = 0x80;\n-\n-pub const TCGETS: ::c_ulong = 0x540d;\n-pub const TCSETS: ::c_ulong = 0x540e;\n-pub const TCSETSW: ::c_ulong = 0x540f;\n-pub const TCSETSF: ::c_ulong = 0x5410;\n-pub const TCGETA: ::c_ulong = 0x5401;\n-pub const TCSETA: ::c_ulong = 0x5402;\n-pub const TCSETAW: ::c_ulong = 0x5403;\n-pub const TCSETAF: ::c_ulong = 0x5404;\n-pub const TCSBRK: ::c_ulong = 0x5405;\n-pub const TCXONC: ::c_ulong = 0x5406;\n-pub const TCFLSH: ::c_ulong = 0x5407;\n-pub const TIOCGSOFTCAR: ::c_ulong = 0x5481;\n-pub const TIOCSSOFTCAR: ::c_ulong = 0x5482;\n-pub const TIOCINQ: ::c_ulong = 0x467f;\n-pub const TIOCLINUX: ::c_ulong = 0x5483;\n-pub const TIOCGSERIAL: ::c_ulong = 0x5484;\n-pub const TIOCEXCL: ::c_ulong = 0x740d;\n-pub const TIOCNXCL: ::c_ulong = 0x740e;\n-pub const TIOCSCTTY: ::c_ulong = 0x5480;\n-pub const TIOCGPGRP: ::c_ulong = 0x40047477;\n-pub const TIOCSPGRP: ::c_ulong = 0x80047476;\n-pub const TIOCOUTQ: ::c_ulong = 0x7472;\n-pub const TIOCSTI: ::c_ulong = 0x5472;\n-pub const TIOCGWINSZ: ::c_ulong = 0x40087468;\n-pub const TIOCSWINSZ: ::c_ulong = 0x80087467;\n-pub const TIOCMGET: ::c_ulong = 0x741d;\n-pub const TIOCMBIS: ::c_ulong = 0x741b;\n-pub const TIOCMBIC: ::c_ulong = 0x741c;\n-pub const TIOCMSET: ::c_ulong = 0x741a;\n-pub const FIONREAD: ::c_ulong = 0x467f;\n-pub const TIOCCONS: ::c_ulong = 0x80047478;\n-\n-pub const RTLD_DEEPBIND: ::c_int = 0x10;\n-pub const RTLD_GLOBAL: ::c_int = 0x4;\n-pub const RTLD_NOLOAD: ::c_int = 0x8;\n-\n-pub const LINUX_REBOOT_MAGIC1: ::c_int = 0xfee1dead;\n-pub const LINUX_REBOOT_MAGIC2: ::c_int = 672274793;\n-pub const LINUX_REBOOT_MAGIC2A: ::c_int = 85072278;\n-pub const LINUX_REBOOT_MAGIC2B: ::c_int = 369367448;\n-pub const LINUX_REBOOT_MAGIC2C: ::c_int = 537993216;\n-\n-pub const LINUX_REBOOT_CMD_RESTART: ::c_int = 0x01234567;\n-pub const LINUX_REBOOT_CMD_HALT: ::c_int = 0xCDEF0123;\n-pub const LINUX_REBOOT_CMD_CAD_ON: ::c_int = 0x89ABCDEF;\n-pub const LINUX_REBOOT_CMD_CAD_OFF: ::c_int = 0x00000000;\n-pub const LINUX_REBOOT_CMD_POWER_OFF: ::c_int = 0x4321FEDC;\n-pub const LINUX_REBOOT_CMD_RESTART2: ::c_int = 0xA1B2C3D4;\n-pub const LINUX_REBOOT_CMD_SW_SUSPEND: ::c_int = 0xD000FCE2;\n-pub const LINUX_REBOOT_CMD_KEXEC: ::c_int = 0x45584543;\n-\n-pub const SYS_gettid: ::c_long = 4222;   // Valid for O32\n-\n-pub const MCL_CURRENT: ::c_int = 0x0001;\n-pub const MCL_FUTURE: ::c_int = 0x0002;\n-\n-pub const SIGSTKSZ: ::size_t = 8192;\n-pub const CBAUD: ::tcflag_t = 0o0010017;\n-pub const TAB1: ::c_int = 0x00000800;\n-pub const TAB2: ::c_int = 0x00001000;\n-pub const TAB3: ::c_int = 0x00001800;\n-pub const CR1: ::c_int  = 0x00000200;\n-pub const CR2: ::c_int  = 0x00000400;\n-pub const CR3: ::c_int  = 0x00000600;\n-pub const FF1: ::c_int  = 0x00008000;\n-pub const BS1: ::c_int  = 0x00002000;\n-pub const VT1: ::c_int  = 0x00004000;\n-pub const VWERASE: usize = 14;\n-pub const VREPRINT: usize = 12;\n-pub const VSUSP: usize = 10;\n-pub const VSTART: usize = 8;\n-pub const VSTOP: usize = 9;\n-pub const VDISCARD: usize = 13;\n-pub const VTIME: usize = 5;\n-pub const IXON: ::tcflag_t = 0x00000400;\n-pub const IXOFF: ::tcflag_t = 0x00001000;\n-pub const ONLCR: ::tcflag_t = 0x4;\n-pub const CSIZE: ::tcflag_t = 0x00000030;\n-pub const CS6: ::tcflag_t = 0x00000010;\n-pub const CS7: ::tcflag_t = 0x00000020;\n-pub const CS8: ::tcflag_t = 0x00000030;\n-pub const CSTOPB: ::tcflag_t = 0x00000040;\n-pub const CREAD: ::tcflag_t = 0x00000080;\n-pub const PARENB: ::tcflag_t = 0x00000100;\n-pub const PARODD: ::tcflag_t = 0x00000200;\n-pub const HUPCL: ::tcflag_t = 0x00000400;\n-pub const CLOCAL: ::tcflag_t = 0x00000800;\n-pub const ECHOKE: ::tcflag_t = 0x00000800;\n-pub const ECHOE: ::tcflag_t = 0x00000010;\n-pub const ECHOK: ::tcflag_t = 0x00000020;\n-pub const ECHONL: ::tcflag_t = 0x00000040;\n-pub const ECHOPRT: ::tcflag_t = 0x00000400;\n-pub const ECHOCTL: ::tcflag_t = 0x00000200;\n-pub const ISIG: ::tcflag_t = 0x00000001;\n-pub const ICANON: ::tcflag_t = 0x00000002;\n-pub const PENDIN: ::tcflag_t = 0x00004000;\n-pub const NOFLSH: ::tcflag_t = 0x00000080;\n-\n-#[link(name = \"util\")]\n-extern {\n-    pub fn sysctl(name: *mut ::c_int,\n-                  namelen: ::c_int,\n-                  oldp: *mut ::c_void,\n-                  oldlenp: *mut ::size_t,\n-                  newp: *mut ::c_void,\n-                  newlen: ::size_t)\n-                  -> ::c_int;\n-    pub fn ioctl(fd: ::c_int, request: ::c_ulong, ...) -> ::c_int;\n-    pub fn backtrace(buf: *mut *mut ::c_void,\n-                     sz: ::c_int) -> ::c_int;\n-    pub fn glob64(pattern: *const ::c_char,\n-                  flags: ::c_int,\n-                  errfunc: ::dox::Option<extern fn(epath: *const ::c_char,\n-                                                   errno: ::c_int)\n-                                                   -> ::c_int>,\n-                  pglob: *mut glob64_t) -> ::c_int;\n-    pub fn globfree64(pglob: *mut glob64_t);\n-    pub fn ptrace(request: ::c_uint, ...) -> ::c_long;\n-    pub fn pthread_attr_getaffinity_np(attr: *const ::pthread_attr_t,\n-                                       cpusetsize: ::size_t,\n-                                       cpuset: *mut ::cpu_set_t) -> ::c_int;\n-    pub fn pthread_attr_setaffinity_np(attr: *mut ::pthread_attr_t,\n-                                       cpusetsize: ::size_t,\n-                                       cpuset: *const ::cpu_set_t) -> ::c_int;\n-}"}, {"sha": "30c336e6904d47e877a1bc0731c2d31e6a1d0458", "filename": "src/vendor/libc/src/unix/notbsd/linux/mips64.rs", "status": "removed", "additions": 0, "deletions": 240, "changes": 240, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmips64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmips64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmips64.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,240 +0,0 @@\n-pub type blkcnt_t = i64;\n-pub type blksize_t = i64;\n-pub type c_char = i8;\n-pub type c_long = i64;\n-pub type c_ulong = u64;\n-pub type fsblkcnt_t = ::c_ulong;\n-pub type fsfilcnt_t = ::c_ulong;\n-pub type ino_t = u64;\n-pub type nlink_t = u64;\n-pub type off_t = i64;\n-pub type rlim_t = ::c_ulong;\n-pub type suseconds_t = i64;\n-pub type time_t = i64;\n-pub type wchar_t = i32;\n-\n-s! {\n-    pub struct stat {\n-        pub st_dev: ::c_ulong,\n-        st_pad1: [::c_long; 2],\n-        pub st_ino: ::ino_t,\n-        pub st_mode: ::mode_t,\n-        pub st_nlink: ::nlink_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::c_ulong,\n-        st_pad2: [::c_ulong; 1],\n-        pub st_size: ::off_t,\n-        st_pad3: ::c_long,\n-        pub st_atime: ::time_t,\n-        pub st_atime_nsec: ::c_long,\n-        pub st_mtime: ::time_t,\n-        pub st_mtime_nsec: ::c_long,\n-        pub st_ctime: ::time_t,\n-        pub st_ctime_nsec: ::c_long,\n-        pub st_blksize: ::blksize_t,\n-        st_pad4: ::c_long,\n-        pub st_blocks: ::blkcnt_t,\n-        st_pad5: [::c_long; 7],\n-    }\n-\n-    pub struct stat64 {\n-        pub st_dev: ::c_ulong,\n-        st_pad1: [::c_long; 2],\n-        pub st_ino: ::ino64_t,\n-        pub st_mode: ::mode_t,\n-        pub st_nlink: ::nlink_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::c_ulong,\n-        st_pad2: [::c_long; 2],\n-        pub st_size: ::off64_t,\n-        pub st_atime: ::time_t,\n-        pub st_atime_nsec: ::c_long,\n-        pub st_mtime: ::time_t,\n-        pub st_mtime_nsec: ::c_long,\n-        pub st_ctime: ::time_t,\n-        pub st_ctime_nsec: ::c_long,\n-        pub st_blksize: ::blksize_t,\n-        st_pad3: ::c_long,\n-        pub st_blocks: ::blkcnt64_t,\n-        st_pad5: [::c_long; 7],\n-    }\n-\n-    pub struct pthread_attr_t {\n-        __size: [::c_ulong; 7]\n-    }\n-\n-    pub struct sigaction {\n-        pub sa_flags: ::c_int,\n-        pub sa_sigaction: ::sighandler_t,\n-        pub sa_mask: sigset_t,\n-        _restorer: *mut ::c_void,\n-    }\n-\n-    pub struct stack_t {\n-        pub ss_sp: *mut ::c_void,\n-        pub ss_size: ::size_t,\n-        pub ss_flags: ::c_int,\n-    }\n-\n-    pub struct sigset_t {\n-        __size: [::c_ulong; 16],\n-    }\n-\n-    pub struct siginfo_t {\n-        pub si_signo: ::c_int,\n-        pub si_code: ::c_int,\n-        pub si_errno: ::c_int,\n-        _pad: ::c_int,\n-        _pad2: [::c_long; 14],\n-    }\n-\n-    pub struct ipc_perm {\n-        pub __key: ::key_t,\n-        pub uid: ::uid_t,\n-        pub gid: ::gid_t,\n-        pub cuid: ::uid_t,\n-        pub cgid: ::gid_t,\n-        pub mode: ::c_uint,\n-        pub __seq: ::c_ushort,\n-        __pad1: ::c_ushort,\n-        __unused1: ::c_ulong,\n-        __unused2: ::c_ulong\n-    }\n-\n-    pub struct shmid_ds {\n-        pub shm_perm: ::ipc_perm,\n-        pub shm_segsz: ::size_t,\n-        pub shm_atime: ::time_t,\n-        pub shm_dtime: ::time_t,\n-        pub shm_ctime: ::time_t,\n-        pub shm_cpid: ::pid_t,\n-        pub shm_lpid: ::pid_t,\n-        pub shm_nattch: ::shmatt_t,\n-        __unused4: ::c_ulong,\n-        __unused5: ::c_ulong\n-    }\n-\n-    pub struct msqid_ds {\n-        pub msg_perm: ::ipc_perm,\n-        pub msg_stime: ::time_t,\n-        pub msg_rtime: ::time_t,\n-        pub msg_ctime: ::time_t,\n-        __msg_cbytes: ::c_ulong,\n-        pub msg_qnum: ::msgqnum_t,\n-        pub msg_qbytes: ::msglen_t,\n-        pub msg_lspid: ::pid_t,\n-        pub msg_lrpid: ::pid_t,\n-        __glibc_reserved4: ::c_ulong,\n-        __glibc_reserved5: ::c_ulong,\n-    }\n-\n-    pub struct statfs {\n-        pub f_type: ::c_long,\n-        pub f_bsize: ::c_long,\n-        pub f_frsize: ::c_long,\n-        pub f_blocks: ::fsblkcnt_t,\n-        pub f_bfree: ::fsblkcnt_t,\n-        pub f_files: ::fsblkcnt_t,\n-        pub f_ffree: ::fsblkcnt_t,\n-        pub f_bavail: ::fsblkcnt_t,\n-        pub f_fsid: ::fsid_t,\n-\n-        pub f_namelen: ::c_long,\n-        f_spare: [::c_long; 6],\n-    }\n-\n-    pub struct msghdr {\n-        pub msg_name: *mut ::c_void,\n-        pub msg_namelen: ::socklen_t,\n-        pub msg_iov: *mut ::iovec,\n-        pub msg_iovlen: ::size_t,\n-        pub msg_control: *mut ::c_void,\n-        pub msg_controllen: ::size_t,\n-        pub msg_flags: ::c_int,\n-    }\n-\n-    pub struct termios {\n-        pub c_iflag: ::tcflag_t,\n-        pub c_oflag: ::tcflag_t,\n-        pub c_cflag: ::tcflag_t,\n-        pub c_lflag: ::tcflag_t,\n-        pub c_line: ::cc_t,\n-        pub c_cc: [::cc_t; ::NCCS],\n-    }\n-\n-    pub struct sysinfo {\n-        pub uptime: ::c_long,\n-        pub loads: [::c_ulong; 3],\n-        pub totalram: ::c_ulong,\n-        pub freeram: ::c_ulong,\n-        pub sharedram: ::c_ulong,\n-        pub bufferram: ::c_ulong,\n-        pub totalswap: ::c_ulong,\n-        pub freeswap: ::c_ulong,\n-        pub procs: ::c_ushort,\n-        pub pad: ::c_ushort,\n-        pub totalhigh: ::c_ulong,\n-        pub freehigh: ::c_ulong,\n-        pub mem_unit: ::c_uint,\n-        pub _f: [::c_char; 0],\n-    }\n-\n-    // FIXME this is actually a union\n-    pub struct sem_t {\n-        __size: [::c_char; 32],\n-        __align: [::c_long; 0],\n-    }\n-}\n-\n-pub const __SIZEOF_PTHREAD_CONDATTR_T: usize = 4;\n-pub const __SIZEOF_PTHREAD_MUTEXATTR_T: usize = 4;\n-pub const __SIZEOF_PTHREAD_MUTEX_T: usize = 40;\n-pub const __SIZEOF_PTHREAD_RWLOCK_T: usize = 56;\n-\n-pub const EADDRINUSE: ::c_int = 125;\n-pub const EADDRNOTAVAIL: ::c_int = 126;\n-pub const ECONNABORTED: ::c_int = 130;\n-pub const ECONNREFUSED: ::c_int = 146;\n-pub const ECONNRESET: ::c_int = 131;\n-pub const EDEADLK: ::c_int = 45;\n-pub const ENOSYS: ::c_int = 89;\n-pub const ENOTCONN: ::c_int = 134;\n-pub const ETIMEDOUT: ::c_int = 145;\n-pub const FIOCLEX: ::c_ulong = 0x6601;\n-pub const FIONBIO: ::c_ulong = 0x667e;\n-pub const MAP_ANON: ::c_int = 0x800;\n-pub const O_ACCMODE: ::c_int = 3;\n-pub const O_APPEND: ::c_int = 8;\n-pub const O_CREAT: ::c_int = 256;\n-pub const O_EXCL: ::c_int = 1024;\n-pub const O_NONBLOCK: ::c_int = 128;\n-pub const POSIX_FADV_DONTNEED: ::c_int = 4;\n-pub const POSIX_FADV_NOREUSE: ::c_int = 5;\n-pub const PTHREAD_STACK_MIN: ::size_t = 131072;\n-pub const NFS_SUPER_MAGIC: ::c_long = 0x00006969;\n-pub const RLIM_INFINITY: ::rlim_t = 0xffffffffffffffff;\n-pub const SA_ONSTACK: ::c_int = 0x08000000;\n-pub const SA_SIGINFO: ::c_int = 0x00000008;\n-pub const SIGBUS: ::c_int = 10;\n-pub const SIGSYS: ::c_int = 12;\n-pub const SIGSTKSZ: ::size_t = 0x2000;\n-pub const SIG_SETMASK: ::c_int = 3;\n-pub const SOCK_DGRAM: ::c_int = 1;\n-pub const SOCK_STREAM: ::c_int = 2;\n-pub const SOL_SOCKET: ::c_int = 0xffff;\n-pub const SO_BROADCAST: ::c_int = 32;\n-pub const SO_ERROR: ::c_int = 4103;\n-pub const SO_RCVTIMEO: ::c_int = 4102;\n-pub const SO_REUSEADDR: ::c_int = 4;\n-pub const SO_SNDTIMEO: ::c_int = 4101;\n-pub const SO_REUSEPORT: ::c_int = 0x200;\n-pub const SO_SNDBUF: ::c_int = 4097;\n-pub const SO_RCVBUF: ::c_int = 4098;\n-pub const SO_KEEPALIVE: ::c_int = 8;\n-\n-#[link(name = \"util\")]\n-extern {\n-    pub fn ioctl(fd: ::c_int, request: ::c_ulong, ...) -> ::c_int;\n-}"}, {"sha": "ea820ea5c6c2cc9205499016151ede67dea5659c", "filename": "src/vendor/libc/src/unix/notbsd/linux/mod.rs", "status": "removed", "additions": 0, "deletions": 747, "changes": 747, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,747 +0,0 @@\n-//! Linux-specific definitions for linux-like values\n-\n-use dox::mem;\n-\n-pub type useconds_t = u32;\n-pub type dev_t = u64;\n-pub type socklen_t = u32;\n-pub type pthread_t = c_ulong;\n-pub type mode_t = u32;\n-pub type ino64_t = u64;\n-pub type off64_t = i64;\n-pub type blkcnt64_t = i64;\n-pub type rlim64_t = u64;\n-pub type shmatt_t = ::c_ulong;\n-pub type mqd_t = ::c_int;\n-pub type msgqnum_t = ::c_ulong;\n-pub type msglen_t = ::c_ulong;\n-pub type nfds_t = ::c_ulong;\n-pub type nl_item = ::c_int;\n-\n-pub enum fpos64_t {} // TODO: fill this out with a struct\n-\n-s! {\n-    pub struct dirent {\n-        pub d_ino: ::ino_t,\n-        pub d_off: ::off_t,\n-        pub d_reclen: ::c_ushort,\n-        pub d_type: ::c_uchar,\n-        pub d_name: [::c_char; 256],\n-    }\n-\n-    pub struct dirent64 {\n-        pub d_ino: ::ino64_t,\n-        pub d_off: ::off64_t,\n-        pub d_reclen: ::c_ushort,\n-        pub d_type: ::c_uchar,\n-        pub d_name: [::c_char; 256],\n-    }\n-\n-    pub struct rlimit64 {\n-        pub rlim_cur: rlim64_t,\n-        pub rlim_max: rlim64_t,\n-    }\n-\n-    pub struct glob_t {\n-        pub gl_pathc: ::size_t,\n-        pub gl_pathv: *mut *mut c_char,\n-        pub gl_offs: ::size_t,\n-        pub gl_flags: ::c_int,\n-\n-        __unused1: *mut ::c_void,\n-        __unused2: *mut ::c_void,\n-        __unused3: *mut ::c_void,\n-        __unused4: *mut ::c_void,\n-        __unused5: *mut ::c_void,\n-    }\n-\n-    pub struct ifaddrs {\n-        pub ifa_next: *mut ifaddrs,\n-        pub ifa_name: *mut c_char,\n-        pub ifa_flags: ::c_uint,\n-        pub ifa_addr: *mut ::sockaddr,\n-        pub ifa_netmask: *mut ::sockaddr,\n-        pub ifa_ifu: *mut ::sockaddr, // FIXME This should be a union\n-        pub ifa_data: *mut ::c_void\n-    }\n-\n-    pub struct pthread_mutex_t {\n-        #[cfg(any(target_arch = \"mips\", target_arch = \"mipsel\",\n-                  target_arch = \"arm\", target_arch = \"powerpc\"))]\n-        __align: [::c_long; 0],\n-        #[cfg(not(any(target_arch = \"mips\", target_arch = \"mipsel\",\n-                      target_arch = \"arm\", target_arch = \"powerpc\")))]\n-        __align: [::c_longlong; 0],\n-        size: [u8; __SIZEOF_PTHREAD_MUTEX_T],\n-    }\n-\n-    pub struct pthread_rwlock_t {\n-        #[cfg(any(target_arch = \"mips\", target_arch = \"mipsel\",\n-                  target_arch = \"arm\", target_arch = \"powerpc\"))]\n-        __align: [::c_long; 0],\n-        #[cfg(not(any(target_arch = \"mips\", target_arch = \"mipsel\",\n-                      target_arch = \"arm\", target_arch = \"powerpc\")))]\n-        __align: [::c_longlong; 0],\n-        size: [u8; __SIZEOF_PTHREAD_RWLOCK_T],\n-    }\n-\n-    pub struct pthread_mutexattr_t {\n-        #[cfg(any(target_arch = \"x86_64\", target_arch = \"powerpc64\",\n-                  target_arch = \"mips64\", target_arch = \"s390x\"))]\n-        __align: [::c_int; 0],\n-        #[cfg(not(any(target_arch = \"x86_64\", target_arch = \"powerpc64\",\n-                      target_arch = \"mips64\", target_arch = \"s390x\")))]\n-        __align: [::c_long; 0],\n-        size: [u8; __SIZEOF_PTHREAD_MUTEXATTR_T],\n-    }\n-\n-    pub struct pthread_cond_t {\n-        #[cfg(any(target_env = \"musl\"))]\n-        __align: [*const ::c_void; 0],\n-        #[cfg(not(any(target_env = \"musl\")))]\n-        __align: [::c_longlong; 0],\n-        size: [u8; __SIZEOF_PTHREAD_COND_T],\n-    }\n-\n-    pub struct pthread_condattr_t {\n-        __align: [::c_int; 0],\n-        size: [u8; __SIZEOF_PTHREAD_CONDATTR_T],\n-    }\n-\n-    pub struct passwd {\n-        pub pw_name: *mut ::c_char,\n-        pub pw_passwd: *mut ::c_char,\n-        pub pw_uid: ::uid_t,\n-        pub pw_gid: ::gid_t,\n-        pub pw_gecos: *mut ::c_char,\n-        pub pw_dir: *mut ::c_char,\n-        pub pw_shell: *mut ::c_char,\n-    }\n-\n-    pub struct spwd {\n-        pub sp_namp: *mut ::c_char,\n-        pub sp_pwdp: *mut ::c_char,\n-        pub sp_lstchg: ::c_long,\n-        pub sp_min: ::c_long,\n-        pub sp_max: ::c_long,\n-        pub sp_warn: ::c_long,\n-        pub sp_inact: ::c_long,\n-        pub sp_expire: ::c_long,\n-        pub sp_flag: ::c_ulong,\n-    }\n-\n-    pub struct statvfs {\n-        pub f_bsize: ::c_ulong,\n-        pub f_frsize: ::c_ulong,\n-        pub f_blocks: ::fsblkcnt_t,\n-        pub f_bfree: ::fsblkcnt_t,\n-        pub f_bavail: ::fsblkcnt_t,\n-        pub f_files: ::fsfilcnt_t,\n-        pub f_ffree: ::fsfilcnt_t,\n-        pub f_favail: ::fsfilcnt_t,\n-        #[cfg(target_endian = \"little\")]\n-        pub f_fsid: ::c_ulong,\n-        #[cfg(target_pointer_width = \"32\")]\n-        __f_unused: ::c_int,\n-        #[cfg(target_endian = \"big\")]\n-        pub f_fsid: ::c_ulong,\n-        pub f_flag: ::c_ulong,\n-        pub f_namemax: ::c_ulong,\n-        __f_spare: [::c_int; 6],\n-    }\n-\n-    pub struct dqblk {\n-        pub dqb_bhardlimit: ::uint64_t,\n-        pub dqb_bsoftlimit: ::uint64_t,\n-        pub dqb_curspace: ::uint64_t,\n-        pub dqb_ihardlimit: ::uint64_t,\n-        pub dqb_isoftlimit: ::uint64_t,\n-        pub dqb_curinodes: ::uint64_t,\n-        pub dqb_btime: ::uint64_t,\n-        pub dqb_itime: ::uint64_t,\n-        pub dqb_valid: ::uint32_t,\n-    }\n-\n-    pub struct signalfd_siginfo {\n-        pub ssi_signo: ::uint32_t,\n-        pub ssi_errno: ::int32_t,\n-        pub ssi_code: ::int32_t,\n-        pub ssi_pid: ::uint32_t,\n-        pub ssi_uid: ::uint32_t,\n-        pub ssi_fd: ::int32_t,\n-        pub ssi_tid: ::uint32_t,\n-        pub ssi_band: ::uint32_t,\n-        pub ssi_overrun: ::uint32_t,\n-        pub ssi_trapno: ::uint32_t,\n-        pub ssi_status: ::int32_t,\n-        pub ssi_int: ::int32_t,\n-        pub ssi_ptr: ::uint64_t,\n-        pub ssi_utime: ::uint64_t,\n-        pub ssi_stime: ::uint64_t,\n-        pub ssi_addr: ::uint64_t,\n-        _pad: [::uint8_t; 48],\n-    }\n-\n-    pub struct fsid_t {\n-        __val: [::c_int; 2],\n-    }\n-\n-    pub struct mq_attr {\n-        pub mq_flags: ::c_long,\n-        pub mq_maxmsg: ::c_long,\n-        pub mq_msgsize: ::c_long,\n-        pub mq_curmsgs: ::c_long,\n-        pad: [::c_long; 4]\n-    }\n-\n-    pub struct cpu_set_t {\n-        #[cfg(target_pointer_width = \"32\")]\n-        bits: [u32; 32],\n-        #[cfg(target_pointer_width = \"64\")]\n-        bits: [u64; 16],\n-    }\n-\n-    pub struct if_nameindex {\n-        pub if_index: ::c_uint,\n-        pub if_name: *mut ::c_char,\n-    }\n-\n-    // System V IPC\n-    pub struct msginfo {\n-        pub msgpool: ::c_int,\n-        pub msgmap: ::c_int,\n-        pub msgmax: ::c_int,\n-        pub msgmnb: ::c_int,\n-        pub msgmni: ::c_int,\n-        pub msgssz: ::c_int,\n-        pub msgtql: ::c_int,\n-        pub msgseg: ::c_ushort,\n-    }\n-}\n-\n-pub const ABDAY_1: ::nl_item = 0x20000;\n-pub const ABDAY_2: ::nl_item = 0x20001;\n-pub const ABDAY_3: ::nl_item = 0x20002;\n-pub const ABDAY_4: ::nl_item = 0x20003;\n-pub const ABDAY_5: ::nl_item = 0x20004;\n-pub const ABDAY_6: ::nl_item = 0x20005;\n-pub const ABDAY_7: ::nl_item = 0x20006;\n-\n-pub const DAY_1: ::nl_item = 0x20007;\n-pub const DAY_2: ::nl_item = 0x20008;\n-pub const DAY_3: ::nl_item = 0x20009;\n-pub const DAY_4: ::nl_item = 0x2000A;\n-pub const DAY_5: ::nl_item = 0x2000B;\n-pub const DAY_6: ::nl_item = 0x2000C;\n-pub const DAY_7: ::nl_item = 0x2000D;\n-\n-pub const ABMON_1: ::nl_item = 0x2000E;\n-pub const ABMON_2: ::nl_item = 0x2000F;\n-pub const ABMON_3: ::nl_item = 0x20010;\n-pub const ABMON_4: ::nl_item = 0x20011;\n-pub const ABMON_5: ::nl_item = 0x20012;\n-pub const ABMON_6: ::nl_item = 0x20013;\n-pub const ABMON_7: ::nl_item = 0x20014;\n-pub const ABMON_8: ::nl_item = 0x20015;\n-pub const ABMON_9: ::nl_item = 0x20016;\n-pub const ABMON_10: ::nl_item = 0x20017;\n-pub const ABMON_11: ::nl_item = 0x20018;\n-pub const ABMON_12: ::nl_item = 0x20019;\n-\n-pub const CLONE_NEWCGROUP: ::c_int = 0x02000000;\n-\n-pub const MON_1: ::nl_item = 0x2001A;\n-pub const MON_2: ::nl_item = 0x2001B;\n-pub const MON_3: ::nl_item = 0x2001C;\n-pub const MON_4: ::nl_item = 0x2001D;\n-pub const MON_5: ::nl_item = 0x2001E;\n-pub const MON_6: ::nl_item = 0x2001F;\n-pub const MON_7: ::nl_item = 0x20020;\n-pub const MON_8: ::nl_item = 0x20021;\n-pub const MON_9: ::nl_item = 0x20022;\n-pub const MON_10: ::nl_item = 0x20023;\n-pub const MON_11: ::nl_item = 0x20024;\n-pub const MON_12: ::nl_item = 0x20025;\n-\n-pub const AM_STR: ::nl_item = 0x20026;\n-pub const PM_STR: ::nl_item = 0x20027;\n-\n-pub const D_T_FMT: ::nl_item = 0x20028;\n-pub const D_FMT: ::nl_item = 0x20029;\n-pub const T_FMT: ::nl_item = 0x2002A;\n-pub const T_FMT_AMPM: ::nl_item = 0x2002B;\n-\n-pub const ERA: ::nl_item = 0x2002C;\n-pub const ERA_D_FMT: ::nl_item = 0x2002E;\n-pub const ALT_DIGITS: ::nl_item = 0x2002F;\n-pub const ERA_D_T_FMT: ::nl_item = 0x20030;\n-pub const ERA_T_FMT: ::nl_item = 0x20031;\n-\n-pub const CODESET: ::nl_item = 14;\n-\n-pub const CRNCYSTR: ::nl_item = 0x4000F;\n-\n-pub const RUSAGE_THREAD: ::c_int = 1;\n-pub const RUSAGE_CHILDREN: ::c_int = -1;\n-\n-pub const RADIXCHAR: ::nl_item = 0x10000;\n-pub const THOUSEP: ::nl_item = 0x10001;\n-\n-pub const YESEXPR: ::nl_item = 0x50000;\n-pub const NOEXPR: ::nl_item = 0x50001;\n-pub const YESSTR: ::nl_item = 0x50002;\n-pub const NOSTR: ::nl_item = 0x50003;\n-\n-pub const FILENAME_MAX: ::c_uint = 4096;\n-pub const L_tmpnam: ::c_uint = 20;\n-pub const _PC_LINK_MAX: ::c_int = 0;\n-pub const _PC_MAX_CANON: ::c_int = 1;\n-pub const _PC_MAX_INPUT: ::c_int = 2;\n-pub const _PC_NAME_MAX: ::c_int = 3;\n-pub const _PC_PATH_MAX: ::c_int = 4;\n-pub const _PC_PIPE_BUF: ::c_int = 5;\n-pub const _PC_CHOWN_RESTRICTED: ::c_int = 6;\n-pub const _PC_NO_TRUNC: ::c_int = 7;\n-pub const _PC_VDISABLE: ::c_int = 8;\n-\n-pub const _SC_ARG_MAX: ::c_int = 0;\n-pub const _SC_CHILD_MAX: ::c_int = 1;\n-pub const _SC_CLK_TCK: ::c_int = 2;\n-pub const _SC_NGROUPS_MAX: ::c_int = 3;\n-pub const _SC_OPEN_MAX: ::c_int = 4;\n-pub const _SC_STREAM_MAX: ::c_int = 5;\n-pub const _SC_TZNAME_MAX: ::c_int = 6;\n-pub const _SC_JOB_CONTROL: ::c_int = 7;\n-pub const _SC_SAVED_IDS: ::c_int = 8;\n-pub const _SC_REALTIME_SIGNALS: ::c_int = 9;\n-pub const _SC_PRIORITY_SCHEDULING: ::c_int = 10;\n-pub const _SC_TIMERS: ::c_int = 11;\n-pub const _SC_ASYNCHRONOUS_IO: ::c_int = 12;\n-pub const _SC_PRIORITIZED_IO: ::c_int = 13;\n-pub const _SC_SYNCHRONIZED_IO: ::c_int = 14;\n-pub const _SC_FSYNC: ::c_int = 15;\n-pub const _SC_MAPPED_FILES: ::c_int = 16;\n-pub const _SC_MEMLOCK: ::c_int = 17;\n-pub const _SC_MEMLOCK_RANGE: ::c_int = 18;\n-pub const _SC_MEMORY_PROTECTION: ::c_int = 19;\n-pub const _SC_MESSAGE_PASSING: ::c_int = 20;\n-pub const _SC_SEMAPHORES: ::c_int = 21;\n-pub const _SC_SHARED_MEMORY_OBJECTS: ::c_int = 22;\n-pub const _SC_AIO_LISTIO_MAX: ::c_int = 23;\n-pub const _SC_AIO_MAX: ::c_int = 24;\n-pub const _SC_AIO_PRIO_DELTA_MAX: ::c_int = 25;\n-pub const _SC_DELAYTIMER_MAX: ::c_int = 26;\n-pub const _SC_MQ_OPEN_MAX: ::c_int = 27;\n-pub const _SC_MQ_PRIO_MAX: ::c_int = 28;\n-pub const _SC_VERSION: ::c_int = 29;\n-pub const _SC_PAGESIZE: ::c_int = 30;\n-pub const _SC_PAGE_SIZE: ::c_int = _SC_PAGESIZE;\n-pub const _SC_RTSIG_MAX: ::c_int = 31;\n-pub const _SC_SEM_NSEMS_MAX: ::c_int = 32;\n-pub const _SC_SEM_VALUE_MAX: ::c_int = 33;\n-pub const _SC_SIGQUEUE_MAX: ::c_int = 34;\n-pub const _SC_TIMER_MAX: ::c_int = 35;\n-pub const _SC_BC_BASE_MAX: ::c_int = 36;\n-pub const _SC_BC_DIM_MAX: ::c_int = 37;\n-pub const _SC_BC_SCALE_MAX: ::c_int = 38;\n-pub const _SC_BC_STRING_MAX: ::c_int = 39;\n-pub const _SC_COLL_WEIGHTS_MAX: ::c_int = 40;\n-pub const _SC_EXPR_NEST_MAX: ::c_int = 42;\n-pub const _SC_LINE_MAX: ::c_int = 43;\n-pub const _SC_RE_DUP_MAX: ::c_int = 44;\n-pub const _SC_2_VERSION: ::c_int = 46;\n-pub const _SC_2_C_BIND: ::c_int = 47;\n-pub const _SC_2_C_DEV: ::c_int = 48;\n-pub const _SC_2_FORT_DEV: ::c_int = 49;\n-pub const _SC_2_FORT_RUN: ::c_int = 50;\n-pub const _SC_2_SW_DEV: ::c_int = 51;\n-pub const _SC_2_LOCALEDEF: ::c_int = 52;\n-pub const _SC_IOV_MAX: ::c_int = 60;\n-pub const _SC_THREADS: ::c_int = 67;\n-pub const _SC_THREAD_SAFE_FUNCTIONS: ::c_int = 68;\n-pub const _SC_GETGR_R_SIZE_MAX: ::c_int = 69;\n-pub const _SC_GETPW_R_SIZE_MAX: ::c_int = 70;\n-pub const _SC_LOGIN_NAME_MAX: ::c_int = 71;\n-pub const _SC_TTY_NAME_MAX: ::c_int = 72;\n-pub const _SC_THREAD_DESTRUCTOR_ITERATIONS: ::c_int = 73;\n-pub const _SC_THREAD_KEYS_MAX: ::c_int = 74;\n-pub const _SC_THREAD_STACK_MIN: ::c_int = 75;\n-pub const _SC_THREAD_THREADS_MAX: ::c_int = 76;\n-pub const _SC_THREAD_ATTR_STACKADDR: ::c_int = 77;\n-pub const _SC_THREAD_ATTR_STACKSIZE: ::c_int = 78;\n-pub const _SC_THREAD_PRIORITY_SCHEDULING: ::c_int = 79;\n-pub const _SC_THREAD_PRIO_INHERIT: ::c_int = 80;\n-pub const _SC_THREAD_PRIO_PROTECT: ::c_int = 81;\n-pub const _SC_NPROCESSORS_ONLN: ::c_int = 84;\n-pub const _SC_ATEXIT_MAX: ::c_int = 87;\n-pub const _SC_XOPEN_VERSION: ::c_int = 89;\n-pub const _SC_XOPEN_XCU_VERSION: ::c_int = 90;\n-pub const _SC_XOPEN_UNIX: ::c_int = 91;\n-pub const _SC_XOPEN_CRYPT: ::c_int = 92;\n-pub const _SC_XOPEN_ENH_I18N: ::c_int = 93;\n-pub const _SC_XOPEN_SHM: ::c_int = 94;\n-pub const _SC_2_CHAR_TERM: ::c_int = 95;\n-pub const _SC_2_UPE: ::c_int = 97;\n-pub const _SC_XBS5_ILP32_OFF32: ::c_int = 125;\n-pub const _SC_XBS5_ILP32_OFFBIG: ::c_int = 126;\n-pub const _SC_XBS5_LPBIG_OFFBIG: ::c_int = 128;\n-pub const _SC_XOPEN_LEGACY: ::c_int = 129;\n-pub const _SC_XOPEN_REALTIME: ::c_int = 130;\n-pub const _SC_XOPEN_REALTIME_THREADS: ::c_int = 131;\n-pub const _SC_HOST_NAME_MAX: ::c_int = 180;\n-\n-pub const RLIM_SAVED_MAX: ::rlim_t = RLIM_INFINITY;\n-pub const RLIM_SAVED_CUR: ::rlim_t = RLIM_INFINITY;\n-\n-pub const GLOB_ERR: ::c_int = 1 << 0;\n-pub const GLOB_MARK: ::c_int = 1 << 1;\n-pub const GLOB_NOSORT: ::c_int = 1 << 2;\n-pub const GLOB_DOOFFS: ::c_int = 1 << 3;\n-pub const GLOB_NOCHECK: ::c_int = 1 << 4;\n-pub const GLOB_APPEND: ::c_int = 1 << 5;\n-pub const GLOB_NOESCAPE: ::c_int = 1 << 6;\n-\n-pub const GLOB_NOSPACE: ::c_int = 1;\n-pub const GLOB_ABORTED: ::c_int = 2;\n-pub const GLOB_NOMATCH: ::c_int = 3;\n-\n-pub const POSIX_MADV_NORMAL: ::c_int = 0;\n-pub const POSIX_MADV_RANDOM: ::c_int = 1;\n-pub const POSIX_MADV_SEQUENTIAL: ::c_int = 2;\n-pub const POSIX_MADV_WILLNEED: ::c_int = 3;\n-\n-pub const S_IEXEC: mode_t = 64;\n-pub const S_IWRITE: mode_t = 128;\n-pub const S_IREAD: mode_t = 256;\n-\n-pub const F_LOCK: ::c_int = 1;\n-pub const F_TEST: ::c_int = 3;\n-pub const F_TLOCK: ::c_int = 2;\n-pub const F_ULOCK: ::c_int = 0;\n-\n-pub const ST_RDONLY: ::c_ulong = 1;\n-pub const ST_NOSUID: ::c_ulong = 2;\n-pub const ST_NODEV: ::c_ulong = 4;\n-pub const ST_NOEXEC: ::c_ulong = 8;\n-pub const ST_SYNCHRONOUS: ::c_ulong = 16;\n-pub const ST_MANDLOCK: ::c_ulong = 64;\n-pub const ST_WRITE: ::c_ulong = 128;\n-pub const ST_APPEND: ::c_ulong = 256;\n-pub const ST_IMMUTABLE: ::c_ulong = 512;\n-pub const ST_NOATIME: ::c_ulong = 1024;\n-pub const ST_NODIRATIME: ::c_ulong = 2048;\n-\n-pub const RTLD_NEXT: *mut ::c_void = -1i64 as *mut ::c_void;\n-pub const RTLD_DEFAULT: *mut ::c_void = 0i64 as *mut ::c_void;\n-pub const RTLD_NODELETE: ::c_int = 0x1000;\n-pub const RTLD_NOW: ::c_int = 0x2;\n-\n-pub const TCP_MD5SIG: ::c_int = 14;\n-\n-pub const PTHREAD_MUTEX_INITIALIZER: pthread_mutex_t = pthread_mutex_t {\n-    __align: [],\n-    size: [0; __SIZEOF_PTHREAD_MUTEX_T],\n-};\n-pub const PTHREAD_COND_INITIALIZER: pthread_cond_t = pthread_cond_t {\n-    __align: [],\n-    size: [0; __SIZEOF_PTHREAD_COND_T],\n-};\n-pub const PTHREAD_RWLOCK_INITIALIZER: pthread_rwlock_t = pthread_rwlock_t {\n-    __align: [],\n-    size: [0; __SIZEOF_PTHREAD_RWLOCK_T],\n-};\n-pub const PTHREAD_MUTEX_NORMAL: ::c_int = 0;\n-pub const PTHREAD_MUTEX_RECURSIVE: ::c_int = 1;\n-pub const PTHREAD_MUTEX_ERRORCHECK: ::c_int = 2;\n-pub const PTHREAD_MUTEX_DEFAULT: ::c_int = PTHREAD_MUTEX_NORMAL;\n-pub const __SIZEOF_PTHREAD_COND_T: usize = 48;\n-\n-pub const SCHED_OTHER: ::c_int = 0;\n-pub const SCHED_FIFO: ::c_int = 1;\n-pub const SCHED_RR: ::c_int = 2;\n-pub const SCHED_BATCH: ::c_int = 3;\n-pub const SCHED_IDLE: ::c_int = 5;\n-\n-// System V IPC\n-pub const IPC_PRIVATE: ::key_t = 0;\n-\n-pub const IPC_CREAT: ::c_int = 0o1000;\n-pub const IPC_EXCL: ::c_int = 0o2000;\n-pub const IPC_NOWAIT: ::c_int = 0o4000;\n-\n-pub const IPC_RMID: ::c_int = 0;\n-pub const IPC_SET: ::c_int = 1;\n-pub const IPC_STAT: ::c_int = 2;\n-pub const IPC_INFO: ::c_int = 3;\n-pub const MSG_STAT: ::c_int = 11;\n-pub const MSG_INFO: ::c_int = 12;\n-\n-pub const MSG_NOERROR: ::c_int = 0o10000;\n-pub const MSG_EXCEPT: ::c_int = 0o20000;\n-pub const MSG_COPY: ::c_int = 0o40000;\n-\n-pub const SHM_R: ::c_int = 0o400;\n-pub const SHM_W: ::c_int = 0o200;\n-\n-pub const SHM_RDONLY: ::c_int = 0o10000;\n-pub const SHM_RND: ::c_int = 0o20000;\n-pub const SHM_REMAP: ::c_int = 0o40000;\n-pub const SHM_EXEC: ::c_int = 0o100000;\n-\n-pub const SHM_LOCK: ::c_int = 11;\n-pub const SHM_UNLOCK: ::c_int = 12;\n-\n-pub const SHM_HUGETLB: ::c_int = 0o4000;\n-pub const SHM_NORESERVE: ::c_int = 0o10000;\n-\n-pub const EPOLLRDHUP: ::c_int = 0x2000;\n-pub const EPOLLONESHOT: ::c_int = 0x40000000;\n-\n-pub const QFMT_VFS_OLD: ::c_int = 1;\n-pub const QFMT_VFS_V0: ::c_int = 2;\n-\n-pub const SFD_CLOEXEC: ::c_int = 0x080000;\n-\n-pub const EFD_SEMAPHORE: ::c_int = 0x1;\n-\n-pub const NCCS: usize = 32;\n-\n-pub const LOG_NFACILITIES: ::c_int = 24;\n-\n-pub const SEM_FAILED: *mut ::sem_t = 0 as *mut sem_t;\n-\n-pub const RB_AUTOBOOT: ::c_int = 0x01234567u32 as i32;\n-pub const RB_HALT_SYSTEM: ::c_int = 0xcdef0123u32 as i32;\n-pub const RB_ENABLE_CAD: ::c_int = 0x89abcdefu32 as i32;\n-pub const RB_DISABLE_CAD: ::c_int = 0x00000000u32 as i32;\n-pub const RB_POWER_OFF: ::c_int = 0x4321fedcu32 as i32;\n-pub const RB_SW_SUSPEND: ::c_int = 0xd000fce2u32 as i32;\n-pub const RB_KEXEC: ::c_int = 0x45584543u32 as i32;\n-\n-pub const SYNC_FILE_RANGE_WAIT_BEFORE: ::c_uint = 1;\n-pub const SYNC_FILE_RANGE_WRITE: ::c_uint = 2;\n-pub const SYNC_FILE_RANGE_WAIT_AFTER: ::c_uint = 4;\n-\n-pub const EAI_SYSTEM: ::c_int = -11;\n-\n-f! {\n-    pub fn CPU_ZERO(cpuset: &mut cpu_set_t) -> () {\n-        for slot in cpuset.bits.iter_mut() {\n-            *slot = 0;\n-        }\n-    }\n-\n-    pub fn CPU_SET(cpu: usize, cpuset: &mut cpu_set_t) -> () {\n-        let size_in_bits = 8 * mem::size_of_val(&cpuset.bits[0]); // 32, 64 etc\n-        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);\n-        cpuset.bits[idx] |= 1 << offset;\n-        ()\n-    }\n-\n-    pub fn CPU_CLR(cpu: usize, cpuset: &mut cpu_set_t) -> () {\n-        let size_in_bits = 8 * mem::size_of_val(&cpuset.bits[0]); // 32, 64 etc\n-        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);\n-        cpuset.bits[idx] &= !(1 << offset);\n-        ()\n-    }\n-\n-    pub fn CPU_ISSET(cpu: usize, cpuset: &cpu_set_t) -> bool {\n-        let size_in_bits = 8 * mem::size_of_val(&cpuset.bits[0]);\n-        let (idx, offset) = (cpu / size_in_bits, cpu % size_in_bits);\n-        0 != (cpuset.bits[idx] & (1 << offset))\n-    }\n-\n-    pub fn CPU_EQUAL(set1: &cpu_set_t, set2: &cpu_set_t) -> bool {\n-        set1.bits == set2.bits\n-    }\n-}\n-\n-extern {\n-    pub fn lutimes(file: *const ::c_char, times: *const ::timeval) -> ::c_int;\n-\n-    pub fn setpwent();\n-    pub fn getpwent() -> *mut passwd;\n-    pub fn setspent();\n-    pub fn endspent();\n-    pub fn getspent() -> *mut spwd;\n-    pub fn getspnam(__name: *const ::c_char) -> *mut spwd;\n-\n-    pub fn shm_open(name: *const c_char, oflag: ::c_int,\n-                    mode: mode_t) -> ::c_int;\n-\n-    // System V IPC\n-    pub fn shmget(key: ::key_t, size: ::size_t, shmflg: ::c_int) -> ::c_int;\n-    pub fn shmat(shmid: ::c_int,\n-                 shmaddr: *const ::c_void,\n-                 shmflg: ::c_int) -> *mut ::c_void;\n-    pub fn shmdt(shmaddr: *const ::c_void) -> ::c_int;\n-    pub fn shmctl(shmid: ::c_int,\n-                  cmd: ::c_int,\n-                  buf: *mut ::shmid_ds) -> ::c_int;\n-    pub fn ftok(pathname: *const ::c_char, proj_id: ::c_int) -> ::key_t;\n-    pub fn msgctl(msqid: ::c_int, cmd: ::c_int, buf: *mut msqid_ds) -> ::c_int;\n-    pub fn msgget(key: ::key_t, msgflg: ::c_int) -> ::c_int;\n-    pub fn msgrcv(msqid: ::c_int, msgp: *mut ::c_void, msgsz: ::size_t,\n-                  msgtyp: ::c_long, msgflg: ::c_int) -> ::ssize_t;\n-    pub fn msgsnd(msqid: ::c_int, msgp: *const ::c_void, msgsz: ::size_t,\n-                  msgflg: ::c_int) -> ::c_int;\n-\n-    pub fn mprotect(addr: *mut ::c_void, len: ::size_t, prot: ::c_int)\n-                    -> ::c_int;\n-    pub fn __errno_location() -> *mut ::c_int;\n-\n-    pub fn fopen64(filename: *const c_char,\n-                   mode: *const c_char) -> *mut ::FILE;\n-    pub fn freopen64(filename: *const c_char, mode: *const c_char,\n-                     file: *mut ::FILE) -> *mut ::FILE;\n-    pub fn tmpfile64() -> *mut ::FILE;\n-    pub fn fgetpos64(stream: *mut ::FILE, ptr: *mut fpos64_t) -> ::c_int;\n-    pub fn fsetpos64(stream: *mut ::FILE, ptr: *const fpos64_t) -> ::c_int;\n-    pub fn fseeko64(stream: *mut ::FILE,\n-                    offset: ::off64_t,\n-                    whence: ::c_int) -> ::c_int;\n-    pub fn ftello64(stream: *mut ::FILE) -> ::off64_t;\n-    pub fn fallocate(fd: ::c_int, mode: ::c_int,\n-                     offset: ::off_t, len: ::off_t) -> ::c_int;\n-    pub fn posix_fallocate(fd: ::c_int, offset: ::off_t,\n-                           len: ::off_t) -> ::c_int;\n-    pub fn readahead(fd: ::c_int, offset: ::off64_t,\n-                     count: ::size_t) -> ::ssize_t;\n-    pub fn getxattr(path: *const c_char, name: *const c_char,\n-                    value: *mut ::c_void, size: ::size_t) -> ::ssize_t;\n-    pub fn lgetxattr(path: *const c_char, name: *const c_char,\n-                     value: *mut ::c_void, size: ::size_t) -> ::ssize_t;\n-    pub fn fgetxattr(filedes: ::c_int, name: *const c_char,\n-                     value: *mut ::c_void, size: ::size_t) -> ::ssize_t;\n-    pub fn setxattr(path: *const c_char, name: *const c_char,\n-                    value: *const ::c_void, size: ::size_t,\n-                    flags: ::c_int) -> ::c_int;\n-    pub fn lsetxattr(path: *const c_char, name: *const c_char,\n-                     value: *const ::c_void, size: ::size_t,\n-                     flags: ::c_int) -> ::c_int;\n-    pub fn fsetxattr(filedes: ::c_int, name: *const c_char,\n-                     value: *const ::c_void, size: ::size_t,\n-                     flags: ::c_int) -> ::c_int;\n-    pub fn listxattr(path: *const c_char, list: *mut c_char,\n-                     size: ::size_t) -> ::ssize_t;\n-    pub fn llistxattr(path: *const c_char, list: *mut c_char,\n-                      size: ::size_t) -> ::ssize_t;\n-    pub fn flistxattr(filedes: ::c_int, list: *mut c_char,\n-                      size: ::size_t) -> ::ssize_t;\n-    pub fn removexattr(path: *const c_char, name: *const c_char) -> ::c_int;\n-    pub fn lremovexattr(path: *const c_char, name: *const c_char) -> ::c_int;\n-    pub fn fremovexattr(filedes: ::c_int, name: *const c_char) -> ::c_int;\n-    pub fn signalfd(fd: ::c_int,\n-                    mask: *const ::sigset_t,\n-                    flags: ::c_int) -> ::c_int;\n-    pub fn pwritev(fd: ::c_int,\n-                   iov: *const ::iovec,\n-                   iovcnt: ::c_int,\n-                   offset: ::off_t) -> ::ssize_t;\n-    pub fn preadv(fd: ::c_int,\n-                  iov: *const ::iovec,\n-                  iovcnt: ::c_int,\n-                  offset: ::off_t) -> ::ssize_t;\n-    pub fn quotactl(cmd: ::c_int,\n-                    special: *const ::c_char,\n-                    id: ::c_int,\n-                    data: *mut ::c_char) -> ::c_int;\n-    pub fn mq_open(name: *const ::c_char, oflag: ::c_int, ...) -> ::mqd_t;\n-    pub fn mq_close(mqd: ::mqd_t) -> ::c_int;\n-    pub fn mq_unlink(name: *const ::c_char) -> ::c_int;\n-    pub fn mq_receive(mqd: ::mqd_t,\n-                      msg_ptr: *mut ::c_char,\n-                      msg_len: ::size_t,\n-                      msq_prio: *mut ::c_uint) -> ::ssize_t;\n-    pub fn mq_send(mqd: ::mqd_t,\n-                   msg_ptr: *const ::c_char,\n-                   msg_len: ::size_t,\n-                   msq_prio: ::c_uint) -> ::c_int;\n-    pub fn mq_getattr(mqd: ::mqd_t, attr: *mut ::mq_attr) -> ::c_int;\n-    pub fn mq_setattr(mqd: ::mqd_t,\n-                      newattr: *const ::mq_attr,\n-                      oldattr: *mut ::mq_attr) -> ::c_int;\n-    pub fn epoll_pwait(epfd: ::c_int,\n-                       events: *mut ::epoll_event,\n-                       maxevents: ::c_int,\n-                       timeout: ::c_int,\n-                       sigmask: *const ::sigset_t) -> ::c_int;\n-    pub fn dup3(oldfd: ::c_int, newfd: ::c_int, flags: ::c_int) -> ::c_int;\n-    pub fn sethostname(name: *const ::c_char, len: ::size_t) -> ::c_int;\n-    pub fn mkostemp(template: *mut ::c_char, flags: ::c_int) -> ::c_int;\n-    pub fn mkostemps(template: *mut ::c_char,\n-                     suffixlen: ::c_int,\n-                     flags: ::c_int) -> ::c_int;\n-    pub fn sigtimedwait(set: *const sigset_t,\n-                        info: *mut siginfo_t,\n-                        timeout: *const ::timespec) -> ::c_int;\n-    pub fn sigwaitinfo(set: *const sigset_t,\n-                       info: *mut siginfo_t) -> ::c_int;\n-    pub fn openpty(amaster: *mut ::c_int,\n-                   aslave: *mut ::c_int,\n-                   name: *mut ::c_char,\n-                   termp: *const termios,\n-                   winp: *const ::winsize) -> ::c_int;\n-    pub fn forkpty(amaster: *mut ::c_int,\n-                   name: *mut ::c_char,\n-                   termp: *const termios,\n-                   winp: *const ::winsize) -> ::pid_t;\n-    pub fn nl_langinfo_l(item: ::nl_item, locale: ::locale_t) -> *mut ::c_char;\n-    pub fn getnameinfo(sa: *const ::sockaddr,\n-                       salen: ::socklen_t,\n-                       host: *mut ::c_char,\n-                       hostlen: ::socklen_t,\n-                       serv: *mut ::c_char,\n-                       sevlen: ::socklen_t,\n-                       flags: ::c_int) -> ::c_int;\n-    pub fn prlimit(pid: ::pid_t, resource: ::c_int, new_limit: *const ::rlimit,\n-                   old_limit: *mut ::rlimit) -> ::c_int;\n-    pub fn prlimit64(pid: ::pid_t,\n-                     resource: ::c_int,\n-                     new_limit: *const ::rlimit64,\n-                     old_limit: *mut ::rlimit64) -> ::c_int;\n-    pub fn getloadavg(loadavg: *mut ::c_double, nelem: ::c_int) -> ::c_int;\n-    pub fn process_vm_readv(pid: ::pid_t,\n-                            local_iov: *const ::iovec,\n-                            liovcnt: ::c_ulong,\n-                            remote_iov: *const ::iovec,\n-                            riovcnt: ::c_ulong,\n-                            flags: ::c_ulong) -> isize;\n-    pub fn process_vm_writev(pid: ::pid_t,\n-                             local_iov: *const ::iovec,\n-                             liovcnt: ::c_ulong,\n-                             remote_iov: *const ::iovec,\n-                             riovcnt: ::c_ulong,\n-                             flags: ::c_ulong) -> isize;\n-    pub fn reboot(how_to: ::c_int) -> ::c_int;\n-\n-    // Not available now on Android\n-    pub fn mkfifoat(dirfd: ::c_int, pathname: *const ::c_char,\n-                    mode: ::mode_t) -> ::c_int;\n-    pub fn if_nameindex() -> *mut if_nameindex;\n-    pub fn if_freenameindex(ptr: *mut if_nameindex);\n-    pub fn sync_file_range(fd: ::c_int, offset: ::off64_t,\n-                           nbytes: ::off64_t, flags: ::c_uint) -> ::c_int;\n-    pub fn getifaddrs(ifap: *mut *mut ::ifaddrs) -> ::c_int;\n-    pub fn freeifaddrs(ifa: *mut ::ifaddrs);\n-}\n-\n-cfg_if! {\n-    if #[cfg(any(target_env = \"musl\",\n-                 target_os = \"emscripten\"))] {\n-        mod musl;\n-        pub use self::musl::*;\n-    } else if #[cfg(any(target_arch = \"mips\", target_arch = \"mipsel\"))] {\n-        mod mips;\n-        pub use self::mips::*;\n-    } else if #[cfg(any(target_arch = \"s390x\"))] {\n-        mod s390x;\n-        pub use self::s390x::*;\n-    } else if #[cfg(any(target_arch = \"mips64\"))] {\n-        mod mips64;\n-        pub use self::mips64::*;\n-    } else {\n-        mod other;\n-        pub use self::other::*;\n-    }\n-}"}, {"sha": "998580d3e21a4d12a717e08be1f0b6f495f9616c", "filename": "src/vendor/libc/src/unix/notbsd/linux/musl/b32/arm.rs", "status": "removed", "additions": 0, "deletions": 336, "changes": 336, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Farm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Farm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Farm.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,336 +0,0 @@\n-pub type c_char = u8;\n-pub type wchar_t = u32;\n-\n-s! {\n-    pub struct stat {\n-        pub st_dev: ::dev_t,\n-        __st_dev_padding: ::c_int,\n-        __st_ino_truncated: ::c_long,\n-        pub st_mode: ::mode_t,\n-        pub st_nlink: ::nlink_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::dev_t,\n-        __st_rdev_padding: ::c_int,\n-        pub st_size: ::off_t,\n-        pub st_blksize: ::blksize_t,\n-        pub st_blocks: ::blkcnt_t,\n-        pub st_atime: ::time_t,\n-        pub st_atime_nsec: ::c_long,\n-        pub st_mtime: ::time_t,\n-        pub st_mtime_nsec: ::c_long,\n-        pub st_ctime: ::time_t,\n-        pub st_ctime_nsec: ::c_long,\n-        pub st_ino: ::ino_t,\n-    }\n-\n-    pub struct stat64 {\n-        pub st_dev: ::dev_t,\n-        __st_dev_padding: ::c_int,\n-        __st_ino_truncated: ::c_long,\n-        pub st_mode: ::mode_t,\n-        pub st_nlink: ::nlink_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::dev_t,\n-        __st_rdev_padding: ::c_int,\n-        pub st_size: ::off_t,\n-        pub st_blksize: ::blksize_t,\n-        pub st_blocks: ::blkcnt_t,\n-        pub st_atime: ::time_t,\n-        pub st_atime_nsec: ::c_long,\n-        pub st_mtime: ::time_t,\n-        pub st_mtime_nsec: ::c_long,\n-        pub st_ctime: ::time_t,\n-        pub st_ctime_nsec: ::c_long,\n-        pub st_ino: ::ino_t,\n-    }\n-\n-    pub struct stack_t {\n-        pub ss_sp: *mut ::c_void,\n-        pub ss_flags: ::c_int,\n-        pub ss_size: ::size_t\n-    }\n-\n-    pub struct shmid_ds {\n-        pub shm_perm: ::ipc_perm,\n-        pub shm_segsz: ::size_t,\n-        pub shm_atime: ::time_t,\n-        __unused1: ::c_int,\n-        pub shm_dtime: ::time_t,\n-        __unused2: ::c_int,\n-        pub shm_ctime: ::time_t,\n-        __unused3: ::c_int,\n-        pub shm_cpid: ::pid_t,\n-        pub shm_lpid: ::pid_t,\n-        pub shm_nattch: ::c_ulong,\n-        __pad1: ::c_ulong,\n-        __pad2: ::c_ulong,\n-    }\n-\n-    pub struct msqid_ds {\n-        pub msg_perm: ::ipc_perm,\n-        pub msg_stime: ::time_t,\n-        __unused1: ::c_int,\n-        pub msg_rtime: ::time_t,\n-        __unused2: ::c_int,\n-        pub msg_ctime: ::time_t,\n-        __unused3: ::c_int,\n-        __msg_cbytes: ::c_ulong,\n-        pub msg_qnum: ::msgqnum_t,\n-        pub msg_qbytes: ::msglen_t,\n-        pub msg_lspid: ::pid_t,\n-        pub msg_lrpid: ::pid_t,\n-        __pad1: ::c_ulong,\n-        __pad2: ::c_ulong,\n-    }\n-\n-    pub struct statfs {\n-        pub f_type: ::c_ulong,\n-        pub f_bsize: ::c_ulong,\n-        pub f_blocks: ::fsblkcnt_t,\n-        pub f_bfree: ::fsblkcnt_t,\n-        pub f_bavail: ::fsblkcnt_t,\n-        pub f_files: ::fsfilcnt_t,\n-        pub f_ffree: ::fsfilcnt_t,\n-        pub f_fsid: ::fsid_t,\n-        pub f_namelen: ::c_ulong,\n-        pub f_frsize: ::c_ulong,\n-        pub f_flags: ::c_ulong,\n-        pub f_spare: [::c_ulong; 4],\n-    }\n-\n-    pub struct siginfo_t {\n-        pub si_signo: ::c_int,\n-        pub si_errno: ::c_int,\n-        pub si_code: ::c_int,\n-        pub _pad: [::c_int; 29],\n-        _align: [usize; 0],\n-    }\n-}\n-\n-pub const O_DIRECT: ::c_int = 0x4000;\n-pub const O_DIRECTORY: ::c_int = 0x10000;\n-pub const O_NOFOLLOW: ::c_int = 0x20000;\n-pub const O_ASYNC: ::c_int = 0x2000;\n-\n-pub const FIOCLEX: ::c_int = 0x5451;\n-pub const FIONBIO: ::c_int = 0x5421;\n-\n-pub const RLIMIT_RSS: ::c_int = 5;\n-pub const RLIMIT_NOFILE: ::c_int = 7;\n-pub const RLIMIT_AS: ::c_int = 9;\n-pub const RLIMIT_NPROC: ::c_int = 6;\n-pub const RLIMIT_MEMLOCK: ::c_int = 8;\n-\n-pub const O_APPEND: ::c_int = 1024;\n-pub const O_CREAT: ::c_int = 64;\n-pub const O_EXCL: ::c_int = 128;\n-pub const O_NOCTTY: ::c_int = 256;\n-pub const O_NONBLOCK: ::c_int = 2048;\n-pub const O_SYNC: ::c_int = 1052672;\n-pub const O_RSYNC: ::c_int = 1052672;\n-pub const O_DSYNC: ::c_int = 4096;\n-\n-pub const SOCK_NONBLOCK: ::c_int = 2048;\n-\n-pub const MAP_ANON: ::c_int = 0x0020;\n-pub const MAP_GROWSDOWN: ::c_int = 0x0100;\n-pub const MAP_DENYWRITE: ::c_int = 0x0800;\n-pub const MAP_EXECUTABLE: ::c_int = 0x01000;\n-pub const MAP_LOCKED: ::c_int = 0x02000;\n-pub const MAP_NORESERVE: ::c_int = 0x04000;\n-pub const MAP_POPULATE: ::c_int = 0x08000;\n-pub const MAP_NONBLOCK: ::c_int = 0x010000;\n-pub const MAP_STACK: ::c_int = 0x020000;\n-\n-pub const SOCK_STREAM: ::c_int = 1;\n-pub const SOCK_DGRAM: ::c_int = 2;\n-pub const SOCK_SEQPACKET: ::c_int = 5;\n-\n-pub const SOL_SOCKET: ::c_int = 1;\n-\n-pub const EDEADLK: ::c_int = 35;\n-pub const ENAMETOOLONG: ::c_int = 36;\n-pub const ENOLCK: ::c_int = 37;\n-pub const ENOSYS: ::c_int = 38;\n-pub const ENOTEMPTY: ::c_int = 39;\n-pub const ELOOP: ::c_int = 40;\n-pub const ENOMSG: ::c_int = 42;\n-pub const EIDRM: ::c_int = 43;\n-pub const ECHRNG: ::c_int = 44;\n-pub const EL2NSYNC: ::c_int = 45;\n-pub const EL3HLT: ::c_int = 46;\n-pub const EL3RST: ::c_int = 47;\n-pub const ELNRNG: ::c_int = 48;\n-pub const EUNATCH: ::c_int = 49;\n-pub const ENOCSI: ::c_int = 50;\n-pub const EL2HLT: ::c_int = 51;\n-pub const EBADE: ::c_int = 52;\n-pub const EBADR: ::c_int = 53;\n-pub const EXFULL: ::c_int = 54;\n-pub const ENOANO: ::c_int = 55;\n-pub const EBADRQC: ::c_int = 56;\n-pub const EBADSLT: ::c_int = 57;\n-pub const EDEADLOCK: ::c_int = EDEADLK;\n-pub const EMULTIHOP: ::c_int = 72;\n-pub const EBADMSG: ::c_int = 74;\n-pub const EOVERFLOW: ::c_int = 75;\n-pub const ENOTUNIQ: ::c_int = 76;\n-pub const EBADFD: ::c_int = 77;\n-pub const EREMCHG: ::c_int = 78;\n-pub const ELIBACC: ::c_int = 79;\n-pub const ELIBBAD: ::c_int = 80;\n-pub const ELIBSCN: ::c_int = 81;\n-pub const ELIBMAX: ::c_int = 82;\n-pub const ELIBEXEC: ::c_int = 83;\n-pub const EILSEQ: ::c_int = 84;\n-pub const ERESTART: ::c_int = 85;\n-pub const ESTRPIPE: ::c_int = 86;\n-pub const EUSERS: ::c_int = 87;\n-pub const ENOTSOCK: ::c_int = 88;\n-pub const EDESTADDRREQ: ::c_int = 89;\n-pub const EMSGSIZE: ::c_int = 90;\n-pub const EPROTOTYPE: ::c_int = 91;\n-pub const ENOPROTOOPT: ::c_int = 92;\n-pub const EPROTONOSUPPORT: ::c_int = 93;\n-pub const ESOCKTNOSUPPORT: ::c_int = 94;\n-pub const EOPNOTSUPP: ::c_int = 95;\n-pub const EPFNOSUPPORT: ::c_int = 96;\n-pub const EAFNOSUPPORT: ::c_int = 97;\n-pub const EADDRINUSE: ::c_int = 98;\n-pub const EADDRNOTAVAIL: ::c_int = 99;\n-pub const ENETDOWN: ::c_int = 100;\n-pub const ENETUNREACH: ::c_int = 101;\n-pub const ENETRESET: ::c_int = 102;\n-pub const ECONNABORTED: ::c_int = 103;\n-pub const ECONNRESET: ::c_int = 104;\n-pub const ENOBUFS: ::c_int = 105;\n-pub const EISCONN: ::c_int = 106;\n-pub const ENOTCONN: ::c_int = 107;\n-pub const ESHUTDOWN: ::c_int = 108;\n-pub const ETOOMANYREFS: ::c_int = 109;\n-pub const ETIMEDOUT: ::c_int = 110;\n-pub const ECONNREFUSED: ::c_int = 111;\n-pub const EHOSTDOWN: ::c_int = 112;\n-pub const EHOSTUNREACH: ::c_int = 113;\n-pub const EALREADY: ::c_int = 114;\n-pub const EINPROGRESS: ::c_int = 115;\n-pub const ESTALE: ::c_int = 116;\n-pub const EUCLEAN: ::c_int = 117;\n-pub const ENOTNAM: ::c_int = 118;\n-pub const ENAVAIL: ::c_int = 119;\n-pub const EISNAM: ::c_int = 120;\n-pub const EREMOTEIO: ::c_int = 121;\n-pub const EDQUOT: ::c_int = 122;\n-pub const ENOMEDIUM: ::c_int = 123;\n-pub const EMEDIUMTYPE: ::c_int = 124;\n-pub const ECANCELED: ::c_int = 125;\n-pub const ENOKEY: ::c_int = 126;\n-pub const EKEYEXPIRED: ::c_int = 127;\n-pub const EKEYREVOKED: ::c_int = 128;\n-pub const EKEYREJECTED: ::c_int = 129;\n-pub const EOWNERDEAD: ::c_int = 130;\n-pub const ENOTRECOVERABLE: ::c_int = 131;\n-pub const ERFKILL: ::c_int = 132;\n-pub const EHWPOISON: ::c_int = 133;\n-\n-pub const SO_REUSEADDR: ::c_int = 2;\n-pub const SO_TYPE: ::c_int = 3;\n-pub const SO_ERROR: ::c_int = 4;\n-pub const SO_DONTROUTE: ::c_int = 5;\n-pub const SO_BROADCAST: ::c_int = 6;\n-pub const SO_SNDBUF: ::c_int = 7;\n-pub const SO_RCVBUF: ::c_int = 8;\n-pub const SO_KEEPALIVE: ::c_int = 9;\n-pub const SO_OOBINLINE: ::c_int = 10;\n-pub const SO_LINGER: ::c_int = 13;\n-pub const SO_REUSEPORT: ::c_int = 15;\n-pub const SO_RCVLOWAT: ::c_int = 18;\n-pub const SO_SNDLOWAT: ::c_int = 19;\n-pub const SO_RCVTIMEO: ::c_int = 20;\n-pub const SO_SNDTIMEO: ::c_int = 21;\n-pub const SO_ACCEPTCONN: ::c_int = 30;\n-\n-pub const SA_ONSTACK: ::c_int = 0x08000000;\n-pub const SA_SIGINFO: ::c_int = 0x00000004;\n-pub const SA_NOCLDWAIT: ::c_int = 0x00000002;\n-\n-pub const SIGCHLD: ::c_int = 17;\n-pub const SIGBUS: ::c_int = 7;\n-pub const SIGTTIN: ::c_int = 21;\n-pub const SIGTTOU: ::c_int = 22;\n-pub const SIGXCPU: ::c_int = 24;\n-pub const SIGXFSZ: ::c_int = 25;\n-pub const SIGVTALRM: ::c_int = 26;\n-pub const SIGPROF: ::c_int = 27;\n-pub const SIGWINCH: ::c_int = 28;\n-pub const SIGUSR1: ::c_int = 10;\n-pub const SIGUSR2: ::c_int = 12;\n-pub const SIGCONT: ::c_int = 18;\n-pub const SIGSTOP: ::c_int = 19;\n-pub const SIGTSTP: ::c_int = 20;\n-pub const SIGURG: ::c_int = 23;\n-pub const SIGIO: ::c_int = 29;\n-pub const SIGSYS: ::c_int = 31;\n-pub const SIGSTKFLT: ::c_int = 16;\n-pub const SIGPOLL: ::c_int = 29;\n-pub const SIGPWR: ::c_int = 30;\n-pub const SIG_SETMASK: ::c_int = 2;\n-pub const SIG_BLOCK: ::c_int = 0x000000;\n-pub const SIG_UNBLOCK: ::c_int = 0x01;\n-\n-pub const EXTPROC: ::tcflag_t = 0x00010000;\n-\n-pub const MAP_HUGETLB: ::c_int = 0x040000;\n-\n-pub const F_GETLK: ::c_int = 12;\n-pub const F_GETOWN: ::c_int = 9;\n-pub const F_SETLK: ::c_int = 13;\n-pub const F_SETLKW: ::c_int = 14;\n-pub const F_SETOWN: ::c_int = 8;\n-\n-pub const VEOF: usize = 4;\n-pub const VEOL: usize = 11;\n-pub const VEOL2: usize = 16;\n-pub const VMIN: usize = 6;\n-pub const IEXTEN: ::tcflag_t = 0x00008000;\n-pub const TOSTOP: ::tcflag_t = 0x00000100;\n-pub const FLUSHO: ::tcflag_t = 0x00001000;\n-\n-pub const TCGETS: ::c_int = 0x5401;\n-pub const TCSETS: ::c_int = 0x5402;\n-pub const TCSETSW: ::c_int = 0x5403;\n-pub const TCSETSF: ::c_int = 0x5404;\n-pub const TCGETA: ::c_int = 0x5405;\n-pub const TCSETA: ::c_int = 0x5406;\n-pub const TCSETAW: ::c_int = 0x5407;\n-pub const TCSETAF: ::c_int = 0x5408;\n-pub const TCSBRK: ::c_int = 0x5409;\n-pub const TCXONC: ::c_int = 0x540A;\n-pub const TCFLSH: ::c_int = 0x540B;\n-pub const TIOCGSOFTCAR: ::c_int = 0x5419;\n-pub const TIOCSSOFTCAR: ::c_int = 0x541A;\n-pub const TIOCLINUX: ::c_int = 0x541C;\n-pub const TIOCGSERIAL: ::c_int = 0x541E;\n-pub const TIOCEXCL: ::c_int = 0x540C;\n-pub const TIOCNXCL: ::c_int = 0x540D;\n-pub const TIOCSCTTY: ::c_int = 0x540E;\n-pub const TIOCGPGRP: ::c_int = 0x540F;\n-pub const TIOCSPGRP: ::c_int = 0x5410;\n-pub const TIOCOUTQ: ::c_int = 0x5411;\n-pub const TIOCSTI: ::c_int = 0x5412;\n-pub const TIOCGWINSZ: ::c_int = 0x5413;\n-pub const TIOCSWINSZ: ::c_int = 0x5414;\n-pub const TIOCMGET: ::c_int = 0x5415;\n-pub const TIOCMBIS: ::c_int = 0x5416;\n-pub const TIOCMBIC: ::c_int = 0x5417;\n-pub const TIOCMSET: ::c_int = 0x5418;\n-pub const FIONREAD: ::c_int = 0x541B;\n-pub const TIOCCONS: ::c_int = 0x541D;\n-\n-pub const SYS_gettid: ::c_long = 224;\n-pub const SYS_perf_event_open: ::c_long = 364;\n-\n-pub const POLLWRNORM: ::c_short = 0x100;\n-pub const POLLWRBAND: ::c_short = 0x200;"}, {"sha": "91a96c185a91feb79e6528f16ebbfe94fcc2480e", "filename": "src/vendor/libc/src/unix/notbsd/linux/musl/b32/asmjs.rs", "status": "removed", "additions": 0, "deletions": 335, "changes": 335, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Fasmjs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Fasmjs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Fasmjs.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -1,335 +0,0 @@\n-pub type c_char = u8;\n-pub type wchar_t = u32;\n-\n-s! {\n-    pub struct stat {\n-        pub st_dev: ::dev_t,\n-        __st_dev_padding: ::c_int,\n-        __st_ino_truncated: ::c_long,\n-        pub st_mode: ::mode_t,\n-        pub st_nlink: ::nlink_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::dev_t,\n-        __st_rdev_padding: ::c_int,\n-        pub st_size: ::off_t,\n-        pub st_blksize: ::blksize_t,\n-        pub st_blocks: ::blkcnt_t,\n-        pub st_atime: ::time_t,\n-        pub st_atime_nsec: ::c_long,\n-        pub st_mtime: ::time_t,\n-        pub st_mtime_nsec: ::c_long,\n-        pub st_ctime: ::time_t,\n-        pub st_ctime_nsec: ::c_long,\n-        pub st_ino: ::ino_t,\n-    }\n-\n-    pub struct stat64 {\n-        pub st_dev: ::dev_t,\n-        __st_dev_padding: ::c_int,\n-        __st_ino_truncated: ::c_long,\n-        pub st_mode: ::mode_t,\n-        pub st_nlink: ::nlink_t,\n-        pub st_uid: ::uid_t,\n-        pub st_gid: ::gid_t,\n-        pub st_rdev: ::dev_t,\n-        __st_rdev_padding: ::c_int,\n-        pub st_size: ::off_t,\n-        pub st_blksize: ::blksize_t,\n-        pub st_blocks: ::blkcnt_t,\n-        pub st_atime: ::time_t,\n-        pub st_atime_nsec: ::c_long,\n-        pub st_mtime: ::time_t,\n-        pub st_mtime_nsec: ::c_long,\n-        pub st_ctime: ::time_t,\n-        pub st_ctime_nsec: ::c_long,\n-        pub st_ino: ::ino_t,\n-    }\n-\n-    pub struct stack_t {\n-        pub ss_sp: *mut ::c_void,\n-        pub ss_flags: ::c_int,\n-        pub ss_size: ::size_t\n-    }\n-\n-    pub struct shmid_ds {\n-        pub shm_perm: ::ipc_perm,\n-        pub shm_segsz: ::size_t,\n-        pub shm_atime: ::time_t,\n-        __unused1: ::c_int,\n-        pub shm_dtime: ::time_t,\n-        __unused2: ::c_int,\n-        pub shm_ctime: ::time_t,\n-        __unused3: ::c_int,\n-        pub shm_cpid: ::pid_t,\n-        pub shm_lpid: ::pid_t,\n-        pub shm_nattch: ::c_ulong,\n-        __pad1: ::c_ulong,\n-        __pad2: ::c_ulong,\n-    }\n-\n-    pub struct msqid_ds {\n-        pub msg_perm: ::ipc_perm,\n-        pub msg_stime: ::time_t,\n-        __unused1: ::c_int,\n-        pub msg_rtime: ::time_t,\n-        __unused2: ::c_int,\n-        pub msg_ctime: ::time_t,\n-        __unused3: ::c_int,\n-        __msg_cbytes: ::c_ulong,\n-        pub msg_qnum: ::msgqnum_t,\n-        pub msg_qbytes: ::msglen_t,\n-        pub msg_lspid: ::pid_t,\n-        pub msg_lrpid: ::pid_t,\n-        __pad1: ::c_ulong,\n-        __pad2: ::c_ulong,\n-    }\n-\n-    pub struct statfs {\n-        pub f_type: ::c_ulong,\n-        pub f_bsize: ::c_ulong,\n-        pub f_blocks: ::fsblkcnt_t,\n-        pub f_bfree: ::fsblkcnt_t,\n-        pub f_bavail: ::fsblkcnt_t,\n-        pub f_files: ::fsfilcnt_t,\n-        pub f_ffree: ::fsfilcnt_t,\n-        pub f_fsid: ::fsid_t,\n-        pub f_namelen: ::c_ulong,\n-        pub f_frsize: ::c_ulong,\n-        pub f_flags: ::c_ulong,\n-        pub f_spare: [::c_ulong; 4],\n-    }\n-\n-    pub struct siginfo_t {\n-        pub si_signo: ::c_int,\n-        pub si_errno: ::c_int,\n-        pub si_code: ::c_int,\n-        pub _pad: [::c_int; 29],\n-        _align: [usize; 0],\n-    }\n-}\n-\n-pub const O_DIRECT: ::c_int = 0x4000;\n-pub const O_DIRECTORY: ::c_int = 0x10000;\n-pub const O_NOFOLLOW: ::c_int = 0x20000;\n-pub const O_ASYNC: ::c_int = 0x2000;\n-\n-pub const FIOCLEX: ::c_int = 0x5451;\n-pub const FIONBIO: ::c_int = 0x5421;\n-\n-pub const RLIMIT_RSS: ::c_int = 5;\n-pub const RLIMIT_NOFILE: ::c_int = 7;\n-pub const RLIMIT_AS: ::c_int = 9;\n-pub const RLIMIT_NPROC: ::c_int = 6;\n-pub const RLIMIT_MEMLOCK: ::c_int = 8;\n-\n-pub const O_APPEND: ::c_int = 1024;\n-pub const O_CREAT: ::c_int = 64;\n-pub const O_EXCL: ::c_int = 128;\n-pub const O_NOCTTY: ::c_int = 256;\n-pub const O_NONBLOCK: ::c_int = 2048;\n-pub const O_SYNC: ::c_int = 1052672;\n-pub const O_RSYNC: ::c_int = 1052672;\n-pub const O_DSYNC: ::c_int = 4096;\n-\n-pub const SOCK_NONBLOCK: ::c_int = 2048;\n-\n-pub const MAP_ANON: ::c_int = 0x0020;\n-pub const MAP_GROWSDOWN: ::c_int = 0x0100;\n-pub const MAP_DENYWRITE: ::c_int = 0x0800;\n-pub const MAP_EXECUTABLE: ::c_int = 0x01000;\n-pub const MAP_LOCKED: ::c_int = 0x02000;\n-pub const MAP_NORESERVE: ::c_int = 0x04000;\n-pub const MAP_POPULATE: ::c_int = 0x08000;\n-pub const MAP_NONBLOCK: ::c_int = 0x010000;\n-pub const MAP_STACK: ::c_int = 0x020000;\n-\n-pub const SOCK_STREAM: ::c_int = 1;\n-pub const SOCK_DGRAM: ::c_int = 2;\n-pub const SOCK_SEQPACKET: ::c_int = 5;\n-\n-pub const SOL_SOCKET: ::c_int = 1;\n-\n-pub const EDEADLK: ::c_int = 35;\n-pub const ENAMETOOLONG: ::c_int = 36;\n-pub const ENOLCK: ::c_int = 37;\n-pub const ENOSYS: ::c_int = 38;\n-pub const ENOTEMPTY: ::c_int = 39;\n-pub const ELOOP: ::c_int = 40;\n-pub const ENOMSG: ::c_int = 42;\n-pub const EIDRM: ::c_int = 43;\n-pub const ECHRNG: ::c_int = 44;\n-pub const EL2NSYNC: ::c_int = 45;\n-pub const EL3HLT: ::c_int = 46;\n-pub const EL3RST: ::c_int = 47;\n-pub const ELNRNG: ::c_int = 48;\n-pub const EUNATCH: ::c_int = 49;\n-pub const ENOCSI: ::c_int = 50;\n-pub const EL2HLT: ::c_int = 51;\n-pub const EBADE: ::c_int = 52;\n-pub const EBADR: ::c_int = 53;\n-pub const EXFULL: ::c_int = 54;\n-pub const ENOANO: ::c_int = 55;\n-pub const EBADRQC: ::c_int = 56;\n-pub const EBADSLT: ::c_int = 57;\n-pub const EDEADLOCK: ::c_int = EDEADLK;\n-pub const EMULTIHOP: ::c_int = 72;\n-pub const EBADMSG: ::c_int = 74;\n-pub const EOVERFLOW: ::c_int = 75;\n-pub const ENOTUNIQ: ::c_int = 76;\n-pub const EBADFD: ::c_int = 77;\n-pub const EREMCHG: ::c_int = 78;\n-pub const ELIBACC: ::c_int = 79;\n-pub const ELIBBAD: ::c_int = 80;\n-pub const ELIBSCN: ::c_int = 81;\n-pub const ELIBMAX: ::c_int = 82;\n-pub const ELIBEXEC: ::c_int = 83;\n-pub const EILSEQ: ::c_int = 84;\n-pub const ERESTART: ::c_int = 85;\n-pub const ESTRPIPE: ::c_int = 86;\n-pub const EUSERS: ::c_int = 87;\n-pub const ENOTSOCK: ::c_int = 88;\n-pub const EDESTADDRREQ: ::c_int = 89;\n-pub const EMSGSIZE: ::c_int = 90;\n-pub const EPROTOTYPE: ::c_int = 91;\n-pub const ENOPROTOOPT: ::c_int = 92;\n-pub const EPROTONOSUPPORT: ::c_int = 93;\n-pub const ESOCKTNOSUPPORT: ::c_int = 94;\n-pub const EOPNOTSUPP: ::c_int = 95;\n-pub const EPFNOSUPPORT: ::c_int = 96;\n-pub const EAFNOSUPPORT: ::c_int = 97;\n-pub const EADDRINUSE: ::c_int = 98;\n-pub const EADDRNOTAVAIL: ::c_int = 99;\n-pub const ENETDOWN: ::c_int = 100;\n-pub const ENETUNREACH: ::c_int = 101;\n-pub const ENETRESET: ::c_int = 102;\n-pub const ECONNABORTED: ::c_int = 103;\n-pub const ECONNRESET: ::c_int = 104;\n-pub const ENOBUFS: ::c_int = 105;\n-pub const EISCONN: ::c_int = 106;\n-pub const ENOTCONN: ::c_int = 107;\n-pub const ESHUTDOWN: ::c_int = 108;\n-pub const ETOOMANYREFS: ::c_int = 109;\n-pub const ETIMEDOUT: ::c_int = 110;\n-pub const ECONNREFUSED: ::c_int = 111;\n-pub const EHOSTDOWN: ::c_int = 112;\n-pub const EHOSTUNREACH: ::c_int = 113;\n-pub const EALREADY: ::c_int = 114;\n-pub const EINPROGRESS: ::c_int = 115;\n-pub const ESTALE: ::c_int = 116;\n-pub const EUCLEAN: ::c_int = 117;\n-pub const ENOTNAM: ::c_int = 118;\n-pub const ENAVAIL: ::c_int = 119;\n-pub const EISNAM: ::c_int = 120;\n-pub const EREMOTEIO: ::c_int = 121;\n-pub const EDQUOT: ::c_int = 122;\n-pub const ENOMEDIUM: ::c_int = 123;\n-pub const EMEDIUMTYPE: ::c_int = 124;\n-pub const ECANCELED: ::c_int = 125;\n-pub const ENOKEY: ::c_int = 126;\n-pub const EKEYEXPIRED: ::c_int = 127;\n-pub const EKEYREVOKED: ::c_int = 128;\n-pub const EKEYREJECTED: ::c_int = 129;\n-pub const EOWNERDEAD: ::c_int = 130;\n-pub const ENOTRECOVERABLE: ::c_int = 131;\n-pub const ERFKILL: ::c_int = 132;\n-pub const EHWPOISON: ::c_int = 133;\n-\n-pub const SO_REUSEADDR: ::c_int = 2;\n-pub const SO_TYPE: ::c_int = 3;\n-pub const SO_ERROR: ::c_int = 4;\n-pub const SO_DONTROUTE: ::c_int = 5;\n-pub const SO_BROADCAST: ::c_int = 6;\n-pub const SO_SNDBUF: ::c_int = 7;\n-pub const SO_RCVBUF: ::c_int = 8;\n-pub const SO_KEEPALIVE: ::c_int = 9;\n-pub const SO_OOBINLINE: ::c_int = 10;\n-pub const SO_LINGER: ::c_int = 13;\n-pub const SO_REUSEPORT: ::c_int = 15;\n-pub const SO_RCVLOWAT: ::c_int = 18;\n-pub const SO_SNDLOWAT: ::c_int = 19;\n-pub const SO_RCVTIMEO: ::c_int = 20;\n-pub const SO_SNDTIMEO: ::c_int = 21;\n-pub const SO_ACCEPTCONN: ::c_int = 30;\n-\n-pub const SA_ONSTACK: ::c_int = 0x08000000;\n-pub const SA_SIGINFO: ::c_int = 0x00000004;\n-pub const SA_NOCLDWAIT: ::c_int = 0x00000002;\n-\n-pub const SIGCHLD: ::c_int = 17;\n-pub const SIGBUS: ::c_int = 7;\n-pub const SIGTTIN: ::c_int = 21;\n-pub const SIGTTOU: ::c_int = 22;\n-pub const SIGXCPU: ::c_int = 24;\n-pub const SIGXFSZ: ::c_int = 25;\n-pub const SIGVTALRM: ::c_int = 26;\n-pub const SIGPROF: ::c_int = 27;\n-pub const SIGWINCH: ::c_int = 28;\n-pub const SIGUSR1: ::c_int = 10;\n-pub const SIGUSR2: ::c_int = 12;\n-pub const SIGCONT: ::c_int = 18;\n-pub const SIGSTOP: ::c_int = 19;\n-pub const SIGTSTP: ::c_int = 20;\n-pub const SIGURG: ::c_int = 23;\n-pub const SIGIO: ::c_int = 29;\n-pub const SIGSYS: ::c_int = 31;\n-pub const SIGSTKFLT: ::c_int = 16;\n-pub const SIGPOLL: ::c_int = 29;\n-pub const SIGPWR: ::c_int = 30;\n-pub const SIG_SETMASK: ::c_int = 2;\n-pub const SIG_BLOCK: ::c_int = 0x000000;\n-pub const SIG_UNBLOCK: ::c_int = 0x01;\n-\n-pub const EXTPROC: ::tcflag_t = 0x00010000;\n-\n-pub const MAP_HUGETLB: ::c_int = 0x040000;\n-\n-pub const F_GETLK: ::c_int = 12;\n-pub const F_GETOWN: ::c_int = 9;\n-pub const F_SETLK: ::c_int = 13;\n-pub const F_SETLKW: ::c_int = 14;\n-pub const F_SETOWN: ::c_int = 8;\n-\n-pub const VEOF: usize = 4;\n-pub const VEOL: usize = 11;\n-pub const VEOL2: usize = 16;\n-pub const VMIN: usize = 6;\n-pub const IEXTEN: ::tcflag_t = 0x00008000;\n-pub const TOSTOP: ::tcflag_t = 0x00000100;\n-pub const FLUSHO: ::tcflag_t = 0x00001000;\n-\n-pub const TCGETS: ::c_int = 0x5401;\n-pub const TCSETS: ::c_int = 0x5402;\n-pub const TCSETSW: ::c_int = 0x5403;\n-pub const TCSETSF: ::c_int = 0x5404;\n-pub const TCGETA: ::c_int = 0x5405;\n-pub const TCSETA: ::c_int = 0x5406;\n-pub const TCSETAW: ::c_int = 0x5407;\n-pub const TCSETAF: ::c_int = 0x5408;\n-pub const TCSBRK: ::c_int = 0x5409;\n-pub const TCXONC: ::c_int = 0x540A;\n-pub const TCFLSH: ::c_int = 0x540B;\n-pub const TIOCGSOFTCAR: ::c_int = 0x5419;\n-pub const TIOCSSOFTCAR: ::c_int = 0x541A;\n-pub const TIOCLINUX: ::c_int = 0x541C;\n-pub const TIOCGSERIAL: ::c_int = 0x541E;\n-pub const TIOCEXCL: ::c_int = 0x540C;\n-pub const TIOCNXCL: ::c_int = 0x540D;\n-pub const TIOCSCTTY: ::c_int = 0x540E;\n-pub const TIOCGPGRP: ::c_int = 0x540F;\n-pub const TIOCSPGRP: ::c_int = 0x5410;\n-pub const TIOCOUTQ: ::c_int = 0x5411;\n-pub const TIOCSTI: ::c_int = 0x5412;\n-pub const TIOCGWINSZ: ::c_int = 0x5413;\n-pub const TIOCSWINSZ: ::c_int = 0x5414;\n-pub const TIOCMGET: ::c_int = 0x5415;\n-pub const TIOCMBIS: ::c_int = 0x5416;\n-pub const TIOCMBIC: ::c_int = 0x5417;\n-pub const TIOCMSET: ::c_int = 0x5418;\n-pub const FIONREAD: ::c_int = 0x541B;\n-pub const TIOCCONS: ::c_int = 0x541D;\n-\n-pub const SYS_gettid: ::c_long = 224; // Valid for arm (32-bit) and x86 (32-bit)\n-\n-pub const POLLWRNORM: ::c_short = 0x100;\n-pub const POLLWRBAND: ::c_short = 0x200;"}, {"sha": "9ebfe4a68fea81aa7efdd2ffcc3ca492bd11dd5f", "filename": "src/vendor/libc/src/unix/notbsd/linux/musl/b32/mips.rs", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Fmips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Fmips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Fmips.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "899bc69310906c8acdb806584cfe3c9de90a6ba2", "filename": "src/vendor/libc/src/unix/notbsd/linux/musl/b32/mod.rs", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "194b8fd8bdc2d603e1ef414fb6d455cfdd7dc093", "filename": "src/vendor/libc/src/unix/notbsd/linux/musl/b32/x86.rs", "status": "removed", "additions": 0, "deletions": 350, "changes": 350, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb32%2Fx86.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "23f7dd35e5c98a45e9e7eea2abdd1205900a5e92", "filename": "src/vendor/libc/src/unix/notbsd/linux/musl/b64/aarch64.rs", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb64%2Faarch64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb64%2Faarch64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb64%2Faarch64.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "fdaf52e166c6eaa07924878d4181eb48c5c73b8b", "filename": "src/vendor/libc/src/unix/notbsd/linux/musl/b64/mod.rs", "status": "removed", "additions": 0, "deletions": 370, "changes": 370, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb64%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb64%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb64%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "4b8ca10aab57bbf76ad767ec4753b834a40e87e8", "filename": "src/vendor/libc/src/unix/notbsd/linux/musl/b64/powerpc64.rs", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb64%2Fpowerpc64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb64%2Fpowerpc64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb64%2Fpowerpc64.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "2cfd903ca84fbe30b8c8ef9f282391ced5e7a733", "filename": "src/vendor/libc/src/unix/notbsd/linux/musl/b64/x86_64.rs", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb64%2Fx86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb64%2Fx86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fb64%2Fx86_64.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "69a85b86eaa33448d5ec143ba486159e99227f0c", "filename": "src/vendor/libc/src/unix/notbsd/linux/musl/mod.rs", "status": "removed", "additions": 0, "deletions": 245, "changes": 245, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fmusl%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "2c6fbcd6e3f26b58c1b55274d5c2ad0f1b8690bb", "filename": "src/vendor/libc/src/unix/notbsd/linux/other/b32/arm.rs", "status": "removed", "additions": 0, "deletions": 168, "changes": 168, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb32%2Farm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb32%2Farm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb32%2Farm.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "48c3502ada1b62237bcd155070704229c5a5aec1", "filename": "src/vendor/libc/src/unix/notbsd/linux/other/b32/mod.rs", "status": "removed", "additions": 0, "deletions": 89, "changes": 89, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb32%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb32%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb32%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "3125e9f337dd2a15ed0786245b24588aac81c52d", "filename": "src/vendor/libc/src/unix/notbsd/linux/other/b32/powerpc.rs", "status": "removed", "additions": 0, "deletions": 165, "changes": 165, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb32%2Fpowerpc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb32%2Fpowerpc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb32%2Fpowerpc.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "86abd1eb10358b84ac85c2b75990406c2730e40a", "filename": "src/vendor/libc/src/unix/notbsd/linux/other/b32/x86.rs", "status": "removed", "additions": 0, "deletions": 213, "changes": 213, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb32%2Fx86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb32%2Fx86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb32%2Fx86.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "1da95b10203d6d8bc1fd156f69261ef3ed5539d9", "filename": "src/vendor/libc/src/unix/notbsd/linux/other/b64/aarch64.rs", "status": "removed", "additions": 0, "deletions": 178, "changes": 178, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb64%2Faarch64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb64%2Faarch64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb64%2Faarch64.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "352dba843d2b58d82c5649f30b9d5553f4027ac8", "filename": "src/vendor/libc/src/unix/notbsd/linux/other/b64/mod.rs", "status": "removed", "additions": 0, "deletions": 65, "changes": 65, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb64%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb64%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb64%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "c5ce962e39aa175c8652724b74aff64554ef6889", "filename": "src/vendor/libc/src/unix/notbsd/linux/other/b64/powerpc64.rs", "status": "removed", "additions": 0, "deletions": 176, "changes": 176, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb64%2Fpowerpc64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb64%2Fpowerpc64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb64%2Fpowerpc64.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "69295e6d5ded85ffb8152be531945a56505b31c9", "filename": "src/vendor/libc/src/unix/notbsd/linux/other/b64/x86_64.rs", "status": "removed", "additions": 0, "deletions": 246, "changes": 246, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb64%2Fx86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb64%2Fx86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fb64%2Fx86_64.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "b100cec54ba00a0b007b372d757e6230e8407386", "filename": "src/vendor/libc/src/unix/notbsd/linux/other/mod.rs", "status": "removed", "additions": 0, "deletions": 620, "changes": 620, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fother%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "be12d72fc515afc41dffeac8a3c3f1ac4babc664", "filename": "src/vendor/libc/src/unix/notbsd/linux/s390x.rs", "status": "removed", "additions": 0, "deletions": 679, "changes": 679, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fs390x.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fs390x.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Flinux%2Fs390x.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "a53211a2b80d14459858b94bf310640609941251", "filename": "src/vendor/libc/src/unix/notbsd/mod.rs", "status": "removed", "additions": 0, "deletions": 867, "changes": 867, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fnotbsd%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "63cd1249a4888acbb0930cacffb0652ed27171bd", "filename": "src/vendor/libc/src/unix/solaris/mod.rs", "status": "removed", "additions": 0, "deletions": 1047, "changes": 1047, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fsolaris%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fsolaris%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Funix%2Fsolaris%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "b916fd4bd6b43d666dc3db5790e8d2f8ccd3bc9d", "filename": "src/vendor/libc/src/windows.rs", "status": "removed", "additions": 0, "deletions": 234, "changes": 234, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Fwindows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flibc%2Fsrc%2Fwindows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flibc%2Fsrc%2Fwindows.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "2255dcb7c7b7bc015dce8ad423801b5f9252b3fd", "filename": "src/vendor/log/.cargo-checksum.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2F.cargo-checksum.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2F.cargo-checksum.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flog%2F.cargo-checksum.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/vendor/log/.cargo-ok", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2F.cargo-ok", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2F.cargo-ok", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flog%2F.cargo-ok?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "2c96eb1b6517f2617f9ddeae9f07f5fd7bd7ddef", "filename": "src/vendor/log/.gitignore", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flog%2F.gitignore?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "89e7ae02ab598128cce0bcaf7afde6d50cf70f3c", "filename": "src/vendor/log/.travis.yml", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2F.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2F.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flog%2F.travis.yml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "f2081ecffcc2772ec59b06ee612f3503fbf3690f", "filename": "src/vendor/log/Cargo.toml", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flog%2FCargo.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "16fe87b06e802f094b3fbb0894b137bca2b16ef1", "filename": "src/vendor/log/LICENSE-APACHE", "status": "removed", "additions": 0, "deletions": 201, "changes": 201, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2FLICENSE-APACHE", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2FLICENSE-APACHE", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flog%2FLICENSE-APACHE?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "39d4bdb5acd313c1a92dbeaa1c379aaf0596a315", "filename": "src/vendor/log/LICENSE-MIT", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2FLICENSE-MIT", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2FLICENSE-MIT", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flog%2FLICENSE-MIT?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "0e9dc58ae7b3f0d36e53e42f6e97c2f9246cc4f4", "filename": "src/vendor/log/README.md", "status": "removed", "additions": 0, "deletions": 160, "changes": 160, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flog%2FREADME.md?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "841011deb237183a1ae6fa63a35f29d3e8597d6d", "filename": "src/vendor/log/appveyor.yml", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2Fappveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2Fappveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flog%2Fappveyor.yml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "da2fc159633172b93bf9abe35ce0e3b3a554f54f", "filename": "src/vendor/log/src/lib.rs", "status": "removed", "additions": 0, "deletions": 1013, "changes": 1013, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flog%2Fsrc%2Flib.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "7037f9ac0debd2cc818cc2ae4bd5d304e7073a11", "filename": "src/vendor/log/src/macros.rs", "status": "removed", "additions": 0, "deletions": 155, "changes": 155, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flog%2Fsrc%2Fmacros.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "e08d46db1951caf46a8f5ed7f96a8351dd14754e", "filename": "src/vendor/log/tests/filters.rs", "status": "removed", "additions": 0, "deletions": 76, "changes": 76, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2Ftests%2Ffilters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Flog%2Ftests%2Ffilters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Flog%2Ftests%2Ffilters.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "18d604e29e17b38a83326c24b22ec5684889eef2", "filename": "src/vendor/num_cpus/.cargo-checksum.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2F.cargo-checksum.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2F.cargo-checksum.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fnum_cpus%2F.cargo-checksum.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/vendor/num_cpus/.cargo-ok", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2F.cargo-ok", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2F.cargo-ok", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fnum_cpus%2F.cargo-ok?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "a9d37c560c6ab8d4afbf47eda643e8c42e857716", "filename": "src/vendor/num_cpus/.gitignore", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fnum_cpus%2F.gitignore?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "4a6418b232ccfc1b9df29e614be24f0ebe7a18ba", "filename": "src/vendor/num_cpus/Cargo.toml", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fnum_cpus%2FCargo.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "16fe87b06e802f094b3fbb0894b137bca2b16ef1", "filename": "src/vendor/num_cpus/LICENSE-APACHE", "status": "removed", "additions": 0, "deletions": 201, "changes": 201, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2FLICENSE-APACHE", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2FLICENSE-APACHE", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fnum_cpus%2FLICENSE-APACHE?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "8e91dc998a9f8260d88079046200713c66684946", "filename": "src/vendor/num_cpus/LICENSE-MIT", "status": "removed", "additions": 0, "deletions": 20, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2FLICENSE-MIT", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2FLICENSE-MIT", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fnum_cpus%2FLICENSE-MIT?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "3628e858e9265fb020c2e16561b2089ff9797b54", "filename": "src/vendor/num_cpus/README.md", "status": "removed", "additions": 0, "deletions": 36, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fnum_cpus%2FREADME.md?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "809b8d8ad1d61326ba4c09e17d69484bac1e5ddd", "filename": "src/vendor/num_cpus/src/lib.rs", "status": "removed", "additions": 0, "deletions": 116, "changes": 116, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Fnum_cpus%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Fnum_cpus%2Fsrc%2Flib.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "f4784c97912f6a1536a58b6cc30c4d77e7a040aa", "filename": "src/vendor/rustc-serialize/.cargo-checksum.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2F.cargo-checksum.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2F.cargo-checksum.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2F.cargo-checksum.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/vendor/rustc-serialize/.cargo-ok", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2F.cargo-ok", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2F.cargo-ok", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2F.cargo-ok?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "4fffb2f89cbd8f2169ce9914bd16bd43785bb368", "filename": "src/vendor/rustc-serialize/.gitignore", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2F.gitignore?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "eb446b23fe6bb314757be49f949f696bdee76a03", "filename": "src/vendor/rustc-serialize/.travis.yml", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2F.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2F.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2F.travis.yml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "f0cb1a4845c9a9aca201efe17f7131294d0c3249", "filename": "src/vendor/rustc-serialize/Cargo.toml", "status": "removed", "additions": 0, "deletions": 18, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2FCargo.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "16fe87b06e802f094b3fbb0894b137bca2b16ef1", "filename": "src/vendor/rustc-serialize/LICENSE-APACHE", "status": "removed", "additions": 0, "deletions": 201, "changes": 201, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2FLICENSE-APACHE", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2FLICENSE-APACHE", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2FLICENSE-APACHE?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "39d4bdb5acd313c1a92dbeaa1c379aaf0596a315", "filename": "src/vendor/rustc-serialize/LICENSE-MIT", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2FLICENSE-MIT", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2FLICENSE-MIT", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2FLICENSE-MIT?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "db2f5693aeb7d23ab49bb9307938ea60e806cbba", "filename": "src/vendor/rustc-serialize/README.md", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2FREADME.md?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "6a1b8dc19c0393b9f64e98ca3701755ef39c34de", "filename": "src/vendor/rustc-serialize/appveyor.yml", "status": "removed", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fappveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fappveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2Fappveyor.yml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "6a6565bc14820a53640400bf8b27d6f2a82a7307", "filename": "src/vendor/rustc-serialize/benches/base64.rs", "status": "removed", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fbenches%2Fbase64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fbenches%2Fbase64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2Fbenches%2Fbase64.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "97a7735e817541a1c0fd83354218f51532b14a8d", "filename": "src/vendor/rustc-serialize/benches/hex.rs", "status": "removed", "additions": 0, "deletions": 28, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fbenches%2Fhex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fbenches%2Fhex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2Fbenches%2Fhex.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "20768e116a7c49e9cc179d3a1db949aa8ae6d9e9", "filename": "src/vendor/rustc-serialize/benches/json.rs", "status": "removed", "additions": 0, "deletions": 84, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fbenches%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fbenches%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2Fbenches%2Fjson.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "dc2ba8a4f9783e7a4ff5dfb86b783c6356ba17cf", "filename": "src/vendor/rustc-serialize/src/base64.rs", "status": "removed", "additions": 0, "deletions": 476, "changes": 476, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fbase64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fbase64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fbase64.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "f8074c911be73145b7c71d8c8af2468007a6fa53", "filename": "src/vendor/rustc-serialize/src/collection_impls.rs", "status": "removed", "additions": 0, "deletions": 186, "changes": 186, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fcollection_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fcollection_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fcollection_impls.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "08d25fdf2e36faa41f1655d549821eafa2c934bc", "filename": "src/vendor/rustc-serialize/src/hex.rs", "status": "removed", "additions": 0, "deletions": 209, "changes": 209, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fhex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fhex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fhex.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "44bf6a2fff24dcc9a4147b22911416f28186f3fc", "filename": "src/vendor/rustc-serialize/src/json.rs", "status": "removed", "additions": 0, "deletions": 3955, "changes": 3955, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fjson.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "8a4acf2d502843bff481b108f67e11373b29d6be", "filename": "src/vendor/rustc-serialize/src/lib.rs", "status": "removed", "additions": 0, "deletions": 69, "changes": 69, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2Fsrc%2Flib.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "02052f6d67021ec270a19d68b1fd01eaa419af52", "filename": "src/vendor/rustc-serialize/src/serialize.rs", "status": "removed", "additions": 0, "deletions": 843, "changes": 843, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Frustc-serialize%2Fsrc%2Fserialize.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "582aacf1cb90a881008e480a4fb2912c694d41ef", "filename": "src/vendor/toml/.cargo-checksum.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2F.cargo-checksum.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2F.cargo-checksum.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2F.cargo-checksum.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/vendor/toml/.cargo-ok", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2F.cargo-ok", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2F.cargo-ok", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2F.cargo-ok?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "a9d37c560c6ab8d4afbf47eda643e8c42e857716", "filename": "src/vendor/toml/.gitignore", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2F.gitignore?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "cf28e867d3e83c7296f071f77ae771a90309328c", "filename": "src/vendor/toml/.travis.yml", "status": "removed", "additions": 0, "deletions": 31, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2F.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2F.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2F.travis.yml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "f18073173109d2d82e19de95431b0365481d39fe", "filename": "src/vendor/toml/Cargo.toml", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2FCargo.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "16fe87b06e802f094b3fbb0894b137bca2b16ef1", "filename": "src/vendor/toml/LICENSE-APACHE", "status": "removed", "additions": 0, "deletions": 201, "changes": 201, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2FLICENSE-APACHE", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2FLICENSE-APACHE", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2FLICENSE-APACHE?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "39e0ed6602151f235148e6c08413aa7eda5b9038", "filename": "src/vendor/toml/LICENSE-MIT", "status": "removed", "additions": 0, "deletions": 25, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2FLICENSE-MIT", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2FLICENSE-MIT", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2FLICENSE-MIT?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "69334981f0385bd7500f25cf87eb6083b14ac2d6", "filename": "src/vendor/toml/README.md", "status": "removed", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2FREADME.md?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "0d406804a38be144de5fbef88fe0f19dbeee8219", "filename": "src/vendor/toml/examples/toml2json.rs", "status": "removed", "additions": 0, "deletions": 57, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fexamples%2Ftoml2json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fexamples%2Ftoml2json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Fexamples%2Ftoml2json.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "a59628038ab48f8664f2b5e1bc7cf6c9940aec5b", "filename": "src/vendor/toml/src/decoder/mod.rs", "status": "removed", "additions": 0, "deletions": 235, "changes": 235, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fdecoder%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fdecoder%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Fsrc%2Fdecoder%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "2f4fb0937a808dbc149a2ca26fc3e3c38873e54b", "filename": "src/vendor/toml/src/decoder/rustc_serialize.rs", "status": "removed", "additions": 0, "deletions": 371, "changes": 371, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fdecoder%2Frustc_serialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fdecoder%2Frustc_serialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Fsrc%2Fdecoder%2Frustc_serialize.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "91bc8acf5ea4f2c0e39ccca0050c64f6580dafa3", "filename": "src/vendor/toml/src/decoder/serde.rs", "status": "removed", "additions": 0, "deletions": 544, "changes": 544, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fdecoder%2Fserde.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fdecoder%2Fserde.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Fsrc%2Fdecoder%2Fserde.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "6891530beeb4e651a8433772ebc97baf8642b954", "filename": "src/vendor/toml/src/display.rs", "status": "removed", "additions": 0, "deletions": 201, "changes": 201, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Fsrc%2Fdisplay.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "fb628fa3d2369cd800e597b34b1b2de81b95962b", "filename": "src/vendor/toml/src/encoder/mod.rs", "status": "removed", "additions": 0, "deletions": 214, "changes": 214, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fencoder%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fencoder%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Fsrc%2Fencoder%2Fmod.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "7f1db876c58ca29bef9a7159e4e02f5c393a6c7f", "filename": "src/vendor/toml/src/encoder/rustc_serialize.rs", "status": "removed", "additions": 0, "deletions": 716, "changes": 716, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fencoder%2Frustc_serialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fencoder%2Frustc_serialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Fsrc%2Fencoder%2Frustc_serialize.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "d5bbb77a84899dee00b9168619a1a5b595c4d498", "filename": "src/vendor/toml/src/encoder/serde.rs", "status": "removed", "additions": 0, "deletions": 108, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fencoder%2Fserde.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fencoder%2Fserde.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Fsrc%2Fencoder%2Fserde.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "21b3e21ac05dd23147e803175ef8d2114ab9d405", "filename": "src/vendor/toml/src/lib.rs", "status": "removed", "additions": 0, "deletions": 492, "changes": 492, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Fsrc%2Flib.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "8fa2d77acc442c3690c8af1dfe7d670270ed2562", "filename": "src/vendor/toml/src/parser.rs", "status": "removed", "additions": 0, "deletions": 1581, "changes": 1581, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Fsrc%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Fsrc%2Fparser.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "ebbc01ccf34481fb4b32293c50654eb865fb8926", "filename": "src/vendor/toml/tests/README.md", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2FREADME.md?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "2d42ead67e628fdc6ead0d7ad4bda8a679fa70d2", "filename": "src/vendor/toml/tests/invalid-encoder/array-mixed-types-ints-and-floats.json", "status": "removed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid-encoder%2Farray-mixed-types-ints-and-floats.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid-encoder%2Farray-mixed-types-ints-and-floats.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid-encoder%2Farray-mixed-types-ints-and-floats.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "63e4de8e7130128feeb2ff4d26043f410d167fb6", "filename": "src/vendor/toml/tests/invalid.rs", "status": "removed", "additions": 0, "deletions": 108, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "051ec73136b2b6c2f933a5a380253aa42bb0b848", "filename": "src/vendor/toml/tests/invalid/array-mixed-types-arrays-and-ints.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Farray-mixed-types-arrays-and-ints.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Farray-mixed-types-arrays-and-ints.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Farray-mixed-types-arrays-and-ints.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "a5aa9b7a03375a0d7971260daa1aee51b518951f", "filename": "src/vendor/toml/tests/invalid/array-mixed-types-ints-and-floats.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Farray-mixed-types-ints-and-floats.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Farray-mixed-types-ints-and-floats.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Farray-mixed-types-ints-and-floats.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "f3483080532f395b58b60fb58a3c80ef564d1a91", "filename": "src/vendor/toml/tests/invalid/array-mixed-types-strings-and-ints.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Farray-mixed-types-strings-and-ints.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Farray-mixed-types-strings-and-ints.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Farray-mixed-types-strings-and-ints.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "123f173beb3ac7282059fe64bca9f8e60d65ac68", "filename": "src/vendor/toml/tests/invalid/datetime-malformed-no-leads.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-no-leads.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-no-leads.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-no-leads.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "ba9390076273ddabaafe4471c9e943e4e312039d", "filename": "src/vendor/toml/tests/invalid/datetime-malformed-no-secs.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-no-secs.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-no-secs.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-no-secs.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "617e3c56d4008a000d8d705cf6e4eccf2a2707a6", "filename": "src/vendor/toml/tests/invalid/datetime-malformed-no-t.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-no-t.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-no-t.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-no-t.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "cf66b1ea6b3ea5469a261094ba14b900ff8bd071", "filename": "src/vendor/toml/tests/invalid/datetime-malformed-no-z.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-no-z.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-no-z.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-no-z.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "eef792f34d6ef9c0880c70868c2ee076dba4f1c6", "filename": "src/vendor/toml/tests/invalid/datetime-malformed-with-milli.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-with-milli.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-with-milli.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fdatetime-malformed-with-milli.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "cedf05fc53bff115a6530fb2c8917ca7e2afd95b", "filename": "src/vendor/toml/tests/invalid/duplicate-key-table.toml", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fduplicate-key-table.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fduplicate-key-table.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fduplicate-key-table.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "9b5aee0e59b35b0b547c93ddcc6effe42ab9a45d", "filename": "src/vendor/toml/tests/invalid/duplicate-keys.toml", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fduplicate-keys.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fduplicate-keys.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fduplicate-keys.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "8ddf49b4e89303ede5d8903e0cfc62075171ae22", "filename": "src/vendor/toml/tests/invalid/duplicate-tables.toml", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fduplicate-tables.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fduplicate-tables.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fduplicate-tables.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "0cc36d0d28154acd0cf9c4399a7f3c5b499373bc", "filename": "src/vendor/toml/tests/invalid/empty-implicit-table.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fempty-implicit-table.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fempty-implicit-table.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fempty-implicit-table.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "fe51488c7066f6687ef680d6bfaa4f7768ef205c", "filename": "src/vendor/toml/tests/invalid/empty-table.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fempty-table.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fempty-table.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fempty-table.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "cab76bfd1588720c7c8bb8194c1f915e13ed460c", "filename": "src/vendor/toml/tests/invalid/float-no-leading-zero.toml", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ffloat-no-leading-zero.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ffloat-no-leading-zero.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ffloat-no-leading-zero.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "cbff2d06f05cce51179f23453a9ad77d63f2f9fd", "filename": "src/vendor/toml/tests/invalid/float-no-trailing-digits.toml", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ffloat-no-trailing-digits.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ffloat-no-trailing-digits.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ffloat-no-trailing-digits.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "5c1a1b0a9bc50fd2ab7b2bab904e452827590998", "filename": "src/vendor/toml/tests/invalid/key-after-array.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-after-array.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-after-array.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-after-array.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "4bc82136ce9da826e4409102843cce42e16a8de1", "filename": "src/vendor/toml/tests/invalid/key-after-table.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-after-table.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-after-table.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-after-table.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "09f998f4163e1bff9e58278ebd89573819285c18", "filename": "src/vendor/toml/tests/invalid/key-empty.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-empty.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-empty.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-empty.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "e321b1fbd0c969ce97800814ed51d605f886b9ae", "filename": "src/vendor/toml/tests/invalid/key-hash.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-hash.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-hash.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-hash.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "707aad54ec34ffb5d4f73c4648b58b7ee11de564", "filename": "src/vendor/toml/tests/invalid/key-newline.toml", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-newline.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-newline.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-newline.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "f0aeb16e50003fe97ae7bb08f923168a4cacdfec", "filename": "src/vendor/toml/tests/invalid/key-open-bracket.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-open-bracket.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-open-bracket.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-open-bracket.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "8e2f0bef135ba8e52e4110b6a5b0ebf19a528ca4", "filename": "src/vendor/toml/tests/invalid/key-single-open-bracket.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-single-open-bracket.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-single-open-bracket.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-single-open-bracket.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "201806d28013285bb78e3011b5448578fc967fd1", "filename": "src/vendor/toml/tests/invalid/key-space.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-space.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-space.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-space.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "e0597ae1c6f1ca3fbc8dc3ba692d5aa9661d8b95", "filename": "src/vendor/toml/tests/invalid/key-start-bracket.toml", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-start-bracket.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-start-bracket.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-start-bracket.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "25a037894eb0fc9adef5fa3ef69547dd087b7662", "filename": "src/vendor/toml/tests/invalid/key-two-equals.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-two-equals.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-two-equals.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fkey-two-equals.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "4c7be59f4b16cb34c0586a94b586a99e86238705", "filename": "src/vendor/toml/tests/invalid/string-bad-byte-escape.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fstring-bad-byte-escape.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fstring-bad-byte-escape.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fstring-bad-byte-escape.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "60acb0ccc50774299c963e18acaa8277f7503b9f", "filename": "src/vendor/toml/tests/invalid/string-bad-escape.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fstring-bad-escape.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fstring-bad-escape.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fstring-bad-escape.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "e94452a8dfc882903934f2e086f50427af5266f8", "filename": "src/vendor/toml/tests/invalid/string-byte-escapes.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fstring-byte-escapes.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fstring-byte-escapes.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fstring-byte-escapes.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "0c292fcab730d5ee7e3026407407b992fdcabab8", "filename": "src/vendor/toml/tests/invalid/string-no-close.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fstring-no-close.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fstring-no-close.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Fstring-no-close.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "05f2507ecb687f308c655182da0a1f28d34a18a1", "filename": "src/vendor/toml/tests/invalid/table-array-implicit.toml", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-array-implicit.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-array-implicit.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-array-implicit.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "39c73b05c44e44043f7187ff87a22a70071c7944", "filename": "src/vendor/toml/tests/invalid/table-array-malformed-bracket.toml", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-array-malformed-bracket.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-array-malformed-bracket.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-array-malformed-bracket.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "a470ca332f31f4a9c57a5971c36aec0caf999781", "filename": "src/vendor/toml/tests/invalid/table-array-malformed-empty.toml", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-array-malformed-empty.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-array-malformed-empty.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-array-malformed-empty.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "fe51488c7066f6687ef680d6bfaa4f7768ef205c", "filename": "src/vendor/toml/tests/invalid/table-empty.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-empty.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-empty.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-empty.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "c8b5a67858006c557bbb420d91fee14af778011b", "filename": "src/vendor/toml/tests/invalid/table-nested-brackets-close.toml", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-nested-brackets-close.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-nested-brackets-close.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-nested-brackets-close.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "246d7e91fe4fb16ba1f2b3f89294fbff0c6ea1c7", "filename": "src/vendor/toml/tests/invalid/table-nested-brackets-open.toml", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-nested-brackets-open.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-nested-brackets-open.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-nested-brackets-open.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "79bbcb1e29832452395da83644c95172caacc787", "filename": "src/vendor/toml/tests/invalid/table-whitespace.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-whitespace.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-whitespace.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-whitespace.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "0d8edb524fe1afe1d539952b33ba04ed759c6715", "filename": "src/vendor/toml/tests/invalid/table-with-pound.toml", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-with-pound.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-with-pound.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftable-with-pound.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "1a7289074ed131de598a6a296121779e2102615d", "filename": "src/vendor/toml/tests/invalid/text-after-array-entries.toml", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-after-array-entries.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-after-array-entries.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-after-array-entries.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "42de7aff4d85693158d073e53fa73f96b36215cf", "filename": "src/vendor/toml/tests/invalid/text-after-integer.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-after-integer.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-after-integer.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-after-integer.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "c92a6f11d85a7570cce1d9383a2911812d914e5b", "filename": "src/vendor/toml/tests/invalid/text-after-string.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-after-string.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-after-string.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-after-string.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "87da9db26dffc26cfef91ddaee80e4c87dc5b326", "filename": "src/vendor/toml/tests/invalid/text-after-table.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-after-table.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-after-table.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-after-table.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "9b06a392410634906e1dabd7487ffa3acc40f747", "filename": "src/vendor/toml/tests/invalid/text-before-array-separator.toml", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-before-array-separator.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-before-array-separator.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-before-array-separator.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "a6a6c42075e24c483c568e6c4e7b07368b3f5e2c", "filename": "src/vendor/toml/tests/invalid/text-in-array.toml", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-in-array.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-in-array.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Finvalid%2Ftext-in-array.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "09589c9e7a932e97a44f6fdd1f8a5c37d7e937fd", "filename": "src/vendor/toml/tests/valid.rs", "status": "removed", "additions": 0, "deletions": 195, "changes": 195, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid.rs?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "2fbf2567f87bc7bff4503922973847867e26414d", "filename": "src/vendor/toml/tests/valid/array-empty.json", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farray-empty.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farray-empty.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farray-empty.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "fa58dc63d48803656e188ede9452726f79e6f5c2", "filename": "src/vendor/toml/tests/valid/array-empty.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farray-empty.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farray-empty.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farray-empty.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "1833d61c55973ee9ce1c6691b2e5bb0f1331c324", "filename": "src/vendor/toml/tests/valid/array-nospaces.json", "status": "removed", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farray-nospaces.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farray-nospaces.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farray-nospaces.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "66189367fe9eb53de353a250f70431404b4d0349", "filename": "src/vendor/toml/tests/valid/array-nospaces.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farray-nospaces.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farray-nospaces.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farray-nospaces.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "478fa5c706b2f343c5856fea14ca83f2730c0f26", "filename": "src/vendor/toml/tests/valid/arrays-hetergeneous.json", "status": "removed", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays-hetergeneous.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays-hetergeneous.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays-hetergeneous.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "a246fcf1deb371f8f4452eea08503b23a987fb25", "filename": "src/vendor/toml/tests/valid/arrays-hetergeneous.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays-hetergeneous.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays-hetergeneous.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays-hetergeneous.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "d21920cc3eb41d5058b1fdf7ba0285ce4e620643", "filename": "src/vendor/toml/tests/valid/arrays-nested.json", "status": "removed", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays-nested.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays-nested.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays-nested.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "ce3302249b72dcf5f0d9f7d394390e78bef5932a", "filename": "src/vendor/toml/tests/valid/arrays-nested.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays-nested.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays-nested.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays-nested.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "58aedbccbef1a939e9bef3fbca5d8f5915f126ac", "filename": "src/vendor/toml/tests/valid/arrays.json", "status": "removed", "additions": 0, "deletions": 34, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "c435f57b62c56b4a47fa1cb142a9a172fbe7d2e5", "filename": "src/vendor/toml/tests/valid/arrays.toml", "status": "removed", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Farrays.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "ae368e9492e3538106a3355b9d036f068355fef7", "filename": "src/vendor/toml/tests/valid/bool.json", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fbool.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fbool.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fbool.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "a8a829b34de9bcc694b0886bd82cde6fc40d9dbf", "filename": "src/vendor/toml/tests/valid/bool.toml", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fbool.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fbool.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fbool.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "e69a2e9582395accc3eb9c0dc240df9cbbfd2794", "filename": "src/vendor/toml/tests/valid/comments-everywhere.json", "status": "removed", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fcomments-everywhere.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fcomments-everywhere.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fcomments-everywhere.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "3dca74cade51620fef199de4b45c5cd1d2232367", "filename": "src/vendor/toml/tests/valid/comments-everywhere.toml", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fcomments-everywhere.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fcomments-everywhere.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fcomments-everywhere.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "2ca93ce966faa9995f79032281badbd1213ef9af", "filename": "src/vendor/toml/tests/valid/datetime.json", "status": "removed", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fdatetime.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fdatetime.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fdatetime.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "2e993407d71c49a26a71c27b083956796a570007", "filename": "src/vendor/toml/tests/valid/datetime.toml", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fdatetime.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fdatetime.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fdatetime.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "0967ef424bce6791893e9a57bb952f80fd536e93", "filename": "src/vendor/toml/tests/valid/empty.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fempty.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fempty.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fempty.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "e69de29bb2d1d6434b8b29ae775ad8c2e48c5391", "filename": "src/vendor/toml/tests/valid/empty.toml", "status": "removed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fempty.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fempty.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fempty.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "fb5ac815c9b17dad9c48f8945de136fe3c6ce873", "filename": "src/vendor/toml/tests/valid/example-bom.toml", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-bom.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-bom.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-bom.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "1d9dcb581c22e0ba3b250baa230cef82eb2a0abf", "filename": "src/vendor/toml/tests/valid/example-v0.3.0.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-v0.3.0.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-v0.3.0.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-v0.3.0.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "76aacc31aac95bf616a2ad758d651f7d45cda6ea", "filename": "src/vendor/toml/tests/valid/example-v0.3.0.toml", "status": "removed", "additions": 0, "deletions": 182, "changes": 182, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-v0.3.0.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-v0.3.0.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-v0.3.0.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "d5cac343a818c304a0522a300b2f0df248122a1c", "filename": "src/vendor/toml/tests/valid/example-v0.4.0.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-v0.4.0.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-v0.4.0.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-v0.4.0.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "ffbcce0d9dfb13c1ceb2599fed11778d73de959f", "filename": "src/vendor/toml/tests/valid/example-v0.4.0.toml", "status": "removed", "additions": 0, "deletions": 235, "changes": 235, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-v0.4.0.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-v0.4.0.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample-v0.4.0.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "48aa90784a4ebfac654c8288a86d65fbf842dfcd", "filename": "src/vendor/toml/tests/valid/example.json", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "8cb02e01b03485b173b5aa3eb945c8fc95fb4b19", "filename": "src/vendor/toml/tests/valid/example.toml", "status": "removed", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "3249a974fba77cffe449864a1b84da40f2d268af", "filename": "src/vendor/toml/tests/valid/example2.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample2.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample2.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample2.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "bc12c990160499e2dc6bc02ef3fd5064c9853bd5", "filename": "src/vendor/toml/tests/valid/example2.toml", "status": "removed", "additions": 0, "deletions": 47, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample2.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample2.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fexample2.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "b8a2e97581ff06720ca20e97dff402af212966a1", "filename": "src/vendor/toml/tests/valid/float.json", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Ffloat.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Ffloat.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Ffloat.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "7c528d200c3718edc1bb9df5f7858274fc932804", "filename": "src/vendor/toml/tests/valid/float.toml", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Ffloat.toml", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Ffloat.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Ffloat.toml?ref=55013cddefbd8e2616370a72df785c20880189ce"}, {"sha": "9762e58ef3563ed5d63a51966f7bb87257a413f7", "filename": "src/vendor/toml/tests/valid/hard_example.json", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fhard_example.json", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fhard_example.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvendor%2Ftoml%2Ftests%2Fvalid%2Fhard_example.json?ref=55013cddefbd8e2616370a72df785c20880189ce"}]}