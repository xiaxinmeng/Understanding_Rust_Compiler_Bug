{"sha": "d498e6d6971575714353f11aa4d3e63a9d2030b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ0OThlNmQ2OTcxNTc1NzE0MzUzZjExYWE0ZDNlNjNhOWQyMDMwYjI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-08-07T12:28:28Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-08-10T11:19:22Z"}, "message": "Avoid an unnecessary allocation", "tree": {"sha": "804446132e86dc5afe14036eb150e0550fcb0451", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/804446132e86dc5afe14036eb150e0550fcb0451"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d498e6d6971575714353f11aa4d3e63a9d2030b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d498e6d6971575714353f11aa4d3e63a9d2030b2", "html_url": "https://github.com/rust-lang/rust/commit/d498e6d6971575714353f11aa4d3e63a9d2030b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d498e6d6971575714353f11aa4d3e63a9d2030b2/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6681694cb5914073cb2502ee442e7f48f743664f", "url": "https://api.github.com/repos/rust-lang/rust/commits/6681694cb5914073cb2502ee442e7f48f743664f", "html_url": "https://github.com/rust-lang/rust/commit/6681694cb5914073cb2502ee442e7f48f743664f"}], "stats": {"total": 8, "additions": 3, "deletions": 5}, "files": [{"sha": "6ba5f8e09e10270b959d945190e13436810d7619", "filename": "src/archive.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d498e6d6971575714353f11aa4d3e63a9d2030b2/src%2Farchive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d498e6d6971575714353f11aa4d3e63a9d2030b2/src%2Farchive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Farchive.rs?ref=d498e6d6971575714353f11aa4d3e63a9d2030b2", "patch": "@@ -101,22 +101,20 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n         lto: bool,\n         skip_objects: bool,\n     ) -> io::Result<()> {\n-        let obj_start = name.to_owned();\n-\n         self.add_archive(rlib.to_owned(), move |fname: &str| {\n             // Ignore metadata files, no matter the name.\n             if fname == METADATA_FILENAME {\n                 return true;\n             }\n \n             // Don't include Rust objects if LTO is enabled\n-            if lto && fname.starts_with(&obj_start) && fname.ends_with(\".o\") {\n+            if lto && fname.starts_with(name) && fname.ends_with(\".o\") {\n                 return true;\n             }\n \n             // Otherwise if this is *not* a rust object and we're skipping\n             // objects then skip this file\n-            if skip_objects && (!fname.starts_with(&obj_start) || !fname.ends_with(\".o\")) {\n+            if skip_objects && (!fname.starts_with(name) || !fname.ends_with(\".o\")) {\n                 return true;\n             }\n \n@@ -271,7 +269,7 @@ impl<'a> ArchiveBuilder<'a> for ArArchiveBuilder<'a> {\n impl<'a> ArArchiveBuilder<'a> {\n     fn add_archive<F>(&mut self, archive_path: PathBuf, mut skip: F) -> io::Result<()>\n     where\n-        F: FnMut(&str) -> bool + 'static,\n+        F: FnMut(&str) -> bool,\n     {\n         let read_cache = ReadCache::new(std::fs::File::open(&archive_path)?);\n         let archive = ArchiveFile::parse(&read_cache).unwrap();"}]}