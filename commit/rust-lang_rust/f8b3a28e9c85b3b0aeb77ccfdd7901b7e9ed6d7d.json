{"sha": "f8b3a28e9c85b3b0aeb77ccfdd7901b7e9ed6d7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YjNhMjhlOWM4NWIzYjBhZWI3N2NjZmRkNzkwMWI3ZTllZDZkN2Q=", "commit": {"author": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-24T03:03:37Z"}, "committer": {"name": "Joshua Nelson", "email": "jyn514@gmail.com", "date": "2020-11-26T19:13:55Z"}, "message": "Use `Item::from_def_id` for StructField", "tree": {"sha": "2829d9def78b58ee06b997ae5b750d37411432a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2829d9def78b58ee06b997ae5b750d37411432a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8b3a28e9c85b3b0aeb77ccfdd7901b7e9ed6d7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8b3a28e9c85b3b0aeb77ccfdd7901b7e9ed6d7d", "html_url": "https://github.com/rust-lang/rust/commit/f8b3a28e9c85b3b0aeb77ccfdd7901b7e9ed6d7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8b3a28e9c85b3b0aeb77ccfdd7901b7e9ed6d7d/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65ecc481fac7ceced57d973a580d0a7ccbdcb192", "url": "https://api.github.com/repos/rust-lang/rust/commits/65ecc481fac7ceced57d973a580d0a7ccbdcb192", "html_url": "https://github.com/rust-lang/rust/commit/65ecc481fac7ceced57d973a580d0a7ccbdcb192"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "b50f325c07421f793fb6fa3f1af2da0284fc5f0f", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f8b3a28e9c85b3b0aeb77ccfdd7901b7e9ed6d7d/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8b3a28e9c85b3b0aeb77ccfdd7901b7e9ed6d7d/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=f8b3a28e9c85b3b0aeb77ccfdd7901b7e9ed6d7d", "patch": "@@ -1844,15 +1844,13 @@ impl Clean<Item> for ty::VariantDef {\n                 fields: self\n                     .fields\n                     .iter()\n-                    .map(|field| Item {\n-                        source: cx.tcx.def_span(field.did).clean(cx),\n-                        name: Some(field.ident.name.clean(cx)),\n-                        attrs: cx.tcx.get_attrs(field.did).clean(cx),\n-                        visibility: Visibility::Inherited,\n-                        def_id: field.did,\n-                        stability: get_stability(cx, field.did),\n-                        deprecation: get_deprecation(cx, field.did),\n-                        kind: StructFieldItem(cx.tcx.type_of(field.did).clean(cx)),\n+                    .map(|field| {\n+                        let name = Some(field.ident.name);\n+                        let kind = StructFieldItem(cx.tcx.type_of(field.did).clean(cx));\n+                        let what_rustc_thinks =\n+                            Item::from_def_id_and_parts(field.did, name, kind, cx);\n+                        // don't show `pub` for fields, which are always public\n+                        Item { visibility: Visibility::Inherited, ..what_rustc_thinks }\n                     })\n                     .collect(),\n             }),"}]}