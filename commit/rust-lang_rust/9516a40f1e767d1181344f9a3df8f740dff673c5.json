{"sha": "9516a40f1e767d1181344f9a3df8f740dff673c5", "node_id": "C_kwDOAAsO6NoAKDk1MTZhNDBmMWU3NjdkMTE4MTM0NGY5YTNkZjhmNzQwZGZmNjczYzU", "commit": {"author": {"name": "Fridtjof Stoldt", "email": "xFrednet@gmail.com", "date": "2022-04-05T16:23:38Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2022-05-08T15:24:15Z"}, "message": "Fixed typo in docs and correct doc links\n\nCo-authored-by: Philipp Krones <hello@philkrones.com>", "tree": {"sha": "6a7e18960c94adab15fca37048bd7e2c90392d21", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6a7e18960c94adab15fca37048bd7e2c90392d21"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9516a40f1e767d1181344f9a3df8f740dff673c5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEsfZNmu/fmIv8KDcv/Ny/Ka9k1gEFAmJ34J8ACgkQ/Ny/Ka9k\n1gGNYRAAqt52bFX3Tbmx37F5srP/GixSVqrXvVk16UjBzl+g9oGSn0bo7jGumBXY\n/3olQ0uPy9UGmAg3bpxTA4QpIJlZAErOVxRAra5FjiI4Rm89xOGTM/wOF8KwEN3G\nwXAfd1R/pjY6rclhr3SpUC8oHMtABZZUaEODl69rzrw6SsSAFdfh/y/Gh53vHH32\n4j3qTBKF9ZONmlCZYNHSh5qzYaCYImGMCwyUjYXCi2r9Wc+F0Tb+ORkQuUwuid+7\n+J5gFH03sGcyWm1norsfGpZSF6R7yfcJFaULpxnYYc0/4cI9ZJ9jsM4cX7jzcJ27\niaDlzUQXgzJfDp622MfKpQK0LsKelXor5XBmaM4tDV4GwtRj0MRDEdvNQLqz9uhm\n/7Xtb2U4N4wlh+lQjbjeeMlOI9NECmT5sHK58YYyrQsDrf9jjHlOAM+K4WWWuy1+\nD7L9l77hqewWuwP6qX/JdJ4LRVRtTMa0nX9ptt3vt9mHWZQZF7nJylBfj8H9fyXk\nGLGt4VlErP3rRItXG8KeAprVfe3lBU5ALzAREzU0cKQ7QCWuS349aQe3R03ebO8p\n5wf7VIQaY9LwoDGEOircHEO2nm+6HSX9c+D4iIR06DvpncNOrQuNSu5m8rbEE547\nwKVZamyL51gJJhBeWO/KX4dWz8RG2b0FD79PeUjdL/eGgRhPy6s=\n=Kjf+\n-----END PGP SIGNATURE-----", "payload": "tree 6a7e18960c94adab15fca37048bd7e2c90392d21\nparent 897404e1d92de56577c0a7126ba31a66cc67db66\nauthor Fridtjof Stoldt <xFrednet@gmail.com> 1649175818 +0200\ncommitter xFrednet <xFrednet@gmail.com> 1652023455 +0200\n\nFixed typo in docs and correct doc links\n\nCo-authored-by: Philipp Krones <hello@philkrones.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9516a40f1e767d1181344f9a3df8f740dff673c5", "html_url": "https://github.com/rust-lang/rust/commit/9516a40f1e767d1181344f9a3df8f740dff673c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9516a40f1e767d1181344f9a3df8f740dff673c5/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "897404e1d92de56577c0a7126ba31a66cc67db66", "url": "https://api.github.com/repos/rust-lang/rust/commits/897404e1d92de56577c0a7126ba31a66cc67db66", "html_url": "https://github.com/rust-lang/rust/commit/897404e1d92de56577c0a7126ba31a66cc67db66"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "29643eaad992445fe4cac8c506002a4367daf797", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9516a40f1e767d1181344f9a3df8f740dff673c5/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9516a40f1e767d1181344f9a3df8f740dff673c5/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=9516a40f1e767d1181344f9a3df8f740dff673c5", "patch": "@@ -426,10 +426,10 @@ struct HandlerInner {\n \n     future_breakage_diagnostics: Vec<Diagnostic>,\n \n-    /// The [`unstable_expect_diagnostics`] should be empty when this struct is\n+    /// The [`Self::unstable_expect_diagnostics`] should be empty when this struct is\n     /// dropped. However, it can have values if the compilation is stopped early\n     /// or is only partially executed. To avoid ICEs, like in rust#94953 we only\n-    /// check if [`unstable_expect_diagnostics`] is empty, if the expectation ids\n+    /// check if [`Self::unstable_expect_diagnostics`] is empty, if the expectation ids\n     /// have been converted.\n     check_unstable_expect_diagnostics: bool,\n "}, {"sha": "173028cf5c56ba8404dc7c8098f0485eb5a15704", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9516a40f1e767d1181344f9a3df8f740dff673c5/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9516a40f1e767d1181344f9a3df8f740dff673c5/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=9516a40f1e767d1181344f9a3df8f740dff673c5", "patch": "@@ -162,14 +162,14 @@ rustc_queries! {\n     /// to ensure that all expectations can be fulfilled.\n     ///\n     /// This is an extra query to enable other drivers (like rustdoc) to\n-    /// only execute a small subset of the [`analysis`] query, while allowing\n+    /// only execute a small subset of the `analysis` query, while allowing\n     /// lints to be expected. In rustc, this query will be executed as part of\n-    /// the [`analysis`] query and doesn't have to be called a second time.\n+    /// the `analysis` query and doesn't have to be called a second time.\n     ///\n     /// Tools can additionally pass in a tool filter. That will restrict the\n     /// expectations to only trigger for lints starting with the listed tool\n     /// name. This is useful for cases were not all linting code from rustc\n-    /// was called. With the default `none` all registered lints will also\n+    /// was called. With the default `None` all registered lints will also\n     /// be checked for expectation fulfillment.\n     query check_expectations(key: Option<Symbol>) -> () {\n         eval_always"}]}