{"sha": "d5ef528bebbe0d8e350e547316fdc7d7476614d2", "node_id": "C_kwDOAAsO6NoAKGQ1ZWY1MjhiZWJiZTBkOGUzNTBlNTQ3MzE2ZmRjN2Q3NDc2NjE0ZDI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-28T07:04:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-28T07:04:21Z"}, "message": "Auto merge of #100863 - ehuss:sunset-rls, r=Mark-Simulacrum\n\nSunset RLS\n\nThis removes RLS per the plan outlined in https://blog.rust-lang.org/2022/07/01/RLS-deprecation.html. This replaces the `rls` executable with a small program which will display an alert telling the user that RLS is no longer available.\n\nAn overview of the changes here:\n* Removes the rls submodule and replaces it with a small stub program.\n* `rls` is removed from `./x.py install`. I do not think users running `install` will need the stub.\n* `rls` is removed from `./x.py test`, it doesn't have any tests.\n\nOther things of note:\n* I kept `DIST_REQUIRE_ALL_TOOLS` even though it is no longer needed, with the thought that it could be useful in the feature. However, I could remove it if desired.\n* I kept `extra_deps` in `tool_extended` (which allows tools to depend on other things), even though it is no longer needed. This can also be removed if desired.\n* ~~This keeps RLS in the macOS `pkg` installer and the Windows `msi` installer. I kinda lean towards removing it from those, but I'm not sure?~~ RLS has been removed from pkg and msi.\n* This does not remove the analysis component. It is not clear if we should keep this or not. RLS was the primary user, but I think there are a few users that have made tools around it.\n* There will be several followup steps after this PR:\n    * Updating the toolstate repo to remove RLS.\n    * Updating documentation, such as rustc-dev-guide, to remove references to RLS.\n\nThe alert looks like this in VSCode:\n\n<img width=\"989\" alt=\"image\" src=\"https://user-images.githubusercontent.com/43198/185817530-930c5842-24b5-4162-a213-016a25810955.png\">\n\nIn Sublime it looks similar.\n\nI would appreciate if others could help test with other editors such as vim or Emacs.", "tree": {"sha": "604e8bd71a239ada8976ac4c54bd54e883bf0970", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/604e8bd71a239ada8976ac4c54bd54e883bf0970"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d5ef528bebbe0d8e350e547316fdc7d7476614d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d5ef528bebbe0d8e350e547316fdc7d7476614d2", "html_url": "https://github.com/rust-lang/rust/commit/d5ef528bebbe0d8e350e547316fdc7d7476614d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d5ef528bebbe0d8e350e547316fdc7d7476614d2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91f128baf7704a477ab7c499143a160fb069b3ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/91f128baf7704a477ab7c499143a160fb069b3ad", "html_url": "https://github.com/rust-lang/rust/commit/91f128baf7704a477ab7c499143a160fb069b3ad"}, {"sha": "039c9b267a191170601fff8551a4d25992bbac77", "url": "https://api.github.com/repos/rust-lang/rust/commits/039c9b267a191170601fff8551a4d25992bbac77", "html_url": "https://github.com/rust-lang/rust/commit/039c9b267a191170601fff8551a4d25992bbac77"}], "stats": {"total": 822, "additions": 165, "deletions": 657}, "files": [{"sha": "ec1ef041b206812b6780ee67e177e5b6d40b6070", "filename": ".github/workflows/ci.yml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/.github%2Fworkflows%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/.github%2Fworkflows%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2Fworkflows%2Fci.yml?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -431,7 +431,7 @@ jobs:\n             env:\n               RUST_CONFIGURE_ARGS: \"--build=x86_64-pc-windows-msvc --host=aarch64-pc-windows-msvc --enable-full-tools --enable-profiler\"\n               SCRIPT: python x.py dist\n-              DIST_REQUIRE_ALL_TOOLS: 0\n+              DIST_REQUIRE_ALL_TOOLS: 1\n               WINDOWS_SDK_20348_HACK: 1\n             os: windows-latest-xl\n           - name: dist-i686-mingw"}, {"sha": "bc2dd39774154e57094f09cad859b672e6452d2d", "filename": ".gitmodules", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/.gitmodules", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/.gitmodules", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitmodules?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -13,9 +13,6 @@\n [submodule \"src/doc/book\"]\n \tpath = src/doc/book\n \turl = https://github.com/rust-lang/book.git\n-[submodule \"src/tools/rls\"]\n-\tpath = src/tools/rls\n-\turl = https://github.com/rust-lang/rls.git\n [submodule \"src/tools/miri\"]\n \tpath = src/tools/miri\n \turl = https://github.com/rust-lang/miri.git"}, {"sha": "100e9095703105ec758955c2a63227d6e8753589", "filename": "Cargo.lock", "status": "modified", "additions": 22, "deletions": 457, "changes": 479, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -79,7 +79,7 @@ dependencies = [\n  \"maplit\",\n  \"once_cell\",\n  \"tendril\",\n- \"url 2.2.2\",\n+ \"url\",\n ]\n \n [[package]]\n@@ -359,7 +359,7 @@ dependencies = [\n  \"openssl\",\n  \"os_info\",\n  \"pathdiff\",\n- \"percent-encoding 2.1.0\",\n+ \"percent-encoding\",\n  \"pretty_env_logger\",\n  \"rustc-workspace-hack\",\n  \"rustfix\",\n@@ -376,7 +376,7 @@ dependencies = [\n  \"toml_edit\",\n  \"unicode-width\",\n  \"unicode-xid\",\n- \"url 2.2.2\",\n+ \"url\",\n  \"walkdir\",\n  \"winapi\",\n ]\n@@ -462,7 +462,7 @@ dependencies = [\n  \"tar\",\n  \"termcolor\",\n  \"toml_edit\",\n- \"url 2.2.2\",\n+ \"url\",\n  \"winapi\",\n ]\n \n@@ -665,15 +665,15 @@ dependencies = [\n  \"compiletest_rs\",\n  \"derive-new\",\n  \"filetime\",\n- \"futures 0.3.19\",\n+ \"futures\",\n  \"if_chain\",\n  \"itertools\",\n  \"parking_lot 0.12.1\",\n  \"quote\",\n  \"regex\",\n  \"rustc-semver\",\n  \"rustc-workspace-hack\",\n- \"rustc_tools_util 0.2.0\",\n+ \"rustc_tools_util\",\n  \"semver\",\n  \"serde\",\n  \"syn\",\n@@ -718,7 +718,7 @@ dependencies = [\n  \"toml\",\n  \"unicode-normalization\",\n  \"unicode-script\",\n- \"url 2.2.2\",\n+ \"url\",\n ]\n \n [[package]]\n@@ -921,10 +921,10 @@ version = \"0.34.0\"\n dependencies = [\n  \"anyhow\",\n  \"curl\",\n- \"percent-encoding 2.1.0\",\n+ \"percent-encoding\",\n  \"serde\",\n  \"serde_json\",\n- \"url 2.2.2\",\n+ \"url\",\n ]\n \n [[package]]\n@@ -1093,17 +1093,6 @@ dependencies = [\n  \"syn\",\n ]\n \n-[[package]]\n-name = \"derive_more\"\n-version = \"0.99.9\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"298998b1cf6b5b2c8a7b023dfd45821825ce3ba8a8af55c921a0e734e4653f76\"\n-dependencies = [\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n-]\n-\n [[package]]\n name = \"diff\"\n version = \"0.1.13\"\n@@ -1415,7 +1404,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"5fc25a87fa4fd2094bffb06925852034d90a17f0d1e05197d4956d3555752191\"\n dependencies = [\n  \"matches\",\n- \"percent-encoding 2.1.0\",\n+ \"percent-encoding\",\n ]\n \n [[package]]\n@@ -1440,12 +1429,6 @@ version = \"1.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"5f2a4a2034423744d2cc7ca2068453168dcdb82c438419e639a26bd87839c674\"\n \n-[[package]]\n-name = \"fst\"\n-version = \"0.4.5\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d79238883cf0307100b90aba4a755d8051a3182305dfe7f649a1e9dc0517006f\"\n-\n [[package]]\n name = \"futf\"\n version = \"0.1.5\"\n@@ -1456,12 +1439,6 @@ dependencies = [\n  \"new_debug_unreachable\",\n ]\n \n-[[package]]\n-name = \"futures\"\n-version = \"0.1.31\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"3a471a38ef8ed83cd6e40aa59c1ffe17db6855c18e3604d9c4ed8c08ebc28678\"\n-\n [[package]]\n name = \"futures\"\n version = \"0.3.19\"\n@@ -1502,7 +1479,6 @@ dependencies = [\n  \"futures-core\",\n  \"futures-task\",\n  \"futures-util\",\n- \"num_cpus\",\n ]\n \n [[package]]\n@@ -1540,7 +1516,6 @@ version = \"0.3.19\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"d9b5cf40b47a271f77a8b1bec03ca09044d99d2372c0de244e66430761127164\"\n dependencies = [\n- \"futures 0.1.31\",\n  \"futures-channel\",\n  \"futures-core\",\n  \"futures-io\",\n@@ -1661,7 +1636,7 @@ dependencies = [\n  \"log\",\n  \"openssl-probe\",\n  \"openssl-sys\",\n- \"url 2.2.2\",\n+ \"url\",\n ]\n \n [[package]]\n@@ -1673,7 +1648,7 @@ dependencies = [\n  \"curl\",\n  \"git2\",\n  \"log\",\n- \"url 2.2.2\",\n+ \"url\",\n ]\n \n [[package]]\n@@ -1814,17 +1789,6 @@ version = \"2.0.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"3c1ad908cc71012b7bea4d0c53ba96a8cba9962f048fa68d143376143d863b7a\"\n \n-[[package]]\n-name = \"idna\"\n-version = \"0.1.5\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"38f09e0f0b1fb55fdee1f17470ad800da77af5186a1a76c026b679358b7e844e\"\n-dependencies = [\n- \"matches\",\n- \"unicode-bidi\",\n- \"unicode-normalization\",\n-]\n-\n [[package]]\n name = \"idna\"\n version = \"0.2.0\"\n@@ -1979,12 +1943,6 @@ dependencies = [\n  \"libc\",\n ]\n \n-[[package]]\n-name = \"json\"\n-version = \"0.12.4\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"078e285eafdfb6c4b434e0d31e8cfcb5115b651496faca5749b88fafd4f23bfd\"\n-\n [[package]]\n name = \"jsondocck\"\n version = \"0.1.0\"\n@@ -2011,110 +1969,6 @@ dependencies = [\n  \"serde_json\",\n ]\n \n-[[package]]\n-name = \"jsonrpc-client-transports\"\n-version = \"18.0.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"d2b99d4207e2a04fb4581746903c2bb7eb376f88de9c699d0f3e10feeac0cd3a\"\n-dependencies = [\n- \"derive_more\",\n- \"futures 0.3.19\",\n- \"jsonrpc-core\",\n- \"jsonrpc-pubsub\",\n- \"jsonrpc-server-utils\",\n- \"log\",\n- \"parity-tokio-ipc\",\n- \"serde\",\n- \"serde_json\",\n- \"tokio\",\n- \"url 1.7.2\",\n-]\n-\n-[[package]]\n-name = \"jsonrpc-core\"\n-version = \"18.0.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"14f7f76aef2d054868398427f6c54943cf3d1caa9a7ec7d0c38d69df97a965eb\"\n-dependencies = [\n- \"futures 0.3.19\",\n- \"futures-executor\",\n- \"futures-util\",\n- \"log\",\n- \"serde\",\n- \"serde_derive\",\n- \"serde_json\",\n-]\n-\n-[[package]]\n-name = \"jsonrpc-core-client\"\n-version = \"18.0.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b51da17abecbdab3e3d4f26b01c5ec075e88d3abe3ab3b05dc9aa69392764ec0\"\n-dependencies = [\n- \"futures 0.3.19\",\n- \"jsonrpc-client-transports\",\n-]\n-\n-[[package]]\n-name = \"jsonrpc-derive\"\n-version = \"18.0.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"5b939a78fa820cdfcb7ee7484466746a7377760970f6f9c6fe19f9edcc8a38d2\"\n-dependencies = [\n- \"proc-macro-crate\",\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n-]\n-\n-[[package]]\n-name = \"jsonrpc-ipc-server\"\n-version = \"18.0.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"382bb0206323ca7cda3dcd7e245cea86d37d02457a02a975e3378fb149a48845\"\n-dependencies = [\n- \"futures 0.3.19\",\n- \"jsonrpc-core\",\n- \"jsonrpc-server-utils\",\n- \"log\",\n- \"parity-tokio-ipc\",\n- \"parking_lot 0.11.2\",\n- \"tower-service\",\n-]\n-\n-[[package]]\n-name = \"jsonrpc-pubsub\"\n-version = \"18.0.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"240f87695e6c6f62fb37f05c02c04953cf68d6408b8c1c89de85c7a0125b1011\"\n-dependencies = [\n- \"futures 0.3.19\",\n- \"jsonrpc-core\",\n- \"lazy_static\",\n- \"log\",\n- \"parking_lot 0.11.2\",\n- \"rand 0.7.3\",\n- \"serde\",\n-]\n-\n-[[package]]\n-name = \"jsonrpc-server-utils\"\n-version = \"18.0.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"fa4fdea130485b572c39a460d50888beb00afb3e35de23ccd7fad8ff19f0e0d4\"\n-dependencies = [\n- \"bytes\",\n- \"futures 0.3.19\",\n- \"globset\",\n- \"jsonrpc-core\",\n- \"lazy_static\",\n- \"log\",\n- \"tokio\",\n- \"tokio-stream\",\n- \"tokio-util\",\n- \"unicase\",\n-]\n-\n [[package]]\n name = \"kstring\"\n version = \"2.0.0\"\n@@ -2257,30 +2111,6 @@ dependencies = [\n  \"cfg-if 1.0.0\",\n ]\n \n-[[package]]\n-name = \"lsp-codec\"\n-version = \"0.3.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"aa939d0b62476a5a19fb7fcb423a5c6ce8c7e09b851d37531e2fe3e0e6d9d257\"\n-dependencies = [\n- \"bytes\",\n- \"serde_json\",\n- \"tokio-util\",\n-]\n-\n-[[package]]\n-name = \"lsp-types\"\n-version = \"0.60.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"fe3edefcd66dde1f7f1df706f46520a3c93adc5ca4bc5747da6621195e894efd\"\n-dependencies = [\n- \"bitflags\",\n- \"serde\",\n- \"serde_json\",\n- \"serde_repr\",\n- \"url 2.2.2\",\n-]\n-\n [[package]]\n name = \"lzma-sys\"\n version = \"0.1.16\"\n@@ -2445,19 +2275,6 @@ dependencies = [\n  \"adler 1.0.2\",\n ]\n \n-[[package]]\n-name = \"mio\"\n-version = \"0.7.14\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"8067b404fe97c70829f082dec8bcf4f71225d7eaea1d8645349cb76fa06205cc\"\n-dependencies = [\n- \"libc\",\n- \"log\",\n- \"miow\",\n- \"ntapi\",\n- \"winapi\",\n-]\n-\n [[package]]\n name = \"miow\"\n version = \"0.3.7\"\n@@ -2509,15 +2326,6 @@ version = \"0.3.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"61807f77802ff30975e01f4f071c8ba10c022052f98b3294119f3e615d13e5be\"\n \n-[[package]]\n-name = \"ntapi\"\n-version = \"0.3.6\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"3f6bb902e437b6d86e03cce10a7e2af662292c5dfef23b65899ea3ac9354ad44\"\n-dependencies = [\n- \"winapi\",\n-]\n-\n [[package]]\n name = \"num-integer\"\n version = \"0.1.43\"\n@@ -2646,12 +2454,6 @@ dependencies = [\n  \"vcpkg\",\n ]\n \n-[[package]]\n-name = \"ordslice\"\n-version = \"0.3.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"dd20eec3dbe4376829cb7d80ae6ac45e0a766831dca50202ff2d40db46a8a024\"\n-\n [[package]]\n name = \"os_info\"\n version = \"3.5.0\"\n@@ -2717,20 +2519,6 @@ dependencies = [\n  \"unwind\",\n ]\n \n-[[package]]\n-name = \"parity-tokio-ipc\"\n-version = \"0.9.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"9981e32fb75e004cc148f5fb70342f393830e0a4aa62e3cc93b50976218d42b6\"\n-dependencies = [\n- \"futures 0.3.19\",\n- \"libc\",\n- \"log\",\n- \"rand 0.7.3\",\n- \"tokio\",\n- \"winapi\",\n-]\n-\n [[package]]\n name = \"parking_lot\"\n version = \"0.11.2\"\n@@ -2785,12 +2573,6 @@ version = \"0.2.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"8835116a5c179084a830efb3adc117ab007512b535bc1a21c991d3b32a6b44dd\"\n \n-[[package]]\n-name = \"percent-encoding\"\n-version = \"1.0.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"31010dd2e1ac33d5b46a5b413495239882813e0369f8ed8a5e266f173602f831\"\n-\n [[package]]\n name = \"percent-encoding\"\n version = \"2.1.0\"\n@@ -2960,15 +2742,6 @@ dependencies = [\n  \"log\",\n ]\n \n-[[package]]\n-name = \"proc-macro-crate\"\n-version = \"0.1.5\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"1d6ea3c4595b96363c13943497db34af4460fb474a95c43f4446ad341b8c9785\"\n-dependencies = [\n- \"toml\",\n-]\n-\n [[package]]\n name = \"proc-macro-error\"\n version = \"1.0.4\"\n@@ -3078,37 +2851,6 @@ dependencies = [\n  \"proc-macro2\",\n ]\n \n-[[package]]\n-name = \"racer\"\n-version = \"2.2.2\"\n-dependencies = [\n- \"bitflags\",\n- \"derive_more\",\n- \"env_logger 0.7.1\",\n- \"humantime 2.0.1\",\n- \"lazy_static\",\n- \"lazycell\",\n- \"log\",\n- \"racer-cargo-metadata\",\n- \"rls-span\",\n-]\n-\n-[[package]]\n-name = \"racer-cargo-metadata\"\n-version = \"0.1.2\"\n-dependencies = [\n- \"racer-interner\",\n- \"serde\",\n- \"serde_json\",\n-]\n-\n-[[package]]\n-name = \"racer-interner\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"serde\",\n-]\n-\n [[package]]\n name = \"rand\"\n version = \"0.7.3\"\n@@ -3303,67 +3045,9 @@ dependencies = [\n \n [[package]]\n name = \"rls\"\n-version = \"1.41.0\"\n+version = \"2.0.0\"\n dependencies = [\n- \"anyhow\",\n- \"cargo\",\n- \"cargo-util\",\n- \"cargo_metadata 0.14.0\",\n- \"clippy_lints\",\n- \"crossbeam-channel\",\n- \"difference\",\n- \"env_logger 0.9.0\",\n- \"futures 0.3.19\",\n- \"heck\",\n- \"home\",\n- \"itertools\",\n- \"jsonrpc-core\",\n- \"lazy_static\",\n- \"log\",\n- \"lsp-codec\",\n- \"lsp-types\",\n- \"num_cpus\",\n- \"ordslice\",\n- \"racer\",\n- \"rand 0.8.5\",\n- \"rayon\",\n- \"regex\",\n- \"rls-analysis\",\n- \"rls-data\",\n- \"rls-ipc\",\n- \"rls-rustc\",\n- \"rls-span\",\n- \"rls-vfs\",\n  \"rustc-workspace-hack\",\n- \"rustc_tools_util 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)\",\n- \"rustfmt-nightly\",\n- \"serde\",\n- \"serde_derive\",\n- \"serde_ignored\",\n- \"serde_json\",\n- \"tempfile\",\n- \"tokio\",\n- \"tokio-stream\",\n- \"tokio-util\",\n- \"toml\",\n- \"toml_edit\",\n- \"url 2.2.2\",\n- \"walkdir\",\n-]\n-\n-[[package]]\n-name = \"rls-analysis\"\n-version = \"0.18.3\"\n-dependencies = [\n- \"derive-new\",\n- \"env_logger 0.9.0\",\n- \"fst\",\n- \"itertools\",\n- \"json\",\n- \"lazy_static\",\n- \"log\",\n- \"rls-data\",\n- \"rls-span\",\n  \"serde\",\n  \"serde_json\",\n ]\n@@ -3378,33 +3062,6 @@ dependencies = [\n  \"serde\",\n ]\n \n-[[package]]\n-name = \"rls-ipc\"\n-version = \"0.1.0\"\n-dependencies = [\n- \"jsonrpc-core\",\n- \"jsonrpc-core-client\",\n- \"jsonrpc-derive\",\n- \"jsonrpc-ipc-server\",\n- \"rls-data\",\n- \"serde\",\n-]\n-\n-[[package]]\n-name = \"rls-rustc\"\n-version = \"0.6.0\"\n-dependencies = [\n- \"clippy_lints\",\n- \"env_logger 0.9.0\",\n- \"futures 0.3.19\",\n- \"log\",\n- \"rand 0.8.5\",\n- \"rls-data\",\n- \"rls-ipc\",\n- \"serde\",\n- \"tokio\",\n-]\n-\n [[package]]\n name = \"rls-span\"\n version = \"0.5.3\"\n@@ -3414,16 +3071,6 @@ dependencies = [\n  \"serde\",\n ]\n \n-[[package]]\n-name = \"rls-vfs\"\n-version = \"0.8.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ce4b57b25b4330ed5ec14028fc02141e083ddafda327e7eb598dc0569c8c83c9\"\n-dependencies = [\n- \"log\",\n- \"rls-span\",\n-]\n-\n [[package]]\n name = \"rust-demangler\"\n version = \"0.0.1\"\n@@ -3523,21 +3170,13 @@ name = \"rustc-workspace-hack\"\n version = \"1.0.0\"\n dependencies = [\n  \"bstr\",\n- \"byteorder\",\n  \"clap\",\n- \"crossbeam-utils\",\n- \"libc\",\n  \"libz-sys\",\n  \"memchr\",\n- \"proc-macro2\",\n- \"quote\",\n- \"rand_core 0.5.1\",\n  \"regex\",\n- \"serde\",\n  \"serde_json\",\n- \"smallvec\",\n  \"syn\",\n- \"url 2.2.2\",\n+ \"url\",\n  \"winapi\",\n ]\n \n@@ -4540,12 +4179,6 @@ dependencies = [\n name = \"rustc_tools_util\"\n version = \"0.2.0\"\n \n-[[package]]\n-name = \"rustc_tools_util\"\n-version = \"0.2.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"b725dadae9fabc488df69a287f5a99c5eaf5d10853842a8a3dfac52476f544ee\"\n-\n [[package]]\n name = \"rustc_trait_selection\"\n version = \"0.0.0\"\n@@ -4852,18 +4485,18 @@ dependencies = [\n \n [[package]]\n name = \"serde\"\n-version = \"1.0.140\"\n+version = \"1.0.143\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"fc855a42c7967b7c369eb5860f7164ef1f6f81c20c7cc1141f2a604e18723b03\"\n+checksum = \"53e8e5d5b70924f74ff5c6d64d9a5acd91422117c60f48c4e07855238a254553\"\n dependencies = [\n  \"serde_derive\",\n ]\n \n [[package]]\n name = \"serde_derive\"\n-version = \"1.0.140\"\n+version = \"1.0.143\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"6f2122636b9fe3b81f1cb25099fcf2d3f542cdb1d45940d56c713158884a05da\"\n+checksum = \"d3d8e8de557aee63c26b85b947f5e59b690d0454c753f3adeb5cd7835ab88391\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -4881,27 +4514,16 @@ dependencies = [\n \n [[package]]\n name = \"serde_json\"\n-version = \"1.0.82\"\n+version = \"1.0.83\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"82c2c1fdcd807d1098552c5b9a36e425e42e9fbd7c6a37a8425f390f781f7fa7\"\n+checksum = \"38dd04e3c8279e75b31ef29dbdceebfe5ad89f4d0937213c53f7d49d01b3d5a7\"\n dependencies = [\n  \"indexmap\",\n  \"itoa\",\n  \"ryu\",\n  \"serde\",\n ]\n \n-[[package]]\n-name = \"serde_repr\"\n-version = \"0.1.6\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"2dc6b7951b17b051f3210b063f12cc17320e2fe30ae05b0fe2a3abb068551c76\"\n-dependencies = [\n- \"proc-macro2\",\n- \"quote\",\n- \"syn\",\n-]\n-\n [[package]]\n name = \"sha-1\"\n version = \"0.8.2\"\n@@ -4957,15 +4579,6 @@ version = \"1.0.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"42a568c8f2cd051a4d283bd6eb0343ac214c1b0f1ac19f93e1175b2dee38c73d\"\n \n-[[package]]\n-name = \"signal-hook-registry\"\n-version = \"1.2.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ce32ea0c6c56d5eacaeb814fbed9960547021d3edd010ded1425f180536b20ab\"\n-dependencies = [\n- \"libc\",\n-]\n-\n [[package]]\n name = \"similar\"\n version = \"2.1.0\"\n@@ -5350,39 +4963,8 @@ checksum = \"50dae83881bc9b0403dd5b44ea9deed3e939856cc8722d5be37f0d6e5c6d53dd\"\n dependencies = [\n  \"autocfg\",\n  \"bytes\",\n- \"libc\",\n  \"memchr\",\n- \"mio\",\n- \"num_cpus\",\n- \"once_cell\",\n  \"pin-project-lite\",\n- \"signal-hook-registry\",\n- \"winapi\",\n-]\n-\n-[[package]]\n-name = \"tokio-stream\"\n-version = \"0.1.7\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"7b2f3f698253f03119ac0102beaa64f67a67e08074d03a22d18784104543727f\"\n-dependencies = [\n- \"futures-core\",\n- \"pin-project-lite\",\n- \"tokio\",\n-]\n-\n-[[package]]\n-name = \"tokio-util\"\n-version = \"0.6.7\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"1caa0b0c8d94a049db56b5acf8cba99dc0623aab1b26d5b5f5e2d945846b3592\"\n-dependencies = [\n- \"bytes\",\n- \"futures-core\",\n- \"futures-sink\",\n- \"log\",\n- \"pin-project-lite\",\n- \"tokio\",\n ]\n \n [[package]]\n@@ -5413,12 +4995,6 @@ version = \"0.1.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"aa7c7f42dea4b1b99439786f5633aeb9c14c1b53f75e282803c2ec2ad545873c\"\n \n-[[package]]\n-name = \"tower-service\"\n-version = \"0.3.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"360dfd1d6d30e05fda32ace2c8c70e9c0a9da713275777f5a4dbb8a1893930c6\"\n-\n [[package]]\n name = \"tracing\"\n version = \"0.1.29\"\n@@ -5742,27 +5318,16 @@ dependencies = [\n  \"libc\",\n ]\n \n-[[package]]\n-name = \"url\"\n-version = \"1.7.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"dd4e7c0d531266369519a4aa4f399d748bd37043b00bde1e4ff1f60a120b355a\"\n-dependencies = [\n- \"idna 0.1.5\",\n- \"matches\",\n- \"percent-encoding 1.0.1\",\n-]\n-\n [[package]]\n name = \"url\"\n version = \"2.2.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"a507c383b2d33b5fc35d1861e77e6b383d158b2da5e14fe51b83dfedf6fd578c\"\n dependencies = [\n  \"form_urlencoded\",\n- \"idna 0.2.0\",\n+ \"idna\",\n  \"matches\",\n- \"percent-encoding 2.1.0\",\n+ \"percent-encoding\",\n  \"serde\",\n ]\n "}, {"sha": "5753730053f4cb6b29827584397faa7cf8919c2f", "filename": "Cargo.toml", "status": "modified", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -97,21 +97,6 @@ gimli.debug = 0\n miniz_oxide.debug = 0\n object.debug = 0\n \n-# We want the RLS to use the version of Cargo that we've got vendored in this\n-# repository to ensure that the same exact version of Cargo is used by both the\n-# RLS and the Cargo binary itself. The RLS depends on Cargo as a git repository\n-# so we use a `[patch]` here to override the github repository with our local\n-# vendored copy.\n-[patch.\"https://github.com/rust-lang/cargo\"]\n-cargo = { path = \"src/tools/cargo\" }\n-cargo-util = { path = \"src/tools/cargo/crates/cargo-util\" }\n-\n-[patch.\"https://github.com/rust-lang/rustfmt\"]\n-# Similar to Cargo above we want the RLS to use a vendored version of `rustfmt`\n-# that we're shipping as well (to ensure that the rustfmt in RLS and the\n-# `rustfmt` executable are the same exact version).\n-rustfmt-nightly = { path = \"src/tools/rustfmt\" }\n-\n [patch.crates-io]\n # See comments in `src/tools/rustc-workspace-hack/README.md` for what's going on\n # here"}, {"sha": "3d2e6acd5764befcfee38cfe0d122aa8542405c6", "filename": "src/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FREADME.md?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -2,7 +2,7 @@ This directory contains the source code of the rust project, including:\n \n - The test suite\n - The bootstrapping build system\n-- Various submodules for tools, like rustdoc, rls, etc.\n+- Various submodules for tools, like cargo, miri, etc.\n \n For more information on how various parts of the compiler work, see the [rustc dev guide].\n "}, {"sha": "1e764811ea7977129ed794dc9176af204d7a7060", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -650,7 +650,6 @@ impl<'a> Builder<'a> {\n                 test::ReplacePlaceholderTest,\n                 test::Cargotest,\n                 test::Cargo,\n-                test::Rls,\n                 test::RustAnalyzer,\n                 test::ErrorIndex,\n                 test::Distcheck,\n@@ -737,7 +736,6 @@ impl<'a> Builder<'a> {\n                 install::Docs,\n                 install::Std,\n                 install::Cargo,\n-                install::Rls,\n                 install::RustAnalyzer,\n                 install::Rustfmt,\n                 install::RustDemangler,"}, {"sha": "5c085bedf0eef31917d486b437e4c45816e980cd", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -457,7 +457,7 @@ tool_check_step!(Rustdoc, \"src/tools/rustdoc\", \"src/librustdoc\", SourceType::InT\n // rejected.\n tool_check_step!(Clippy, \"src/tools/clippy\", SourceType::InTree);\n tool_check_step!(Miri, \"src/tools/miri\", SourceType::Submodule);\n-tool_check_step!(Rls, \"src/tools/rls\", SourceType::Submodule);\n+tool_check_step!(Rls, \"src/tools/rls\", SourceType::InTree);\n tool_check_step!(Rustfmt, \"src/tools/rustfmt\", SourceType::InTree);\n \n tool_check_step!(Bootstrap, \"src/bootstrap\", SourceType::InTree, false);"}, {"sha": "c01afa1fd3b75c3fbc07f38f4fcac5c158846e35", "filename": "src/bootstrap/dist.rs", "status": "modified", "additions": 4, "deletions": 37, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Fdist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Fdist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdist.rs?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -1018,10 +1018,7 @@ impl Step for Rls {\n \n         let rls = builder\n             .ensure(tool::Rls { compiler, target, extra_features: Vec::new() })\n-            .or_else(|| {\n-                missing_tool(\"RLS\", builder.build.config.missing_tools);\n-                None\n-            })?;\n+            .expect(\"rls expected to build\");\n \n         let mut tarball = Tarball::new(builder, \"rls\", &target.triple);\n         tarball.set_overlay(OverlayKind::RLS);\n@@ -1412,7 +1409,7 @@ impl Step for Extended {\n \n         let xform = |p: &Path| {\n             let mut contents = t!(fs::read_to_string(p));\n-            for tool in &[\"rust-demangler\", \"rls\", \"rust-analyzer\", \"miri\", \"rustfmt\"] {\n+            for tool in &[\"rust-demangler\", \"rust-analyzer\", \"miri\", \"rustfmt\"] {\n                 if !built_tools.contains(tool) {\n                     contents = filter(&contents, tool);\n                 }\n@@ -1452,7 +1449,7 @@ impl Step for Extended {\n             prepare(\"rust-std\");\n             prepare(\"rust-analysis\");\n             prepare(\"clippy\");\n-            for tool in &[\"rust-docs\", \"rust-demangler\", \"rls\", \"rust-analyzer\", \"miri\"] {\n+            for tool in &[\"rust-docs\", \"rust-demangler\", \"rust-analyzer\", \"miri\"] {\n                 if built_tools.contains(tool) {\n                     prepare(tool);\n                 }\n@@ -1488,8 +1485,6 @@ impl Step for Extended {\n                 builder.create_dir(&exe.join(name));\n                 let dir = if name == \"rust-std\" || name == \"rust-analysis\" {\n                     format!(\"{}-{}\", name, target.triple)\n-                } else if name == \"rls\" {\n-                    \"rls-preview\".to_string()\n                 } else if name == \"rust-analyzer\" {\n                     \"rust-analyzer-preview\".to_string()\n                 } else if name == \"clippy\" {\n@@ -1513,7 +1508,7 @@ impl Step for Extended {\n             prepare(\"rust-docs\");\n             prepare(\"rust-std\");\n             prepare(\"clippy\");\n-            for tool in &[\"rust-demangler\", \"rls\", \"rust-analyzer\", \"miri\"] {\n+            for tool in &[\"rust-demangler\", \"rust-analyzer\", \"miri\"] {\n                 if built_tools.contains(tool) {\n                     prepare(tool);\n                 }\n@@ -1597,25 +1592,6 @@ impl Step for Extended {\n                     .arg(\"-out\")\n                     .arg(exe.join(\"StdGroup.wxs\")),\n             );\n-            if built_tools.contains(\"rls\") {\n-                builder.run(\n-                    Command::new(&heat)\n-                        .current_dir(&exe)\n-                        .arg(\"dir\")\n-                        .arg(\"rls\")\n-                        .args(&heat_flags)\n-                        .arg(\"-cg\")\n-                        .arg(\"RlsGroup\")\n-                        .arg(\"-dr\")\n-                        .arg(\"Rls\")\n-                        .arg(\"-var\")\n-                        .arg(\"var.RlsDir\")\n-                        .arg(\"-out\")\n-                        .arg(exe.join(\"RlsGroup.wxs\"))\n-                        .arg(\"-t\")\n-                        .arg(etc.join(\"msi/remove-duplicates.xsl\")),\n-                );\n-            }\n             if built_tools.contains(\"rust-analyzer\") {\n                 builder.run(\n                     Command::new(&heat)\n@@ -1747,9 +1723,6 @@ impl Step for Extended {\n                 if built_tools.contains(\"rust-demangler\") {\n                     cmd.arg(\"-dRustDemanglerDir=rust-demangler\");\n                 }\n-                if built_tools.contains(\"rls\") {\n-                    cmd.arg(\"-dRlsDir=rls\");\n-                }\n                 if built_tools.contains(\"rust-analyzer\") {\n                     cmd.arg(\"-dRustAnalyzerDir=rust-analyzer\");\n                 }\n@@ -1772,9 +1745,6 @@ impl Step for Extended {\n             if built_tools.contains(\"rust-demangler\") {\n                 candle(\"RustDemanglerGroup.wxs\".as_ref());\n             }\n-            if built_tools.contains(\"rls\") {\n-                candle(\"RlsGroup.wxs\".as_ref());\n-            }\n             if built_tools.contains(\"rust-analyzer\") {\n                 candle(\"RustAnalyzerGroup.wxs\".as_ref());\n             }\n@@ -1812,9 +1782,6 @@ impl Step for Extended {\n                 .arg(\"ClippyGroup.wixobj\")\n                 .current_dir(&exe);\n \n-            if built_tools.contains(\"rls\") {\n-                cmd.arg(\"RlsGroup.wixobj\");\n-            }\n             if built_tools.contains(\"rust-analyzer\") {\n                 cmd.arg(\"RustAnalyzerGroup.wixobj\");\n             }"}, {"sha": "d34aa15c515399046a6dcda1f192c7f1d8250b3c", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 0, "deletions": 9, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -182,15 +182,6 @@ install!((self, builder, _config),\n             .expect(\"missing cargo\");\n         install_sh(builder, \"cargo\", self.compiler.stage, Some(self.target), &tarball);\n     };\n-    Rls, alias = \"rls\", Self::should_build(_config), only_hosts: true, {\n-        if let Some(tarball) = builder.ensure(dist::Rls { compiler: self.compiler, target: self.target }) {\n-            install_sh(builder, \"rls\", self.compiler.stage, Some(self.target), &tarball);\n-        } else {\n-            builder.info(\n-                &format!(\"skipping Install RLS stage{} ({})\", self.compiler.stage, self.target),\n-            );\n-        }\n-    };\n     RustAnalyzer, alias = \"rust-analyzer\", Self::should_build(_config), only_hosts: true, {\n         if let Some(tarball) =\n             builder.ensure(dist::RustAnalyzer { compiler: self.compiler, target: self.target })"}, {"sha": "30ea1c20b31b9c7e2fd04f0bac0626b89c79f770", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -273,7 +273,6 @@ pub struct Build {\n     bootstrap_out: PathBuf,\n     rust_info: channel::GitInfo,\n     cargo_info: channel::GitInfo,\n-    rls_info: channel::GitInfo,\n     rust_analyzer_info: channel::GitInfo,\n     clippy_info: channel::GitInfo,\n     miri_info: channel::GitInfo,\n@@ -407,7 +406,6 @@ impl Build {\n         let ignore_git = config.ignore_git;\n         let rust_info = channel::GitInfo::new(ignore_git, &src);\n         let cargo_info = channel::GitInfo::new(ignore_git, &src.join(\"src/tools/cargo\"));\n-        let rls_info = channel::GitInfo::new(ignore_git, &src.join(\"src/tools/rls\"));\n         let rust_analyzer_info =\n             channel::GitInfo::new(ignore_git, &src.join(\"src/tools/rust-analyzer\"));\n         let clippy_info = channel::GitInfo::new(ignore_git, &src.join(\"src/tools/clippy\"));\n@@ -485,7 +483,6 @@ impl Build {\n \n             rust_info,\n             cargo_info,\n-            rls_info,\n             rust_analyzer_info,\n             clippy_info,\n             miri_info,"}, {"sha": "e30067a5cbe06330e1f4b79332befe128ad846a9", "filename": "src/bootstrap/tarball.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Ftarball.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Ftarball.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftarball.rs?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -50,11 +50,7 @@ impl OverlayKind {\n             OverlayKind::RustDemangler => {\n                 &[\"src/tools/rust-demangler/README.md\", \"LICENSE-APACHE\", \"LICENSE-MIT\"]\n             }\n-            OverlayKind::RLS => &[\n-                \"src/tools/rls/README.md\",\n-                \"src/tools/rls/LICENSE-APACHE\",\n-                \"src/tools/rls/LICENSE-MIT\",\n-            ],\n+            OverlayKind::RLS => &[\"src/tools/rls/README.md\", \"LICENSE-APACHE\", \"LICENSE-MIT\"],\n             OverlayKind::RustAnalyzer => &[\n                 \"src/tools/rust-analyzer/README.md\",\n                 \"src/tools/rust-analyzer/LICENSE-APACHE\",\n@@ -78,7 +74,7 @@ impl OverlayKind {\n             OverlayKind::Rustfmt => {\n                 builder.rustfmt_info.version(builder, &builder.release_num(\"rustfmt\"))\n             }\n-            OverlayKind::RLS => builder.rls_info.version(builder, &builder.release_num(\"rls\")),\n+            OverlayKind::RLS => builder.release(&builder.release_num(\"rls\")),\n             OverlayKind::RustAnalyzer => builder\n                 .rust_analyzer_info\n                 .version(builder, &builder.release_num(\"rust-analyzer/crates/rust-analyzer\")),"}, {"sha": "f1c2a21de59f7fe39b03ca1df7715100c3683b31", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 0, "deletions": 51, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -299,57 +299,6 @@ impl Step for Cargo {\n     }\n }\n \n-#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n-pub struct Rls {\n-    stage: u32,\n-    host: TargetSelection,\n-}\n-\n-impl Step for Rls {\n-    type Output = ();\n-    const ONLY_HOSTS: bool = true;\n-\n-    fn should_run(run: ShouldRun<'_>) -> ShouldRun<'_> {\n-        run.path(\"src/tools/rls\")\n-    }\n-\n-    fn make_run(run: RunConfig<'_>) {\n-        run.builder.ensure(Rls { stage: run.builder.top_stage, host: run.target });\n-    }\n-\n-    /// Runs `cargo test` for the rls.\n-    fn run(self, builder: &Builder<'_>) {\n-        let stage = self.stage;\n-        let host = self.host;\n-        let compiler = builder.compiler(stage, host);\n-\n-        let build_result =\n-            builder.ensure(tool::Rls { compiler, target: self.host, extra_features: Vec::new() });\n-        if build_result.is_none() {\n-            eprintln!(\"failed to test rls: could not build\");\n-            return;\n-        }\n-\n-        let mut cargo = tool::prepare_tool_cargo(\n-            builder,\n-            compiler,\n-            Mode::ToolRustc,\n-            host,\n-            \"test\",\n-            \"src/tools/rls\",\n-            SourceType::Submodule,\n-            &[],\n-        );\n-\n-        cargo.add_rustc_lib_path(builder, compiler);\n-        cargo.arg(\"--\").args(builder.config.cmd.test_args());\n-\n-        if try_run(builder, &mut cargo.into()) {\n-            builder.save_toolstate(\"rls\", ToolState::TestPass);\n-        }\n-    }\n-}\n-\n #[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]\n pub struct RustAnalyzer {\n     stage: u32,"}, {"sha": "c3b04a9bbce3f98327b0607c2517476bad70e075", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -857,14 +857,7 @@ tool_extended!((self, builder),\n     Clippy, \"src/tools/clippy\", \"clippy-driver\", stable=true, in_tree=true, {};\n     Miri, \"src/tools/miri\", \"miri\", stable=false, {};\n     CargoMiri, \"src/tools/miri/cargo-miri\", \"cargo-miri\", stable=false, {};\n-    Rls, \"src/tools/rls\", \"rls\", stable=true, {\n-        builder.ensure(Clippy {\n-            compiler: self.compiler,\n-            target: self.target,\n-            extra_features: Vec::new(),\n-        });\n-        self.extra_features.push(\"clippy\".to_owned());\n-    };\n+    Rls, \"src/tools/rls\", \"rls\", stable=true, {};\n     // FIXME: tool_std is not quite right, we shouldn't allow nightly features.\n     // But `builder.cargo` doesn't know how to handle ToolBootstrap in stages other than 0,\n     // and this is close enough for now."}, {"sha": "f3a6759ab846b7499d372be231c925f8dcd391a0", "filename": "src/bootstrap/toolstate.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Ftoolstate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fbootstrap%2Ftoolstate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftoolstate.rs?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -69,7 +69,6 @@ static STABLE_TOOLS: &[(&str, &str)] = &[\n     (\"reference\", \"src/doc/reference\"),\n     (\"rust-by-example\", \"src/doc/rust-by-example\"),\n     (\"edition-guide\", \"src/doc/edition-guide\"),\n-    (\"rls\", \"src/tools/rls\"),\n ];\n \n // These tools are permitted to not build on the beta/stable channels."}, {"sha": "0fb8f41a7ec66e7258be575819d721dcdee1853d", "filename": "src/ci/docker/host-x86_64/x86_64-gnu-tools/checktools.sh", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fchecktools.sh", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fchecktools.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fhost-x86_64%2Fx86_64-gnu-tools%2Fchecktools.sh?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -14,7 +14,6 @@ python3 \"$X_PY\" test --stage 2 --no-fail-fast \\\n     src/doc/rust-by-example \\\n     src/doc/embedded-book \\\n     src/doc/edition-guide \\\n-    src/tools/rls \\\n     src/tools/miri \\\n \n set -e"}, {"sha": "6e4b0b0c2c3f1a97ff04afe50f53de77d8b73102", "filename": "src/ci/github-actions/ci.yml", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fci%2Fgithub-actions%2Fci.yml", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fci%2Fgithub-actions%2Fci.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fgithub-actions%2Fci.yml?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -676,8 +676,7 @@ jobs:\n                 --enable-full-tools\n                 --enable-profiler\n               SCRIPT: python x.py dist\n-              # RLS does not build for aarch64-pc-windows-msvc. See rust-lang/rls#1693\n-              DIST_REQUIRE_ALL_TOOLS: 0\n+              DIST_REQUIRE_ALL_TOOLS: 1\n               # Hack around this SDK version, because it doesn't work with clang.\n               # See https://github.com/rust-lang/rust/issues/88796\n               WINDOWS_SDK_20348_HACK: 1"}, {"sha": "0aa0784e5445bff50f8f12f757cdbcf7046b37c9", "filename": "src/etc/installer/msi/rust.wxs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fmsi%2Frust.wxs?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -170,10 +170,6 @@\n                     <Directory Id=\"Docs\" Name=\".\" />\n                     <Directory Id=\"Cargo\" Name=\".\" />\n                     <Directory Id=\"Std\" Name=\".\" />\n-                    <!-- tool-rls-start -->\n-                    <Directory Id=\"Rls\" Name=\".\" />\n-                    <Directory Id=\"Analysis\" Name=\".\" />\n-                    <!-- tool-rls-end -->\n                 </Directory>\n             </Directory>\n \n@@ -277,16 +273,6 @@\n                  <ComponentRef Id=\"PathEnvPerMachine\" />\n                  <ComponentRef Id=\"PathEnvPerUser\" />\n         </Feature>\n-        <!-- tool-rls-start -->\n-        <Feature Id=\"RLS\"\n-                 Title=\"RLS, the Rust Language Server\"\n-                 Display=\"7\"\n-                 Level=\"2\"\n-                 AllowAdvertise=\"no\">\n-                 <ComponentGroupRef Id=\"RlsGroup\" />\n-                 <ComponentGroupRef Id=\"AnalysisGroup\" />\n-        </Feature>\n-        <!-- tool-rls-end -->\n \n         <UIRef Id=\"RustUI\" />\n     </Product>"}, {"sha": "64f6bab9bb5f183e23f84ff8fa8e736aa494bfec", "filename": "src/etc/installer/pkg/Distribution.xml", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fetc%2Finstaller%2Fpkg%2FDistribution.xml", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Fetc%2Finstaller%2Fpkg%2FDistribution.xml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Finstaller%2Fpkg%2FDistribution.xml?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -16,9 +16,6 @@\n       <line choice=\"rust-std\"/>\n       <line choice=\"cargo\"/>\n       <line choice=\"rust-docs\"/>\n-      <!-- tool-rls-start -->\n-      <line choice=\"rls\"/>\n-      <!-- tool-rls-end -->\n       </line>\n       <line choice=\"uninstall\" />\n     </choices-outline>\n@@ -64,24 +61,10 @@\n         >\n         <pkg-ref id=\"org.rust-lang.rust-docs\"/>\n     </choice>\n-    <!-- tool-rls-start -->\n-    <choice id=\"rls\" visible=\"true\"\n-        title=\"RLS\" description=\"RLS, the Rust Language Server\"\n-        selected=\"(!choices.uninstall.selected &amp;&amp; choices['rls'].selected) || (choices.uninstall.selected &amp;&amp; choices.install.selected)\"\n-        start_selected=\"false\"\n-        >\n-        <pkg-ref id=\"org.rust-lang.rls\"/>\n-        <pkg-ref id=\"org.rust-lang.rust-analysis\"/>\n-    </choice>\n-    <!-- tool-rls-end -->\n     <pkg-ref id=\"org.rust-lang.rustc\" version=\"0\" onConclusion=\"none\">rustc.pkg</pkg-ref>\n     <pkg-ref id=\"org.rust-lang.cargo\" version=\"0\" onConclusion=\"none\">cargo.pkg</pkg-ref>\n     <pkg-ref id=\"org.rust-lang.rust-docs\" version=\"0\" onConclusion=\"none\">rust-docs.pkg</pkg-ref>\n     <pkg-ref id=\"org.rust-lang.rust-std\" version=\"0\" onConclusion=\"none\">rust-std.pkg</pkg-ref>\n-    <!-- tool-rls-start -->\n-    <pkg-ref id=\"org.rust-lang.rls\" version=\"0\" onConclusion=\"none\">rls.pkg</pkg-ref>\n-    <!-- tool-rls-end -->\n-    <pkg-ref id=\"org.rust-lang.rust-analysis\" version=\"0\" onConclusion=\"none\">rust-analysis.pkg</pkg-ref>\n     <pkg-ref id=\"org.rust-lang.uninstall\" version=\"0\" onConclusion=\"none\">uninstall.pkg</pkg-ref>\n     <background file=\"rust-logo.png\" mime-type=\"image/png\"\n                 alignment=\"bottomleft\"/>"}, {"sha": "c0cef8f7b0a0103f30622215ffb7341dee25b389", "filename": "src/tools/publish_toolstate.py", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Fpublish_toolstate.py", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Fpublish_toolstate.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fpublish_toolstate.py?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -31,7 +31,6 @@\n # read privileges on it). CI will fail otherwise.\n MAINTAINERS = {\n     'miri': {'oli-obk', 'RalfJung'},\n-    'rls': {'Xanewok'},\n     'book': {'carols10cents'},\n     'nomicon': {'frewsxcv', 'Gankra', 'JohnTitor'},\n     'reference': {'Havvy', 'matthewjasper', 'ehuss'},\n@@ -43,7 +42,6 @@\n \n LABELS = {\n     'miri': ['A-miri', 'C-bug'],\n-    'rls': ['A-rls', 'C-bug'],\n     'book': ['C-bug'],\n     'nomicon': ['C-bug'],\n     'reference': ['C-bug'],\n@@ -55,7 +53,6 @@\n \n REPOS = {\n     'miri': 'https://github.com/rust-lang/miri',\n-    'rls': 'https://github.com/rust-lang/rls',\n     'book': 'https://github.com/rust-lang/book',\n     'nomicon': 'https://github.com/rust-lang/nomicon',\n     'reference': 'https://github.com/rust-lang/reference',"}, {"sha": "4d8b0a19986a4daab37287a5b5fe2da0775d1873", "filename": "src/tools/rls", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frls?ref=91f128baf7704a477ab7c499143a160fb069b3ad", "patch": "@@ -1 +0,0 @@\n-Subproject commit 4d8b0a19986a4daab37287a5b5fe2da0775d1873"}, {"sha": "92b50bf4cec3abf58d7cd85fec9a5e9938bc438b", "filename": "src/tools/rls/Cargo.toml", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frls%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frls%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frls%2FCargo.toml?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -0,0 +1,13 @@\n+[package]\n+name = \"rls\"\n+version = \"2.0.0\"\n+edition = \"2021\"\n+license = \"Apache-2.0/MIT\"\n+\n+[dependencies]\n+serde = { version = \"1.0.143\", features = [\"derive\"] }\n+serde_json = \"1.0.83\"\n+# A noop dependency that changes in the Rust repository, it's a bit of a hack.\n+# See the `src/tools/rustc-workspace-hack/README.md` file in `rust-lang/rust`\n+# for more information.\n+rustc-workspace-hack = \"1.0.0\""}, {"sha": "43c331c413f5cafbd41f6ba98b5d3adf4f1f3674", "filename": "src/tools/rls/README.md", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frls%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frls%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frls%2FREADME.md?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -0,0 +1,6 @@\n+# RLS Stub\n+\n+RLS has been replaced with [rust-analyzer](https://rust-analyzer.github.io/).\n+\n+This directory contains a stub which replaces RLS with a simple LSP server\n+which only displays an alert to the user that RLS is no longer available."}, {"sha": "f96f1325d9636810893877adf186053fa3393c64", "filename": "src/tools/rls/src/main.rs", "status": "added", "additions": 101, "deletions": 0, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frls%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frls%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frls%2Fsrc%2Fmain.rs?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -0,0 +1,101 @@\n+//! RLS stub.\n+//!\n+//! This is a small stub that replaces RLS to alert the user that RLS is no\n+//! longer available.\n+\n+use serde::Deserialize;\n+use std::error::Error;\n+use std::io::BufRead;\n+use std::io::Write;\n+\n+const ALERT_MSG: &str = \"\\\n+RLS is no longer available as of Rust 1.65.\n+Consider migrating to rust-analyzer instead.\n+See https://rust-analyzer.github.io/ for installation instructions.\n+\";\n+\n+fn main() {\n+    if let Err(e) = run() {\n+        eprintln!(\"error: {e}\");\n+        std::process::exit(1);\n+    }\n+}\n+\n+#[derive(Deserialize)]\n+struct Message {\n+    method: Option<String>,\n+}\n+\n+fn run() -> Result<(), Box<dyn Error>> {\n+    let mut stdin = std::io::stdin().lock();\n+    let mut stdout = std::io::stdout().lock();\n+\n+    let init = read_message(&mut stdin)?;\n+    if init.method.as_deref() != Some(\"initialize\") {\n+        return Err(format!(\"expected initialize, got {:?}\", init.method).into());\n+    }\n+    // No response, the LSP specification says that `showMessageRequest` may\n+    // be posted before during this phase.\n+\n+    // message_type 1 is \"Error\"\n+    let alert = serde_json::json!({\n+        \"jsonrpc\": \"2.0\",\n+        \"id\": 1,\n+        \"method\": \"window/showMessageRequest\",\n+        \"params\": {\n+            \"message_type\": \"1\",\n+            \"message\": ALERT_MSG\n+        }\n+    });\n+    write_message_raw(&mut stdout, serde_json::to_string(&alert).unwrap())?;\n+\n+    loop {\n+        let message = read_message(&mut stdin)?;\n+        if message.method.as_deref() == Some(\"shutdown\") {\n+            std::process::exit(0);\n+        }\n+    }\n+}\n+\n+fn read_message_raw<R: BufRead>(reader: &mut R) -> Result<String, Box<dyn Error>> {\n+    let mut content_length: usize = 0;\n+\n+    // Read headers.\n+    loop {\n+        let mut line = String::new();\n+        reader.read_line(&mut line)?;\n+        if line.is_empty() {\n+            return Err(\"remote disconnected\".into());\n+        }\n+        if line == \"\\r\\n\" {\n+            break;\n+        }\n+        if line.to_lowercase().starts_with(\"content-length:\") {\n+            let value = &line[15..].trim();\n+            content_length = usize::from_str_radix(value, 10)?;\n+        }\n+    }\n+    if content_length == 0 {\n+        return Err(\"no content-length\".into());\n+    }\n+\n+    let mut buffer = vec![0; content_length];\n+    reader.read_exact(&mut buffer)?;\n+    let content = String::from_utf8(buffer)?;\n+\n+    Ok(content)\n+}\n+\n+fn read_message<R: BufRead>(reader: &mut R) -> Result<Message, Box<dyn Error>> {\n+    let m = read_message_raw(reader)?;\n+    match serde_json::from_str(&m) {\n+        Ok(m) => Ok(m),\n+        Err(e) => Err(format!(\"failed to parse message {m}\\n{e}\").into()),\n+    }\n+}\n+\n+fn write_message_raw<W: Write>(mut writer: W, output: String) -> Result<(), Box<dyn Error>> {\n+    write!(writer, \"Content-Length: {}\\r\\n\\r\\n{}\", output.len(), output)?;\n+    writer.flush()?;\n+    Ok(())\n+}"}, {"sha": "3c982b261271d7e7d38fb62b44b85bb6e62b90bc", "filename": "src/tools/rustc-workspace-hack/Cargo.toml", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frustc-workspace-hack%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frustc-workspace-hack%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustc-workspace-hack%2FCargo.toml?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -24,6 +24,7 @@ features = [\n   \"errhandlingapi\",\n   \"evntrace\",\n   \"fibersapi\",\n+  \"handleapi\",\n   \"in6addr\",\n   \"inaddr\",\n   \"ioapiset\",\n@@ -72,25 +73,17 @@ features = [\n \n [dependencies]\n bstr = { version = \"0.2.17\", features = [\"default\"] }\n-byteorder = { version = \"1\", features = ['default', 'std'] }\n clap = { version = \"3.1.1\", features = [\"derive\", \"clap_derive\"]}\n curl-sys = { version = \"0.4.13\", features = [\"http2\", \"libnghttp2-sys\"], optional = true }\n-crossbeam-utils = { version = \"0.8.0\", features = [\"nightly\"] }\n-libc = { version = \"0.2.79\", features = [\"align\"] }\n # Ensure default features of libz-sys, which are disabled in some scenarios.\n libz-sys = { version = \"1.1.2\" }\n # The only user of memchr's deprecated `use_std` feature is `combine`, so this can be\n # removed if/when https://github.com/Marwes/combine/pull/348 is merged and released.\n memchr = { version = \"2.5\", features = [\"std\", \"use_std\"] }\n # Ensure default features of regex, which are disabled in some scenarios.\n regex = { version = \"1.5.6\" }\n-proc-macro2 = { version = \"1\", features = [\"default\"] }\n-quote = { version = \"1\", features = [\"default\"] }\n-rand_core_0_5 = { package = \"rand_core\", version = \"0.5.1\", features = [\"getrandom\", \"alloc\", \"std\"] }\n-serde = { version = \"1.0.82\", features = ['derive'] }\n serde_json = { version = \"1.0.31\", features = [\"raw_value\", \"unbounded_depth\"] }\n-smallvec = { version = \"1.8.1\", features = ['union', 'may_dangle'] }\n-syn = { version = \"1\", features = ['fold', 'full', 'extra-traits', 'visit', 'visit-mut'] }\n+syn = { version = \"1\", features = ['full', 'visit'] }\n url = { version = \"2.0\", features = ['serde'] }\n \n [target.'cfg(not(windows))'.dependencies]"}, {"sha": "3c61470358ba7df40406b8d05a0d152bae0c8ec8", "filename": "src/tools/rustc-workspace-hack/README.md", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frustc-workspace-hack%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frustc-workspace-hack%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustc-workspace-hack%2FREADME.md?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -2,18 +2,18 @@\n \n This crate is a bit of a hack to make workspaces in rustc work a bit better.\n The rationale for this existence is a bit subtle, but the general idea is that\n-we want commands like `./x.py build src/tools/{rls,clippy,cargo}` to share as\n+we want commands like `./x.py build src/tools/{clippy,cargo}` to share as\n many dependencies as possible.\n \n Each invocation is a different invocation of Cargo, however. Each time Cargo\n runs a build it will re-resolve the dependency graph, notably selecting\n different features sometimes for each build.\n \n-For example, let's say there's a very deep dependency like `num-traits` in each\n-of these builds. For Cargo the `num-traits`'s `default` feature is turned off.\n-In RLS, however, the `default` feature is turned. This means that building Cargo\n-and then the RLS will actually build Cargo twice (as a transitive dependency\n-changed). This is bad!\n+For example, let's say there's a very deep dependency like `winapi` in each of\n+these builds. For Cargo, `winapi` has 33 features enabled. In Clippy, however,\n+`winapi` has 22 features enabled. This means that building Cargo and then the\n+Clippy will actually build winapi twice, which in turn will build duplicates\n+of everything that depends on `winapi`. This is bad!\n \n The goal of this crate is to solve this problem and ensure that the resolved\n dependency graph for all of these tools is the same in the various subsets of"}, {"sha": "f763b5714ce2c746a43fc33b82fbc8a9c723b311", "filename": "src/tools/rustfmt/Processes.md", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frustfmt%2FProcesses.md", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frustfmt%2FProcesses.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2FProcesses.md?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -51,7 +51,3 @@ git tag -s v1.2.3 -m \"Release 1.2.3\"\n `cargo publish`\n \n ## 5. Create a PR to rust-lang/rust to update the rustfmt submodule\n-\n-Note that if you are updating `rustc-ap-*` crates, then you need to update **every** submodules in the rust-lang/rust repository that depend on the crates to use the same version of those.\n-\n-As of 2019/05, there are two such crates: `rls` and `racer` (`racer` depends on `rustc-ap-syntax` and `rls` depends on `racer`, and `rls` is one of submodules of the rust-lang/rust repository)."}, {"sha": "0f9652aecf9c2c9642d7cd31ba3197b3a9eff66a", "filename": "src/tools/rustfmt/README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frustfmt%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frustfmt%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2FREADME.md?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -135,7 +135,7 @@ completed without error (whether or not changes were made).\n * [Emacs](https://github.com/rust-lang/rust-mode)\n * [Sublime Text 3](https://packagecontrol.io/packages/RustFmt)\n * [Atom](atom.md)\n-* Visual Studio Code using [vscode-rust](https://github.com/editor-rs/vscode-rust), [vsc-rustfmt](https://github.com/Connorcpu/vsc-rustfmt) or [rls_vscode](https://github.com/jonathandturner/rls_vscode) through RLS.\n+* [Visual Studio Code](https://marketplace.visualstudio.com/items?itemName=rust-lang.rust-analyzer)\n * [IntelliJ or CLion](intellij.md)\n \n "}, {"sha": "c7e3a991a5f0352e4f3d0876d49f83776ded57c8", "filename": "src/tools/rustfmt/atom.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frustfmt%2Fatom.md", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Frustfmt%2Fatom.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustfmt%2Fatom.md?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -1,8 +1,8 @@\n # Running Rustfmt from Atom\n \n-## RLS\n+## rust-analyzer\n \n-Rustfmt is included with the Rust Language Server, itself provided by [ide-rust](https://atom.io/packages/ide-rust).\n+Rustfmt can be utilized from [rust-analyzer](https://rust-analyzer.github.io/) which is provided by [ide-rust](https://atom.io/packages/ide-rust).\n \n `apm install ide-rust`\n "}, {"sha": "5770bb7bc33cebfc1ad4610aa0d2871ea79e356d", "filename": "src/tools/tidy/src/deps.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d5ef528bebbe0d8e350e547316fdc7d7476614d2/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fdeps.rs?ref=d5ef528bebbe0d8e350e547316fdc7d7476614d2", "patch": "@@ -31,8 +31,7 @@ const EXCEPTIONS: &[(&str, &str)] = &[\n     (\"mdbook\", \"MPL-2.0\"),            // mdbook\n     (\"openssl\", \"Apache-2.0\"),        // cargo, mdbook\n     (\"colored\", \"MPL-2.0\"),           // rustfmt\n-    (\"ordslice\", \"Apache-2.0\"),       // rls\n-    (\"ryu\", \"Apache-2.0 OR BSL-1.0\"), // rls/cargo/... (because of serde)\n+    (\"ryu\", \"Apache-2.0 OR BSL-1.0\"), // cargo/... (because of serde)\n     (\"bytesize\", \"Apache-2.0\"),       // cargo\n     (\"im-rc\", \"MPL-2.0+\"),            // cargo\n     (\"sized-chunks\", \"MPL-2.0+\"),     // cargo via im-rc"}]}