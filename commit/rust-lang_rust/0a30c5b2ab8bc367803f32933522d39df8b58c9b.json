{"sha": "0a30c5b2ab8bc367803f32933522d39df8b58c9b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMzBjNWIyYWI4YmMzNjc4MDNmMzI5MzM1MjJkMzlkZjhiNThjOWI=", "commit": {"author": {"name": "Violet", "email": "violet@geeklint.com", "date": "2021-03-27T18:38:43Z"}, "committer": {"name": "Violet", "email": "violet@geeklint.com", "date": "2021-03-27T18:38:43Z"}, "message": "revert rustdoc links in core to use #method. because they link to alloc, which may not be available", "tree": {"sha": "8c740393779601594ae0a4f5d2805244bea0c5a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c740393779601594ae0a4f5d2805244bea0c5a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a30c5b2ab8bc367803f32933522d39df8b58c9b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a30c5b2ab8bc367803f32933522d39df8b58c9b", "html_url": "https://github.com/rust-lang/rust/commit/0a30c5b2ab8bc367803f32933522d39df8b58c9b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a30c5b2ab8bc367803f32933522d39df8b58c9b/comments", "author": {"login": "geeklint", "id": 2838446, "node_id": "MDQ6VXNlcjI4Mzg0NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2838446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geeklint", "html_url": "https://github.com/geeklint", "followers_url": "https://api.github.com/users/geeklint/followers", "following_url": "https://api.github.com/users/geeklint/following{/other_user}", "gists_url": "https://api.github.com/users/geeklint/gists{/gist_id}", "starred_url": "https://api.github.com/users/geeklint/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geeklint/subscriptions", "organizations_url": "https://api.github.com/users/geeklint/orgs", "repos_url": "https://api.github.com/users/geeklint/repos", "events_url": "https://api.github.com/users/geeklint/events{/privacy}", "received_events_url": "https://api.github.com/users/geeklint/received_events", "type": "User", "site_admin": false}, "committer": {"login": "geeklint", "id": 2838446, "node_id": "MDQ6VXNlcjI4Mzg0NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/2838446?v=4", "gravatar_id": "", "url": "https://api.github.com/users/geeklint", "html_url": "https://github.com/geeklint", "followers_url": "https://api.github.com/users/geeklint/followers", "following_url": "https://api.github.com/users/geeklint/following{/other_user}", "gists_url": "https://api.github.com/users/geeklint/gists{/gist_id}", "starred_url": "https://api.github.com/users/geeklint/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/geeklint/subscriptions", "organizations_url": "https://api.github.com/users/geeklint/orgs", "repos_url": "https://api.github.com/users/geeklint/repos", "events_url": "https://api.github.com/users/geeklint/events{/privacy}", "received_events_url": "https://api.github.com/users/geeklint/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "634d48d9d6a27a74400de4bbd7a28147d2665ad1", "url": "https://api.github.com/repos/rust-lang/rust/commits/634d48d9d6a27a74400de4bbd7a28147d2665ad1", "html_url": "https://github.com/rust-lang/rust/commit/634d48d9d6a27a74400de4bbd7a28147d2665ad1"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "42032bc9035bcfb1f5f7faa91639dc6390820fbc", "filename": "library/core/src/slice/ascii.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0a30c5b2ab8bc367803f32933522d39df8b58c9b/library%2Fcore%2Fsrc%2Fslice%2Fascii.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a30c5b2ab8bc367803f32933522d39df8b58c9b/library%2Fcore%2Fsrc%2Fslice%2Fascii.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fascii.rs?ref=0a30c5b2ab8bc367803f32933522d39df8b58c9b", "patch": "@@ -30,7 +30,7 @@ impl [u8] {\n     /// To return a new uppercased value without modifying the existing one, use\n     /// [`to_ascii_uppercase`].\n     ///\n-    /// [`to_ascii_uppercase`]: slice::to_ascii_uppercase\n+    /// [`to_ascii_uppercase`]: #method.to_ascii_uppercase\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]\n     #[inline]\n     pub fn make_ascii_uppercase(&mut self) {\n@@ -47,7 +47,7 @@ impl [u8] {\n     /// To return a new lowercased value without modifying the existing one, use\n     /// [`to_ascii_lowercase`].\n     ///\n-    /// [`to_ascii_lowercase`]: slice::to_ascii_lowercase\n+    /// [`to_ascii_lowercase`]: #method.to_ascii_lowercase\n     #[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]\n     #[inline]\n     pub fn make_ascii_lowercase(&mut self) {"}]}