{"sha": "6fb1f37888f2e306344adaab0adc5f0f4a454de0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmYjFmMzc4ODhmMmUzMDYzNDRhZGFhYjBhZGM1ZjBmNGE0NTRkZTA=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-25T01:35:01Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-29T19:23:07Z"}, "message": "Introduce some intermediate variables that aid readability.", "tree": {"sha": "17178a244ec3bdd1cae0523c658d902980755c77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/17178a244ec3bdd1cae0523c658d902980755c77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fb1f37888f2e306344adaab0adc5f0f4a454de0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fb1f37888f2e306344adaab0adc5f0f4a454de0", "html_url": "https://github.com/rust-lang/rust/commit/6fb1f37888f2e306344adaab0adc5f0f4a454de0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fb1f37888f2e306344adaab0adc5f0f4a454de0/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22943ee27c28efe76054a49ce20f0ab808b0599f", "url": "https://api.github.com/repos/rust-lang/rust/commits/22943ee27c28efe76054a49ce20f0ab808b0599f", "html_url": "https://github.com/rust-lang/rust/commit/22943ee27c28efe76054a49ce20f0ab808b0599f"}], "stats": {"total": 8, "additions": 5, "deletions": 3}, "files": [{"sha": "5b99e2ae140bb9821ceef21bbbbf4291719a55df", "filename": "src/librustc_data_structures/obligation_forest/mod.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6fb1f37888f2e306344adaab0adc5f0f4a454de0/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fb1f37888f2e306344adaab0adc5f0f4a454de0/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs?ref=6fb1f37888f2e306344adaab0adc5f0f4a454de0", "patch": "@@ -300,9 +300,10 @@ impl<O: ForestObligation> ObligationForest<O> {\n \n         match self.active_cache.entry(obligation.as_predicate().clone()) {\n             Entry::Occupied(o) => {\n+                let index = *o.get();\n                 debug!(\"register_obligation_at({:?}, {:?}) - duplicate of {:?}!\",\n-                       obligation, parent, o.get());\n-                let node = &mut self.nodes[*o.get()];\n+                       obligation, parent, index);\n+                let node = &mut self.nodes[index];\n                 if let Some(parent_index) = parent {\n                     // If the node is already in `active_cache`, it has already\n                     // had its chance to be marked with a parent. So if it's\n@@ -337,7 +338,8 @@ impl<O: ForestObligation> ObligationForest<O> {\n                 if already_failed {\n                     Err(())\n                 } else {\n-                    v.insert(self.nodes.len());\n+                    let new_index = self.nodes.len();\n+                    v.insert(new_index);\n                     self.nodes.push(Node::new(parent, obligation, obligation_tree_id));\n                     Ok(())\n                 }"}]}