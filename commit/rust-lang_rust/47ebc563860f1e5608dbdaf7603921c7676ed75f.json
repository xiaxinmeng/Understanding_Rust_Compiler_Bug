{"sha": "47ebc563860f1e5608dbdaf7603921c7676ed75f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ3ZWJjNTYzODYwZjFlNTYwOGRiZGFmNzYwMzkyMWM3Njc2ZWQ3NWY=", "commit": {"author": {"name": "Luca Bruno", "email": "lucab@debian.org", "date": "2016-05-14T16:56:20Z"}, "committer": {"name": "Luca Bruno", "email": "lucab@debian.org", "date": "2016-05-14T16:56:20Z"}, "message": "test: assert that all tcp-stress threads get spawned\n\nSystem limits may restrict the number of threads effectively spawned\nby this test (eg. systemd recently introduced a 512 tasks per unit\nmaximum default).\nThis commit explicitly asserts on the expected number of threads,\nmaking failures due to system limits easier to spot.\nMore details at https://bugs.debian.org/822325\n\nSigned-off-by: Luca Bruno <lucab@debian.org>", "tree": {"sha": "63385f2901105b6f5c07d7729e0fb040356d17f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63385f2901105b6f5c07d7729e0fb040356d17f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/47ebc563860f1e5608dbdaf7603921c7676ed75f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v2\n\niQIcBAABCAAGBQJXN1i3AAoJEKmDSiJSB45OtQUP/iRNMtYHQqD+uqNcgn8OUd5L\nlKw2C9ta3FXQWHeByKb9t8AyAEzCWtjJO4DcYyqxrGX+oPQkWrPRzS4FAiSGAOBt\n02DxwKBweGsSj03wQLsHI4MFPVy99WVkwY0lE01MmBl98EMfN+JrvG8cvnHzOMON\nWUlLual9/eS8ZS/+R2EJOjxLvOn7P+rQvYb2NG1BGrWRBjY4wgPP7bgebaHDq6KP\niRf5BU8fs4jcTNOufVC+McUCjjhQvRjkSe7fLHgwCwtXtf7I7TmdRdClaKn/JQ+R\ngHXHwtop1UkuYtqGGZ8dbDd1AImUFtFBJaoLWSk0qa+6H1MB0pPjODqqznoFkXor\nvXg81reccZyUxTyj1RG+ouDvDx65w+ZoJm3xp9v9OKo2bBeN9l7r7nPvBnAgLQpO\nmhIbWGbQ7l7xqtEqHaF0buyRYZP4RWw/33H6vpoF2xPpR2X898UiOwKGxTK5Yjkq\nT9XZ7w6UgPQDtscGWxMbMljuSTDnF2V1ZYhCCbeGuLIdV+bIZxreKymLUPaywmto\nWqJJiNPmrb6+2PsNrs1EvssBPNwcCVRMi830FmMCpqdrtMr4hsE+VoxwtBQZrJs9\npSXKfqB7eGBGc+snR7XHThOxf7w+txwRR0zO1nJOTG5YetnPfRMhATQ2OV0CwWYu\ngAvdRVGJnC2Kwj/5FKMu\n=uRWg\n-----END PGP SIGNATURE-----", "payload": "tree 63385f2901105b6f5c07d7729e0fb040356d17f3\nparent 6ba8a1a657cf37e648166ee4b41f51768ea46c1e\nauthor Luca Bruno <lucab@debian.org> 1463244980 +0200\ncommitter Luca Bruno <lucab@debian.org> 1463244980 +0200\n\ntest: assert that all tcp-stress threads get spawned\n\nSystem limits may restrict the number of threads effectively spawned\nby this test (eg. systemd recently introduced a 512 tasks per unit\nmaximum default).\nThis commit explicitly asserts on the expected number of threads,\nmaking failures due to system limits easier to spot.\nMore details at https://bugs.debian.org/822325\n\nSigned-off-by: Luca Bruno <lucab@debian.org>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/47ebc563860f1e5608dbdaf7603921c7676ed75f", "html_url": "https://github.com/rust-lang/rust/commit/47ebc563860f1e5608dbdaf7603921c7676ed75f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/47ebc563860f1e5608dbdaf7603921c7676ed75f/comments", "author": {"login": "lucab", "id": 98086, "node_id": "MDQ6VXNlcjk4MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/98086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucab", "html_url": "https://github.com/lucab", "followers_url": "https://api.github.com/users/lucab/followers", "following_url": "https://api.github.com/users/lucab/following{/other_user}", "gists_url": "https://api.github.com/users/lucab/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucab/subscriptions", "organizations_url": "https://api.github.com/users/lucab/orgs", "repos_url": "https://api.github.com/users/lucab/repos", "events_url": "https://api.github.com/users/lucab/events{/privacy}", "received_events_url": "https://api.github.com/users/lucab/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lucab", "id": 98086, "node_id": "MDQ6VXNlcjk4MDg2", "avatar_url": "https://avatars.githubusercontent.com/u/98086?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lucab", "html_url": "https://github.com/lucab", "followers_url": "https://api.github.com/users/lucab/followers", "following_url": "https://api.github.com/users/lucab/following{/other_user}", "gists_url": "https://api.github.com/users/lucab/gists{/gist_id}", "starred_url": "https://api.github.com/users/lucab/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lucab/subscriptions", "organizations_url": "https://api.github.com/users/lucab/orgs", "repos_url": "https://api.github.com/users/lucab/repos", "events_url": "https://api.github.com/users/lucab/events{/privacy}", "received_events_url": "https://api.github.com/users/lucab/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ba8a1a657cf37e648166ee4b41f51768ea46c1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ba8a1a657cf37e648166ee4b41f51768ea46c1e", "html_url": "https://github.com/rust-lang/rust/commit/6ba8a1a657cf37e648166ee4b41f51768ea46c1e"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "48726f7cac9cddcd8b946fc0aa0de2bdb904c7f7", "filename": "src/test/run-pass/tcp-stress.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/47ebc563860f1e5608dbdaf7603921c7676ed75f/src%2Ftest%2Frun-pass%2Ftcp-stress.rs", "raw_url": "https://github.com/rust-lang/rust/raw/47ebc563860f1e5608dbdaf7603921c7676ed75f/src%2Ftest%2Frun-pass%2Ftcp-stress.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftcp-stress.rs?ref=47ebc563860f1e5608dbdaf7603921c7676ed75f", "patch": "@@ -41,9 +41,10 @@ fn main() {\n     });\n \n     let (tx, rx) = channel();\n+    let mut spawned_cnt = 0;\n     for _ in 0..1000 {\n         let tx = tx.clone();\n-        Builder::new().stack_size(64 * 1024).spawn(move|| {\n+        let res = Builder::new().stack_size(64 * 1024).spawn(move|| {\n             match TcpStream::connect(addr) {\n                 Ok(mut stream) => {\n                     stream.write(&[1]);\n@@ -53,13 +54,17 @@ fn main() {\n             }\n             tx.send(()).unwrap();\n         });\n+        if let Ok(_) = res {\n+            spawned_cnt += 1;\n+        };\n     }\n \n     // Wait for all clients to exit, but don't wait for the server to exit. The\n     // server just runs infinitely.\n     drop(tx);\n-    for _ in 0..1000 {\n+    for _ in 0..spawned_cnt {\n         rx.recv().unwrap();\n     }\n+    assert_eq!(spawned_cnt, 1000);\n     process::exit(0);\n }"}]}