{"sha": "1bb4e973ffaffd78a01ba5abb90096d11a2ddb42", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiYjRlOTczZmZhZmZkNzhhMDFiYTVhYmI5MDA5NmQxMWEyZGRiNDI=", "commit": {"author": {"name": "Sahandevs", "email": "sahandevs@gmail.com", "date": "2021-02-07T18:22:32Z"}, "committer": {"name": "Sahandevs", "email": "sahandevs@gmail.com", "date": "2021-02-07T18:22:32Z"}, "message": "handle Thenable type rejects", "tree": {"sha": "c11a44377dcca59d241c45ceb7ae89a06358d8fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c11a44377dcca59d241c45ceb7ae89a06358d8fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bb4e973ffaffd78a01ba5abb90096d11a2ddb42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bb4e973ffaffd78a01ba5abb90096d11a2ddb42", "html_url": "https://github.com/rust-lang/rust/commit/1bb4e973ffaffd78a01ba5abb90096d11a2ddb42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bb4e973ffaffd78a01ba5abb90096d11a2ddb42/comments", "author": {"login": "sahandevs", "id": 1113944, "node_id": "MDQ6VXNlcjExMTM5NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1113944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sahandevs", "html_url": "https://github.com/sahandevs", "followers_url": "https://api.github.com/users/sahandevs/followers", "following_url": "https://api.github.com/users/sahandevs/following{/other_user}", "gists_url": "https://api.github.com/users/sahandevs/gists{/gist_id}", "starred_url": "https://api.github.com/users/sahandevs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sahandevs/subscriptions", "organizations_url": "https://api.github.com/users/sahandevs/orgs", "repos_url": "https://api.github.com/users/sahandevs/repos", "events_url": "https://api.github.com/users/sahandevs/events{/privacy}", "received_events_url": "https://api.github.com/users/sahandevs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sahandevs", "id": 1113944, "node_id": "MDQ6VXNlcjExMTM5NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1113944?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sahandevs", "html_url": "https://github.com/sahandevs", "followers_url": "https://api.github.com/users/sahandevs/followers", "following_url": "https://api.github.com/users/sahandevs/following{/other_user}", "gists_url": "https://api.github.com/users/sahandevs/gists{/gist_id}", "starred_url": "https://api.github.com/users/sahandevs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sahandevs/subscriptions", "organizations_url": "https://api.github.com/users/sahandevs/orgs", "repos_url": "https://api.github.com/users/sahandevs/repos", "events_url": "https://api.github.com/users/sahandevs/events{/privacy}", "received_events_url": "https://api.github.com/users/sahandevs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d0e93b58ee3a43881526c9405ca0120fe6ddb20", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d0e93b58ee3a43881526c9405ca0120fe6ddb20", "html_url": "https://github.com/rust-lang/rust/commit/1d0e93b58ee3a43881526c9405ca0120fe6ddb20"}], "stats": {"total": 35, "additions": 23, "deletions": 12}, "files": [{"sha": "3469fe5ec4515d6e51e775c8c68b65f9ca80d1e0", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/1bb4e973ffaffd78a01ba5abb90096d11a2ddb42/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1bb4e973ffaffd78a01ba5abb90096d11a2ddb42/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=1bb4e973ffaffd78a01ba5abb90096d11a2ddb42", "patch": "@@ -129,7 +129,8 @@ export function joinLines(ctx: Ctx): Cmd {\n             client.protocol2CodeConverter.asTextEdits(items).forEach((edit: any) => {\n                 builder.replace(edit.range, edit.newText);\n             });\n-        });\n+        })\n+        .then(() => {}, console.error);\n     };\n }\n \n@@ -246,7 +247,8 @@ export function ssr(ctx: Ctx): Cmd {\n             });\n \n             await vscode.workspace.applyEdit(client.protocol2CodeConverter.asWorkspaceEdit(edit));\n-        });\n+        })\n+        .then(() => {}, console.error);\n     };\n }\n \n@@ -465,7 +467,8 @@ export function showReferences(ctx: Ctx): Cmd {\n                 vscode.Uri.parse(uri),\n                 client.protocol2CodeConverter.asPosition(position),\n                 locations.map(client.protocol2CodeConverter.asLocation),\n-            );\n+            )\n+            .then(() => {}, console.error);\n         }\n     };\n }\n@@ -477,7 +480,8 @@ export function applyActionGroup(_ctx: Ctx): Cmd {\n         vscode.commands.executeCommand(\n             'rust-analyzer.resolveCodeAction',\n             selectedAction.arguments,\n-        );\n+        )\n+        .then(() => {}, console.error);\n     };\n }\n \n@@ -510,7 +514,8 @@ export function openDocs(ctx: Ctx): Cmd {\n         const doclink = await client.sendRequest(ra.openDocs, { position, textDocument });\n \n         if (doclink != null) {\n-            vscode.commands.executeCommand(\"vscode.open\", vscode.Uri.parse(doclink));\n+            vscode.commands.executeCommand(\"vscode.open\", vscode.Uri.parse(doclink))\n+                .then(() => {}, console.error);\n         }\n     };\n "}, {"sha": "0bbaae2b0aba87cd7049d761db68b487bb3bdabb", "filename": "editors/code/src/debug.ts", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1bb4e973ffaffd78a01ba5abb90096d11a2ddb42/editors%2Fcode%2Fsrc%2Fdebug.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1bb4e973ffaffd78a01ba5abb90096d11a2ddb42/editors%2Fcode%2Fsrc%2Fdebug.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fdebug.ts?ref=1bb4e973ffaffd78a01ba5abb90096d11a2ddb42", "patch": "@@ -78,7 +78,8 @@ async function getDebugConfiguration(ctx: Ctx, runnable: ra.Runnable): Promise<v\n \n     if (!debugEngine) {\n         vscode.window.showErrorMessage(`Install [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb)`\n-            + ` or [MS C++ tools](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools) extension for debugging.`);\n+            + ` or [MS C++ tools](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools) extension for debugging.`)\n+            .then(() => {}, console.error);\n         return;\n     }\n "}, {"sha": "a5c728b6755bb242a3cb1a4f6cb18d02d0e71d1b", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1bb4e973ffaffd78a01ba5abb90096d11a2ddb42/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1bb4e973ffaffd78a01ba5abb90096d11a2ddb42/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=1bb4e973ffaffd78a01ba5abb90096d11a2ddb42", "patch": "@@ -76,7 +76,8 @@ async function tryActivate(context: vscode.ExtensionContext) {\n     // This a horribly, horribly wrong way to deal with this problem.\n     ctx = await Ctx.create(config, context, serverPath, workspaceFolder.uri.fsPath);\n \n-    setContextValue(RUST_PROJECT_CONTEXT_NAME, true);\n+    setContextValue(RUST_PROJECT_CONTEXT_NAME, true)\n+        .then(() => {}, console.error);\n \n     // Commands which invokes manually via command palette, shortcut, etc.\n \n@@ -142,7 +143,8 @@ async function tryActivate(context: vscode.ExtensionContext) {\n }\n \n export async function deactivate() {\n-    setContextValue(RUST_PROJECT_CONTEXT_NAME, undefined);\n+    setContextValue(RUST_PROJECT_CONTEXT_NAME, undefined)\n+        .then(() => {}, console.error);\n     await ctx?.client.stop();\n     ctx = undefined;\n }\n@@ -186,7 +188,8 @@ async function bootstrapExtension(config: Config, state: PersistentState): Promi\n     }).catch((e) => {\n         log.error(e);\n         if (state.releaseId === undefined) { // Show error only for the initial download\n-            vscode.window.showErrorMessage(`Failed to download rust-analyzer nightly ${e}`);\n+            vscode.window.showErrorMessage(`Failed to download rust-analyzer nightly ${e}`)\n+                .then(() => {}, console.error);\n         }\n         return undefined;\n     });\n@@ -305,7 +308,7 @@ async function getServer(config: Config, state: PersistentState): Promise<string\n             \"If you feel that your platform should be supported, please create an issue \" +\n             \"about that [here](https://github.com/rust-analyzer/rust-analyzer/issues) and we \" +\n             \"will consider it.\"\n-        );\n+        ).then(() => {}, console.error);\n         return undefined;\n     }\n     const ext = platform.indexOf(\"-windows-\") !== -1 ? \".exe\" : \"\";\n@@ -433,6 +436,7 @@ function warnAboutExtensionConflicts() {\n         vscode.window.showWarningMessage(\n             `You have both the ${fst[0]} (${fst[1]}) and ${sec[0]} (${sec[1]}) ` +\n             \"plugins enabled. These are known to conflict and cause various functions of \" +\n-            \"both plugins to not work correctly. You should disable one of them.\", \"Got it\");\n+            \"both plugins to not work correctly. You should disable one of them.\", \"Got it\")\n+            .then(() => {}, console.error);\n     };\n }"}, {"sha": "e30fdb38e67816375dca90f3b257c925cc10a883", "filename": "editors/code/src/run.ts", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1bb4e973ffaffd78a01ba5abb90096d11a2ddb42/editors%2Fcode%2Fsrc%2Frun.ts", "raw_url": "https://github.com/rust-lang/rust/raw/1bb4e973ffaffd78a01ba5abb90096d11a2ddb42/editors%2Fcode%2Fsrc%2Frun.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Frun.ts?ref=1bb4e973ffaffd78a01ba5abb90096d11a2ddb42", "patch": "@@ -45,7 +45,8 @@ export async function selectRunnable(ctx: Ctx, prevRunnable?: RunnableQuickPick,\n     if (items.length === 0) {\n         // it is the debug case, run always has at least 'cargo check ...'\n         // see crates\\rust-analyzer\\src\\main_loop\\handlers.rs, handle_runnables\n-        vscode.window.showErrorMessage(\"There's no debug target!\");\n+        vscode.window.showErrorMessage(\"There's no debug target!\")\n+            .then(() => {}, console.error);\n         return;\n     }\n "}]}