{"sha": "86a71bf45b6252f030d9206f19b9901f4b9322a2", "node_id": "C_kwDOAAsO6NoAKDg2YTcxYmY0NWI2MjUyZjAzMGQ5MjA2ZjE5Yjk5MDFmNGI5MzIyYTI", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-30T12:13:44Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-03-30T12:13:44Z"}, "message": "Sync from rust 17c11672167827b0dd92c88ef69f24346d1286dd", "tree": {"sha": "340f86f5ee3644ca57bdbaccd93832690decda25", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/340f86f5ee3644ca57bdbaccd93832690decda25"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86a71bf45b6252f030d9206f19b9901f4b9322a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86a71bf45b6252f030d9206f19b9901f4b9322a2", "html_url": "https://github.com/rust-lang/rust/commit/86a71bf45b6252f030d9206f19b9901f4b9322a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86a71bf45b6252f030d9206f19b9901f4b9322a2/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2796ecb774883c3b22343ed1992cac390003882", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2796ecb774883c3b22343ed1992cac390003882", "html_url": "https://github.com/rust-lang/rust/commit/b2796ecb774883c3b22343ed1992cac390003882"}, {"sha": "5a7ce4609e3a7c364d9ff8810329242cefb76a4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a7ce4609e3a7c364d9ff8810329242cefb76a4b", "html_url": "https://github.com/rust-lang/rust/commit/5a7ce4609e3a7c364d9ff8810329242cefb76a4b"}], "stats": {"total": 28, "additions": 19, "deletions": 9}, "files": [{"sha": "a4f3cb3ecc8b9980879536e247218fe4c7e81e1f", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86a71bf45b6252f030d9206f19b9901f4b9322a2/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/86a71bf45b6252f030d9206f19b9901f4b9322a2/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=86a71bf45b6252f030d9206f19b9901f4b9322a2", "patch": "@@ -223,9 +223,9 @@ dependencies = [\n \n [[package]]\n name = \"indexmap\"\n-version = \"1.9.2\"\n+version = \"1.9.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"1885e79c1fc4b10f0e172c475f458b7f7b93061064d98c3293e98c5ba0c8b399\"\n+checksum = \"bd070e393353796e801d209ad339e89596eb4c8d430d18ede6a1cced8fafbd99\"\n dependencies = [\n  \"autocfg\",\n  \"hashbrown 0.12.3\","}, {"sha": "e514d477573377e1142442e3c989822c7621d06b", "filename": "Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/86a71bf45b6252f030d9206f19b9901f4b9322a2/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/86a71bf45b6252f030d9206f19b9901f4b9322a2/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=86a71bf45b6252f030d9206f19b9901f4b9322a2", "patch": "@@ -25,7 +25,7 @@ target-lexicon = \"0.12.0\"\n gimli = { version = \"0.27.2\", default-features = false, features = [\"write\"]}\n object = { version = \"0.30.3\", default-features = false, features = [\"std\", \"read_core\", \"write\", \"archive\", \"coff\", \"elf\", \"macho\", \"pe\"] }\n \n-indexmap = \"1.9.1\"\n+indexmap = \"1.9.3\"\n libloading = { version = \"0.7.3\", optional = true }\n once_cell = \"1.10.0\"\n smallvec = \"1.8.1\""}, {"sha": "0b2a1e785177a6b21e6919db5341060f4351d23c", "filename": "src/constant.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/86a71bf45b6252f030d9206f19b9901f4b9322a2/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86a71bf45b6252f030d9206f19b9901f4b9322a2/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=86a71bf45b6252f030d9206f19b9901f4b9322a2", "patch": "@@ -54,12 +54,22 @@ pub(crate) fn codegen_tls_ref<'tcx>(\n     def_id: DefId,\n     layout: TyAndLayout<'tcx>,\n ) -> CValue<'tcx> {\n-    let data_id = data_id_for_static(fx.tcx, fx.module, def_id, false);\n-    let local_data_id = fx.module.declare_data_in_func(data_id, &mut fx.bcx.func);\n-    if fx.clif_comments.enabled() {\n-        fx.add_comment(local_data_id, format!(\"tls {:?}\", def_id));\n-    }\n-    let tls_ptr = fx.bcx.ins().tls_value(fx.pointer_type, local_data_id);\n+    let tls_ptr = if !def_id.is_local() && fx.tcx.needs_thread_local_shim(def_id) {\n+        let instance = ty::Instance {\n+            def: ty::InstanceDef::ThreadLocalShim(def_id),\n+            substs: ty::InternalSubsts::empty(),\n+        };\n+        let func_ref = fx.get_function_ref(instance);\n+        let call = fx.bcx.ins().call(func_ref, &[]);\n+        fx.bcx.func.dfg.first_result(call)\n+    } else {\n+        let data_id = data_id_for_static(fx.tcx, fx.module, def_id, false);\n+        let local_data_id = fx.module.declare_data_in_func(data_id, &mut fx.bcx.func);\n+        if fx.clif_comments.enabled() {\n+            fx.add_comment(local_data_id, format!(\"tls {:?}\", def_id));\n+        }\n+        fx.bcx.ins().tls_value(fx.pointer_type, local_data_id)\n+    };\n     CValue::by_val(tls_ptr, layout)\n }\n "}]}