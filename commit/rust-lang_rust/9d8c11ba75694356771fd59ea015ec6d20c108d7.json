{"sha": "9d8c11ba75694356771fd59ea015ec6d20c108d7", "node_id": "C_kwDOAAsO6NoAKDlkOGMxMWJhNzU2OTQzNTY3NzFmZDU5ZWEwMTVlYzZkMjBjMTA4ZDc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-15T08:58:42Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-15T08:58:42Z"}, "message": "Rollup merge of #111581 - scottmcm:fix-pattern-comment, r=workingjubilee\n\nFix some misleading and copy-pasted `Pattern` examples\n\nThese examples were listed twice and also were confusable with doing a substring match instead of a any-of-set match.", "tree": {"sha": "e07e66fbc7fbbb0e0e0d064fdfba77d4ba5623f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e07e66fbc7fbbb0e0e0d064fdfba77d4ba5623f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d8c11ba75694356771fd59ea015ec6d20c108d7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkYfRCCRBK7hj4Ov3rIwAA4QAIACDtCeG+iUHA3z2V8VvLhd+1\nIE/a7utGeMGZoTHhwD8vJ5hyIsv2PgXEA/P0e5Bl9zN8atwHoNv0zCvaOqmwQ0re\nmhe52+RrDXCyXAQrSxMt7BlLDGaxp+ImQPmTQTLdm9+Qht29CDaW+6US4inhZckJ\n97O2fWuvRxaZ+cQYxJGx5c5YfcvhqQd6u3123JBS+tD3VfHKIOo+nzm90mpo6ruy\n9CGYqkf9BZA3sSiQRXFLzx85d7596slhjMxt63u50Yovo9BqMqn7pKYM1xz646UK\nomFLAH5+HdwR1R26ofNnvSZe23xPVuZcBTtS4v2U6s7aVnGVjxIcdZupHxB/Bc0=\n=j4fj\n-----END PGP SIGNATURE-----\n", "payload": "tree e07e66fbc7fbbb0e0e0d064fdfba77d4ba5623f3\nparent 74952de4b748af2da5462005b58254c65628323f\nparent 47232ade6151a8e7d2112e2dda0c7c5c930b0a31\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1684141122 +0200\ncommitter GitHub <noreply@github.com> 1684141122 +0200\n\nRollup merge of #111581 - scottmcm:fix-pattern-comment, r=workingjubilee\n\nFix some misleading and copy-pasted `Pattern` examples\n\nThese examples were listed twice and also were confusable with doing a substring match instead of a any-of-set match.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d8c11ba75694356771fd59ea015ec6d20c108d7", "html_url": "https://github.com/rust-lang/rust/commit/9d8c11ba75694356771fd59ea015ec6d20c108d7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d8c11ba75694356771fd59ea015ec6d20c108d7/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74952de4b748af2da5462005b58254c65628323f", "url": "https://api.github.com/repos/rust-lang/rust/commits/74952de4b748af2da5462005b58254c65628323f", "html_url": "https://github.com/rust-lang/rust/commit/74952de4b748af2da5462005b58254c65628323f"}, {"sha": "47232ade6151a8e7d2112e2dda0c7c5c930b0a31", "url": "https://api.github.com/repos/rust-lang/rust/commits/47232ade6151a8e7d2112e2dda0c7c5c930b0a31", "html_url": "https://github.com/rust-lang/rust/commit/47232ade6151a8e7d2112e2dda0c7c5c930b0a31"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "91ee2903aab43a2f3ca56cda7544e8b91a013b31", "filename": "library/core/src/str/pattern.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9d8c11ba75694356771fd59ea015ec6d20c108d7/library%2Fcore%2Fsrc%2Fstr%2Fpattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d8c11ba75694356771fd59ea015ec6d20c108d7/library%2Fcore%2Fsrc%2Fstr%2Fpattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fpattern.rs?ref=9d8c11ba75694356771fd59ea015ec6d20c108d7", "patch": "@@ -791,8 +791,8 @@ pub struct CharArrayRefSearcher<'a, 'b, const N: usize>(\n /// # Examples\n ///\n /// ```\n-/// assert_eq!(\"Hello world\".find(['l', 'l']), Some(2));\n-/// assert_eq!(\"Hello world\".find(['l', 'l']), Some(2));\n+/// assert_eq!(\"Hello world\".find(['o', 'l']), Some(2));\n+/// assert_eq!(\"Hello world\".find(['h', 'w']), Some(6));\n /// ```\n impl<'a, const N: usize> Pattern<'a> for [char; N] {\n     pattern_methods!(CharArraySearcher<'a, N>, MultiCharEqPattern, CharArraySearcher);\n@@ -811,8 +811,8 @@ unsafe impl<'a, const N: usize> ReverseSearcher<'a> for CharArraySearcher<'a, N>\n /// # Examples\n ///\n /// ```\n-/// assert_eq!(\"Hello world\".find(&['l', 'l']), Some(2));\n-/// assert_eq!(\"Hello world\".find(&['l', 'l']), Some(2));\n+/// assert_eq!(\"Hello world\".find(&['o', 'l']), Some(2));\n+/// assert_eq!(\"Hello world\".find(&['h', 'w']), Some(6));\n /// ```\n impl<'a, 'b, const N: usize> Pattern<'a> for &'b [char; N] {\n     pattern_methods!(CharArrayRefSearcher<'a, 'b, N>, MultiCharEqPattern, CharArrayRefSearcher);"}]}