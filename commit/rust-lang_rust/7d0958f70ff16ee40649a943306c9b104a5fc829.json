{"sha": "7d0958f70ff16ee40649a943306c9b104a5fc829", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkMDk1OGY3MGZmMTZlZTQwNjQ5YTk0MzMwNmM5YjEwNGE1ZmM4Mjk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-02-28T19:58:50Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-02-29T19:54:47Z"}, "message": "add the ability to snag the frame so we can verify that we are inlining", "tree": {"sha": "6698c2b8f3cd7134d3e9937e774d9c57048996f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6698c2b8f3cd7134d3e9937e774d9c57048996f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7d0958f70ff16ee40649a943306c9b104a5fc829", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7d0958f70ff16ee40649a943306c9b104a5fc829", "html_url": "https://github.com/rust-lang/rust/commit/7d0958f70ff16ee40649a943306c9b104a5fc829", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7d0958f70ff16ee40649a943306c9b104a5fc829/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d104cfb410211cb313a50c6cdb8b652f62ce9f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d104cfb410211cb313a50c6cdb8b652f62ce9f4", "html_url": "https://github.com/rust-lang/rust/commit/3d104cfb410211cb313a50c6cdb8b652f62ce9f4"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "04b51b85bcf659109002c25a634f37769da94f5f", "filename": "src/comp/middle/trans/base.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7d0958f70ff16ee40649a943306c9b104a5fc829/src%2Fcomp%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d0958f70ff16ee40649a943306c9b104a5fc829/src%2Fcomp%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans%2Fbase.rs?ref=7d0958f70ff16ee40649a943306c9b104a5fc829", "patch": "@@ -4583,6 +4583,13 @@ fn collect_inlined_items(ccx: crate_ctxt, inline_map: inline::inline_map) {\n     let abi = @mutable none::<ast::native_abi>;\n     inline_map.values {|item|\n         collect_item(ccx, abi, item);\n+\n+        alt item.node {\n+          ast::item_fn(_, _, _) {\n+            set_always_inline(ccx.item_ids.get(item.id));\n+          }\n+          _ { /* fallthrough */ }\n+        }\n     }\n }\n "}, {"sha": "9cdbfaa61af7095b16501ed711686e52305f8ef7", "filename": "src/libcore/sys.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7d0958f70ff16ee40649a943306c9b104a5fc829/src%2Flibcore%2Fsys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7d0958f70ff16ee40649a943306c9b104a5fc829/src%2Flibcore%2Fsys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsys.rs?ref=7d0958f70ff16ee40649a943306c9b104a5fc829", "patch": "@@ -20,6 +20,7 @@ native mod rustrt {\n     fn unsupervise();\n     fn shape_log_str<T>(t: *sys::type_desc, data: T) -> str;\n     fn rust_set_exit_status(code: ctypes::intptr_t);\n+    fn rust_frame_address() -> ctypes::uintptr_t;\n }\n \n #[abi = \"rust-intrinsic\"]\n@@ -77,6 +78,10 @@ fn log_str<T>(t: T) -> str {\n     rustrt::shape_log_str(get_type_desc::<T>(), t)\n }\n \n+fn frame_address() -> uint {\n+    rustrt::rust_frame_address()\n+}\n+\n #[doc(\n     brief = \"Sets the process exit code\",\n     desc = \"Sets the exit code returned by the process if all supervised \\"}, {"sha": "a1b2d9eb45a6fd29c544a959ad3446a042ab9d71", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7d0958f70ff16ee40649a943306c9b104a5fc829/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/7d0958f70ff16ee40649a943306c9b104a5fc829/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=7d0958f70ff16ee40649a943306c9b104a5fc829", "patch": "@@ -6,6 +6,7 @@\n #include \"rust_util.h\"\n #include \"rust_scheduler.h\"\n #include \"sync/timer.h\"\n+#include \"rust_abi.h\"\n \n #ifdef __APPLE__\n #include <crt_externs.h>\n@@ -681,6 +682,11 @@ rust_dbg_call(dbg_callback cb, void *data) {\n     return cb(data);\n }\n \n+extern \"C\" CDECL void *\n+rust_frame_address() {\n+    return __builtin_frame_address(1);\n+}\n+\n //\n // Local Variables:\n // mode: C++"}, {"sha": "211ad71b545145c84bca096c03a685445639af04", "filename": "src/rt/rust_util.h", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/7d0958f70ff16ee40649a943306c9b104a5fc829/src%2Frt%2Frust_util.h", "raw_url": "https://github.com/rust-lang/rust/raw/7d0958f70ff16ee40649a943306c9b104a5fc829/src%2Frt%2Frust_util.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_util.h?ref=7d0958f70ff16ee40649a943306c9b104a5fc829", "patch": "@@ -87,6 +87,23 @@ inline size_t vec_size(size_t elems) {\n     return sizeof(rust_vec) + sizeof(T) * elems;\n }\n \n+template <typename T>\n+inline rust_vec *\n+vec_alloc(size_t alloc_elts, size_t fill_elts, const char *name) {\n+    rust_task *task = rust_task_thread::get_task();\n+    size_t size = vec_size<T>(alloc_elts);\n+    rust_vec *vec = (rust_vec *) task->kernel->malloc(size, name);\n+    vec->fill = fill_elts * sizeof(T);\n+    vec->alloc = alloc_elts * sizeof(T);\n+    return vec;\n+}\n+\n+template <typename T>\n+inline T *\n+vec_data(rust_vec *v) {\n+    return reinterpret_cast<T*>(v->data);\n+}\n+\n inline void reserve_vec_exact(rust_task* task, rust_vec** vpp, size_t size) {\n     if (size > (*vpp)->alloc) {\n         *vpp = (rust_vec*)task->kernel->realloc(*vpp, size + sizeof(rust_vec));"}, {"sha": "3ccee2ea50828991b952e9dae0d9079aa48bbdc3", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7d0958f70ff16ee40649a943306c9b104a5fc829/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/7d0958f70ff16ee40649a943306c9b104a5fc829/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=7d0958f70ff16ee40649a943306c9b104a5fc829", "patch": "@@ -100,4 +100,5 @@ rust_dbg_lock_lock\n rust_dbg_lock_unlock\n rust_dbg_lock_wait\n rust_dbg_lock_signal\n-rust_dbg_call\n\\ No newline at end of file\n+rust_dbg_call\n+rust_frame_address"}]}