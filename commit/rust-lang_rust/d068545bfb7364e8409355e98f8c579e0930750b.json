{"sha": "d068545bfb7364e8409355e98f8c579e0930750b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwNjg1NDViZmI3MzY0ZTg0MDkzNTVlOThmOGM1NzllMDkzMDc1MGI=", "commit": {"author": {"name": "Bastian Kauschke", "email": "bastian_kauschke@hotmail.de", "date": "2020-03-22T15:00:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-22T15:00:51Z"}, "message": "update `make_contiguous` docs\n\nCo-Authored-By: Amanieu d'Antras <amanieu@gmail.com>", "tree": {"sha": "f06fc072ecc248d7755d5a408e0cf38adb74d1b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f06fc072ecc248d7755d5a408e0cf38adb74d1b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d068545bfb7364e8409355e98f8c579e0930750b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJed32jCRBK7hj4Ov3rIwAAdHIIAGuxS5nuQOG9hZRe6fi7R9i1\nYwm4DPhj+qPNva0Res59H4sST83PgVvvi14K1GTJRm+TW9VlmX+vaItwtCE9nCxN\nSrI06qgqImsWyFpvV+xFw7fElmyrtK3ahea0av+EptidWCV6j7Crnh7daJiJvgU7\nuKazLdQBtlr/RUz1ZkXu9uv2m89nIQCB2YCgYiJI1Y3Dhtr2I6/6SLZ3rJqqZf+o\nGTiPwOyriaiB6AUpQBCI8QmmLLtYH3VqJAZxuZJG+Kp9TVkSuWdKPGQeHUPp4r86\nPaYBcKOus7knSVryN55JBTclJ5aHpgnhpUoOmVWfxAapHQa5M3YBPQ0YJcodA8M=\n=OzrK\n-----END PGP SIGNATURE-----\n", "payload": "tree f06fc072ecc248d7755d5a408e0cf38adb74d1b8\nparent ecf301d987ed944ef96f627757a0fc58608ff1bb\nauthor Bastian Kauschke <bastian_kauschke@hotmail.de> 1584889251 +0100\ncommitter GitHub <noreply@github.com> 1584889251 +0100\n\nupdate `make_contiguous` docs\n\nCo-Authored-By: Amanieu d'Antras <amanieu@gmail.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d068545bfb7364e8409355e98f8c579e0930750b", "html_url": "https://github.com/rust-lang/rust/commit/d068545bfb7364e8409355e98f8c579e0930750b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d068545bfb7364e8409355e98f8c579e0930750b/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecf301d987ed944ef96f627757a0fc58608ff1bb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecf301d987ed944ef96f627757a0fc58608ff1bb", "html_url": "https://github.com/rust-lang/rust/commit/ecf301d987ed944ef96f627757a0fc58608ff1bb"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "02681e06d313b3cfbde4aadbeaf10ff690f23a54", "filename": "src/liballoc/collections/vec_deque.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d068545bfb7364e8409355e98f8c579e0930750b/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d068545bfb7364e8409355e98f8c579e0930750b/src%2Fliballoc%2Fcollections%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fcollections%2Fvec_deque.rs?ref=d068545bfb7364e8409355e98f8c579e0930750b", "patch": "@@ -2054,7 +2054,9 @@ impl<T> VecDeque<T> {\n     /// This method does not allocate and does not change the order of the inserted elements.\n     /// As it returns a mutable slice, this can be used to sort or binary search a deque.\n     ///\n-    /// In case `self` is already contiguous, [`as_slices`](#method.as_slices) can be used to get immutable access.\n+    /// Once the internal storage is contiguous, the [`as_slices`](#method.as_slices) and\n+    /// [`as_slices_mut`](#method.as_slices_mut) methods will return the entire contents of the\n+    /// `VecDeque` in a single slice.\n     ///\n     /// # Examples\n     ///"}]}