{"sha": "a45a81a6a290d654d8906a099721d631fd361ee9", "node_id": "C_kwDOAAsO6NoAKGE0NWE4MWE2YTI5MGQ2NTRkODkwNmEwOTk3MjFkNjMxZmQzNjFlZTk", "commit": {"author": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-26T12:15:25Z"}, "committer": {"name": "bjorn3", "email": "17426603+bjorn3@users.noreply.github.com", "date": "2023-02-26T12:15:25Z"}, "message": "Patch coretests separately from the standard library source", "tree": {"sha": "4cd9db75515418365e4b9d4749a771ea9b5b1884", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cd9db75515418365e4b9d4749a771ea9b5b1884"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a45a81a6a290d654d8906a099721d631fd361ee9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a45a81a6a290d654d8906a099721d631fd361ee9", "html_url": "https://github.com/rust-lang/rust/commit/a45a81a6a290d654d8906a099721d631fd361ee9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a45a81a6a290d654d8906a099721d631fd361ee9/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f79601fbb09c50e47ade725ed350e02bcaeb55bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/f79601fbb09c50e47ade725ed350e02bcaeb55bc", "html_url": "https://github.com/rust-lang/rust/commit/f79601fbb09c50e47ade725ed350e02bcaeb55bc"}], "stats": {"total": 113, "additions": 75, "deletions": 38}, "files": [{"sha": "6769e42d44b94181f427210c803616f2e2b8f31e", "filename": "build_system/prepare.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/a45a81a6a290d654d8906a099721d631fd361ee9/build_system%2Fprepare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a45a81a6a290d654d8906a099721d631fd361ee9/build_system%2Fprepare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Fprepare.rs?ref=a45a81a6a290d654d8906a099721d631fd361ee9", "patch": "@@ -6,15 +6,18 @@ use std::process::Command;\n use super::build_sysroot::{BUILD_SYSROOT, ORIG_BUILD_SYSROOT, SYSROOT_RUSTC_VERSION, SYSROOT_SRC};\n use super::path::{Dirs, RelPath};\n use super::rustc_info::{get_default_sysroot, get_rustc_version};\n+use super::tests::LIBCORE_TESTS_SRC;\n use super::utils::{copy_dir_recursively, git_command, retry_spawn_and_wait, spawn_and_wait};\n \n pub(crate) fn prepare(dirs: &Dirs) {\n     RelPath::DOWNLOAD.ensure_fresh(dirs);\n \n     spawn_and_wait(super::build_backend::CG_CLIF.fetch(\"cargo\", \"rustc\", dirs));\n \n-    prepare_sysroot(dirs);\n+    prepare_stdlib(dirs);\n     spawn_and_wait(super::build_sysroot::STANDARD_LIBRARY.fetch(\"cargo\", \"rustc\", dirs));\n+\n+    prepare_coretests(dirs);\n     spawn_and_wait(super::tests::LIBCORE_TESTS.fetch(\"cargo\", \"rustc\", dirs));\n \n     super::tests::RAND_REPO.fetch(dirs);\n@@ -25,11 +28,11 @@ pub(crate) fn prepare(dirs: &Dirs) {\n     spawn_and_wait(super::tests::PORTABLE_SIMD.fetch(\"cargo\", \"rustc\", dirs));\n }\n \n-fn prepare_sysroot(dirs: &Dirs) {\n+fn prepare_stdlib(dirs: &Dirs) {\n     let sysroot_src_orig = get_default_sysroot(Path::new(\"rustc\")).join(\"lib/rustlib/src/rust\");\n     assert!(sysroot_src_orig.exists());\n \n-    eprintln!(\"[COPY] sysroot src\");\n+    eprintln!(\"[COPY] stdlib src\");\n \n     // FIXME ensure builds error out or update the copy if any of the files copied here change\n     BUILD_SYSROOT.ensure_fresh(dirs);\n@@ -47,7 +50,25 @@ fn prepare_sysroot(dirs: &Dirs) {\n     eprintln!(\"[GIT] init\");\n     init_git_repo(&SYSROOT_SRC.to_path(dirs));\n \n-    apply_patches(dirs, \"sysroot\", &SYSROOT_SRC.to_path(dirs));\n+    apply_patches(dirs, \"stdlib\", &SYSROOT_SRC.to_path(dirs));\n+}\n+\n+fn prepare_coretests(dirs: &Dirs) {\n+    let sysroot_src_orig = get_default_sysroot(Path::new(\"rustc\")).join(\"lib/rustlib/src/rust\");\n+    assert!(sysroot_src_orig.exists());\n+\n+    eprintln!(\"[COPY] coretests src\");\n+\n+    fs::create_dir_all(LIBCORE_TESTS_SRC.to_path(dirs)).unwrap();\n+    copy_dir_recursively(\n+        &sysroot_src_orig.join(\"library/core/tests\"),\n+        &LIBCORE_TESTS_SRC.to_path(dirs),\n+    );\n+\n+    eprintln!(\"[GIT] init\");\n+    init_git_repo(&LIBCORE_TESTS_SRC.to_path(dirs));\n+\n+    apply_patches(dirs, \"coretests\", &LIBCORE_TESTS_SRC.to_path(dirs));\n }\n \n pub(crate) struct GitRepo {"}, {"sha": "b55187aa3b4c9195ad1a4e8fdbfd8f9ad6564315", "filename": "build_system/tests.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/a45a81a6a290d654d8906a099721d631fd361ee9/build_system%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a45a81a6a290d654d8906a099721d631fd361ee9/build_system%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/build_system%2Ftests.rs?ref=a45a81a6a290d654d8906a099721d631fd361ee9", "patch": "@@ -1,4 +1,4 @@\n-use super::build_sysroot::{self, SYSROOT_SRC};\n+use super::build_sysroot;\n use super::config;\n use super::path::{Dirs, RelPath};\n use super::prepare::GitRepo;\n@@ -114,8 +114,9 @@ pub(crate) static PORTABLE_SIMD_REPO: GitRepo = GitRepo::github(\n pub(crate) static PORTABLE_SIMD: CargoProject =\n     CargoProject::new(&PORTABLE_SIMD_REPO.source_dir(), \"portable_simd\");\n \n-pub(crate) static LIBCORE_TESTS: CargoProject =\n-    CargoProject::new(&SYSROOT_SRC.join(\"library/core/tests\"), \"core_tests\");\n+pub(crate) static LIBCORE_TESTS_SRC: RelPath = RelPath::DOWNLOAD.join(\"coretests_src\");\n+\n+pub(crate) static LIBCORE_TESTS: CargoProject = CargoProject::new(&LIBCORE_TESTS_SRC, \"core_tests\");\n \n const EXTENDED_SYSROOT_SUITE: &[TestCase] = &[\n     TestCase::custom(\"test.rust-random/rand\", &|runner| {"}, {"sha": "6afa5c71fe51fa8cb16c78ff116d07292e35acef", "filename": "patches/0022-coretests-Disable-not-compiling-tests.patch", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a45a81a6a290d654d8906a099721d631fd361ee9/patches%2F0022-coretests-Disable-not-compiling-tests.patch", "raw_url": "https://github.com/rust-lang/rust/raw/a45a81a6a290d654d8906a099721d631fd361ee9/patches%2F0022-coretests-Disable-not-compiling-tests.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0022-coretests-Disable-not-compiling-tests.patch?ref=a45a81a6a290d654d8906a099721d631fd361ee9", "patch": "@@ -13,14 +13,14 @@ Subject: [PATCH] [core] Disable not compiling tests\n  6 files changed, 16 insertions(+), 1 deletion(-)\n  create mode 100644 library/core/tests/Cargo.toml\n \n-diff --git a/library/core/tests/Cargo.toml b/library/core/tests/Cargo.toml\n+diff --git a/Cargo.toml b/Cargo.toml\n new file mode 100644\n index 0000000..46fd999\n --- /dev/null\n-+++ b/library/core/tests/Cargo.toml\n++++ b/Cargo.toml\n @@ -0,0 +1,12 @@\n +[package]\n-+name = \"core\"\n++name = \"coretests\"\n +version = \"0.0.0\"\n +edition = \"2021\"\n +\n@@ -31,10 +31,10 @@ index 0000000..46fd999\n +[dependencies]\n +rand = { version = \"0.8.5\", default-features = false }\n +rand_xorshift = { version = \"0.3.0\", default-features = false }\n-diff --git a/library/core/tests/lib.rs b/library/core/tests/lib.rs\n+diff --git a/lib.rs b/lib.rs\n index 42a26ae..5ac1042 100644\n---- a/library/core/tests/lib.rs\n-+++ b/library/core/tests/lib.rs\n+--- a/lib.rs\n++++ b/lib.rs\n @@ -1,3 +1,4 @@\n +#![cfg(test)]\n  #![feature(alloc_layout_extra)]", "previous_filename": "patches/0022-sysroot-Disable-not-compiling-tests.patch"}, {"sha": "f2cb82751f0821ff857fe2ae0f229d5aca450501", "filename": "patches/0023-coretests-Ignore-failing-tests.patch", "status": "renamed", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a45a81a6a290d654d8906a099721d631fd361ee9/patches%2F0023-coretests-Ignore-failing-tests.patch", "raw_url": "https://github.com/rust-lang/rust/raw/a45a81a6a290d654d8906a099721d631fd361ee9/patches%2F0023-coretests-Ignore-failing-tests.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0023-coretests-Ignore-failing-tests.patch?ref=a45a81a6a290d654d8906a099721d631fd361ee9", "patch": "@@ -10,10 +10,10 @@ Subject: [PATCH] [core] Ignore failing tests\n  library/core/tests/time.rs       |  1 +\n  4 files changed, 18 insertions(+), 2 deletions(-)\n \n-diff --git a/library/core/tests/array.rs b/library/core/tests/array.rs\n+diff --git a/array.rs b/array.rs\n index 4bc44e9..8e3c7a4 100644\n---- a/library/core/tests/array.rs\n-+++ b/library/core/tests/array.rs\n+--- a/array.rs\n++++ b/array.rs\n @@ -242,6 +242,7 @@ fn iterator_drops() {\n      assert_eq!(i.get(), 5);\n  }\n@@ -46,10 +46,10 @@ index 4bc44e9..8e3c7a4 100644\n  \n  #[test]\n  fn cell_allows_array_cycle() {\n-diff --git a/library/core/tests/atomic.rs b/library/core/tests/atomic.rs\n+diff --git a/atomic.rs b/atomic.rs\n index 13b12db..96fe4b9 100644\n---- a/library/core/tests/atomic.rs\n-+++ b/library/core/tests/atomic.rs\n+--- a/atomic.rs\n++++ b/atomic.rs\n @@ -185,6 +185,7 @@ fn ptr_bitops() {\n  }\n  ", "previous_filename": "patches/0023-sysroot-Ignore-failing-tests.patch"}, {"sha": "1d5479beddee915871f801c0892a4c2c25baf73d", "filename": "patches/0027-coretests-128bit-atomic-operations.patch", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/a45a81a6a290d654d8906a099721d631fd361ee9/patches%2F0027-coretests-128bit-atomic-operations.patch", "raw_url": "https://github.com/rust-lang/rust/raw/a45a81a6a290d654d8906a099721d631fd361ee9/patches%2F0027-coretests-128bit-atomic-operations.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0027-coretests-128bit-atomic-operations.patch?ref=a45a81a6a290d654d8906a099721d631fd361ee9", "patch": "@@ -0,0 +1,30 @@\n+From ad7ffe71baba46865f2e65266ab025920dfdc20b Mon Sep 17 00:00:00 2001\n+From: bjorn3 <bjorn3@users.noreply.github.com>\n+Date: Thu, 18 Feb 2021 18:45:28 +0100\n+Subject: [PATCH] Disable 128bit atomic operations\n+\n+Cranelift doesn't support them yet\n+---\n+ library/core/src/panic/unwind_safe.rs |  6 -----\n+ library/core/src/sync/atomic.rs       | 38 ---------------------------\n+ library/core/tests/atomic.rs          |  4 ---\n+ 4 files changed, 4 insertions(+), 50 deletions(-)\n+\n+diff --git a/atomic.rs b/atomic.rs\n+index b735957..ea728b6 100644\n+--- a/atomic.rs\n++++ b/atomic.rs\n+@@ -185,10 +185,6 @@ fn atomic_alignment() {\n+     assert_eq!(align_of::<AtomicU64>(), size_of::<AtomicU64>());\n+     #[cfg(target_has_atomic = \"64\")]\n+     assert_eq!(align_of::<AtomicI64>(), size_of::<AtomicI64>());\n+-    #[cfg(target_has_atomic = \"128\")]\n+-    assert_eq!(align_of::<AtomicU128>(), size_of::<AtomicU128>());\n+-    #[cfg(target_has_atomic = \"128\")]\n+-    assert_eq!(align_of::<AtomicI128>(), size_of::<AtomicI128>());\n+     #[cfg(target_has_atomic = \"ptr\")]\n+     assert_eq!(align_of::<AtomicUsize>(), size_of::<AtomicUsize>());\n+     #[cfg(target_has_atomic = \"ptr\")]\n+--\n+2.26.2.7.g19db9cfb68\n+"}, {"sha": "45f73f36b93171ddd2b32b2571666fd25674ced6", "filename": "patches/0027-stdlib-128bit-atomic-operations.patch", "status": "renamed", "additions": 0, "deletions": 15, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a45a81a6a290d654d8906a099721d631fd361ee9/patches%2F0027-stdlib-128bit-atomic-operations.patch", "raw_url": "https://github.com/rust-lang/rust/raw/a45a81a6a290d654d8906a099721d631fd361ee9/patches%2F0027-stdlib-128bit-atomic-operations.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0027-stdlib-128bit-atomic-operations.patch?ref=a45a81a6a290d654d8906a099721d631fd361ee9", "patch": "@@ -85,21 +85,6 @@ index d9de37e..8293fce 100644\n  \n  macro_rules! atomic_int_ptr_sized {\n      ( $($target_pointer_width:literal $align:literal)* ) => { $(\n-diff --git a/library/core/tests/atomic.rs b/library/core/tests/atomic.rs\n-index b735957..ea728b6 100644\n---- a/library/core/tests/atomic.rs\n-+++ b/library/core/tests/atomic.rs\n-@@ -185,10 +185,6 @@ fn atomic_alignment() {\n-     assert_eq!(align_of::<AtomicU64>(), size_of::<AtomicU64>());\n-     #[cfg(target_has_atomic = \"64\")]\n-     assert_eq!(align_of::<AtomicI64>(), size_of::<AtomicI64>());\n--    #[cfg(target_has_atomic = \"128\")]\n--    assert_eq!(align_of::<AtomicU128>(), size_of::<AtomicU128>());\n--    #[cfg(target_has_atomic = \"128\")]\n--    assert_eq!(align_of::<AtomicI128>(), size_of::<AtomicI128>());\n-     #[cfg(target_has_atomic = \"ptr\")]\n-     assert_eq!(align_of::<AtomicUsize>(), size_of::<AtomicUsize>());\n-     #[cfg(target_has_atomic = \"ptr\")]\n --\n 2.26.2.7.g19db9cfb68\n ", "previous_filename": "patches/0027-sysroot-128bit-atomic-operations.patch"}, {"sha": "440177018f428e66a124963332c13a9f328e3c9c", "filename": "patches/0028-coretests-Disable-long-running-tests.patch", "status": "renamed", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a45a81a6a290d654d8906a099721d631fd361ee9/patches%2F0028-coretests-Disable-long-running-tests.patch", "raw_url": "https://github.com/rust-lang/rust/raw/a45a81a6a290d654d8906a099721d631fd361ee9/patches%2F0028-coretests-Disable-long-running-tests.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0028-coretests-Disable-long-running-tests.patch?ref=a45a81a6a290d654d8906a099721d631fd361ee9", "patch": "@@ -7,10 +7,10 @@ Subject: [PATCH] Disable long running tests\n  library/core/tests/slice.rs | 2 ++\n  1 file changed, 2 insertions(+)\n \n-diff --git a/library/core/tests/slice.rs b/library/core/tests/slice.rs\n+diff --git a/slice.rs b/slice.rs\n index 8402833..84592e0 100644\n---- a/library/core/tests/slice.rs\n-+++ b/library/core/tests/slice.rs\n+--- a/slice.rs\n++++ b/slice.rs\n @@ -1809,6 +1809,7 @@ fn sort_unstable() {\n      assert!(v == [0xDEADBEEF]);\n  }", "previous_filename": "patches/0028-sysroot-Disable-long-running-tests.patch"}, {"sha": "abb09775d213511041756911473c75632643ef2a", "filename": "scripts/setup_rust_fork.sh", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a45a81a6a290d654d8906a099721d631fd361ee9/scripts%2Fsetup_rust_fork.sh", "raw_url": "https://github.com/rust-lang/rust/raw/a45a81a6a290d654d8906a099721d631fd361ee9/scripts%2Fsetup_rust_fork.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/scripts%2Fsetup_rust_fork.sh?ref=a45a81a6a290d654d8906a099721d631fd361ee9", "patch": "@@ -10,7 +10,7 @@ git fetch\n git checkout -- .\n git checkout \"$(rustc -V | cut -d' ' -f3 | tr -d '(')\"\n \n-git -c user.name=Dummy -c user.email=dummy@example.com am ../patches/*-sysroot-*.patch\n+git -c user.name=Dummy -c user.email=dummy@example.com am ../patches/*-stdlib-*.patch\n \n git apply - <<EOF\n diff --git a/library/alloc/Cargo.toml b/library/alloc/Cargo.toml"}]}