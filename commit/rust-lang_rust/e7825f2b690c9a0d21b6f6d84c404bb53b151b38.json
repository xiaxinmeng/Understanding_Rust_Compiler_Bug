{"sha": "e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "node_id": "C_kwDOAAsO6NoAKGU3ODI1ZjJiNjkwYzlhMGQyMWI2ZjZkODRjNDA0YmI1M2IxNTFiMzg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-24T22:04:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-01-24T22:04:55Z"}, "message": "Auto merge of #90842 - pierwill:localdefid-indexmap, r=wesleywiser\n\nUse `indexmap` to avoid sorting `LocalDefId`s\n\nSee discussion in https://github.com/rust-lang/rust/pull/90408#discussion_r745935459.\n\nRelated to work on https://github.com/rust-lang/rust/issues/90317.", "tree": {"sha": "2165b3112bafb999f4ee10cb66faad7c9dee4d3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2165b3112bafb999f4ee10cb66faad7c9dee4d3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "html_url": "https://github.com/rust-lang/rust/commit/e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51126be1b260216b41143469086e6e6ee567647e", "url": "https://api.github.com/repos/rust-lang/rust/commits/51126be1b260216b41143469086e6e6ee567647e", "html_url": "https://github.com/rust-lang/rust/commit/51126be1b260216b41143469086e6e6ee567647e"}, {"sha": "4f89224f7f58dd941c9393cf5f85ac619ede8eb2", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f89224f7f58dd941c9393cf5f85ac619ede8eb2", "html_url": "https://github.com/rust-lang/rust/commit/4f89224f7f58dd941c9393cf5f85ac619ede8eb2"}], "stats": {"total": 61, "additions": 30, "deletions": 31}, "files": [{"sha": "da34271a2b4af1dcdb87dff45ec92851dcaecd36", "filename": "Cargo.lock", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "patch": "@@ -1739,12 +1739,13 @@ dependencies = [\n \n [[package]]\n name = \"indexmap\"\n-version = \"1.7.0\"\n+version = \"1.8.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"bc633605454125dec4b66843673f01c7df2b89479b32e0ed634e43a91cff62a5\"\n+checksum = \"282a6247722caba404c065016bbfa522806e51714c34f5dfc3e4a3a46fcb4223\"\n dependencies = [\n  \"autocfg\",\n  \"hashbrown 0.11.2\",\n+ \"rustc-rayon\",\n  \"serde\",\n ]\n "}, {"sha": "faed52727c828012de913fb3ce9e918d697ec5ac", "filename": "compiler/rustc_codegen_cranelift/Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/compiler%2Frustc_codegen_cranelift%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/compiler%2Frustc_codegen_cranelift%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2FCargo.lock?ref=e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "patch": "@@ -172,9 +172,9 @@ checksum = \"ab5ef0d4909ef3724cc8cce6ccc8572c5c817592e9285f5464f8e86f8bd3726e\"\n \n [[package]]\n name = \"indexmap\"\n-version = \"1.7.0\"\n+version = \"1.8.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"bc633605454125dec4b66843673f01c7df2b89479b32e0ed634e43a91cff62a5\"\n+checksum = \"282a6247722caba404c065016bbfa522806e51714c34f5dfc3e4a3a46fcb4223\"\n dependencies = [\n  \"autocfg\",\n  \"hashbrown\","}, {"sha": "2d19040b5091c9479db4ebd223f88019613c18a0", "filename": "compiler/rustc_codegen_cranelift/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/compiler%2Frustc_codegen_cranelift%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/compiler%2Frustc_codegen_cranelift%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2FCargo.toml?ref=e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "patch": "@@ -19,7 +19,7 @@ gimli = { version = \"0.25.0\", default-features = false, features = [\"write\"]}\n object = { version = \"0.27.0\", default-features = false, features = [\"std\", \"read_core\", \"write\", \"archive\", \"coff\", \"elf\", \"macho\", \"pe\"] }\n \n ar = { git = \"https://github.com/bjorn3/rust-ar.git\", branch = \"do_not_remove_cg_clif_ranlib\" }\n-indexmap = \"1.0.2\"\n+indexmap = \"1.8.0\"\n libloading = { version = \"0.6.0\", optional = true }\n smallvec = \"1.6.1\"\n "}, {"sha": "ad296c97659d209e1978816e7788a7e362bc9f66", "filename": "compiler/rustc_data_structures/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/compiler%2Frustc_data_structures%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/compiler%2Frustc_data_structures%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2FCargo.toml?ref=e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "patch": "@@ -9,7 +9,7 @@ doctest = false\n [dependencies]\n arrayvec = { version = \"0.7\", default-features = false }\n ena = \"0.14\"\n-indexmap = \"1.5.1\"\n+indexmap = { version = \"1.8.0\", features = [\"rustc-rayon\"] }\n tracing = \"0.1\"\n jobserver_crate = { version = \"0.1.13\", package = \"jobserver\" }\n rustc_serialize = { path = \"../rustc_serialize\" }"}, {"sha": "809e5ee2c645e264b9ad22c330c74025aacb33c8", "filename": "compiler/rustc_metadata/src/rmeta/encoder.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fencoder.rs?ref=e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "patch": "@@ -1314,7 +1314,7 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n             return;\n         }\n \n-        let mut keys_and_jobs = self\n+        let keys_and_jobs = self\n             .tcx\n             .mir_keys(())\n             .iter()\n@@ -1327,8 +1327,6 @@ impl<'a, 'tcx> EncodeContext<'a, 'tcx> {\n                 }\n             })\n             .collect::<Vec<_>>();\n-        // Sort everything to ensure a stable order for diagnotics.\n-        keys_and_jobs.sort_by_key(|&(def_id, _, _)| def_id.index());\n         for (def_id, encode_const, encode_opt) in keys_and_jobs.into_iter() {\n             debug_assert!(encode_const || encode_opt);\n "}, {"sha": "715a1fa25a1c60c72f5b9a80935efbcaaae6b2d3", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "patch": "@@ -252,7 +252,7 @@ rustc_queries! {\n     /// Set of all the `DefId`s in this crate that have MIR associated with\n     /// them. This includes all the body owners, but also things like struct\n     /// constructors.\n-    query mir_keys(_: ()) -> FxHashSet<LocalDefId> {\n+    query mir_keys(_: ()) -> rustc_data_structures::fx::FxIndexSet<LocalDefId> {\n         storage(ArenaCacheSelector<'tcx>)\n         desc { \"getting a list of all mir_keys\" }\n     }"}, {"sha": "8e1601fb719c00fa8d2960e705e98dffb2cae025", "filename": "compiler/rustc_mir_transform/src/lib.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Flib.rs?ref=e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "patch": "@@ -18,7 +18,7 @@ extern crate rustc_middle;\n \n use required_consts::RequiredConstsVisitor;\n use rustc_const_eval::util;\n-use rustc_data_structures::fx::FxHashSet;\n+use rustc_data_structures::fx::FxIndexSet;\n use rustc_data_structures::steal::Steal;\n use rustc_hir as hir;\n use rustc_hir::def_id::{DefId, LocalDefId};\n@@ -136,8 +136,8 @@ fn is_mir_available(tcx: TyCtxt<'_>, def_id: DefId) -> bool {\n \n /// Finds the full set of `DefId`s within the current crate that have\n /// MIR associated with them.\n-fn mir_keys(tcx: TyCtxt<'_>, (): ()) -> FxHashSet<LocalDefId> {\n-    let mut set = FxHashSet::default();\n+fn mir_keys(tcx: TyCtxt<'_>, (): ()) -> FxIndexSet<LocalDefId> {\n+    let mut set = FxIndexSet::default();\n \n     // All body-owners have MIR associated with them.\n     set.extend(tcx.hir().body_owners());\n@@ -146,7 +146,7 @@ fn mir_keys(tcx: TyCtxt<'_>, (): ()) -> FxHashSet<LocalDefId> {\n     // they don't have a BodyId, so we need to build them separately.\n     struct GatherCtors<'a, 'tcx> {\n         tcx: TyCtxt<'tcx>,\n-        set: &'a mut FxHashSet<LocalDefId>,\n+        set: &'a mut FxIndexSet<LocalDefId>,\n     }\n     impl<'tcx> Visitor<'tcx> for GatherCtors<'_, 'tcx> {\n         fn visit_variant_data("}, {"sha": "f6b9e17e58ed9a97105260f881a98444ae5a6f45", "filename": "compiler/rustc_serialize/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/compiler%2Frustc_serialize%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/compiler%2Frustc_serialize%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_serialize%2FCargo.toml?ref=e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "patch": "@@ -4,7 +4,7 @@ version = \"0.0.0\"\n edition = \"2021\"\n \n [dependencies]\n-indexmap = \"1\"\n+indexmap = \"1.8.0\"\n smallvec = { version = \"1.6.1\", features = [\"union\", \"may_dangle\"] }\n \n [dev-dependencies]"}, {"sha": "f02bccc4b2da50039c9fa6d912622b93e1af575e", "filename": "src/test/run-make/const_fn_mir/dump.mir", "status": "modified", "additions": 16, "deletions": 16, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/src%2Ftest%2Frun-make%2Fconst_fn_mir%2Fdump.mir", "raw_url": "https://github.com/rust-lang/rust/raw/e7825f2b690c9a0d21b6f6d84c404bb53b151b38/src%2Ftest%2Frun-make%2Fconst_fn_mir%2Fdump.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fconst_fn_mir%2Fdump.mir?ref=e7825f2b690c9a0d21b6f6d84c404bb53b151b38", "patch": "@@ -1,21 +1,5 @@\n // WARNING: This output format is intended for human consumers only\n // and is subject to change without notice. Knock yourself out.\n-fn main() -> () {\n-    let mut _0: ();                      // return place in scope 0 at main.rs:8:11: 8:11\n-    let _1: i32;                         // in scope 0 at main.rs:9:5: 9:10\n-\n-    bb0: {\n-        _1 = foo() -> bb1;               // scope 0 at main.rs:9:5: 9:10\n-                                         // mir::Constant\n-                                         // + span: main.rs:9:5: 9:8\n-                                         // + literal: Const { ty: fn() -> i32 {foo}, val: Value(Scalar(<ZST>)) }\n-    }\n-\n-    bb1: {\n-        return;                          // scope 0 at main.rs:10:2: 10:2\n-    }\n-}\n-\n fn foo() -> i32 {\n     let mut _0: i32;                     // return place in scope 0 at main.rs:4:19: 4:22\n \n@@ -40,3 +24,19 @@ fn foo() -> i32 {\n         return;                          // scope 0 at main.rs:6:2: 6:2\n     }\n }\n+\n+fn main() -> () {\n+    let mut _0: ();                      // return place in scope 0 at main.rs:8:11: 8:11\n+    let _1: i32;                         // in scope 0 at main.rs:9:5: 9:10\n+\n+    bb0: {\n+        _1 = foo() -> bb1;               // scope 0 at main.rs:9:5: 9:10\n+                                         // mir::Constant\n+                                         // + span: main.rs:9:5: 9:8\n+                                         // + literal: Const { ty: fn() -> i32 {foo}, val: Value(Scalar(<ZST>)) }\n+    }\n+\n+    bb1: {\n+        return;                          // scope 0 at main.rs:10:2: 10:2\n+    }\n+}"}]}