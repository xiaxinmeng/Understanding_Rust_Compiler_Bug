{"sha": "bf46f78ca7e15631f08253c14975896030ca24a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmNDZmNzhjYTdlMTU2MzFmMDgyNTNjMTQ5NzU4OTYwMzBjYTI0YTg=", "commit": {"author": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-10-18T10:35:59Z"}, "committer": {"name": "Hirochika Matsumoto", "email": "matsujika@gmail.com", "date": "2020-11-17T16:28:37Z"}, "message": "Fix clippy error", "tree": {"sha": "fee74ab9c8c08b0ef80ba61fc88c5e706d943aeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fee74ab9c8c08b0ef80ba61fc88c5e706d943aeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf46f78ca7e15631f08253c14975896030ca24a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf46f78ca7e15631f08253c14975896030ca24a8", "html_url": "https://github.com/rust-lang/rust/commit/bf46f78ca7e15631f08253c14975896030ca24a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf46f78ca7e15631f08253c14975896030ca24a8/comments", "author": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hkmatsumoto", "id": 57856193, "node_id": "MDQ6VXNlcjU3ODU2MTkz", "avatar_url": "https://avatars.githubusercontent.com/u/57856193?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hkmatsumoto", "html_url": "https://github.com/hkmatsumoto", "followers_url": "https://api.github.com/users/hkmatsumoto/followers", "following_url": "https://api.github.com/users/hkmatsumoto/following{/other_user}", "gists_url": "https://api.github.com/users/hkmatsumoto/gists{/gist_id}", "starred_url": "https://api.github.com/users/hkmatsumoto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hkmatsumoto/subscriptions", "organizations_url": "https://api.github.com/users/hkmatsumoto/orgs", "repos_url": "https://api.github.com/users/hkmatsumoto/repos", "events_url": "https://api.github.com/users/hkmatsumoto/events{/privacy}", "received_events_url": "https://api.github.com/users/hkmatsumoto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "532d205218c7aa28c1718f9e9088eeced6e2c5ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/532d205218c7aa28c1718f9e9088eeced6e2c5ac", "html_url": "https://github.com/rust-lang/rust/commit/532d205218c7aa28c1718f9e9088eeced6e2c5ac"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "c4ca7fcdecc252cf1e434e7d73607b5e0b827ac7", "filename": "clippy_lints/src/redundant_clone.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bf46f78ca7e15631f08253c14975896030ca24a8/clippy_lints%2Fsrc%2Fredundant_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf46f78ca7e15631f08253c14975896030ca24a8/clippy_lints%2Fsrc%2Fredundant_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fredundant_clone.rs?ref=bf46f78ca7e15631f08253c14975896030ca24a8", "patch": "@@ -320,11 +320,11 @@ fn find_stmt_assigns_to<'tcx>(\n \n     match (by_ref, &*rvalue) {\n         (true, mir::Rvalue::Ref(_, _, place)) | (false, mir::Rvalue::Use(mir::Operand::Copy(place))) => {\n-            base_local_and_movability(cx, mir, *place)\n+            Some(base_local_and_movability(cx, mir, *place))\n         },\n         (false, mir::Rvalue::Ref(_, _, place)) => {\n             if let [mir::ProjectionElem::Deref] = place.as_ref().projection {\n-                base_local_and_movability(cx, mir, *place)\n+                Some(base_local_and_movability(cx, mir, *place))\n             } else {\n                 None\n             }\n@@ -341,7 +341,7 @@ fn base_local_and_movability<'tcx>(\n     cx: &LateContext<'tcx>,\n     mir: &mir::Body<'tcx>,\n     place: mir::Place<'tcx>,\n-) -> Option<(mir::Local, CannotMoveOut)> {\n+) -> (mir::Local, CannotMoveOut) {\n     use rustc_middle::mir::PlaceRef;\n \n     // Dereference. You cannot move things out from a borrowed value.\n@@ -362,7 +362,7 @@ fn base_local_and_movability<'tcx>(\n             && !is_copy(cx, mir::Place::ty_from(local, projection, &mir.local_decls, cx.tcx).ty);\n     }\n \n-    Some((local, deref || field || slice))\n+    (local, deref || field || slice)\n }\n \n struct LocalUseVisitor {"}]}