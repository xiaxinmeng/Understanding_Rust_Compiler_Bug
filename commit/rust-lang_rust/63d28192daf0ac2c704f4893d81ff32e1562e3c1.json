{"sha": "63d28192daf0ac2c704f4893d81ff32e1562e3c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzZDI4MTkyZGFmMGFjMmM3MDRmNDg5M2Q4MWZmMzJlMTU2MmUzYzE=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-06-09T05:07:14Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-06-24T08:30:48Z"}, "message": "Add tracking issue and rename to hash_one", "tree": {"sha": "0459b489f558136923c3e9e28846f018ffe04c45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0459b489f558136923c3e9e28846f018ffe04c45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63d28192daf0ac2c704f4893d81ff32e1562e3c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63d28192daf0ac2c704f4893d81ff32e1562e3c1", "html_url": "https://github.com/rust-lang/rust/commit/63d28192daf0ac2c704f4893d81ff32e1562e3c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63d28192daf0ac2c704f4893d81ff32e1562e3c1/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3eb9e3db2af13cb8c8a7542ae94514228a5417c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3eb9e3db2af13cb8c8a7542ae94514228a5417c", "html_url": "https://github.com/rust-lang/rust/commit/a3eb9e3db2af13cb8c8a7542ae94514228a5417c"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "9dbefe0822e36ce6142a15ff6510eb6894c4f226", "filename": "library/core/src/hash/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/63d28192daf0ac2c704f4893d81ff32e1562e3c1/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63d28192daf0ac2c704f4893d81ff32e1562e3c1/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fhash%2Fmod.rs?ref=63d28192daf0ac2c704f4893d81ff32e1562e3c1", "patch": "@@ -496,7 +496,7 @@ pub trait BuildHasher {\n     /// # Example\n     ///\n     /// ```\n-    /// #![feature(build_hasher_simple_hash_of)]\n+    /// #![feature(build_hasher_simple_hash_one)]\n     ///\n     /// use std::cmp::{max, min};\n     /// use std::hash::{BuildHasher, Hash, Hasher};\n@@ -511,16 +511,16 @@ pub trait BuildHasher {\n     /// // Then later, in a `#[test]` for the type...\n     /// let bh = std::collections::hash_map::RandomState::new();\n     /// assert_eq!(\n-    ///     bh.hash_of(OrderAmbivalentPair(1, 2)),\n-    ///     bh.hash_of(OrderAmbivalentPair(2, 1))\n+    ///     bh.hash_one(OrderAmbivalentPair(1, 2)),\n+    ///     bh.hash_one(OrderAmbivalentPair(2, 1))\n     /// );\n     /// assert_eq!(\n-    ///     bh.hash_of(OrderAmbivalentPair(10, 2)),\n-    ///     bh.hash_of(&OrderAmbivalentPair(2, 10))\n+    ///     bh.hash_one(OrderAmbivalentPair(10, 2)),\n+    ///     bh.hash_one(&OrderAmbivalentPair(2, 10))\n     /// );\n     /// ```\n-    #[unstable(feature = \"build_hasher_simple_hash_of\", issue = \"88888888\")]\n-    fn hash_of<T: Hash>(&self, x: T) -> u64 {\n+    #[unstable(feature = \"build_hasher_simple_hash_one\", issue = \"86161\")]\n+    fn hash_one<T: Hash>(&self, x: T) -> u64 {\n         let mut hasher = self.build_hasher();\n         x.hash(&mut hasher);\n         hasher.finish()"}]}