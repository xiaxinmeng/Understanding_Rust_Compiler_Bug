{"sha": "6757053cffb585249105fbd76f83a2fe7501219b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NTcwNTNjZmZiNTg1MjQ5MTA1ZmJkNzZmODNhMmZlNzUwMTIxOWI=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2014-02-23T13:53:59Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-02-25T05:22:27Z"}, "message": "syntax: allow stmt/expr macro invocations to be delimited by {}.\n\nThis makes using control-flow-y macros like `spawn! { ... }` more fluent\nand natural.\n\ncc #11892.", "tree": {"sha": "1af550708ee4ee42e1ebcb02a8e38e6cc226d4e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1af550708ee4ee42e1ebcb02a8e38e6cc226d4e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6757053cffb585249105fbd76f83a2fe7501219b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6757053cffb585249105fbd76f83a2fe7501219b", "html_url": "https://github.com/rust-lang/rust/commit/6757053cffb585249105fbd76f83a2fe7501219b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6757053cffb585249105fbd76f83a2fe7501219b/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0309104cc59d6290fba2fe6dd9bfdc18aacab5f8", "url": "https://api.github.com/repos/rust-lang/rust/commits/0309104cc59d6290fba2fe6dd9bfdc18aacab5f8", "html_url": "https://github.com/rust-lang/rust/commit/0309104cc59d6290fba2fe6dd9bfdc18aacab5f8"}], "stats": {"total": 97, "additions": 94, "deletions": 3}, "files": [{"sha": "cbe371a06a53448b3a75f13a6227b162bcee5c30", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 23, "deletions": 3, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/6757053cffb585249105fbd76f83a2fe7501219b/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6757053cffb585249105fbd76f83a2fe7501219b/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=6757053cffb585249105fbd76f83a2fe7501219b", "patch": "@@ -3185,15 +3185,35 @@ impl Parser {\n             let pth = self.parse_path(NoTypesAllowed).path;\n             self.bump();\n \n-            let id = if self.token == token::LPAREN {\n+            let id = if self.token == token::LPAREN || self.token == token::LBRACE {\n                 token::special_idents::invalid // no special identifier\n             } else {\n                 self.parse_ident()\n             };\n \n+            // check that we're pointing at delimiters (need to check\n+            // again after the `if`, because of `parse_ident`\n+            // consuming more tokens).\n+            let (bra, ket) = match self.token {\n+                token::LPAREN => (token::LPAREN, token::RPAREN),\n+                token::LBRACE => (token::LBRACE, token::RBRACE),\n+                _ => {\n+                    // we only expect an ident if we didn't parse one\n+                    // above.\n+                    let ident_str = if id == token::special_idents::invalid {\n+                        \"identifier, \"\n+                    } else {\n+                        \"\"\n+                    };\n+                    let tok_str = self.this_token_to_str();\n+                    self.fatal(format!(\"expected {}`(` or `\\\\{`, but found `{}`\",\n+                                       ident_str, tok_str))\n+                }\n+            };\n+\n             let tts = self.parse_unspanned_seq(\n-                &token::LPAREN,\n-                &token::RPAREN,\n+                &bra,\n+                &ket,\n                 seq_sep_none(),\n                 |p| p.parse_token_tree()\n             );"}, {"sha": "6f3b8bd421f86e3585e9b1346447e201ef6104e3", "filename": "src/test/compile-fail/macro-bad-delimiter-ident.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6757053cffb585249105fbd76f83a2fe7501219b/src%2Ftest%2Fcompile-fail%2Fmacro-bad-delimiter-ident.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6757053cffb585249105fbd76f83a2fe7501219b/src%2Ftest%2Fcompile-fail%2Fmacro-bad-delimiter-ident.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-bad-delimiter-ident.rs?ref=6757053cffb585249105fbd76f83a2fe7501219b", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    foo! bar < //~ ERROR expected `(` or `{`, but found `<`\n+}"}, {"sha": "d03698c1573b17cd8b2414d605c7feb4ab3a035d", "filename": "src/test/compile-fail/macro-mismatched-delim-brace-paren.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6757053cffb585249105fbd76f83a2fe7501219b/src%2Ftest%2Fcompile-fail%2Fmacro-mismatched-delim-brace-paren.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6757053cffb585249105fbd76f83a2fe7501219b/src%2Ftest%2Fcompile-fail%2Fmacro-mismatched-delim-brace-paren.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-mismatched-delim-brace-paren.rs?ref=6757053cffb585249105fbd76f83a2fe7501219b", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    foo! {\n+        bar, \"baz\", 1, 2.0\n+    ) //~ ERROR incorrect close delimiter\n+}"}, {"sha": "d80f93d7ad0d03d1dcc74c5bb16194fd4449bc16", "filename": "src/test/compile-fail/macro-mismatched-delim-paren-brace.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/6757053cffb585249105fbd76f83a2fe7501219b/src%2Ftest%2Fcompile-fail%2Fmacro-mismatched-delim-paren-brace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6757053cffb585249105fbd76f83a2fe7501219b/src%2Ftest%2Fcompile-fail%2Fmacro-mismatched-delim-paren-brace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-mismatched-delim-paren-brace.rs?ref=6757053cffb585249105fbd76f83a2fe7501219b", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    foo! (\n+        bar, \"baz\", 1, 2.0\n+    } //~ ERROR incorrect close delimiter\n+}"}, {"sha": "2a368568f8ca5de53b3d6ff32fafb430f15a2c36", "filename": "src/test/run-pass/macro-with-braces-in-expr-position.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/6757053cffb585249105fbd76f83a2fe7501219b/src%2Ftest%2Frun-pass%2Fmacro-with-braces-in-expr-position.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6757053cffb585249105fbd76f83a2fe7501219b/src%2Ftest%2Frun-pass%2Fmacro-with-braces-in-expr-position.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-with-braces-in-expr-position.rs?ref=6757053cffb585249105fbd76f83a2fe7501219b", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[feature(macro_rules)];\n+\n+macro_rules! expr (($e: expr) => { $e })\n+\n+macro_rules! spawn {\n+    ($($code: tt)*) => {\n+        expr!(spawn(proc() {$($code)*}))\n+    }\n+}\n+\n+pub fn main() {\n+    spawn! {\n+        info!(\"stmt\");\n+    };\n+    let _ = spawn! {\n+        info!(\"expr\");\n+    };\n+}"}]}