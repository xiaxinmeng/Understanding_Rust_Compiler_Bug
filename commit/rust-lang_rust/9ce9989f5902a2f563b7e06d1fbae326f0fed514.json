{"sha": "9ce9989f5902a2f563b7e06d1fbae326f0fed514", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljZTk5ODlmNTkwMmEyZjU2M2I3ZTA2ZDFmYmFlMzI2ZjBmZWQ1MTQ=", "commit": {"author": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-03-26T09:57:51Z"}, "committer": {"name": "flip1995", "email": "philipp.krones@embecosm.com", "date": "2021-03-26T13:36:09Z"}, "message": "Improve doc on how to add MSRV to a lint", "tree": {"sha": "6d7f542548f4ab5ae00e025447310fe00e14c0d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6d7f542548f4ab5ae00e025447310fe00e14c0d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9ce9989f5902a2f563b7e06d1fbae326f0fed514", "comment_count": 0, "verification": {"verified": false, "reason": "bad_email", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEij1UXJ/PQTcb99vTHKDfKvWdaKUFAmBd40kACgkQHKDfKvWd\naKXZCQ//YRIEARyAh49LIU79tUOEENvBbiu19opvk1zJRm4YYrOSCoFVTznSLUHv\nTANDwLqEEvBWcYKQf+ogH59s2NxQQn/uKY3TLWJteVjin7fEZ2DTW6UcLFLl0ldi\nTEVvxetXenZcN28KFWKeuvwvVsAYwkCjX2oWgxs3RAMxxZOk6tEs9ofeM7KklzNt\n1dd5KlmdtaEzMSH1AI2TKMAUwp6+YjWG6Uu90tJfSrsoiLnGrk3TwGdpe6yBY2xo\n0dEM4krt/6A1QrnsS5Dz7IM0CmfFH2dtTOhx8ch2QCjC9mtxHi+mQg59O+bail2u\nqZNP2tKgDZPoAgXHOdP886DuGtgmGSKADo2bVmnVI1CsoLL9CqU2KlSYsqfy5QJJ\nqG4leYOy4HS4+zNHHd/pzTTWIkg9rh0ANPYX20q0MbmrxJrQS+Qknkb59Yjdn8ph\nGxdsRX01Kmsu2Fp6b6C/rAwtt95Dey+q0z6srLRcS5viRqoLZNTHkM/mi8SbFruY\nyL/GN3JjhnARRwTQ5GaATymX3dz2RdLc3Ha/2e0G1rmoGU3rGtKJm2RDhcOp9i6h\nxnZGMYsDzYA3KU4ArnWZMUm6xcTbjSOfY8q/N7pahTl2C8LirdBo6XwB1Fakybsz\nRKq//v3qItEvejX4TL7aNOKCH7RYjYkrhArL0Z0xZaohbgdjYy4=\n=m0sO\n-----END PGP SIGNATURE-----", "payload": "tree 6d7f542548f4ab5ae00e025447310fe00e14c0d3\nparent 1a1adad81d0fd7d0c64d0a72575a6b4db69c035a\nauthor flip1995 <philipp.krones@embecosm.com> 1616752671 +0100\ncommitter flip1995 <philipp.krones@embecosm.com> 1616765769 +0100\n\nImprove doc on how to add MSRV to a lint\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9ce9989f5902a2f563b7e06d1fbae326f0fed514", "html_url": "https://github.com/rust-lang/rust/commit/9ce9989f5902a2f563b7e06d1fbae326f0fed514", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9ce9989f5902a2f563b7e06d1fbae326f0fed514/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a1adad81d0fd7d0c64d0a72575a6b4db69c035a", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a", "html_url": "https://github.com/rust-lang/rust/commit/1a1adad81d0fd7d0c64d0a72575a6b4db69c035a"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "9fb22c1eab8edbefdae998f5c89cd65ac3be706b", "filename": "doc/adding_lints.md", "status": "modified", "additions": 27, "deletions": 13, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/9ce9989f5902a2f563b7e06d1fbae326f0fed514/doc%2Fadding_lints.md", "raw_url": "https://github.com/rust-lang/rust/raw/9ce9989f5902a2f563b7e06d1fbae326f0fed514/doc%2Fadding_lints.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Fadding_lints.md?ref=9ce9989f5902a2f563b7e06d1fbae326f0fed514", "patch": "@@ -388,18 +388,19 @@ pass.\n [`FnKind::Fn`]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_ast/visit/enum.FnKind.html#variant.Fn\n [ident]: https://doc.rust-lang.org/nightly/nightly-rustc/rustc_span/symbol/struct.Ident.html\n \n-## Specifying the lint's minimum supported Rust version (msrv)\n+## Specifying the lint's minimum supported Rust version (MSRV)\n \n-Projects supporting older versions of Rust would need to disable a lint if it targets features\n-present in later versions. Support for this can be added by specifying an msrv in your lint like so,\n+Projects supporting older versions of Rust would need to disable a lint if it\n+targets features present in later versions. Support for this can be added by\n+specifying an MSRV in your lint like so,\n \n ```rust\n const MANUAL_STRIP_MSRV: RustcVersion = RustcVersion::new(1, 45, 0);\n ```\n \n-The project's msrv will also have to be an attribute in the lint so you'll have to add a struct\n-and constructor for your lint. The project's msrv needs to be passed when the lint is registered\n-in `lib.rs`\n+The project's MSRV will also have to be an attribute in the lint so you'll have\n+to add a struct and constructor for your lint. The project's MSRV needs to be\n+passed when the lint is registered in `lib.rs`\n \n ```rust\n pub struct ManualStrip {\n@@ -414,18 +415,19 @@ impl ManualStrip {\n }\n ```\n \n-The project's msrv can then be matched against the lint's msrv in the LintPass using the `meets_msrv` utility\n-function.\n+The project's MSRV can then be matched against the lint's `msrv` in the LintPass\n+using the `meets_msrv` utility function.\n \n ``` rust\n if !meets_msrv(self.msrv.as_ref(), &MANUAL_STRIP_MSRV) {\n     return;\n }\n ```\n \n-The project's msrv can also be specified as an inner attribute, which overrides the value from\n-`clippy.toml`. This can be accounted for using the `extract_msrv_attr!(LintContext)` macro and passing\n-LateContext/EarlyContext.\n+The project's MSRV can also be specified as an inner attribute, which overrides\n+the value from `clippy.toml`. This can be accounted for using the\n+`extract_msrv_attr!(LintContext)` macro and passing\n+`LateContext`/`EarlyContext`.\n \n ```rust\n impl<'tcx> LateLintPass<'tcx> for ManualStrip {\n@@ -436,8 +438,20 @@ impl<'tcx> LateLintPass<'tcx> for ManualStrip {\n }\n ```\n \n-Once the msrv is added to the lint, a relevant test case should be added to `tests/ui/min_rust_version_attr.rs`\n-which verifies that the lint isn't emitted if the project's msrv is lower.\n+Once the `msrv` is added to the lint, a relevant test case should be added to\n+`tests/ui/min_rust_version_attr.rs` which verifies that the lint isn't emitted\n+if the project's MSRV is lower.\n+\n+As a last step, the lint should be added to the lint documentation. This is done\n+in `clippy_lints/src/utils/conf.rs`:\n+\n+```rust\n+define_Conf! {\n+    /// Lint: LIST, OF, LINTS, <THE_NEWLY_ADDED_LINT>. The minimum rust version that the project supports\n+    (msrv, \"msrv\": Option<String>, None),\n+    ...\n+}\n+```\n \n ## Author lint\n "}]}