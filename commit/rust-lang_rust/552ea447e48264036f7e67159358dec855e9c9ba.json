{"sha": "552ea447e48264036f7e67159358dec855e9c9ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MmVhNDQ3ZTQ4MjY0MDM2ZjdlNjcxNTkzNThkZWM4NTVlOWM5YmE=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-10-28T19:16:41Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2019-12-03T10:54:36Z"}, "message": "rustc: combine Instance::fn_sig_noadjust and Instance::fn_sig.", "tree": {"sha": "9d5c9284fc67b4638d8097339549266773b25b99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d5c9284fc67b4638d8097339549266773b25b99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/552ea447e48264036f7e67159358dec855e9c9ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/552ea447e48264036f7e67159358dec855e9c9ba", "html_url": "https://github.com/rust-lang/rust/commit/552ea447e48264036f7e67159358dec855e9c9ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/552ea447e48264036f7e67159358dec855e9c9ba/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4787e97475de6be9487e3d9255a9c2d3c0bf9252", "url": "https://api.github.com/repos/rust-lang/rust/commits/4787e97475de6be9487e3d9255a9c2d3c0bf9252", "html_url": "https://github.com/rust-lang/rust/commit/4787e97475de6be9487e3d9255a9c2d3c0bf9252"}], "stats": {"total": 32, "additions": 15, "deletions": 17}, "files": [{"sha": "856be6f3c7791c9a994c68d656eb687321a6012b", "filename": "src/librustc/ty/instance.rs", "status": "modified", "additions": 15, "deletions": 17, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/552ea447e48264036f7e67159358dec855e9c9ba/src%2Flibrustc%2Fty%2Finstance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/552ea447e48264036f7e67159358dec855e9c9ba/src%2Flibrustc%2Fty%2Finstance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Finstance.rs?ref=552ea447e48264036f7e67159358dec855e9c9ba", "patch": "@@ -62,12 +62,24 @@ impl<'tcx> Instance<'tcx> {\n         )\n     }\n \n-    fn fn_sig_noadjust(&self, tcx: TyCtxt<'tcx>) -> PolyFnSig<'tcx> {\n+    pub fn fn_sig(&self, tcx: TyCtxt<'tcx>) -> PolyFnSig<'tcx> {\n         let ty = self.ty(tcx);\n         match ty.kind {\n             ty::FnDef(..) |\n             // Shims currently have type FnPtr. Not sure this should remain.\n-            ty::FnPtr(_) => ty.fn_sig(tcx),\n+            ty::FnPtr(_) => {\n+                let mut sig = ty.fn_sig(tcx);\n+                if let InstanceDef::VtableShim(..) = self.def {\n+                    // Modify `fn(self, ...)` to `fn(self: *mut Self, ...)`.\n+                    sig = sig.map_bound(|mut sig| {\n+                        let mut inputs_and_output = sig.inputs_and_output.to_vec();\n+                        inputs_and_output[0] = tcx.mk_mut_ptr(inputs_and_output[0]);\n+                        sig.inputs_and_output = tcx.intern_type_list(&inputs_and_output);\n+                        sig\n+                    });\n+                }\n+                sig\n+            }\n             ty::Closure(def_id, substs) => {\n                 let sig = substs.as_closure().sig(def_id, tcx);\n \n@@ -108,22 +120,8 @@ impl<'tcx> Instance<'tcx> {\n                     )\n                 })\n             }\n-            _ => bug!(\"unexpected type {:?} in Instance::fn_sig_noadjust\", ty)\n-        }\n-    }\n-\n-    pub fn fn_sig(&self, tcx: TyCtxt<'tcx>) -> ty::PolyFnSig<'tcx> {\n-        let mut fn_sig = self.fn_sig_noadjust(tcx);\n-        if let InstanceDef::VtableShim(..) = self.def {\n-            // Modify `fn(self, ...)` to `fn(self: *mut Self, ...)`.\n-            fn_sig = fn_sig.map_bound(|mut fn_sig| {\n-                let mut inputs_and_output = fn_sig.inputs_and_output.to_vec();\n-                inputs_and_output[0] = tcx.mk_mut_ptr(inputs_and_output[0]);\n-                fn_sig.inputs_and_output = tcx.intern_type_list(&inputs_and_output);\n-                fn_sig\n-            });\n+            _ => bug!(\"unexpected type {:?} in Instance::fn_sig\", ty)\n         }\n-        fn_sig\n     }\n }\n "}]}