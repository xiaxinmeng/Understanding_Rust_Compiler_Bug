{"sha": "f6a546e14d1e318eb6e38343eb98d20ac788437a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2YTU0NmUxNGQxZTMxOGViNmUzODM0M2ViOThkMjBhYzc4ODQzN2E=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-10-29T12:39:11Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-11-01T12:41:43Z"}, "message": "Be more flexible when looking for something by using levenshtein method", "tree": {"sha": "fc473d1a1fe6baf70183af616a89fb1528427d8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc473d1a1fe6baf70183af616a89fb1528427d8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6a546e14d1e318eb6e38343eb98d20ac788437a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6a546e14d1e318eb6e38343eb98d20ac788437a", "html_url": "https://github.com/rust-lang/rust/commit/f6a546e14d1e318eb6e38343eb98d20ac788437a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6a546e14d1e318eb6e38343eb98d20ac788437a/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f21008aba0242cf622a98cca52fb4a3a6dfca5b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f21008aba0242cf622a98cca52fb4a3a6dfca5b", "html_url": "https://github.com/rust-lang/rust/commit/6f21008aba0242cf622a98cca52fb4a3a6dfca5b"}], "stats": {"total": 29, "additions": 21, "deletions": 8}, "files": [{"sha": "5bef81c9662cae8e4fa9421b0e7703d1388e0339", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 21, "deletions": 8, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f6a546e14d1e318eb6e38343eb98d20ac788437a/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/f6a546e14d1e318eb6e38343eb98d20ac788437a/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=f6a546e14d1e318eb6e38343eb98d20ac788437a", "patch": "@@ -361,19 +361,30 @@\n             }\n \n             function findArg(obj, val) {\n+                var lev_distance = MAX_LEV_DISTANCE + 1;\n                 if (obj && obj.type && obj.type.inputs.length > 0) {\n                     for (var i = 0; i < obj.type.inputs.length; i++) {\n                         if (obj.type.inputs[i].name === val) {\n-                            return true;\n+                            // No need to check anything else: we found it. Let's just move on.\n+                            return 0;\n+                        }\n+                        var tmp = levenshtein(obj.type.inputs[i].name, val);\n+                        if (tmp < lev_distance) {\n+                            lev_distance = tmp;\n                         }\n                     }\n                 }\n-                return false;\n+                return lev_distance;\n             }\n \n             function checkReturned(obj, val) {\n-                return obj && obj.type && obj.type.output &&\n-                       obj.type.output.name.toLowerCase() === val;\n+                if (obj && obj.type && obj.type.output) {\n+                    if (obj.type.output.name.toLowerCase() === val) {\n+                        return 0;\n+                    }\n+                    return levenshtein(obj.type.output.name.toLowerCase(), val);\n+                }\n+                return MAX_LEV_DISTANCE + 1;\n             }\n \n             function typePassesFilter(filter, type) {\n@@ -489,8 +500,7 @@\n                                 });\n                             }\n                         } else if (\n-                            (lev_distance = levenshtein(searchWords[j], val)) <=\n-                                MAX_LEV_DISTANCE) {\n+                            (lev_distance = levenshtein(searchWords[j], val)) <= MAX_LEV_DISTANCE) {\n                             if (typePassesFilter(typeFilter, searchIndex[j].ty)) {\n                                 results.push({\n                                     id: j,\n@@ -499,7 +509,8 @@\n                                     lev: lev_distance,\n                                 });\n                             }\n-                        } else if (findArg(searchIndex[j], val)) {\n+                        } else if (\n+                            (lev_distance = findArg(searchIndex[j], val)) <= MAX_LEV_DISTANCE) {\n                             if (typePassesFilter(typeFilter, searchIndex[j].ty)) {\n                                 results.push({\n                                     id: j,\n@@ -508,7 +519,9 @@\n                                     lev: lev_distance,\n                                 });\n                             }\n-                        } else if (checkReturned(searchIndex[j], val)) {\n+                        } else if (\n+                            (lev_distance = checkReturned(searchIndex[j], val)) <=\n+                            MAX_LEV_DISTANCE) {\n                             if (typePassesFilter(typeFilter, searchIndex[j].ty)) {\n                                 results.push({\n                                     id: j,"}]}