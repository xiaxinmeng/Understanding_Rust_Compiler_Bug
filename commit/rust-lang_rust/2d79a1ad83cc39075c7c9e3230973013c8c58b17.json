{"sha": "2d79a1ad83cc39075c7c9e3230973013c8c58b17", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNzlhMWFkODNjYzM5MDc1YzdjOWUzMjMwOTczMDEzYzhjNThiMTc=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-09-15T07:10:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-15T07:10:16Z"}, "message": "Merge #1848\n\n1848: Parse `..` as a full pattern r=matklad a=ecstatic-morse\n\nResolves #1479.\r\n\r\nThis PR implements [RFC 2707](https://github.com/rust-lang/rfcs/pull/2707) in the parser. It introduces a new `DotDotPat` AST node modeled on `PlaceholderPat` and changes the parsing of tuple and slice patterns to conform to the RFC.\r\n\r\nNotably, this PR does *not* change the resulting AST when `..` appears in a struct pattern (e.g. `Struct { a, b: c, .. }`). I *think* this is the behavior mandated by RFC 2707, but someone should confirm this.\n\nCo-authored-by: Dylan MacKenzie <ecstaticmorse@gmail.com>", "tree": {"sha": "e394007f715f8586c737db8f20f2d8f16f8913af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e394007f715f8586c737db8f20f2d8f16f8913af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d79a1ad83cc39075c7c9e3230973013c8c58b17", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdfePZCRBK7hj4Ov3rIwAAdHIIAAznaA5P13HFp6OQjUcRBwce\najb6nPFkppIKIRVjP2jssOjdJizrWddYFva3FIGUMn23MGh5st3OIFU7aBc4zPab\nYB0xQzm+sRxjNQtHWEkHqLpp0y1LYB02kqUMflY5KYl9IMFuU1IQ9HpoRPpjubAx\n7Bv8eUTVdGcvfveFzufIcFR7gotce1Rx/29C2V5xntlv8DU8p/o6ircTlKofsHXI\nhE4QvFFGGn8/piHESa9jEU3Muj5acb1tkkxct5Ut6pj5sVdtSnQBrNAarcJYcbOn\ne4EH6Zf0AC2NCNsEQlwXBkLIzkLiJWWY6EfbIfjMzFhdXeytAUf6cWu1s5UCHeY=\n=MUEa\n-----END PGP SIGNATURE-----\n", "payload": "tree e394007f715f8586c737db8f20f2d8f16f8913af\nparent bcdba777bdc43762cff73ac3ded4ae737a503692\nparent 0956323bb7b728da6bff4ad7241a542f4bb4e8e6\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1568531416 +0000\ncommitter GitHub <noreply@github.com> 1568531416 +0000\n\nMerge #1848\n\n1848: Parse `..` as a full pattern r=matklad a=ecstatic-morse\n\nResolves #1479.\r\n\r\nThis PR implements [RFC 2707](https://github.com/rust-lang/rfcs/pull/2707) in the parser. It introduces a new `DotDotPat` AST node modeled on `PlaceholderPat` and changes the parsing of tuple and slice patterns to conform to the RFC.\r\n\r\nNotably, this PR does *not* change the resulting AST when `..` appears in a struct pattern (e.g. `Struct { a, b: c, .. }`). I *think* this is the behavior mandated by RFC 2707, but someone should confirm this.\n\nCo-authored-by: Dylan MacKenzie <ecstaticmorse@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d79a1ad83cc39075c7c9e3230973013c8c58b17", "html_url": "https://github.com/rust-lang/rust/commit/2d79a1ad83cc39075c7c9e3230973013c8c58b17", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d79a1ad83cc39075c7c9e3230973013c8c58b17/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bcdba777bdc43762cff73ac3ded4ae737a503692", "url": "https://api.github.com/repos/rust-lang/rust/commits/bcdba777bdc43762cff73ac3ded4ae737a503692", "html_url": "https://github.com/rust-lang/rust/commit/bcdba777bdc43762cff73ac3ded4ae737a503692"}, {"sha": "0956323bb7b728da6bff4ad7241a542f4bb4e8e6", "url": "https://api.github.com/repos/rust-lang/rust/commits/0956323bb7b728da6bff4ad7241a542f4bb4e8e6", "html_url": "https://github.com/rust-lang/rust/commit/0956323bb7b728da6bff4ad7241a542f4bb4e8e6"}], "stats": {"total": 590, "additions": 573, "deletions": 17}, "files": [{"sha": "61535d24fe12dda9210d3612f393c0a9df839bf9", "filename": "crates/ra_hir/src/expr/lower.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_hir%2Fsrc%2Fexpr%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_hir%2Fsrc%2Fexpr%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fexpr%2Flower.rs?ref=2d79a1ad83cc39075c7c9e3230973013c8c58b17", "patch": "@@ -573,6 +573,7 @@ where\n             }\n \n             // FIXME: implement\n+            ast::Pat::DotDotPat(_) => Pat::Missing,\n             ast::Pat::BoxPat(_) => Pat::Missing,\n             ast::Pat::LiteralPat(_) => Pat::Missing,\n             ast::Pat::SlicePat(_) | ast::Pat::RangePat(_) => Pat::Missing,"}, {"sha": "919b0f37dbd29b2d3872ffb2ea733d8af686c345", "filename": "crates/ra_parser/src/grammar/patterns.rs", "status": "modified", "additions": 42, "deletions": 10, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fpatterns.rs?ref=2d79a1ad83cc39075c7c9e3230973013c8c58b17", "patch": "@@ -2,7 +2,7 @@ use super::*;\n \n pub(super) const PATTERN_FIRST: TokenSet = expressions::LITERAL_FIRST\n     .union(paths::PATH_FIRST)\n-    .union(token_set![BOX_KW, REF_KW, MUT_KW, L_PAREN, L_BRACK, AMP, UNDERSCORE, MINUS]);\n+    .union(token_set![BOX_KW, REF_KW, MUT_KW, L_PAREN, L_BRACK, AMP, UNDERSCORE, MINUS, DOT]);\n \n pub(crate) fn pattern(p: &mut Parser) {\n     pattern_r(p, PAT_RECOVERY_SET);\n@@ -73,6 +73,7 @@ fn atom_pat(p: &mut Parser, recovery_set: TokenSet) -> Option<CompletedMarker> {\n         _ if paths::is_use_path_start(p) => path_pat(p),\n         _ if is_literal_pat_start(p) => literal_pat(p),\n \n+        T![.] if p.at(T![..]) => dot_dot_pat(p),\n         T![_] => placeholder_pat(p),\n         T![&] => ref_pat(p),\n         T!['('] => tuple_pat(p),\n@@ -163,7 +164,9 @@ fn record_field_pat_list(p: &mut Parser) {\n     p.bump_any();\n     while !p.at(EOF) && !p.at(T!['}']) {\n         match p.current() {\n+            // A trailing `..` is *not* treated as a DOT_DOT_PAT.\n             T![.] if p.at(T![..]) => p.bump(T![..]),\n+\n             IDENT if p.nth(1) == T![:] => record_field_pat(p),\n             T!['{'] => error_block(p, \"expected ident\"),\n             T![box] => {\n@@ -201,6 +204,39 @@ fn placeholder_pat(p: &mut Parser) -> CompletedMarker {\n     m.complete(p, PLACEHOLDER_PAT)\n }\n \n+// test dot_dot_pat\n+// fn main() {\n+//     let .. = ();\n+//     //\n+//     // Tuples\n+//     //\n+//     let (a, ..) = ();\n+//     let (a, ..,) = ();\n+//     let Tuple(a, ..) = ();\n+//     let Tuple(a, ..,) = ();\n+//     let (.., ..) = ();\n+//     let Tuple(.., ..) = ();\n+//     let (.., a, ..) = ();\n+//     let Tuple(.., a, ..) = ();\n+//     //\n+//     // Slices\n+//     //\n+//     let [..] = ();\n+//     let [head, ..] = ();\n+//     let [head, tail @ ..] = ();\n+//     let [head, .., cons] = ();\n+//     let [head, mid @ .., cons] = ();\n+//     let [head, .., .., cons] = ();\n+//     let [head, .., mid, tail @ ..] = ();\n+//     let [head, .., mid, .., cons] = ();\n+// }\n+fn dot_dot_pat(p: &mut Parser) -> CompletedMarker {\n+    assert!(p.at(T![..]));\n+    let m = p.start();\n+    p.bump(T![..]);\n+    m.complete(p, DOT_DOT_PAT)\n+}\n+\n // test ref_pat\n // fn main() {\n //     let &a = ();\n@@ -241,16 +277,12 @@ fn slice_pat(p: &mut Parser) -> CompletedMarker {\n \n fn pat_list(p: &mut Parser, ket: SyntaxKind) {\n     while !p.at(EOF) && !p.at(ket) {\n-        match p.current() {\n-            T![.] if p.at(T![..]) => p.bump(T![..]),\n-            _ => {\n-                if !p.at_ts(PATTERN_FIRST) {\n-                    p.error(\"expected a pattern\");\n-                    break;\n-                }\n-                pattern(p)\n-            }\n+        if !p.at_ts(PATTERN_FIRST) {\n+            p.error(\"expected a pattern\");\n+            break;\n         }\n+\n+        pattern(p);\n         if !p.at(ket) {\n             p.expect(T![,]);\n         }"}, {"sha": "23eb3c9cb5012594253914347464a88bb6c65bb3", "filename": "crates/ra_parser/src/syntax_kind/generated.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=2d79a1ad83cc39075c7c9e3230973013c8c58b17", "patch": "@@ -152,6 +152,7 @@ pub enum SyntaxKind {\n     BOX_PAT,\n     BIND_PAT,\n     PLACEHOLDER_PAT,\n+    DOT_DOT_PAT,\n     PATH_PAT,\n     RECORD_PAT,\n     RECORD_FIELD_PAT_LIST,"}, {"sha": "591ac8ca3d88ac703e05ba0059f828d4d32c1445", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 35, "deletions": 2, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=2d79a1ad83cc39075c7c9e3230973013c8c58b17", "patch": "@@ -532,6 +532,29 @@ impl AstNode for ContinueExpr {\n }\n impl ContinueExpr {}\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+pub struct DotDotPat {\n+    pub(crate) syntax: SyntaxNode,\n+}\n+impl AstNode for DotDotPat {\n+    fn can_cast(kind: SyntaxKind) -> bool {\n+        match kind {\n+            DOT_DOT_PAT => true,\n+            _ => false,\n+        }\n+    }\n+    fn cast(syntax: SyntaxNode) -> Option<Self> {\n+        if Self::can_cast(syntax.kind()) {\n+            Some(Self { syntax })\n+        } else {\n+            None\n+        }\n+    }\n+    fn syntax(&self) -> &SyntaxNode {\n+        &self.syntax\n+    }\n+}\n+impl DotDotPat {}\n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct DynTraitType {\n     pub(crate) syntax: SyntaxNode,\n }\n@@ -2128,6 +2151,7 @@ pub enum Pat {\n     BoxPat(BoxPat),\n     BindPat(BindPat),\n     PlaceholderPat(PlaceholderPat),\n+    DotDotPat(DotDotPat),\n     PathPat(PathPat),\n     RecordPat(RecordPat),\n     TupleStructPat(TupleStructPat),\n@@ -2156,6 +2180,11 @@ impl From<PlaceholderPat> for Pat {\n         Pat::PlaceholderPat(node)\n     }\n }\n+impl From<DotDotPat> for Pat {\n+    fn from(node: DotDotPat) -> Pat {\n+        Pat::DotDotPat(node)\n+    }\n+}\n impl From<PathPat> for Pat {\n     fn from(node: PathPat) -> Pat {\n         Pat::PathPat(node)\n@@ -2194,8 +2223,10 @@ impl From<LiteralPat> for Pat {\n impl AstNode for Pat {\n     fn can_cast(kind: SyntaxKind) -> bool {\n         match kind {\n-            REF_PAT | BOX_PAT | BIND_PAT | PLACEHOLDER_PAT | PATH_PAT | RECORD_PAT\n-            | TUPLE_STRUCT_PAT | TUPLE_PAT | SLICE_PAT | RANGE_PAT | LITERAL_PAT => true,\n+            REF_PAT | BOX_PAT | BIND_PAT | PLACEHOLDER_PAT | DOT_DOT_PAT | PATH_PAT\n+            | RECORD_PAT | TUPLE_STRUCT_PAT | TUPLE_PAT | SLICE_PAT | RANGE_PAT | LITERAL_PAT => {\n+                true\n+            }\n             _ => false,\n         }\n     }\n@@ -2205,6 +2236,7 @@ impl AstNode for Pat {\n             BOX_PAT => Pat::BoxPat(BoxPat { syntax }),\n             BIND_PAT => Pat::BindPat(BindPat { syntax }),\n             PLACEHOLDER_PAT => Pat::PlaceholderPat(PlaceholderPat { syntax }),\n+            DOT_DOT_PAT => Pat::DotDotPat(DotDotPat { syntax }),\n             PATH_PAT => Pat::PathPat(PathPat { syntax }),\n             RECORD_PAT => Pat::RecordPat(RecordPat { syntax }),\n             TUPLE_STRUCT_PAT => Pat::TupleStructPat(TupleStructPat { syntax }),\n@@ -2222,6 +2254,7 @@ impl AstNode for Pat {\n             Pat::BoxPat(it) => &it.syntax,\n             Pat::BindPat(it) => &it.syntax,\n             Pat::PlaceholderPat(it) => &it.syntax,\n+            Pat::DotDotPat(it) => &it.syntax,\n             Pat::PathPat(it) => &it.syntax,\n             Pat::RecordPat(it) => &it.syntax,\n             Pat::TupleStructPat(it) => &it.syntax,"}, {"sha": "08cc6eeea76d9fc42c3f058cb748d0eca37d4459", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=2d79a1ad83cc39075c7c9e3230973013c8c58b17", "patch": "@@ -161,6 +161,7 @@ Grammar(\n         \"BOX_PAT\",\n         \"BIND_PAT\",\n         \"PLACEHOLDER_PAT\",\n+        \"DOT_DOT_PAT\",\n         \"PATH_PAT\",\n         \"RECORD_PAT\",\n         \"RECORD_FIELD_PAT_LIST\",\n@@ -532,6 +533,7 @@ Grammar(\n             traits: [\"NameOwner\"]\n         ),\n         \"PlaceholderPat\": (),\n+        \"DotDotPat\": (),\n         \"PathPat\": ( options: [ \"Path\" ] ),\n         \"RecordPat\": ( options: [\"RecordFieldPatList\", \"Path\"] ),\n         \"RecordFieldPatList\": (\n@@ -559,6 +561,7 @@ Grammar(\n                 \"BoxPat\",\n                 \"BindPat\",\n                 \"PlaceholderPat\",\n+                \"DotDotPat\",\n                 \"PathPat\",\n                 \"RecordPat\",\n                 \"TupleStructPat\","}, {"sha": "3812adc9ec4330b468b7928ed6ca28fdda9fa5c0", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0008_path_part.txt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.txt", "raw_url": "https://github.com/rust-lang/rust/raw/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0008_path_part.txt?ref=2d79a1ad83cc39075c7c9e3230973013c8c58b17", "patch": "@@ -82,7 +82,8 @@ SOURCE_FILE@[0; 103)\n                 NAME_REF@[87; 90)\n                   IDENT@[87; 90) \"Bar\"\n             L_PAREN@[90; 91) \"(\"\n-            DOTDOT@[91; 93) \"..\"\n+            DOT_DOT_PAT@[91; 93)\n+              DOTDOT@[91; 93) \"..\"\n             R_PAREN@[93; 94) \")\"\n           WHITESPACE@[94; 95) \" \"\n           EQ@[95; 96) \"=\""}, {"sha": "48aaeaf072494872eaa78f4e264b984e972cd402", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0024_slice_pat.txt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.txt", "raw_url": "https://github.com/rust-lang/rust/raw/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0024_slice_pat.txt?ref=2d79a1ad83cc39075c7c9e3230973013c8c58b17", "patch": "@@ -27,7 +27,8 @@ SOURCE_FILE@[0; 39)\n                 IDENT@[24; 25) \"b\"\n             COMMA@[25; 26) \",\"\n             WHITESPACE@[26; 27) \" \"\n-            DOTDOT@[27; 29) \"..\"\n+            DOT_DOT_PAT@[27; 29)\n+              DOTDOT@[27; 29) \"..\"\n             R_BRACK@[29; 30) \"]\"\n           WHITESPACE@[30; 31) \" \"\n           EQ@[31; 32) \"=\""}, {"sha": "666386d31ab869cb3cf907dce0d74dabe4829c22", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0026_tuple_pat_fields.txt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.txt", "raw_url": "https://github.com/rust-lang/rust/raw/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0026_tuple_pat_fields.txt?ref=2d79a1ad83cc39075c7c9e3230973013c8c58b17", "patch": "@@ -84,7 +84,8 @@ SOURCE_FILE@[0; 97)\n               UNDERSCORE@[78; 79) \"_\"\n             COMMA@[79; 80) \",\"\n             WHITESPACE@[80; 81) \" \"\n-            DOTDOT@[81; 83) \"..\"\n+            DOT_DOT_PAT@[81; 83)\n+              DOTDOT@[81; 83) \"..\"\n             WHITESPACE@[83; 84) \" \"\n             COMMA@[84; 85) \",\"\n             WHITESPACE@[85; 86) \" \""}, {"sha": "674dec4937ea4f8f1e86148858b43ff960da9499", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0111_tuple_pat.txt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.txt", "raw_url": "https://github.com/rust-lang/rust/raw/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0111_tuple_pat.txt?ref=2d79a1ad83cc39075c7c9e3230973013c8c58b17", "patch": "@@ -27,7 +27,8 @@ SOURCE_FILE@[0; 39)\n                 IDENT@[24; 25) \"b\"\n             COMMA@[25; 26) \",\"\n             WHITESPACE@[26; 27) \" \"\n-            DOTDOT@[27; 29) \"..\"\n+            DOT_DOT_PAT@[27; 29)\n+              DOTDOT@[27; 29) \"..\"\n             R_PAREN@[29; 30) \")\"\n           WHITESPACE@[30; 31) \" \"\n           EQ@[31; 32) \"=\""}, {"sha": "3262f27e140ea7bc2d551999f12614c0e1d02cdc", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0144_dot_dot_pat.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.rs?ref=2d79a1ad83cc39075c7c9e3230973013c8c58b17", "patch": "@@ -0,0 +1,25 @@\n+fn main() {\n+    let .. = ();\n+    //\n+    // Tuples\n+    //\n+    let (a, ..) = ();\n+    let (a, ..,) = ();\n+    let Tuple(a, ..) = ();\n+    let Tuple(a, ..,) = ();\n+    let (.., ..) = ();\n+    let Tuple(.., ..) = ();\n+    let (.., a, ..) = ();\n+    let Tuple(.., a, ..) = ();\n+    //\n+    // Slices\n+    //\n+    let [..] = ();\n+    let [head, ..] = ();\n+    let [head, tail @ ..] = ();\n+    let [head, .., cons] = ();\n+    let [head, mid @ .., cons] = ();\n+    let [head, .., .., cons] = ();\n+    let [head, .., mid, tail @ ..] = ();\n+    let [head, .., mid, .., cons] = ();\n+}"}, {"sha": "325b1bd08167ae56693eeda6cee5fcbef59a7c62", "filename": "crates/ra_syntax/test_data/parser/inline/ok/0144_dot_dot_pat.txt", "status": "added", "additions": 456, "deletions": 0, "changes": 456, "blob_url": "https://github.com/rust-lang/rust/blob/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.txt", "raw_url": "https://github.com/rust-lang/rust/raw/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Finline%2Fok%2F0144_dot_dot_pat.txt?ref=2d79a1ad83cc39075c7c9e3230973013c8c58b17", "patch": "@@ -0,0 +1,456 @@\n+SOURCE_FILE@[0; 555)\n+  FN_DEF@[0; 554)\n+    FN_KW@[0; 2) \"fn\"\n+    WHITESPACE@[2; 3) \" \"\n+    NAME@[3; 7)\n+      IDENT@[3; 7) \"main\"\n+    PARAM_LIST@[7; 9)\n+      L_PAREN@[7; 8) \"(\"\n+      R_PAREN@[8; 9) \")\"\n+    WHITESPACE@[9; 10) \" \"\n+    BLOCK_EXPR@[10; 554)\n+      BLOCK@[10; 554)\n+        L_CURLY@[10; 11) \"{\"\n+        WHITESPACE@[11; 16) \"\\n    \"\n+        LET_STMT@[16; 28)\n+          LET_KW@[16; 19) \"let\"\n+          WHITESPACE@[19; 20) \" \"\n+          DOT_DOT_PAT@[20; 22)\n+            DOTDOT@[20; 22) \"..\"\n+          WHITESPACE@[22; 23) \" \"\n+          EQ@[23; 24) \"=\"\n+          WHITESPACE@[24; 25) \" \"\n+          TUPLE_EXPR@[25; 27)\n+            L_PAREN@[25; 26) \"(\"\n+            R_PAREN@[26; 27) \")\"\n+          SEMI@[27; 28) \";\"\n+        WHITESPACE@[28; 33) \"\\n    \"\n+        COMMENT@[33; 35) \"//\"\n+        WHITESPACE@[35; 40) \"\\n    \"\n+        COMMENT@[40; 49) \"// Tuples\"\n+        WHITESPACE@[49; 54) \"\\n    \"\n+        COMMENT@[54; 56) \"//\"\n+        WHITESPACE@[56; 61) \"\\n    \"\n+        LET_STMT@[61; 78)\n+          LET_KW@[61; 64) \"let\"\n+          WHITESPACE@[64; 65) \" \"\n+          TUPLE_PAT@[65; 72)\n+            L_PAREN@[65; 66) \"(\"\n+            BIND_PAT@[66; 67)\n+              NAME@[66; 67)\n+                IDENT@[66; 67) \"a\"\n+            COMMA@[67; 68) \",\"\n+            WHITESPACE@[68; 69) \" \"\n+            DOT_DOT_PAT@[69; 71)\n+              DOTDOT@[69; 71) \"..\"\n+            R_PAREN@[71; 72) \")\"\n+          WHITESPACE@[72; 73) \" \"\n+          EQ@[73; 74) \"=\"\n+          WHITESPACE@[74; 75) \" \"\n+          TUPLE_EXPR@[75; 77)\n+            L_PAREN@[75; 76) \"(\"\n+            R_PAREN@[76; 77) \")\"\n+          SEMI@[77; 78) \";\"\n+        WHITESPACE@[78; 83) \"\\n    \"\n+        LET_STMT@[83; 101)\n+          LET_KW@[83; 86) \"let\"\n+          WHITESPACE@[86; 87) \" \"\n+          TUPLE_PAT@[87; 95)\n+            L_PAREN@[87; 88) \"(\"\n+            BIND_PAT@[88; 89)\n+              NAME@[88; 89)\n+                IDENT@[88; 89) \"a\"\n+            COMMA@[89; 90) \",\"\n+            WHITESPACE@[90; 91) \" \"\n+            DOT_DOT_PAT@[91; 93)\n+              DOTDOT@[91; 93) \"..\"\n+            COMMA@[93; 94) \",\"\n+            R_PAREN@[94; 95) \")\"\n+          WHITESPACE@[95; 96) \" \"\n+          EQ@[96; 97) \"=\"\n+          WHITESPACE@[97; 98) \" \"\n+          TUPLE_EXPR@[98; 100)\n+            L_PAREN@[98; 99) \"(\"\n+            R_PAREN@[99; 100) \")\"\n+          SEMI@[100; 101) \";\"\n+        WHITESPACE@[101; 106) \"\\n    \"\n+        LET_STMT@[106; 128)\n+          LET_KW@[106; 109) \"let\"\n+          WHITESPACE@[109; 110) \" \"\n+          TUPLE_STRUCT_PAT@[110; 122)\n+            PATH@[110; 115)\n+              PATH_SEGMENT@[110; 115)\n+                NAME_REF@[110; 115)\n+                  IDENT@[110; 115) \"Tuple\"\n+            L_PAREN@[115; 116) \"(\"\n+            BIND_PAT@[116; 117)\n+              NAME@[116; 117)\n+                IDENT@[116; 117) \"a\"\n+            COMMA@[117; 118) \",\"\n+            WHITESPACE@[118; 119) \" \"\n+            DOT_DOT_PAT@[119; 121)\n+              DOTDOT@[119; 121) \"..\"\n+            R_PAREN@[121; 122) \")\"\n+          WHITESPACE@[122; 123) \" \"\n+          EQ@[123; 124) \"=\"\n+          WHITESPACE@[124; 125) \" \"\n+          TUPLE_EXPR@[125; 127)\n+            L_PAREN@[125; 126) \"(\"\n+            R_PAREN@[126; 127) \")\"\n+          SEMI@[127; 128) \";\"\n+        WHITESPACE@[128; 133) \"\\n    \"\n+        LET_STMT@[133; 156)\n+          LET_KW@[133; 136) \"let\"\n+          WHITESPACE@[136; 137) \" \"\n+          TUPLE_STRUCT_PAT@[137; 150)\n+            PATH@[137; 142)\n+              PATH_SEGMENT@[137; 142)\n+                NAME_REF@[137; 142)\n+                  IDENT@[137; 142) \"Tuple\"\n+            L_PAREN@[142; 143) \"(\"\n+            BIND_PAT@[143; 144)\n+              NAME@[143; 144)\n+                IDENT@[143; 144) \"a\"\n+            COMMA@[144; 145) \",\"\n+            WHITESPACE@[145; 146) \" \"\n+            DOT_DOT_PAT@[146; 148)\n+              DOTDOT@[146; 148) \"..\"\n+            COMMA@[148; 149) \",\"\n+            R_PAREN@[149; 150) \")\"\n+          WHITESPACE@[150; 151) \" \"\n+          EQ@[151; 152) \"=\"\n+          WHITESPACE@[152; 153) \" \"\n+          TUPLE_EXPR@[153; 155)\n+            L_PAREN@[153; 154) \"(\"\n+            R_PAREN@[154; 155) \")\"\n+          SEMI@[155; 156) \";\"\n+        WHITESPACE@[156; 161) \"\\n    \"\n+        LET_STMT@[161; 179)\n+          LET_KW@[161; 164) \"let\"\n+          WHITESPACE@[164; 165) \" \"\n+          TUPLE_PAT@[165; 173)\n+            L_PAREN@[165; 166) \"(\"\n+            DOT_DOT_PAT@[166; 168)\n+              DOTDOT@[166; 168) \"..\"\n+            COMMA@[168; 169) \",\"\n+            WHITESPACE@[169; 170) \" \"\n+            DOT_DOT_PAT@[170; 172)\n+              DOTDOT@[170; 172) \"..\"\n+            R_PAREN@[172; 173) \")\"\n+          WHITESPACE@[173; 174) \" \"\n+          EQ@[174; 175) \"=\"\n+          WHITESPACE@[175; 176) \" \"\n+          TUPLE_EXPR@[176; 178)\n+            L_PAREN@[176; 177) \"(\"\n+            R_PAREN@[177; 178) \")\"\n+          SEMI@[178; 179) \";\"\n+        WHITESPACE@[179; 184) \"\\n    \"\n+        LET_STMT@[184; 207)\n+          LET_KW@[184; 187) \"let\"\n+          WHITESPACE@[187; 188) \" \"\n+          TUPLE_STRUCT_PAT@[188; 201)\n+            PATH@[188; 193)\n+              PATH_SEGMENT@[188; 193)\n+                NAME_REF@[188; 193)\n+                  IDENT@[188; 193) \"Tuple\"\n+            L_PAREN@[193; 194) \"(\"\n+            DOT_DOT_PAT@[194; 196)\n+              DOTDOT@[194; 196) \"..\"\n+            COMMA@[196; 197) \",\"\n+            WHITESPACE@[197; 198) \" \"\n+            DOT_DOT_PAT@[198; 200)\n+              DOTDOT@[198; 200) \"..\"\n+            R_PAREN@[200; 201) \")\"\n+          WHITESPACE@[201; 202) \" \"\n+          EQ@[202; 203) \"=\"\n+          WHITESPACE@[203; 204) \" \"\n+          TUPLE_EXPR@[204; 206)\n+            L_PAREN@[204; 205) \"(\"\n+            R_PAREN@[205; 206) \")\"\n+          SEMI@[206; 207) \";\"\n+        WHITESPACE@[207; 212) \"\\n    \"\n+        LET_STMT@[212; 233)\n+          LET_KW@[212; 215) \"let\"\n+          WHITESPACE@[215; 216) \" \"\n+          TUPLE_PAT@[216; 227)\n+            L_PAREN@[216; 217) \"(\"\n+            DOT_DOT_PAT@[217; 219)\n+              DOTDOT@[217; 219) \"..\"\n+            COMMA@[219; 220) \",\"\n+            WHITESPACE@[220; 221) \" \"\n+            BIND_PAT@[221; 222)\n+              NAME@[221; 222)\n+                IDENT@[221; 222) \"a\"\n+            COMMA@[222; 223) \",\"\n+            WHITESPACE@[223; 224) \" \"\n+            DOT_DOT_PAT@[224; 226)\n+              DOTDOT@[224; 226) \"..\"\n+            R_PAREN@[226; 227) \")\"\n+          WHITESPACE@[227; 228) \" \"\n+          EQ@[228; 229) \"=\"\n+          WHITESPACE@[229; 230) \" \"\n+          TUPLE_EXPR@[230; 232)\n+            L_PAREN@[230; 231) \"(\"\n+            R_PAREN@[231; 232) \")\"\n+          SEMI@[232; 233) \";\"\n+        WHITESPACE@[233; 238) \"\\n    \"\n+        LET_STMT@[238; 264)\n+          LET_KW@[238; 241) \"let\"\n+          WHITESPACE@[241; 242) \" \"\n+          TUPLE_STRUCT_PAT@[242; 258)\n+            PATH@[242; 247)\n+              PATH_SEGMENT@[242; 247)\n+                NAME_REF@[242; 247)\n+                  IDENT@[242; 247) \"Tuple\"\n+            L_PAREN@[247; 248) \"(\"\n+            DOT_DOT_PAT@[248; 250)\n+              DOTDOT@[248; 250) \"..\"\n+            COMMA@[250; 251) \",\"\n+            WHITESPACE@[251; 252) \" \"\n+            BIND_PAT@[252; 253)\n+              NAME@[252; 253)\n+                IDENT@[252; 253) \"a\"\n+            COMMA@[253; 254) \",\"\n+            WHITESPACE@[254; 255) \" \"\n+            DOT_DOT_PAT@[255; 257)\n+              DOTDOT@[255; 257) \"..\"\n+            R_PAREN@[257; 258) \")\"\n+          WHITESPACE@[258; 259) \" \"\n+          EQ@[259; 260) \"=\"\n+          WHITESPACE@[260; 261) \" \"\n+          TUPLE_EXPR@[261; 263)\n+            L_PAREN@[261; 262) \"(\"\n+            R_PAREN@[262; 263) \")\"\n+          SEMI@[263; 264) \";\"\n+        WHITESPACE@[264; 269) \"\\n    \"\n+        COMMENT@[269; 271) \"//\"\n+        WHITESPACE@[271; 276) \"\\n    \"\n+        COMMENT@[276; 285) \"// Slices\"\n+        WHITESPACE@[285; 290) \"\\n    \"\n+        COMMENT@[290; 292) \"//\"\n+        WHITESPACE@[292; 297) \"\\n    \"\n+        LET_STMT@[297; 311)\n+          LET_KW@[297; 300) \"let\"\n+          WHITESPACE@[300; 301) \" \"\n+          SLICE_PAT@[301; 305)\n+            L_BRACK@[301; 302) \"[\"\n+            DOT_DOT_PAT@[302; 304)\n+              DOTDOT@[302; 304) \"..\"\n+            R_BRACK@[304; 305) \"]\"\n+          WHITESPACE@[305; 306) \" \"\n+          EQ@[306; 307) \"=\"\n+          WHITESPACE@[307; 308) \" \"\n+          TUPLE_EXPR@[308; 310)\n+            L_PAREN@[308; 309) \"(\"\n+            R_PAREN@[309; 310) \")\"\n+          SEMI@[310; 311) \";\"\n+        WHITESPACE@[311; 316) \"\\n    \"\n+        LET_STMT@[316; 336)\n+          LET_KW@[316; 319) \"let\"\n+          WHITESPACE@[319; 320) \" \"\n+          SLICE_PAT@[320; 330)\n+            L_BRACK@[320; 321) \"[\"\n+            BIND_PAT@[321; 325)\n+              NAME@[321; 325)\n+                IDENT@[321; 325) \"head\"\n+            COMMA@[325; 326) \",\"\n+            WHITESPACE@[326; 327) \" \"\n+            DOT_DOT_PAT@[327; 329)\n+              DOTDOT@[327; 329) \"..\"\n+            R_BRACK@[329; 330) \"]\"\n+          WHITESPACE@[330; 331) \" \"\n+          EQ@[331; 332) \"=\"\n+          WHITESPACE@[332; 333) \" \"\n+          TUPLE_EXPR@[333; 335)\n+            L_PAREN@[333; 334) \"(\"\n+            R_PAREN@[334; 335) \")\"\n+          SEMI@[335; 336) \";\"\n+        WHITESPACE@[336; 341) \"\\n    \"\n+        LET_STMT@[341; 368)\n+          LET_KW@[341; 344) \"let\"\n+          WHITESPACE@[344; 345) \" \"\n+          SLICE_PAT@[345; 362)\n+            L_BRACK@[345; 346) \"[\"\n+            BIND_PAT@[346; 350)\n+              NAME@[346; 350)\n+                IDENT@[346; 350) \"head\"\n+            COMMA@[350; 351) \",\"\n+            WHITESPACE@[351; 352) \" \"\n+            BIND_PAT@[352; 361)\n+              NAME@[352; 356)\n+                IDENT@[352; 356) \"tail\"\n+              WHITESPACE@[356; 357) \" \"\n+              AT@[357; 358) \"@\"\n+              WHITESPACE@[358; 359) \" \"\n+              DOT_DOT_PAT@[359; 361)\n+                DOTDOT@[359; 361) \"..\"\n+            R_BRACK@[361; 362) \"]\"\n+          WHITESPACE@[362; 363) \" \"\n+          EQ@[363; 364) \"=\"\n+          WHITESPACE@[364; 365) \" \"\n+          TUPLE_EXPR@[365; 367)\n+            L_PAREN@[365; 366) \"(\"\n+            R_PAREN@[366; 367) \")\"\n+          SEMI@[367; 368) \";\"\n+        WHITESPACE@[368; 373) \"\\n    \"\n+        LET_STMT@[373; 399)\n+          LET_KW@[373; 376) \"let\"\n+          WHITESPACE@[376; 377) \" \"\n+          SLICE_PAT@[377; 393)\n+            L_BRACK@[377; 378) \"[\"\n+            BIND_PAT@[378; 382)\n+              NAME@[378; 382)\n+                IDENT@[378; 382) \"head\"\n+            COMMA@[382; 383) \",\"\n+            WHITESPACE@[383; 384) \" \"\n+            DOT_DOT_PAT@[384; 386)\n+              DOTDOT@[384; 386) \"..\"\n+            COMMA@[386; 387) \",\"\n+            WHITESPACE@[387; 388) \" \"\n+            BIND_PAT@[388; 392)\n+              NAME@[388; 392)\n+                IDENT@[388; 392) \"cons\"\n+            R_BRACK@[392; 393) \"]\"\n+          WHITESPACE@[393; 394) \" \"\n+          EQ@[394; 395) \"=\"\n+          WHITESPACE@[395; 396) \" \"\n+          TUPLE_EXPR@[396; 398)\n+            L_PAREN@[396; 397) \"(\"\n+            R_PAREN@[397; 398) \")\"\n+          SEMI@[398; 399) \";\"\n+        WHITESPACE@[399; 404) \"\\n    \"\n+        LET_STMT@[404; 436)\n+          LET_KW@[404; 407) \"let\"\n+          WHITESPACE@[407; 408) \" \"\n+          SLICE_PAT@[408; 430)\n+            L_BRACK@[408; 409) \"[\"\n+            BIND_PAT@[409; 413)\n+              NAME@[409; 413)\n+                IDENT@[409; 413) \"head\"\n+            COMMA@[413; 414) \",\"\n+            WHITESPACE@[414; 415) \" \"\n+            BIND_PAT@[415; 423)\n+              NAME@[415; 418)\n+                IDENT@[415; 418) \"mid\"\n+              WHITESPACE@[418; 419) \" \"\n+              AT@[419; 420) \"@\"\n+              WHITESPACE@[420; 421) \" \"\n+              DOT_DOT_PAT@[421; 423)\n+                DOTDOT@[421; 423) \"..\"\n+            COMMA@[423; 424) \",\"\n+            WHITESPACE@[424; 425) \" \"\n+            BIND_PAT@[425; 429)\n+              NAME@[425; 429)\n+                IDENT@[425; 429) \"cons\"\n+            R_BRACK@[429; 430) \"]\"\n+          WHITESPACE@[430; 431) \" \"\n+          EQ@[431; 432) \"=\"\n+          WHITESPACE@[432; 433) \" \"\n+          TUPLE_EXPR@[433; 435)\n+            L_PAREN@[433; 434) \"(\"\n+            R_PAREN@[434; 435) \")\"\n+          SEMI@[435; 436) \";\"\n+        WHITESPACE@[436; 441) \"\\n    \"\n+        LET_STMT@[441; 471)\n+          LET_KW@[441; 444) \"let\"\n+          WHITESPACE@[444; 445) \" \"\n+          SLICE_PAT@[445; 465)\n+            L_BRACK@[445; 446) \"[\"\n+            BIND_PAT@[446; 450)\n+              NAME@[446; 450)\n+                IDENT@[446; 450) \"head\"\n+            COMMA@[450; 451) \",\"\n+            WHITESPACE@[451; 452) \" \"\n+            DOT_DOT_PAT@[452; 454)\n+              DOTDOT@[452; 454) \"..\"\n+            COMMA@[454; 455) \",\"\n+            WHITESPACE@[455; 456) \" \"\n+            DOT_DOT_PAT@[456; 458)\n+              DOTDOT@[456; 458) \"..\"\n+            COMMA@[458; 459) \",\"\n+            WHITESPACE@[459; 460) \" \"\n+            BIND_PAT@[460; 464)\n+              NAME@[460; 464)\n+                IDENT@[460; 464) \"cons\"\n+            R_BRACK@[464; 465) \"]\"\n+          WHITESPACE@[465; 466) \" \"\n+          EQ@[466; 467) \"=\"\n+          WHITESPACE@[467; 468) \" \"\n+          TUPLE_EXPR@[468; 470)\n+            L_PAREN@[468; 469) \"(\"\n+            R_PAREN@[469; 470) \")\"\n+          SEMI@[470; 471) \";\"\n+        WHITESPACE@[471; 476) \"\\n    \"\n+        LET_STMT@[476; 512)\n+          LET_KW@[476; 479) \"let\"\n+          WHITESPACE@[479; 480) \" \"\n+          SLICE_PAT@[480; 506)\n+            L_BRACK@[480; 481) \"[\"\n+            BIND_PAT@[481; 485)\n+              NAME@[481; 485)\n+                IDENT@[481; 485) \"head\"\n+            COMMA@[485; 486) \",\"\n+            WHITESPACE@[486; 487) \" \"\n+            DOT_DOT_PAT@[487; 489)\n+              DOTDOT@[487; 489) \"..\"\n+            COMMA@[489; 490) \",\"\n+            WHITESPACE@[490; 491) \" \"\n+            BIND_PAT@[491; 494)\n+              NAME@[491; 494)\n+                IDENT@[491; 494) \"mid\"\n+            COMMA@[494; 495) \",\"\n+            WHITESPACE@[495; 496) \" \"\n+            BIND_PAT@[496; 505)\n+              NAME@[496; 500)\n+                IDENT@[496; 500) \"tail\"\n+              WHITESPACE@[500; 501) \" \"\n+              AT@[501; 502) \"@\"\n+              WHITESPACE@[502; 503) \" \"\n+              DOT_DOT_PAT@[503; 505)\n+                DOTDOT@[503; 505) \"..\"\n+            R_BRACK@[505; 506) \"]\"\n+          WHITESPACE@[506; 507) \" \"\n+          EQ@[507; 508) \"=\"\n+          WHITESPACE@[508; 509) \" \"\n+          TUPLE_EXPR@[509; 511)\n+            L_PAREN@[509; 510) \"(\"\n+            R_PAREN@[510; 511) \")\"\n+          SEMI@[511; 512) \";\"\n+        WHITESPACE@[512; 517) \"\\n    \"\n+        LET_STMT@[517; 552)\n+          LET_KW@[517; 520) \"let\"\n+          WHITESPACE@[520; 521) \" \"\n+          SLICE_PAT@[521; 546)\n+            L_BRACK@[521; 522) \"[\"\n+            BIND_PAT@[522; 526)\n+              NAME@[522; 526)\n+                IDENT@[522; 526) \"head\"\n+            COMMA@[526; 527) \",\"\n+            WHITESPACE@[527; 528) \" \"\n+            DOT_DOT_PAT@[528; 530)\n+              DOTDOT@[528; 530) \"..\"\n+            COMMA@[530; 531) \",\"\n+            WHITESPACE@[531; 532) \" \"\n+            BIND_PAT@[532; 535)\n+              NAME@[532; 535)\n+                IDENT@[532; 535) \"mid\"\n+            COMMA@[535; 536) \",\"\n+            WHITESPACE@[536; 537) \" \"\n+            DOT_DOT_PAT@[537; 539)\n+              DOTDOT@[537; 539) \"..\"\n+            COMMA@[539; 540) \",\"\n+            WHITESPACE@[540; 541) \" \"\n+            BIND_PAT@[541; 545)\n+              NAME@[541; 545)\n+                IDENT@[541; 545) \"cons\"\n+            R_BRACK@[545; 546) \"]\"\n+          WHITESPACE@[546; 547) \" \"\n+          EQ@[547; 548) \"=\"\n+          WHITESPACE@[548; 549) \" \"\n+          TUPLE_EXPR@[549; 551)\n+            L_PAREN@[549; 550) \"(\"\n+            R_PAREN@[550; 551) \")\"\n+          SEMI@[551; 552) \";\"\n+        WHITESPACE@[552; 553) \"\\n\"\n+        R_CURLY@[553; 554) \"}\"\n+  WHITESPACE@[554; 555) \"\\n\""}, {"sha": "3326ab2aeb3e6e9a14310d99f4512972b246f54d", "filename": "crates/ra_syntax/test_data/parser/ok/0035_weird_exprs.txt", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/2d79a1ad83cc39075c7c9e3230973013c8c58b17/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftest_data%2Fparser%2Fok%2F0035_weird_exprs.txt?ref=2d79a1ad83cc39075c7c9e3230973013c8c58b17", "patch": "@@ -1656,7 +1656,8 @@ SOURCE_FILE@[0; 3813)\n                         PARAM@[2952; 2962)\n                           TUPLE_PAT@[2952; 2956)\n                             L_PAREN@[2952; 2953) \"(\"\n-                            DOTDOT@[2953; 2955) \"..\"\n+                            DOT_DOT_PAT@[2953; 2955)\n+                              DOTDOT@[2953; 2955) \"..\"\n                             R_PAREN@[2955; 2956) \")\"\n                           COLON@[2956; 2957) \":\"\n                           TUPLE_TYPE@[2957; 2962)"}]}