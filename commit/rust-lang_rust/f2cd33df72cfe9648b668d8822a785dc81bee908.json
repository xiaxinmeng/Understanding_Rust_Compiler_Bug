{"sha": "f2cd33df72cfe9648b668d8822a785dc81bee908", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyY2QzM2RmNzJjZmU5NjQ4YjY2OGQ4ODIyYTc4NWRjODFiZWU5MDg=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2011-10-10T19:21:37Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-12T23:33:06Z"}, "message": "continue to annotate trans functions as unsafe where neccessary", "tree": {"sha": "e3df8bc6c89df79eed3543d62f2fc49dec22c44a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3df8bc6c89df79eed3543d62f2fc49dec22c44a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2cd33df72cfe9648b668d8822a785dc81bee908", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2cd33df72cfe9648b668d8822a785dc81bee908", "html_url": "https://github.com/rust-lang/rust/commit/f2cd33df72cfe9648b668d8822a785dc81bee908", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2cd33df72cfe9648b668d8822a785dc81bee908/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2094668949200aa692caa1df261cf7b1e9686b64", "url": "https://api.github.com/repos/rust-lang/rust/commits/2094668949200aa692caa1df261cf7b1e9686b64", "html_url": "https://github.com/rust-lang/rust/commit/2094668949200aa692caa1df261cf7b1e9686b64"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "7de07b55e3b171e2980d106daca28f77e99a9723", "filename": "src/comp/middle/gc.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f2cd33df72cfe9648b668d8822a785dc81bee908/src%2Fcomp%2Fmiddle%2Fgc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2cd33df72cfe9648b668d8822a785dc81bee908/src%2Fcomp%2Fmiddle%2Fgc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fgc.rs?ref=f2cd33df72cfe9648b668d8822a785dc81bee908", "patch": "@@ -16,7 +16,8 @@ type ctxt = @{mutable next_tydesc_num: uint};\n \n fn mk_ctxt() -> ctxt { ret @{mutable next_tydesc_num: 0u}; }\n \n-fn add_global(ccx: @crate_ctxt, llval: ValueRef, name: str) -> ValueRef {\n+fn add_global(ccx: @crate_ctxt, llval: ValueRef, name: str)\n+   -> ValueRef unsafe {\n     let llglobal =\n         str::as_buf(name,\n                     {|buf|\n@@ -27,7 +28,8 @@ fn add_global(ccx: @crate_ctxt, llval: ValueRef, name: str) -> ValueRef {\n     ret llglobal;\n }\n \n-fn add_gc_root(cx: @block_ctxt, llval: ValueRef, ty: ty::t) -> @block_ctxt {\n+fn add_gc_root(cx: @block_ctxt, llval: ValueRef, ty: ty::t) ->\n+   @block_ctxt unsafe {\n     let bcx = cx;\n     if !type_is_gc_relevant(bcx_tcx(cx), ty) ||\n            ty::type_has_dynamic_size(bcx_tcx(cx), ty) {"}, {"sha": "17c72d6b6c21b7850779e2ba77945379e78d0765", "filename": "src/comp/middle/shape.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f2cd33df72cfe9648b668d8822a785dc81bee908/src%2Fcomp%2Fmiddle%2Fshape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2cd33df72cfe9648b668d8822a785dc81bee908/src%2Fcomp%2Fmiddle%2Fshape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fshape.rs?ref=f2cd33df72cfe9648b668d8822a785dc81bee908", "patch": "@@ -72,7 +72,7 @@ fn eq_res_info(a: res_info, b: res_info) -> bool {\n }\n \n fn mk_global(ccx: @crate_ctxt, name: str, llval: ValueRef, internal: bool) ->\n-   ValueRef {\n+   ValueRef unsafe {\n     let llglobal =\n         str::as_buf(name,\n                     {|buf|\n@@ -245,7 +245,7 @@ fn s_float(_tcx: ty_ctxt) -> u8 {\n     ret shape_f64; // TODO: x86-64\n }\n \n-fn mk_ctxt(llmod: ModuleRef) -> ctxt {\n+fn mk_ctxt(llmod: ModuleRef) -> ctxt unsafe {\n     let llshapetablesty = trans_common::T_named_struct(\"shapes\");\n     let llshapetables =\n         str::as_buf(\"shapes\",\n@@ -580,7 +580,7 @@ fn gen_resource_shapes(ccx: @crate_ctxt) -> ValueRef {\n     ret mk_global(ccx, \"resource_shapes\", C_struct(dtors), true);\n }\n \n-fn gen_shape_tables(ccx: @crate_ctxt) {\n+fn gen_shape_tables(ccx: @crate_ctxt) unsafe {\n     let lltagstable = gen_tag_shapes(ccx);\n     let llresourcestable = gen_resource_shapes(ccx);\n     trans_common::set_struct_body(ccx.shape_cx.llshapetablesty,"}]}