{"sha": "324286f1019bcf9abef19543d4bb8749d9f91ed9", "node_id": "C_kwDOAAsO6NoAKDMyNDI4NmYxMDE5YmNmOWFiZWYxOTU0M2Q0YmI4NzQ5ZDlmOTFlZDk", "commit": {"author": {"name": "Xuanwo", "email": "github@xuanwo.io", "date": "2022-03-28T02:01:59Z"}, "committer": {"name": "Xuanwo", "email": "github@xuanwo.io", "date": "2022-06-16T01:30:34Z"}, "message": "std: Stabilize feature try_reserve_2\n\nSigned-off-by: Xuanwo <github@xuanwo.io>", "tree": {"sha": "563c5a8e7457e9ce4d54d5902217792e30c54145", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/563c5a8e7457e9ce4d54d5902217792e30c54145"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/324286f1019bcf9abef19543d4bb8749d9f91ed9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQQxsjGJMURYQAE8nJHEI7T6a0jpRQUCYqqHuwAKCRDEI7T6a0jp\nRSToAPwLCJMljpn/QJSgeydP3nTQCuR/CDWQeP9FaCfAG1CN6AEAtYvuXKlBFkWS\n9k5JHPW5TWQN7kiudVSj68pNEh9j9gc=\n=8fw5\n-----END PGP SIGNATURE-----", "payload": "tree 563c5a8e7457e9ce4d54d5902217792e30c54145\nparent b31f9cc22bcd720b37ddf927afe378108a5b9a54\nauthor Xuanwo <github@xuanwo.io> 1648432919 +0800\ncommitter Xuanwo <github@xuanwo.io> 1655343034 +0800\n\nstd: Stabilize feature try_reserve_2\n\nSigned-off-by: Xuanwo <github@xuanwo.io>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/324286f1019bcf9abef19543d4bb8749d9f91ed9", "html_url": "https://github.com/rust-lang/rust/commit/324286f1019bcf9abef19543d4bb8749d9f91ed9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/324286f1019bcf9abef19543d4bb8749d9f91ed9/comments", "author": {"login": "Xuanwo", "id": 5351546, "node_id": "MDQ6VXNlcjUzNTE1NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5351546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xuanwo", "html_url": "https://github.com/Xuanwo", "followers_url": "https://api.github.com/users/Xuanwo/followers", "following_url": "https://api.github.com/users/Xuanwo/following{/other_user}", "gists_url": "https://api.github.com/users/Xuanwo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xuanwo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xuanwo/subscriptions", "organizations_url": "https://api.github.com/users/Xuanwo/orgs", "repos_url": "https://api.github.com/users/Xuanwo/repos", "events_url": "https://api.github.com/users/Xuanwo/events{/privacy}", "received_events_url": "https://api.github.com/users/Xuanwo/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xuanwo", "id": 5351546, "node_id": "MDQ6VXNlcjUzNTE1NDY=", "avatar_url": "https://avatars.githubusercontent.com/u/5351546?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xuanwo", "html_url": "https://github.com/Xuanwo", "followers_url": "https://api.github.com/users/Xuanwo/followers", "following_url": "https://api.github.com/users/Xuanwo/following{/other_user}", "gists_url": "https://api.github.com/users/Xuanwo/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xuanwo/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xuanwo/subscriptions", "organizations_url": "https://api.github.com/users/Xuanwo/orgs", "repos_url": "https://api.github.com/users/Xuanwo/repos", "events_url": "https://api.github.com/users/Xuanwo/events{/privacy}", "received_events_url": "https://api.github.com/users/Xuanwo/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b31f9cc22bcd720b37ddf927afe378108a5b9a54", "url": "https://api.github.com/repos/rust-lang/rust/commits/b31f9cc22bcd720b37ddf927afe378108a5b9a54", "html_url": "https://github.com/rust-lang/rust/commit/b31f9cc22bcd720b37ddf927afe378108a5b9a54"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "3706300dcfeb717e53897d01fca200d0b9b8eb62", "filename": "library/alloc/src/collections/binary_heap.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/324286f1019bcf9abef19543d4bb8749d9f91ed9/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/324286f1019bcf9abef19543d4bb8749d9f91ed9/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fbinary_heap.rs?ref=324286f1019bcf9abef19543d4bb8749d9f91ed9", "patch": "@@ -978,7 +978,6 @@ impl<T> BinaryHeap<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(try_reserve_2)]\n     /// use std::collections::BinaryHeap;\n     /// use std::collections::TryReserveError;\n     ///\n@@ -995,7 +994,7 @@ impl<T> BinaryHeap<T> {\n     /// }\n     /// # find_max_slow(&[1, 2, 3]).expect(\"why is the test harness OOMing on 12 bytes?\");\n     /// ```\n-    #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n+    #[stable(feature = \"try_reserve_2\", since = \"1.63.0\")]\n     pub fn try_reserve_exact(&mut self, additional: usize) -> Result<(), TryReserveError> {\n         self.data.try_reserve_exact(additional)\n     }\n@@ -1014,7 +1013,6 @@ impl<T> BinaryHeap<T> {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(try_reserve_2)]\n     /// use std::collections::BinaryHeap;\n     /// use std::collections::TryReserveError;\n     ///\n@@ -1031,7 +1029,7 @@ impl<T> BinaryHeap<T> {\n     /// }\n     /// # find_max_slow(&[1, 2, 3]).expect(\"why is the test harness OOMing on 12 bytes?\");\n     /// ```\n-    #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n+    #[stable(feature = \"try_reserve_2\", since = \"1.63.0\")]\n     pub fn try_reserve(&mut self, additional: usize) -> Result<(), TryReserveError> {\n         self.data.try_reserve(additional)\n     }"}, {"sha": "bdc44771643a58d0c5bbb56ff966839729fffbf9", "filename": "library/std/src/ffi/os_str.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/324286f1019bcf9abef19543d4bb8749d9f91ed9/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/324286f1019bcf9abef19543d4bb8749d9f91ed9/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fffi%2Fos_str.rs?ref=324286f1019bcf9abef19543d4bb8749d9f91ed9", "patch": "@@ -280,7 +280,6 @@ impl OsString {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(try_reserve_2)]\n     /// use std::ffi::{OsStr, OsString};\n     /// use std::collections::TryReserveError;\n     ///\n@@ -297,7 +296,7 @@ impl OsString {\n     /// }\n     /// # process_data(\"123\").expect(\"why is the test harness OOMing on 3 bytes?\");\n     /// ```\n-    #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n+    #[stable(feature = \"try_reserve_2\", since = \"1.63.0\")]\n     #[inline]\n     pub fn try_reserve(&mut self, additional: usize) -> Result<(), TryReserveError> {\n         self.inner.try_reserve(additional)\n@@ -348,7 +347,6 @@ impl OsString {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(try_reserve_2)]\n     /// use std::ffi::{OsStr, OsString};\n     /// use std::collections::TryReserveError;\n     ///\n@@ -365,7 +363,7 @@ impl OsString {\n     /// }\n     /// # process_data(\"123\").expect(\"why is the test harness OOMing on 3 bytes?\");\n     /// ```\n-    #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n+    #[stable(feature = \"try_reserve_2\", since = \"1.63.0\")]\n     #[inline]\n     pub fn try_reserve_exact(&mut self, additional: usize) -> Result<(), TryReserveError> {\n         self.inner.try_reserve_exact(additional)"}, {"sha": "6bbc8f55ace35552c4d9b6c36776190613bcc5ed", "filename": "library/std/src/path.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/324286f1019bcf9abef19543d4bb8749d9f91ed9/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/324286f1019bcf9abef19543d4bb8749d9f91ed9/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=324286f1019bcf9abef19543d4bb8749d9f91ed9", "patch": "@@ -1520,7 +1520,7 @@ impl PathBuf {\n     /// Invokes [`try_reserve`] on the underlying instance of [`OsString`].\n     ///\n     /// [`try_reserve`]: OsString::try_reserve\n-    #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n+    #[stable(feature = \"try_reserve_2\", since = \"1.63.0\")]\n     #[inline]\n     pub fn try_reserve(&mut self, additional: usize) -> Result<(), TryReserveError> {\n         self.inner.try_reserve(additional)\n@@ -1538,7 +1538,7 @@ impl PathBuf {\n     /// Invokes [`try_reserve_exact`] on the underlying instance of [`OsString`].\n     ///\n     /// [`try_reserve_exact`]: OsString::try_reserve_exact\n-    #[unstable(feature = \"try_reserve_2\", issue = \"91789\")]\n+    #[stable(feature = \"try_reserve_2\", since = \"1.63.0\")]\n     #[inline]\n     pub fn try_reserve_exact(&mut self, additional: usize) -> Result<(), TryReserveError> {\n         self.inner.try_reserve_exact(additional)"}]}