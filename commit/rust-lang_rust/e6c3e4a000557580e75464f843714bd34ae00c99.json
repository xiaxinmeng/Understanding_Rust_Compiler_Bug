{"sha": "e6c3e4a000557580e75464f843714bd34ae00c99", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2YzNlNGEwMDA1NTc1ODBlNzU0NjRmODQzNzE0YmQzNGFlMDBjOTk=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-13T14:35:06Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-06-14T01:12:06Z"}, "message": "syntax: revert the uint -> u32 \"fix\"; make the names/comment match.", "tree": {"sha": "0001053b5e2c5e564b8971042598947a4b635c2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0001053b5e2c5e564b8971042598947a4b635c2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e6c3e4a000557580e75464f843714bd34ae00c99", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e6c3e4a000557580e75464f843714bd34ae00c99", "html_url": "https://github.com/rust-lang/rust/commit/e6c3e4a000557580e75464f843714bd34ae00c99", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e6c3e4a000557580e75464f843714bd34ae00c99/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f93a974558bf09bee475427158150ba6e008cdd8", "url": "https://api.github.com/repos/rust-lang/rust/commits/f93a974558bf09bee475427158150ba6e008cdd8", "html_url": "https://github.com/rust-lang/rust/commit/f93a974558bf09bee475427158150ba6e008cdd8"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "b890623b9638e6d73459e6e74188355341ef46f2", "filename": "src/libsyntax/ext/deriving/rand.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e6c3e4a000557580e75464f843714bd34ae00c99/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e6c3e4a000557580e75464f843714bd34ae00c99/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs?ref=e6c3e4a000557580e75464f843714bd34ae00c99", "patch": "@@ -78,13 +78,13 @@ fn rand_substructure(cx: @ExtCtxt, span: span, substr: &Substructure) -> @expr {\n \n             let variant_count = cx.expr_uint(span, variants.len());\n \n-            // need to specify the u32-ness of the random number\n-            let u32_ty = cx.ty_ident(span, cx.ident_of(\"u32\"));\n+            // need to specify the uint-ness of the random number\n+            let uint_ty = cx.ty_ident(span, cx.ident_of(\"uint\"));\n             let r_ty = cx.ty_ident(span, cx.ident_of(\"R\"));\n-            let rand_name = cx.path_all(span, true, copy rand_ident, None, ~[ u32_ty, r_ty ]);\n+            let rand_name = cx.path_all(span, true, copy rand_ident, None, ~[ uint_ty, r_ty ]);\n             let rand_name = cx.expr_path(rand_name);\n \n-            // ::std::rand::Rand::rand::<u32>(rng)\n+            // ::std::rand::Rand::rand::<uint>(rng)\n             let rv_call = cx.expr_call(span,\n                                        rand_name,\n                                        ~[ rng[0].duplicate(cx) ]);"}]}