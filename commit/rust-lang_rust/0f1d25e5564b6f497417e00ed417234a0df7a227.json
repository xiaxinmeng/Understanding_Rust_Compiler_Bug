{"sha": "0f1d25e5564b6f497417e00ed417234a0df7a227", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmMWQyNWU1NTY0YjZmNDk3NDE3ZTAwZWQ0MTcyMzRhMGRmN2EyMjc=", "commit": {"author": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2020-08-24T17:15:20Z"}, "committer": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2020-09-15T02:19:48Z"}, "message": "Test that bounds checks are elided for indexing after .[r]position()", "tree": {"sha": "4633d4dad05def91545ddfc7b4456a2156acecf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4633d4dad05def91545ddfc7b4456a2156acecf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0f1d25e5564b6f497417e00ed417234a0df7a227", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0f1d25e5564b6f497417e00ed417234a0df7a227", "html_url": "https://github.com/rust-lang/rust/commit/0f1d25e5564b6f497417e00ed417234a0df7a227", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0f1d25e5564b6f497417e00ed417234a0df7a227/comments", "author": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9b4154193e8471f36b1a9e781f1ef7d492fc6a6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/9b4154193e8471f36b1a9e781f1ef7d492fc6a6c", "html_url": "https://github.com/rust-lang/rust/commit/9b4154193e8471f36b1a9e781f1ef7d492fc6a6c"}], "stats": {"total": 78, "additions": 78, "deletions": 0}, "files": [{"sha": "e5f3ae45c07d345c967058f821f7381455adde7f", "filename": "src/test/codegen/issue-73396-bounds-check-after-position.rs", "status": "added", "additions": 78, "deletions": 0, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/0f1d25e5564b6f497417e00ed417234a0df7a227/src%2Ftest%2Fcodegen%2Fissue-73396-bounds-check-after-position.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0f1d25e5564b6f497417e00ed417234a0df7a227/src%2Ftest%2Fcodegen%2Fissue-73396-bounds-check-after-position.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-73396-bounds-check-after-position.rs?ref=0f1d25e5564b6f497417e00ed417234a0df7a227", "patch": "@@ -0,0 +1,78 @@\n+// min-llvm-version: 11.0.0\n+// compile-flags: -O\n+// ignore-debug: the debug assertions get in the way\n+#![crate_type = \"lib\"]\n+\n+// Make sure no bounds checks are emitted when slicing or indexing\n+// with an index from `position()` or `rposition()`.\n+\n+// CHECK-LABEL: @position_slice_to_no_bounds_check\n+#[no_mangle]\n+pub fn position_slice_to_no_bounds_check(s: &[u8]) -> &[u8] {\n+    // CHECK-NOT: panic\n+    // CHECK-NOT: slice_index_len_fail\n+    if let Some(idx) = s.iter().position(|b| *b == b'\\\\') {\n+        &s[..idx]\n+    } else {\n+        s\n+    }\n+}\n+\n+// CHECK-LABEL: @position_slice_from_no_bounds_check\n+#[no_mangle]\n+pub fn position_slice_from_no_bounds_check(s: &[u8]) -> &[u8] {\n+    // CHECK-NOT: panic\n+    // CHECK-NOT: slice_index_len_fail\n+    if let Some(idx) = s.iter().position(|b| *b == b'\\\\') {\n+        &s[idx..]\n+    } else {\n+        s\n+    }\n+}\n+\n+// CHECK-LABEL: @position_index_no_bounds_check\n+#[no_mangle]\n+pub fn position_index_no_bounds_check(s: &[u8]) -> u8 {\n+    // CHECK-NOT: panic\n+    // CHECK-NOT: slice_index_len_fail\n+    if let Some(idx) = s.iter().position(|b| *b == b'\\\\') {\n+        s[idx]\n+    } else {\n+        42\n+    }\n+}\n+// CHECK-LABEL: @rposition_slice_to_no_bounds_check\n+#[no_mangle]\n+pub fn rposition_slice_to_no_bounds_check(s: &[u8]) -> &[u8] {\n+    // CHECK-NOT: panic\n+    // CHECK-NOT: slice_index_len_fail\n+    if let Some(idx) = s.iter().rposition(|b| *b == b'\\\\') {\n+        &s[..idx]\n+    } else {\n+        s\n+    }\n+}\n+\n+// CHECK-LABEL: @rposition_slice_from_no_bounds_check\n+#[no_mangle]\n+pub fn rposition_slice_from_no_bounds_check(s: &[u8]) -> &[u8] {\n+    // CHECK-NOT: panic\n+    // CHECK-NOT: slice_index_len_fail\n+    if let Some(idx) = s.iter().rposition(|b| *b == b'\\\\') {\n+        &s[idx..]\n+    } else {\n+        s\n+    }\n+}\n+\n+// CHECK-LABEL: @rposition_index_no_bounds_check\n+#[no_mangle]\n+pub fn rposition_index_no_bounds_check(s: &[u8]) -> u8 {\n+    // CHECK-NOT: panic\n+    // CHECK-NOT: slice_index_len_fail\n+    if let Some(idx) = s.iter().rposition(|b| *b == b'\\\\') {\n+        s[idx]\n+    } else {\n+        42\n+    }\n+}"}]}