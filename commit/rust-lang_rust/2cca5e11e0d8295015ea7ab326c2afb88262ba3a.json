{"sha": "2cca5e11e0d8295015ea7ab326c2afb88262ba3a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjY2E1ZTExZTBkODI5NTAxNWVhN2FiMzI2YzJhZmI4ODI2MmJhM2E=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-12-09T21:38:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-09T21:38:20Z"}, "message": "Rollup merge of #79777 - tmiasko:remove-first-merge, r=lcnr\n\nRemove `first_merge` from liveness debug logs", "tree": {"sha": "a918084e0295f289dd983d91b6ae356aa94c90ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a918084e0295f289dd983d91b6ae356aa94c90ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cca5e11e0d8295015ea7ab326c2afb88262ba3a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf0UPMCRBK7hj4Ov3rIwAAdHIIACvWT+PREt06C7yjfvmP24Bh\nUAL7WUiQafxn9WOI6GNUmS9DAr6LFpki3mHyk2DkblnW3rwo6WiAuf4++ejZP4MG\ntzMx0hY2wKmzkJlsBdE/oVVoyJuXxvoDCE/PsO/d2uqPt35VeFsWriraOdldrDTJ\na9QgkWl26LbJ30scilJF0BE5whHKsANjNk+XbZcYLC9an/+F/FOezZ937r9UcY8G\nFgU3A+eYwgMFoZUeYN3nFeOggCEUaFsYjCIi1S/rwz//dM1wddD78RTVXO8fJXOh\nbVr6bwALFFq3PTMKmoH1PR4WeI4ucs34OHV3edQaU+Sv1bj+SeliMo83s2zc46k=\n=zlYD\n-----END PGP SIGNATURE-----\n", "payload": "tree a918084e0295f289dd983d91b6ae356aa94c90ef\nparent 287293732f55867b22fa73f1b2153a49082266f0\nparent d711c3006bae35588899cd0d823c79122de40a95\nauthor Tyler Mandry <tmandry@gmail.com> 1607549900 -0800\ncommitter GitHub <noreply@github.com> 1607549900 -0800\n\nRollup merge of #79777 - tmiasko:remove-first-merge, r=lcnr\n\nRemove `first_merge` from liveness debug logs\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cca5e11e0d8295015ea7ab326c2afb88262ba3a", "html_url": "https://github.com/rust-lang/rust/commit/2cca5e11e0d8295015ea7ab326c2afb88262ba3a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cca5e11e0d8295015ea7ab326c2afb88262ba3a/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "287293732f55867b22fa73f1b2153a49082266f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/287293732f55867b22fa73f1b2153a49082266f0", "html_url": "https://github.com/rust-lang/rust/commit/287293732f55867b22fa73f1b2153a49082266f0"}, {"sha": "d711c3006bae35588899cd0d823c79122de40a95", "url": "https://api.github.com/repos/rust-lang/rust/commits/d711c3006bae35588899cd0d823c79122de40a95", "html_url": "https://github.com/rust-lang/rust/commit/d711c3006bae35588899cd0d823c79122de40a95"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "0b464f25efb7ba6da9752fbe05a827d56e5e6a77", "filename": "compiler/rustc_passes/src/liveness.rs", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2cca5e11e0d8295015ea7ab326c2afb88262ba3a/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cca5e11e0d8295015ea7ab326c2afb88262ba3a/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fliveness.rs?ref=2cca5e11e0d8295015ea7ab326c2afb88262ba3a", "patch": "@@ -781,19 +781,13 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n         debug!(\"init_from_succ(ln={}, succ={})\", self.ln_str(ln), self.ln_str(succ_ln));\n     }\n \n-    fn merge_from_succ(&mut self, ln: LiveNode, succ_ln: LiveNode, first_merge: bool) -> bool {\n+    fn merge_from_succ(&mut self, ln: LiveNode, succ_ln: LiveNode) -> bool {\n         if ln == succ_ln {\n             return false;\n         }\n \n         let changed = self.rwu_table.union(ln, succ_ln);\n-        debug!(\n-            \"merge_from_succ(ln={:?}, succ={}, first_merge={}, changed={})\",\n-            ln,\n-            self.ln_str(succ_ln),\n-            first_merge,\n-            changed\n-        );\n+        debug!(\"merge_from_succ(ln={:?}, succ={}, changed={})\", ln, self.ln_str(succ_ln), changed);\n         changed\n     }\n \n@@ -893,7 +887,6 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n         };\n \n         // Propagate through calls to the closure.\n-        let mut first_merge = true;\n         loop {\n             self.init_from_succ(self.closure_ln, succ);\n             for param in body.params {\n@@ -903,10 +896,9 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n                 })\n             }\n \n-            if !self.merge_from_succ(self.exit_ln, self.closure_ln, first_merge) {\n+            if !self.merge_from_succ(self.exit_ln, self.closure_ln) {\n                 break;\n             }\n-            first_merge = false;\n             assert_eq!(succ, self.propagate_through_expr(&body.value, self.exit_ln));\n         }\n \n@@ -1012,7 +1004,6 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n                 //\n                 let ln = self.live_node(expr.hir_id, expr.span);\n                 self.init_empty(ln, succ);\n-                let mut first_merge = true;\n                 for arm in arms {\n                     let body_succ = self.propagate_through_expr(&arm.body, succ);\n \n@@ -1021,8 +1012,7 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n                         body_succ,\n                     );\n                     let arm_succ = self.define_bindings_in_pat(&arm.pat, guard_succ);\n-                    self.merge_from_succ(ln, arm_succ, first_merge);\n-                    first_merge = false;\n+                    self.merge_from_succ(ln, arm_succ);\n                 }\n                 self.propagate_through_expr(&e, ln)\n             }\n@@ -1133,7 +1123,7 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n \n                 let ln = self.live_node(expr.hir_id, expr.span);\n                 self.init_from_succ(ln, succ);\n-                self.merge_from_succ(ln, r_succ, false);\n+                self.merge_from_succ(ln, r_succ);\n \n                 self.propagate_through_expr(&l, ln)\n             }\n@@ -1377,7 +1367,6 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n         */\n \n         // first iteration:\n-        let mut first_merge = true;\n         let ln = self.live_node(expr.hir_id, expr.span);\n         self.init_empty(ln, succ);\n         debug!(\"propagate_through_loop: using id for loop body {} {:?}\", expr.hir_id, body);\n@@ -1389,8 +1378,7 @@ impl<'a, 'tcx> Liveness<'a, 'tcx> {\n         let body_ln = self.propagate_through_block(body, ln);\n \n         // repeat until fixed point is reached:\n-        while self.merge_from_succ(ln, body_ln, first_merge) {\n-            first_merge = false;\n+        while self.merge_from_succ(ln, body_ln) {\n             assert_eq!(body_ln, self.propagate_through_block(body, ln));\n         }\n "}]}