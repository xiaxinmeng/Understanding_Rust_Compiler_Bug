{"sha": "ce338046c8b40e3284707d2ab725e9f076592959", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlMzM4MDQ2YzhiNDBlMzI4NDcwN2QyYWI3MjVlOWYwNzY1OTI5NTk=", "commit": {"author": {"name": "Lukas Kalbertodt", "email": "lukas.kalbertodt@gmail.com", "date": "2020-07-19T11:45:51Z"}, "committer": {"name": "Lukas Kalbertodt", "email": "lukas.kalbertodt@gmail.com", "date": "2020-07-19T14:11:07Z"}, "message": "Fix panic message when `RangeFrom` index is out of bounds\n\nBefore, the `Range` method was called with `end = slice.len()`.\nUnfortunately, because `Range::index` first checks the order of the\nindices (start has to be smaller than end), an out of bounds index\nleads to `core::slice::slice_index_order_fail` being called. This\nprints the message 'slice index starts at 27 but ends at 10', which is\nworse than 'index 27 out of range for slice of length 10'. This is not\nonly useful to normal users reading panic messages, but also for people\ninspecting assembly and being confused by `slice_index_order_fail`\ncalls.", "tree": {"sha": "f4a43228117ba7ec05951d7e0ae13d8d3b62ee67", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f4a43228117ba7ec05951d7e0ae13d8d3b62ee67"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce338046c8b40e3284707d2ab725e9f076592959", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYIAB0WIQSOpdglyeINwt5bMtWqUCXPHMhXVAUCXxRUewAKCRCqUCXPHMhX\nVKuTAQD38Fxo7LRq9G4D/Lvr5S4wrlh2x6F2mqA33AFd9PaYdgEAx+yAOVh3CF10\nNyyBLGjQ+JapSuGhMUAv09DPpNJWBQE=\n=uK9a\n-----END PGP SIGNATURE-----", "payload": "tree f4a43228117ba7ec05951d7e0ae13d8d3b62ee67\nparent 47ea6d90b073ab977cf072e2f5f46d63de532cc6\nauthor Lukas Kalbertodt <lukas.kalbertodt@gmail.com> 1595159151 +0200\ncommitter Lukas Kalbertodt <lukas.kalbertodt@gmail.com> 1595167867 +0200\n\nFix panic message when `RangeFrom` index is out of bounds\n\nBefore, the `Range` method was called with `end = slice.len()`.\nUnfortunately, because `Range::index` first checks the order of the\nindices (start has to be smaller than end), an out of bounds index\nleads to `core::slice::slice_index_order_fail` being called. This\nprints the message 'slice index starts at 27 but ends at 10', which is\nworse than 'index 27 out of range for slice of length 10'. This is not\nonly useful to normal users reading panic messages, but also for people\ninspecting assembly and being confused by `slice_index_order_fail`\ncalls.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce338046c8b40e3284707d2ab725e9f076592959", "html_url": "https://github.com/rust-lang/rust/commit/ce338046c8b40e3284707d2ab725e9f076592959", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce338046c8b40e3284707d2ab725e9f076592959/comments", "author": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "LukasKalbertodt", "id": 7419664, "node_id": "MDQ6VXNlcjc0MTk2NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7419664?v=4", "gravatar_id": "", "url": "https://api.github.com/users/LukasKalbertodt", "html_url": "https://github.com/LukasKalbertodt", "followers_url": "https://api.github.com/users/LukasKalbertodt/followers", "following_url": "https://api.github.com/users/LukasKalbertodt/following{/other_user}", "gists_url": "https://api.github.com/users/LukasKalbertodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/LukasKalbertodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/LukasKalbertodt/subscriptions", "organizations_url": "https://api.github.com/users/LukasKalbertodt/orgs", "repos_url": "https://api.github.com/users/LukasKalbertodt/repos", "events_url": "https://api.github.com/users/LukasKalbertodt/events{/privacy}", "received_events_url": "https://api.github.com/users/LukasKalbertodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47ea6d90b073ab977cf072e2f5f46d63de532cc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/47ea6d90b073ab977cf072e2f5f46d63de532cc6", "html_url": "https://github.com/rust-lang/rust/commit/47ea6d90b073ab977cf072e2f5f46d63de532cc6"}], "stats": {"total": 12, "additions": 9, "deletions": 3}, "files": [{"sha": "52babaf9f72e6032c2d325eb6002676c319c57bb", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ce338046c8b40e3284707d2ab725e9f076592959/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce338046c8b40e3284707d2ab725e9f076592959/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=ce338046c8b40e3284707d2ab725e9f076592959", "patch": "@@ -3241,12 +3241,18 @@ unsafe impl<T> SliceIndex<[T]> for ops::RangeFrom<usize> {\n \n     #[inline]\n     fn index(self, slice: &[T]) -> &[T] {\n-        (self.start..slice.len()).index(slice)\n+        if self.start > slice.len() {\n+            slice_index_len_fail(self.start, slice.len());\n+        }\n+        unsafe { &*self.get_unchecked(slice) }\n     }\n \n     #[inline]\n     fn index_mut(self, slice: &mut [T]) -> &mut [T] {\n-        (self.start..slice.len()).index_mut(slice)\n+        if self.start > slice.len() {\n+            slice_index_len_fail(self.start, slice.len());\n+        }\n+        unsafe { &mut *self.get_unchecked_mut(slice) }\n     }\n }\n "}, {"sha": "8e240832c13b839cdfd7df9d12eac7da5249f966", "filename": "src/libcore/tests/slice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce338046c8b40e3284707d2ab725e9f076592959/src%2Flibcore%2Ftests%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce338046c8b40e3284707d2ab725e9f076592959/src%2Flibcore%2Ftests%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fslice.rs?ref=ce338046c8b40e3284707d2ab725e9f076592959", "patch": "@@ -1088,7 +1088,7 @@ mod slice_index {\n \n             good: data[6..] == [];\n             bad: data[7..];\n-            message: \"but ends at\"; // perhaps not ideal\n+            message: \"out of range\";\n         }\n \n         in mod rangeto_len {"}]}