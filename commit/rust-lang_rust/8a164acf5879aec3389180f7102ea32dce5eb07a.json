{"sha": "8a164acf5879aec3389180f7102ea32dce5eb07a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhMTY0YWNmNTg3OWFlYzMzODkxODBmNzEwMmVhMzJkY2U1ZWIwN2E=", "commit": {"author": {"name": "wangxiangqing", "email": "wangxiangqing@bytedance.com", "date": "2019-10-06T04:03:53Z"}, "committer": {"name": "wangxiangqing", "email": "wangxiangqing@bytedance.com", "date": "2019-10-06T09:12:31Z"}, "message": "Suggest dereferencing boolean reference when used in 'if' or 'while'\n\nChange-Id: I0c5c4d767be2647e6f017ae7bf83558c56dbca97", "tree": {"sha": "c497a3ac1f2e02f1dc5976ea631fe39531022f3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c497a3ac1f2e02f1dc5976ea631fe39531022f3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a164acf5879aec3389180f7102ea32dce5eb07a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a164acf5879aec3389180f7102ea32dce5eb07a", "html_url": "https://github.com/rust-lang/rust/commit/8a164acf5879aec3389180f7102ea32dce5eb07a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a164acf5879aec3389180f7102ea32dce5eb07a/comments", "author": {"login": "XiangQingW", "id": 7948384, "node_id": "MDQ6VXNlcjc5NDgzODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7948384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XiangQingW", "html_url": "https://github.com/XiangQingW", "followers_url": "https://api.github.com/users/XiangQingW/followers", "following_url": "https://api.github.com/users/XiangQingW/following{/other_user}", "gists_url": "https://api.github.com/users/XiangQingW/gists{/gist_id}", "starred_url": "https://api.github.com/users/XiangQingW/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XiangQingW/subscriptions", "organizations_url": "https://api.github.com/users/XiangQingW/orgs", "repos_url": "https://api.github.com/users/XiangQingW/repos", "events_url": "https://api.github.com/users/XiangQingW/events{/privacy}", "received_events_url": "https://api.github.com/users/XiangQingW/received_events", "type": "User", "site_admin": false}, "committer": {"login": "XiangQingW", "id": 7948384, "node_id": "MDQ6VXNlcjc5NDgzODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7948384?v=4", "gravatar_id": "", "url": "https://api.github.com/users/XiangQingW", "html_url": "https://github.com/XiangQingW", "followers_url": "https://api.github.com/users/XiangQingW/followers", "following_url": "https://api.github.com/users/XiangQingW/following{/other_user}", "gists_url": "https://api.github.com/users/XiangQingW/gists{/gist_id}", "starred_url": "https://api.github.com/users/XiangQingW/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/XiangQingW/subscriptions", "organizations_url": "https://api.github.com/users/XiangQingW/orgs", "repos_url": "https://api.github.com/users/XiangQingW/repos", "events_url": "https://api.github.com/users/XiangQingW/events{/privacy}", "received_events_url": "https://api.github.com/users/XiangQingW/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b0aeaca43bc457db2be70114fa7c6ab7925fd78", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b0aeaca43bc457db2be70114fa7c6ab7925fd78", "html_url": "https://github.com/rust-lang/rust/commit/0b0aeaca43bc457db2be70114fa7c6ab7925fd78"}], "stats": {"total": 92, "additions": 80, "deletions": 12}, "files": [{"sha": "694b59897c5a9bcd09867c66619aa43cafa17641", "filename": "src/test/ui/if/if-no-match-bindings.stderr", "status": "modified", "additions": 34, "deletions": 10, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/8a164acf5879aec3389180f7102ea32dce5eb07a/src%2Ftest%2Fui%2Fif%2Fif-no-match-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a164acf5879aec3389180f7102ea32dce5eb07a/src%2Ftest%2Fui%2Fif%2Fif-no-match-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fif%2Fif-no-match-bindings.stderr?ref=8a164acf5879aec3389180f7102ea32dce5eb07a", "patch": "@@ -2,7 +2,10 @@ error[E0308]: mismatched types\n   --> $DIR/if-no-match-bindings.rs:18:8\n    |\n LL |     if b_ref() {}\n-   |        ^^^^^^^ expected bool, found &bool\n+   |        ^^^^^^^\n+   |        |\n+   |        expected bool, found &bool\n+   |        help: consider dereferencing the borrow: `*b_ref()`\n    |\n    = note: expected type `bool`\n               found type `&bool`\n@@ -11,7 +14,10 @@ error[E0308]: mismatched types\n   --> $DIR/if-no-match-bindings.rs:19:8\n    |\n LL |     if b_mut_ref() {}\n-   |        ^^^^^^^^^^^ expected bool, found &mut bool\n+   |        ^^^^^^^^^^^\n+   |        |\n+   |        expected bool, found &mut bool\n+   |        help: consider dereferencing the borrow: `*b_mut_ref()`\n    |\n    = note: expected type `bool`\n               found type `&mut bool`\n@@ -20,7 +26,10 @@ error[E0308]: mismatched types\n   --> $DIR/if-no-match-bindings.rs:20:8\n    |\n LL |     if &true {}\n-   |        ^^^^^ expected bool, found &bool\n+   |        ^^^^^\n+   |        |\n+   |        expected bool, found &bool\n+   |        help: consider dereferencing the borrow: `*&true`\n    |\n    = note: expected type `bool`\n               found type `&bool`\n@@ -29,7 +38,10 @@ error[E0308]: mismatched types\n   --> $DIR/if-no-match-bindings.rs:21:8\n    |\n LL |     if &mut true {}\n-   |        ^^^^^^^^^ expected bool, found &mut bool\n+   |        ^^^^^^^^^\n+   |        |\n+   |        expected bool, found &mut bool\n+   |        help: consider dereferencing the borrow: `*&mut true`\n    |\n    = note: expected type `bool`\n               found type `&mut bool`\n@@ -38,7 +50,10 @@ error[E0308]: mismatched types\n   --> $DIR/if-no-match-bindings.rs:24:11\n    |\n LL |     while b_ref() {}\n-   |           ^^^^^^^ expected bool, found &bool\n+   |           ^^^^^^^\n+   |           |\n+   |           expected bool, found &bool\n+   |           help: consider dereferencing the borrow: `*b_ref()`\n    |\n    = note: expected type `bool`\n               found type `&bool`\n@@ -47,25 +62,34 @@ error[E0308]: mismatched types\n   --> $DIR/if-no-match-bindings.rs:25:11\n    |\n LL |     while b_mut_ref() {}\n-   |           ^^^^^^^^^^^ expected bool, found &mut bool\n+   |           ^^^^^^^^^^^\n+   |           |\n+   |           expected bool, found &mut bool\n+   |           help: consider dereferencing the borrow: `*b_mut_ref()`\n    |\n    = note: expected type `bool`\n               found type `&mut bool`\n \n error[E0308]: mismatched types\n   --> $DIR/if-no-match-bindings.rs:26:11\n    |\n-LL |     while &true {}\n-   |           ^^^^^ expected bool, found &bool\n+26 |     while &true {}\n+   |           ^^^^^\n+   |           |\n+   |           expected bool, found &bool\n+   |           help: consider dereferencing the borrow: `*&true`\n    |\n    = note: expected type `bool`\n               found type `&bool`\n \n error[E0308]: mismatched types\n   --> $DIR/if-no-match-bindings.rs:27:11\n    |\n-LL |     while &mut true {}\n-   |           ^^^^^^^^^ expected bool, found &mut bool\n+27 |     while &mut true {}\n+   |           ^^^^^^^^^\n+   |           |\n+   |           expected bool, found &mut bool\n+   |           help: consider dereferencing the borrow: `*&mut true`\n    |\n    = note: expected type `bool`\n               found type `&mut bool`"}, {"sha": "ab1b405e5c21fb130b526112542ba3aeb34950e0", "filename": "src/test/ui/rfc-2497-if-let-chains/disallowed-positions.stderr", "status": "modified", "additions": 46, "deletions": 2, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/8a164acf5879aec3389180f7102ea32dce5eb07a/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8a164acf5879aec3389180f7102ea32dce5eb07a/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2497-if-let-chains%2Fdisallowed-positions.stderr?ref=8a164acf5879aec3389180f7102ea32dce5eb07a", "patch": "@@ -513,11 +513,52 @@ warning: the feature `let_chains` is incomplete and may cause the compiler to cr\n LL | #![feature(let_chains)] // Avoid inflating `.stderr` with overzealous gates in this test.\n    |            ^^^^^^^^^^\n \n+warning: unnecessary parentheses around `if` condition\n+  --> $DIR/disallowed-positions.rs:51:8\n+   |\n+LL |     if (true || let 0 = 0) {}\n+   |        ^^^^^^^^^^^^^^^^^^^ help: remove these parentheses\n+   |\n+   = note: `#[warn(unused_parens)]` on by default\n+\n+warning: unnecessary parentheses around `while` condition\n+  --> $DIR/disallowed-positions.rs:115:11\n+   |\n+LL |     while (true || let 0 = 0) {}\n+   |           ^^^^^^^^^^^^^^^^^^^ help: remove these parentheses\n+\n+wrning: unnecessary parentheses around `let` head expression\n+  --> $DIR/disallowed-positions.rs:160:41\n+   |\n+LL |     if let Range { start: _, end: _ } = (true..true || false) { }\n+   |                                         ^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses\n+\n+warning: unnecessary parentheses around `let` head expression\n+  --> $DIR/disallowed-positions.rs:162:41\n+   |\n+LL |     if let Range { start: _, end: _ } = (true..true && false) { }\n+   |                                         ^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses\n+\n+warning: unnecessary parentheses around `let` head expression\n+  --> $DIR/disallowed-positions.rs:164:44\n+   |\n+LL |     while let Range { start: _, end: _ } = (true..true || false) { }\n+   |                                            ^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses\n+\n+warning: unnecessary parentheses around `let` head expression\n+  --> $DIR/disallowed-positions.rs:166:44\n+   |\n+LL |     while let Range { start: _, end: _ } = (true..true && false) { }\n+   |                                            ^^^^^^^^^^^^^^^^^^^^^ help: remove these parentheses\n+\n error[E0308]: mismatched types\n   --> $DIR/disallowed-positions.rs:32:8\n    |\n LL |     if &let 0 = 0 {}\n-   |        ^^^^^^^^^^ expected bool, found &bool\n+   |        ^^^^^^^^^^\n+   |        |\n+   |        expected bool, found &bool\n+   |        help: consider dereferencing the borrow: `*&let 0 = 0`\n    |\n    = note: expected type `bool`\n               found type `&bool`\n@@ -702,7 +743,10 @@ error[E0308]: mismatched types\n   --> $DIR/disallowed-positions.rs:96:11\n    |\n LL |     while &let 0 = 0 {}\n-   |           ^^^^^^^^^^ expected bool, found &bool\n+   |           ^^^^^^^^^^\n+   |           |\n+   |           expected bool, found &bool\n+   |           help: consider dereferencing the borrow: `*&let 0 = 0`\n    |\n    = note: expected type `bool`\n               found type `&bool`"}]}