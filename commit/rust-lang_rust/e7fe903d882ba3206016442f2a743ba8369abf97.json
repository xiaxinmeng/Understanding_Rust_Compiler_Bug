{"sha": "e7fe903d882ba3206016442f2a743ba8369abf97", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3ZmU5MDNkODgyYmEzMjA2MDE2NDQyZjJhNzQzYmE4MzY5YWJmOTc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-05T20:26:46Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-09-05T20:26:46Z"}, "message": "libsyntax: Make \"pub use\" mean the same thing as the former \"import\" in all circumstances", "tree": {"sha": "14c620613b361e40326dfc9355fca781ad5a14a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14c620613b361e40326dfc9355fca781ad5a14a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e7fe903d882ba3206016442f2a743ba8369abf97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e7fe903d882ba3206016442f2a743ba8369abf97", "html_url": "https://github.com/rust-lang/rust/commit/e7fe903d882ba3206016442f2a743ba8369abf97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e7fe903d882ba3206016442f2a743ba8369abf97/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10c533861b38cf7c0533d3e28529bb49c917d2eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/10c533861b38cf7c0533d3e28529bb49c917d2eb", "html_url": "https://github.com/rust-lang/rust/commit/10c533861b38cf7c0533d3e28529bb49c917d2eb"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "4ec5a57e7363a2ea653ffa343fd3fc6d310408d0", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/e7fe903d882ba3206016442f2a743ba8369abf97/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e7fe903d882ba3206016442f2a743ba8369abf97/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=e7fe903d882ba3206016442f2a743ba8369abf97", "patch": "@@ -3267,7 +3267,7 @@ struct parser {\n                                           visibility,\n                                           maybe_append(attrs, extra_attrs)));\n         } else if self.eat_keyword(~\"use\") {\n-            let view_item = self.parse_use();\n+            let view_item = self.parse_use(visibility);\n             self.expect(token::SEMI);\n             return iovi_view_item(@{\n                 node: view_item,\n@@ -3327,9 +3327,9 @@ struct parser {\n         }\n     }\n \n-    fn parse_use() -> view_item_ {\n-        if self.look_ahead(1) == token::SEMI ||\n-            self.look_ahead(1) == token::LPAREN {\n+    fn parse_use(vis: visibility) -> view_item_ {\n+        if vis != public && (self.look_ahead(1) == token::SEMI ||\n+                             self.look_ahead(1) == token::LPAREN) {\n             // Old-style \"use\"; i.e. what we now call \"extern mod\".\n             let ident = self.parse_ident();\n             let metadata = self.parse_optional_meta();\n@@ -3445,7 +3445,7 @@ struct parser {\n     fn parse_view_item(+attrs: ~[attribute]) -> @view_item {\n         let lo = self.span.lo, vis = self.parse_visibility();\n         let node = if self.eat_keyword(~\"use\") {\n-            self.parse_use()\n+            self.parse_use(vis)\n         } else if self.eat_keyword(~\"import\") {\n             view_item_import(self.parse_view_paths())\n         } else if self.eat_keyword(~\"export\") {"}]}