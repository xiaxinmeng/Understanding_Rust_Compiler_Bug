{"sha": "9137153e4725649443ac02f742424aa5737d15b6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxMzcxNTNlNDcyNTY0OTQ0M2FjMDJmNzQyNDI0YWE1NzM3ZDE1YjY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-06-12T16:58:11Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2017-06-24T19:28:11Z"}, "message": "Use new macro instead", "tree": {"sha": "aec4c6d40260f18bd7c4c5f55cfb302ac7af6a77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aec4c6d40260f18bd7c4c5f55cfb302ac7af6a77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9137153e4725649443ac02f742424aa5737d15b6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9137153e4725649443ac02f742424aa5737d15b6", "html_url": "https://github.com/rust-lang/rust/commit/9137153e4725649443ac02f742424aa5737d15b6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9137153e4725649443ac02f742424aa5737d15b6/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "deb1eb6134a8ac22c55dc3e9713d667ff352ecf5", "url": "https://api.github.com/repos/rust-lang/rust/commits/deb1eb6134a8ac22c55dc3e9713d667ff352ecf5", "html_url": "https://github.com/rust-lang/rust/commit/deb1eb6134a8ac22c55dc3e9713d667ff352ecf5"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "ea08f1f624e679ca0bfdd6adc84a4e95e3a2d29f", "filename": "src/librustc_typeck/check/cast.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9137153e4725649443ac02f742424aa5737d15b6/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9137153e4725649443ac02f742424aa5737d15b6/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fcast.rs?ref=9137153e4725649443ac02f742424aa5737d15b6", "patch": "@@ -120,10 +120,10 @@ fn make_invalid_casting_error<'a, 'gcx, 'tcx>(sess: &'a Session,\n                                               cast_ty: Ty<'tcx>,\n                                               fcx: &FnCtxt<'a, 'gcx, 'tcx>)\n                                               -> DiagnosticBuilder<'a> {\n-    struct_span_err!(sess, span, E0606,\n-                     \"casting `{}` as `{}` is invalid\",\n-                     fcx.ty_to_string(expr_ty),\n-                     fcx.ty_to_string(cast_ty))\n+    type_error_struct!(sess, span, expr_ty, E0606,\n+                       \"casting `{}` as `{}` is invalid\",\n+                       fcx.ty_to_string(expr_ty),\n+                       fcx.ty_to_string(cast_ty))\n }\n \n impl<'a, 'gcx, 'tcx> CastCheck<'tcx> {\n@@ -212,11 +212,11 @@ impl<'a, 'gcx, 'tcx> CastCheck<'tcx> {\n                     .emit();\n             }\n             CastError::CastToChar => {\n-                struct_span_err!(fcx.tcx.sess, self.span, E0604,\n+                type_error_struct!(fcx.tcx.sess, self.span, self.expr_ty, E0604,\n                                  \"only `u8` can be cast as `char`, not `{}`\", self.expr_ty).emit();\n             }\n             CastError::NonScalar => {\n-                struct_span_err!(fcx.tcx.sess, self.span, E0605,\n+                type_error_struct!(fcx.tcx.sess, self.span, self.expr_ty, E0605,\n                                  \"non-primitive cast: `{}` as `{}`\",\n                                  self.expr_ty,\n                                  fcx.ty_to_string(self.cast_ty))\n@@ -225,7 +225,7 @@ impl<'a, 'gcx, 'tcx> CastCheck<'tcx> {\n                                 .emit();\n             }\n             CastError::SizedUnsizedCast => {\n-                struct_span_err!(fcx.tcx.sess, self.span, E0607,\n+                type_error_struct!(fcx.tcx.sess, self.span, self.expr_ty, E0607,\n                                  \"cannot cast thin pointer `{}` to fat pointer `{}`\",\n                                  self.expr_ty,\n                                  fcx.ty_to_string(self.cast_ty)).emit();"}]}