{"sha": "21c593593163c22b996f7c8bffe05b9708f5b2d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxYzU5MzU5MzE2M2MyMmI5OTZmN2M4YmZmZTA1Yjk3MDhmNWIyZDA=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-01T07:54:32Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2019-02-01T07:54:32Z"}, "message": "Merge #722\n\n722: remove hard-coded support for ctry macro r=matklad a=matklad\n\nIt was used mainly to prevent HirFileId infra from bitroting, but the\r\n`vec![]` macro can serve that just as well!\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "7346c0bed5398138702c83aafff7ee6752e821ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7346c0bed5398138702c83aafff7ee6752e821ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21c593593163c22b996f7c8bffe05b9708f5b2d0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21c593593163c22b996f7c8bffe05b9708f5b2d0", "html_url": "https://github.com/rust-lang/rust/commit/21c593593163c22b996f7c8bffe05b9708f5b2d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21c593593163c22b996f7c8bffe05b9708f5b2d0/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "9d3f4624e1a83eb945f4df6427fc650356ea77fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d3f4624e1a83eb945f4df6427fc650356ea77fa", "html_url": "https://github.com/rust-lang/rust/commit/9d3f4624e1a83eb945f4df6427fc650356ea77fa"}, {"sha": "de85f1e94740d9a19066f7fda2e57d26973e472c", "url": "https://api.github.com/repos/rust-lang/rust/commits/de85f1e94740d9a19066f7fda2e57d26973e472c", "html_url": "https://github.com/rust-lang/rust/commit/de85f1e94740d9a19066f7fda2e57d26973e472c"}], "stats": {"total": 89, "additions": 16, "deletions": 73}, "files": [{"sha": "cf722087550159d08999ad728d39b7218ee5ce1a", "filename": "crates/ra_hir/src/macros.rs", "status": "modified", "additions": 1, "deletions": 29, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/21c593593163c22b996f7c8bffe05b9708f5b2d0/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c593593163c22b996f7c8bffe05b9708f5b2d0/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmacros.rs?ref=21c593593163c22b996f7c8bffe05b9708f5b2d0", "patch": "@@ -19,7 +19,6 @@ use crate::{HirDatabase, MacroCallId};\n // Hard-coded defs for now :-(\n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub enum MacroDef {\n-    CTry,\n     Vec,\n     QueryGroup,\n }\n@@ -38,9 +37,7 @@ impl MacroDef {\n         let def = {\n             let path = macro_call.path()?;\n             let name_ref = path.segment()?.name_ref()?;\n-            if name_ref.text() == \"ctry\" {\n-                MacroDef::CTry\n-            } else if name_ref.text() == \"vec\" {\n+            if name_ref.text() == \"vec\" {\n                 MacroDef::Vec\n             } else if name_ref.text() == \"query_group\" {\n                 MacroDef::QueryGroup\n@@ -60,35 +57,10 @@ impl MacroDef {\n \n     fn expand(self, input: MacroInput) -> Option<MacroExpansion> {\n         match self {\n-            MacroDef::CTry => self.expand_ctry(input),\n             MacroDef::Vec => self.expand_vec(input),\n             MacroDef::QueryGroup => self.expand_query_group(input),\n         }\n     }\n-    fn expand_ctry(self, input: MacroInput) -> Option<MacroExpansion> {\n-        let text = format!(\n-            r\"\n-                fn dummy() {{\n-                    match {} {{\n-                        None => return Ok(None),\n-                        Some(it) => it,\n-                    }}\n-                }}\",\n-            input.text\n-        );\n-        let file = SourceFile::parse(&text);\n-        let match_expr = file.syntax().descendants().find_map(ast::MatchExpr::cast)?;\n-        let match_arg = match_expr.expr()?;\n-        let ptr = SyntaxNodePtr::new(match_arg.syntax());\n-        let src_range = TextRange::offset_len(0.into(), TextUnit::of_str(&input.text));\n-        let ranges_map = vec![(src_range, match_arg.syntax().range())];\n-        let res = MacroExpansion {\n-            text,\n-            ranges_map,\n-            ptr,\n-        };\n-        Some(res)\n-    }\n     fn expand_vec(self, input: MacroInput) -> Option<MacroExpansion> {\n         let text = format!(r\"fn dummy() {{ {}; }}\", input.text);\n         let file = SourceFile::parse(&text);"}, {"sha": "f61feaf1b3c124b9997d395ec69fa78f537e77d2", "filename": "crates/ra_ide_api/src/extend_selection.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/21c593593163c22b996f7c8bffe05b9708f5b2d0/crates%2Fra_ide_api%2Fsrc%2Fextend_selection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c593593163c22b996f7c8bffe05b9708f5b2d0/crates%2Fra_ide_api%2Fsrc%2Fextend_selection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fextend_selection.rs?ref=21c593593163c22b996f7c8bffe05b9708f5b2d0", "patch": "@@ -47,11 +47,11 @@ mod tests {\n         let (analysis, frange) = single_file_with_range(\n             \"\n             fn main() {\n-                ctry!(foo(|x| <|>x<|>));\n+                vec![foo(|x| <|>x<|>)];\n             }\n         \",\n         );\n         let r = analysis.extend_selection(frange).unwrap();\n-        assert_eq!(r, TextRange::from_to(51.into(), 56.into()));\n+        assert_eq!(r, TextRange::from_to(50.into(), 55.into()));\n     }\n }"}, {"sha": "0b802ac3dcbb623d6c901520e23341edbb2568b9", "filename": "crates/ra_ide_api/src/snapshots/tests__highlight_query_group_macro.snap", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/21c593593163c22b996f7c8bffe05b9708f5b2d0/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlight_query_group_macro.snap", "raw_url": "https://github.com/rust-lang/rust/raw/21c593593163c22b996f7c8bffe05b9708f5b2d0/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlight_query_group_macro.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlight_query_group_macro.snap?ref=21c593593163c22b996f7c8bffe05b9708f5b2d0", "patch": "@@ -1,8 +1,8 @@\n ---\n-created: \"2019-01-22T14:45:01.017117100+00:00\"\n-creator: insta@0.4.0\n+created: \"2019-02-01T07:52:15.689836752+00:00\"\n+creator: insta@0.5.3\n expression: \"&highlights\"\n-source: \"crates\\\\ra_ide_api\\\\src\\\\syntax_highlighting.rs\"\n+source: crates/ra_ide_api/src/syntax_highlighting.rs\n ---\n [\n     HighlightedRange {"}, {"sha": "ae8923e75f151803b8243b221ca6eb0afedd609d", "filename": "crates/ra_ide_api/src/snapshots/tests__highlights_code_inside_macros.snap", "status": "modified", "additions": 10, "deletions": 38, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/21c593593163c22b996f7c8bffe05b9708f5b2d0/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlights_code_inside_macros.snap", "raw_url": "https://github.com/rust-lang/rust/raw/21c593593163c22b996f7c8bffe05b9708f5b2d0/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlights_code_inside_macros.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsnapshots%2Ftests__highlights_code_inside_macros.snap?ref=21c593593163c22b996f7c8bffe05b9708f5b2d0", "patch": "@@ -1,8 +1,8 @@\n ---\n-created: \"2019-01-22T14:45:01.043047100+00:00\"\n-creator: insta@0.4.0\n+created: \"2019-02-01T07:46:59.130146403+00:00\"\n+creator: insta@0.5.3\n expression: \"&highlights\"\n-source: \"crates\\\\ra_ide_api\\\\src\\\\syntax_highlighting.rs\"\n+source: crates/ra_ide_api/src/syntax_highlighting.rs\n ---\n [\n     HighlightedRange {\n@@ -14,59 +14,31 @@ source: \"crates\\\\ra_ide_api\\\\src\\\\syntax_highlighting.rs\"\n         tag: \"function\"\n     },\n     HighlightedRange {\n-        range: [41; 46),\n+        range: [41; 45),\n         tag: \"macro\"\n     },\n     HighlightedRange {\n-        range: [49; 52),\n+        range: [48; 51),\n         tag: \"keyword\"\n     },\n     HighlightedRange {\n-        range: [57; 59),\n+        range: [56; 58),\n         tag: \"literal\"\n     },\n     HighlightedRange {\n-        range: [82; 86),\n-        tag: \"macro\"\n-    },\n-    HighlightedRange {\n-        range: [89; 92),\n-        tag: \"keyword\"\n-    },\n-    HighlightedRange {\n-        range: [97; 99),\n-        tag: \"literal\"\n-    },\n-    HighlightedRange {\n-        range: [49; 52),\n-        tag: \"keyword\"\n-    },\n-    HighlightedRange {\n-        range: [53; 54),\n-        tag: \"function\"\n-    },\n-    HighlightedRange {\n-        range: [57; 59),\n-        tag: \"literal\"\n-    },\n-    HighlightedRange {\n-        range: [61; 62),\n-        tag: \"text\"\n-    },\n-    HighlightedRange {\n-        range: [89; 92),\n+        range: [48; 51),\n         tag: \"keyword\"\n     },\n     HighlightedRange {\n-        range: [93; 94),\n+        range: [52; 53),\n         tag: \"function\"\n     },\n     HighlightedRange {\n-        range: [97; 99),\n+        range: [56; 58),\n         tag: \"literal\"\n     },\n     HighlightedRange {\n-        range: [101; 102),\n+        range: [60; 61),\n         tag: \"text\"\n     }\n ]"}, {"sha": "6c4391e1e81d4a77903ac152b29572a84ac0828a", "filename": "crates/ra_ide_api/src/syntax_highlighting.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/21c593593163c22b996f7c8bffe05b9708f5b2d0/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21c593593163c22b996f7c8bffe05b9708f5b2d0/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsyntax_highlighting.rs?ref=21c593593163c22b996f7c8bffe05b9708f5b2d0", "patch": "@@ -42,7 +42,6 @@ mod tests {\n         let (analysis, file_id) = single_file(\n             \"\n             fn main() {\n-                ctry!({ let x = 92; x});\n                 vec![{ let x = 92; x}];\n             }\n             \","}]}