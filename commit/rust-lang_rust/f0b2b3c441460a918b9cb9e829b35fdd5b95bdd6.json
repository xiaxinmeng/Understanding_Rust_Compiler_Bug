{"sha": "f0b2b3c441460a918b9cb9e829b35fdd5b95bdd6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwYjJiM2M0NDE0NjBhOTE4YjljYjllODI5YjM1ZmRkNWI5NWJkZDY=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-25T03:37:04Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-05-11T01:14:58Z"}, "message": "rustc: Remove a redundant lifetime parameter from ExprUseVisitor.", "tree": {"sha": "c7bc23c85196a66aa4bb3c90ebeaad0d48acc249", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7bc23c85196a66aa4bb3c90ebeaad0d48acc249"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f0b2b3c441460a918b9cb9e829b35fdd5b95bdd6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f0b2b3c441460a918b9cb9e829b35fdd5b95bdd6", "html_url": "https://github.com/rust-lang/rust/commit/f0b2b3c441460a918b9cb9e829b35fdd5b95bdd6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f0b2b3c441460a918b9cb9e829b35fdd5b95bdd6/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "12e56ea56b0291c99f426521f028978598808d89", "url": "https://api.github.com/repos/rust-lang/rust/commits/12e56ea56b0291c99f426521f028978598808d89", "html_url": "https://github.com/rust-lang/rust/commit/12e56ea56b0291c99f426521f028978598808d89"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "6bb3c380234f46b15edb82f9195ef16fc962b0ba", "filename": "src/librustc/middle/expr_use_visitor.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f0b2b3c441460a918b9cb9e829b35fdd5b95bdd6/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b2b3c441460a918b9cb9e829b35fdd5b95bdd6/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fexpr_use_visitor.rs?ref=f0b2b3c441460a918b9cb9e829b35fdd5b95bdd6", "patch": "@@ -241,9 +241,9 @@ impl OverloadedCallType {\n // mem_categorization, it requires a TYPER, which is a type that\n // supplies types from the tree. After type checking is complete, you\n // can just use the tcx as the typer.\n-pub struct ExprUseVisitor<'d, 'a, 'gcx: 'a+'tcx, 'tcx:'a+'d> {\n+pub struct ExprUseVisitor<'a, 'gcx: 'a+'tcx, 'tcx: 'a> {\n     mc: mc::MemCategorizationContext<'a, 'gcx, 'tcx>,\n-    delegate: &'d mut Delegate<'tcx>,\n+    delegate: &'a mut Delegate<'tcx>,\n }\n \n // If the TYPER results in an error, it's because the type check\n@@ -271,8 +271,8 @@ enum PassArgs {\n     ByRef,\n }\n \n-impl<'d, 'a, 'tcx> ExprUseVisitor<'d, 'a, 'tcx, 'tcx> {\n-    pub fn new(delegate: &'d mut (Delegate<'tcx>+'d),\n+impl<'a, 'tcx> ExprUseVisitor<'a, 'tcx, 'tcx> {\n+    pub fn new(delegate: &'a mut (Delegate<'tcx>+'a),\n                infcx: &'a InferCtxt<'a, 'tcx, 'tcx>) -> Self\n     {\n         ExprUseVisitor {"}, {"sha": "80a4e421e34d4116a4b34ede81e86979e345f185", "filename": "src/librustc_passes/consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f0b2b3c441460a918b9cb9e829b35fdd5b95bdd6/src%2Flibrustc_passes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f0b2b3c441460a918b9cb9e829b35fdd5b95bdd6/src%2Flibrustc_passes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fconsts.rs?ref=f0b2b3c441460a918b9cb9e829b35fdd5b95bdd6", "patch": "@@ -87,8 +87,8 @@ impl<'a, 'tcx> CheckCrateVisitor<'a, 'tcx> {\n         r\n     }\n \n-    fn with_euv<'b, F, R>(&'b mut self, item_id: Option<ast::NodeId>, f: F) -> R where\n-        F: for<'c> FnOnce(&mut euv::ExprUseVisitor<'c, 'c, 'tcx, 'tcx>) -> R,\n+    fn with_euv<F, R>(&mut self, item_id: Option<ast::NodeId>, f: F) -> R where\n+        F: for<'b> FnOnce(&mut euv::ExprUseVisitor<'b, 'tcx, 'tcx>) -> R,\n     {\n         let param_env = match item_id {\n             Some(item_id) => ty::ParameterEnvironment::for_item(self.tcx, item_id),"}]}