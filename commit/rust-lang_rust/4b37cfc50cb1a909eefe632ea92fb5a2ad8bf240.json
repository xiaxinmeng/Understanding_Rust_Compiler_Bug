{"sha": "4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240", "node_id": "C_kwDOAAsO6NoAKDRiMzdjZmM1MGNiMWE5MDllZWZlNjMyZWE5MmZiNWEyYWQ4YmYyNDA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-14T19:47:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-14T19:47:27Z"}, "message": "Rollup merge of #91597 - r00ster91:lessthangreaterthan, r=oli-obk\n\nRecover on invalid operators `<>` and `<=>`\n\nThanks to #89871 for showing me how to do this.\nNext, I think it'd be nice to recover on `<=>` too, like #89871 intended, if this even works.", "tree": {"sha": "3bd8925f6aab1eadd4ad3c8f72cfec8267692b01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3bd8925f6aab1eadd4ad3c8f72cfec8267692b01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhuPTQCRBK7hj4Ov3rIwAA9L0IABZmLdlhIafVwIEK1WrE2YyL\nrap+iIiMcQOaEC97wOvFZcCW4QDZ3ccMbOS8VTaulCTKF8kn9a0Pf/7Zh8yNrylQ\nnkSLStXSnGDASZ4orcKF71KBHPWP0MPHMetG3yFfK86hMdkSDXvSJ91BZHSOP29W\nbT6EsjEXN/VOoK7A4rZUg7RAoD/SQGyKDomISUgaYhKxM72TWlhVoiFUWfrJxS+4\n/4hGUbu943bBJ83NNPhmNeB0dXnWGovO2C96NNteIvicCZtfnxQGrd6xQ7NKuyed\nPDE1se/N2IEDXftRdqQnP49q/aCmCIzt4qNcg1jnOZXPGxH50uHvwOsEj4xTcZI=\n=s/dY\n-----END PGP SIGNATURE-----\n", "payload": "tree 3bd8925f6aab1eadd4ad3c8f72cfec8267692b01\nparent c0e3ddeff3596792a6d32b8aa237f2b12810c9e8\nparent f194c9b26af5d280ab2d0e01fd85e23b3c303771\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639511247 +0100\ncommitter GitHub <noreply@github.com> 1639511247 +0100\n\nRollup merge of #91597 - r00ster91:lessthangreaterthan, r=oli-obk\n\nRecover on invalid operators `<>` and `<=>`\n\nThanks to #89871 for showing me how to do this.\nNext, I think it'd be nice to recover on `<=>` too, like #89871 intended, if this even works.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240", "html_url": "https://github.com/rust-lang/rust/commit/4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c0e3ddeff3596792a6d32b8aa237f2b12810c9e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0e3ddeff3596792a6d32b8aa237f2b12810c9e8", "html_url": "https://github.com/rust-lang/rust/commit/c0e3ddeff3596792a6d32b8aa237f2b12810c9e8"}, {"sha": "f194c9b26af5d280ab2d0e01fd85e23b3c303771", "url": "https://api.github.com/repos/rust-lang/rust/commits/f194c9b26af5d280ab2d0e01fd85e23b3c303771", "html_url": "https://github.com/rust-lang/rust/commit/f194c9b26af5d280ab2d0e01fd85e23b3c303771"}], "stats": {"total": 58, "additions": 57, "deletions": 1}, "files": [{"sha": "c62ebb271f4b039290b0d77c71974c6b6a7f3db9", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240", "patch": "@@ -213,11 +213,11 @@ impl<'a> Parser<'a> {\n                 }\n             }\n \n+            // Look for JS' `===` and `!==` and recover\n             if (op.node == AssocOp::Equal || op.node == AssocOp::NotEqual)\n                 && self.token.kind == token::Eq\n                 && self.prev_token.span.hi() == self.token.span.lo()\n             {\n-                // Look for JS' `===` and `!==` and recover \ud83d\ude07\n                 let sp = op.span.to(self.token.span);\n                 let sugg = match op.node {\n                     AssocOp::Equal => \"==\",\n@@ -235,6 +235,38 @@ impl<'a> Parser<'a> {\n                 self.bump();\n             }\n \n+            // Look for PHP's `<>` and recover\n+            if op.node == AssocOp::Less\n+                && self.token.kind == token::Gt\n+                && self.prev_token.span.hi() == self.token.span.lo()\n+            {\n+                let sp = op.span.to(self.token.span);\n+                self.struct_span_err(sp, \"invalid comparison operator `<>`\")\n+                    .span_suggestion_short(\n+                        sp,\n+                        \"`<>` is not a valid comparison operator, use `!=`\",\n+                        \"!=\".to_string(),\n+                        Applicability::MachineApplicable,\n+                    )\n+                    .emit();\n+                self.bump();\n+            }\n+\n+            // Look for C++'s `<=>` and recover\n+            if op.node == AssocOp::LessEqual\n+                && self.token.kind == token::Gt\n+                && self.prev_token.span.hi() == self.token.span.lo()\n+            {\n+                let sp = op.span.to(self.token.span);\n+                self.struct_span_err(sp, \"invalid comparison operator `<=>`\")\n+                    .span_label(\n+                        sp,\n+                        \"`<=>` is not a valid comparison operator, use `std::cmp::Ordering`\",\n+                    )\n+                    .emit();\n+                self.bump();\n+            }\n+\n             let op = op.node;\n             // Special cases:\n             if op == AssocOp::As {"}, {"sha": "2beed528ff1c1949693fce536a57ec9e8c8e15c5", "filename": "src/test/ui/operator-recovery/less-than-greater-than.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240/src%2Ftest%2Fui%2Foperator-recovery%2Fless-than-greater-than.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240/src%2Ftest%2Fui%2Foperator-recovery%2Fless-than-greater-than.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Foperator-recovery%2Fless-than-greater-than.rs?ref=4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    println!(\"{}\", 1 <> 2);\n+    //~^ERROR invalid comparison operator `<>`\n+}"}, {"sha": "80c921535bd08ee6cd736451dde85ab36f66fef4", "filename": "src/test/ui/operator-recovery/less-than-greater-than.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240/src%2Ftest%2Fui%2Foperator-recovery%2Fless-than-greater-than.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240/src%2Ftest%2Fui%2Foperator-recovery%2Fless-than-greater-than.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Foperator-recovery%2Fless-than-greater-than.stderr?ref=4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240", "patch": "@@ -0,0 +1,8 @@\n+error: invalid comparison operator `<>`\n+  --> $DIR/less-than-greater-than.rs:2:22\n+   |\n+LL |     println!(\"{}\", 1 <> 2);\n+   |                      ^^ help: `<>` is not a valid comparison operator, use `!=`\n+\n+error: aborting due to previous error\n+"}, {"sha": "a65f9389625fc74afd0dce74cc40dc32a52a612e", "filename": "src/test/ui/operator-recovery/spaceship.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240/src%2Ftest%2Fui%2Foperator-recovery%2Fspaceship.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240/src%2Ftest%2Fui%2Foperator-recovery%2Fspaceship.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Foperator-recovery%2Fspaceship.rs?ref=4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240", "patch": "@@ -0,0 +1,4 @@\n+fn main() {\n+    println!(\"{}\", 1 <=> 2);\n+    //~^ERROR invalid comparison operator `<=>`\n+}"}, {"sha": "ed6bd74c9b92edbeaf2797c9ec09c6da74a3ed74", "filename": "src/test/ui/operator-recovery/spaceship.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240/src%2Ftest%2Fui%2Foperator-recovery%2Fspaceship.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240/src%2Ftest%2Fui%2Foperator-recovery%2Fspaceship.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Foperator-recovery%2Fspaceship.stderr?ref=4b37cfc50cb1a909eefe632ea92fb5a2ad8bf240", "patch": "@@ -0,0 +1,8 @@\n+error: invalid comparison operator `<=>`\n+  --> $DIR/spaceship.rs:2:22\n+   |\n+LL |     println!(\"{}\", 1 <=> 2);\n+   |                      ^^^ `<=>` is not a valid comparison operator, use `std::cmp::Ordering`\n+\n+error: aborting due to previous error\n+"}]}