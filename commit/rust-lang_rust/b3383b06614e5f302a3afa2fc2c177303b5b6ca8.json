{"sha": "b3383b06614e5f302a3afa2fc2c177303b5b6ca8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzMzgzYjA2NjE0ZTVmMzAyYTNhZmEyZmMyYzE3NzMwM2I1YjZjYTg=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-05-23T13:22:13Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2021-05-23T19:46:20Z"}, "message": "Send detached files info to server via init params", "tree": {"sha": "ecd109a689bdfd2885e1bd8ebcd181b2e98b4783", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecd109a689bdfd2885e1bd8ebcd181b2e98b4783"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3383b06614e5f302a3afa2fc2c177303b5b6ca8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3383b06614e5f302a3afa2fc2c177303b5b6ca8", "html_url": "https://github.com/rust-lang/rust/commit/b3383b06614e5f302a3afa2fc2c177303b5b6ca8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3383b06614e5f302a3afa2fc2c177303b5b6ca8/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9a5490646f68efdb70f84713d3a418a2b2a0b00", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9a5490646f68efdb70f84713d3a418a2b2a0b00", "html_url": "https://github.com/rust-lang/rust/commit/d9a5490646f68efdb70f84713d3a418a2b2a0b00"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "cb8beb343eca78334ced697c8ae3dca86dfe22e1", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b3383b06614e5f302a3afa2fc2c177303b5b6ca8/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b3383b06614e5f302a3afa2fc2c177303b5b6ca8/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=b3383b06614e5f302a3afa2fc2c177303b5b6ca8", "patch": "@@ -4,6 +4,7 @@ import * as ra from '../src/lsp_ext';\n import * as Is from 'vscode-languageclient/lib/common/utils/is';\n import { assert } from './util';\n import { WorkspaceEdit } from 'vscode';\n+import { Workspace } from './ctx';\n \n export interface Env {\n     [name: string]: string;\n@@ -23,14 +24,19 @@ function renderHoverActions(actions: ra.CommandLinkGroup[]): vscode.MarkdownStri\n     return result;\n }\n \n-export function createClient(serverPath: string, cwd: string | undefined, extraEnv: Env): lc.LanguageClient {\n+export function createClient(serverPath: string, workspace: Workspace, extraEnv: Env): lc.LanguageClient {\n     // '.' Is the fallback if no folder is open\n     // TODO?: Workspace folders support Uri's (eg: file://test.txt).\n     // It might be a good idea to test if the uri points to a file.\n \n     const newEnv = Object.assign({}, process.env);\n     Object.assign(newEnv, extraEnv);\n \n+    let cwd = undefined;\n+    if (workspace.kind == \"Workspace Folder\") {\n+        cwd = workspace.folder.fsPath;\n+    };\n+\n     const run: lc.Executable = {\n         command: serverPath,\n         options: { cwd, env: newEnv },\n@@ -43,9 +49,14 @@ export function createClient(serverPath: string, cwd: string | undefined, extraE\n         'Rust Analyzer Language Server Trace',\n     );\n \n+    let initializationOptions = vscode.workspace.getConfiguration(\"rust-analyzer\");\n+    if (workspace.kind == \"Detached files\") {\n+        initializationOptions = { \"detachedFiles\": workspace.files.map(file => file.uri.fsPath), ...initializationOptions };\n+    }\n+\n     const clientOptions: lc.LanguageClientOptions = {\n         documentSelector: [{ scheme: 'file', language: 'rust' }],\n-        initializationOptions: vscode.workspace.getConfiguration(\"rust-analyzer\"),\n+        initializationOptions,\n         diagnosticCollectionName: \"rustc\",\n         traceOutputChannel,\n         middleware: {"}, {"sha": "dbfb9c6a1dda0a3a6905038e1385cb24a3bab42a", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b3383b06614e5f302a3afa2fc2c177303b5b6ca8/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b3383b06614e5f302a3afa2fc2c177303b5b6ca8/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=b3383b06614e5f302a3afa2fc2c177303b5b6ca8", "patch": "@@ -7,6 +7,16 @@ import { createClient } from './client';\n import { isRustEditor, RustEditor } from './util';\n import { ServerStatusParams } from './lsp_ext';\n \n+export type Workspace =\n+    {\n+        kind: 'Workspace Folder',\n+        folder: vscode.Uri,\n+    }\n+    | {\n+        kind: 'Detached files',\n+        files: vscode.TextDocument[],\n+    };\n+\n export class Ctx {\n     private constructor(\n         readonly config: Config,\n@@ -22,9 +32,9 @@ export class Ctx {\n         config: Config,\n         extCtx: vscode.ExtensionContext,\n         serverPath: string,\n-        cwd?: string,\n+        workspace: Workspace,\n     ): Promise<Ctx> {\n-        const client = createClient(serverPath, cwd, config.serverExtraEnv);\n+        const client = createClient(serverPath, workspace, config.serverExtraEnv);\n \n         const statusBar = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n         extCtx.subscriptions.push(statusBar);"}, {"sha": "1a4af548d3aa74048e5acf1ed05888284810f250", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b3383b06614e5f302a3afa2fc2c177303b5b6ca8/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b3383b06614e5f302a3afa2fc2c177303b5b6ca8/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=b3383b06614e5f302a3afa2fc2c177303b5b6ca8", "patch": "@@ -49,7 +49,7 @@ async function tryActivate(context: vscode.ExtensionContext) {\n     if (workspaceFolder === undefined) {\n         let rustDocuments = vscode.workspace.textDocuments.filter(document => isRustDocument(document));\n         if (rustDocuments.length > 0) {\n-            ctx = await Ctx.create(config, context, serverPath);\n+            ctx = await Ctx.create(config, context, serverPath, { kind: 'Detached files', files: rustDocuments });\n         } else {\n             throw new Error(\"no rust files are opened\");\n         }\n@@ -58,7 +58,7 @@ async function tryActivate(context: vscode.ExtensionContext) {\n         // registers its `onDidChangeDocument` handler before us.\n         //\n         // This a horribly, horribly wrong way to deal with this problem.\n-        ctx = await Ctx.create(config, context, serverPath, workspaceFolder.uri.fsPath);\n+        ctx = await Ctx.create(config, context, serverPath, { kind: \"Workspace Folder\", folder: workspaceFolder.uri });\n         ctx.pushCleanup(activateTaskProvider(workspaceFolder, ctx.config));\n     }\n     await initCommonContext(context, ctx);"}]}