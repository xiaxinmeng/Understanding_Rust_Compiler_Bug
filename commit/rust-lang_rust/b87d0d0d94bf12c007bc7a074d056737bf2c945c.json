{"sha": "b87d0d0d94bf12c007bc7a074d056737bf2c945c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI4N2QwZDBkOTRiZjEyYzAwN2JjN2EwNzRkMDU2NzM3YmYyYzk0NWM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-09-12T10:44:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-09-12T10:44:57Z"}, "message": "Rollup merge of #88711 - Mark-Simulacrum:fix-dfs-bug, r=jackh726\n\nRework DepthFirstSearch API\n\nThis expands the API to be more flexible, allowing for more visitation patterns\non graphs. This will be useful to avoid extra datasets (and allocations) in\ncases where the expanded DFS API is sufficient.\n\nThis also fixes a bug with the previous DFS constructor, which left the start\nnode not marked as visited (even though it was immediately returned).\n\nCommit written by ```@nikomatsakis``` originally, cherry picked from several commits in work on never type stabilization, but stands alone.", "tree": {"sha": "10fe8fe4084a2e5052d8acf682a1d64cd1275c50", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10fe8fe4084a2e5052d8acf682a1d64cd1275c50"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b87d0d0d94bf12c007bc7a074d056737bf2c945c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhPdoqCRBK7hj4Ov3rIwAA7zEIALLJSBtYrK283mpYug/2atkr\niBAboRdHfauH7KD9MunbwwbpAHwN82DMRCaTcWtO3AnCjgrj9K2g2X/uynoH72xb\nqIValLbhGQtavLFqacm4CO0fhnQ4aSsD+UyzFiQcEocJ/WhWxbgKVUIfDs183ZCf\nuT79c0UsPSwq3hdhOIGkkOVB4JSrjPswTGHb+pVIhzbBXACrpeUStgkgbTFREU+t\nYhnl+oiFnm2ei83FoNWl+Q8GqUjNkQdFDQfzR/wJNYGh6c6Y7URIiEa1caPIOITs\nO+j44UNbOqWveQNs8nk6g7I4OExDjHR9n9XylWglrn6mQTysE+jH5yGAxzepqDM=\n=TkL/\n-----END PGP SIGNATURE-----\n", "payload": "tree 10fe8fe4084a2e5052d8acf682a1d64cd1275c50\nparent f5ac5cadd3d426cbf9a67dfe1c21a7d404cd2423\nparent c9d46eb2244d49215e0a1ccf8bd4b7e700b252e7\nauthor Manish Goregaokar <manishsmail@gmail.com> 1631443497 -0700\ncommitter GitHub <noreply@github.com> 1631443497 -0700\n\nRollup merge of #88711 - Mark-Simulacrum:fix-dfs-bug, r=jackh726\n\nRework DepthFirstSearch API\n\nThis expands the API to be more flexible, allowing for more visitation patterns\non graphs. This will be useful to avoid extra datasets (and allocations) in\ncases where the expanded DFS API is sufficient.\n\nThis also fixes a bug with the previous DFS constructor, which left the start\nnode not marked as visited (even though it was immediately returned).\n\nCommit written by ```@nikomatsakis``` originally, cherry picked from several commits in work on never type stabilization, but stands alone.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b87d0d0d94bf12c007bc7a074d056737bf2c945c", "html_url": "https://github.com/rust-lang/rust/commit/b87d0d0d94bf12c007bc7a074d056737bf2c945c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b87d0d0d94bf12c007bc7a074d056737bf2c945c/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5ac5cadd3d426cbf9a67dfe1c21a7d404cd2423", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5ac5cadd3d426cbf9a67dfe1c21a7d404cd2423", "html_url": "https://github.com/rust-lang/rust/commit/f5ac5cadd3d426cbf9a67dfe1c21a7d404cd2423"}, {"sha": "c9d46eb2244d49215e0a1ccf8bd4b7e700b252e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9d46eb2244d49215e0a1ccf8bd4b7e700b252e7", "html_url": "https://github.com/rust-lang/rust/commit/c9d46eb2244d49215e0a1ccf8bd4b7e700b252e7"}], "stats": {"total": 72, "additions": 69, "deletions": 3}, "files": [{"sha": "a9db3497b23908a50548e9a24ab74f189feed37d", "filename": "compiler/rustc_data_structures/src/graph/iterate/mod.rs", "status": "modified", "additions": 52, "deletions": 2, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/b87d0d0d94bf12c007bc7a074d056737bf2c945c/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fiterate%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b87d0d0d94bf12c007bc7a074d056737bf2c945c/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fiterate%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fiterate%2Fmod.rs?ref=b87d0d0d94bf12c007bc7a074d056737bf2c945c", "patch": "@@ -83,8 +83,58 @@ impl<G> DepthFirstSearch<'graph, G>\n where\n     G: ?Sized + DirectedGraph + WithNumNodes + WithSuccessors,\n {\n-    pub fn new(graph: &'graph G, start_node: G::Node) -> Self {\n-        Self { graph, stack: vec![start_node], visited: BitSet::new_empty(graph.num_nodes()) }\n+    pub fn new(graph: &'graph G) -> Self {\n+        Self { graph, stack: vec![], visited: BitSet::new_empty(graph.num_nodes()) }\n+    }\n+\n+    /// Version of `push_start_node` that is convenient for chained\n+    /// use.\n+    pub fn with_start_node(mut self, start_node: G::Node) -> Self {\n+        self.push_start_node(start_node);\n+        self\n+    }\n+\n+    /// Pushes another start node onto the stack. If the node\n+    /// has not already been visited, then you will be able to\n+    /// walk its successors (and so forth) after the current\n+    /// contents of the stack are drained. If multiple start nodes\n+    /// are added into the walk, then their mutual successors\n+    /// will all be walked. You can use this method once the\n+    /// iterator has been completely drained to add additional\n+    /// start nodes.\n+    pub fn push_start_node(&mut self, start_node: G::Node) {\n+        if self.visited.insert(start_node) {\n+            self.stack.push(start_node);\n+        }\n+    }\n+\n+    /// Searches all nodes reachable from the current start nodes.\n+    /// This is equivalent to just invoke `next` repeatedly until\n+    /// you get a `None` result.\n+    pub fn complete_search(&mut self) {\n+        while let Some(_) = self.next() {}\n+    }\n+\n+    /// Returns true if node has been visited thus far.\n+    /// A node is considered \"visited\" once it is pushed\n+    /// onto the internal stack; it may not yet have been yielded\n+    /// from the iterator. This method is best used after\n+    /// the iterator is completely drained.\n+    pub fn visited(&self, node: G::Node) -> bool {\n+        self.visited.contains(node)\n+    }\n+}\n+\n+impl<G> std::fmt::Debug for DepthFirstSearch<'_, G>\n+where\n+    G: ?Sized + DirectedGraph + WithNumNodes + WithSuccessors,\n+{\n+    fn fmt(&self, fmt: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n+        let mut f = fmt.debug_set();\n+        for n in self.visited.iter() {\n+            f.entry(&n);\n+        }\n+        f.finish()\n     }\n }\n "}, {"sha": "c498c289337f1a1eebe77955943ab88812ae2b9c", "filename": "compiler/rustc_data_structures/src/graph/iterate/tests.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b87d0d0d94bf12c007bc7a074d056737bf2c945c/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fiterate%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b87d0d0d94bf12c007bc7a074d056737bf2c945c/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fiterate%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fiterate%2Ftests.rs?ref=b87d0d0d94bf12c007bc7a074d056737bf2c945c", "patch": "@@ -20,3 +20,19 @@ fn is_cyclic() {\n     assert!(!is_cyclic(&diamond_acyclic));\n     assert!(is_cyclic(&diamond_cyclic));\n }\n+\n+#[test]\n+fn dfs() {\n+    let graph = TestGraph::new(0, &[(0, 1), (0, 2), (1, 3), (2, 3), (3, 0)]);\n+\n+    let result: Vec<usize> = DepthFirstSearch::new(&graph).with_start_node(0).collect();\n+    assert_eq!(result, vec![0, 2, 3, 1]);\n+}\n+\n+#[test]\n+fn dfs_debug() {\n+    let graph = TestGraph::new(0, &[(0, 1), (0, 2), (1, 3), (2, 3), (3, 0)]);\n+    let mut dfs = DepthFirstSearch::new(&graph).with_start_node(0);\n+    dfs.complete_search();\n+    assert_eq!(format!(\"{{0, 1, 2, 3}}\"), format!(\"{:?}\", dfs));\n+}"}, {"sha": "3560df6e5e204548dc2966179e26052d90298bfb", "filename": "compiler/rustc_data_structures/src/graph/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b87d0d0d94bf12c007bc7a074d056737bf2c945c/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b87d0d0d94bf12c007bc7a074d056737bf2c945c/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_data_structures%2Fsrc%2Fgraph%2Fmod.rs?ref=b87d0d0d94bf12c007bc7a074d056737bf2c945c", "patch": "@@ -32,7 +32,7 @@ where\n     where\n         Self: WithNumNodes,\n     {\n-        iterate::DepthFirstSearch::new(self, from)\n+        iterate::DepthFirstSearch::new(self).with_start_node(from)\n     }\n }\n "}]}