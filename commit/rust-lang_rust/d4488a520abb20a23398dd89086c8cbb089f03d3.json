{"sha": "d4488a520abb20a23398dd89086c8cbb089f03d3", "node_id": "C_kwDOAAsO6NoAKGQ0NDg4YTUyMGFiYjIwYTIzMzk4ZGQ4OTA4NmM4Y2JiMDg5ZjAzZDM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-01T01:07:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-01T01:07:25Z"}, "message": "Auto merge of #9039 - Serial-ATA:dev-dogfood, r=giraffate\n\nAdd `cargo dev dogfood`\n\nchangelog: Add `cargo dev dogfood`\n\nPart of #5394", "tree": {"sha": "e0754f3d3aaa66433ccc055a9c1f481fba94a806", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0754f3d3aaa66433ccc055a9c1f481fba94a806"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d4488a520abb20a23398dd89086c8cbb089f03d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d4488a520abb20a23398dd89086c8cbb089f03d3", "html_url": "https://github.com/rust-lang/rust/commit/d4488a520abb20a23398dd89086c8cbb089f03d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d4488a520abb20a23398dd89086c8cbb089f03d3/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "23db5ce261cb8cf933d7b7988699cc1a28cee311", "url": "https://api.github.com/repos/rust-lang/rust/commits/23db5ce261cb8cf933d7b7988699cc1a28cee311", "html_url": "https://github.com/rust-lang/rust/commit/23db5ce261cb8cf933d7b7988699cc1a28cee311"}, {"sha": "131770d22b982998c179c1407111cf24ad12c809", "url": "https://api.github.com/repos/rust-lang/rust/commits/131770d22b982998c179c1407111cf24ad12c809", "html_url": "https://github.com/rust-lang/rust/commit/131770d22b982998c179c1407111cf24ad12c809"}], "stats": {"total": 72, "additions": 66, "deletions": 6}, "files": [{"sha": "6cb6615c3d8a2c2a9292716319fd263a188758a4", "filename": "book/src/development/basics.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d4488a520abb20a23398dd89086c8cbb089f03d3/book%2Fsrc%2Fdevelopment%2Fbasics.md", "raw_url": "https://github.com/rust-lang/rust/raw/d4488a520abb20a23398dd89086c8cbb089f03d3/book%2Fsrc%2Fdevelopment%2Fbasics.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/book%2Fsrc%2Fdevelopment%2Fbasics.md?ref=d4488a520abb20a23398dd89086c8cbb089f03d3", "patch": "@@ -59,7 +59,7 @@ cargo uitest\n # only run UI tests starting with `test_`\n TESTNAME=\"test_\" cargo uitest\n # only run dogfood tests\n-cargo test --test dogfood\n+cargo dev dogfood\n ```\n \n If the output of a [UI test] differs from the expected output, you can update\n@@ -97,6 +97,8 @@ cargo dev deprecate\n cargo dev setup git-hook\n # (experimental) Setup Clippy to work with IntelliJ-Rust\n cargo dev setup intellij\n+# runs the `dogfood` tests\n+cargo dev dogfood\n ```\n \n More about intellij command usage and reasons"}, {"sha": "b69e9f649ec78c1c26f85d9b93f64b635b9ae9d8", "filename": "clippy_dev/src/dogfood.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/d4488a520abb20a23398dd89086c8cbb089f03d3/clippy_dev%2Fsrc%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4488a520abb20a23398dd89086c8cbb089f03d3/clippy_dev%2Fsrc%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fdogfood.rs?ref=d4488a520abb20a23398dd89086c8cbb089f03d3", "patch": "@@ -0,0 +1,33 @@\n+use crate::clippy_project_root;\n+use std::process::Command;\n+\n+/// # Panics\n+///\n+/// Panics if unable to run the dogfood test\n+pub fn dogfood(fix: bool, allow_dirty: bool, allow_staged: bool) {\n+    let mut cmd = Command::new(\"cargo\");\n+\n+    cmd.current_dir(clippy_project_root())\n+        .args([\"test\", \"--test\", \"dogfood\"])\n+        .args([\"--features\", \"internal\"])\n+        .args([\"--\", \"dogfood_clippy\"]);\n+\n+    let mut dogfood_args = Vec::new();\n+    if fix {\n+        dogfood_args.push(\"--fix\");\n+    }\n+\n+    if allow_dirty {\n+        dogfood_args.push(\"--allow-dirty\");\n+    }\n+\n+    if allow_staged {\n+        dogfood_args.push(\"--allow-staged\");\n+    }\n+\n+    cmd.env(\"__CLIPPY_DOGFOOD_ARGS\", dogfood_args.join(\" \"));\n+\n+    let output = cmd.output().expect(\"failed to run command\");\n+\n+    println!(\"{}\", String::from_utf8_lossy(&output.stdout));\n+}"}, {"sha": "82574a8e64b0ae028eb64769914837fd8c148553", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/d4488a520abb20a23398dd89086c8cbb089f03d3/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4488a520abb20a23398dd89086c8cbb089f03d3/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=d4488a520abb20a23398dd89086c8cbb089f03d3", "patch": "@@ -11,6 +11,7 @@ extern crate rustc_lexer;\n use std::path::PathBuf;\n \n pub mod bless;\n+pub mod dogfood;\n pub mod fmt;\n pub mod lint;\n pub mod new_lint;"}, {"sha": "a29ba2d0c85e34c4bf62da43a655381955dab95d", "filename": "clippy_dev/src/main.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/d4488a520abb20a23398dd89086c8cbb089f03d3/clippy_dev%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4488a520abb20a23398dd89086c8cbb089f03d3/clippy_dev%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Fmain.rs?ref=d4488a520abb20a23398dd89086c8cbb089f03d3", "patch": "@@ -3,7 +3,7 @@\n #![warn(rust_2018_idioms, unused_lifetimes)]\n \n use clap::{Arg, ArgAction, ArgMatches, Command, PossibleValue};\n-use clippy_dev::{bless, fmt, lint, new_lint, serve, setup, update_lints};\n+use clippy_dev::{bless, dogfood, fmt, lint, new_lint, serve, setup, update_lints};\n use indoc::indoc;\n \n fn main() {\n@@ -13,6 +13,13 @@ fn main() {\n         Some((\"bless\", matches)) => {\n             bless::bless(matches.contains_id(\"ignore-timestamp\"));\n         },\n+        Some((\"dogfood\", matches)) => {\n+            dogfood::dogfood(\n+                matches.contains_id(\"fix\"),\n+                matches.contains_id(\"allow-dirty\"),\n+                matches.contains_id(\"allow-staged\"),\n+            );\n+        },\n         Some((\"fmt\", matches)) => {\n             fmt::run(matches.contains_id(\"check\"), matches.contains_id(\"verbose\"));\n         },\n@@ -104,6 +111,17 @@ fn get_clap_config() -> ArgMatches {\n                     .long(\"ignore-timestamp\")\n                     .help(\"Include files updated before clippy was built\"),\n             ),\n+            Command::new(\"dogfood\").about(\"Runs the dogfood test\").args([\n+                Arg::new(\"fix\").long(\"fix\").help(\"Apply the suggestions when possible\"),\n+                Arg::new(\"allow-dirty\")\n+                    .long(\"allow-dirty\")\n+                    .help(\"Fix code even if the working directory has changes\")\n+                    .requires(\"fix\"),\n+                Arg::new(\"allow-staged\")\n+                    .long(\"allow-staged\")\n+                    .help(\"Fix code even if the working directory has staged changes\")\n+                    .requires(\"fix\"),\n+            ]),\n             Command::new(\"fmt\")\n                 .about(\"Run rustfmt on all projects and tests\")\n                 .args(["}, {"sha": "5697e8680cd6f86779a303edfd5b63d940e8da14", "filename": "tests/dogfood.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d4488a520abb20a23398dd89086c8cbb089f03d3/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d4488a520abb20a23398dd89086c8cbb089f03d3/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=d4488a520abb20a23398dd89086c8cbb089f03d3", "patch": "@@ -74,10 +74,16 @@ fn run_clippy_for_package(project: &str, args: &[&str]) {\n         .env(\"CARGO_INCREMENTAL\", \"0\")\n         .arg(\"clippy\")\n         .arg(\"--all-targets\")\n-        .arg(\"--all-features\")\n-        .arg(\"--\")\n-        .args(args)\n-        .arg(\"-Cdebuginfo=0\"); // disable debuginfo to generate less data in the target dir\n+        .arg(\"--all-features\");\n+\n+    if let Ok(dogfood_args) = std::env::var(\"__CLIPPY_DOGFOOD_ARGS\") {\n+        for arg in dogfood_args.split_whitespace() {\n+            command.arg(arg);\n+        }\n+    }\n+\n+    command.arg(\"--\").args(args);\n+    command.arg(\"-Cdebuginfo=0\"); // disable debuginfo to generate less data in the target dir\n \n     if cfg!(feature = \"internal\") {\n         // internal lints only exist if we build with the internal feature"}]}