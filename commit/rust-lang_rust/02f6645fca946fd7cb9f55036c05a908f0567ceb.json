{"sha": "02f6645fca946fd7cb9f55036c05a908f0567ceb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyZjY2NDVmY2E5NDZmZDdjYjlmNTUwMzZjMDVhOTA4ZjA1NjdjZWI=", "commit": {"author": {"name": "Eric Holk", "email": "eholk@mozilla.com", "date": "2011-06-28T18:34:20Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-06-28T23:12:33Z"}, "message": "Moved win32_require to the kernel.", "tree": {"sha": "88d71ff1fd10f3f8312f2c8a1041d7eeaf0251e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88d71ff1fd10f3f8312f2c8a1041d7eeaf0251e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02f6645fca946fd7cb9f55036c05a908f0567ceb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02f6645fca946fd7cb9f55036c05a908f0567ceb", "html_url": "https://github.com/rust-lang/rust/commit/02f6645fca946fd7cb9f55036c05a908f0567ceb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02f6645fca946fd7cb9f55036c05a908f0567ceb/comments", "author": null, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f84987a48c3625670cd62321f0e3dcb5c0e8768", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f84987a48c3625670cd62321f0e3dcb5c0e8768", "html_url": "https://github.com/rust-lang/rust/commit/2f84987a48c3625670cd62321f0e3dcb5c0e8768"}], "stats": {"total": 67, "additions": 34, "deletions": 33}, "files": [{"sha": "c2a56d993d8c7e02901bdf5d2eeffd365469ba48", "filename": "src/rt/rust.cpp", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/02f6645fca946fd7cb9f55036c05a908f0567ceb/src%2Frt%2Frust.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/02f6645fca946fd7cb9f55036c05a908f0567ceb/src%2Frt%2Frust.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust.cpp?ref=02f6645fca946fd7cb9f55036c05a908f0567ceb", "patch": "@@ -23,16 +23,16 @@ command_line_args : public kernel_owned<command_line_args>\n #if defined(__WIN32__)\n         LPCWSTR cmdline = GetCommandLineW();\n         LPWSTR *wargv = CommandLineToArgvW(cmdline, &argc);\n-        task->dom->win32_require(\"CommandLineToArgvW\", wargv != NULL);\n+        kernel->win32_require(\"CommandLineToArgvW\", wargv != NULL);\n         argv = (char **) kernel->malloc(sizeof(char*) * argc);\n         for (int i = 0; i < argc; ++i) {\n             int n_chars = WideCharToMultiByte(CP_UTF8, 0, wargv[i], -1,\n                                               NULL, 0, NULL, NULL);\n-            task->dom->win32_require(\"WideCharToMultiByte(0)\", n_chars != 0);\n+            kernel->win32_require(\"WideCharToMultiByte(0)\", n_chars != 0);\n             argv[i] = (char *) kernel->malloc(n_chars);\n             n_chars = WideCharToMultiByte(CP_UTF8, 0, wargv[i], -1,\n                                           argv[i], n_chars, NULL, NULL);\n-            task->dom->win32_require(\"WideCharToMultiByte(1)\", n_chars != 0);\n+            kernel->win32_require(\"WideCharToMultiByte(1)\", n_chars != 0);\n         }\n         LocalFree(wargv);\n #endif"}, {"sha": "ac3c3a82a4065be89db91f71bfb4b7f9850f7b35", "filename": "src/rt/rust_dom.cpp", "status": "modified", "additions": 0, "deletions": 19, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/02f6645fca946fd7cb9f55036c05a908f0567ceb/src%2Frt%2Frust_dom.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/02f6645fca946fd7cb9f55036c05a908f0567ceb/src%2Frt%2Frust_dom.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_dom.cpp?ref=02f6645fca946fd7cb9f55036c05a908f0567ceb", "patch": "@@ -74,25 +74,6 @@ rust_dom::fail() {\n     rval = 1;\n }\n \n-#ifdef __WIN32__\n-void\n-rust_dom::win32_require(LPCTSTR fn, BOOL ok) {\n-    if (!ok) {\n-        LPTSTR buf;\n-        DWORD err = GetLastError();\n-        FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER |\n-                      FORMAT_MESSAGE_FROM_SYSTEM |\n-                      FORMAT_MESSAGE_IGNORE_INSERTS,\n-                      NULL, err,\n-                      MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n-                      (LPTSTR) &buf, 0, NULL );\n-        DLOG_ERR(this, dom, \"%s failed with error %ld: %s\", fn, err, buf);\n-        LocalFree((HLOCAL)buf);\n-        I(this, ok);\n-    }\n-}\n-#endif\n-\n size_t\n rust_dom::number_of_live_tasks() {\n     return running_tasks.length() + blocked_tasks.length();"}, {"sha": "04a42b5fb01f9ab1793216a500a7eda782cf79b2", "filename": "src/rt/rust_dom.h", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/02f6645fca946fd7cb9f55036c05a908f0567ceb/src%2Frt%2Frust_dom.h", "raw_url": "https://github.com/rust-lang/rust/raw/02f6645fca946fd7cb9f55036c05a908f0567ceb/src%2Frt%2Frust_dom.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_dom.h?ref=02f6645fca946fd7cb9f55036c05a908f0567ceb", "patch": "@@ -75,10 +75,6 @@ struct rust_dom : public kernel_owned<rust_dom>, rc_base<rust_dom>\n \n     void drain_incoming_message_queue(bool process);\n \n-#ifdef __WIN32__\n-    void win32_require(LPCTSTR fn, BOOL ok);\n-#endif\n-\n     rust_crate_cache *get_cache();\n     size_t number_of_live_tasks();\n "}, {"sha": "ee709fb191fe26a8feb2b613df81d393ac089b00", "filename": "src/rt/rust_kernel.cpp", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/02f6645fca946fd7cb9f55036c05a908f0567ceb/src%2Frt%2Frust_kernel.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/02f6645fca946fd7cb9f55036c05a908f0567ceb/src%2Frt%2Frust_kernel.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.cpp?ref=02f6645fca946fd7cb9f55036c05a908f0567ceb", "patch": "@@ -245,6 +245,25 @@ int rust_kernel::start_task_threads(int num_threads)\n     return dom->rval;\n }\n \n+#ifdef __WIN32__\n+void\n+rust_kernel::win32_require(LPCTSTR fn, BOOL ok) {\n+    if (!ok) {\n+        LPTSTR buf;\n+        DWORD err = GetLastError();\n+        FormatMessage(FORMAT_MESSAGE_ALLOCATE_BUFFER |\n+                      FORMAT_MESSAGE_FROM_SYSTEM |\n+                      FORMAT_MESSAGE_IGNORE_INSERTS,\n+                      NULL, err,\n+                      MAKELANGID(LANG_NEUTRAL, SUBLANG_DEFAULT),\n+                      (LPTSTR) &buf, 0, NULL );\n+        DLOG_ERR(dom, dom, \"%s failed with error %ld: %s\", fn, err, buf);\n+        LocalFree((HLOCAL)buf);\n+        I(dom, ok);\n+    }\n+}\n+#endif\n+\n rust_task_thread::rust_task_thread(int id, rust_kernel *owner)\n     : id(id), owner(owner)\n {"}, {"sha": "b3befab28d2acce30913c9e84fdb52bc0d031697", "filename": "src/rt/rust_kernel.h", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/02f6645fca946fd7cb9f55036c05a908f0567ceb/src%2Frt%2Frust_kernel.h", "raw_url": "https://github.com/rust-lang/rust/raw/02f6645fca946fd7cb9f55036c05a908f0567ceb/src%2Frt%2Frust_kernel.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_kernel.h?ref=02f6645fca946fd7cb9f55036c05a908f0567ceb", "patch": "@@ -110,10 +110,14 @@ class rust_kernel : public rust_thread {\n     void *malloc(size_t size);\n     void free(void *mem);\n \n-    // TODO: this should go away\n+    // FIXME: this should go away\n     inline rust_dom *get_domain() const { return dom; }\n \n     int start_task_threads(int num_threads);\n+\n+#ifdef __WIN32__\n+    void win32_require(LPCTSTR fn, BOOL ok);\n+#endif\n };\n \n class rust_task_thread : public rust_thread {"}, {"sha": "2d732a235916955036420df061a386c3bdd236fc", "filename": "src/rt/rust_timer.cpp", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/02f6645fca946fd7cb9f55036c05a908f0567ceb/src%2Frt%2Frust_timer.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/02f6645fca946fd7cb9f55036c05a908f0567ceb/src%2Frt%2Frust_timer.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_timer.cpp?ref=02f6645fca946fd7cb9f55036c05a908f0567ceb", "patch": "@@ -57,7 +57,7 @@ rust_timer::rust_timer(rust_dom *dom) :\n     DLOG(dom, timer, \"creating timer for domain 0x%\" PRIxPTR, dom);\n #if defined(__WIN32__)\n     thread = CreateThread(NULL, 0, timer_loop, this, 0, NULL);\n-    dom->win32_require(\"CreateThread\", thread != NULL);\n+    dom->kernel->win32_require(\"CreateThread\", thread != NULL);\n     if (RUNNING_ON_VALGRIND)\n         Sleep(10);\n #else\n@@ -70,8 +70,9 @@ rust_timer::rust_timer(rust_dom *dom) :\n rust_timer::~rust_timer() {\n     exit_flag = 1;\n #if defined(__WIN32__)\n-    dom->win32_require(\"WaitForSingleObject\",\n-            WaitForSingleObject(thread, INFINITE) == WAIT_OBJECT_0);\n+    dom->kernel->win32_require(\"WaitForSingleObject\",\n+                               WaitForSingleObject(thread, INFINITE) == \n+                               WAIT_OBJECT_0);\n #else\n     pthread_join(thread, NULL);\n #endif"}, {"sha": "bd888c108f134c79aa5df42d8bb9eeef80ab532a", "filename": "src/rt/rust_util.h", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/02f6645fca946fd7cb9f55036c05a908f0567ceb/src%2Frt%2Frust_util.h", "raw_url": "https://github.com/rust-lang/rust/raw/02f6645fca946fd7cb9f55036c05a908f0567ceb/src%2Frt%2Frust_util.h", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_util.h?ref=02f6645fca946fd7cb9f55036c05a908f0567ceb", "patch": "@@ -134,15 +134,15 @@ isaac_init(rust_dom *dom, randctx *rctx)\n #ifdef __WIN32__\n         {\n             HCRYPTPROV hProv;\n-            dom->win32_require\n+            dom->kernel->win32_require\n                 (_T(\"CryptAcquireContext\"),\n                  CryptAcquireContext(&hProv, NULL, NULL, PROV_RSA_FULL,\n                                      CRYPT_VERIFYCONTEXT|CRYPT_SILENT));\n-            dom->win32_require\n+            dom->kernel->win32_require\n                 (_T(\"CryptGenRandom\"),\n                  CryptGenRandom(hProv, sizeof(rctx->randrsl),\n                                 (BYTE*)(&rctx->randrsl)));\n-            dom->win32_require\n+            dom->kernel->win32_require\n                 (_T(\"CryptReleaseContext\"),\n                  CryptReleaseContext(hProv, 0));\n         }"}]}