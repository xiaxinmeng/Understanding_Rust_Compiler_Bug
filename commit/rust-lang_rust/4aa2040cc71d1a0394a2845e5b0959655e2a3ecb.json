{"sha": "4aa2040cc71d1a0394a2845e5b0959655e2a3ecb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhYTIwNDBjYzcxZDFhMDM5NGEyODQ1ZTViMDk1OTY1NWUyYTNlY2I=", "commit": {"author": {"name": "areski", "email": "areski@gmail.com", "date": "2014-11-13T16:58:03Z"}, "committer": {"name": "areski", "email": "areski@gmail.com", "date": "2014-11-13T16:58:03Z"}, "message": "convert 1 line match to 2 lines for readability", "tree": {"sha": "7965f9bfa38cb446709387c10ec53864a98d7e82", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7965f9bfa38cb446709387c10ec53864a98d7e82"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4aa2040cc71d1a0394a2845e5b0959655e2a3ecb", "comment_count": 13, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4aa2040cc71d1a0394a2845e5b0959655e2a3ecb", "html_url": "https://github.com/rust-lang/rust/commit/4aa2040cc71d1a0394a2845e5b0959655e2a3ecb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4aa2040cc71d1a0394a2845e5b0959655e2a3ecb/comments", "author": {"login": "areski", "id": 53455, "node_id": "MDQ6VXNlcjUzNDU1", "avatar_url": "https://avatars.githubusercontent.com/u/53455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/areski", "html_url": "https://github.com/areski", "followers_url": "https://api.github.com/users/areski/followers", "following_url": "https://api.github.com/users/areski/following{/other_user}", "gists_url": "https://api.github.com/users/areski/gists{/gist_id}", "starred_url": "https://api.github.com/users/areski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/areski/subscriptions", "organizations_url": "https://api.github.com/users/areski/orgs", "repos_url": "https://api.github.com/users/areski/repos", "events_url": "https://api.github.com/users/areski/events{/privacy}", "received_events_url": "https://api.github.com/users/areski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "areski", "id": 53455, "node_id": "MDQ6VXNlcjUzNDU1", "avatar_url": "https://avatars.githubusercontent.com/u/53455?v=4", "gravatar_id": "", "url": "https://api.github.com/users/areski", "html_url": "https://github.com/areski", "followers_url": "https://api.github.com/users/areski/followers", "following_url": "https://api.github.com/users/areski/following{/other_user}", "gists_url": "https://api.github.com/users/areski/gists{/gist_id}", "starred_url": "https://api.github.com/users/areski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/areski/subscriptions", "organizations_url": "https://api.github.com/users/areski/orgs", "repos_url": "https://api.github.com/users/areski/repos", "events_url": "https://api.github.com/users/areski/events{/privacy}", "received_events_url": "https://api.github.com/users/areski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82f383839c7cc0ce66d7cfbd400182b535029f0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/82f383839c7cc0ce66d7cfbd400182b535029f0f", "html_url": "https://github.com/rust-lang/rust/commit/82f383839c7cc0ce66d7cfbd400182b535029f0f"}], "stats": {"total": 25, "additions": 20, "deletions": 5}, "files": [{"sha": "467ea998586af0edf4f70a8a2b8fc614b5a7577a", "filename": "src/libcore/option.rs", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/4aa2040cc71d1a0394a2845e5b0959655e2a3ecb/src%2Flibcore%2Foption.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4aa2040cc71d1a0394a2845e5b0959655e2a3ecb/src%2Flibcore%2Foption.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Foption.rs?ref=4aa2040cc71d1a0394a2845e5b0959655e2a3ecb", "patch": "@@ -235,7 +235,10 @@ impl<T> Option<T> {\n     #[inline]\n     #[stable]\n     pub fn as_ref<'r>(&'r self) -> Option<&'r T> {\n-        match *self { Some(ref x) => Some(x), None => None }\n+        match *self {\n+            Some(ref x) => Some(x),\n+            None => None\n+        }\n     }\n \n     /// Convert from `Option<T>` to `Option<&mut T>`\n@@ -253,7 +256,10 @@ impl<T> Option<T> {\n     #[inline]\n     #[unstable = \"waiting for mut conventions\"]\n     pub fn as_mut<'r>(&'r mut self) -> Option<&'r mut T> {\n-        match *self { Some(ref mut x) => Some(x), None => None }\n+        match *self {\n+            Some(ref mut x) => Some(x),\n+            None => None\n+        }\n     }\n \n     /// Convert from `Option<T>` to `&mut [T]` (without copying)\n@@ -401,7 +407,10 @@ impl<T> Option<T> {\n     #[inline]\n     #[unstable = \"waiting for unboxed closures\"]\n     pub fn map<U>(self, f: |T| -> U) -> Option<U> {\n-        match self { Some(x) => Some(f(x)), None => None }\n+        match self {\n+            Some(x) => Some(f(x)),\n+            None => None\n+        }\n     }\n \n     /// Applies a function to the contained value or returns a default.\n@@ -418,7 +427,10 @@ impl<T> Option<T> {\n     #[inline]\n     #[unstable = \"waiting for unboxed closures\"]\n     pub fn map_or<U>(self, def: U, f: |T| -> U) -> U {\n-        match self { None => def, Some(t) => f(t) }\n+        match self {\n+            Some(t) => f(t),\n+            None => def\n+        }\n     }\n \n     /// Applies a function to the contained value or computes a default.\n@@ -437,7 +449,10 @@ impl<T> Option<T> {\n     #[inline]\n     #[unstable = \"waiting for unboxed closures\"]\n     pub fn map_or_else<U>(self, def: || -> U, f: |T| -> U) -> U {\n-        match self { None => def(), Some(t) => f(t) }\n+        match self {\n+            Some(t) => f(t),\n+            None => def()\n+        }\n     }\n \n     /// Transforms the `Option<T>` into a `Result<T, E>`, mapping `Some(v)` to"}]}