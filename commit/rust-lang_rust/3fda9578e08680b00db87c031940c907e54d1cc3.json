{"sha": "3fda9578e08680b00db87c031940c907e54d1cc3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNmZGE5NTc4ZTA4NjgwYjAwZGI4N2MwMzE5NDBjOTA3ZTU0ZDFjYzM=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-16T02:38:24Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-09-16T02:38:24Z"}, "message": "Remove out-of-date comments.\n\nThese refer to code that no longer exists.", "tree": {"sha": "038da2eeacc010bcd09ab3a32b9d5d51e3a138c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/038da2eeacc010bcd09ab3a32b9d5d51e3a138c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3fda9578e08680b00db87c031940c907e54d1cc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3fda9578e08680b00db87c031940c907e54d1cc3", "html_url": "https://github.com/rust-lang/rust/commit/3fda9578e08680b00db87c031940c907e54d1cc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3fda9578e08680b00db87c031940c907e54d1cc3/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1936e44c13753cdd060c3a33c4a1cc27443d52fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/1936e44c13753cdd060c3a33c4a1cc27443d52fc", "html_url": "https://github.com/rust-lang/rust/commit/1936e44c13753cdd060c3a33c4a1cc27443d52fc"}], "stats": {"total": 16, "additions": 0, "deletions": 16}, "files": [{"sha": "731d82b7cfd721d24fd21e73150e193896d8f3bf", "filename": "src/librustc_data_structures/obligation_forest/mod.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3fda9578e08680b00db87c031940c907e54d1cc3/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3fda9578e08680b00db87c031940c907e54d1cc3/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Fobligation_forest%2Fmod.rs?ref=3fda9578e08680b00db87c031940c907e54d1cc3", "patch": "@@ -61,14 +61,6 @@\n //!   results. This is used by the `FulfillmentContext` to decide when it\n //!   has reached a steady state.\n //!\n-//! #### Snapshots\n-//!\n-//! The `ObligationForest` supports a limited form of snapshots; see\n-//! `start_snapshot`, `commit_snapshot`, and `rollback_snapshot`. In\n-//! particular, you can use a snapshot to roll back new root\n-//! obligations. However, it is an error to attempt to\n-//! `process_obligations` during a snapshot.\n-//!\n //! ### Implementation details\n //!\n //! For the most part, comments specific to the implementation are in the\n@@ -151,10 +143,6 @@ pub struct ObligationForest<O: ForestObligation> {\n     /// At the end of processing, those nodes will be removed by a\n     /// call to `compress`.\n     ///\n-    /// At all times we maintain the invariant that every node appears\n-    /// at a higher index than its parent. This is needed by the\n-    /// backtrace iterator (which uses `split_at`).\n-    ///\n     /// Ideally, this would be an `IndexVec<NodeIndex, Node<O>>`. But that is\n     /// slower, because this vector is accessed so often that the\n     /// `u32`-to-`usize` conversions required for accesses are significant.\n@@ -288,8 +276,6 @@ impl<O: ForestObligation> ObligationForest<O> {\n     }\n \n     /// Registers an obligation.\n-    ///\n-    /// This CAN be done in a snapshot\n     pub fn register_obligation(&mut self, obligation: O) {\n         // Ignore errors here - there is no guarantee of success.\n         let _ = self.register_obligation_at(obligation, None);\n@@ -355,8 +341,6 @@ impl<O: ForestObligation> ObligationForest<O> {\n     }\n \n     /// Converts all remaining obligations to the given error.\n-    ///\n-    /// This cannot be done during a snapshot.\n     pub fn to_errors<E: Clone>(&mut self, error: E) -> Vec<Error<O, E>> {\n         let mut errors = vec![];\n         for i in 0..self.nodes.len() {"}]}