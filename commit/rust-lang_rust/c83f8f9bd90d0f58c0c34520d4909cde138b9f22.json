{"sha": "c83f8f9bd90d0f58c0c34520d4909cde138b9f22", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4M2Y4ZjliZDkwZDBmNThjMGMzNDUyMGQ0OTA5Y2RlMTM4YjlmMjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-04T14:44:45Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-07-04T14:44:45Z"}, "message": "Auto merge of #26770 - arielb1:str-mut-idx, r=eddyb\n\nr? @eddyb\r\n\r\nThis doesn't seem to make any code valid because the `IndexMut` impls are missing.", "tree": {"sha": "c438ba390e1bb17e66ca97e70575479397c6838e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c438ba390e1bb17e66ca97e70575479397c6838e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c83f8f9bd90d0f58c0c34520d4909cde138b9f22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c83f8f9bd90d0f58c0c34520d4909cde138b9f22", "html_url": "https://github.com/rust-lang/rust/commit/c83f8f9bd90d0f58c0c34520d4909cde138b9f22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c83f8f9bd90d0f58c0c34520d4909cde138b9f22/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "638ffecbd72bfa6e3f2eb4a74b3e7650cc5d2206", "url": "https://api.github.com/repos/rust-lang/rust/commits/638ffecbd72bfa6e3f2eb4a74b3e7650cc5d2206", "html_url": "https://github.com/rust-lang/rust/commit/638ffecbd72bfa6e3f2eb4a74b3e7650cc5d2206"}, {"sha": "90fcf261f2b9c174cf800a5ac63ebf23d022fe37", "url": "https://api.github.com/repos/rust-lang/rust/commits/90fcf261f2b9c174cf800a5ac63ebf23d022fe37", "html_url": "https://github.com/rust-lang/rust/commit/90fcf261f2b9c174cf800a5ac63ebf23d022fe37"}], "stats": {"total": 68, "additions": 40, "deletions": 28}, "files": [{"sha": "eb504d03209f60216eb5ddcaf9be322aae916dd6", "filename": "src/librustc/diagnostics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c83f8f9bd90d0f58c0c34520d4909cde138b9f22/src%2Flibrustc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83f8f9bd90d0f58c0c34520d4909cde138b9f22/src%2Flibrustc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdiagnostics.rs?ref=c83f8f9bd90d0f58c0c34520d4909cde138b9f22", "patch": "@@ -1205,8 +1205,8 @@ register_diagnostics! {\n     E0017,\n     E0022,\n     E0038,\n-    E0134,\n-    E0135,\n+//  E0134,\n+//  E0135,\n     E0136,\n     E0138,\n     E0139,"}, {"sha": "1ee557eb8cce330512a434eaa0d99fe9d09e5e4b", "filename": "src/librustc/middle/effect.rs", "status": "modified", "additions": 0, "deletions": 26, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c83f8f9bd90d0f58c0c34520d4909cde138b9f22/src%2Flibrustc%2Fmiddle%2Feffect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83f8f9bd90d0f58c0c34520d4909cde138b9f22/src%2Flibrustc%2Fmiddle%2Feffect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Feffect.rs?ref=c83f8f9bd90d0f58c0c34520d4909cde138b9f22", "patch": "@@ -59,26 +59,6 @@ impl<'a, 'tcx> EffectCheckVisitor<'a, 'tcx> {\n             UnsafeFn => {}\n         }\n     }\n-\n-    fn check_str_index(&mut self, e: &ast::Expr) {\n-        let base_type = match e.node {\n-            ast::ExprIndex(ref base, _) => self.tcx.node_id_to_type(base.id),\n-            _ => return\n-        };\n-        debug!(\"effect: checking index with base type {:?}\",\n-                 base_type);\n-        match base_type.sty {\n-            ty::TyBox(ty) | ty::TyRef(_, ty::mt{ty, ..}) => if ty::TyStr == ty.sty {\n-                span_err!(self.tcx.sess, e.span, E0134,\n-                          \"modification of string types is not allowed\");\n-            },\n-            ty::TyStr => {\n-                span_err!(self.tcx.sess, e.span, E0135,\n-                          \"modification of string types is not allowed\");\n-            }\n-            _ => {}\n-        }\n-    }\n }\n \n impl<'a, 'tcx, 'v> Visitor<'v> for EffectCheckVisitor<'a, 'tcx> {\n@@ -164,12 +144,6 @@ impl<'a, 'tcx, 'v> Visitor<'v> for EffectCheckVisitor<'a, 'tcx> {\n                     self.require_unsafe(expr.span, \"dereference of raw pointer\")\n                 }\n             }\n-            ast::ExprAssign(ref base, _) | ast::ExprAssignOp(_, ref base, _) => {\n-                self.check_str_index(&**base);\n-            }\n-            ast::ExprAddrOf(ast::MutMutable, ref base) => {\n-                self.check_str_index(&**base);\n-            }\n             ast::ExprInlineAsm(..) => {\n                 self.require_unsafe(expr.span, \"use of inline assembly\");\n             }"}, {"sha": "aa05d7d5c54d7fabb81ef21796178eeb542d4d22", "filename": "src/test/compile-fail/str-mut-idx-2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c83f8f9bd90d0f58c0c34520d4909cde138b9f22/src%2Ftest%2Fcompile-fail%2Fstr-mut-idx-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83f8f9bd90d0f58c0c34520d4909cde138b9f22/src%2Ftest%2Fcompile-fail%2Fstr-mut-idx-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstr-mut-idx-2.rs?ref=c83f8f9bd90d0f58c0c34520d4909cde138b9f22", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn mutate(mut s: &mut str) {\n+    let _s: &mut str = &mut s[1..2];\n+    //~^ ERROR cannot borrow immutable indexed content as mutable\n+}\n+\n+pub fn main() {}"}, {"sha": "88e90c8244d87b5549badb6777e288cab7d1b5e0", "filename": "src/test/compile-fail/str-mut-idx.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c83f8f9bd90d0f58c0c34520d4909cde138b9f22/src%2Ftest%2Fcompile-fail%2Fstr-mut-idx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c83f8f9bd90d0f58c0c34520d4909cde138b9f22/src%2Ftest%2Fcompile-fail%2Fstr-mut-idx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fstr-mut-idx.rs?ref=c83f8f9bd90d0f58c0c34520d4909cde138b9f22", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn bot<T>() -> T { loop {} }\n+\n+fn mutate(s: &mut str) {\n+    s[1..2] = bot();\n+    //~^ ERROR `core::marker::Sized` is not implemented for the type `str`\n+    //~^^ ERROR `core::marker::Sized` is not implemented for the type `str`\n+    s[1usize] = bot();\n+    //~^ ERROR `core::ops::Index<usize>` is not implemented for the type `str`\n+    //~^^ ERROR `core::ops::Index<usize>` is not implemented for the type `str`\n+}\n+\n+pub fn main() {}"}]}