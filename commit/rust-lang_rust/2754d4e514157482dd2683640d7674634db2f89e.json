{"sha": "2754d4e514157482dd2683640d7674634db2f89e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3NTRkNGU1MTQxNTc0ODJkZDI2ODM2NDBkNzY3NDYzNGRiMmY4OWU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-09T12:51:42Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-06-09T12:51:42Z"}, "message": "Add safety comments", "tree": {"sha": "7641c66638b47f8589fad4dd7e5b09c4248655f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7641c66638b47f8589fad4dd7e5b09c4248655f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2754d4e514157482dd2683640d7674634db2f89e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2754d4e514157482dd2683640d7674634db2f89e", "html_url": "https://github.com/rust-lang/rust/commit/2754d4e514157482dd2683640d7674634db2f89e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2754d4e514157482dd2683640d7674634db2f89e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e1aa45b64d29ef03511c4fbd359ee42c6bb342ba", "url": "https://api.github.com/repos/rust-lang/rust/commits/e1aa45b64d29ef03511c4fbd359ee42c6bb342ba", "html_url": "https://github.com/rust-lang/rust/commit/e1aa45b64d29ef03511c4fbd359ee42c6bb342ba"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "30092a02cc31e84b2b9e3504942b233f362d2ab1", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2754d4e514157482dd2683640d7674634db2f89e/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2754d4e514157482dd2683640d7674634db2f89e/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=2754d4e514157482dd2683640d7674634db2f89e", "patch": "@@ -123,6 +123,9 @@ mod boxed_resolver {\n                 resolver: None,\n                 _pin: PhantomPinned,\n             });\n+            // SAFETY: `make_resolver` takes a resolver arena with an arbitrary lifetime and\n+            // returns a resolver with the same lifetime as the arena. We ensure that the arena\n+            // outlives the resolver in the drop impl and elsewhere so these transmutes are sound.\n             unsafe {\n                 let (crate_, resolver) = make_resolver(\n                     std::mem::transmute::<&Session, &Session>(&boxed_resolver.session),\n@@ -137,6 +140,7 @@ mod boxed_resolver {\n         }\n \n         pub fn access<F: for<'a> FnOnce(&mut Resolver<'a>) -> R, R>(&mut self, f: F) -> R {\n+            // SAFETY: The resolver doesn't need to be pinned.\n             let mut resolver = unsafe {\n                 self.0.as_mut().map_unchecked_mut(|boxed_resolver| &mut boxed_resolver.resolver)\n             };\n@@ -147,6 +151,7 @@ mod boxed_resolver {\n             match Rc::try_unwrap(resolver) {\n                 Ok(resolver) => {\n                     let mut resolver = resolver.into_inner();\n+                    // SAFETY: The resolver doesn't need to be pinned.\n                     let mut resolver = unsafe {\n                         resolver\n                             .0"}]}