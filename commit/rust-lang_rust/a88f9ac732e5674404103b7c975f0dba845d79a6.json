{"sha": "a88f9ac732e5674404103b7c975f0dba845d79a6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4OGY5YWM3MzJlNTY3NDQwNDEwM2I3Yzk3NWYwZGJhODQ1ZDc5YTY=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-11-22T16:54:52Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-29T20:09:11Z"}, "message": "Macros can now also be stmts and items.", "tree": {"sha": "b93e0ed4d11ea1fc759ad0c19b1c3bfdbbc161ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b93e0ed4d11ea1fc759ad0c19b1c3bfdbbc161ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a88f9ac732e5674404103b7c975f0dba845d79a6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a88f9ac732e5674404103b7c975f0dba845d79a6", "html_url": "https://github.com/rust-lang/rust/commit/a88f9ac732e5674404103b7c975f0dba845d79a6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a88f9ac732e5674404103b7c975f0dba845d79a6/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6a8ffc625aec7865280e3dfc2d3bd822f072142", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6a8ffc625aec7865280e3dfc2d3bd822f072142", "html_url": "https://github.com/rust-lang/rust/commit/f6a8ffc625aec7865280e3dfc2d3bd822f072142"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "0c8d1c5a1409bdd1409ea3127144aeff274c8288", "filename": "doc/rust.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a88f9ac732e5674404103b7c975f0dba845d79a6/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/a88f9ac732e5674404103b7c975f0dba845d79a6/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=a88f9ac732e5674404103b7c975f0dba845d79a6", "patch": "@@ -494,7 +494,7 @@ transcriber : '(' transcriber * ')' | '[' transcriber * ']'\n \n User-defined syntax extensions are called \"macros\", and they can be defined\n with the `macro_rules!` syntax extension. User-defined macros can currently\n-only be invoked in expression position.\n+be invoked as expressions, statements, or items.\n \n (A `sep_token` is any token other than `*` and `+`. A `non_special_token` is\n any token other than a delimiter or `$`.)\n@@ -510,7 +510,7 @@ For parsing reasons, delimiters must be balanced, but they are otherwise not spe\n \n In the matcher, `$` _name_ `:` _designator_ matches the nonterminal in the\n Rust syntax named by _designator_. Valid designators are `item`, `block`,\n-`stmt`, `pat`, `expr`, `ty` (type), `ident`, `path`, `matchers` (lhs of the `=>` in macro rules), \n+`stmt`, `pat`, `expr`, `ty` (type), `ident`, `path`, `matchers` (lhs of the `=>` in macro rules),\n `tt` (rhs of the `=>` in macro rules). In the transcriber, the designator is already known, and so only\n the name of a matched nonterminal comes after the dollar sign.\n \n@@ -2196,7 +2196,7 @@ Records and structures can also be pattern-matched and their fields bound to var\n When matching fields of a record,\n the fields being matched are specified first,\n then a placeholder (`_`) represents the remaining fields.\n- \n+\n ~~~~\n # type options = {choose: bool, size: ~str};\n # type player = {player: ~str, stats: (), options: options};\n@@ -2726,7 +2726,7 @@ The kinds are:\n     structural types containing only other sendable types.\n `Owned`\n   : Types of this kind do not contain any borrowed pointers;\n-    this can be a useful guarantee for code that breaks borrowing assumptions using [`unsafe` operations](#unsafe-functions).    \n+    this can be a useful guarantee for code that breaks borrowing assumptions using [`unsafe` operations](#unsafe-functions).\n `Copy`\n   : This kind includes all types that can be copied. All types with\n     sendable kind are copyable, as are managed boxes, managed closures,"}]}