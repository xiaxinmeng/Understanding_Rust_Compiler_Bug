{"sha": "0043d7e9c7f27af95cbf299d5b92ce28ba9945ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwNDNkN2U5YzdmMjdhZjk1Y2JmMjk5ZDViOTJjZTI4YmE5OTQ1YWI=", "commit": {"author": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-23T12:28:57Z"}, "committer": {"name": "bors[bot]", "email": "bors[bot]@users.noreply.github.com", "date": "2018-10-23T12:28:57Z"}, "message": "Merge #151\n\n151: Add LspError to explicity return errors from LSP handlers r=matklad a=kjeremy\n\nFixes #145\n\nCo-authored-by: Jeremy A. Kolb <jkolb@ara.com>", "tree": {"sha": "a30760b472d442e4a20c74745fb95502c5a0d823", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a30760b472d442e4a20c74745fb95502c5a0d823"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0043d7e9c7f27af95cbf299d5b92ce28ba9945ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0043d7e9c7f27af95cbf299d5b92ce28ba9945ab", "html_url": "https://github.com/rust-lang/rust/commit/0043d7e9c7f27af95cbf299d5b92ce28ba9945ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0043d7e9c7f27af95cbf299d5b92ce28ba9945ab/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "parents": [{"sha": "e514084f281840f117bd92fdb177d81e3cc95ba2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e514084f281840f117bd92fdb177d81e3cc95ba2", "html_url": "https://github.com/rust-lang/rust/commit/e514084f281840f117bd92fdb177d81e3cc95ba2"}, {"sha": "6453b29cb571d5c54bac427842ba8a9dd6874861", "url": "https://api.github.com/repos/rust-lang/rust/commits/6453b29cb571d5c54bac427842ba8a9dd6874861", "html_url": "https://github.com/rust-lang/rust/commit/6453b29cb571d5c54bac427842ba8a9dd6874861"}], "stats": {"total": 29, "additions": 25, "deletions": 4}, "files": [{"sha": "619f652024c451506a76852f3c11a378ba17c7da", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0043d7e9c7f27af95cbf299d5b92ce28ba9945ab/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/0043d7e9c7f27af95cbf299d5b92ce28ba9945ab/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=0043d7e9c7f27af95cbf299d5b92ce28ba9945ab", "patch": "@@ -654,6 +654,7 @@ dependencies = [\n  \"crossbeam-channel 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"drop_bomb 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"failure 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n+ \"failure_derive 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"flexi_logger 0.9.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"gen_lsp_server 0.1.0\",\n  \"im 12.2.0 (registry+https://github.com/rust-lang/crates.io-index)\","}, {"sha": "e4fc40a3a58a6071b2655b79febf4dbf5d199c23", "filename": "crates/ra_lsp_server/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0043d7e9c7f27af95cbf299d5b92ce28ba9945ab/crates%2Fra_lsp_server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0043d7e9c7f27af95cbf299d5b92ce28ba9945ab/crates%2Fra_lsp_server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2FCargo.toml?ref=0043d7e9c7f27af95cbf299d5b92ce28ba9945ab", "patch": "@@ -8,6 +8,7 @@ authors = [\"Aleksey Kladov <aleksey.kladov@gmail.com>\"]\n rayon = \"1.0.2\"\n relative-path = \"0.3.7\"\n failure = \"0.1.2\"\n+failure_derive = \"0.1.2\"\n serde_json = \"1.0.24\"\n serde = \"1.0.71\"\n serde_derive = \"1.0.71\""}, {"sha": "ce77b2a33dbe5032598cf5cea18f20fd2978ae56", "filename": "crates/ra_lsp_server/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0043d7e9c7f27af95cbf299d5b92ce28ba9945ab/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0043d7e9c7f27af95cbf299d5b92ce28ba9945ab/crates%2Fra_lsp_server%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Flib.rs?ref=0043d7e9c7f27af95cbf299d5b92ce28ba9945ab", "patch": "@@ -12,6 +12,8 @@ extern crate rayon;\n extern crate log;\n extern crate cargo_metadata;\n extern crate drop_bomb;\n+#[macro_use]\n+extern crate failure_derive;\n extern crate im;\n extern crate relative_path;\n extern crate rustc_hash;\n@@ -34,4 +36,4 @@ pub mod thread_watcher;\n mod vfs;\n \n pub type Result<T> = ::std::result::Result<T, ::failure::Error>;\n-pub use crate::{caps::server_capabilities, main_loop::main_loop};\n+pub use crate::{caps::server_capabilities, main_loop::main_loop, main_loop::LspError};\n\\ No newline at end of file"}, {"sha": "b27b5d007950d82e83dcd8850e3a4c5a5c564d10", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0043d7e9c7f27af95cbf299d5b92ce28ba9945ab/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0043d7e9c7f27af95cbf299d5b92ce28ba9945ab/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=0043d7e9c7f27af95cbf299d5b92ce28ba9945ab", "patch": "@@ -7,6 +7,7 @@ use languageserver_types::{\n     InsertTextFormat, Location, Position, SymbolInformation, TextDocumentIdentifier, TextEdit,\n     RenameParams, WorkspaceEdit, PrepareRenameResponse\n };\n+use gen_lsp_server::ErrorCode;\n use ra_analysis::{FileId, FoldKind, Query, RunnableKind};\n use ra_syntax::text_utils::contains_offset_nonstrict;\n use serde_json::to_value;\n@@ -16,7 +17,7 @@ use crate::{\n     project_model::TargetKind,\n     req::{self, Decoration},\n     server_world::ServerWorld,\n-    Result,\n+    Result, LspError\n };\n \n pub fn handle_syntax_tree(\n@@ -476,7 +477,7 @@ pub fn handle_rename(\n     let offset = params.position.conv_with(&line_index);\n \n     if params.new_name.is_empty() {\n-        return Ok(None);\n+        return Err(LspError::new(ErrorCode::InvalidParams as i32, \"New Name cannot be empty\".into()).into());\n     }\n \n     let refs = world.analysis().find_all_refs(file_id, offset)?;"}, {"sha": "e681062ca09ceb0940c39ae58a55f908e309d533", "filename": "crates/ra_lsp_server/src/main_loop/mod.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0043d7e9c7f27af95cbf299d5b92ce28ba9945ab/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0043d7e9c7f27af95cbf299d5b92ce28ba9945ab/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fmod.rs?ref=0043d7e9c7f27af95cbf299d5b92ce28ba9945ab", "patch": "@@ -23,6 +23,19 @@ use crate::{\n     Result,\n };\n \n+#[derive(Debug, Fail)]\n+#[fail(display = \"Language Server request failed with {}. ({})\", code, message)]\n+pub struct LspError {\n+    pub code: i32,\n+    pub message: String,\n+}\n+\n+impl LspError {\n+    pub fn new(code: i32, message: String) -> LspError {\n+        LspError {code, message}\n+    }\n+}\n+\n #[derive(Debug)]\n enum Task {\n     Respond(RawResponse),\n@@ -361,7 +374,10 @@ impl<'a> PoolDispatcher<'a> {\n                     let resp = match f(world, params) {\n                         Ok(resp) => RawResponse::ok::<R>(id, &resp),\n                         Err(e) => {\n-                            RawResponse::err(id, ErrorCode::InternalError as i32, e.to_string())\n+                            match e.downcast::<LspError>() {\n+                                Ok(lsp_error) => RawResponse::err(id, lsp_error.code, lsp_error.message),\n+                                Err(e) => RawResponse::err(id, ErrorCode::InternalError as i32, e.to_string())\n+                            }\n                         }\n                     };\n                     let task = Task::Respond(resp);"}]}