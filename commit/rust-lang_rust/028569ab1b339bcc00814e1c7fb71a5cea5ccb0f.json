{"sha": "028569ab1b339bcc00814e1c7fb71a5cea5ccb0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyODU2OWFiMWIzMzliY2MwMDgxNGUxYzdmYjcxYTVjZWE1Y2NiMGY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-17T13:31:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-07-17T13:31:37Z"}, "message": "Auto merge of #43266 - feadoor:issue-43253-exclusive-range-warning, r=nikomatsakis\n\nFix `range_covered_by_constructor` for exclusive ranges.\n\nThis resolves #43253", "tree": {"sha": "72562c4e1284490d4ec66fc03669c8cfba239767", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72562c4e1284490d4ec66fc03669c8cfba239767"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/028569ab1b339bcc00814e1c7fb71a5cea5ccb0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/028569ab1b339bcc00814e1c7fb71a5cea5ccb0f", "html_url": "https://github.com/rust-lang/rust/commit/028569ab1b339bcc00814e1c7fb71a5cea5ccb0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/028569ab1b339bcc00814e1c7fb71a5cea5ccb0f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5803f99bd4c53c3f469df26513ffa2e058094c53", "url": "https://api.github.com/repos/rust-lang/rust/commits/5803f99bd4c53c3f469df26513ffa2e058094c53", "html_url": "https://github.com/rust-lang/rust/commit/5803f99bd4c53c3f469df26513ffa2e058094c53"}, {"sha": "1b3c339560ceb8cc6680ba5e7dc051c9e1698a15", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b3c339560ceb8cc6680ba5e7dc051c9e1698a15", "html_url": "https://github.com/rust-lang/rust/commit/1b3c339560ceb8cc6680ba5e7dc051c9e1698a15"}], "stats": {"total": 85, "additions": 78, "deletions": 7}, "files": [{"sha": "bae44c0047e2e3f80c798a2d4b254073c780958b", "filename": "src/librustc_const_eval/_match.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/028569ab1b339bcc00814e1c7fb71a5cea5ccb0f/src%2Flibrustc_const_eval%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/028569ab1b339bcc00814e1c7fb71a5cea5ccb0f/src%2Flibrustc_const_eval%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_const_eval%2F_match.rs?ref=028569ab1b339bcc00814e1c7fb71a5cea5ccb0f", "patch": "@@ -835,7 +835,7 @@ fn slice_pat_covered_by_constructor(_tcx: TyCtxt, _span: Span,\n     Ok(true)\n }\n \n-fn range_covered_by_constructor(tcx: TyCtxt, span: Span,\n+fn constructor_covered_by_range(tcx: TyCtxt, span: Span,\n                                 ctor: &Constructor,\n                                 from: &ConstVal, to: &ConstVal,\n                                 end: RangeEnd)\n@@ -845,14 +845,14 @@ fn range_covered_by_constructor(tcx: TyCtxt, span: Span,\n     match *ctor {\n         ConstantValue(ref value) => {\n             let to = cmp_to(value)?;\n-            let end = (to != Ordering::Greater) ||\n-                      (end == RangeEnd::Excluded && to == Ordering::Equal);\n+            let end = (to == Ordering::Less) ||\n+                      (end == RangeEnd::Included && to == Ordering::Equal);\n             Ok(cmp_from(value)? && end)\n         },\n         ConstantRange(ref from, ref to, RangeEnd::Included) => {\n             let to = cmp_to(to)?;\n-            let end = (to != Ordering::Greater) ||\n-                      (end == RangeEnd::Excluded && to == Ordering::Equal);\n+            let end = (to == Ordering::Less) ||\n+                      (end == RangeEnd::Included && to == Ordering::Equal);\n             Ok(cmp_from(from)? && end)\n         },\n         ConstantRange(ref from, ref to, RangeEnd::Excluded) => {\n@@ -933,7 +933,7 @@ fn specialize<'p, 'a: 'p, 'tcx: 'a>(\n                         \"unexpected const-val {:?} with ctor {:?}\", value, constructor)\n                 },\n                 _ => {\n-                    match range_covered_by_constructor(\n+                    match constructor_covered_by_range(\n                         cx.tcx, pat.span, constructor, value, value, RangeEnd::Included\n                             ) {\n                         Ok(true) => Some(vec![]),\n@@ -945,7 +945,7 @@ fn specialize<'p, 'a: 'p, 'tcx: 'a>(\n         }\n \n         PatternKind::Range { ref lo, ref hi, ref end } => {\n-            match range_covered_by_constructor(\n+            match constructor_covered_by_range(\n                 cx.tcx, pat.span, constructor, lo, hi, end.clone()\n             ) {\n                 Ok(true) => Some(vec![]),"}, {"sha": "c77fa74f6e0e5509e52a65826748830f214f8c73", "filename": "src/test/ui/check_match/issue-43253.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/028569ab1b339bcc00814e1c7fb71a5cea5ccb0f/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.rs", "raw_url": "https://github.com/rust-lang/rust/raw/028569ab1b339bcc00814e1c7fb71a5cea5ccb0f/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.rs?ref=028569ab1b339bcc00814e1c7fb71a5cea5ccb0f", "patch": "@@ -0,0 +1,51 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(exclusive_range_pattern)]\n+\n+fn main() {\n+    // These cases should generate no warning.\n+    match 10 {\n+        1..10 => {},\n+        10 => {},\n+        _ => {},\n+    }\n+\n+    match 10 {\n+        1..10 => {},\n+        9...10 => {},\n+        _ => {},\n+    }\n+\n+    match 10 {\n+        1..10 => {},\n+        10...10 => {},\n+        _ => {},\n+    }\n+\n+    // These cases should generate an \"unreachable pattern\" warning.\n+    match 10 {\n+        1..10 => {},\n+        9 => {},\n+        _ => {},\n+    }\n+\n+    match 10 {\n+        1..10 => {},\n+        8...9 => {},\n+        _ => {},\n+    }\n+\n+    match 10 {\n+        1..10 => {},\n+        9...9 => {},\n+        _ => {},\n+    }\n+}\n\\ No newline at end of file"}, {"sha": "0d4a2ecf512dedbc972b9670e5f4fbbf09808cd7", "filename": "src/test/ui/check_match/issue-43253.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/028569ab1b339bcc00814e1c7fb71a5cea5ccb0f/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/028569ab1b339bcc00814e1c7fb71a5cea5ccb0f/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck_match%2Fissue-43253.stderr?ref=028569ab1b339bcc00814e1c7fb71a5cea5ccb0f", "patch": "@@ -0,0 +1,20 @@\n+warning: unreachable pattern\n+  --> $DIR/issue-43253.rs:36:9\n+   |\n+36 |         9 => {},\n+   |         ^\n+   |\n+   = note: #[warn(unreachable_patterns)] on by default\n+\n+warning: unreachable pattern\n+  --> $DIR/issue-43253.rs:42:9\n+   |\n+42 |         8...9 => {},\n+   |         ^^^^^\n+\n+warning: unreachable pattern\n+  --> $DIR/issue-43253.rs:48:9\n+   |\n+48 |         9...9 => {},\n+   |         ^^^^^\n+"}]}