{"sha": "e71a722fa69974102e220444523b824da7eaa522", "node_id": "C_kwDOAAsO6NoAKGU3MWE3MjJmYTY5OTc0MTAyZTIyMDQ0NDUyM2I4MjRkYTdlYWE1MjI", "commit": {"author": {"name": "TheOddGarlic", "email": "umutinanerdogan@pm.me", "date": "2022-08-30T17:38:10Z"}, "committer": {"name": "mejrs", "email": "", "date": "2022-12-17T18:08:25Z"}, "message": "Migrate multiple mut borrows diagnostic", "tree": {"sha": "16891bc022d8a79938d7cef7a8f11e0375a73b70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/16891bc022d8a79938d7cef7a8f11e0375a73b70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e71a722fa69974102e220444523b824da7eaa522", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e71a722fa69974102e220444523b824da7eaa522", "html_url": "https://github.com/rust-lang/rust/commit/e71a722fa69974102e220444523b824da7eaa522", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e71a722fa69974102e220444523b824da7eaa522/comments", "author": {"login": "AsyaTheAbove", "id": 40492846, "node_id": "MDQ6VXNlcjQwNDkyODQ2", "avatar_url": "https://avatars.githubusercontent.com/u/40492846?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AsyaTheAbove", "html_url": "https://github.com/AsyaTheAbove", "followers_url": "https://api.github.com/users/AsyaTheAbove/followers", "following_url": "https://api.github.com/users/AsyaTheAbove/following{/other_user}", "gists_url": "https://api.github.com/users/AsyaTheAbove/gists{/gist_id}", "starred_url": "https://api.github.com/users/AsyaTheAbove/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AsyaTheAbove/subscriptions", "organizations_url": "https://api.github.com/users/AsyaTheAbove/orgs", "repos_url": "https://api.github.com/users/AsyaTheAbove/repos", "events_url": "https://api.github.com/users/AsyaTheAbove/events{/privacy}", "received_events_url": "https://api.github.com/users/AsyaTheAbove/received_events", "type": "User", "site_admin": false}, "committer": {}, "parents": [{"sha": "3a9a06311d8d2445d47f087ef68f702b643bc4df", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a9a06311d8d2445d47f087ef68f702b643bc4df", "html_url": "https://github.com/rust-lang/rust/commit/3a9a06311d8d2445d47f087ef68f702b643bc4df"}], "stats": {"total": 54, "additions": 47, "deletions": 7}, "files": [{"sha": "94e061a2af6a8bd4dcaaf9ac139366efb2979f82", "filename": "compiler/rustc_error_messages/locales/en-US/mir_build.ftl", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/e71a722fa69974102e220444523b824da7eaa522/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmir_build.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/e71a722fa69974102e220444523b824da7eaa522/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmir_build.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmir_build.ftl?ref=e71a722fa69974102e220444523b824da7eaa522", "patch": "@@ -293,3 +293,9 @@ mir_build_borrow_of_moved_value = borrow of moved value\n     .occurs_because_label = move occurs because `{$name}` has type `{$ty}` which does not implement the `Copy` trait\n     .value_borrowed_label = value borrowed here after move\n     .suggest_borrowing = borrow this binding in the pattern to avoid moving the value\n+\n+mir_build_multiple_mut_borrows = cannot borrow value as mutable more than once at a time\n+    .label = first mutable borrow, by `{$name}`, occurs here\n+    .mutable_borrow = another mutable borrow, by `{$name_mut}`, occurs here\n+    .immutable_borrow = also borrowed as immutable, by `{$name_immut}`, here\n+    .moved = also moved into `{$name_moved}` here"}, {"sha": "dd715fcfc6c5878cfc800636228c70b31193f13b", "filename": "compiler/rustc_mir_build/src/errors.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e71a722fa69974102e220444523b824da7eaa522/compiler%2Frustc_mir_build%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e71a722fa69974102e220444523b824da7eaa522/compiler%2Frustc_mir_build%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Ferrors.rs?ref=e71a722fa69974102e220444523b824da7eaa522", "patch": "@@ -578,3 +578,37 @@ pub struct BorrowOfMovedValue<'tcx> {\n     #[suggestion(code = \"ref \", applicability = \"machine-applicable\")]\n     pub suggest_borrowing: Option<Span>,\n }\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(mir_build::multiple_mut_borrows)]\n+pub struct MultipleMutBorrows {\n+    #[primary_span]\n+    pub span: Span,\n+    #[label]\n+    pub binding_span: Span,\n+    #[subdiagnostic]\n+    pub occurences: Vec<MultipleMutBorrowOccurence>,\n+    pub name: Ident,\n+}\n+\n+#[derive(SessionSubdiagnostic)]\n+pub enum MultipleMutBorrowOccurence {\n+    #[label(mir_build::mutable_borrow)]\n+    Mutable {\n+        #[primary_span]\n+        span: Span,\n+        name_mut: Ident,\n+    },\n+    #[label(mir_build::immutable_borrow)]\n+    Immutable {\n+        #[primary_span]\n+        span: Span,\n+        name_immut: Ident,\n+    },\n+    #[label(mir_build::moved)]\n+    Moved {\n+        #[primary_span]\n+        span: Span,\n+        name_moved: Ident,\n+    },\n+}"}, {"sha": "374942ee798b8ba1383bbf68f1926c2c55693d94", "filename": "compiler/rustc_mir_build/src/thir/pattern/check_match.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e71a722fa69974102e220444523b824da7eaa522/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e71a722fa69974102e220444523b824da7eaa522/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fpattern%2Fcheck_match.rs?ref=e71a722fa69974102e220444523b824da7eaa522", "patch": "@@ -999,19 +999,19 @@ fn check_borrow_conflicts_in_at_patterns(cx: &MatchVisitor<'_, '_, '_>, pat: &Pa\n     // Report errors if any.\n     if !conflicts_mut_mut.is_empty() {\n         // Report mutability conflicts for e.g. `ref mut x @ Some(ref mut y)`.\n-        let mut err = sess\n-            .struct_span_err(pat.span, \"cannot borrow value as mutable more than once at a time\");\n-        err.span_label(binding_span, format!(\"first mutable borrow, by `{}`, occurs here\", name));\n+        let mut occurences = vec![];\n+\n         for (span, name) in conflicts_mut_mut {\n-            err.span_label(span, format!(\"another mutable borrow, by `{}`, occurs here\", name));\n+            occurences.push(MultipleMutBorrowOccurence::Mutable { span, name_mut: name });\n         }\n         for (span, name) in conflicts_mut_ref {\n-            err.span_label(span, format!(\"also borrowed as immutable, by `{}`, here\", name));\n+            occurences.push(MultipleMutBorrowOccurence::Immutable { span, name_immut: name });\n         }\n         for (span, name) in conflicts_move {\n-            err.span_label(span, format!(\"also moved into `{}` here\", name));\n+            occurences.push(MultipleMutBorrowOccurence::Moved { span, name_moved: name });\n         }\n-        err.emit();\n+\n+        sess.emit_err(MultipleMutBorrows { span: pat.span, binding_span, occurences, name });\n     } else if !conflicts_mut_ref.is_empty() {\n         // Report mutability conflicts for e.g. `ref x @ Some(ref mut y)` or the converse.\n         let (primary, also) = match mut_outer {"}]}