{"sha": "b4527492b1630c18deb7206ec703d71a372da664", "node_id": "C_kwDOAAsO6NoAKGI0NTI3NDkyYjE2MzBjMThkZWI3MjA2ZWM3MDNkNzFhMzcyZGE2NjQ", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-06T01:39:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-06T01:39:09Z"}, "message": "Rollup merge of #95699 - SparkyPotato:master, r=dtolnay\n\nfix: Vec leak when capacity is 0\n\nWhen `RawVec::with_capacity_in` is called with capacity 0, an allocation of size 0 is allocated.\nHowever, `<RawVec as Drop>::drop` doesn't deallocate, since it only checks if capacity was 0. Fixed by not allocating when capacity is 0.", "tree": {"sha": "534d0958fe063b5ed0c5cd3e700f380100066775", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/534d0958fe063b5ed0c5cd3e700f380100066775"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4527492b1630c18deb7206ec703d71a372da664", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiTO8+CRBK7hj4Ov3rIwAA5dcIAJ5gIpwf2m19a7dsSki8EyMT\nFJmFUpu/uSJQM11HfcG9w5DnZZzbTcRv8GXdtDjeJ+EAcR0Au8pFNlYffy38ShcT\nR3N75B+Scvp1OpzT/Dd3kRSJE4l8cUMj7PqXF2d8DPouMFIKY9mrQtbpaQ2ZTyiU\nwIyEFYTXr6yBc+Y81y22iuf1llDRafdOiP/QSTdoRxZzWiWPgv/FkIWknxWUy0+K\n2sgMTLVI/qTo8JIPn5FdMgNevFX015HcYZii2GwS1FYJYSrRPxURb2tWFkdEqEgh\njNqA04PgufUMGCwd/6KU+7Muquq70phVEqpCfJtlYx6NBH/TlUqNMba5bpjh3vs=\n=pHAw\n-----END PGP SIGNATURE-----\n", "payload": "tree 534d0958fe063b5ed0c5cd3e700f380100066775\nparent acdba55b5371f1f64912d42c98edb5149d5e67dc\nparent 83f659b4bb2212037ec62028b1979ec31d956fdd\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1649209149 +0200\ncommitter GitHub <noreply@github.com> 1649209149 +0200\n\nRollup merge of #95699 - SparkyPotato:master, r=dtolnay\n\nfix: Vec leak when capacity is 0\n\nWhen `RawVec::with_capacity_in` is called with capacity 0, an allocation of size 0 is allocated.\nHowever, `<RawVec as Drop>::drop` doesn't deallocate, since it only checks if capacity was 0. Fixed by not allocating when capacity is 0.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4527492b1630c18deb7206ec703d71a372da664", "html_url": "https://github.com/rust-lang/rust/commit/b4527492b1630c18deb7206ec703d71a372da664", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4527492b1630c18deb7206ec703d71a372da664/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acdba55b5371f1f64912d42c98edb5149d5e67dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/acdba55b5371f1f64912d42c98edb5149d5e67dc", "html_url": "https://github.com/rust-lang/rust/commit/acdba55b5371f1f64912d42c98edb5149d5e67dc"}, {"sha": "83f659b4bb2212037ec62028b1979ec31d956fdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/83f659b4bb2212037ec62028b1979ec31d956fdd", "html_url": "https://github.com/rust-lang/rust/commit/83f659b4bb2212037ec62028b1979ec31d956fdd"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "9dbac3c36ffb2871ce5e93f30dc3aef1fa94b9c3", "filename": "library/alloc/src/raw_vec.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b4527492b1630c18deb7206ec703d71a372da664/library%2Falloc%2Fsrc%2Fraw_vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4527492b1630c18deb7206ec703d71a372da664/library%2Falloc%2Fsrc%2Fraw_vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fraw_vec.rs?ref=b4527492b1630c18deb7206ec703d71a372da664", "patch": "@@ -168,7 +168,8 @@ impl<T, A: Allocator> RawVec<T, A> {\n \n     #[cfg(not(no_global_oom_handling))]\n     fn allocate_in(capacity: usize, init: AllocInit, alloc: A) -> Self {\n-        if mem::size_of::<T>() == 0 {\n+        // Don't allocate here because `Drop` will not deallocate when `capacity` is 0.\n+        if mem::size_of::<T>() == 0 || capacity == 0 {\n             Self::new_in(alloc)\n         } else {\n             // We avoid `unwrap_or_else` here because it bloats the amount of"}]}