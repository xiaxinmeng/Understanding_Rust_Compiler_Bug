{"sha": "669498ca0a880e2272fee62bf5dc50f3bc07e75b", "node_id": "C_kwDOAAsO6NoAKDY2OTQ5OGNhMGE4ODBlMjI3MmZlZTYyYmY1ZGM1MGYzYmMwN2U3NWI", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-15T20:14:30Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-09-15T20:14:30Z"}, "message": "rustdoc: fix test cases", "tree": {"sha": "d2f16331f04535776882ddf0e960593f25fd5dd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2f16331f04535776882ddf0e960593f25fd5dd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/669498ca0a880e2272fee62bf5dc50f3bc07e75b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/669498ca0a880e2272fee62bf5dc50f3bc07e75b", "html_url": "https://github.com/rust-lang/rust/commit/669498ca0a880e2272fee62bf5dc50f3bc07e75b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/669498ca0a880e2272fee62bf5dc50f3bc07e75b/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef24747703b6a30abb242d43f09c584edfed1b24", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef24747703b6a30abb242d43f09c584edfed1b24", "html_url": "https://github.com/rust-lang/rust/commit/ef24747703b6a30abb242d43f09c584edfed1b24"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "e12d8445f4fa3788e5db0efb9f3650a9d7ef2f90", "filename": "src/test/rustdoc/check-source-code-urls-to-def-std.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/669498ca0a880e2272fee62bf5dc50f3bc07e75b/src%2Ftest%2Frustdoc%2Fcheck-source-code-urls-to-def-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/669498ca0a880e2272fee62bf5dc50f3bc07e75b/src%2Ftest%2Frustdoc%2Fcheck-source-code-urls-to-def-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcheck-source-code-urls-to-def-std.rs?ref=669498ca0a880e2272fee62bf5dc50f3bc07e75b", "patch": "@@ -9,7 +9,7 @@ fn babar() {}\n // @has - '//a[@href=\"{{channel}}/std/primitive.u32.html\"]' 'u32'\n // @has - '//a[@href=\"{{channel}}/std/primitive.str.html\"]' 'str'\n // @has - '//a[@href=\"{{channel}}/std/primitive.bool.html\"]' 'bool'\n-// @has - '//a[@href=\"../../src/foo/check-source-code-urls-to-def-std.rs.html#7\"]' 'babar'\n+// @has - '//a[@href=\"#7\"]' 'babar'\n pub fn foo(a: u32, b: &str, c: String) {\n     let x = 12;\n     let y: bool = true;\n@@ -31,12 +31,12 @@ macro_rules! data {\n pub fn another_foo() {\n     // This is known limitation: if the macro doesn't generate anything, the visitor\n     // can't find any item or anything that could tell us that it comes from expansion.\n-    // @!has - '//a[@href=\"../../src/foo/check-source-code-urls-to-def-std.rs.html#19\"]' 'yolo!'\n+    // @!has - '//a[@href=\"#19\"]' 'yolo!'\n     yolo!();\n     // @has - '//a[@href=\"{{channel}}/std/macro.eprintln.html\"]' 'eprintln!'\n     eprintln!();\n-    // @has - '//a[@href=\"../../src/foo/check-source-code-urls-to-def-std.rs.html#27-29\"]' 'data!'\n+    // @has - '//a[@href=\"#27-29\"]' 'data!'\n     let x = data!(4);\n-    // @has - '//a[@href=\"../../src/foo/check-source-code-urls-to-def-std.rs.html#23-25\"]' 'bar!'\n+    // @has - '//a[@href=\"#23-25\"]' 'bar!'\n     bar!(x);\n }"}, {"sha": "d00a3e3551991d63aa14b22f3817ea87a2451851", "filename": "src/test/rustdoc/check-source-code-urls-to-def.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/669498ca0a880e2272fee62bf5dc50f3bc07e75b/src%2Ftest%2Frustdoc%2Fcheck-source-code-urls-to-def.rs", "raw_url": "https://github.com/rust-lang/rust/raw/669498ca0a880e2272fee62bf5dc50f3bc07e75b/src%2Ftest%2Frustdoc%2Fcheck-source-code-urls-to-def.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fcheck-source-code-urls-to-def.rs?ref=669498ca0a880e2272fee62bf5dc50f3bc07e75b", "patch": "@@ -10,14 +10,14 @@ extern crate source_code;\n \n // @has 'src/foo/check-source-code-urls-to-def.rs.html'\n \n-// @has - '//a[@href=\"../../src/foo/auxiliary/source-code-bar.rs.html#1-17\"]' 'bar'\n+// @has - '//a[@href=\"auxiliary/source-code-bar.rs.html#1-17\"]' 'bar'\n #[path = \"auxiliary/source-code-bar.rs\"]\n pub mod bar;\n \n-// @count - '//a[@href=\"../../src/foo/auxiliary/source-code-bar.rs.html#5\"]' 4\n+// @count - '//a[@href=\"auxiliary/source-code-bar.rs.html#5\"]' 4\n use bar::Bar;\n-// @has - '//a[@href=\"../../src/foo/auxiliary/source-code-bar.rs.html#13\"]' 'self'\n-// @has - '//a[@href=\"../../src/foo/auxiliary/source-code-bar.rs.html#14\"]' 'Trait'\n+// @has - '//a[@href=\"auxiliary/source-code-bar.rs.html#13\"]' 'self'\n+// @has - '//a[@href=\"auxiliary/source-code-bar.rs.html#14\"]' 'Trait'\n use bar::sub::{self, Trait};\n \n pub struct Foo;\n@@ -31,26 +31,26 @@ fn babar() {}\n // @has - '//a/@href' '/struct.String.html'\n // @has - '//a/@href' '/primitive.u32.html'\n // @has - '//a/@href' '/primitive.str.html'\n-// @count - '//a[@href=\"../../src/foo/check-source-code-urls-to-def.rs.html#23\"]' 5\n+// @count - '//a[@href=\"#23\"]' 5\n // @has - '//a[@href=\"../../source_code/struct.SourceCode.html\"]' 'source_code::SourceCode'\n pub fn foo(a: u32, b: &str, c: String, d: Foo, e: bar::Bar, f: source_code::SourceCode) {\n     let x = 12;\n     let y: Foo = Foo;\n     let z: Bar = bar::Bar { field: Foo };\n     babar();\n-    // @has - '//a[@href=\"../../src/foo/check-source-code-urls-to-def.rs.html#26\"]' 'hello'\n+    // @has - '//a[@href=\"#26\"]' 'hello'\n     y.hello();\n }\n \n-// @has - '//a[@href=\"../../src/foo/auxiliary/source-code-bar.rs.html#14\"]' 'bar::sub::Trait'\n-// @has - '//a[@href=\"../../src/foo/auxiliary/source-code-bar.rs.html#14\"]' 'Trait'\n+// @has - '//a[@href=\"auxiliary/source-code-bar.rs.html#14\"]' 'bar::sub::Trait'\n+// @has - '//a[@href=\"auxiliary/source-code-bar.rs.html#14\"]' 'Trait'\n pub fn foo2<T: bar::sub::Trait, V: Trait>(t: &T, v: &V, b: bool) {}\n \n pub trait AnotherTrait {}\n pub trait WhyNot {}\n \n-// @has - '//a[@href=\"../../src/foo/check-source-code-urls-to-def.rs.html#49\"]' 'AnotherTrait'\n-// @has - '//a[@href=\"../../src/foo/check-source-code-urls-to-def.rs.html#50\"]' 'WhyNot'\n+// @has - '//a[@href=\"#49\"]' 'AnotherTrait'\n+// @has - '//a[@href=\"#50\"]' 'WhyNot'\n pub fn foo3<T, V>(t: &T, v: &V)\n where\n     T: AnotherTrait,\n@@ -59,7 +59,7 @@ where\n \n pub trait AnotherTrait2 {}\n \n-// @has - '//a[@href=\"../../src/foo/check-source-code-urls-to-def.rs.html#60\"]' 'AnotherTrait2'\n+// @has - '//a[@href=\"#60\"]' 'AnotherTrait2'\n pub fn foo4() {\n     let x: Vec<AnotherTrait2> = Vec::new();\n }"}]}