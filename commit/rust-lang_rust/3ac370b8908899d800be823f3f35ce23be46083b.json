{"sha": "3ac370b8908899d800be823f3f35ce23be46083b", "node_id": "C_kwDOAAsO6NoAKDNhYzM3MGI4OTA4ODk5ZDgwMGJlODIzZjNmMzVjZTIzYmU0NjA4M2I", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-26T06:23:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-26T06:23:14Z"}, "message": "Auto merge of #107314 - matthiaskrgr:rollup-j40lnlj, r=matthiaskrgr\n\nRollup of 11 pull requests\n\nSuccessful merges:\n\n - #106407 (Improve proc macro attribute diagnostics)\n - #106960 (Teach parser to understand fake anonymous enum syntax)\n - #107085 (Custom MIR: Support binary and unary operations)\n - #107086 (Print PID holding bootstrap build lock on Linux)\n - #107175 (Fix escaping inference var ICE in `point_at_expr_source_of_inferred_type`)\n - #107204 (suggest qualifying bare associated constants)\n - #107248 (abi: add AddressSpace field to Primitive::Pointer )\n - #107272 (Implement ObjectSafe and WF in the new solver)\n - #107285 (Implement `Generator` and `Future` in the new solver)\n - #107286 (ICE in new solver if we see an inference variable)\n - #107313 (Add Style Team Triagebot config)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "256b71be5d0afe67a396430e37d0f355cbf341aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/256b71be5d0afe67a396430e37d0f355cbf341aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ac370b8908899d800be823f3f35ce23be46083b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ac370b8908899d800be823f3f35ce23be46083b", "html_url": "https://github.com/rust-lang/rust/commit/3ac370b8908899d800be823f3f35ce23be46083b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ac370b8908899d800be823f3f35ce23be46083b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "801b1a1919fccd5c4be17efd586c78117efbd95a", "url": "https://api.github.com/repos/rust-lang/rust/commits/801b1a1919fccd5c4be17efd586c78117efbd95a", "html_url": "https://github.com/rust-lang/rust/commit/801b1a1919fccd5c4be17efd586c78117efbd95a"}, {"sha": "ef5ec771bb4828a8464a4b5ed9ec09b7b48826db", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef5ec771bb4828a8464a4b5ed9ec09b7b48826db", "html_url": "https://github.com/rust-lang/rust/commit/ef5ec771bb4828a8464a4b5ed9ec09b7b48826db"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "63ed10cdfcc59f59216c4f30d68eee45b4091d3f", "filename": "src/common.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3ac370b8908899d800be823f3f35ce23be46083b/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ac370b8908899d800be823f3f35ce23be46083b/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=3ac370b8908899d800be823f3f35ce23be46083b", "patch": "@@ -35,7 +35,8 @@ pub(crate) fn scalar_to_clif_type(tcx: TyCtxt<'_>, scalar: Scalar) -> Type {\n         },\n         Primitive::F32 => types::F32,\n         Primitive::F64 => types::F64,\n-        Primitive::Pointer => pointer_ty(tcx),\n+        // FIXME(erikdesjardins): handle non-default addrspace ptr sizes\n+        Primitive::Pointer(_) => pointer_ty(tcx),\n     }\n }\n "}]}