{"sha": "f2f7ab9da835f5fd66722f2efec9285ea72ad0f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyZjdhYjlkYTgzNWY1ZmQ2NjcyMmYyZWZlYzkyODVlYTcyYWQwZjQ=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-07-19T14:43:58Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2018-07-19T14:46:44Z"}, "message": "rustc: Fix two custom attributes with custom derive\n\nThis commit fixes an issue where multiple custom attributes could not be fed\ninto a custom derive in some situations with the `use_extern_macros` feature\nenabled. The problem was that the macro expander didn't consider that it was\nmaking progress when we were deducing that attributes should be lumped in with\ncustom derive invocations.\n\nThe fix applied here was to track in the expander if our attribute is changing\n(getting stashed away elsewhere and replaced with a new invocation). If it is\nswapped then it's considered progress, otherwise behavior should remain the\nsame.\n\nCloses #52525", "tree": {"sha": "992d8a3e4aa166529c4be002c29eeb38a5098914", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/992d8a3e4aa166529c4be002c29eeb38a5098914"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2f7ab9da835f5fd66722f2efec9285ea72ad0f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2f7ab9da835f5fd66722f2efec9285ea72ad0f4", "html_url": "https://github.com/rust-lang/rust/commit/f2f7ab9da835f5fd66722f2efec9285ea72ad0f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2f7ab9da835f5fd66722f2efec9285ea72ad0f4/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ba21844f6c85a0cd55c8ea0250d5cd758134f84", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ba21844f6c85a0cd55c8ea0250d5cd758134f84", "html_url": "https://github.com/rust-lang/rust/commit/5ba21844f6c85a0cd55c8ea0250d5cd758134f84"}], "stats": {"total": 63, "additions": 63, "deletions": 0}, "files": [{"sha": "d64f3de8daa97491bc045ded1e81964ed02e121a", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/f2f7ab9da835f5fd66722f2efec9285ea72ad0f4/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2f7ab9da835f5fd66722f2efec9285ea72ad0f4/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=f2f7ab9da835f5fd66722f2efec9285ea72ad0f4", "patch": "@@ -240,6 +240,13 @@ impl Invocation {\n             InvocationKind::Derive { ref path, .. } => path.span,\n         }\n     }\n+\n+    pub fn attr_id(&self) -> Option<ast::AttrId> {\n+        match self.kind {\n+            InvocationKind::Attr { attr: Some(ref attr), .. } => Some(attr.id),\n+            _ => None,\n+        }\n+    }\n }\n \n pub struct MacroExpander<'a, 'b:'a> {\n@@ -331,10 +338,20 @@ impl<'a, 'b> MacroExpander<'a, 'b> {\n \n             let scope =\n                 if self.monotonic { invoc.expansion_data.mark } else { orig_expansion_data.mark };\n+            let attr_id_before = invoc.attr_id();\n             let ext = match self.cx.resolver.resolve_invoc(&mut invoc, scope, force) {\n                 Ok(ext) => Some(ext),\n                 Err(Determinacy::Determined) => None,\n                 Err(Determinacy::Undetermined) => {\n+                    // Sometimes attributes which we thought were invocations\n+                    // end up being custom attributes for custom derives. If\n+                    // that's the case our `invoc` will have changed out from\n+                    // under us. If this is the case we're making progress so we\n+                    // want to flag it as such, and we test this by looking if\n+                    // the `attr_id()` method has been changing over time.\n+                    if invoc.attr_id() != attr_id_before {\n+                        progress = true;\n+                    }\n                     undetermined_invocations.push(invoc);\n                     continue\n                 }"}, {"sha": "d02edb50fb2b5ae27099334e464bc7e2ca64e2e0", "filename": "src/test/run-pass-fulldeps/proc-macro/auxiliary/derive-two-attrs.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/f2f7ab9da835f5fd66722f2efec9285ea72ad0f4/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-two-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2f7ab9da835f5fd66722f2efec9285ea72ad0f4/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-two-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-two-attrs.rs?ref=f2f7ab9da835f5fd66722f2efec9285ea72ad0f4", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+\n+use proc_macro::*;\n+\n+#[proc_macro_derive(A, attributes(b))]\n+pub fn foo(_x: TokenStream) -> TokenStream {\n+    TokenStream::new()\n+}"}, {"sha": "6a0a3b3a9416a1a22e297932de600fad62dd64d6", "filename": "src/test/run-pass-fulldeps/proc-macro/derive-two-attrs.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/f2f7ab9da835f5fd66722f2efec9285ea72ad0f4/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-two-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2f7ab9da835f5fd66722f2efec9285ea72ad0f4/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-two-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fproc-macro%2Fderive-two-attrs.rs?ref=f2f7ab9da835f5fd66722f2efec9285ea72ad0f4", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// aux-build:derive-two-attrs.rs\n+\n+#![feature(use_extern_macros)]\n+\n+extern crate derive_two_attrs as foo;\n+\n+use foo::A;\n+\n+#[derive(A)]\n+#[b]\n+#[b]\n+struct B;\n+\n+fn main() {}"}]}