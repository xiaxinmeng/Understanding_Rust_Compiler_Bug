{"sha": "ce76fb3d095eb0b28fd4f382e2d9e8065728c452", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlNzZmYjNkMDk1ZWIwYjI4ZmQ0ZjM4MmUyZDllODA2NTcyOGM0NTI=", "commit": {"author": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2021-02-18T01:54:14Z"}, "committer": {"name": "Samuel E. Moelius III", "email": "sam@moeli.us", "date": "2021-02-23T23:50:30Z"}, "message": "Fix update_lints", "tree": {"sha": "2a391f8071ee4ac56dec8639c85c53bcdf14b694", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a391f8071ee4ac56dec8639c85c53bcdf14b694"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce76fb3d095eb0b28fd4f382e2d9e8065728c452", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce76fb3d095eb0b28fd4f382e2d9e8065728c452", "html_url": "https://github.com/rust-lang/rust/commit/ce76fb3d095eb0b28fd4f382e2d9e8065728c452", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce76fb3d095eb0b28fd4f382e2d9e8065728c452/comments", "author": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "committer": {"login": "smoelius", "id": 35515885, "node_id": "MDQ6VXNlcjM1NTE1ODg1", "avatar_url": "https://avatars.githubusercontent.com/u/35515885?v=4", "gravatar_id": "", "url": "https://api.github.com/users/smoelius", "html_url": "https://github.com/smoelius", "followers_url": "https://api.github.com/users/smoelius/followers", "following_url": "https://api.github.com/users/smoelius/following{/other_user}", "gists_url": "https://api.github.com/users/smoelius/gists{/gist_id}", "starred_url": "https://api.github.com/users/smoelius/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/smoelius/subscriptions", "organizations_url": "https://api.github.com/users/smoelius/orgs", "repos_url": "https://api.github.com/users/smoelius/repos", "events_url": "https://api.github.com/users/smoelius/events{/privacy}", "received_events_url": "https://api.github.com/users/smoelius/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "979206f6b4bc1dcd30e621e1f53f6b8c6283ebbc", "url": "https://api.github.com/repos/rust-lang/rust/commits/979206f6b4bc1dcd30e621e1f53f6b8c6283ebbc", "html_url": "https://github.com/rust-lang/rust/commit/979206f6b4bc1dcd30e621e1f53f6b8c6283ebbc"}], "stats": {"total": 18, "additions": 13, "deletions": 5}, "files": [{"sha": "296ef00b3f16fa19ae1b065c11323632940f5085", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ce76fb3d095eb0b28fd4f382e2d9e8065728c452/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce76fb3d095eb0b28fd4f382e2d9e8065728c452/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=ce76fb3d095eb0b28fd4f382e2d9e8065728c452", "patch": "@@ -186,11 +186,17 @@ fn gather_from_file(dir_entry: &walkdir::DirEntry) -> impl Iterator<Item = Lint>\n     let path_buf = path.with_file_name(filename);\n     let mut rel_path = path_buf\n         .strip_prefix(clippy_project_root().join(\"clippy_lints/src\"))\n-        .expect(\"only files in `clippy_lints/src` should be looked at\");\n+        .map(PathBuf::from)\n+        .or_else(|_| {\n+            path_buf\n+                .strip_prefix(clippy_project_root().join(\"clippy_utils/src\"))\n+                .map(|c| Path::new(\"utils\").join(c))\n+        })\n+        .expect(\"only files in `clippy_lints/src` or `clippy_utils/src` should be looked at\");\n     // If the lints are stored in mod.rs, we get the module name from\n     // the containing directory:\n     if filename == \"mod\" {\n-        rel_path = rel_path.parent().unwrap();\n+        rel_path = rel_path.parent().unwrap().to_path_buf();\n     }\n \n     let module = rel_path\n@@ -213,13 +219,15 @@ fn parse_contents(content: &str, module: &str) -> impl Iterator<Item = Lint> {\n     lints.chain(deprecated).collect::<Vec<Lint>>().into_iter()\n }\n \n-/// Collects all .rs files in the `clippy_lints/src` directory\n+/// Collects all .rs files in the `clippy_lints/src` and `clippy_lints/src` directories\n fn lint_files() -> impl Iterator<Item = walkdir::DirEntry> {\n     // We use `WalkDir` instead of `fs::read_dir` here in order to recurse into subdirectories.\n     // Otherwise we would not collect all the lints, for example in `clippy_lints/src/methods/`.\n-    let path = clippy_project_root().join(\"clippy_lints/src\");\n-    WalkDir::new(path)\n+    let clippy_lints_path = clippy_project_root().join(\"clippy_lints/src\");\n+    let clippy_utils_path = clippy_project_root().join(\"clippy_utils/src\");\n+    WalkDir::new(clippy_lints_path)\n         .into_iter()\n+        .chain(WalkDir::new(clippy_utils_path).into_iter())\n         .filter_map(Result::ok)\n         .filter(|f| f.path().extension() == Some(OsStr::new(\"rs\")))\n }"}]}