{"sha": "9025f51118ad54773e4607d4ab4106b3934678a0", "node_id": "C_kwDOAAsO6NoAKDkwMjVmNTExMThhZDU0NzczZTQ2MDdkNGFiNDEwNmIzOTM0Njc4YTA", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-11-03T13:42:15Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-11-03T13:42:15Z"}, "message": "Add disjoint check back in TextEdit::union", "tree": {"sha": "e615ea6f798ffd094e9e58663540d1b92f639ffe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e615ea6f798ffd094e9e58663540d1b92f639ffe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9025f51118ad54773e4607d4ab4106b3934678a0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9025f51118ad54773e4607d4ab4106b3934678a0", "html_url": "https://github.com/rust-lang/rust/commit/9025f51118ad54773e4607d4ab4106b3934678a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9025f51118ad54773e4607d4ab4106b3934678a0/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7581ba3f3037325e8d2d591fa4997fff4f15aaf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/7581ba3f3037325e8d2d591fa4997fff4f15aaf2", "html_url": "https://github.com/rust-lang/rust/commit/7581ba3f3037325e8d2d591fa4997fff4f15aaf2"}], "stats": {"total": 20, "additions": 8, "deletions": 12}, "files": [{"sha": "bc16778d34e21d24ef52772cdabcc2d6bcae3293", "filename": "crates/text_edit/src/lib.rs", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/9025f51118ad54773e4607d4ab4106b3934678a0/crates%2Ftext_edit%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9025f51118ad54773e4607d4ab4106b3934678a0/crates%2Ftext_edit%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftext_edit%2Fsrc%2Flib.rs?ref=9025f51118ad54773e4607d4ab4106b3934678a0", "patch": "@@ -3,7 +3,6 @@\n //! `rust-analyzer` never mutates text itself and only sends diffs to clients,\n //! so `TextEdit` is the ultimate representation of the work done by\n //! rust-analyzer.\n-use std::collections::HashSet;\n \n pub use text_size::{TextRange, TextSize};\n \n@@ -118,17 +117,13 @@ impl TextEdit {\n     pub fn union(&mut self, other: TextEdit) -> Result<(), TextEdit> {\n         // FIXME: can be done without allocating intermediate vector\n         let mut all = self.iter().chain(other.iter()).collect::<Vec<_>>();\n-        if !check_disjoint_or_equal(&mut all) {\n+        if !check_disjoint_and_sort(&mut all) {\n             return Err(other);\n         }\n \n-        // remove duplicates\n-        // FIXME: maybe make indels a HashSet instead to get rid of this?\n-        let our_indels = self.indels.clone();\n-        let our_indels = our_indels.iter().collect::<HashSet<_>>();\n-        let other_indels = other.indels.into_iter().filter(|i| !our_indels.contains(i));\n-\n-        self.indels.extend(other_indels);\n+        self.indels.extend(other.indels);\n+        check_disjoint_and_sort(&mut self.indels);\n+        self.indels.dedup();\n         Ok(())\n     }\n \n@@ -195,10 +190,11 @@ impl TextEditBuilder {\n     }\n }\n \n-fn assert_disjoint_or_equal(indels: &mut [impl std::borrow::Borrow<Indel>]) {\n-    assert!(check_disjoint_or_equal(indels));\n+fn assert_disjoint_or_equal(indels: &mut [Indel]) {\n+    assert!(check_disjoint_and_sort(indels));\n }\n-fn check_disjoint_or_equal(indels: &mut [impl std::borrow::Borrow<Indel>]) -> bool {\n+// FIXME: Remove the impl Bound here, it shouldn't be needed\n+fn check_disjoint_and_sort(indels: &mut [impl std::borrow::Borrow<Indel>]) -> bool {\n     indels.sort_by_key(|indel| (indel.borrow().delete.start(), indel.borrow().delete.end()));\n     indels.iter().zip(indels.iter().skip(1)).all(|(l, r)| {\n         let l = l.borrow();"}]}