{"sha": "693489e5ee2aad1aab342c099457eb060035e8c3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5MzQ4OWU1ZWUyYWFkMWFhYjM0MmMwOTk0NTdlYjA2MDAzNWU4YzM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-24T16:57:30Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-24T16:57:30Z"}, "message": "Flatten module hierarchy", "tree": {"sha": "0e49ad954b8b6d48e580be802c60f889a76aeb98", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e49ad954b8b6d48e580be802c60f889a76aeb98"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/693489e5ee2aad1aab342c099457eb060035e8c3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/693489e5ee2aad1aab342c099457eb060035e8c3", "html_url": "https://github.com/rust-lang/rust/commit/693489e5ee2aad1aab342c099457eb060035e8c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/693489e5ee2aad1aab342c099457eb060035e8c3/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6c204c75050052417a8d6f4f2b08b210b62d805", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6c204c75050052417a8d6f4f2b08b210b62d805", "html_url": "https://github.com/rust-lang/rust/commit/d6c204c75050052417a8d6f4f2b08b210b62d805"}], "stats": {"total": 99, "additions": 50, "deletions": 49}, "files": [{"sha": "9a75cb2ab86dd2dae8f8cbf4944afeb1d1501514", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/693489e5ee2aad1aab342c099457eb060035e8c3/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/693489e5ee2aad1aab342c099457eb060035e8c3/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=693489e5ee2aad1aab342c099457eb060035e8c3", "patch": "@@ -20,7 +20,7 @@ use crate::{\n     diagnostics::{CheckFixes, DiagnosticCollection},\n     from_proto,\n     line_endings::LineEndings,\n-    main_loop::request_metrics::{LatestRequests, RequestMetrics},\n+    request_metrics::{LatestRequests, RequestMetrics},\n     to_proto::url_from_abs_path,\n     Result,\n };"}, {"sha": "b38755b79d31602ba6cb579d7547f79df90aec08", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "renamed", "additions": 39, "deletions": 36, "changes": 75, "blob_url": "https://github.com/rust-lang/rust/blob/693489e5ee2aad1aab342c099457eb060035e8c3/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/693489e5ee2aad1aab342c099457eb060035e8c3/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=693489e5ee2aad1aab342c099457eb060035e8c3", "patch": "@@ -38,7 +38,7 @@ use crate::{\n     to_proto, LspError, Result,\n };\n \n-pub fn handle_analyzer_status(snap: GlobalStateSnapshot, _: ()) -> Result<String> {\n+pub(crate) fn handle_analyzer_status(snap: GlobalStateSnapshot, _: ()) -> Result<String> {\n     let _p = profile(\"handle_analyzer_status\");\n     let mut buf = snap.status();\n     format_to!(buf, \"\\n\\nrequests:\\n\");\n@@ -50,7 +50,7 @@ pub fn handle_analyzer_status(snap: GlobalStateSnapshot, _: ()) -> Result<String\n     Ok(buf)\n }\n \n-pub fn handle_syntax_tree(\n+pub(crate) fn handle_syntax_tree(\n     snap: GlobalStateSnapshot,\n     params: lsp_ext::SyntaxTreeParams,\n ) -> Result<String> {\n@@ -62,7 +62,7 @@ pub fn handle_syntax_tree(\n     Ok(res)\n }\n \n-pub fn handle_expand_macro(\n+pub(crate) fn handle_expand_macro(\n     snap: GlobalStateSnapshot,\n     params: lsp_ext::ExpandMacroParams,\n ) -> Result<Option<lsp_ext::ExpandedMacro>> {\n@@ -75,7 +75,7 @@ pub fn handle_expand_macro(\n     Ok(res.map(|it| lsp_ext::ExpandedMacro { name: it.name, expansion: it.expansion }))\n }\n \n-pub fn handle_selection_range(\n+pub(crate) fn handle_selection_range(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::SelectionRangeParams,\n ) -> Result<Option<Vec<lsp_types::SelectionRange>>> {\n@@ -118,7 +118,7 @@ pub fn handle_selection_range(\n     Ok(Some(res?))\n }\n \n-pub fn handle_matching_brace(\n+pub(crate) fn handle_matching_brace(\n     snap: GlobalStateSnapshot,\n     params: lsp_ext::MatchingBraceParams,\n ) -> Result<Vec<Position>> {\n@@ -140,7 +140,7 @@ pub fn handle_matching_brace(\n     Ok(res)\n }\n \n-pub fn handle_join_lines(\n+pub(crate) fn handle_join_lines(\n     snap: GlobalStateSnapshot,\n     params: lsp_ext::JoinLinesParams,\n ) -> Result<Vec<lsp_types::TextEdit>> {\n@@ -163,7 +163,7 @@ pub fn handle_join_lines(\n     Ok(res)\n }\n \n-pub fn handle_on_enter(\n+pub(crate) fn handle_on_enter(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::TextDocumentPositionParams,\n ) -> Result<Option<Vec<lsp_ext::SnippetTextEdit>>> {\n@@ -180,7 +180,7 @@ pub fn handle_on_enter(\n }\n \n // Don't forget to add new trigger characters to `ServerCapabilities` in `caps.rs`.\n-pub fn handle_on_type_formatting(\n+pub(crate) fn handle_on_type_formatting(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::DocumentOnTypeFormattingParams,\n ) -> Result<Option<Vec<lsp_types::TextEdit>>> {\n@@ -219,7 +219,7 @@ pub fn handle_on_type_formatting(\n     Ok(Some(change))\n }\n \n-pub fn handle_document_symbol(\n+pub(crate) fn handle_document_symbol(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::DocumentSymbolParams,\n ) -> Result<Option<lsp_types::DocumentSymbolResponse>> {\n@@ -287,7 +287,7 @@ pub fn handle_document_symbol(\n     }\n }\n \n-pub fn handle_workspace_symbol(\n+pub(crate) fn handle_workspace_symbol(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::WorkspaceSymbolParams,\n ) -> Result<Option<Vec<SymbolInformation>>> {\n@@ -331,7 +331,7 @@ pub fn handle_workspace_symbol(\n     }\n }\n \n-pub fn handle_goto_definition(\n+pub(crate) fn handle_goto_definition(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::GotoDefinitionParams,\n ) -> Result<Option<lsp_types::GotoDefinitionResponse>> {\n@@ -346,7 +346,7 @@ pub fn handle_goto_definition(\n     Ok(Some(res))\n }\n \n-pub fn handle_goto_implementation(\n+pub(crate) fn handle_goto_implementation(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::request::GotoImplementationParams,\n ) -> Result<Option<lsp_types::request::GotoImplementationResponse>> {\n@@ -361,7 +361,7 @@ pub fn handle_goto_implementation(\n     Ok(Some(res))\n }\n \n-pub fn handle_goto_type_definition(\n+pub(crate) fn handle_goto_type_definition(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::request::GotoTypeDefinitionParams,\n ) -> Result<Option<lsp_types::request::GotoTypeDefinitionResponse>> {\n@@ -376,7 +376,7 @@ pub fn handle_goto_type_definition(\n     Ok(Some(res))\n }\n \n-pub fn handle_parent_module(\n+pub(crate) fn handle_parent_module(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::TextDocumentPositionParams,\n ) -> Result<Option<lsp_types::GotoDefinitionResponse>> {\n@@ -387,7 +387,7 @@ pub fn handle_parent_module(\n     Ok(Some(res))\n }\n \n-pub fn handle_runnables(\n+pub(crate) fn handle_runnables(\n     snap: GlobalStateSnapshot,\n     params: lsp_ext::RunnablesParams,\n ) -> Result<Vec<lsp_ext::Runnable>> {\n@@ -446,7 +446,7 @@ pub fn handle_runnables(\n     Ok(res)\n }\n \n-pub fn handle_completion(\n+pub(crate) fn handle_completion(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::CompletionParams,\n ) -> Result<Option<lsp_types::CompletionResponse>> {\n@@ -488,7 +488,7 @@ pub fn handle_completion(\n     Ok(Some(items.into()))\n }\n \n-pub fn handle_folding_range(\n+pub(crate) fn handle_folding_range(\n     snap: GlobalStateSnapshot,\n     params: FoldingRangeParams,\n ) -> Result<Option<Vec<FoldingRange>>> {\n@@ -505,7 +505,7 @@ pub fn handle_folding_range(\n     Ok(Some(res))\n }\n \n-pub fn handle_signature_help(\n+pub(crate) fn handle_signature_help(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::SignatureHelpParams,\n ) -> Result<Option<lsp_types::SignatureHelp>> {\n@@ -529,7 +529,7 @@ pub fn handle_signature_help(\n     }))\n }\n \n-pub fn handle_hover(\n+pub(crate) fn handle_hover(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::HoverParams,\n ) -> Result<Option<lsp_ext::Hover>> {\n@@ -555,7 +555,7 @@ pub fn handle_hover(\n     Ok(Some(hover))\n }\n \n-pub fn handle_prepare_rename(\n+pub(crate) fn handle_prepare_rename(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::TextDocumentPositionParams,\n ) -> Result<Option<PrepareRenameResponse>> {\n@@ -573,7 +573,7 @@ pub fn handle_prepare_rename(\n     Ok(Some(PrepareRenameResponse::Range(range)))\n }\n \n-pub fn handle_rename(\n+pub(crate) fn handle_rename(\n     snap: GlobalStateSnapshot,\n     params: RenameParams,\n ) -> Result<Option<WorkspaceEdit>> {\n@@ -597,7 +597,7 @@ pub fn handle_rename(\n     Ok(Some(workspace_edit))\n }\n \n-pub fn handle_references(\n+pub(crate) fn handle_references(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::ReferenceParams,\n ) -> Result<Option<Vec<Location>>> {\n@@ -624,7 +624,7 @@ pub fn handle_references(\n     Ok(Some(locations))\n }\n \n-pub fn handle_formatting(\n+pub(crate) fn handle_formatting(\n     snap: GlobalStateSnapshot,\n     params: DocumentFormattingParams,\n ) -> Result<Option<Vec<lsp_types::TextEdit>>> {\n@@ -739,7 +739,7 @@ fn handle_fixes(\n     Ok(())\n }\n \n-pub fn handle_code_action(\n+pub(crate) fn handle_code_action(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::CodeActionParams,\n ) -> Result<Option<Vec<lsp_ext::CodeAction>>> {\n@@ -774,7 +774,7 @@ pub fn handle_code_action(\n     Ok(Some(res))\n }\n \n-pub fn handle_resolve_code_action(\n+pub(crate) fn handle_resolve_code_action(\n     snap: GlobalStateSnapshot,\n     params: lsp_ext::ResolveCodeActionParams,\n ) -> Result<Option<lsp_ext::SnippetWorkspaceEdit>> {\n@@ -792,7 +792,7 @@ pub fn handle_resolve_code_action(\n     Ok(to_proto::resolved_code_action(&snap, assist.clone())?.edit)\n }\n \n-pub fn handle_code_lens(\n+pub(crate) fn handle_code_lens(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::CodeLensParams,\n ) -> Result<Option<Vec<CodeLens>>> {\n@@ -873,7 +873,7 @@ enum CodeLensResolveData {\n     Impls(lsp_types::request::GotoImplementationParams),\n }\n \n-pub fn handle_code_lens_resolve(\n+pub(crate) fn handle_code_lens_resolve(\n     snap: GlobalStateSnapshot,\n     code_lens: CodeLens,\n ) -> Result<CodeLens> {\n@@ -910,7 +910,7 @@ pub fn handle_code_lens_resolve(\n     }\n }\n \n-pub fn handle_document_highlight(\n+pub(crate) fn handle_document_highlight(\n     snap: GlobalStateSnapshot,\n     params: lsp_types::DocumentHighlightParams,\n ) -> Result<Option<Vec<DocumentHighlight>>> {\n@@ -937,7 +937,7 @@ pub fn handle_document_highlight(\n     Ok(Some(res))\n }\n \n-pub fn handle_ssr(\n+pub(crate) fn handle_ssr(\n     snap: GlobalStateSnapshot,\n     params: lsp_ext::SsrParams,\n ) -> Result<lsp_types::WorkspaceEdit> {\n@@ -947,7 +947,10 @@ pub fn handle_ssr(\n     to_proto::workspace_edit(&snap, source_change)\n }\n \n-pub fn publish_diagnostics(snap: &GlobalStateSnapshot, file_id: FileId) -> Result<DiagnosticTask> {\n+pub(crate) fn publish_diagnostics(\n+    snap: &GlobalStateSnapshot,\n+    file_id: FileId,\n+) -> Result<DiagnosticTask> {\n     let _p = profile(\"publish_diagnostics\");\n     let line_index = snap.analysis().file_line_index(file_id)?;\n     let diagnostics: Vec<Diagnostic> = snap\n@@ -967,7 +970,7 @@ pub fn publish_diagnostics(snap: &GlobalStateSnapshot, file_id: FileId) -> Resul\n     Ok(DiagnosticTask::SetNative(file_id, diagnostics))\n }\n \n-pub fn handle_inlay_hints(\n+pub(crate) fn handle_inlay_hints(\n     snap: GlobalStateSnapshot,\n     params: InlayHintsParams,\n ) -> Result<Vec<InlayHint>> {\n@@ -982,7 +985,7 @@ pub fn handle_inlay_hints(\n         .collect())\n }\n \n-pub fn handle_call_hierarchy_prepare(\n+pub(crate) fn handle_call_hierarchy_prepare(\n     snap: GlobalStateSnapshot,\n     params: CallHierarchyPrepareParams,\n ) -> Result<Option<Vec<CallHierarchyItem>>> {\n@@ -1004,7 +1007,7 @@ pub fn handle_call_hierarchy_prepare(\n     Ok(Some(res))\n }\n \n-pub fn handle_call_hierarchy_incoming(\n+pub(crate) fn handle_call_hierarchy_incoming(\n     snap: GlobalStateSnapshot,\n     params: CallHierarchyIncomingCallsParams,\n ) -> Result<Option<Vec<CallHierarchyIncomingCall>>> {\n@@ -1039,7 +1042,7 @@ pub fn handle_call_hierarchy_incoming(\n     Ok(Some(res))\n }\n \n-pub fn handle_call_hierarchy_outgoing(\n+pub(crate) fn handle_call_hierarchy_outgoing(\n     snap: GlobalStateSnapshot,\n     params: CallHierarchyOutgoingCallsParams,\n ) -> Result<Option<Vec<CallHierarchyOutgoingCall>>> {\n@@ -1074,7 +1077,7 @@ pub fn handle_call_hierarchy_outgoing(\n     Ok(Some(res))\n }\n \n-pub fn handle_semantic_tokens(\n+pub(crate) fn handle_semantic_tokens(\n     snap: GlobalStateSnapshot,\n     params: SemanticTokensParams,\n ) -> Result<Option<SemanticTokensResult>> {\n@@ -1089,7 +1092,7 @@ pub fn handle_semantic_tokens(\n     Ok(Some(semantic_tokens.into()))\n }\n \n-pub fn handle_semantic_tokens_range(\n+pub(crate) fn handle_semantic_tokens_range(\n     snap: GlobalStateSnapshot,\n     params: SemanticTokensRangeParams,\n ) -> Result<Option<SemanticTokensRangeResult>> {", "previous_filename": "crates/rust-analyzer/src/main_loop/handlers.rs"}, {"sha": "9757a16a38fa08160d66e8446cbc5fdbe2e44249", "filename": "crates/rust-analyzer/src/lib.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/693489e5ee2aad1aab342c099457eb060035e8c3/crates%2Frust-analyzer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/693489e5ee2aad1aab342c099457eb060035e8c3/crates%2Frust-analyzer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flib.rs?ref=693489e5ee2aad1aab342c099457eb060035e8c3", "patch": "@@ -17,18 +17,20 @@ macro_rules! eprintln {\n     ($($tt:tt)*) => { stdx::eprintln!($($tt)*) };\n }\n \n+mod global_state;\n+mod main_loop;\n+mod handlers;\n mod caps;\n mod cargo_target_spec;\n mod to_proto;\n mod from_proto;\n-mod main_loop;\n+mod semantic_tokens;\n mod markdown;\n-pub mod lsp_ext;\n-pub mod config;\n-mod global_state;\n mod diagnostics;\n-mod semantic_tokens;\n mod line_endings;\n+mod request_metrics;\n+pub mod lsp_ext;\n+pub mod config;\n \n use serde::de::DeserializeOwned;\n "}, {"sha": "c8819c3b00bc6f5a8edbf05e55e7814d8da55215", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/693489e5ee2aad1aab342c099457eb060035e8c3/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/693489e5ee2aad1aab342c099457eb060035e8c3/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=693489e5ee2aad1aab342c099457eb060035e8c3", "patch": "@@ -1,9 +1,5 @@\n //! The main loop of `rust-analyzer` responsible for dispatching LSP\n //! requests/replies and notifications back to the client.\n-\n-mod handlers;\n-pub(crate) mod request_metrics;\n-\n use std::{\n     env,\n     error::Error,\n@@ -19,6 +15,7 @@ use lsp_server::{\n     Connection, ErrorCode, Message, Notification, ReqQueue, Request, RequestId, Response,\n };\n use lsp_types::{request::Request as _, NumberOrString, TextDocumentContentChangeEvent};\n+use ra_db::VfsPath;\n use ra_flycheck::CheckTask;\n use ra_ide::{Canceled, FileId, LineIndex};\n use ra_prof::profile;\n@@ -32,11 +29,10 @@ use crate::{\n     diagnostics::DiagnosticTask,\n     from_proto,\n     global_state::{file_id_to_url, GlobalState, GlobalStateSnapshot},\n-    lsp_ext,\n-    main_loop::request_metrics::RequestMetrics,\n+    handlers, lsp_ext,\n+    request_metrics::RequestMetrics,\n     Result,\n };\n-use ra_db::VfsPath;\n \n #[derive(Debug)]\n pub struct LspError {"}, {"sha": "b1019e2d6fc5b5de87d53f83451a98b694e283d9", "filename": "crates/rust-analyzer/src/request_metrics.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/693489e5ee2aad1aab342c099457eb060035e8c3/crates%2Frust-analyzer%2Fsrc%2Frequest_metrics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/693489e5ee2aad1aab342c099457eb060035e8c3/crates%2Frust-analyzer%2Fsrc%2Frequest_metrics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Frequest_metrics.rs?ref=693489e5ee2aad1aab342c099457eb060035e8c3", "previous_filename": "crates/rust-analyzer/src/main_loop/request_metrics.rs"}]}