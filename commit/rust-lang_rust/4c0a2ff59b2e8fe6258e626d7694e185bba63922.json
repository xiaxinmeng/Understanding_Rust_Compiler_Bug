{"sha": "4c0a2ff59b2e8fe6258e626d7694e185bba63922", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjMGEyZmY1OWIyZThmZTYyNThlNjI2ZDc2OTRlMTg1YmJhNjM5MjI=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-09-05T18:04:21Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-09-06T15:39:01Z"}, "message": "Don't print Storage{Live,Dead} as comment in debug clif", "tree": {"sha": "c9f6bafb6d0e27e450c4f9f6a34db05aedd4bdd1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9f6bafb6d0e27e450c4f9f6a34db05aedd4bdd1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c0a2ff59b2e8fe6258e626d7694e185bba63922", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c0a2ff59b2e8fe6258e626d7694e185bba63922", "html_url": "https://github.com/rust-lang/rust/commit/4c0a2ff59b2e8fe6258e626d7694e185bba63922", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c0a2ff59b2e8fe6258e626d7694e185bba63922/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb6f10fd11a03449ccb7a08964ea8d459df86066", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb6f10fd11a03449ccb7a08964ea8d459df86066", "html_url": "https://github.com/rust-lang/rust/commit/eb6f10fd11a03449ccb7a08964ea8d459df86066"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "9be04e0c1e70c48fca4704133152ad923293a86a", "filename": "src/base.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/4c0a2ff59b2e8fe6258e626d7694e185bba63922/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c0a2ff59b2e8fe6258e626d7694e185bba63922/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=4c0a2ff59b2e8fe6258e626d7694e185bba63922", "patch": "@@ -254,8 +254,13 @@ fn trans_stmt<'a, 'tcx: 'a>(\n ) {\n     let _print_guard = PrintOnPanic(|| format!(\"stmt {:?}\", stmt));\n \n-    let inst = fx.bcx.func.layout.last_inst(cur_ebb).unwrap();\n-    fx.add_comment(inst, format!(\"{:?}\", stmt));\n+    match &stmt.kind {\n+        StatementKind::StorageLive(..) | StatementKind::StorageDead(..) => {} // Those are not very useful\n+        _ => {\n+            let inst = fx.bcx.func.layout.last_inst(cur_ebb).unwrap();\n+            fx.add_comment(inst, format!(\"{:?}\", stmt));\n+        }\n+    }\n \n     match &stmt.kind {\n         StatementKind::SetDiscriminant {"}]}