{"sha": "46cc6e5fc31377c001a5a12c5079388253eecfbc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ2Y2M2ZTVmYzMxMzc3YzAwMWE1YTEyYzUwNzkzODgyNTNlZWNmYmM=", "commit": {"author": {"name": "Michael Macias", "email": "zaeleus@gmail.com", "date": "2015-04-06T18:56:39Z"}, "committer": {"name": "Michael Macias", "email": "zaeleus@gmail.com", "date": "2015-04-06T19:07:02Z"}, "message": "rustdoc: Use iterators to collapse whitespace\n\nThanks, @alexcrichton!", "tree": {"sha": "90d1607628e2ab006b897195c45f4aa86b4c7534", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90d1607628e2ab006b897195c45f4aa86b4c7534"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/46cc6e5fc31377c001a5a12c5079388253eecfbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/46cc6e5fc31377c001a5a12c5079388253eecfbc", "html_url": "https://github.com/rust-lang/rust/commit/46cc6e5fc31377c001a5a12c5079388253eecfbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/46cc6e5fc31377c001a5a12c5079388253eecfbc/comments", "author": {"login": "zaeleus", "id": 191331, "node_id": "MDQ6VXNlcjE5MTMzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/191331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zaeleus", "html_url": "https://github.com/zaeleus", "followers_url": "https://api.github.com/users/zaeleus/followers", "following_url": "https://api.github.com/users/zaeleus/following{/other_user}", "gists_url": "https://api.github.com/users/zaeleus/gists{/gist_id}", "starred_url": "https://api.github.com/users/zaeleus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zaeleus/subscriptions", "organizations_url": "https://api.github.com/users/zaeleus/orgs", "repos_url": "https://api.github.com/users/zaeleus/repos", "events_url": "https://api.github.com/users/zaeleus/events{/privacy}", "received_events_url": "https://api.github.com/users/zaeleus/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zaeleus", "id": 191331, "node_id": "MDQ6VXNlcjE5MTMzMQ==", "avatar_url": "https://avatars.githubusercontent.com/u/191331?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zaeleus", "html_url": "https://github.com/zaeleus", "followers_url": "https://api.github.com/users/zaeleus/followers", "following_url": "https://api.github.com/users/zaeleus/following{/other_user}", "gists_url": "https://api.github.com/users/zaeleus/gists{/gist_id}", "starred_url": "https://api.github.com/users/zaeleus/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zaeleus/subscriptions", "organizations_url": "https://api.github.com/users/zaeleus/orgs", "repos_url": "https://api.github.com/users/zaeleus/repos", "events_url": "https://api.github.com/users/zaeleus/events{/privacy}", "received_events_url": "https://api.github.com/users/zaeleus/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6c2e82b71ebc6d596f6c7651b22dffa37c4e41b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6c2e82b71ebc6d596f6c7651b22dffa37c4e41b", "html_url": "https://github.com/rust-lang/rust/commit/b6c2e82b71ebc6d596f6c7651b22dffa37c4e41b"}], "stats": {"total": 29, "additions": 8, "deletions": 21}, "files": [{"sha": "49f6107869e27f60c94a2574b956ec4278effcbd", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 8, "deletions": 21, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/46cc6e5fc31377c001a5a12c5079388253eecfbc/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/46cc6e5fc31377c001a5a12c5079388253eecfbc/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=46cc6e5fc31377c001a5a12c5079388253eecfbc", "patch": "@@ -192,25 +192,11 @@ fn stripped_filtered_line<'a>(s: &'a str) -> Option<&'a str> {\n /// Returns a new string with all consecutive whitespace collapsed into\n /// single spaces.\n ///\n-/// The input is assumed to be already trimmed.\n+/// Any leading or trailing whitespace will be trimmed.\n fn collapse_whitespace(s: &str) -> String {\n-    let mut buffer = String::with_capacity(s.len());\n-    let mut previous_char_is_whitespace = false;\n-\n-    for c in s.chars() {\n-        if c.is_whitespace() {\n-            if !previous_char_is_whitespace {\n-                buffer.push(' ');\n-            }\n-\n-            previous_char_is_whitespace = true;\n-        } else {\n-            buffer.push(c);\n-            previous_char_is_whitespace = false;\n-        }\n-    }\n-\n-    buffer\n+    s.split(|c: char| c.is_whitespace()).filter(|s| {\n+        !s.is_empty()\n+    }).collect::<Vec<_>>().connect(\" \")\n }\n \n thread_local!(static USED_HEADER_MAP: RefCell<HashMap<String, usize>> = {\n@@ -623,8 +609,9 @@ mod tests {\n         }\n \n         t(\"foo\", \"foo\");\n-        t(\"foo   bar\", \"foo bar\");\n-        t(\"foo  bar\\nbaz\", \"foo bar baz\");\n-        t(\"foo bar \\n   baz\\t\\tqux\", \"foo bar baz qux\");\n+        t(\"foo bar baz\", \"foo bar baz\");\n+        t(\" foo   bar\", \"foo bar\");\n+        t(\"\\tfoo   bar\\nbaz\", \"foo bar baz\");\n+        t(\"foo   bar \\n   baz\\t\\tqux\\n\", \"foo bar baz qux\");\n     }\n }"}]}