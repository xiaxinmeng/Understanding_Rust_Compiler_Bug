{"sha": "976880aa8493cec9e16b38c24f3113f1bbd91b88", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3Njg4MGFhODQ5M2NlYzllMTZiMzhjMjRmMzExM2YxYmJkOTFiODg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-08T12:21:41Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-10-09T11:08:00Z"}, "message": "dont fail when validating non-local closures", "tree": {"sha": "80bfb6c095cd73b862cbb01ceca44d986f077900", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80bfb6c095cd73b862cbb01ceca44d986f077900"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/976880aa8493cec9e16b38c24f3113f1bbd91b88", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/976880aa8493cec9e16b38c24f3113f1bbd91b88", "html_url": "https://github.com/rust-lang/rust/commit/976880aa8493cec9e16b38c24f3113f1bbd91b88", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/976880aa8493cec9e16b38c24f3113f1bbd91b88/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6899af82fd80bd83a5e580c72c1655ac3d7a86d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6899af82fd80bd83a5e580c72c1655ac3d7a86d3", "html_url": "https://github.com/rust-lang/rust/commit/6899af82fd80bd83a5e580c72c1655ac3d7a86d3"}], "stats": {"total": 12, "additions": 8, "deletions": 4}, "files": [{"sha": "3be710ef39888264401e3c7648a257d5f7255289", "filename": "src/librustc_mir/interpret/validity.rs", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/976880aa8493cec9e16b38c24f3113f1bbd91b88/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/976880aa8493cec9e16b38c24f3113f1bbd91b88/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fvalidity.rs?ref=976880aa8493cec9e16b38c24f3113f1bbd91b88", "patch": "@@ -207,7 +207,7 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n                             bug!(\"Unexpected unsized type tail: {:?}\", tail),\n                     }\n                 }\n-                // for safe ptrs, recursively check\n+                // for safe ptrs, also check the ptr values itself\n                 if !ty.is_unsafe_ptr() {\n                     // Make sure this is non-NULL and aligned\n                     let (size, align) = self.size_and_align_of(place.extra, place.layout)?;\n@@ -556,9 +556,13 @@ impl<'a, 'mir, 'tcx, M: Machine<'a, 'mir, 'tcx>> EvalContext<'a, 'mir, 'tcx, M>\n         match layout.ty.sty {\n             // generators and closures.\n             ty::Closure(def_id, _) | ty::Generator(def_id, _, _) => {\n-                let node_id = self.tcx.hir.as_local_node_id(def_id).unwrap();\n-                let freevar = self.tcx.with_freevars(node_id, |fv| fv[field]);\n-                PathElem::ClosureVar(self.tcx.hir.name(freevar.var_id()))\n+                if let Some(node_id) = self.tcx.hir.as_local_node_id(def_id) {\n+                    let freevar = self.tcx.with_freevars(node_id, |fv| fv[field]);\n+                    PathElem::ClosureVar(self.tcx.hir.name(freevar.var_id()))\n+                } else {\n+                    // The closure is not local, so we cannot get the name\n+                    PathElem::ClosureVar(Symbol::intern(&field.to_string()))\n+                }\n             }\n \n             // tuples"}]}