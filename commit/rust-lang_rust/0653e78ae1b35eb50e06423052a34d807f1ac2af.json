{"sha": "0653e78ae1b35eb50e06423052a34d807f1ac2af", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA2NTNlNzhhZTFiMzVlYjUwZTA2NDIzMDUyYTM0ZDgwN2YxYWMyYWY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-27T06:43:20Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-05-27T18:17:12Z"}, "message": "make Box<str>::clone simpler & safer", "tree": {"sha": "d15f2e0c84cc4272fb6e96a155747c15f53475e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d15f2e0c84cc4272fb6e96a155747c15f53475e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0653e78ae1b35eb50e06423052a34d807f1ac2af", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0653e78ae1b35eb50e06423052a34d807f1ac2af", "html_url": "https://github.com/rust-lang/rust/commit/0653e78ae1b35eb50e06423052a34d807f1ac2af", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0653e78ae1b35eb50e06423052a34d807f1ac2af/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a23a77fb19b24adb22d0a3d3886acac1a7a31f68", "url": "https://api.github.com/repos/rust-lang/rust/commits/a23a77fb19b24adb22d0a3d3886acac1a7a31f68", "html_url": "https://github.com/rust-lang/rust/commit/a23a77fb19b24adb22d0a3d3886acac1a7a31f68"}], "stats": {"total": 6, "additions": 2, "deletions": 4}, "files": [{"sha": "2f45ec7d643f802fe421951d63595023b9b9304d", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0653e78ae1b35eb50e06423052a34d807f1ac2af/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0653e78ae1b35eb50e06423052a34d807f1ac2af/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=0653e78ae1b35eb50e06423052a34d807f1ac2af", "patch": "@@ -395,11 +395,9 @@ impl<T: Clone> Clone for Box<T> {\n #[stable(feature = \"box_slice_clone\", since = \"1.3.0\")]\n impl Clone for Box<str> {\n     fn clone(&self) -> Self {\n-        let len = self.len();\n-        let buf = RawVec::with_capacity(len);\n+        let buf: Box<[u8]> = self.as_bytes().into();\n         unsafe {\n-            ptr::copy_nonoverlapping(self.as_ptr(), buf.ptr(), len);\n-            from_boxed_utf8_unchecked(buf.into_box())\n+            from_boxed_utf8_unchecked(buf)\n         }\n     }\n }"}]}