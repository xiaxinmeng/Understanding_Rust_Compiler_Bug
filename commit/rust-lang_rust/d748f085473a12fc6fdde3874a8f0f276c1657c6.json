{"sha": "d748f085473a12fc6fdde3874a8f0f276c1657c6", "node_id": "C_kwDOAAsO6NoAKGQ3NDhmMDg1NDczYTEyZmM2ZmRkZTM4NzRhOGYwZjI3NmMxNjU3YzY", "commit": {"author": {"name": "Oleksii Lozovskyi", "email": "me@ilammy.net", "date": "2022-09-24T11:02:44Z"}, "committer": {"name": "Oleksii Lozovskyi", "email": "me@ilammy.net", "date": "2023-02-09T03:27:58Z"}, "message": "UI tests for -Z instrument-xray\n\nI'm tired of testing it manually, just codify my expectations in tests.\nThey're pretty low-maintenance.", "tree": {"sha": "140c8c6d953a307ddb3357bae29f8d65c07eddca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/140c8c6d953a307ddb3357bae29f8d65c07eddca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d748f085473a12fc6fdde3874a8f0f276c1657c6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d748f085473a12fc6fdde3874a8f0f276c1657c6", "html_url": "https://github.com/rust-lang/rust/commit/d748f085473a12fc6fdde3874a8f0f276c1657c6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d748f085473a12fc6fdde3874a8f0f276c1657c6/comments", "author": {"login": "ilammy", "id": 1256587, "node_id": "MDQ6VXNlcjEyNTY1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1256587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilammy", "html_url": "https://github.com/ilammy", "followers_url": "https://api.github.com/users/ilammy/followers", "following_url": "https://api.github.com/users/ilammy/following{/other_user}", "gists_url": "https://api.github.com/users/ilammy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilammy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilammy/subscriptions", "organizations_url": "https://api.github.com/users/ilammy/orgs", "repos_url": "https://api.github.com/users/ilammy/repos", "events_url": "https://api.github.com/users/ilammy/events{/privacy}", "received_events_url": "https://api.github.com/users/ilammy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ilammy", "id": 1256587, "node_id": "MDQ6VXNlcjEyNTY1ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/1256587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ilammy", "html_url": "https://github.com/ilammy", "followers_url": "https://api.github.com/users/ilammy/followers", "following_url": "https://api.github.com/users/ilammy/following{/other_user}", "gists_url": "https://api.github.com/users/ilammy/gists{/gist_id}", "starred_url": "https://api.github.com/users/ilammy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ilammy/subscriptions", "organizations_url": "https://api.github.com/users/ilammy/orgs", "repos_url": "https://api.github.com/users/ilammy/repos", "events_url": "https://api.github.com/users/ilammy/events{/privacy}", "received_events_url": "https://api.github.com/users/ilammy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e60df9ed1439cb9d7bcc1a09bf2fc87d03393b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e60df9ed1439cb9d7bcc1a09bf2fc87d03393b1", "html_url": "https://github.com/rust-lang/rust/commit/0e60df9ed1439cb9d7bcc1a09bf2fc87d03393b1"}], "stats": {"total": 42, "additions": 41, "deletions": 1}, "files": [{"sha": "ef3abb9514f24748b8b2af5fceec1de351a6c009", "filename": "src/tools/tidy/src/ui_tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d748f085473a12fc6fdde3874a8f0f276c1657c6/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d748f085473a12fc6fdde3874a8f0f276c1657c6/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs?ref=d748f085473a12fc6fdde3874a8f0f276c1657c6", "patch": "@@ -9,7 +9,7 @@ use std::path::Path;\n \n const ENTRY_LIMIT: usize = 1000;\n // FIXME: The following limits should be reduced eventually.\n-const ROOT_ENTRY_LIMIT: usize = 939;\n+const ROOT_ENTRY_LIMIT: usize = 940;\n const ISSUES_ENTRY_LIMIT: usize = 2001;\n \n fn check_entries(path: &Path, bad: &mut bool) {"}, {"sha": "03274dedd0830e87dbb92f4e884be133c758ff10", "filename": "tests/ui/instrument-xray/flags-always-never-1.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-always-never-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-always-never-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finstrument-xray%2Fflags-always-never-1.rs?ref=d748f085473a12fc6fdde3874a8f0f276c1657c6", "patch": "@@ -0,0 +1,6 @@\n+// Checks that `-Z instrument-xray` does not allow `always` and `never` simultaneously.\n+//\n+// compile-flags: -Z instrument-xray=always,never\n+// error-pattern: incorrect value `always,never` for unstable option `instrument-xray`\n+\n+fn main() {}"}, {"sha": "e211c6f602546cee8d1ca8785b76dc2e540b8e84", "filename": "tests/ui/instrument-xray/flags-always-never-1.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-always-never-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-always-never-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finstrument-xray%2Fflags-always-never-1.stderr?ref=d748f085473a12fc6fdde3874a8f0f276c1657c6", "patch": "@@ -0,0 +1,2 @@\n+error: incorrect value `always,never` for unstable option `instrument-xray` - either a boolean (`yes`, `no`, `on`, `off`, etc), or a comma separated list of settings: `always` or `never` (mutually exclusive), `ignore-loops`, `instruction-threshold=N`, `skip-entry`, `skip-exit` was expected\n+"}, {"sha": "e752890b47ad04991d785d972a689a38e674bb59", "filename": "tests/ui/instrument-xray/flags-always-never-2.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-always-never-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-always-never-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finstrument-xray%2Fflags-always-never-2.rs?ref=d748f085473a12fc6fdde3874a8f0f276c1657c6", "patch": "@@ -0,0 +1,8 @@\n+// Checks that `-Z instrument-xray` allows `always` and `never` sequentially.\n+// (The last specified setting wins, like `-Z instrument-xray=no` as well.)\n+//\n+// compile-flags: -Z instrument-xray=always\n+// compile-flags: -Z instrument-xray=never\n+// check-pass\n+\n+fn main() {}"}, {"sha": "5889a20f670c8e5639304873b2dc4b30bfce42df", "filename": "tests/ui/instrument-xray/flags-basic.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finstrument-xray%2Fflags-basic.rs?ref=d748f085473a12fc6fdde3874a8f0f276c1657c6", "patch": "@@ -0,0 +1,8 @@\n+// Verifies basic `-Z instrument-xray` flags.\n+//\n+// compile-flags: -Z instrument-xray\n+// compile-flags: -Z instrument-xray=skip-exit\n+// compile-flags: -Z instrument-xray=ignore-loops,instruction-threshold=300\n+// check-pass\n+\n+fn main() {}"}, {"sha": "36dda4bbd03f4afaa5156374d02e00aee91a9727", "filename": "tests/ui/instrument-xray/flags-dupe-always.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-dupe-always.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-dupe-always.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finstrument-xray%2Fflags-dupe-always.rs?ref=d748f085473a12fc6fdde3874a8f0f276c1657c6", "patch": "@@ -0,0 +1,6 @@\n+// Checks that `-Z instrument-xray` does not allow duplicates.\n+//\n+// compile-flags: -Z instrument-xray=always,always\n+// error-pattern: incorrect value `always,always` for unstable option `instrument-xray`\n+\n+fn main() {}"}, {"sha": "d1ac113fa43846ffb27e8a44db6b4ffe133bc10d", "filename": "tests/ui/instrument-xray/flags-dupe-always.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-dupe-always.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-dupe-always.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finstrument-xray%2Fflags-dupe-always.stderr?ref=d748f085473a12fc6fdde3874a8f0f276c1657c6", "patch": "@@ -0,0 +1,2 @@\n+error: incorrect value `always,always` for unstable option `instrument-xray` - either a boolean (`yes`, `no`, `on`, `off`, etc), or a comma separated list of settings: `always` or `never` (mutually exclusive), `ignore-loops`, `instruction-threshold=N`, `skip-entry`, `skip-exit` was expected\n+"}, {"sha": "227f8557f42ad48e27e6416562027a5ae3b09420", "filename": "tests/ui/instrument-xray/flags-dupe-ignore-loops.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-dupe-ignore-loops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-dupe-ignore-loops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finstrument-xray%2Fflags-dupe-ignore-loops.rs?ref=d748f085473a12fc6fdde3874a8f0f276c1657c6", "patch": "@@ -0,0 +1,6 @@\n+// Checks that `-Z instrument-xray` does not allow duplicates.\n+//\n+// compile-flags: -Z instrument-xray=ignore-loops,ignore-loops\n+// error-pattern: incorrect value `ignore-loops,ignore-loops` for unstable option `instrument-xray`\n+\n+fn main() {}"}, {"sha": "52f6b33075bc12131bf9395886ab49d3126e6751", "filename": "tests/ui/instrument-xray/flags-dupe-ignore-loops.stderr", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-dupe-ignore-loops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d748f085473a12fc6fdde3874a8f0f276c1657c6/tests%2Fui%2Finstrument-xray%2Fflags-dupe-ignore-loops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Finstrument-xray%2Fflags-dupe-ignore-loops.stderr?ref=d748f085473a12fc6fdde3874a8f0f276c1657c6", "patch": "@@ -0,0 +1,2 @@\n+error: incorrect value `ignore-loops,ignore-loops` for unstable option `instrument-xray` - either a boolean (`yes`, `no`, `on`, `off`, etc), or a comma separated list of settings: `always` or `never` (mutually exclusive), `ignore-loops`, `instruction-threshold=N`, `skip-entry`, `skip-exit` was expected\n+"}]}