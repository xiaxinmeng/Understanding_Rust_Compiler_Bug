{"sha": "f2c1468965a7af5887d353adf77427344327be0d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyYzE0Njg5NjVhN2FmNTg4N2QzNTNhZGY3NzQyNzM0NDMyN2JlMGQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-01-25T01:30:46Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-02-02T12:20:57Z"}, "message": "Add resume arg place to `Yield` MIR terminator", "tree": {"sha": "b8ea8874b28c44ae9b0bdf9ce5f978870f30ed45", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b8ea8874b28c44ae9b0bdf9ce5f978870f30ed45"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2c1468965a7af5887d353adf77427344327be0d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2c1468965a7af5887d353adf77427344327be0d", "html_url": "https://github.com/rust-lang/rust/commit/f2c1468965a7af5887d353adf77427344327be0d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2c1468965a7af5887d353adf77427344327be0d/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2101a1fec0e53677e32d1389b44f70a987a97c8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2101a1fec0e53677e32d1389b44f70a987a97c8d", "html_url": "https://github.com/rust-lang/rust/commit/2101a1fec0e53677e32d1389b44f70a987a97c8d"}], "stats": {"total": 33, "additions": 26, "deletions": 7}, "files": [{"sha": "f6c7174649fe8338333cffdf44155c62811fb407", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f2c1468965a7af5887d353adf77427344327be0d/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2c1468965a7af5887d353adf77427344327be0d/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=f2c1468965a7af5887d353adf77427344327be0d", "patch": "@@ -1120,6 +1120,8 @@ pub enum TerminatorKind<'tcx> {\n         value: Operand<'tcx>,\n         /// Where to resume to.\n         resume: BasicBlock,\n+        /// The place to store the resume argument in.\n+        resume_arg: Place<'tcx>,\n         /// Cleanup to be done if the generator is dropped at this suspend point.\n         drop: Option<BasicBlock>,\n     },\n@@ -2645,9 +2647,12 @@ impl<'tcx> TypeFoldable<'tcx> for Terminator<'tcx> {\n                 target,\n                 unwind,\n             },\n-            Yield { ref value, resume, drop } => {\n-                Yield { value: value.fold_with(folder), resume: resume, drop: drop }\n-            }\n+            Yield { ref value, resume, ref resume_arg, drop } => Yield {\n+                value: value.fold_with(folder),\n+                resume,\n+                resume_arg: resume_arg.fold_with(folder),\n+                drop,\n+            },\n             Call { ref func, ref args, ref destination, cleanup, from_hir_call } => {\n                 let dest =\n                     destination.as_ref().map(|&(ref loc, dest)| (loc.fold_with(folder), dest));"}, {"sha": "2f094516a35d9e561003333775602be3da75aa05", "filename": "src/librustc/mir/visit.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f2c1468965a7af5887d353adf77427344327be0d/src%2Flibrustc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2c1468965a7af5887d353adf77427344327be0d/src%2Flibrustc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fvisit.rs?ref=f2c1468965a7af5887d353adf77427344327be0d", "patch": "@@ -516,8 +516,14 @@ macro_rules! make_mir_visitor {\n                     TerminatorKind::Yield {\n                         value,\n                         resume: _,\n+                        resume_arg,\n                         drop: _,\n                     } => {\n+                        self.visit_place(\n+                            resume_arg,\n+                            PlaceContext::MutatingUse(MutatingUseContext::Store),\n+                            source_location,\n+                        );\n                         self.visit_operand(value, source_location);\n                     }\n "}, {"sha": "392f164d3148c49434e54a5cd7f4637712dc8bed", "filename": "src/librustc_mir/borrow_check/invalidation.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2c1468965a7af5887d353adf77427344327be0d/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2c1468965a7af5887d353adf77427344327be0d/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Finvalidation.rs?ref=f2c1468965a7af5887d353adf77427344327be0d", "patch": "@@ -159,7 +159,7 @@ impl<'cx, 'tcx> Visitor<'tcx> for InvalidationGenerator<'cx, 'tcx> {\n                     self.consume_operand(location, index);\n                 }\n             }\n-            TerminatorKind::Yield { ref value, resume, drop: _ } => {\n+            TerminatorKind::Yield { ref value, resume, resume_arg, drop: _ } => {\n                 self.consume_operand(location, value);\n \n                 // Invalidate all borrows of local places\n@@ -170,6 +170,8 @@ impl<'cx, 'tcx> Visitor<'tcx> for InvalidationGenerator<'cx, 'tcx> {\n                         self.all_facts.invalidates.push((resume, i));\n                     }\n                 }\n+\n+                self.mutate_place(location, resume_arg, Deep, JustWrite);\n             }\n             TerminatorKind::Resume | TerminatorKind::Return | TerminatorKind::GeneratorDrop => {\n                 // Invalidate all borrows of local places"}, {"sha": "e528159fcef17d4a373db566c3bd5095fab56e71", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2c1468965a7af5887d353adf77427344327be0d/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2c1468965a7af5887d353adf77427344327be0d/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=f2c1468965a7af5887d353adf77427344327be0d", "patch": "@@ -684,7 +684,7 @@ impl<'cx, 'tcx> DataflowResultsConsumer<'cx, 'tcx> for MirBorrowckCtxt<'cx, 'tcx\n                 }\n             }\n \n-            TerminatorKind::Yield { ref value, resume: _, drop: _ } => {\n+            TerminatorKind::Yield { ref value, resume: _, ref resume_arg, drop: _ } => {\n                 self.consume_operand(loc, (value, span), flow_state);\n \n                 if self.movable_generator {\n@@ -697,6 +697,8 @@ impl<'cx, 'tcx> DataflowResultsConsumer<'cx, 'tcx> for MirBorrowckCtxt<'cx, 'tcx\n                         }\n                     });\n                 }\n+\n+                self.mutate_place(loc, (resume_arg, span), Deep, JustWrite, flow_state);\n             }\n \n             TerminatorKind::Resume | TerminatorKind::Return | TerminatorKind::GeneratorDrop => {"}, {"sha": "f6e3ca2f80900d2a555e386621bbca4d8f44d6bf", "filename": "src/librustc_mir/borrow_check/universal_regions.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2c1468965a7af5887d353adf77427344327be0d/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2c1468965a7af5887d353adf77427344327be0d/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Funiversal_regions.rs?ref=f2c1468965a7af5887d353adf77427344327be0d", "patch": "@@ -581,9 +581,11 @@ impl<'cx, 'tcx> UniversalRegionsBuilder<'cx, 'tcx> {\n \n             DefiningTy::Generator(def_id, substs, movability) => {\n                 assert_eq!(self.mir_def_id, def_id);\n+                let resume_ty = substs.as_generator().resume_ty(def_id, tcx);\n                 let output = substs.as_generator().return_ty(def_id, tcx);\n                 let generator_ty = tcx.mk_generator(def_id, substs, movability);\n-                let inputs_and_output = self.infcx.tcx.intern_type_list(&[generator_ty, output]);\n+                let inputs_and_output =\n+                    self.infcx.tcx.intern_type_list(&[generator_ty, resume_ty, output]);\n                 ty::Binder::dummy(inputs_and_output)\n             }\n "}, {"sha": "6f8caca5e21ef1125ee66f2dfd25b798ac2f7542", "filename": "src/librustc_mir/dataflow/move_paths/builder.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2c1468965a7af5887d353adf77427344327be0d/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2c1468965a7af5887d353adf77427344327be0d/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fmove_paths%2Fbuilder.rs?ref=f2c1468965a7af5887d353adf77427344327be0d", "patch": "@@ -380,7 +380,9 @@ impl<'b, 'a, 'tcx> Gatherer<'b, 'a, 'tcx> {\n                 self.gather_operand(discr);\n             }\n \n-            TerminatorKind::Yield { ref value, .. } => {\n+            TerminatorKind::Yield { ref value, resume_arg: ref place, .. } => {\n+                self.create_move_path(place);\n+                self.gather_init(place.as_ref(), InitKind::Deep);\n                 self.gather_operand(value);\n             }\n "}]}