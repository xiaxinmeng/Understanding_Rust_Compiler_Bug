{"sha": "7885dfc62385b722e04067b2d5c26aeea429fb02", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ODVkZmM2MjM4NWI3MjJlMDQwNjdiMmQ1YzI2YWVlYTQyOWZiMDI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-05-19T00:31:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-05-19T00:31:32Z"}, "message": "Rollup merge of #60370 - Richard-W:const-layout-construction, r=sfackler\n\nMark core::alloc::Layout::from_size_align_unchecked const\n\nMakes it possible (pending stabilization of #57563 (`const_fn`)) to rewrite code like\n\n```rust\nconst BUFFER_SIZE: usize = 0x2000;\nconst BUFFER_ALIGN: usize = 0x1000;\n\nfn foo() {\n  let layout = std::alloc::Layout::from_size_align(BUFFER_SIZE, BUFFER_ALIGN)\n    .unwrap();\n  let buffer = std::alloc::alloc(layout);\n}\n```\nto\n```rust\nconst BUFFER_LAYOUT: std::alloc::Layout = unsafe {\n  std::alloc::Layout::from_size_align_unchecked(0x2000, 0x1000)\n};\n\nfn foo() {\n  let buffer = std::alloc::alloc(BUFFER_LAYOUT);\n}\n```\n\nwhich (although `unsafe` is used) looks somewhat cleaner and is easier to read.", "tree": {"sha": "0e2763a862c5adba15a38f940376f81ac71e92fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0e2763a862c5adba15a38f940376f81ac71e92fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7885dfc62385b722e04067b2d5c26aeea429fb02", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc4KPlCRBK7hj4Ov3rIwAAdHIIAKSUhpjtnTJCCtB9KjtYPwkr\nHnQkn574YeK9KR5CZZZctu6GvjJMGtD5UcSd1VYFhRGmu0vuWhuZLzfm4mnezbLb\nb/Ftw91GnI3M0RwYRUhCQ/Nd5ikbt2zGccEpVEFijieZjLPXrGXW8sOyclbvOhqO\nWhJoe8C7BuD6uGUZHVGVUGiDTrhMC3aHwSFie58HTRZJjO6Fo593VcOmwR6vZzrw\ngf3gUBneI2t2woVW+rAf0uwuVNMJjZoz/b5j1ecpr1fN4hEj/KpHP4Vc/AU/fSgH\nKPkyekvgLeddfyyzzQvo66FViyFBiRIfvslY4oAqM2mx5FG0Oy2syjTmwEJt50M=\n=x6X4\n-----END PGP SIGNATURE-----\n", "payload": "tree 0e2763a862c5adba15a38f940376f81ac71e92fd\nparent 963184bbb670c1ffa97fc28a98cd5e8473118859\nparent c0b6d3c975915e740548f0ec7bcf5963e7a3b218\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1558225892 +0200\ncommitter GitHub <noreply@github.com> 1558225892 +0200\n\nRollup merge of #60370 - Richard-W:const-layout-construction, r=sfackler\n\nMark core::alloc::Layout::from_size_align_unchecked const\n\nMakes it possible (pending stabilization of #57563 (`const_fn`)) to rewrite code like\n\n```rust\nconst BUFFER_SIZE: usize = 0x2000;\nconst BUFFER_ALIGN: usize = 0x1000;\n\nfn foo() {\n  let layout = std::alloc::Layout::from_size_align(BUFFER_SIZE, BUFFER_ALIGN)\n    .unwrap();\n  let buffer = std::alloc::alloc(layout);\n}\n```\nto\n```rust\nconst BUFFER_LAYOUT: std::alloc::Layout = unsafe {\n  std::alloc::Layout::from_size_align_unchecked(0x2000, 0x1000)\n};\n\nfn foo() {\n  let buffer = std::alloc::alloc(BUFFER_LAYOUT);\n}\n```\n\nwhich (although `unsafe` is used) looks somewhat cleaner and is easier to read.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7885dfc62385b722e04067b2d5c26aeea429fb02", "html_url": "https://github.com/rust-lang/rust/commit/7885dfc62385b722e04067b2d5c26aeea429fb02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7885dfc62385b722e04067b2d5c26aeea429fb02/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "963184bbb670c1ffa97fc28a98cd5e8473118859", "url": "https://api.github.com/repos/rust-lang/rust/commits/963184bbb670c1ffa97fc28a98cd5e8473118859", "html_url": "https://github.com/rust-lang/rust/commit/963184bbb670c1ffa97fc28a98cd5e8473118859"}, {"sha": "c0b6d3c975915e740548f0ec7bcf5963e7a3b218", "url": "https://api.github.com/repos/rust-lang/rust/commits/c0b6d3c975915e740548f0ec7bcf5963e7a3b218", "html_url": "https://github.com/rust-lang/rust/commit/c0b6d3c975915e740548f0ec7bcf5963e7a3b218"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "302a9d89e5854009b50908a38e914c965c297412", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7885dfc62385b722e04067b2d5c26aeea429fb02/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7885dfc62385b722e04067b2d5c26aeea429fb02/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=7885dfc62385b722e04067b2d5c26aeea429fb02", "patch": "@@ -99,7 +99,7 @@ impl Layout {\n     /// [`Layout::from_size_align`](#method.from_size_align).\n     #[stable(feature = \"alloc_layout\", since = \"1.28.0\")]\n     #[inline]\n-    pub unsafe fn from_size_align_unchecked(size: usize, align: usize) -> Self {\n+    pub const unsafe fn from_size_align_unchecked(size: usize, align: usize) -> Self {\n         Layout { size_: size, align_: NonZeroUsize::new_unchecked(align) }\n     }\n "}, {"sha": "63537ba23d84dc0edfabc9384a45e7a7a2249b7b", "filename": "src/libcore/tests/alloc.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7885dfc62385b722e04067b2d5c26aeea429fb02/src%2Flibcore%2Ftests%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7885dfc62385b722e04067b2d5c26aeea429fb02/src%2Flibcore%2Ftests%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Falloc.rs?ref=7885dfc62385b722e04067b2d5c26aeea429fb02", "patch": "@@ -0,0 +1,10 @@\n+use core::alloc::Layout;\n+\n+#[test]\n+fn const_unchecked_layout() {\n+    const SIZE: usize = 0x2000;\n+    const ALIGN: usize = 0x1000;\n+    const LAYOUT: Layout = unsafe { Layout::from_size_align_unchecked(SIZE, ALIGN) };\n+    assert_eq!(LAYOUT.size(), SIZE);\n+    assert_eq!(LAYOUT.align(), ALIGN);\n+}"}, {"sha": "c617596aba80159af2ecb5f3c4967bc099897f8f", "filename": "src/libcore/tests/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7885dfc62385b722e04067b2d5c26aeea429fb02/src%2Flibcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7885dfc62385b722e04067b2d5c26aeea429fb02/src%2Flibcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Flib.rs?ref=7885dfc62385b722e04067b2d5c26aeea429fb02", "patch": "@@ -31,10 +31,12 @@\n #![feature(slice_partition_dedup)]\n #![feature(copy_within)]\n #![feature(int_error_matching)]\n+#![feature(const_fn)]\n #![warn(rust_2018_idioms)]\n \n extern crate test;\n \n+mod alloc;\n mod any;\n mod array;\n mod ascii;"}, {"sha": "65ac7e44926d0dc175cd8bafac9b138445b15ed6", "filename": "src/test/ui/consts/std/alloc.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7885dfc62385b722e04067b2d5c26aeea429fb02/src%2Ftest%2Fui%2Fconsts%2Fstd%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7885dfc62385b722e04067b2d5c26aeea429fb02/src%2Ftest%2Fui%2Fconsts%2Fstd%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstd%2Falloc.rs?ref=7885dfc62385b722e04067b2d5c26aeea429fb02", "patch": "@@ -0,0 +1,10 @@\n+use std::alloc::Layout;\n+\n+// ok\n+const LAYOUT_VALID: Layout = unsafe { Layout::from_size_align_unchecked(0x1000, 0x08) };\n+\n+// not ok, since alignment needs to be non-zero.\n+const LAYOUT_INVALID: Layout = unsafe { Layout::from_size_align_unchecked(0x1000, 0x00) };\n+//~^ ERROR it is undefined behavior to use this value\n+\n+fn main() {}"}, {"sha": "74a8f3daf6aaa94ffd376a0bf16e2ffb4c7328e8", "filename": "src/test/ui/consts/std/alloc.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/7885dfc62385b722e04067b2d5c26aeea429fb02/src%2Ftest%2Fui%2Fconsts%2Fstd%2Falloc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7885dfc62385b722e04067b2d5c26aeea429fb02/src%2Ftest%2Fui%2Fconsts%2Fstd%2Falloc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fstd%2Falloc.stderr?ref=7885dfc62385b722e04067b2d5c26aeea429fb02", "patch": "@@ -0,0 +1,11 @@\n+error[E0080]: it is undefined behavior to use this value\n+  --> $DIR/alloc.rs:7:1\n+   |\n+LL | const LAYOUT_INVALID: Layout = unsafe { Layout::from_size_align_unchecked(0x1000, 0x00) };\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ type validation failed: encountered 0 at .align_, but expected something greater or equal to 1\n+   |\n+   = note: The rules on what exactly is undefined behavior aren't clear, so this check might be overzealous. Please open an issue on the rust compiler repository if you believe it should not be considered undefined behavior\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0080`."}]}