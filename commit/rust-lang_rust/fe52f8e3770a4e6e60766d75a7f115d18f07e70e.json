{"sha": "fe52f8e3770a4e6e60766d75a7f115d18f07e70e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlNTJmOGUzNzcwYTRlNmU2MDc2NmQ3NWE3ZjExNWQxOGYwN2U3MGU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-04-28T12:17:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-04-28T12:17:12Z"}, "message": "Rollup merge of #60347 - JohnTitor:remove-flags, r=matthewjasper\n\nRemove `-Z two-phase-borrows` and `-Z two-phase-beyond-autoref`\n\nfixes #60331", "tree": {"sha": "1bdc7330e6d5a9c8f4453961b0072b6c3e7e72e0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1bdc7330e6d5a9c8f4453961b0072b6c3e7e72e0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe52f8e3770a4e6e60766d75a7f115d18f07e70e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcxZnICRBK7hj4Ov3rIwAAdHIIAFMzZLxhbP29+tLV37/Q7OKp\n4b6iUNfXmyWu+uieh0T7N+tIbfbyVbSPFlbVuxg0fduvEhG4ZXqtHkegPu3+ePoZ\nWzOrffa799mpSoqjAnpB9NkYIMXhm4Y5JKUmxAwR/O3bRmAhkw6EzNVbKcr1IMe/\nwmmCvwy6pVdxejKunueWpPlnarqJoy5NABF7B45RPduKya21OUMkdg730xqlL3FO\n7B9czryCpY3wD7GKT7JhhgSBmXeT+TXCvrPOkCGw4SSGWkCyQjE15Jqs9rQtWXAL\nh9i6a4uRgLO8w+tspVWoSm6cnBF0tniALcUqfbgbVC1GUJ4147uAFKcWcz6Dxgo=\n=aWwY\n-----END PGP SIGNATURE-----\n", "payload": "tree 1bdc7330e6d5a9c8f4453961b0072b6c3e7e72e0\nparent 634e2daaa5f02a2637a54276442ae0a4984dfded\nparent 3a487ea977773e11c3a9d6b3a0c965db46bfb5ec\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1556453832 +0200\ncommitter GitHub <noreply@github.com> 1556453832 +0200\n\nRollup merge of #60347 - JohnTitor:remove-flags, r=matthewjasper\n\nRemove `-Z two-phase-borrows` and `-Z two-phase-beyond-autoref`\n\nfixes #60331\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe52f8e3770a4e6e60766d75a7f115d18f07e70e", "html_url": "https://github.com/rust-lang/rust/commit/fe52f8e3770a4e6e60766d75a7f115d18f07e70e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe52f8e3770a4e6e60766d75a7f115d18f07e70e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "634e2daaa5f02a2637a54276442ae0a4984dfded", "url": "https://api.github.com/repos/rust-lang/rust/commits/634e2daaa5f02a2637a54276442ae0a4984dfded", "html_url": "https://github.com/rust-lang/rust/commit/634e2daaa5f02a2637a54276442ae0a4984dfded"}, {"sha": "3a487ea977773e11c3a9d6b3a0c965db46bfb5ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a487ea977773e11c3a9d6b3a0c965db46bfb5ec", "html_url": "https://github.com/rust-lang/rust/commit/3a487ea977773e11c3a9d6b3a0c965db46bfb5ec"}], "stats": {"total": 17, "additions": 3, "deletions": 14}, "files": [{"sha": "262f507f8eead8457f6b9cccb78f9089bbaecb2e", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/fe52f8e3770a4e6e60766d75a7f115d18f07e70e/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe52f8e3770a4e6e60766d75a7f115d18f07e70e/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=fe52f8e3770a4e6e60766d75a7f115d18f07e70e", "patch": "@@ -1215,10 +1215,6 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"make unnamed regions display as '# (where # is some non-ident unique id)\"),\n     borrowck: Option<String> = (None, parse_opt_string, [UNTRACKED],\n         \"select which borrowck is used (`ast`, `mir`, `migrate`, or `compare`)\"),\n-    two_phase_borrows: bool = (false, parse_bool, [UNTRACKED],\n-        \"use two-phase reserved/active distinction for `&mut` borrows in MIR borrowck\"),\n-    two_phase_beyond_autoref: bool = (false, parse_bool, [UNTRACKED],\n-        \"when using two-phase-borrows, allow two phases even for non-autoref `&mut` borrows\"),\n     time_passes: bool = (false, parse_bool, [UNTRACKED],\n         \"measure time of each rustc pass\"),\n     time: bool = (false, parse_bool, [UNTRACKED],"}, {"sha": "c8d6ee9db6f9e73370c0515bfde18fa04d7312f3", "filename": "src/librustc_mir/borrow_check/borrow_set.rs", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fe52f8e3770a4e6e60766d75a7f115d18f07e70e/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe52f8e3770a4e6e60766d75a7f115d18f07e70e/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fborrow_set.rs?ref=fe52f8e3770a4e6e60766d75a7f115d18f07e70e", "patch": "@@ -1,5 +1,6 @@\n use crate::borrow_check::place_ext::PlaceExt;\n use crate::borrow_check::nll::ToRegionVid;\n+use crate::borrow_check::path_utils::allow_two_phase_borrow;\n use crate::dataflow::indexes::BorrowIndex;\n use crate::dataflow::move_paths::MoveData;\n use rustc::mir::traversal;\n@@ -299,13 +300,6 @@ impl<'a, 'gcx, 'tcx> Visitor<'tcx> for GatherBorrows<'a, 'gcx, 'tcx> {\n }\n \n impl<'a, 'gcx, 'tcx> GatherBorrows<'a, 'gcx, 'tcx> {\n-    /// Returns `true` if the borrow represented by `kind` is\n-    /// allowed to be split into separate Reservation and\n-    /// Activation phases.\n-    fn allow_two_phase_borrow(&self, kind: mir::BorrowKind) -> bool {\n-        kind.allows_two_phase_borrow()\n-            || self.tcx.sess.opts.debugging_opts.two_phase_beyond_autoref\n-    }\n \n     /// If this is a two-phase borrow, then we will record it\n     /// as \"pending\" until we find the activating use.\n@@ -321,7 +315,7 @@ impl<'a, 'gcx, 'tcx> GatherBorrows<'a, 'gcx, 'tcx> {\n             start_location, assigned_place, borrow_index,\n         );\n \n-        if !self.allow_two_phase_borrow(kind) {\n+        if !allow_two_phase_borrow(&self.tcx, kind) {\n             debug!(\"  -> {:?}\", start_location);\n             return;\n         }"}, {"sha": "f6a22cf040797b19d3b61f55d4b2a484ef2f488d", "filename": "src/librustc_mir/borrow_check/path_utils.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/fe52f8e3770a4e6e60766d75a7f115d18f07e70e/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe52f8e3770a4e6e60766d75a7f115d18f07e70e/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fpath_utils.rs?ref=fe52f8e3770a4e6e60766d75a7f115d18f07e70e", "patch": "@@ -12,11 +12,10 @@ use rustc_data_structures::graph::dominators::Dominators;\n /// allowed to be split into separate Reservation and\n /// Activation phases.\n pub(super) fn allow_two_phase_borrow<'a, 'tcx, 'gcx: 'tcx>(\n-    tcx: &TyCtxt<'a, 'gcx, 'tcx>,\n+    _tcx: &TyCtxt<'a, 'gcx, 'tcx>,\n     kind: BorrowKind\n ) -> bool {\n     kind.allows_two_phase_borrow()\n-        || tcx.sess.opts.debugging_opts.two_phase_beyond_autoref\n }\n \n /// Control for the path borrow checking code"}]}