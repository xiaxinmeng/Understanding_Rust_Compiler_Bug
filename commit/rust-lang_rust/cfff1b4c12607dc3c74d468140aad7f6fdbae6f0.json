{"sha": "cfff1b4c12607dc3c74d468140aad7f6fdbae6f0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmZmYxYjRjMTI2MDdkYzNjNzRkNDY4MTQwYWFkN2Y2ZmRiYWU2ZjA=", "commit": {"author": {"name": "12101111", "email": "w12101111@gmail.com", "date": "2020-03-10T07:36:23Z"}, "committer": {"name": "12101111", "email": "w12101111@gmail.com", "date": "2020-03-10T07:36:23Z"}, "message": "When `crate_type` is `None`,check compiler options", "tree": {"sha": "02237b5596937474e2d5c0ed6dab5fa814d7571d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02237b5596937474e2d5c0ed6dab5fa814d7571d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cfff1b4c12607dc3c74d468140aad7f6fdbae6f0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cfff1b4c12607dc3c74d468140aad7f6fdbae6f0", "html_url": "https://github.com/rust-lang/rust/commit/cfff1b4c12607dc3c74d468140aad7f6fdbae6f0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cfff1b4c12607dc3c74d468140aad7f6fdbae6f0/comments", "author": {"login": "12101111", "id": 8438475, "node_id": "MDQ6VXNlcjg0Mzg0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/8438475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/12101111", "html_url": "https://github.com/12101111", "followers_url": "https://api.github.com/users/12101111/followers", "following_url": "https://api.github.com/users/12101111/following{/other_user}", "gists_url": "https://api.github.com/users/12101111/gists{/gist_id}", "starred_url": "https://api.github.com/users/12101111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/12101111/subscriptions", "organizations_url": "https://api.github.com/users/12101111/orgs", "repos_url": "https://api.github.com/users/12101111/repos", "events_url": "https://api.github.com/users/12101111/events{/privacy}", "received_events_url": "https://api.github.com/users/12101111/received_events", "type": "User", "site_admin": false}, "committer": {"login": "12101111", "id": 8438475, "node_id": "MDQ6VXNlcjg0Mzg0NzU=", "avatar_url": "https://avatars.githubusercontent.com/u/8438475?v=4", "gravatar_id": "", "url": "https://api.github.com/users/12101111", "html_url": "https://github.com/12101111", "followers_url": "https://api.github.com/users/12101111/followers", "following_url": "https://api.github.com/users/12101111/following{/other_user}", "gists_url": "https://api.github.com/users/12101111/gists{/gist_id}", "starred_url": "https://api.github.com/users/12101111/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/12101111/subscriptions", "organizations_url": "https://api.github.com/users/12101111/orgs", "repos_url": "https://api.github.com/users/12101111/repos", "events_url": "https://api.github.com/users/12101111/events{/privacy}", "received_events_url": "https://api.github.com/users/12101111/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "75e6cfc79b39253ee0e4fafc7805c7b0a1f24ef2", "url": "https://api.github.com/repos/rust-lang/rust/commits/75e6cfc79b39253ee0e4fafc7805c7b0a1f24ef2", "html_url": "https://github.com/rust-lang/rust/commit/75e6cfc79b39253ee0e4fafc7805c7b0a1f24ef2"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ef09813b6ca9e26d87208bd789f83126e3f48f84", "filename": "src/librustc_session/session.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cfff1b4c12607dc3c74d468140aad7f6fdbae6f0/src%2Flibrustc_session%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cfff1b4c12607dc3c74d468140aad7f6fdbae6f0/src%2Flibrustc_session%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Fsession.rs?ref=cfff1b4c12607dc3c74d468140aad7f6fdbae6f0", "patch": "@@ -559,7 +559,7 @@ impl Session {\n         if found_positive || found_negative {\n             found_positive\n         } else if crate_type == Some(config::CrateType::ProcMacro)\n-            || self.opts.crate_types.contains(&config::CrateType::ProcMacro)\n+            || crate_type == None && self.opts.crate_types.contains(&config::CrateType::ProcMacro)\n         {\n             // FIXME: When crate_type is not available,\n             // we use compiler options to determine the crate_type."}]}