{"sha": "05427457680eb41b86b98101b8f037825b46458c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1NDI3NDU3NjgwZWI0MWI4NmI5ODEwMWI4ZjAzNzgyNWI0NjQ1OGM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-10T01:05:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-02-10T01:05:42Z"}, "message": "Auto merge of #31438 - aturon:stab-ip-addr, r=alexcrichton\n\nAfter [considerable pushback](https://github.com/rust-lang/rfcs/issues/1451), it's clear that there is a community consensus around providing `IpAddr` in the standard library, together with other APIs using it.\n\nThis commit reverts from deprecated status directly to stable. The deprecation landed in 1.6, which has already been released, so the stabilization is marked for 1.7 (currently in beta; will require a backport).\n\nr? @alexcrichton", "tree": {"sha": "10b2313a15883e6b6245f1f5c83e8f4ef4ccadb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10b2313a15883e6b6245f1f5c83e8f4ef4ccadb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05427457680eb41b86b98101b8f037825b46458c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05427457680eb41b86b98101b8f037825b46458c", "html_url": "https://github.com/rust-lang/rust/commit/05427457680eb41b86b98101b8f037825b46458c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05427457680eb41b86b98101b8f037825b46458c/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "32b2ef7add2836cba5867d2e5ac9610cef416447", "url": "https://api.github.com/repos/rust-lang/rust/commits/32b2ef7add2836cba5867d2e5ac9610cef416447", "html_url": "https://github.com/rust-lang/rust/commit/32b2ef7add2836cba5867d2e5ac9610cef416447"}, {"sha": "2067c570fb37623abc6effc3752a682795dfc83e", "url": "https://api.github.com/repos/rust-lang/rust/commits/2067c570fb37623abc6effc3752a682795dfc83e", "html_url": "https://github.com/rust-lang/rust/commit/2067c570fb37623abc6effc3752a682795dfc83e"}], "stats": {"total": 30, "additions": 8, "deletions": 22}, "files": [{"sha": "751b9b1802cfc36ff948385c88cdc2e3c1ba4f09", "filename": "src/libstd/net/addr.rs", "status": "modified", "additions": 3, "deletions": 12, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/05427457680eb41b86b98101b8f037825b46458c/src%2Flibstd%2Fnet%2Faddr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05427457680eb41b86b98101b8f037825b46458c/src%2Flibstd%2Fnet%2Faddr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Faddr.rs?ref=05427457680eb41b86b98101b8f037825b46458c", "patch": "@@ -14,9 +14,7 @@ use fmt;\n use hash;\n use io;\n use mem;\n-use net::{lookup_host, ntoh, hton, Ipv4Addr, Ipv6Addr};\n-#[allow(deprecated)]\n-use net::IpAddr;\n+use net::{lookup_host, ntoh, hton, IpAddr, Ipv4Addr, Ipv6Addr};\n use option;\n use sys::net::netc as c;\n use sys_common::{FromInner, AsInner, IntoInner};\n@@ -52,10 +50,7 @@ pub struct SocketAddrV6 { inner: c::sockaddr_in6 }\n \n impl SocketAddr {\n     /// Creates a new socket address from the (ip, port) pair.\n-    #[unstable(feature = \"ip_addr\", reason = \"recent addition\", issue = \"27801\")]\n-    #[rustc_deprecated(reason = \"ip type too small a type to pull its weight\",\n-                       since = \"1.6.0\")]\n-    #[allow(deprecated)]\n+    #[stable(feature = \"ip_addr\", since = \"1.7.0\")]\n     pub fn new(ip: IpAddr, port: u16) -> SocketAddr {\n         match ip {\n             IpAddr::V4(a) => SocketAddr::V4(SocketAddrV4::new(a, port)),\n@@ -64,10 +59,7 @@ impl SocketAddr {\n     }\n \n     /// Returns the IP address associated with this socket address.\n-    #[unstable(feature = \"ip_addr\", reason = \"recent addition\", issue = \"27801\")]\n-    #[rustc_deprecated(reason = \"too small a type to pull its weight\",\n-                       since = \"1.6.0\")]\n-    #[allow(deprecated)]\n+    #[stable(feature = \"ip_addr\", since = \"1.7.0\")]\n     pub fn ip(&self) -> IpAddr {\n         match *self {\n             SocketAddr::V4(ref a) => IpAddr::V4(*a.ip()),\n@@ -361,7 +353,6 @@ impl ToSocketAddrs for SocketAddrV6 {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[allow(deprecated)]\n impl ToSocketAddrs for (IpAddr, u16) {\n     type Iter = option::IntoIter<SocketAddr>;\n     fn to_socket_addrs(&self) -> io::Result<option::IntoIter<SocketAddr>> {"}, {"sha": "8a4d7e3e2c2a5dfa00beb52de633176e3d5c46da", "filename": "src/libstd/net/ip.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/05427457680eb41b86b98101b8f037825b46458c/src%2Flibstd%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05427457680eb41b86b98101b8f037825b46458c/src%2Flibstd%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fip.rs?ref=05427457680eb41b86b98101b8f037825b46458c", "patch": "@@ -22,16 +22,15 @@ use sys::net::netc as c;\n use sys_common::{AsInner, FromInner};\n \n /// An IP address, either an IPv4 or IPv6 address.\n-#[unstable(feature = \"ip_addr\", reason = \"recent addition\", issue = \"27801\")]\n-#[rustc_deprecated(reason = \"too small a type to pull its weight\",\n-                   since = \"1.6.0\")]\n+#[stable(feature = \"ip_addr\", since = \"1.7.0\")]\n #[derive(Copy, Clone, Eq, PartialEq, Debug, Hash, PartialOrd, Ord)]\n-#[allow(deprecated)]\n pub enum IpAddr {\n     /// Representation of an IPv4 address.\n-    V4(Ipv4Addr),\n+    #[stable(feature = \"ip_addr\", since = \"1.7.0\")]\n+    V4(#[cfg_attr(not(stage0), stable(feature = \"rust1\", since = \"1.7.0\"))] Ipv4Addr),\n     /// Representation of an IPv6 address.\n-    V6(Ipv6Addr),\n+    #[stable(feature = \"ip_addr\", since = \"1.7.0\")]\n+    V6(#[cfg_attr(not(stage0), stable(feature = \"rust1\", since = \"1.7.0\"))] Ipv6Addr),\n }\n \n /// Representation of an IPv4 address."}, {"sha": "d263bf38495c14dfa161720142f95fad3e7c6e1a", "filename": "src/libstd/net/mod.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/05427457680eb41b86b98101b8f037825b46458c/src%2Flibstd%2Fnet%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05427457680eb41b86b98101b8f037825b46458c/src%2Flibstd%2Fnet%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fmod.rs?ref=05427457680eb41b86b98101b8f037825b46458c", "patch": "@@ -18,7 +18,6 @@ use io::{self, Error, ErrorKind};\n use sys_common::net as net_imp;\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[allow(deprecated)]\n pub use self::ip::{IpAddr, Ipv4Addr, Ipv6Addr, Ipv6MulticastScope};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::addr::{SocketAddr, SocketAddrV4, SocketAddrV6, ToSocketAddrs};"}, {"sha": "46a0309dbb509de503a154b8acf6f91e19e94112", "filename": "src/libstd/net/parser.rs", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/05427457680eb41b86b98101b8f037825b46458c/src%2Flibstd%2Fnet%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05427457680eb41b86b98101b8f037825b46458c/src%2Flibstd%2Fnet%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Fparser.rs?ref=05427457680eb41b86b98101b8f037825b46458c", "patch": "@@ -17,7 +17,6 @@ use prelude::v1::*;\n \n use error::Error;\n use fmt;\n-#[allow(deprecated)]\n use net::{IpAddr, Ipv4Addr, Ipv6Addr, SocketAddr, SocketAddrV4, SocketAddrV6};\n use str::FromStr;\n \n@@ -262,7 +261,6 @@ impl<'a> Parser<'a> {\n         self.read_atomically(|p| p.read_ipv6_addr_impl())\n     }\n \n-    #[allow(deprecated)]\n     fn read_ip_addr(&mut self) -> Option<IpAddr> {\n         let ipv4_addr = |p: &mut Parser| p.read_ipv4_addr().map(IpAddr::V4);\n         let ipv6_addr = |p: &mut Parser| p.read_ipv6_addr().map(IpAddr::V6);\n@@ -308,7 +306,6 @@ impl<'a> Parser<'a> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[allow(deprecated)]\n impl FromStr for IpAddr {\n     type Err = AddrParseError;\n     fn from_str(s: &str) -> Result<IpAddr, AddrParseError> {"}]}