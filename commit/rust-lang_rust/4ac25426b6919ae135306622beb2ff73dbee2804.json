{"sha": "4ac25426b6919ae135306622beb2ff73dbee2804", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRhYzI1NDI2YjY5MTlhZTEzNTMwNjYyMmJlYjJmZjczZGJlZTI4MDQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2012-01-21T00:12:50Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2012-01-21T00:12:50Z"}, "message": "Merge pull request #1583 from killerswan/ubuntu_ppa\n\nAdditions re: Ubuntu PPA for Rust", "tree": {"sha": "4977b1a182b115da09c92b33f149684e51c095c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4977b1a182b115da09c92b33f149684e51c095c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4ac25426b6919ae135306622beb2ff73dbee2804", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4ac25426b6919ae135306622beb2ff73dbee2804", "html_url": "https://github.com/rust-lang/rust/commit/4ac25426b6919ae135306622beb2ff73dbee2804", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4ac25426b6919ae135306622beb2ff73dbee2804/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4efdab0059c787c030bfbb32c052bd151e6964d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4efdab0059c787c030bfbb32c052bd151e6964d1", "html_url": "https://github.com/rust-lang/rust/commit/4efdab0059c787c030bfbb32c052bd151e6964d1"}, {"sha": "62bef762a3d999e1d9f3b551320e22619d83b7ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/62bef762a3d999e1d9f3b551320e22619d83b7ca", "html_url": "https://github.com/rust-lang/rust/commit/62bef762a3d999e1d9f3b551320e22619d83b7ca"}], "stats": {"total": 60, "additions": 60, "deletions": 0}, "files": [{"sha": "e7d5650a881dfaff876037c3e49ac978bcedcf39", "filename": "Makefile.in", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4ac25426b6919ae135306622beb2ff73dbee2804/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/4ac25426b6919ae135306622beb2ff73dbee2804/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=4ac25426b6919ae135306622beb2ff73dbee2804", "patch": "@@ -493,6 +493,12 @@ ifneq ($(findstring clean,$(MAKECMDGOALS)),)\n endif\n \n ifneq ($(findstring install,$(MAKECMDGOALS)),)\n+  ifdef DESTDIR\n+    CFG_INFO := $(info cfg: setting CFG_PREFIX via DESTDIR, $(DESTDIR))\n+    CFG_PREFIX:=$(DESTDIR)\n+    export CFG_PREFIX\n+  endif\n+\n   CFG_INFO := $(info cfg: including install rules)\n   include $(CFG_SRC_DIR)/mk/install.mk\n endif"}, {"sha": "3cdbc889235cddbdd6392fe1c8288d9d2bd55065", "filename": "src/etc/latest-unix-snaps.py", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/4ac25426b6919ae135306622beb2ff73dbee2804/src%2Fetc%2Flatest-unix-snaps.py", "raw_url": "https://github.com/rust-lang/rust/raw/4ac25426b6919ae135306622beb2ff73dbee2804/src%2Fetc%2Flatest-unix-snaps.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Flatest-unix-snaps.py?ref=4ac25426b6919ae135306622beb2ff73dbee2804", "patch": "@@ -0,0 +1,54 @@\n+#!/usr/bin/env python\n+\n+import os, tarfile, hashlib, re, shutil, sys\n+from snapshot import *\n+\n+f = open(snapshotfile)\n+date = None\n+rev = None\n+platform = None\n+snap = None\n+i = 0\n+\n+newestSet = {}\n+\n+\n+for line in f.readlines():\n+    i += 1\n+    parsed = parse_line(i, line)\n+    if (not parsed): continue\n+\n+    if parsed[\"type\"] == \"snapshot\":\n+        if (len(newestSet) == 0 or parsed[\"date\"] > newestSet[\"date\"]):\n+            newestSet[\"date\"] = parsed[\"date\"] \n+            newestSet[\"rev\"] = parsed[\"rev\"] \n+            newestSet[\"files\"] = []\n+            addingMode = True\n+        else:\n+            addingMode = False\n+\n+    elif addingMode == True and parsed[\"type\"] == \"file\":\n+        tux = re.compile(\"linux\", re.IGNORECASE)\n+        if (tux.match(parsed[\"platform\"]) != None):\n+           ff = {}\n+           ff[\"platform\"] = parsed[\"platform\"]\n+           ff[\"hash\"] = parsed[\"hash\"]\n+           newestSet[\"files\"] += [ff]\n+\n+\n+def download_new_file (date, rev, platform, hsh):\n+        snap = full_snapshot_name(date, rev, platform, hsh)\n+        dl = os.path.join(download_dir_base, snap)\n+        url = download_url_base + \"/\" + snap\n+        if (not os.path.exists(dl)):\n+            print(\"downloading \" + url)\n+            get_url_to_file(url, dl)\n+        if (snap_filename_hash_part(snap) == hash_file(dl)):\n+            print(\"got download with ok hash\")\n+        else:\n+            raise Exception(\"bad hash on download\")\n+\n+for ff in newestSet[\"files\"]:\n+   download_new_file (newestSet[\"date\"], newestSet[\"rev\"], ff[\"platform\"], ff[\"hash\"])\n+\n+"}]}