{"sha": "3b818edeba4dbca7c605ca5600f2d1b4b000120b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiODE4ZWRlYmE0ZGJjYTdjNjA1Y2E1NjAwZjJkMWI0YjAwMDEyMGI=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-07-23T04:45:33Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-07-23T23:56:22Z"}, "message": "std and extra: use as_c_str instead of as_buf in a couple places\n\nThese uses are assuming the strings are null terminated, so it\nshould be using `as_c_str` instead of `as_buf`", "tree": {"sha": "debfc8b7cbf00f368b3f4267048c877ad9549f2a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/debfc8b7cbf00f368b3f4267048c877ad9549f2a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b818edeba4dbca7c605ca5600f2d1b4b000120b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b818edeba4dbca7c605ca5600f2d1b4b000120b", "html_url": "https://github.com/rust-lang/rust/commit/3b818edeba4dbca7c605ca5600f2d1b4b000120b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b818edeba4dbca7c605ca5600f2d1b4b000120b/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf75330807ad908a428e9c162a388e367fb07781", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf75330807ad908a428e9c162a388e367fb07781", "html_url": "https://github.com/rust-lang/rust/commit/cf75330807ad908a428e9c162a388e367fb07781"}], "stats": {"total": 30, "additions": 11, "deletions": 19}, "files": [{"sha": "1a468fcf215d744fcee37f73fc60eb8652bd3043", "filename": "src/libstd/rt/borrowck.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3b818edeba4dbca7c605ca5600f2d1b4b000120b/src%2Flibstd%2Frt%2Fborrowck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b818edeba4dbca7c605ca5600f2d1b4b000120b/src%2Flibstd%2Frt%2Fborrowck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fborrowck.rs?ref=3b818edeba4dbca7c605ca5600f2d1b4b000120b", "patch": "@@ -76,7 +76,7 @@ unsafe fn fail_borrowed(box: *mut BoxRepr, file: *c_char, line: size_t) {\n     match try_take_task_borrow_list() {\n         None => { // not recording borrows\n             let msg = \"borrowed\";\n-            do msg.as_buf |msg_p, _| {\n+            do msg.as_c_str |msg_p| {\n                 sys::begin_unwind_(msg_p as *c_char, file, line);\n             }\n         }\n@@ -92,7 +92,7 @@ unsafe fn fail_borrowed(box: *mut BoxRepr, file: *c_char, line: size_t) {\n                     sep = \" and at \";\n                 }\n             }\n-            do msg.as_buf |msg_p, _| {\n+            do msg.as_c_str |msg_p| {\n                 sys::begin_unwind_(msg_p as *c_char, file, line)\n             }\n         }\n@@ -231,7 +231,7 @@ pub unsafe fn unrecord_borrow(a: *u8, old_ref_count: uint,\n             let br = borrow_list.pop();\n             if br.box != a || br.file != file || br.line != line {\n                 let err = fmt!(\"wrong borrow found, br=%?\", br);\n-                do err.as_buf |msg_p, _| {\n+                do err.as_c_str |msg_p| {\n                     sys::begin_unwind_(msg_p as *c_char, file, line)\n                 }\n             }"}, {"sha": "28cd2345aab300ab0b136b8f0ff3b240f5471994", "filename": "src/libstd/sys.rs", "status": "modified", "additions": 6, "deletions": 14, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3b818edeba4dbca7c605ca5600f2d1b4b000120b/src%2Flibstd%2Fsys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b818edeba4dbca7c605ca5600f2d1b4b000120b/src%2Flibstd%2Fsys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys.rs?ref=3b818edeba4dbca7c605ca5600f2d1b4b000120b", "patch": "@@ -123,27 +123,19 @@ pub trait FailWithCause {\n \n impl FailWithCause for ~str {\n     fn fail_with(cause: ~str, file: &'static str, line: uint) -> ! {\n-        do cause.as_buf |msg_buf, _msg_len| {\n-            do file.as_buf |file_buf, _file_len| {\n-                unsafe {\n-                    let msg_buf = cast::transmute(msg_buf);\n-                    let file_buf = cast::transmute(file_buf);\n-                    begin_unwind_(msg_buf, file_buf, line as libc::size_t)\n-                }\n+        do cause.as_c_str |msg_buf| {\n+            do file.as_c_str |file_buf| {\n+                begin_unwind_(msg_buf, file_buf, line as libc::size_t)\n             }\n         }\n     }\n }\n \n impl FailWithCause for &'static str {\n     fn fail_with(cause: &'static str, file: &'static str, line: uint) -> ! {\n-        do cause.as_buf |msg_buf, _msg_len| {\n-            do file.as_buf |file_buf, _file_len| {\n-                unsafe {\n-                    let msg_buf = cast::transmute(msg_buf);\n-                    let file_buf = cast::transmute(file_buf);\n-                    begin_unwind_(msg_buf, file_buf, line as libc::size_t)\n-                }\n+        do cause.as_c_str |msg_buf| {\n+            do file.as_c_str |file_buf| {\n+                begin_unwind_(msg_buf, file_buf, line as libc::size_t)\n             }\n         }\n     }"}, {"sha": "d96681ae803002ead44633ed89ead3c91e21a64e", "filename": "src/libstd/unstable/lang.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3b818edeba4dbca7c605ca5600f2d1b4b000120b/src%2Flibstd%2Funstable%2Flang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b818edeba4dbca7c605ca5600f2d1b4b000120b/src%2Flibstd%2Funstable%2Flang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Funstable%2Flang.rs?ref=3b818edeba4dbca7c605ca5600f2d1b4b000120b", "patch": "@@ -56,8 +56,8 @@ pub fn fail_bounds_check(file: *c_char, line: size_t,\n                          index: size_t, len: size_t) {\n     let msg = fmt!(\"index out of bounds: the len is %d but the index is %d\",\n                     len as int, index as int);\n-    do msg.as_buf |p, _len| {\n-        fail_(p as *c_char, file, line);\n+    do msg.as_c_str |buf| {\n+        fail_(buf, file, line);\n     }\n }\n "}]}