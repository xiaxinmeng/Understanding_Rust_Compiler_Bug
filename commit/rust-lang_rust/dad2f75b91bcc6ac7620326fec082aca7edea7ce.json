{"sha": "dad2f75b91bcc6ac7620326fec082aca7edea7ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZDJmNzViOTFiY2M2YWM3NjIwMzI2ZmVjMDgyYWNhN2VkZWE3Y2U=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-06-25T14:52:47Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-06-25T14:52:47Z"}, "message": "Use ItemTree to answer enum_data query", "tree": {"sha": "e2dbb330dd6b46eee7f0c7464626e9b8b1f98155", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2dbb330dd6b46eee7f0c7464626e9b8b1f98155"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dad2f75b91bcc6ac7620326fec082aca7edea7ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dad2f75b91bcc6ac7620326fec082aca7edea7ce", "html_url": "https://github.com/rust-lang/rust/commit/dad2f75b91bcc6ac7620326fec082aca7edea7ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dad2f75b91bcc6ac7620326fec082aca7edea7ce/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "563d58559400c4e5b67377bd10f40fee7695ea46", "url": "https://api.github.com/repos/rust-lang/rust/commits/563d58559400c4e5b67377bd10f40fee7695ea46", "html_url": "https://github.com/rust-lang/rust/commit/563d58559400c4e5b67377bd10f40fee7695ea46"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "4994a2125320fd7589eec94fddf4deeedffc1f08", "filename": "crates/ra_hir_def/src/adt.rs", "status": "modified", "additions": 19, "deletions": 7, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/dad2f75b91bcc6ac7620326fec082aca7edea7ce/crates%2Fra_hir_def%2Fsrc%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dad2f75b91bcc6ac7620326fec082aca7edea7ce/crates%2Fra_hir_def%2Fsrc%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fadt.rs?ref=dad2f75b91bcc6ac7620326fec082aca7edea7ce", "patch": "@@ -8,7 +8,6 @@ use hir_expand::{\n     InFile,\n };\n use ra_arena::{map::ArenaMap, Arena};\n-use ra_prof::profile;\n use ra_syntax::ast::{self, NameOwner, TypeAscriptionOwner, VisibilityOwner};\n \n use crate::{\n@@ -84,12 +83,25 @@ impl StructData {\n \n impl EnumData {\n     pub(crate) fn enum_data_query(db: &dyn DefDatabase, e: EnumId) -> Arc<EnumData> {\n-        let _p = profile(\"enum_data_query\");\n-        let src = e.lookup(db).source(db);\n-        let name = src.value.name().map_or_else(Name::missing, |n| n.as_name());\n-        let mut trace = Trace::new_for_arena();\n-        lower_enum(db, &mut trace, &src, e.lookup(db).container.module(db));\n-        Arc::new(EnumData { name, variants: trace.into_arena() })\n+        let loc = e.lookup(db);\n+        let item_tree = db.item_tree(loc.id.file_id);\n+        let cfg_options = db.crate_graph()[loc.container.module(db).krate].cfg_options.clone();\n+\n+        let enum_ = &item_tree[loc.id.value];\n+        let mut variants = Arena::new();\n+        for var_id in enum_.variants.clone() {\n+            if item_tree.attrs(var_id.into()).is_cfg_enabled(&cfg_options) {\n+                let var = &item_tree[var_id];\n+                let var_data = lower_fields(&item_tree, &cfg_options, &var.fields);\n+\n+                variants.alloc(EnumVariantData {\n+                    name: var.name.clone(),\n+                    variant_data: Arc::new(var_data),\n+                });\n+            }\n+        }\n+\n+        Arc::new(EnumData { name: enum_.name.clone(), variants })\n     }\n \n     pub fn variant(&self, name: &Name) -> Option<LocalEnumVariantId> {"}]}