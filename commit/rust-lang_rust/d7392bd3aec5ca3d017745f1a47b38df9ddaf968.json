{"sha": "d7392bd3aec5ca3d017745f1a47b38df9ddaf968", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MzkyYmQzYWVjNWNhM2QwMTc3NDVmMWE0N2IzOGRmOWRkYWY5Njg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T04:33:22Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:29Z"}, "message": "librustc: De-`@mut` `FunctionContext::llenv`", "tree": {"sha": "fc0db9d6875f45e28979c5fa3c939f86c1d06019", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc0db9d6875f45e28979c5fa3c939f86c1d06019"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7392bd3aec5ca3d017745f1a47b38df9ddaf968", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7392bd3aec5ca3d017745f1a47b38df9ddaf968", "html_url": "https://github.com/rust-lang/rust/commit/d7392bd3aec5ca3d017745f1a47b38df9ddaf968", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7392bd3aec5ca3d017745f1a47b38df9ddaf968/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c909c34b5de27fbd0a90b04e9d9c03130c45452b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c909c34b5de27fbd0a90b04e9d9c03130c45452b", "html_url": "https://github.com/rust-lang/rust/commit/c909c34b5de27fbd0a90b04e9d9c03130c45452b"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "9a9bb9197cfed7690511d636b7a5f3a4d70d9bd0", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d7392bd3aec5ca3d017745f1a47b38df9ddaf968/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7392bd3aec5ca3d017745f1a47b38df9ddaf968/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=d7392bd3aec5ca3d017745f1a47b38df9ddaf968", "patch": "@@ -69,7 +69,7 @@ use util::sha2::Sha256;\n use middle::trans::type_::Type;\n \n use std::c_str::ToCStr;\n-use std::cell::RefCell;\n+use std::cell::{Cell, RefCell};\n use std::hashmap::HashMap;\n use std::libc::c_uint;\n use std::vec;\n@@ -1683,7 +1683,7 @@ pub fn new_fn_ctxt_w_id(ccx: @CrateContext,\n     let fcx = @mut FunctionContext {\n           llfn: llfndecl,\n           llenv: unsafe {\n-              llvm::LLVMGetUndef(Type::i8p().to_ref())\n+              Cell::new(llvm::LLVMGetUndef(Type::i8p().to_ref()))\n           },\n           llretptr: None,\n           entry_bcx: None,\n@@ -1702,9 +1702,9 @@ pub fn new_fn_ctxt_w_id(ccx: @CrateContext,\n           ccx: ccx,\n           debug_context: debug_context,\n     };\n-    fcx.llenv = unsafe {\n+    fcx.llenv.set(unsafe {\n           llvm::LLVMGetParam(llfndecl, fcx.env_arg_pos() as c_uint)\n-    };\n+    });\n \n     unsafe {\n         let entry_bcx = top_scope_block(fcx, opt_node_info);\n@@ -1759,7 +1759,7 @@ pub fn create_llargs_for_fn_args(cx: @mut FunctionContext,\n     match self_arg {\n       impl_self(tt, self_mode) => {\n         cx.llself = Some(ValSelfData {\n-            v: cx.llenv,\n+            v: cx.llenv.get(),\n             t: tt,\n             is_copy: self_mode == ty::ByCopy\n         });"}, {"sha": "66886426280013bd6db4c3f69fde39b8e11c1e04", "filename": "src/librustc/middle/trans/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7392bd3aec5ca3d017745f1a47b38df9ddaf968/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7392bd3aec5ca3d017745f1a47b38df9ddaf968/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fclosure.rs?ref=d7392bd3aec5ca3d017745f1a47b38df9ddaf968", "patch": "@@ -307,7 +307,7 @@ pub fn load_environment(fcx: @mut FunctionContext,\n     let bcx = fcx.entry_bcx.unwrap();\n \n     // Load a pointer to the closure data, skipping over the box header:\n-    let llcdata = opaque_box_body(bcx, cdata_ty, fcx.llenv);\n+    let llcdata = opaque_box_body(bcx, cdata_ty, fcx.llenv.get());\n \n     // Store the pointer to closure data in an alloca for debug info because that's what the\n     // llvm.dbg.declare intrinsic expects"}, {"sha": "7766e04205382fd20b588c3c71967d8c87ed460f", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d7392bd3aec5ca3d017745f1a47b38df9ddaf968/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7392bd3aec5ca3d017745f1a47b38df9ddaf968/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=d7392bd3aec5ca3d017745f1a47b38df9ddaf968", "patch": "@@ -206,7 +206,7 @@ pub struct FunctionContext {\n \n     // The implicit environment argument that arrives in the function we're\n     // creating.\n-    llenv: ValueRef,\n+    llenv: Cell<ValueRef>,\n \n     // The place to store the return value. If the return type is immediate,\n     // this is an alloca in the function. Otherwise, it's the hidden first"}]}