{"sha": "cf536d7a4fbb82595f439eb812d469eda766bf42", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNmNTM2ZDdhNGZiYjgyNTk1ZjQzOWViODEyZDQ2OWVkYTc2NmJmNDI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-02-15T16:00:06Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-02-17T12:33:32Z"}, "message": "fallout", "tree": {"sha": "6077c81e3b34e2263ae40aba94f6a6fdd16c88b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6077c81e3b34e2263ae40aba94f6a6fdd16c88b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf536d7a4fbb82595f439eb812d469eda766bf42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf536d7a4fbb82595f439eb812d469eda766bf42", "html_url": "https://github.com/rust-lang/rust/commit/cf536d7a4fbb82595f439eb812d469eda766bf42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf536d7a4fbb82595f439eb812d469eda766bf42/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e809eb61d7b150dac9b9810b4d62f31b11db15d1", "url": "https://api.github.com/repos/rust-lang/rust/commits/e809eb61d7b150dac9b9810b4d62f31b11db15d1", "html_url": "https://github.com/rust-lang/rust/commit/e809eb61d7b150dac9b9810b4d62f31b11db15d1"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "37322aeffc8f0760c00b1efb81b9398766b978e8", "filename": "src/consts.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/cf536d7a4fbb82595f439eb812d469eda766bf42/src%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf536d7a4fbb82595f439eb812d469eda766bf42/src%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconsts.rs?ref=cf536d7a4fbb82595f439eb812d469eda766bf42", "patch": "@@ -15,16 +15,16 @@ use syntax::ptr::P;\n \n #[derive(Debug, Copy, Clone)]\n pub enum FloatWidth {\n-    Fw32,\n-    Fw64,\n-    FwAny,\n+    F32,\n+    F64,\n+    Any,\n }\n \n impl From<FloatTy> for FloatWidth {\n     fn from(ty: FloatTy) -> FloatWidth {\n         match ty {\n-            FloatTy::F32 => FloatWidth::Fw32,\n-            FloatTy::F64 => FloatWidth::Fw64,\n+            FloatTy::F32 => FloatWidth::F32,\n+            FloatTy::F64 => FloatWidth::F64,\n         }\n     }\n }\n@@ -200,7 +200,7 @@ fn lit_to_constant(lit: &LitKind) -> Constant {\n         LitKind::Char(c) => Constant::Char(c),\n         LitKind::Int(value, ty) => Constant::Int(value, ty, Sign::Plus),\n         LitKind::Float(ref is, ty) => Constant::Float(is.to_string(), ty.into()),\n-        LitKind::FloatUnsuffixed(ref is) => Constant::Float(is.to_string(), FloatWidth::FwAny),\n+        LitKind::FloatUnsuffixed(ref is) => Constant::Float(is.to_string(), FloatWidth::Any),\n         LitKind::Bool(b) => Constant::Bool(b),\n     }\n }"}, {"sha": "dbfa274418947ea28be025c1520bb4f85a8ff2bc", "filename": "src/zero_div_zero.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cf536d7a4fbb82595f439eb812d469eda766bf42/src%2Fzero_div_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf536d7a4fbb82595f439eb812d469eda766bf42/src%2Fzero_div_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fzero_div_zero.rs?ref=cf536d7a4fbb82595f439eb812d469eda766bf42", "patch": "@@ -47,8 +47,8 @@ impl LateLintPass for ZeroDivZeroPass {\n                 // since we're about to suggest a use of std::f32::NaN or std::f64::NaN,\n                 // match the precision of the literals that are given.\n                 let float_type = match (lhs_width, rhs_width) {\n-                    (FloatWidth::Fw64, _)\n-                    | (_, FloatWidth::Fw64) => \"f64\",\n+                    (FloatWidth::F64, _)\n+                    | (_, FloatWidth::F64) => \"f64\",\n                     _ => \"f32\"\n                 };\n                 span_help_and_lint(cx, ZERO_DIVIDED_BY_ZERO, expr.span,"}, {"sha": "5c6088d055471c3d592b7775cd626ccd07e5b558", "filename": "tests/consts.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cf536d7a4fbb82595f439eb812d469eda766bf42/tests%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf536d7a4fbb82595f439eb812d469eda766bf42/tests%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconsts.rs?ref=cf536d7a4fbb82595f439eb812d469eda766bf42", "patch": "@@ -77,9 +77,9 @@ fn test_ops() {\n     check(ONE, &binop(BiMul, litone.clone(), litone.clone()));\n     check(ONE, &binop(BiDiv, litone.clone(), litone.clone()));\n \n-    let half_any = Constant::Float(\"0.5\".into(), FloatWidth::FwAny);\n-    let half32 = Constant::Float(\"0.5\".into(), FloatWidth::Fw32);\n-    let half64 = Constant::Float(\"0.5\".into(), FloatWidth::Fw64);\n+    let half_any = Constant::Float(\"0.5\".into(), FloatWidth::Any);\n+    let half32 = Constant::Float(\"0.5\".into(), FloatWidth::F32);\n+    let half64 = Constant::Float(\"0.5\".into(), FloatWidth::F64);\n \n     assert_eq!(half_any, half32);\n     assert_eq!(half_any, half64);"}]}