{"sha": "1e40200b353926308a9a8a5f3349df8dc6bf8f80", "node_id": "C_kwDOAAsO6NoAKDFlNDAyMDBiMzUzOTI2MzA4YTlhOGE1ZjMzNDlkZjhkYzZiZjhmODA", "commit": {"author": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2022-06-25T09:59:48Z"}, "committer": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2022-06-29T03:44:11Z"}, "message": "Erase regions in new abstract consts", "tree": {"sha": "676cdda3b340cf6f58ab6d04221488875eedb4c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/676cdda3b340cf6f58ab6d04221488875eedb4c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1e40200b353926308a9a8a5f3349df8dc6bf8f80", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1e40200b353926308a9a8a5f3349df8dc6bf8f80", "html_url": "https://github.com/rust-lang/rust/commit/1e40200b353926308a9a8a5f3349df8dc6bf8f80", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1e40200b353926308a9a8a5f3349df8dc6bf8f80/comments", "author": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e02d645110ae14f4a7f04d6bd5b05f2842488dda", "url": "https://api.github.com/repos/rust-lang/rust/commits/e02d645110ae14f4a7f04d6bd5b05f2842488dda", "html_url": "https://github.com/rust-lang/rust/commit/e02d645110ae14f4a7f04d6bd5b05f2842488dda"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "424eff2f6212a6dfcb71b1792781cbae049fd05a", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1e40200b353926308a9a8a5f3349df8dc6bf8f80/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e40200b353926308a9a8a5f3349df8dc6bf8f80/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=1e40200b353926308a9a8a5f3349df8dc6bf8f80", "patch": "@@ -236,7 +236,7 @@ impl<'tcx> AbstractConst<'tcx> {\n     ) -> Result<Option<AbstractConst<'tcx>>, ErrorGuaranteed> {\n         let inner = tcx.thir_abstract_const_opt_const_arg(uv.def)?;\n         debug!(\"AbstractConst::new({:?}) = {:?}\", uv, inner);\n-        Ok(inner.map(|inner| AbstractConst { inner, substs: uv.substs }))\n+        Ok(inner.map(|inner| AbstractConst { inner, substs: tcx.erase_regions(uv.substs) }))\n     }\n \n     pub fn from_const(\n@@ -416,6 +416,7 @@ impl<'a, 'tcx> AbstractConstBuilder<'a, 'tcx> {\n                     // `AbstractConst`s should not contain any promoteds as they require references which\n                     // are not allowed.\n                     assert_eq!(ct.promoted, None);\n+                    assert_eq!(ct, self.tcx.erase_regions(ct));\n                 }\n             }\n         }"}, {"sha": "2ae0ae70dd9778971c64c7fd8af09aefd97c93bf", "filename": "src/test/ui/const-generics/try_unify_ignore_lifetimes.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/1e40200b353926308a9a8a5f3349df8dc6bf8f80/src%2Ftest%2Fui%2Fconst-generics%2Ftry_unify_ignore_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1e40200b353926308a9a8a5f3349df8dc6bf8f80/src%2Ftest%2Fui%2Fconst-generics%2Ftry_unify_ignore_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Ftry_unify_ignore_lifetimes.rs?ref=1e40200b353926308a9a8a5f3349df8dc6bf8f80", "patch": "@@ -0,0 +1,33 @@\n+// check-pass\n+#![feature(generic_const_exprs)]\n+#![allow(incomplete_features)]\n+\n+struct Num<const N: usize>;\n+\n+trait NumT {\n+    const VALUE: usize;\n+}\n+\n+impl<const N: usize> NumT for Num<N> {\n+    const VALUE: usize = N;\n+}\n+\n+struct Foo<'a, N: NumT>(&'a [u32; N::VALUE]) where [(); N::VALUE]:;\n+\n+trait Bar {\n+    type Size: NumT;\n+\n+    fn bar<'a>(foo: &Foo<'a, Self::Size>) where [(); Self::Size::VALUE]: {\n+        todo!();\n+    }\n+}\n+\n+trait Baz<'a> {\n+    type Size: NumT;\n+\n+    fn baz(foo: &Foo<'a, Self::Size>) where [(); Self::Size::VALUE]: {\n+        todo!();\n+    }\n+}\n+\n+fn main() {}"}]}