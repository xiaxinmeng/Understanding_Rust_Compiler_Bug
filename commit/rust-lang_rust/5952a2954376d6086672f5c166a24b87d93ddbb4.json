{"sha": "5952a2954376d6086672f5c166a24b87d93ddbb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5NTJhMjk1NDM3NmQ2MDg2NjcyZjVjMTY2YTI0Yjg3ZDkzZGRiYjQ=", "commit": {"author": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2015-08-13T05:51:24Z"}, "committer": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2015-08-13T05:51:24Z"}, "message": "lifetimes test: use explicit message prefix", "tree": {"sha": "8279cbf4b34161c4cf90e10b1f6570336ce37d8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8279cbf4b34161c4cf90e10b1f6570336ce37d8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5952a2954376d6086672f5c166a24b87d93ddbb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5952a2954376d6086672f5c166a24b87d93ddbb4", "html_url": "https://github.com/rust-lang/rust/commit/5952a2954376d6086672f5c166a24b87d93ddbb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5952a2954376d6086672f5c166a24b87d93ddbb4/comments", "author": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f7693094f5c112174ae5e3aa7e9525bb35ac469", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f7693094f5c112174ae5e3aa7e9525bb35ac469", "html_url": "https://github.com/rust-lang/rust/commit/2f7693094f5c112174ae5e3aa7e9525bb35ac469"}], "stats": {"total": 21, "additions": 14, "deletions": 7}, "files": [{"sha": "36daa69fb317b1c90d19df800a208c6a810fafe8", "filename": "tests/compile-fail/lifetimes.rs", "status": "modified", "additions": 14, "deletions": 7, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5952a2954376d6086672f5c166a24b87d93ddbb4/tests%2Fcompile-fail%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5952a2954376d6086672f5c166a24b87d93ddbb4/tests%2Fcompile-fail%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Flifetimes.rs?ref=5952a2954376d6086672f5c166a24b87d93ddbb4", "patch": "@@ -3,15 +3,18 @@\n \n #![deny(needless_lifetimes)]\n \n-fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) { } //~ERROR\n+fn distinct_lifetimes<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: u8) { }\n+//~^ERROR explicit lifetimes given\n \n-fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) { } //~ERROR\n+fn distinct_and_static<'a, 'b>(_x: &'a u8, _y: &'b u8, _z: &'static u8) { }\n+//~^ERROR explicit lifetimes given\n \n fn same_lifetime_on_input<'a>(_x: &'a u8, _y: &'a u8) { } // no error, same lifetime on two params\n \n fn only_static_on_input(_x: &u8, _y: &u8, _z: &'static u8) { } // no error, static involved\n \n-fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 { x } //~ERROR\n+fn in_and_out<'a>(x: &'a u8, _y: u8) -> &'a u8 { x }\n+//~^ERROR explicit lifetimes given\n \n fn multiple_in_and_out_1<'a>(x: &'a u8, _y: &'a u8) -> &'a u8 { x } // no error, multiple input refs\n \n@@ -23,24 +26,28 @@ fn deep_reference_1<'a, 'b>(x: &'a u8, _y: &'b u8) -> Result<&'a u8, ()> { Ok(x)\n \n fn deep_reference_2<'a>(x: Result<&'a u8, &'a u8>) -> &'a u8 { x.unwrap() } // no error, two input refs\n \n-fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> { Ok(x) } //~ERROR\n+fn deep_reference_3<'a>(x: &'a u8, _y: u8) -> Result<&'a u8, ()> { Ok(x) }\n+//~^ERROR explicit lifetimes given\n \n type Ref<'r> = &'r u8;\n \n fn lifetime_param_1<'a>(_x: Ref<'a>, _y: &'a u8) { }\n \n-fn lifetime_param_2<'a, 'b: 'a>(_x: Ref<'a>, _y: &'b u8) { } //~ERROR\n+fn lifetime_param_2<'a, 'b: 'a>(_x: Ref<'a>, _y: &'b u8) { }\n+//~^ERROR explicit lifetimes given\n \n struct X {\n     x: u8,\n }\n \n impl X {\n-    fn self_and_out<'s>(&'s self) -> &'s u8 { &self.x } //~ERROR\n+    fn self_and_out<'s>(&'s self) -> &'s u8 { &self.x }\n+    //~^ERROR explicit lifetimes given\n \n     fn self_and_in_out<'s, 't>(&'s self, _x: &'t u8) -> &'s u8 { &self.x } // no error, multiple input refs\n \n-    fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) { } //~ERROR\n+    fn distinct_self_and_in<'s, 't>(&'s self, _x: &'t u8) { }\n+    //~^ERROR explicit lifetimes given\n \n     fn self_and_same_in<'s>(&'s self, _x: &'s u8) { } // no error, same lifetimes on two params\n }"}]}