{"sha": "9f87c9a3f927d3b7a3cbb92818c45c979ece693b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlmODdjOWEzZjkyN2QzYjdhM2NiYjkyODE4YzQ1Yzk3OWVjZTY5M2I=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T14:35:54Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-07-31T14:35:54Z"}, "message": "Field expr", "tree": {"sha": "19096a70ffa38bd53071c910a89a995e54a4b765", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/19096a70ffa38bd53071c910a89a995e54a4b765"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9f87c9a3f927d3b7a3cbb92818c45c979ece693b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9f87c9a3f927d3b7a3cbb92818c45c979ece693b", "html_url": "https://github.com/rust-lang/rust/commit/9f87c9a3f927d3b7a3cbb92818c45c979ece693b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9ce7e8110254e8db476c96bce2eecb2d16983159", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ce7e8110254e8db476c96bce2eecb2d16983159", "html_url": "https://github.com/rust-lang/rust/commit/9ce7e8110254e8db476c96bce2eecb2d16983159"}], "stats": {"total": 136, "additions": 131, "deletions": 5}, "files": [{"sha": "fca29f1efe711f4f5b91fcab4fba6526964c63b3", "filename": "src/grammar.ron", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/src%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/src%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar.ron?ref=9f87c9a3f927d3b7a3cbb92818c45c979ece693b", "patch": "@@ -126,6 +126,8 @@ Grammar(\n         \"TUPLE_EXPR\",\n         \"PATH_EXPR\",\n         \"CALL_EXPR\",\n+        \"METHOD_CALL_EXPR\",\n+        \"FIELD_EXPR\",\n         \"REF_EXPR\",\n \n         \"EXTERN_BLOCK\","}, {"sha": "3956df56850798617bea150b8250ab1dd3edba64", "filename": "src/parser/grammar/expressions.rs", "status": "modified", "additions": 39, "deletions": 4, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/src%2Fparser%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/src%2Fparser%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fgrammar%2Fexpressions.rs?ref=9f87c9a3f927d3b7a3cbb92818c45c979ece693b", "patch": "@@ -26,11 +26,20 @@ pub(super) fn literal(p: &mut Parser) -> Option<CompletedMarker> {\n }\n \n pub(super) fn expr(p: &mut Parser) {\n-    let mut lhs = prefix_expr(p);\n+    let mut lhs = match prefix_expr(p) {\n+        Some(lhs) => lhs,\n+        None => return,\n+    };\n \n-    while let Some(m) = lhs {\n-        match p.current() {\n-            L_PAREN => lhs = Some(call_expr(p, m)),\n+    loop {\n+        lhs = match p.current() {\n+            L_PAREN => call_expr(p, lhs),\n+            DOT if p.nth(1) == IDENT =>\n+                if p.nth(2) == L_PAREN {\n+                    method_call_expr(p, lhs)\n+                } else {\n+                    field_expr(p, lhs)\n+                }\n             _ => break,\n         }\n     }\n@@ -95,6 +104,32 @@ fn call_expr(p: &mut Parser, lhs: CompletedMarker) -> CompletedMarker {\n     m.complete(p, CALL_EXPR)\n }\n \n+// test method_call_expr\n+// fn foo() {\n+//     x.foo();\n+//     y.bar(1, 2,);\n+// }\n+fn method_call_expr(p: &mut Parser, lhs: CompletedMarker) -> CompletedMarker {\n+    assert!(p.at(DOT) && p.nth(1) == IDENT && p.nth(2) == L_PAREN);\n+    let m = lhs.precede(p);\n+    p.bump();\n+    p.bump();\n+    arg_list(p);\n+    m.complete(p, METHOD_CALL_EXPR)\n+}\n+\n+// test field_expr\n+// fn foo() {\n+//     x.foo.bar;\n+// }\n+fn field_expr(p: &mut Parser, lhs: CompletedMarker) -> CompletedMarker {\n+    assert!(p.at(DOT) && p.nth(1) == IDENT);\n+    let m = lhs.precede(p);\n+    p.bump();\n+    p.bump();\n+    m.complete(p, FIELD_EXPR)\n+}\n+\n fn arg_list(p: &mut Parser) {\n     assert!(p.at(L_PAREN));\n     let m = p.start();"}, {"sha": "699f5282e73e867defe27b9e6a35c2937b4b287e", "filename": "src/syntax_kinds/generated.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/src%2Fsyntax_kinds%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/src%2Fsyntax_kinds%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds%2Fgenerated.rs?ref=9f87c9a3f927d3b7a3cbb92818c45c979ece693b", "patch": "@@ -117,6 +117,8 @@ pub enum SyntaxKind {\n     TUPLE_EXPR,\n     PATH_EXPR,\n     CALL_EXPR,\n+    METHOD_CALL_EXPR,\n+    FIELD_EXPR,\n     REF_EXPR,\n     EXTERN_BLOCK,\n     ENUM_VARIANT,\n@@ -268,6 +270,8 @@ impl SyntaxKind {\n             TUPLE_EXPR => &SyntaxInfo { name: \"TUPLE_EXPR\" },\n             PATH_EXPR => &SyntaxInfo { name: \"PATH_EXPR\" },\n             CALL_EXPR => &SyntaxInfo { name: \"CALL_EXPR\" },\n+            METHOD_CALL_EXPR => &SyntaxInfo { name: \"METHOD_CALL_EXPR\" },\n+            FIELD_EXPR => &SyntaxInfo { name: \"FIELD_EXPR\" },\n             REF_EXPR => &SyntaxInfo { name: \"REF_EXPR\" },\n             EXTERN_BLOCK => &SyntaxInfo { name: \"EXTERN_BLOCK\" },\n             ENUM_VARIANT => &SyntaxInfo { name: \"ENUM_VARIANT\" },"}, {"sha": "236d94e88709e3bd4e55edb930e1e919ecb9e03f", "filename": "tests/data/parser/inline/0051_method_call_expr.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/tests%2Fdata%2Fparser%2Finline%2F0051_method_call_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/tests%2Fdata%2Fparser%2Finline%2F0051_method_call_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0051_method_call_expr.rs?ref=9f87c9a3f927d3b7a3cbb92818c45c979ece693b", "patch": "@@ -0,0 +1,4 @@\n+fn foo() {\n+    x.foo();\n+    y.bar(1, 2,);\n+}"}, {"sha": "69e13bd2aa5ec9ccecbcf028c0e388bc2e4f6222", "filename": "tests/data/parser/inline/0051_method_call_expr.txt", "status": "added", "additions": 50, "deletions": 0, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/tests%2Fdata%2Fparser%2Finline%2F0051_method_call_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/tests%2Fdata%2Fparser%2Finline%2F0051_method_call_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0051_method_call_expr.txt?ref=9f87c9a3f927d3b7a3cbb92818c45c979ece693b", "patch": "@@ -0,0 +1,50 @@\n+FILE@[0; 44)\n+  FN_ITEM@[0; 44)\n+    FN_KW@[0; 2)\n+    NAME@[2; 6)\n+      WHITESPACE@[2; 3)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 9)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+      WHITESPACE@[8; 9)\n+    BLOCK@[9; 44)\n+      L_CURLY@[9; 10)\n+      EXPR_STMT@[10; 28)\n+        METHOD_CALL_EXPR@[10; 22)\n+          PATH_EXPR@[10; 16)\n+            PATH@[10; 16)\n+              PATH_SEGMENT@[10; 16)\n+                NAME_REF@[10; 16)\n+                  WHITESPACE@[10; 15)\n+                  IDENT@[15; 16) \"x\"\n+          DOT@[16; 17)\n+          IDENT@[17; 20) \"foo\"\n+          ARG_LIST@[20; 22)\n+            L_PAREN@[20; 21)\n+            R_PAREN@[21; 22)\n+        SEMI@[22; 23)\n+        WHITESPACE@[23; 28)\n+      EXPR_STMT@[28; 42)\n+        METHOD_CALL_EXPR@[28; 40)\n+          PATH_EXPR@[28; 29)\n+            PATH@[28; 29)\n+              PATH_SEGMENT@[28; 29)\n+                NAME_REF@[28; 29)\n+                  IDENT@[28; 29) \"y\"\n+          DOT@[29; 30)\n+          IDENT@[30; 33) \"bar\"\n+          ARG_LIST@[33; 40)\n+            L_PAREN@[33; 34)\n+            LITERAL@[34; 35)\n+              INT_NUMBER@[34; 35)\n+            COMMA@[35; 36)\n+            LITERAL@[36; 38)\n+              WHITESPACE@[36; 37)\n+              INT_NUMBER@[37; 38)\n+            COMMA@[38; 39)\n+            R_PAREN@[39; 40)\n+        SEMI@[40; 41)\n+        WHITESPACE@[41; 42)\n+      R_CURLY@[42; 43)\n+      WHITESPACE@[43; 44)"}, {"sha": "874887eae024efae44ccda14cb2df36c201cc2e4", "filename": "tests/data/parser/inline/0052_field_expr.rs", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/tests%2Fdata%2Fparser%2Finline%2F0052_field_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/tests%2Fdata%2Fparser%2Finline%2F0052_field_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0052_field_expr.rs?ref=9f87c9a3f927d3b7a3cbb92818c45c979ece693b", "patch": "@@ -0,0 +1,3 @@\n+fn foo() {\n+    x.foo.bar;\n+}"}, {"sha": "0ef2c58369e1c80a26a8e6eb5e7c0dc982486b27", "filename": "tests/data/parser/inline/0052_field_expr.txt", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/tests%2Fdata%2Fparser%2Finline%2F0052_field_expr.txt", "raw_url": "https://github.com/rust-lang/rust/raw/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/tests%2Fdata%2Fparser%2Finline%2F0052_field_expr.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Finline%2F0052_field_expr.txt?ref=9f87c9a3f927d3b7a3cbb92818c45c979ece693b", "patch": "@@ -0,0 +1,29 @@\n+FILE@[0; 28)\n+  FN_ITEM@[0; 28)\n+    FN_KW@[0; 2)\n+    NAME@[2; 6)\n+      WHITESPACE@[2; 3)\n+      IDENT@[3; 6) \"foo\"\n+    PARAM_LIST@[6; 9)\n+      L_PAREN@[6; 7)\n+      R_PAREN@[7; 8)\n+      WHITESPACE@[8; 9)\n+    BLOCK@[9; 28)\n+      L_CURLY@[9; 10)\n+      EXPR_STMT@[10; 26)\n+        FIELD_EXPR@[10; 24)\n+          FIELD_EXPR@[10; 20)\n+            PATH_EXPR@[10; 16)\n+              PATH@[10; 16)\n+                PATH_SEGMENT@[10; 16)\n+                  NAME_REF@[10; 16)\n+                    WHITESPACE@[10; 15)\n+                    IDENT@[15; 16) \"x\"\n+            DOT@[16; 17)\n+            IDENT@[17; 20) \"foo\"\n+          DOT@[20; 21)\n+          IDENT@[21; 24) \"bar\"\n+        SEMI@[24; 25)\n+        WHITESPACE@[25; 26)\n+      R_CURLY@[26; 27)\n+      WHITESPACE@[27; 28)"}, {"sha": "97a56a31f88f4ba371cd8d03e7e6aca64b63ae60", "filename": "tools/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/tools%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9f87c9a3f927d3b7a3cbb92818c45c979ece693b/tools%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tools%2Fsrc%2Flib.rs?ref=9f87c9a3f927d3b7a3cbb92818c45c979ece693b", "patch": "@@ -1,7 +1,6 @@\n extern crate itertools;\n \n use itertools::Itertools;\n-use std::hash;\n \n #[derive(Debug)]\n pub struct Test {"}]}