{"sha": "747a5e514a2e235b21a609c365657fb9a0b725f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0N2E1ZTUxNGEyZTIzNWIyMWE2MDljMzY1NjU3ZmI5YTBiNzI1ZjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-15T09:05:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-12-15T09:05:04Z"}, "message": "Auto merge of #56584 - davidtwco:issue-53990, r=nikomatsakis\n\n2018 edition - confusing error message when declaring unnamed parameters\n\nFixes #53990.\n\nThis PR adds a note providing context for the change to argument\nnames being required in the 2018 edition for trait methods and a\nsuggestion for the fix.", "tree": {"sha": "d2a0ee3926079cd0236305ae886d068af5ed7250", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2a0ee3926079cd0236305ae886d068af5ed7250"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/747a5e514a2e235b21a609c365657fb9a0b725f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/747a5e514a2e235b21a609c365657fb9a0b725f4", "html_url": "https://github.com/rust-lang/rust/commit/747a5e514a2e235b21a609c365657fb9a0b725f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/747a5e514a2e235b21a609c365657fb9a0b725f4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f04a646c68acb7f964e113d145f9bb28bfbb48a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f04a646c68acb7f964e113d145f9bb28bfbb48a", "html_url": "https://github.com/rust-lang/rust/commit/7f04a646c68acb7f964e113d145f9bb28bfbb48a"}, {"sha": "7fcf31b181433cc67b17af550d87fca1e3394f90", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fcf31b181433cc67b17af550d87fca1e3394f90", "html_url": "https://github.com/rust-lang/rust/commit/7fcf31b181433cc67b17af550d87fca1e3394f90"}], "stats": {"total": 31, "additions": 25, "deletions": 6}, "files": [{"sha": "a4326d9ba47be03f8a4bf099cbeb4196602f0d40", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/747a5e514a2e235b21a609c365657fb9a0b725f4/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/747a5e514a2e235b21a609c365657fb9a0b725f4/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=747a5e514a2e235b21a609c365657fb9a0b725f4", "patch": "@@ -1407,7 +1407,7 @@ impl<'a> Parser<'a> {\n                 // definition...\n \n                 // We don't allow argument names to be left off in edition 2018.\n-                p.parse_arg_general(p.span.rust_2018())\n+                p.parse_arg_general(p.span.rust_2018(), true)\n             })?;\n             generics.where_clause = self.parse_where_clause()?;\n \n@@ -1820,7 +1820,7 @@ impl<'a> Parser<'a> {\n \n     /// This version of parse arg doesn't necessarily require\n     /// identifier names.\n-    fn parse_arg_general(&mut self, require_name: bool) -> PResult<'a, Arg> {\n+    fn parse_arg_general(&mut self, require_name: bool, is_trait_item: bool) -> PResult<'a, Arg> {\n         maybe_whole!(self, NtArg, |x| x);\n \n         if let Ok(Some(_)) = self.parse_self_arg() {\n@@ -1852,6 +1852,17 @@ impl<'a> Parser<'a> {\n                         String::from(\"<identifier>: <type>\"),\n                         Applicability::HasPlaceholders,\n                     );\n+                } else if require_name && is_trait_item {\n+                    if let PatKind::Ident(_, ident, _) = pat.node {\n+                        err.span_suggestion_with_applicability(\n+                            pat.span,\n+                            \"explicitly ignore parameter\",\n+                            format!(\"_: {}\", ident),\n+                            Applicability::MachineApplicable,\n+                        );\n+                    }\n+\n+                    err.note(\"anonymous parameters are removed in the 2018 edition (see RFC 1685)\");\n                 }\n \n                 return Err(err);\n@@ -1917,7 +1928,7 @@ impl<'a> Parser<'a> {\n \n     /// Parse a single function argument\n     crate fn parse_arg(&mut self) -> PResult<'a, Arg> {\n-        self.parse_arg_general(true)\n+        self.parse_arg_general(true, false)\n     }\n \n     /// Parse an argument in a lambda header e.g., |arg, arg|\n@@ -5473,7 +5484,7 @@ impl<'a> Parser<'a> {\n                             }\n                         }\n                     } else {\n-                        match p.parse_arg_general(named_args) {\n+                        match p.parse_arg_general(named_args, false) {\n                             Ok(arg) => Ok(Some(arg)),\n                             Err(mut e) => {\n                                 e.emit();"}, {"sha": "dd9e933542fa79f9252e01ed1dd07378ccf0f51b", "filename": "src/test/ui/anon-params-denied-2018.stderr", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/747a5e514a2e235b21a609c365657fb9a0b725f4/src%2Ftest%2Fui%2Fanon-params-denied-2018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/747a5e514a2e235b21a609c365657fb9a0b725f4/src%2Ftest%2Fui%2Fanon-params-denied-2018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fanon-params-denied-2018.stderr?ref=747a5e514a2e235b21a609c365657fb9a0b725f4", "patch": "@@ -2,13 +2,21 @@ error: expected one of `:` or `@`, found `)`\n   --> $DIR/anon-params-denied-2018.rs:6:15\n    |\n LL |     fn foo(i32); //~ expected one of `:` or `@`, found `)`\n-   |               ^ expected one of `:` or `@` here\n+   |            ---^ expected one of `:` or `@` here\n+   |            |\n+   |            help: explicitly ignore parameter: `_: i32`\n+   |\n+   = note: anonymous parameters are removed in the 2018 edition (see RFC 1685)\n \n error: expected one of `:` or `@`, found `,`\n   --> $DIR/anon-params-denied-2018.rs:8:36\n    |\n LL |     fn bar_with_default_impl(String, String) {}\n-   |                                    ^ expected one of `:` or `@` here\n+   |                              ------^ expected one of `:` or `@` here\n+   |                              |\n+   |                              help: explicitly ignore parameter: `_: String`\n+   |\n+   = note: anonymous parameters are removed in the 2018 edition (see RFC 1685)\n \n error: aborting due to 2 previous errors\n "}]}