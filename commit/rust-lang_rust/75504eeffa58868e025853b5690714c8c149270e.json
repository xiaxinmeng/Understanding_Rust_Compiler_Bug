{"sha": "75504eeffa58868e025853b5690714c8c149270e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1NTA0ZWVmZmE1ODg2OGUwMjU4NTNiNTY5MDcxNGM4YzE0OTI3MGU=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-03T06:31:17Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-08-03T06:31:17Z"}, "message": "update error messages -- in some cases maybe we should investigate", "tree": {"sha": "63c19aad3bd39814884ced087f74756ff1e42f1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/63c19aad3bd39814884ced087f74756ff1e42f1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75504eeffa58868e025853b5690714c8c149270e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75504eeffa58868e025853b5690714c8c149270e", "html_url": "https://github.com/rust-lang/rust/commit/75504eeffa58868e025853b5690714c8c149270e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75504eeffa58868e025853b5690714c8c149270e/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e79656c5b7f58d592c9ed3544009c096bf81cad8", "url": "https://api.github.com/repos/rust-lang/rust/commits/e79656c5b7f58d592c9ed3544009c096bf81cad8", "html_url": "https://github.com/rust-lang/rust/commit/e79656c5b7f58d592c9ed3544009c096bf81cad8"}], "stats": {"total": 81, "additions": 45, "deletions": 36}, "files": [{"sha": "52f1547bce6f86f33b7bcd359e41186aef326d06", "filename": "src/test/ui/borrowck/promote-ref-mut-in-let-issue-46557.nll.stderr", "status": "modified", "additions": 14, "deletions": 20, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/75504eeffa58868e025853b5690714c8c149270e/src%2Ftest%2Fui%2Fborrowck%2Fpromote-ref-mut-in-let-issue-46557.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/75504eeffa58868e025853b5690714c8c149270e/src%2Ftest%2Fui%2Fborrowck%2Fpromote-ref-mut-in-let-issue-46557.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fpromote-ref-mut-in-let-issue-46557.nll.stderr?ref=75504eeffa58868e025853b5690714c8c149270e", "patch": "@@ -1,30 +1,24 @@\n error[E0597]: borrowed value does not live long enough\n   --> $DIR/promote-ref-mut-in-let-issue-46557.rs:15:21\n    |\n-LL |   fn gimme_static_mut_let() -> &'static mut u32 {\n-   |  _______________________________________________-\n-LL | |     let ref mut x = 1234543; //~ ERROR\n-   | |                     ^^^^^^^ temporary value does not live long enough\n-LL | |     x\n-LL | | }\n-   | | -\n-   | | |\n-   | |_temporary value only lives until here\n-   |   borrow later used here\n+LL |     let ref mut x = 1234543; //~ ERROR\n+   |                     ^^^^^^^ temporary value does not live long enough\n+LL |     x\n+LL | }\n+   | - temporary value only lives until here\n+   |\n+   = note: borrowed value must be valid for the static lifetime...\n \n error[E0597]: borrowed value does not live long enough\n   --> $DIR/promote-ref-mut-in-let-issue-46557.rs:20:25\n    |\n-LL |   fn gimme_static_mut_let_nested() -> &'static mut u32 {\n-   |  ______________________________________________________-\n-LL | |     let (ref mut x, ) = (1234543, ); //~ ERROR\n-   | |                         ^^^^^^^^^^^ temporary value does not live long enough\n-LL | |     x\n-LL | | }\n-   | | -\n-   | | |\n-   | |_temporary value only lives until here\n-   |   borrow later used here\n+LL |     let (ref mut x, ) = (1234543, ); //~ ERROR\n+   |                         ^^^^^^^^^^^ temporary value does not live long enough\n+LL |     x\n+LL | }\n+   | - temporary value only lives until here\n+   |\n+   = note: borrowed value must be valid for the static lifetime...\n \n error[E0597]: borrowed value does not live long enough\n   --> $DIR/promote-ref-mut-in-let-issue-46557.rs:25:11"}, {"sha": "580dce3c0fe632691f65bc1d8d35d1e153275397", "filename": "src/test/ui/nll/get_default.nll.stderr", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/75504eeffa58868e025853b5690714c8c149270e/src%2Ftest%2Fui%2Fnll%2Fget_default.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/75504eeffa58868e025853b5690714c8c149270e/src%2Ftest%2Fui%2Fnll%2Fget_default.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fget_default.nll.stderr?ref=75504eeffa58868e025853b5690714c8c149270e", "patch": "@@ -63,9 +63,18 @@ LL |         match map.get() {\n LL |             Some(v) => {\n LL |                 map.set(String::new()); // Both AST and MIR error here\n    |                 ^^^^^^^^^^^^^^^^^^^^^^ mutable borrow occurs here\n-...\n-LL |                 return v;\n-   |                        - borrow later used here\n+   |\n+note: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 41:1...\n+  --> $DIR/get_default.rs:41:1\n+   |\n+LL | / fn err(map: &mut Map) -> &String {\n+LL | |     loop {\n+LL | |         match map.get() {\n+LL | |             Some(v) => {\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n \n error[E0502]: cannot borrow `*map` as mutable because it is also borrowed as immutable (Mir)\n   --> $DIR/get_default.rs:51:17"}, {"sha": "2f8eab907c7bb5185353420d28460e9ac2cd38e6", "filename": "src/test/ui/nll/get_default.stderr", "status": "modified", "additions": 12, "deletions": 3, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/75504eeffa58868e025853b5690714c8c149270e/src%2Ftest%2Fui%2Fnll%2Fget_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/75504eeffa58868e025853b5690714c8c149270e/src%2Ftest%2Fui%2Fnll%2Fget_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fget_default.stderr?ref=75504eeffa58868e025853b5690714c8c149270e", "patch": "@@ -63,9 +63,18 @@ LL |         match map.get() {\n LL |             Some(v) => {\n LL |                 map.set(String::new()); // Both AST and MIR error here\n    |                 ^^^ mutable borrow occurs here\n-...\n-LL |                 return v;\n-   |                        - borrow later used here\n+   |\n+note: borrowed value must be valid for the anonymous lifetime #1 defined on the function body at 41:1...\n+  --> $DIR/get_default.rs:41:1\n+   |\n+LL | / fn err(map: &mut Map) -> &String {\n+LL | |     loop {\n+LL | |         match map.get() {\n+LL | |             Some(v) => {\n+...  |\n+LL | |     }\n+LL | | }\n+   | |_^\n \n error[E0502]: cannot borrow `*map` as mutable because it is also borrowed as immutable (Mir)\n   --> $DIR/get_default.rs:51:17"}, {"sha": "f441085f242edddc102c2078ba1fd1691134b523", "filename": "src/test/ui/nll/return-ref-mut-issue-46557.stderr", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/75504eeffa58868e025853b5690714c8c149270e/src%2Ftest%2Fui%2Fnll%2Freturn-ref-mut-issue-46557.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/75504eeffa58868e025853b5690714c8c149270e/src%2Ftest%2Fui%2Fnll%2Freturn-ref-mut-issue-46557.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Freturn-ref-mut-issue-46557.stderr?ref=75504eeffa58868e025853b5690714c8c149270e", "patch": "@@ -1,16 +1,13 @@\n error[E0597]: borrowed value does not live long enough\n   --> $DIR/return-ref-mut-issue-46557.rs:17:21\n    |\n-LL |   fn gimme_static_mut() -> &'static mut u32 {\n-   |  ___________________________________________-\n-LL | |     let ref mut x = 1234543; //~ ERROR borrowed value does not live long enough [E0597]\n-   | |                     ^^^^^^^ temporary value does not live long enough\n-LL | |     x\n-LL | | }\n-   | | -\n-   | | |\n-   | |_temporary value only lives until here\n-   |   borrow later used here\n+LL |     let ref mut x = 1234543; //~ ERROR borrowed value does not live long enough [E0597]\n+   |                     ^^^^^^^ temporary value does not live long enough\n+LL |     x\n+LL | }\n+   | - temporary value only lives until here\n+   |\n+   = note: borrowed value must be valid for the static lifetime...\n \n error: aborting due to previous error\n "}]}