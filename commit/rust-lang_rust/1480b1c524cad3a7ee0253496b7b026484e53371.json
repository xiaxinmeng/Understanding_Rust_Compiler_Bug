{"sha": "1480b1c524cad3a7ee0253496b7b026484e53371", "node_id": "C_kwDOAAsO6NoAKDE0ODBiMWM1MjRjYWQzYTdlZTAyNTM0OTZiN2IwMjY0ODRlNTMzNzE", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-11T16:38:42Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-02-18T21:35:02Z"}, "message": "Correct comment.", "tree": {"sha": "0705f3e3eba905d47b726d1408ecf8183d8e6819", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0705f3e3eba905d47b726d1408ecf8183d8e6819"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1480b1c524cad3a7ee0253496b7b026484e53371", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1480b1c524cad3a7ee0253496b7b026484e53371", "html_url": "https://github.com/rust-lang/rust/commit/1480b1c524cad3a7ee0253496b7b026484e53371", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1480b1c524cad3a7ee0253496b7b026484e53371/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0cc00f7580d154aa8d9edd777a5aa7e6e6cfd22", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0cc00f7580d154aa8d9edd777a5aa7e6e6cfd22", "html_url": "https://github.com/rust-lang/rust/commit/d0cc00f7580d154aa8d9edd777a5aa7e6e6cfd22"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "badf33293ad4a57133730247dbe560f6d65cef9d", "filename": "compiler/rustc_middle/src/mir/syntax.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1480b1c524cad3a7ee0253496b7b026484e53371/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1480b1c524cad3a7ee0253496b7b026484e53371/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fsyntax.rs?ref=1480b1c524cad3a7ee0253496b7b026484e53371", "patch": "@@ -672,8 +672,10 @@ pub enum TerminatorKind<'tcx> {\n     /// necessarily executed even in the case of a panic, for example in `-C panic=abort`. If the\n     /// assertion does not fail, execution continues at the specified basic block.\n     ///\n-    /// When overflow checking is disabled and we are generating run-time code, the `Overflow*`\n-    /// variants of this terminator are codegened as simple `goto target`.\n+    /// When overflow checking is disabled and this is run-time MIR (as opposed to compile-time MIR\n+    /// that is used for CTFE), the following variants of this terminator behave as `goto target`:\n+    /// - `OverflowNeg(..)`,\n+    /// - `Overflow(op, ..)` if op is a checkable operation (add, sub, mul, shl, shr).\n     Assert {\n         cond: Operand<'tcx>,\n         expected: bool,"}]}