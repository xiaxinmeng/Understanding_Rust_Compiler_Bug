{"sha": "e31661cb9e5effdae3be7eec55143e2e8ece9e14", "node_id": "C_kwDOAAsO6NoAKGUzMTY2MWNiOWU1ZWZmZGFlM2JlN2VlYzU1MTQzZTJlOGVjZTllMTQ", "commit": {"author": {"name": "Esme Yi", "email": "onelirong@gmail.com", "date": "2023-06-05T07:15:09Z"}, "committer": {"name": "Esme Yi", "email": "onelirong@gmail.com", "date": "2023-06-05T07:15:09Z"}, "message": "Address @bjorn3's comments.", "tree": {"sha": "5705dbbcc3418cf085cb3a398a2471236cdb776e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5705dbbcc3418cf085cb3a398a2471236cdb776e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e31661cb9e5effdae3be7eec55143e2e8ece9e14", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e31661cb9e5effdae3be7eec55143e2e8ece9e14", "html_url": "https://github.com/rust-lang/rust/commit/e31661cb9e5effdae3be7eec55143e2e8ece9e14", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e31661cb9e5effdae3be7eec55143e2e8ece9e14/comments", "author": {"login": "EsmeYi", "id": 33888773, "node_id": "MDQ6VXNlcjMzODg4Nzcz", "avatar_url": "https://avatars.githubusercontent.com/u/33888773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EsmeYi", "html_url": "https://github.com/EsmeYi", "followers_url": "https://api.github.com/users/EsmeYi/followers", "following_url": "https://api.github.com/users/EsmeYi/following{/other_user}", "gists_url": "https://api.github.com/users/EsmeYi/gists{/gist_id}", "starred_url": "https://api.github.com/users/EsmeYi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EsmeYi/subscriptions", "organizations_url": "https://api.github.com/users/EsmeYi/orgs", "repos_url": "https://api.github.com/users/EsmeYi/repos", "events_url": "https://api.github.com/users/EsmeYi/events{/privacy}", "received_events_url": "https://api.github.com/users/EsmeYi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "EsmeYi", "id": 33888773, "node_id": "MDQ6VXNlcjMzODg4Nzcz", "avatar_url": "https://avatars.githubusercontent.com/u/33888773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/EsmeYi", "html_url": "https://github.com/EsmeYi", "followers_url": "https://api.github.com/users/EsmeYi/followers", "following_url": "https://api.github.com/users/EsmeYi/following{/other_user}", "gists_url": "https://api.github.com/users/EsmeYi/gists{/gist_id}", "starred_url": "https://api.github.com/users/EsmeYi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/EsmeYi/subscriptions", "organizations_url": "https://api.github.com/users/EsmeYi/orgs", "repos_url": "https://api.github.com/users/EsmeYi/repos", "events_url": "https://api.github.com/users/EsmeYi/events{/privacy}", "received_events_url": "https://api.github.com/users/EsmeYi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18fdca37cf0c1e0b8e2a71c9fb36d02467b618ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/18fdca37cf0c1e0b8e2a71c9fb36d02467b618ef", "html_url": "https://github.com/rust-lang/rust/commit/18fdca37cf0c1e0b8e2a71c9fb36d02467b618ef"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "4975a8778dddedf627bde247049f215a4fc9a585", "filename": "compiler/rustc_codegen_ssa/src/back/metadata.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e31661cb9e5effdae3be7eec55143e2e8ece9e14/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e31661cb9e5effdae3be7eec55143e2e8ece9e14/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Fmetadata.rs?ref=e31661cb9e5effdae3be7eec55143e2e8ece9e14", "patch": "@@ -377,6 +377,7 @@ pub fn create_wrapper_file(\n                 SectionFlags::Elf { sh_flags: elf::SHF_EXCLUDE as u64 };\n         }\n         BinaryFormat::Xcoff => {\n+            // AIX system linker may aborts if it meets a valid XCOFF file in archive with no .text, no .data and no .bss.\n             file.add_section(Vec::new(), b\".text\".to_vec(), SectionKind::Text);\n             file.section_mut(section).flags =\n                 SectionFlags::Xcoff { s_flags: xcoff::STYP_INFO as u32 };\n@@ -389,7 +390,7 @@ pub fn create_wrapper_file(\n                 value: offset + 4,\n                 size: 0,\n                 kind: SymbolKind::Unknown,\n-                scope: SymbolScope::Dynamic,\n+                scope: SymbolScope::Compilation,\n                 weak: false,\n                 section: SymbolSection::Section(section),\n                 flags: SymbolFlags::Xcoff {\n@@ -488,6 +489,7 @@ pub fn create_compressed_metadata_file_for_xcoff(\n     symbol_name: &str,\n ) -> Vec<u8> {\n     assert!(file.format() == BinaryFormat::Xcoff);\n+    // AIX system linker may aborts if it meets a valid XCOFF file in archive with no .text, no .data and no .bss.\n     file.add_section(Vec::new(), b\".text\".to_vec(), SectionKind::Text);\n     let data_section = file.add_section(Vec::new(), b\".data\".to_vec(), SectionKind::Data);\n     let section = file.add_section(Vec::new(), b\".info\".to_vec(), SectionKind::Debug);"}]}