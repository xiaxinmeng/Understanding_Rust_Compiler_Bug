{"sha": "54d9ba8239f12db556426db19fca4c4a6e9730e8", "node_id": "C_kwDOAAsO6NoAKDU0ZDliYTgyMzlmMTJkYjU1NjQyNmRiMTlmY2E0YzRhNmU5NzMwZTg", "commit": {"author": {"name": "Nicholas Bishop", "email": "nbishop@nbishop.net", "date": "2022-09-04T16:42:03Z"}, "committer": {"name": "Nicholas Bishop", "email": "nicholasbishop@google.com", "date": "2022-09-09T19:26:19Z"}, "message": "Use RelocModel::Pic for UEFI targets\n\nIn https://github.com/rust-lang/rust/pull/100537, the relocation model\nfor UEFI targets was changed from PIC (the default value) to\nstatic. There was some dicussion of this change here:\nhttps://github.com/rust-lang/rust/pull/100537#discussion_r952363012\n\nIt turns out that this can cause compilation to fail as described in\nhttps://github.com/rust-lang/rust/issues/101377, so switch back to PIC.\n\nFixes https://github.com/rust-lang/rust/issues/101377", "tree": {"sha": "c8555a6f55fe815a7ce3ae7bfab44031676083f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8555a6f55fe815a7ce3ae7bfab44031676083f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/54d9ba8239f12db556426db19fca4c4a6e9730e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/54d9ba8239f12db556426db19fca4c4a6e9730e8", "html_url": "https://github.com/rust-lang/rust/commit/54d9ba8239f12db556426db19fca4c4a6e9730e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/54d9ba8239f12db556426db19fca4c4a6e9730e8/comments", "author": {"login": "nicholasbishop", "id": 1023208, "node_id": "MDQ6VXNlcjEwMjMyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1023208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicholasbishop", "html_url": "https://github.com/nicholasbishop", "followers_url": "https://api.github.com/users/nicholasbishop/followers", "following_url": "https://api.github.com/users/nicholasbishop/following{/other_user}", "gists_url": "https://api.github.com/users/nicholasbishop/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicholasbishop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicholasbishop/subscriptions", "organizations_url": "https://api.github.com/users/nicholasbishop/orgs", "repos_url": "https://api.github.com/users/nicholasbishop/repos", "events_url": "https://api.github.com/users/nicholasbishop/events{/privacy}", "received_events_url": "https://api.github.com/users/nicholasbishop/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nicholasbishop", "id": 1023208, "node_id": "MDQ6VXNlcjEwMjMyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1023208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nicholasbishop", "html_url": "https://github.com/nicholasbishop", "followers_url": "https://api.github.com/users/nicholasbishop/followers", "following_url": "https://api.github.com/users/nicholasbishop/following{/other_user}", "gists_url": "https://api.github.com/users/nicholasbishop/gists{/gist_id}", "starred_url": "https://api.github.com/users/nicholasbishop/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nicholasbishop/subscriptions", "organizations_url": "https://api.github.com/users/nicholasbishop/orgs", "repos_url": "https://api.github.com/users/nicholasbishop/repos", "events_url": "https://api.github.com/users/nicholasbishop/events{/privacy}", "received_events_url": "https://api.github.com/users/nicholasbishop/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98f3001eecbe4cbd091c10ffab45b4c164bb507b", "url": "https://api.github.com/repos/rust-lang/rust/commits/98f3001eecbe4cbd091c10ffab45b4c164bb507b", "html_url": "https://github.com/rust-lang/rust/commit/98f3001eecbe4cbd091c10ffab45b4c164bb507b"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "0af599916a999429b33f434b2ad50575b7498401", "filename": "compiler/rustc_target/src/spec/tests/tests_impl.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/54d9ba8239f12db556426db19fca4c4a6e9730e8/compiler%2Frustc_target%2Fsrc%2Fspec%2Ftests%2Ftests_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54d9ba8239f12db556426db19fca4c4a6e9730e8/compiler%2Frustc_target%2Fsrc%2Fspec%2Ftests%2Ftests_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Ftests%2Ftests_impl.rs?ref=54d9ba8239f12db556426db19fca4c4a6e9730e8", "patch": "@@ -146,7 +146,8 @@ impl Target {\n         if self.position_independent_executables && !triple.ends_with(\"-linuxkernel\") {\n             assert_eq!(self.relocation_model, RelocModel::Pic);\n         }\n-        if self.relocation_model == RelocModel::Pic {\n+        // The UEFI targets do not support dynamic linking but still require PIC (#101377).\n+        if self.relocation_model == RelocModel::Pic && self.os != \"uefi\" {\n             assert!(self.dynamic_linking || self.position_independent_executables);\n         }\n         if self.static_position_independent_executables {"}, {"sha": "99af7d85e1d0235313033f9ef4651362e3d263b6", "filename": "compiler/rustc_target/src/spec/uefi_msvc_base.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/54d9ba8239f12db556426db19fca4c4a6e9730e8/compiler%2Frustc_target%2Fsrc%2Fspec%2Fuefi_msvc_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54d9ba8239f12db556426db19fca4c4a6e9730e8/compiler%2Frustc_target%2Fsrc%2Fspec%2Fuefi_msvc_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fuefi_msvc_base.rs?ref=54d9ba8239f12db556426db19fca4c4a6e9730e8", "patch": "@@ -10,7 +10,7 @@\n // code runs in the same environment, no process separation is supported.\n \n use crate::spec::{LinkerFlavor, LldFlavor, PanicStrategy};\n-use crate::spec::{RelocModel, StackProbeType, TargetOptions};\n+use crate::spec::{StackProbeType, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n     let mut base = super::msvc_base::opts();\n@@ -47,7 +47,6 @@ pub fn opts() -> TargetOptions {\n         stack_probes: StackProbeType::Call,\n         singlethread: true,\n         linker: Some(\"rust-lld\".into()),\n-        relocation_model: RelocModel::Static,\n         ..base\n     }\n }"}, {"sha": "b4fda5f8c8428d0c879382dbf0a6e616af8315f6", "filename": "src/test/codegen/abi-efiapi.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/54d9ba8239f12db556426db19fca4c4a6e9730e8/src%2Ftest%2Fcodegen%2Fabi-efiapi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/54d9ba8239f12db556426db19fca4c4a6e9730e8/src%2Ftest%2Fcodegen%2Fabi-efiapi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fabi-efiapi.rs?ref=54d9ba8239f12db556426db19fca4c4a6e9730e8", "patch": "@@ -24,7 +24,7 @@ trait Freeze { }\n #[lang=\"copy\"]\n trait Copy { }\n \n-//x86_64: define dso_local win64cc void @has_efiapi\n+//x86_64: define win64cc void @has_efiapi\n //i686: define void @has_efiapi\n //aarch64: define dso_local void @has_efiapi\n //arm: define dso_local void @has_efiapi"}]}