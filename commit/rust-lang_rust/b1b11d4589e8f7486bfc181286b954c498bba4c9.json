{"sha": "b1b11d4589e8f7486bfc181286b954c498bba4c9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxYjExZDQ1ODllOGY3NDg2YmZjMTgxMjg2Yjk1NGM0OThiYmE0Yzk=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-01-27T21:12:28Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-02-08T09:53:09Z"}, "message": "Pass themes folder as parameter", "tree": {"sha": "ea180156d21a7e857a546ea846452aad062eb59b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea180156d21a7e857a546ea846452aad062eb59b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1b11d4589e8f7486bfc181286b954c498bba4c9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1b11d4589e8f7486bfc181286b954c498bba4c9", "html_url": "https://github.com/rust-lang/rust/commit/b1b11d4589e8f7486bfc181286b954c498bba4c9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1b11d4589e8f7486bfc181286b954c498bba4c9/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51580d46f919c1f97d82aeca1ea1086c545c7484", "url": "https://api.github.com/repos/rust-lang/rust/commits/51580d46f919c1f97d82aeca1ea1086c545c7484", "html_url": "https://github.com/rust-lang/rust/commit/51580d46f919c1f97d82aeca1ea1086c545c7484"}], "stats": {"total": 26, "additions": 14, "deletions": 12}, "files": [{"sha": "351d10df28d2cf7ca800c24d353d7a7b6d4e5811", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1b11d4589e8f7486bfc181286b954c498bba4c9/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1b11d4589e8f7486bfc181286b954c498bba4c9/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=b1b11d4589e8f7486bfc181286b954c498bba4c9", "patch": "@@ -451,7 +451,9 @@ impl Step for RustdocTheme {\n     fn run(self, builder: &Builder) {\n         let rustdoc = builder.rustdoc(self.compiler.host);\n         let mut cmd = Command::new(builder.config.python.clone().expect(\"python not defined\"));\n-        cmd.args(&[\"src/tools/rustdoc-themes/test-themes.py\", rustdoc.to_str().unwrap()]);\n+        cmd.args(&[builder.src.join(\"src/tools/rustdoc-themes/test-themes.py\").to_str().unwrap(),\n+                   rustdoc.to_str().unwrap(),\n+                   builder.src.join(\"src/librustdoc/html/static/themes\").to_str().unwrap()]);\n         cmd.env(\"RUSTC_STAGE\", self.compiler.stage.to_string())\n            .env(\"RUSTC_SYSROOT\", builder.sysroot(self.compiler))\n            .env(\"RUSTDOC_LIBDIR\", builder.sysroot_libdir(self.compiler, self.compiler.host))"}, {"sha": "a72026c7d6b27b8426ae167de4631db004635183", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b1b11d4589e8f7486bfc181286b954c498bba4c9/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1b11d4589e8f7486bfc181286b954c498bba4c9/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=b1b11d4589e8f7486bfc181286b954c498bba4c9", "patch": "@@ -332,10 +332,10 @@ pub fn main_args(args: &[String]) -> isize {\n             print!(\" - Checking \\\"{}\\\"...\", theme_file);\n             let (success, differences) = theme::test_theme_against(theme_file, &paths);\n             if !differences.is_empty() || !success {\n-                eprintln!(\" FAILED\");\n+                println!(\" FAILED\");\n                 errors += 1;\n                 if !differences.is_empty() {\n-                    eprintln!(\"{}\", differences.join(\"\\n\"));\n+                    println!(\"{}\", differences.join(\"\\n\"));\n                 }\n             } else {\n                 println!(\" OK\");\n@@ -407,13 +407,13 @@ pub fn main_args(args: &[String]) -> isize {\n                                             .iter()\n                                             .map(|s| (PathBuf::from(&s), s.to_owned())) {\n             if !theme_file.is_file() {\n-                eprintln!(\"rustdoc: option --themes arguments must all be files\");\n+                println!(\"rustdoc: option --themes arguments must all be files\");\n                 return 1;\n             }\n             let (success, ret) = theme::test_theme_against(&theme_file, &paths);\n             if !success || !ret.is_empty() {\n-                eprintln!(\"rustdoc: invalid theme: \\\"{}\\\"\", theme_s);\n-                eprintln!(\"         Check what's wrong with the \\\"theme-checker\\\" option\");\n+                println!(\"rustdoc: invalid theme: \\\"{}\\\"\", theme_s);\n+                println!(\"         Check what's wrong with the \\\"theme-checker\\\" option\");\n                 return 1;\n             }\n             themes.push(theme_file);"}, {"sha": "1e4f64f5c52c9edd51e538a637866d85a0f5879a", "filename": "src/librustdoc/theme.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1b11d4589e8f7486bfc181286b954c498bba4c9/src%2Flibrustdoc%2Ftheme.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1b11d4589e8f7486bfc181286b954c498bba4c9/src%2Flibrustdoc%2Ftheme.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftheme.rs?ref=b1b11d4589e8f7486bfc181286b954c498bba4c9", "patch": "@@ -348,7 +348,7 @@ c // sdf\n d {}\n \"#;\n         let paths = load_css_paths(text.as_bytes());\n-        assert!(paths.children.get(&CssPath::new(\"a b c d\".to_owned())).is_some());\n+        assert!(paths.children.contains(&CssPath::new(\"a b c d\".to_owned())));\n     }\n \n     #[test]"}, {"sha": "31591277ce356af628eda75f9728e4c9f2e8fbaa", "filename": "src/tools/rustdoc-themes/test-themes.py", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b1b11d4589e8f7486bfc181286b954c498bba4c9/src%2Ftools%2Frustdoc-themes%2Ftest-themes.py", "raw_url": "https://github.com/rust-lang/rust/raw/b1b11d4589e8f7486bfc181286b954c498bba4c9/src%2Ftools%2Frustdoc-themes%2Ftest-themes.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-themes%2Ftest-themes.py?ref=b1b11d4589e8f7486bfc181286b954c498bba4c9", "patch": "@@ -17,7 +17,6 @@\n import sys\n \n FILES_TO_IGNORE = ['main.css']\n-THEME_DIR_PATH = \"src/librustdoc/html/static/themes\"\n \n \n def print_err(msg):\n@@ -31,14 +30,15 @@ def exec_command(command):\n \n \n def main(argv):\n-    if len(argv) < 1:\n+    if len(argv) < 2:\n         print_err(\"Needs rustdoc binary path\")\n         return 1\n     rustdoc_bin = argv[0]\n-    themes = [join(THEME_DIR_PATH, f) for f in listdir(THEME_DIR_PATH)\n-              if isfile(join(THEME_DIR_PATH, f)) and f not in FILES_TO_IGNORE]\n+    themes_folder = argv[1]\n+    themes = [join(themes_folder, f) for f in listdir(themes_folder)\n+              if isfile(join(themes_folder, f)) and f not in FILES_TO_IGNORE]\n     if len(themes) < 1:\n-        print_err('No theme found in \"{}\"...'.format(THEME_DIR_PATH))\n+        print_err('No theme found in \"{}\"...'.format(themes_folder))\n         return 1\n     args = [rustdoc_bin, '-Z', 'unstable-options', '--theme-checker']\n     args.extend(themes)"}]}