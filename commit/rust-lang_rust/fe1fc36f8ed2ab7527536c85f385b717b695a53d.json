{"sha": "fe1fc36f8ed2ab7527536c85f385b717b695a53d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlMWZjMzZmOGVkMmFiNzUyNzUzNmM4NWYzODViNzE3YjY5NWE1M2Q=", "commit": {"author": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-01-28T18:24:52Z"}, "committer": {"name": "Jack Huey", "email": "jack.huey@umassmed.edu", "date": "2021-01-28T18:24:52Z"}, "message": "Add some test for ATB issues", "tree": {"sha": "c8e7a4d59978cc76e2f8d061f789fcfe380d0377", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8e7a4d59978cc76e2f8d061f789fcfe380d0377"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe1fc36f8ed2ab7527536c85f385b717b695a53d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe1fc36f8ed2ab7527536c85f385b717b695a53d", "html_url": "https://github.com/rust-lang/rust/commit/fe1fc36f8ed2ab7527536c85f385b717b695a53d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe1fc36f8ed2ab7527536c85f385b717b695a53d/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "643a79af3d5a31fa87c8a4c9d7f8bc4ebe2add4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/643a79af3d5a31fa87c8a4c9d7f8bc4ebe2add4b", "html_url": "https://github.com/rust-lang/rust/commit/643a79af3d5a31fa87c8a4c9d7f8bc4ebe2add4b"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "7e898851aa83ab30bbfcb2d4ed55bd2d84d5011f", "filename": "src/test/ui/associated-types/issue-38917.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/fe1fc36f8ed2ab7527536c85f385b717b695a53d/src%2Ftest%2Fui%2Fassociated-types%2Fissue-38917.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1fc36f8ed2ab7527536c85f385b717b695a53d/src%2Ftest%2Fui%2Fassociated-types%2Fissue-38917.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-38917.rs?ref=fe1fc36f8ed2ab7527536c85f385b717b695a53d", "patch": "@@ -0,0 +1,25 @@\n+// check-pass\n+\n+use std::borrow::Borrow;\n+\n+trait TNode: Sized {\n+    type ConcreteElement: TElement<ConcreteNode = Self>;\n+}\n+\n+trait TElement: Sized {\n+    type ConcreteNode: TNode<ConcreteElement = Self>;\n+}\n+\n+trait DomTraversal<N: TNode> {\n+    type BorrowElement: Borrow<N::ConcreteElement>;\n+}\n+\n+#[allow(dead_code)]\n+fn recalc_style_at<E, D>()\n+where\n+    E: TElement,\n+    D: DomTraversal<E::ConcreteNode>,\n+{\n+}\n+\n+fn main() {}"}, {"sha": "fd325ae1008610367c2a803857fab14cefab2b71", "filename": "src/test/ui/associated-types/issue-40093.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fe1fc36f8ed2ab7527536c85f385b717b695a53d/src%2Ftest%2Fui%2Fassociated-types%2Fissue-40093.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1fc36f8ed2ab7527536c85f385b717b695a53d/src%2Ftest%2Fui%2Fassociated-types%2Fissue-40093.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-40093.rs?ref=fe1fc36f8ed2ab7527536c85f385b717b695a53d", "patch": "@@ -0,0 +1,14 @@\n+// check-pass\n+\n+pub trait Test {\n+    type Item;\n+    type Bundle: From<Self::Item>;\n+}\n+\n+fn fails<T>()\n+where\n+    T: Test<Item = String>,\n+{\n+}\n+\n+fn main() {}"}, {"sha": "5f177333c93d5addc3868d925b90f305d743cb8a", "filename": "src/test/ui/associated-types/issue-43475.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fe1fc36f8ed2ab7527536c85f385b717b695a53d/src%2Ftest%2Fui%2Fassociated-types%2Fissue-43475.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1fc36f8ed2ab7527536c85f385b717b695a53d/src%2Ftest%2Fui%2Fassociated-types%2Fissue-43475.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-43475.rs?ref=fe1fc36f8ed2ab7527536c85f385b717b695a53d", "patch": "@@ -0,0 +1,10 @@\n+// check-pass\n+\n+trait Foo { type FooT: Foo; }\n+impl Foo for () { type FooT = (); }\n+trait Bar<T: Foo> { type BarT: Bar<T::FooT>; }\n+impl Bar<()> for () { type BarT = (); }\n+\n+#[allow(dead_code)]\n+fn test<C: Bar<()>>() { }\n+fn main() { }"}, {"sha": "4d2e39f4da60c788e9e625a3a62584b5daf508ac", "filename": "src/test/ui/associated-types/issue-63591.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fe1fc36f8ed2ab7527536c85f385b717b695a53d/src%2Ftest%2Fui%2Fassociated-types%2Fissue-63591.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe1fc36f8ed2ab7527536c85f385b717b695a53d/src%2Ftest%2Fui%2Fassociated-types%2Fissue-63591.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-types%2Fissue-63591.rs?ref=fe1fc36f8ed2ab7527536c85f385b717b695a53d", "patch": "@@ -0,0 +1,24 @@\n+// check-pass\n+\n+#![feature(associated_type_bounds)]\n+#![feature(type_alias_impl_trait)]\n+\n+fn main() {}\n+\n+trait Bar { type Assoc; }\n+\n+trait Thing {\n+    type Out;\n+    fn func() -> Self::Out;\n+}\n+\n+struct AssocIsCopy;\n+impl Bar for AssocIsCopy { type Assoc = u8; }\n+\n+impl Thing for AssocIsCopy {\n+    type Out = impl Bar<Assoc: Copy>;\n+\n+    fn func() -> Self::Out {\n+        AssocIsCopy\n+    }\n+}"}]}