{"sha": "3a9a0bc968d9bb97c80f18b4323b3ad75cc8bbad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhOWEwYmM5NjhkOWJiOTdjODBmMThiNDMyM2IzYWQ3NWNjOGJiYWQ=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-07-14T12:19:00Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2019-08-12T19:43:00Z"}, "message": "Add another test for assoc type resolution", "tree": {"sha": "e5346bea5c8d1cdbb79b87367d08d70697da5b9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e5346bea5c8d1cdbb79b87367d08d70697da5b9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a9a0bc968d9bb97c80f18b4323b3ad75cc8bbad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a9a0bc968d9bb97c80f18b4323b3ad75cc8bbad", "html_url": "https://github.com/rust-lang/rust/commit/3a9a0bc968d9bb97c80f18b4323b3ad75cc8bbad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a9a0bc968d9bb97c80f18b4323b3ad75cc8bbad/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cf48e48d75d267bfa38ff1319e7f7c0468fb53f", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cf48e48d75d267bfa38ff1319e7f7c0468fb53f", "html_url": "https://github.com/rust-lang/rust/commit/0cf48e48d75d267bfa38ff1319e7f7c0468fb53f"}], "stats": {"total": 52, "additions": 46, "deletions": 6}, "files": [{"sha": "9d412ff613ad5e45fec988a5fcd0d4d5ae87d7a2", "filename": "crates/ra_hir/src/ty/tests.rs", "status": "modified", "additions": 46, "deletions": 6, "changes": 52, "blob_url": "https://github.com/rust-lang/rust/blob/3a9a0bc968d9bb97c80f18b4323b3ad75cc8bbad/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a9a0bc968d9bb97c80f18b4323b3ad75cc8bbad/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Ftests.rs?ref=3a9a0bc968d9bb97c80f18b4323b3ad75cc8bbad", "patch": "@@ -2508,15 +2508,55 @@ struct S;\n impl Iterable for S { type Item = u32; }\n fn test<T: Iterable>() {\n     let x: <S as Iterable>::Item = 1;\n-    let y: T::Item = no_matter;\n+    let y: <T as Iterable>::Item = no_matter;\n+    let z: T::Item = no_matter;\n }\n \"#),\n         @r###\"\n-[108; 181) '{     ...ter; }': ()\n-[118; 119) 'x': i32\n-[145; 146) '1': i32\n-[156; 157) 'y': {unknown}\n-[169; 178) 'no_matter': {unknown}\"###\n+   \u22ee\n+   \u22ee[108; 227) '{     ...ter; }': ()\n+   \u22ee[118; 119) 'x': i32\n+   \u22ee[145; 146) '1': i32\n+   \u22ee[156; 157) 'y': {unknown}\n+   \u22ee[183; 192) 'no_matter': {unknown}\n+   \u22ee[202; 203) 'z': {unknown}\n+   \u22ee[215; 224) 'no_matter': {unknown}\n+    \"###\n+    );\n+}\n+\n+#[test]\n+fn infer_return_associated_type() {\n+    assert_snapshot_matches!(\n+        infer(r#\"\n+trait Iterable {\n+   type Item;\n+}\n+struct S;\n+impl Iterable for S { type Item = u32; }\n+fn foo1<T: Iterable>(t: T) -> T::Item {}\n+fn foo2<T: Iterable>(t: T) -> <T as Iterable>::Item {}\n+fn test() {\n+    let x = foo1(S);\n+    let y = foo2(S);\n+}\n+\"#),\n+        @r###\"\n+   \u22ee\n+   \u22ee[106; 107) 't': T\n+   \u22ee[123; 125) '{}': ()\n+   \u22ee[147; 148) 't': T\n+   \u22ee[178; 180) '{}': ()\n+   \u22ee[191; 236) '{     ...(S); }': ()\n+   \u22ee[201; 202) 'x': {unknown}\n+   \u22ee[205; 209) 'foo1': fn foo1<S>(T) -> {unknown}\n+   \u22ee[205; 212) 'foo1(S)': {unknown}\n+   \u22ee[210; 211) 'S': S\n+   \u22ee[222; 223) 'y': {unknown}\n+   \u22ee[226; 230) 'foo2': fn foo2<S>(T) -> {unknown}\n+   \u22ee[226; 233) 'foo2(S)': {unknown}\n+   \u22ee[231; 232) 'S': S\n+    \"###\n     );\n }\n "}]}