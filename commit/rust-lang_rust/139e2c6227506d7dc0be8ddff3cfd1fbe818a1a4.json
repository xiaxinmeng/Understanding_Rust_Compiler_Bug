{"sha": "139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzOWUyYzYyMjc1MDZkN2RjMGJlOGRkZmYzY2ZkMWZiZTgxOGExYTQ=", "commit": {"author": {"name": "Devin R", "email": "devin.ragotzy@gmail.com", "date": "2020-03-05T23:02:22Z"}, "committer": {"name": "Devin R", "email": "devin.ragotzy@gmail.com", "date": "2020-04-20T10:30:00Z"}, "message": "creating suggestion", "tree": {"sha": "e4ba2350d18ff7e358a0f4085f482fcbe10bd868", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e4ba2350d18ff7e358a0f4085f482fcbe10bd868"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4", "html_url": "https://github.com/rust-lang/rust/commit/139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4/comments", "author": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DevinR528", "id": 29749111, "node_id": "MDQ6VXNlcjI5NzQ5MTEx", "avatar_url": "https://avatars.githubusercontent.com/u/29749111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DevinR528", "html_url": "https://github.com/DevinR528", "followers_url": "https://api.github.com/users/DevinR528/followers", "following_url": "https://api.github.com/users/DevinR528/following{/other_user}", "gists_url": "https://api.github.com/users/DevinR528/gists{/gist_id}", "starred_url": "https://api.github.com/users/DevinR528/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DevinR528/subscriptions", "organizations_url": "https://api.github.com/users/DevinR528/orgs", "repos_url": "https://api.github.com/users/DevinR528/repos", "events_url": "https://api.github.com/users/DevinR528/events{/privacy}", "received_events_url": "https://api.github.com/users/DevinR528/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "001a42e632573abca10b2f8272f50a3999846e70", "url": "https://api.github.com/repos/rust-lang/rust/commits/001a42e632573abca10b2f8272f50a3999846e70", "html_url": "https://github.com/rust-lang/rust/commit/001a42e632573abca10b2f8272f50a3999846e70"}], "stats": {"total": 10, "additions": 9, "deletions": 1}, "files": [{"sha": "52e5b12c933a54d09eae51cab0c43f3c1cf64332", "filename": "clippy_lints/src/if_let_mutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4/clippy_lints%2Fsrc%2Fif_let_mutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4/clippy_lints%2Fsrc%2Fif_let_mutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fif_let_mutex.rs?ref=139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4", "patch": "@@ -30,7 +30,7 @@ declare_clippy_lint! {\n     /// ```\n     pub IF_LET_MUTEX,\n     correctness,\n-    \"locking a `Mutex` in an `if let` block can cause deadlock\"\n+    \"locking a `Mutex` in an `if let` block can cause deadlocks\"\n }\n \n declare_lint_pass!(IfLetMutex => [IF_LET_MUTEX]);"}, {"sha": "cbf56c047c0009cbc66c54bc9188e9a03499804d", "filename": "if_let_mutex", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4/if_let_mutex", "raw_url": "https://github.com/rust-lang/rust/raw/139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4/if_let_mutex", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/if_let_mutex?ref=139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4"}, {"sha": "2b9462cdfc09e19c066cc31a51a1cf6e9aec3921", "filename": "redundant_pattern_matching", "status": "added", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4/redundant_pattern_matching", "raw_url": "https://github.com/rust-lang/rust/raw/139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4/redundant_pattern_matching", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/redundant_pattern_matching?ref=139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4"}, {"sha": "a78a5e6ba194345f457daf62dd30242d1689e844", "filename": "tests/ui/redundant_pattern_matching.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4/tests%2Fui%2Fredundant_pattern_matching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4/tests%2Fui%2Fredundant_pattern_matching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching.rs?ref=139e2c6227506d7dc0be8ddff3cfd1fbe818a1a4", "patch": "@@ -85,6 +85,7 @@ fn main() {\n \n     let _ = does_something();\n     let _ = returns_unit();\n+    let _ = issue_5271();\n \n     let opt = Some(false);\n     let x = if let Some(_) = opt { true } else { false };\n@@ -112,3 +113,10 @@ fn returns_unit() {\n         false\n     };\n }\n+\n+fn issue_5271() {\n+    let hello = Some(String::from(\"hello\"));\n+    let _x = match hello {\n+        s @ _ => drop(s),\n+    };\n+}"}]}