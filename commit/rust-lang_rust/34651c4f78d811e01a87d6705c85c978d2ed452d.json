{"sha": "34651c4f78d811e01a87d6705c85c978d2ed452d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM0NjUxYzRmNzhkODExZTAxYTg3ZDY3MDVjODVjOTc4ZDJlZDQ1MmQ=", "commit": {"author": {"name": "Connor Brewster", "email": "brewsterc@my.caspercollege.edu", "date": "2016-03-12T05:41:22Z"}, "committer": {"name": "Connor Brewster", "email": "brewsterc@my.caspercollege.edu", "date": "2016-03-12T05:41:22Z"}, "message": "Fixed formatting", "tree": {"sha": "c68691d2484fca02f0620ff1f58d40d879a6aa60", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c68691d2484fca02f0620ff1f58d40d879a6aa60"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/34651c4f78d811e01a87d6705c85c978d2ed452d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/34651c4f78d811e01a87d6705c85c978d2ed452d", "html_url": "https://github.com/rust-lang/rust/commit/34651c4f78d811e01a87d6705c85c978d2ed452d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/34651c4f78d811e01a87d6705c85c978d2ed452d/comments", "author": {"login": "cbrewster", "id": 9086315, "node_id": "MDQ6VXNlcjkwODYzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9086315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbrewster", "html_url": "https://github.com/cbrewster", "followers_url": "https://api.github.com/users/cbrewster/followers", "following_url": "https://api.github.com/users/cbrewster/following{/other_user}", "gists_url": "https://api.github.com/users/cbrewster/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbrewster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbrewster/subscriptions", "organizations_url": "https://api.github.com/users/cbrewster/orgs", "repos_url": "https://api.github.com/users/cbrewster/repos", "events_url": "https://api.github.com/users/cbrewster/events{/privacy}", "received_events_url": "https://api.github.com/users/cbrewster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cbrewster", "id": 9086315, "node_id": "MDQ6VXNlcjkwODYzMTU=", "avatar_url": "https://avatars.githubusercontent.com/u/9086315?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbrewster", "html_url": "https://github.com/cbrewster", "followers_url": "https://api.github.com/users/cbrewster/followers", "following_url": "https://api.github.com/users/cbrewster/following{/other_user}", "gists_url": "https://api.github.com/users/cbrewster/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbrewster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbrewster/subscriptions", "organizations_url": "https://api.github.com/users/cbrewster/orgs", "repos_url": "https://api.github.com/users/cbrewster/repos", "events_url": "https://api.github.com/users/cbrewster/events{/privacy}", "received_events_url": "https://api.github.com/users/cbrewster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d24c31f74ca9f7c51576ce7151c99de0e2ffcb0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d24c31f74ca9f7c51576ce7151c99de0e2ffcb0a", "html_url": "https://github.com/rust-lang/rust/commit/d24c31f74ca9f7c51576ce7151c99de0e2ffcb0a"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "145c5ee1756fca31b13cb28051d06c39f1aa2377", "filename": "src/items.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/34651c4f78d811e01a87d6705c85c978d2ed452d/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34651c4f78d811e01a87d6705c85c978d2ed452d/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=34651c4f78d811e01a87d6705c85c978d2ed452d", "patch": "@@ -633,7 +633,7 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n             BraceStyle::AlwaysNextLine => {\n                 result.push('\\n');\n                 result.push_str(&offset.to_string(context.config));\n-            },\n+            }\n             BraceStyle::PreferSameLine => result.push(' '),\n             BraceStyle::SameLineWhere => {\n                 if !where_clause_str.is_empty() {\n@@ -1543,20 +1543,20 @@ fn rewrite_generics(context: &RewriteContext,\n }\n \n fn rewrite_trait_bounds(context: &RewriteContext,\n-                      type_param_bounds: &ast::TyParamBounds,\n-                      indent: Indent,\n-                      width: usize)\n-                      -> Option<String> {\n+                        type_param_bounds: &ast::TyParamBounds,\n+                        indent: Indent,\n+                        width: usize)\n+                        -> Option<String> {\n     let bounds: &[_] = &type_param_bounds.as_slice();\n \n     if bounds.is_empty() {\n         return Some(String::new());\n     }\n \n     let bound_str = bounds.iter()\n-                            .filter_map(|ty_bound| ty_bound.rewrite(&context, width, indent))\n-                            .collect::<Vec<String>>()\n-                            .join(\" + \");\n+                          .filter_map(|ty_bound| ty_bound.rewrite(&context, width, indent))\n+                          .collect::<Vec<String>>()\n+                          .join(\" + \");\n \n     let mut result = String::new();\n     result.push_str(\" : \");"}, {"sha": "31e5fb9a27aedb66f8e8a0993f50c8c82c533097", "filename": "src/visitor.rs", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/34651c4f78d811e01a87d6705c85c978d2ed452d/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/34651c4f78d811e01a87d6705c85c978d2ed452d/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=34651c4f78d811e01a87d6705c85c978d2ed452d", "patch": "@@ -347,9 +347,13 @@ impl<'a> FmtVisitor<'a> {\n \n                 let bounds: &[_] = &type_param_bounds.as_slice();\n                 let bound_str = bounds.iter()\n-                                        .filter_map(|ty_bound| ty_bound.rewrite(&self.get_context(), self.config.max_width, indent))\n-                                        .collect::<Vec<String>>()\n-                                        .join(\" + \");\n+                                      .filter_map(|ty_bound| {\n+                                          ty_bound.rewrite(&self.get_context(),\n+                                                           self.config.max_width,\n+                                                           indent)\n+                                      })\n+                                      .collect::<Vec<String>>()\n+                                      .join(\" + \");\n                 if bounds.len() > 0 {\n                     result.push_str(&format!(\": {}\", bound_str));\n                 }"}]}