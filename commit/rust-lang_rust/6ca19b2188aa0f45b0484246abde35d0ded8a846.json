{"sha": "6ca19b2188aa0f45b0484246abde35d0ded8a846", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZjYTE5YjIxODhhYTBmNDViMDQ4NDI0NmFiZGUzNWQwZGVkOGE4NDY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-28T14:31:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-01-28T14:32:20Z"}, "message": "Standard formatting for array types", "tree": {"sha": "fdd77d3ade10926927baa0733150d42e524fb20c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdd77d3ade10926927baa0733150d42e524fb20c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6ca19b2188aa0f45b0484246abde35d0ded8a846", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6ca19b2188aa0f45b0484246abde35d0ded8a846", "html_url": "https://github.com/rust-lang/rust/commit/6ca19b2188aa0f45b0484246abde35d0ded8a846", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6ca19b2188aa0f45b0484246abde35d0ded8a846/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82ffe597cabbad46852a2f44493f1dfce0f0016c", "url": "https://api.github.com/repos/rust-lang/rust/commits/82ffe597cabbad46852a2f44493f1dfce0f0016c", "html_url": "https://github.com/rust-lang/rust/commit/82ffe597cabbad46852a2f44493f1dfce0f0016c"}], "stats": {"total": 178, "additions": 89, "deletions": 89}, "files": [{"sha": "08d501ccd332b51cdf6967322376fce5f31e6886", "filename": "crates/ra_hir_ty/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ca19b2188aa0f45b0484246abde35d0ded8a846/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ca19b2188aa0f45b0484246abde35d0ded8a846/crates%2Fra_hir_ty%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Flib.rs?ref=6ca19b2188aa0f45b0484246abde35d0ded8a846", "patch": "@@ -847,7 +847,7 @@ impl HirDisplay for ApplicationTy {\n             }\n             TypeCtor::Array => {\n                 let t = self.parameters.as_single();\n-                write!(f, \"[{};_]\", t.display(f.db))?;\n+                write!(f, \"[{}; _]\", t.display(f.db))?;\n             }\n             TypeCtor::RawPtr(m) => {\n                 let t = self.parameters.as_single();"}, {"sha": "76a1b46c02c41b4b0f97397b1feb17e078372ef8", "filename": "crates/ra_hir_ty/src/tests/coercion.rs", "status": "modified", "additions": 48, "deletions": 48, "changes": 96, "blob_url": "https://github.com/rust-lang/rust/blob/6ca19b2188aa0f45b0484246abde35d0ded8a846/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ca19b2188aa0f45b0484246abde35d0ded8a846/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fcoercion.rs?ref=6ca19b2188aa0f45b0484246abde35d0ded8a846", "patch": "@@ -71,42 +71,42 @@ fn test2() {\n     [82; 93) '{ loop {} }': T\n     [84; 91) 'loop {}': !\n     [89; 91) '{}': ()\n-    [122; 133) '{ loop {} }': *mut [T;_]\n+    [122; 133) '{ loop {} }': *mut [T; _]\n     [124; 131) 'loop {}': !\n     [129; 131) '{}': ()\n     [160; 173) '{     gen() }': *mut [U]\n-    [166; 169) 'gen': fn gen<U>() -> *mut [T;_]\n-    [166; 171) 'gen()': *mut [U;_]\n+    [166; 169) 'gen': fn gen<U>() -> *mut [T; _]\n+    [166; 171) 'gen()': *mut [U; _]\n     [186; 420) '{     ...rr); }': ()\n-    [196; 199) 'arr': &[u8;_]\n-    [212; 216) '&[1]': &[u8;_]\n-    [213; 216) '[1]': [u8;_]\n+    [196; 199) 'arr': &[u8; _]\n+    [212; 216) '&[1]': &[u8; _]\n+    [213; 216) '[1]': [u8; _]\n     [214; 215) '1': u8\n     [227; 228) 'a': &[u8]\n-    [237; 240) 'arr': &[u8;_]\n+    [237; 240) 'arr': &[u8; _]\n     [250; 251) 'b': u8\n     [254; 255) 'f': fn f<u8>(&[T]) -> T\n     [254; 260) 'f(arr)': u8\n-    [256; 259) 'arr': &[u8;_]\n+    [256; 259) 'arr': &[u8; _]\n     [270; 271) 'c': &[u8]\n     [280; 287) '{ arr }': &[u8]\n-    [282; 285) 'arr': &[u8;_]\n+    [282; 285) 'arr': &[u8; _]\n     [297; 298) 'd': u8\n     [301; 302) 'g': fn g<u8>(S<&[T]>) -> T\n     [301; 316) 'g(S { a: arr })': u8\n     [303; 315) 'S { a: arr }': S<&[u8]>\n-    [310; 313) 'arr': &[u8;_]\n-    [326; 327) 'e': [&[u8];_]\n-    [341; 346) '[arr]': [&[u8];_]\n-    [342; 345) 'arr': &[u8;_]\n-    [356; 357) 'f': [&[u8];_]\n-    [371; 379) '[arr; 2]': [&[u8];_]\n-    [372; 375) 'arr': &[u8;_]\n+    [310; 313) 'arr': &[u8; _]\n+    [326; 327) 'e': [&[u8]; _]\n+    [341; 346) '[arr]': [&[u8]; _]\n+    [342; 345) 'arr': &[u8; _]\n+    [356; 357) 'f': [&[u8]; _]\n+    [371; 379) '[arr; 2]': [&[u8]; _]\n+    [372; 375) 'arr': &[u8; _]\n     [377; 378) '2': usize\n     [389; 390) 'g': (&[u8], &[u8])\n     [407; 417) '(arr, arr)': (&[u8], &[u8])\n-    [408; 411) 'arr': &[u8;_]\n-    [413; 416) 'arr': &[u8;_]\n+    [408; 411) 'arr': &[u8; _]\n+    [413; 416) 'arr': &[u8; _]\n     \"###\n     );\n }\n@@ -122,8 +122,8 @@ fn test() {\n         @r###\"\n     [11; 40) '{     ...[1]; }': ()\n     [21; 22) 'x': &[i32]\n-    [33; 37) '&[1]': &[i32;_]\n-    [34; 37) '[1]': [i32;_]\n+    [33; 37) '&[1]': &[i32; _]\n+    [34; 37) '[1]': [i32; _]\n     [35; 36) '1': i32\n     \"###);\n }\n@@ -159,22 +159,22 @@ fn test(a: A<[u8; 2]>, b: B<[u8; 2]>, c: C<[u8; 2]>) {\n     [334; 335) 'x': C<[T]>\n     [355; 360) '{ x }': C<[T]>\n     [357; 358) 'x': C<[T]>\n-    [370; 371) 'a': A<[u8;_]>\n-    [385; 386) 'b': B<[u8;_]>\n-    [400; 401) 'c': C<[u8;_]>\n+    [370; 371) 'a': A<[u8; _]>\n+    [385; 386) 'b': B<[u8; _]>\n+    [400; 401) 'c': C<[u8; _]>\n     [415; 481) '{     ...(c); }': ()\n     [425; 426) 'd': A<[{unknown}]>\n     [429; 433) 'foo1': fn foo1<{unknown}>(A<[T]>) -> A<[T]>\n     [429; 436) 'foo1(a)': A<[{unknown}]>\n-    [434; 435) 'a': A<[u8;_]>\n+    [434; 435) 'a': A<[u8; _]>\n     [446; 447) 'e': B<[u8]>\n     [450; 454) 'foo2': fn foo2<u8>(B<[T]>) -> B<[T]>\n     [450; 457) 'foo2(b)': B<[u8]>\n-    [455; 456) 'b': B<[u8;_]>\n+    [455; 456) 'b': B<[u8; _]>\n     [467; 468) 'f': C<[u8]>\n     [471; 475) 'foo3': fn foo3<u8>(C<[T]>) -> C<[T]>\n     [471; 478) 'foo3(c)': C<[u8]>\n-    [476; 477) 'c': C<[u8;_]>\n+    [476; 477) 'c': C<[u8; _]>\n     \"###\n     );\n }\n@@ -204,12 +204,12 @@ fn test() {\n     [72; 97) '{     ...     }': &[i32]\n     [82; 85) 'foo': fn foo<i32>(&[T]) -> &[T]\n     [82; 91) 'foo(&[1])': &[i32]\n-    [86; 90) '&[1]': &[i32;_]\n-    [87; 90) '[1]': [i32;_]\n+    [86; 90) '&[1]': &[i32; _]\n+    [87; 90) '[1]': [i32; _]\n     [88; 89) '1': i32\n-    [103; 123) '{     ...     }': &[i32;_]\n-    [113; 117) '&[1]': &[i32;_]\n-    [114; 117) '[1]': [i32;_]\n+    [103; 123) '{     ...     }': &[i32; _]\n+    [113; 117) '&[1]': &[i32; _]\n+    [114; 117) '[1]': [i32; _]\n     [115; 116) '1': i32\n     \"###\n     );\n@@ -237,15 +237,15 @@ fn test() {\n     [60; 61) 'x': &[i32]\n     [64; 123) 'if tru...     }': &[i32]\n     [67; 71) 'true': bool\n-    [72; 92) '{     ...     }': &[i32;_]\n-    [82; 86) '&[1]': &[i32;_]\n-    [83; 86) '[1]': [i32;_]\n+    [72; 92) '{     ...     }': &[i32; _]\n+    [82; 86) '&[1]': &[i32; _]\n+    [83; 86) '[1]': [i32; _]\n     [84; 85) '1': i32\n     [98; 123) '{     ...     }': &[i32]\n     [108; 111) 'foo': fn foo<i32>(&[T]) -> &[T]\n     [108; 117) 'foo(&[1])': &[i32]\n-    [112; 116) '&[1]': &[i32;_]\n-    [113; 116) '[1]': [i32;_]\n+    [112; 116) '&[1]': &[i32; _]\n+    [113; 116) '[1]': [i32; _]\n     [114; 115) '1': i32\n     \"###\n     );\n@@ -277,16 +277,16 @@ fn test(i: i32) {\n     [88; 89) '2': i32\n     [93; 96) 'foo': fn foo<i32>(&[T]) -> &[T]\n     [93; 102) 'foo(&[2])': &[i32]\n-    [97; 101) '&[2]': &[i32;_]\n-    [98; 101) '[2]': [i32;_]\n+    [97; 101) '&[2]': &[i32; _]\n+    [98; 101) '[2]': [i32; _]\n     [99; 100) '2': i32\n     [112; 113) '1': i32\n-    [117; 121) '&[1]': &[i32;_]\n-    [118; 121) '[1]': [i32;_]\n+    [117; 121) '&[1]': &[i32; _]\n+    [118; 121) '[1]': [i32; _]\n     [119; 120) '1': i32\n     [131; 132) '_': i32\n-    [136; 140) '&[3]': &[i32;_]\n-    [137; 140) '[3]': [i32;_]\n+    [136; 140) '&[3]': &[i32; _]\n+    [137; 140) '[3]': [i32; _]\n     [138; 139) '3': i32\n     \"###\n     );\n@@ -316,18 +316,18 @@ fn test(i: i32) {\n     [70; 147) 'match ...     }': &[i32]\n     [76; 77) 'i': i32\n     [88; 89) '1': i32\n-    [93; 97) '&[1]': &[i32;_]\n-    [94; 97) '[1]': [i32;_]\n+    [93; 97) '&[1]': &[i32; _]\n+    [94; 97) '[1]': [i32; _]\n     [95; 96) '1': i32\n     [107; 108) '2': i32\n     [112; 115) 'foo': fn foo<i32>(&[T]) -> &[T]\n     [112; 121) 'foo(&[2])': &[i32]\n-    [116; 120) '&[2]': &[i32;_]\n-    [117; 120) '[2]': [i32;_]\n+    [116; 120) '&[2]': &[i32; _]\n+    [117; 120) '[2]': [i32; _]\n     [118; 119) '2': i32\n     [131; 132) '_': i32\n-    [136; 140) '&[3]': &[i32;_]\n-    [137; 140) '[3]': [i32;_]\n+    [136; 140) '&[3]': &[i32; _]\n+    [137; 140) '[3]': [i32; _]\n     [138; 139) '3': i32\n     \"###\n     );"}, {"sha": "02bab6dbe087e8df0b6d15dc92e70878417be325", "filename": "crates/ra_hir_ty/src/tests/regression.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6ca19b2188aa0f45b0484246abde35d0ded8a846/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ca19b2188aa0f45b0484246abde35d0ded8a846/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fregression.rs?ref=6ca19b2188aa0f45b0484246abde35d0ded8a846", "patch": "@@ -102,7 +102,7 @@ fn test() {\n     [11; 48) '{     ...&y]; }': ()\n     [21; 22) 'y': &{unknown}\n     [25; 32) 'unknown': &{unknown}\n-    [38; 45) '[y, &y]': [&&{unknown};_]\n+    [38; 45) '[y, &y]': [&&{unknown}; _]\n     [39; 40) 'y': &{unknown}\n     [42; 44) '&y': &&{unknown}\n     [43; 44) 'y': &{unknown}\n@@ -128,7 +128,7 @@ fn test() {\n     [25; 32) 'unknown': &&{unknown}\n     [42; 43) 'y': &&{unknown}\n     [46; 53) 'unknown': &&{unknown}\n-    [59; 77) '[(x, y..., &x)]': [(&&&{unknown}, &&&{unknown});_]\n+    [59; 77) '[(x, y..., &x)]': [(&&&{unknown}, &&&{unknown}); _]\n     [60; 66) '(x, y)': (&&&{unknown}, &&&{unknown})\n     [61; 62) 'x': &&{unknown}\n     [64; 65) 'y': &&{unknown}\n@@ -180,8 +180,8 @@ fn test_line_buffer() {\n \"#),\n         @r###\"\n     [23; 53) '{     ...n']; }': ()\n-    [29; 50) '&[0, b...b'\\n']': &[u8;_]\n-    [30; 50) '[0, b'...b'\\n']': [u8;_]\n+    [29; 50) '&[0, b...b'\\n']': &[u8; _]\n+    [30; 50) '[0, b'...b'\\n']': [u8; _]\n     [31; 32) '0': u8\n     [34; 39) 'b'\\n'': u8\n     [41; 42) '1': u8"}, {"sha": "fdab9c187f4a602c50ed22c8567a16c5c3c45bbc", "filename": "crates/ra_hir_ty/src/tests/simple.rs", "status": "modified", "additions": 35, "deletions": 35, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/6ca19b2188aa0f45b0484246abde35d0ded8a846/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ca19b2188aa0f45b0484246abde35d0ded8a846/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Fsimple.rs?ref=6ca19b2188aa0f45b0484246abde35d0ded8a846", "patch": "@@ -28,7 +28,7 @@ mod boxed {\n \n \"#,\n     );\n-    assert_eq!(\"(Box<i32>, Box<Box<i32>>, Box<&i32>, Box<[i32;_]>)\", type_at_pos(&db, pos));\n+    assert_eq!(\"(Box<i32>, Box<Box<i32>>, Box<&i32>, Box<[i32; _]>)\", type_at_pos(&db, pos));\n }\n \n #[test]\n@@ -1061,55 +1061,55 @@ fn test(x: &str, y: isize) {\n     [9; 10) 'x': &str\n     [18; 19) 'y': isize\n     [28; 293) '{     ... []; }': ()\n-    [38; 39) 'a': [&str;_]\n-    [42; 45) '[x]': [&str;_]\n+    [38; 39) 'a': [&str; _]\n+    [42; 45) '[x]': [&str; _]\n     [43; 44) 'x': &str\n-    [55; 56) 'b': [[&str;_];_]\n-    [59; 65) '[a, a]': [[&str;_];_]\n-    [60; 61) 'a': [&str;_]\n-    [63; 64) 'a': [&str;_]\n-    [75; 76) 'c': [[[&str;_];_];_]\n-    [79; 85) '[b, b]': [[[&str;_];_];_]\n-    [80; 81) 'b': [[&str;_];_]\n-    [83; 84) 'b': [[&str;_];_]\n-    [96; 97) 'd': [isize;_]\n-    [100; 112) '[y, 1, 2, 3]': [isize;_]\n+    [55; 56) 'b': [[&str; _]; _]\n+    [59; 65) '[a, a]': [[&str; _]; _]\n+    [60; 61) 'a': [&str; _]\n+    [63; 64) 'a': [&str; _]\n+    [75; 76) 'c': [[[&str; _]; _]; _]\n+    [79; 85) '[b, b]': [[[&str; _]; _]; _]\n+    [80; 81) 'b': [[&str; _]; _]\n+    [83; 84) 'b': [[&str; _]; _]\n+    [96; 97) 'd': [isize; _]\n+    [100; 112) '[y, 1, 2, 3]': [isize; _]\n     [101; 102) 'y': isize\n     [104; 105) '1': isize\n     [107; 108) '2': isize\n     [110; 111) '3': isize\n-    [122; 123) 'd': [isize;_]\n-    [126; 138) '[1, y, 2, 3]': [isize;_]\n+    [122; 123) 'd': [isize; _]\n+    [126; 138) '[1, y, 2, 3]': [isize; _]\n     [127; 128) '1': isize\n     [130; 131) 'y': isize\n     [133; 134) '2': isize\n     [136; 137) '3': isize\n-    [148; 149) 'e': [isize;_]\n-    [152; 155) '[y]': [isize;_]\n+    [148; 149) 'e': [isize; _]\n+    [152; 155) '[y]': [isize; _]\n     [153; 154) 'y': isize\n-    [165; 166) 'f': [[isize;_];_]\n-    [169; 175) '[d, d]': [[isize;_];_]\n-    [170; 171) 'd': [isize;_]\n-    [173; 174) 'd': [isize;_]\n-    [185; 186) 'g': [[isize;_];_]\n-    [189; 195) '[e, e]': [[isize;_];_]\n-    [190; 191) 'e': [isize;_]\n-    [193; 194) 'e': [isize;_]\n-    [206; 207) 'h': [i32;_]\n-    [210; 216) '[1, 2]': [i32;_]\n+    [165; 166) 'f': [[isize; _]; _]\n+    [169; 175) '[d, d]': [[isize; _]; _]\n+    [170; 171) 'd': [isize; _]\n+    [173; 174) 'd': [isize; _]\n+    [185; 186) 'g': [[isize; _]; _]\n+    [189; 195) '[e, e]': [[isize; _]; _]\n+    [190; 191) 'e': [isize; _]\n+    [193; 194) 'e': [isize; _]\n+    [206; 207) 'h': [i32; _]\n+    [210; 216) '[1, 2]': [i32; _]\n     [211; 212) '1': i32\n     [214; 215) '2': i32\n-    [226; 227) 'i': [&str;_]\n-    [230; 240) '[\"a\", \"b\"]': [&str;_]\n+    [226; 227) 'i': [&str; _]\n+    [230; 240) '[\"a\", \"b\"]': [&str; _]\n     [231; 234) '\"a\"': &str\n     [236; 239) '\"b\"': &str\n-    [251; 252) 'b': [[&str;_];_]\n-    [255; 265) '[a, [\"b\"]]': [[&str;_];_]\n-    [256; 257) 'a': [&str;_]\n-    [259; 264) '[\"b\"]': [&str;_]\n+    [251; 252) 'b': [[&str; _]; _]\n+    [255; 265) '[a, [\"b\"]]': [[&str; _]; _]\n+    [256; 257) 'a': [&str; _]\n+    [259; 264) '[\"b\"]': [&str; _]\n     [260; 263) '\"b\"': &str\n-    [275; 276) 'x': [u8;_]\n-    [288; 290) '[]': [u8;_]\n+    [275; 276) 'x': [u8; _]\n+    [288; 290) '[]': [u8; _]\n     \"###\n     );\n }"}, {"sha": "a6ac18f86ceef8af641798efc2dfe73fedbc7ae4", "filename": "crates/ra_hir_ty/src/tests/traits.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6ca19b2188aa0f45b0484246abde35d0ded8a846/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6ca19b2188aa0f45b0484246abde35d0ded8a846/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests%2Ftraits.rs?ref=6ca19b2188aa0f45b0484246abde35d0ded8a846", "patch": "@@ -479,7 +479,7 @@ fn indexing_arrays() {\n         @r###\"\n     [10; 26) '{ &mut...[2]; }': ()\n     [12; 23) '&mut [9][2]': &mut {unknown}\n-    [17; 20) '[9]': [i32;_]\n+    [17; 20) '[9]': [i32; _]\n     [17; 23) '[9][2]': {unknown}\n     [18; 19) '9': i32\n     [21; 22) '2': i32"}]}