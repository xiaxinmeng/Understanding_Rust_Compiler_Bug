{"sha": "4868273d97958d832fc7d0681be096bb265ae6ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4NjgyNzNkOTc5NThkODMyZmM3ZDA2ODFiZTA5NmJiMjY1YWU2YmE=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-09-20T20:25:02Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-09-27T05:20:40Z"}, "message": "std: Up vec.with_c_str's stack buffer to 128\n\nThis matches @graydon's recommendation.", "tree": {"sha": "33d3295528f5d6e3d80b2bc5dd2a9979bcd75ce5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/33d3295528f5d6e3d80b2bc5dd2a9979bcd75ce5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4868273d97958d832fc7d0681be096bb265ae6ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4868273d97958d832fc7d0681be096bb265ae6ba", "html_url": "https://github.com/rust-lang/rust/commit/4868273d97958d832fc7d0681be096bb265ae6ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4868273d97958d832fc7d0681be096bb265ae6ba/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca66b8128391a2423123a873f800139a55e194bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca66b8128391a2423123a873f800139a55e194bf", "html_url": "https://github.com/rust-lang/rust/commit/ca66b8128391a2423123a873f800139a55e194bf"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "913a0cff47f290ce0dc108028608e404c948dbc6", "filename": "src/libstd/c_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4868273d97958d832fc7d0681be096bb265ae6ba/src%2Flibstd%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4868273d97958d832fc7d0681be096bb265ae6ba/src%2Flibstd%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_str.rs?ref=4868273d97958d832fc7d0681be096bb265ae6ba", "patch": "@@ -250,7 +250,7 @@ impl<'self> ToCStr for &'self str {\n }\n \n // The length of the stack allocated buffer for `vec.with_c_str()`\n-static BUF_LEN: uint = 32;\n+static BUF_LEN: uint = 128;\n \n impl<'self> ToCStr for &'self [u8] {\n     fn to_c_str(&self) -> CString {"}]}