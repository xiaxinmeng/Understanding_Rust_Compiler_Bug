{"sha": "8dfcb9bcdd2cca0b850aff152b54cbaa232070cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkZmNiOWJjZGQyY2NhMGI4NTBhZmYxNTJiNTRjYmFhMjMyMDcwY2Y=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-23T23:15:08Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-09-26T01:58:12Z"}, "message": "Fix tests", "tree": {"sha": "57116d37bc37b00669455e0702e02298ad966e38", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/57116d37bc37b00669455e0702e02298ad966e38"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dfcb9bcdd2cca0b850aff152b54cbaa232070cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dfcb9bcdd2cca0b850aff152b54cbaa232070cf", "html_url": "https://github.com/rust-lang/rust/commit/8dfcb9bcdd2cca0b850aff152b54cbaa232070cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dfcb9bcdd2cca0b850aff152b54cbaa232070cf/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99d71a164aaed7817abe981d57b346fb2921c41d", "url": "https://api.github.com/repos/rust-lang/rust/commits/99d71a164aaed7817abe981d57b346fb2921c41d", "html_url": "https://github.com/rust-lang/rust/commit/99d71a164aaed7817abe981d57b346fb2921c41d"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "346bbcd9123771074980bed1f96583fc6045f6b9", "filename": "tests/system.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8dfcb9bcdd2cca0b850aff152b54cbaa232070cf/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dfcb9bcdd2cca0b850aff152b54cbaa232070cf/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=8dfcb9bcdd2cca0b850aff152b54cbaa232070cf", "patch": "@@ -89,7 +89,9 @@ fn self_tests() {\n         warnings += format_report.warning_count();\n     }\n \n-    assert!(warnings == 0, \"Rustfmt's code generated {} warnings\", warnings);\n+    assert!(warnings == 0,\n+            \"Rustfmt's code generated {} warnings\",\n+            warnings);\n }\n \n // For each file, run rustfmt and collect the output.\n@@ -122,7 +124,8 @@ fn print_mismatches(result: HashMap<String, Vec<Mismatch>>) {\n     let mut t = term::stdout().unwrap();\n \n     for (file_name, diff) in result {\n-        print_diff(diff, |line_num| format!(\"\\nMismatch at {}:{}:\", file_name, line_num));\n+        print_diff(diff,\n+                   |line_num| format!(\"\\nMismatch at {}:{}:\", file_name, line_num));\n     }\n \n     assert!(t.reset().unwrap());"}, {"sha": "72acae8dbd9acbe496fd7e417e847f8cd84268f3", "filename": "tests/target/closure.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8dfcb9bcdd2cca0b850aff152b54cbaa232070cf/tests%2Ftarget%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dfcb9bcdd2cca0b850aff152b54cbaa232070cf/tests%2Ftarget%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fclosure.rs?ref=8dfcb9bcdd2cca0b850aff152b54cbaa232070cf", "patch": "@@ -9,7 +9,8 @@ fn main() {\n                      b: WithType, // argument\n                      // ignored\n                      _| {\n-        (aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb)\n+        (aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,\n+         bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb)\n     };\n \n     let block_body = move |xxxxxxxxxxxxxxxxxxxxxxxxxxxxx,"}, {"sha": "f2c929dde6d3825e84f52df51f928afb262a3b67", "filename": "tests/target/tuple.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8dfcb9bcdd2cca0b850aff152b54cbaa232070cf/tests%2Ftarget%2Ftuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dfcb9bcdd2cca0b850aff152b54cbaa232070cf/tests%2Ftarget%2Ftuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ftuple.rs?ref=8dfcb9bcdd2cca0b850aff152b54cbaa232070cf", "patch": "@@ -2,7 +2,9 @@\n \n fn foo() {\n     let a = (a, a, a, a, a);\n-    let aaaaaaaaaaaaaaaa = (aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa, aaaaaaaaaaaaaa, aaaaaaaaaaaaaa);\n+    let aaaaaaaaaaaaaaaa = (aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,\n+                            aaaaaaaaaaaaaa,\n+                            aaaaaaaaaaaaaa);\n     let aaaaaaaaaaaaaaaaaaaaaa = (aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,\n                                   aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa,\n                                   aaaaaaaaaaaaaaaaaaaaaaaaa,\n@@ -24,6 +26,7 @@ fn a() {\n }\n \n fn b() {\n-    ((bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb, bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb),\n+    ((bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb,\n+      bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb),\n      bbbbbbbbbbbbbbbbbb)\n }"}]}