{"sha": "9dc275bb54ab088ac85a08dc807984afd57a78c7", "node_id": "C_kwDOAAsO6NoAKDlkYzI3NWJiNTRhYjA4OGFjODVhMDhkYzgwNzk4NGFmZDU3YTc4Yzc", "commit": {"author": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2023-03-20T14:23:27Z"}, "committer": {"name": "Andy Wang", "email": "cbeuw.andy@gmail.com", "date": "2023-03-20T14:23:27Z"}, "message": "Add documentation for `type RET = ...`", "tree": {"sha": "55a5064272a3b012cb51a99394a7b78f34036235", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/55a5064272a3b012cb51a99394a7b78f34036235"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9dc275bb54ab088ac85a08dc807984afd57a78c7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCAAdFiEE7dcbcBMl24/h63ldGBtJ+fOPM3QFAmQYbF8ACgkQGBtJ+fOP\nM3RBgwv/aIpx3e1ADjot3Q8blJVTcZgzJ0bdzz0tytzCfIpjeirrfmsrM8Fa+gGg\nSpbf1Ch+dfDE4uo6i7yi6d2Jxd0hgntdDA2gQbLQxTlQ4ZsxdesfZI59cYlRpVOU\nPNZ4cn3GuIh92yU6D0NMTlOzOwPmnWNWIvVD+CSbnoU2IAqLIUCE8rYt/OdxV6dG\nrdKBOgb6PC/8BzM4NKE08GT/pBanG4nyAn8kZnaQT1kldJncc/WNVcyt+0KGhOES\nJjkxK6RQ+AuoO1DaxBfFuBLq+O53uRgsU6/BPOtplVzUlRDaiLdRpoJ0Lj2y7Iuw\nn92aCvHK3YbDDmaqf0MolYCYqNiXag6bloQfcrObbRiTv3HFT3gdny77BLeVmtK1\nF8Q5ecXoqS4/TiXQSJsZdEcKvS3p282P7GHMqZjfPO8HHwGrEtUdq1IkwJB6Kt0c\nYOYr8v46FlH7zmbau4fvKMFf+JDvYlNpDx1H8rojbl9ABFQVp/h+tBIM41bKMfzl\nfOXTvuVh\n=EA29\n-----END PGP SIGNATURE-----", "payload": "tree 55a5064272a3b012cb51a99394a7b78f34036235\nparent 9da1da94efd45cf28e9e72c81cacbdbcb1aeabd1\nauthor Andy Wang <cbeuw.andy@gmail.com> 1679322207 +0100\ncommitter Andy Wang <cbeuw.andy@gmail.com> 1679322207 +0100\n\nAdd documentation for `type RET = ...`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9dc275bb54ab088ac85a08dc807984afd57a78c7", "html_url": "https://github.com/rust-lang/rust/commit/9dc275bb54ab088ac85a08dc807984afd57a78c7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9dc275bb54ab088ac85a08dc807984afd57a78c7/comments", "author": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cbeuw", "id": 7034308, "node_id": "MDQ6VXNlcjcwMzQzMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7034308?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cbeuw", "html_url": "https://github.com/cbeuw", "followers_url": "https://api.github.com/users/cbeuw/followers", "following_url": "https://api.github.com/users/cbeuw/following{/other_user}", "gists_url": "https://api.github.com/users/cbeuw/gists{/gist_id}", "starred_url": "https://api.github.com/users/cbeuw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cbeuw/subscriptions", "organizations_url": "https://api.github.com/users/cbeuw/orgs", "repos_url": "https://api.github.com/users/cbeuw/repos", "events_url": "https://api.github.com/users/cbeuw/events{/privacy}", "received_events_url": "https://api.github.com/users/cbeuw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9da1da94efd45cf28e9e72c81cacbdbcb1aeabd1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9da1da94efd45cf28e9e72c81cacbdbcb1aeabd1", "html_url": "https://github.com/rust-lang/rust/commit/9da1da94efd45cf28e9e72c81cacbdbcb1aeabd1"}], "stats": {"total": 14, "additions": 14, "deletions": 0}, "files": [{"sha": "77e207ecc6c7fd849f6743b429be9e669cdbe6b3", "filename": "library/core/src/intrinsics/mir.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9dc275bb54ab088ac85a08dc807984afd57a78c7/library%2Fcore%2Fsrc%2Fintrinsics%2Fmir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9dc275bb54ab088ac85a08dc807984afd57a78c7/library%2Fcore%2Fsrc%2Fintrinsics%2Fmir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics%2Fmir.rs?ref=9dc275bb54ab088ac85a08dc807984afd57a78c7", "patch": "@@ -49,6 +49,8 @@\n //!\n //! The input to the [`mir!`] macro is:\n //!\n+//!  - An optional return type annotation in the form of `type RET = ...;`. This may be required\n+//!    if the compiler cannot infer the type of RET.\n //!  - A possibly empty list of local declarations. Locals can also be declared inline on\n //!    assignments via `let`. Type inference generally works. Shadowing does not.\n //!  - A list of basic blocks. The first of these is the start block and is where execution begins.\n@@ -124,6 +126,18 @@\n //!         }\n //!     )\n //! }\n+//!\n+//! #[custom_mir(dialect = \"runtime\", phase = \"optimized\")]\n+//! fn annotated_return_type() -> (i32, bool) {\n+//!     mir!(\n+//!         type RET = (i32, bool);\n+//!         {\n+//!             RET.0 = 1;\n+//!             RET.1 = true;\n+//!             Return()\n+//!         }\n+//!     )\n+//! }\n //! ```\n //!\n //! We can also set off compilation failures that happen in sufficiently late stages of the"}]}