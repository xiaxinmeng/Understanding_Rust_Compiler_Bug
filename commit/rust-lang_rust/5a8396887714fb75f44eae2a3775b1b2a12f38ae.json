{"sha": "5a8396887714fb75f44eae2a3775b1b2a12f38ae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhODM5Njg4NzcxNGZiNzVmNDRlYWUyYTM3NzViMWIyYTEyZjM4YWU=", "commit": {"author": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2020-11-17T21:34:39Z"}, "committer": {"name": "Christiaan Dirkx", "email": "christiaan@dirkx.email", "date": "2020-11-17T22:40:31Z"}, "message": "Change `redundant_pattern_matching` to also lint `std::task::Poll`\n\nSuggest using utility methods `is_pending` and `is_ready`.", "tree": {"sha": "cfb3114033036785ac4a141e80c162b3dc95c1d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cfb3114033036785ac4a141e80c162b3dc95c1d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a8396887714fb75f44eae2a3775b1b2a12f38ae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a8396887714fb75f44eae2a3775b1b2a12f38ae", "html_url": "https://github.com/rust-lang/rust/commit/5a8396887714fb75f44eae2a3775b1b2a12f38ae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a8396887714fb75f44eae2a3775b1b2a12f38ae/comments", "author": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "CDirkx", "id": 11176562, "node_id": "MDQ6VXNlcjExMTc2NTYy", "avatar_url": "https://avatars.githubusercontent.com/u/11176562?v=4", "gravatar_id": "", "url": "https://api.github.com/users/CDirkx", "html_url": "https://github.com/CDirkx", "followers_url": "https://api.github.com/users/CDirkx/followers", "following_url": "https://api.github.com/users/CDirkx/following{/other_user}", "gists_url": "https://api.github.com/users/CDirkx/gists{/gist_id}", "starred_url": "https://api.github.com/users/CDirkx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/CDirkx/subscriptions", "organizations_url": "https://api.github.com/users/CDirkx/orgs", "repos_url": "https://api.github.com/users/CDirkx/repos", "events_url": "https://api.github.com/users/CDirkx/events{/privacy}", "received_events_url": "https://api.github.com/users/CDirkx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44d944586c5a505890b18bc6cac4e3cd91c46c25", "url": "https://api.github.com/repos/rust-lang/rust/commits/44d944586c5a505890b18bc6cac4e3cd91c46c25", "html_url": "https://github.com/rust-lang/rust/commit/44d944586c5a505890b18bc6cac4e3cd91c46c25"}], "stats": {"total": 424, "additions": 364, "deletions": 60}, "files": [{"sha": "af59917e801eced66286bc1b8f88446d0517e915", "filename": "clippy_lints/src/matches.rs", "status": "modified", "additions": 30, "deletions": 3, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/5a8396887714fb75f44eae2a3775b1b2a12f38ae/clippy_lints%2Fsrc%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a8396887714fb75f44eae2a3775b1b2a12f38ae/clippy_lints%2Fsrc%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmatches.rs?ref=5a8396887714fb75f44eae2a3775b1b2a12f38ae", "patch": "@@ -411,8 +411,8 @@ declare_clippy_lint! {\n }\n \n declare_clippy_lint! {\n-    /// **What it does:** Lint for redundant pattern matching over `Result` or\n-    /// `Option`\n+    /// **What it does:** Lint for redundant pattern matching over `Result`, `Option` or\n+    /// `std::task::Poll`\n     ///\n     /// **Why is this bad?** It's more concise and clear to just use the proper\n     /// utility function\n@@ -422,10 +422,13 @@ declare_clippy_lint! {\n     /// **Example:**\n     ///\n     /// ```rust\n+    /// # use std::task::Poll;\n     /// if let Ok(_) = Ok::<i32, i32>(42) {}\n     /// if let Err(_) = Err::<i32, i32>(42) {}\n     /// if let None = None::<()> {}\n     /// if let Some(_) = Some(42) {}\n+    /// if let Poll::Pending = Poll::Pending::<()> {}\n+    /// if let Poll::Ready(_) = Poll::Ready(42) {}\n     /// match Ok::<i32, i32>(42) {\n     ///     Ok(_) => true,\n     ///     Err(_) => false,\n@@ -435,10 +438,13 @@ declare_clippy_lint! {\n     /// The more idiomatic use would be:\n     ///\n     /// ```rust\n+    /// # use std::task::Poll;\n     /// if Ok::<i32, i32>(42).is_ok() {}\n     /// if Err::<i32, i32>(42).is_err() {}\n     /// if None::<()>.is_none() {}\n     /// if Some(42).is_some() {}\n+    /// if Poll::Pending::<()>.is_pending() {}\n+    /// if Poll::Ready(42).is_ready() {}\n     /// Ok::<i32, i32>(42).is_ok();\n     /// ```\n     pub REDUNDANT_PATTERN_MATCHING,\n@@ -1538,14 +1544,24 @@ mod redundant_pattern_match {\n                         \"is_err()\"\n                     } else if match_qpath(path, &paths::OPTION_SOME) {\n                         \"is_some()\"\n+                    } else if match_qpath(path, &paths::POLL_READY) {\n+                        \"is_ready()\"\n                     } else {\n                         return;\n                     }\n                 } else {\n                     return;\n                 }\n             },\n-            PatKind::Path(ref path) if match_qpath(path, &paths::OPTION_NONE) => \"is_none()\",\n+            PatKind::Path(ref path) => {\n+                if match_qpath(path, &paths::OPTION_NONE) {\n+                    \"is_none()\"\n+                } else if match_qpath(path, &paths::POLL_PENDING) {\n+                    \"is_pending()\"\n+                } else {\n+                    return;\n+                }\n+            },\n             _ => return,\n         };\n \n@@ -1628,6 +1644,17 @@ mod redundant_pattern_match {\n                             \"is_some()\",\n                             \"is_none()\",\n                         )\n+                        .or_else(|| {\n+                            find_good_method_for_match(\n+                                arms,\n+                                path_left,\n+                                path_right,\n+                                &paths::POLL_READY,\n+                                &paths::POLL_PENDING,\n+                                \"is_ready()\",\n+                                \"is_pending()\",\n+                            )\n+                        })\n                     } else {\n                         None\n                     }"}, {"sha": "e20f146f14590439caf801e1833fbca77757c55b", "filename": "clippy_lints/src/utils/paths.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5a8396887714fb75f44eae2a3775b1b2a12f38ae/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a8396887714fb75f44eae2a3775b1b2a12f38ae/clippy_lints%2Fsrc%2Futils%2Fpaths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fpaths.rs?ref=5a8396887714fb75f44eae2a3775b1b2a12f38ae", "patch": "@@ -86,6 +86,8 @@ pub const PATH_BUF: [&str; 3] = [\"std\", \"path\", \"PathBuf\"];\n pub const PATH_BUF_AS_PATH: [&str; 4] = [\"std\", \"path\", \"PathBuf\", \"as_path\"];\n pub const PATH_TO_PATH_BUF: [&str; 4] = [\"std\", \"path\", \"Path\", \"to_path_buf\"];\n pub const POLL: [&str; 4] = [\"core\", \"task\", \"poll\", \"Poll\"];\n+pub const POLL_PENDING: [&str; 5] = [\"core\", \"task\", \"poll\", \"Poll\", \"Pending\"];\n+pub const POLL_READY: [&str; 5] = [\"core\", \"task\", \"poll\", \"Poll\", \"Ready\"];\n pub const PTR_EQ: [&str; 3] = [\"core\", \"ptr\", \"eq\"];\n pub const PTR_NULL: [&str; 3] = [\"core\", \"ptr\", \"null\"];\n pub const PTR_NULL_MUT: [&str; 3] = [\"core\", \"ptr\", \"null_mut\"];"}, {"sha": "bc369dd2491e5ee87902d7854faa25298d588e64", "filename": "tests/ui/redundant_pattern_matching_option.fixed", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_option.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_option.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_option.fixed?ref=5a8396887714fb75f44eae2a3775b1b2a12f38ae", "patch": "@@ -2,13 +2,7 @@\n \n #![warn(clippy::all)]\n #![warn(clippy::redundant_pattern_matching)]\n-#![allow(\n-    clippy::unit_arg,\n-    unused_must_use,\n-    clippy::needless_bool,\n-    clippy::match_like_matches_macro,\n-    deprecated\n-)]\n+#![allow(unused_must_use, clippy::needless_bool, clippy::match_like_matches_macro)]\n \n fn main() {\n     if None::<()>.is_none() {}"}, {"sha": "d7616a729135609381b09cc5403b63e43873183b", "filename": "tests/ui/redundant_pattern_matching_option.rs", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_option.rs?ref=5a8396887714fb75f44eae2a3775b1b2a12f38ae", "patch": "@@ -2,13 +2,7 @@\n \n #![warn(clippy::all)]\n #![warn(clippy::redundant_pattern_matching)]\n-#![allow(\n-    clippy::unit_arg,\n-    unused_must_use,\n-    clippy::needless_bool,\n-    clippy::match_like_matches_macro,\n-    deprecated\n-)]\n+#![allow(unused_must_use, clippy::needless_bool, clippy::match_like_matches_macro)]\n \n fn main() {\n     if let None = None::<()> {}"}, {"sha": "7ddfbe503a2672dc7e0f13384f660a72f3973ef8", "filename": "tests/ui/redundant_pattern_matching_option.stderr", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_option.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_option.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_option.stderr?ref=5a8396887714fb75f44eae2a3775b1b2a12f38ae", "patch": "@@ -1,49 +1,49 @@\n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:14:12\n+  --> $DIR/redundant_pattern_matching_option.rs:8:12\n    |\n LL |     if let None = None::<()> {}\n    |     -------^^^^------------- help: try this: `if None::<()>.is_none()`\n    |\n    = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:16:12\n+  --> $DIR/redundant_pattern_matching_option.rs:10:12\n    |\n LL |     if let Some(_) = Some(42) {}\n    |     -------^^^^^^^----------- help: try this: `if Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:18:12\n+  --> $DIR/redundant_pattern_matching_option.rs:12:12\n    |\n LL |     if let Some(_) = Some(42) {\n    |     -------^^^^^^^----------- help: try this: `if Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:24:15\n+  --> $DIR/redundant_pattern_matching_option.rs:18:15\n    |\n LL |     while let Some(_) = Some(42) {}\n    |     ----------^^^^^^^----------- help: try this: `while Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:26:15\n+  --> $DIR/redundant_pattern_matching_option.rs:20:15\n    |\n LL |     while let None = Some(42) {}\n    |     ----------^^^^----------- help: try this: `while Some(42).is_none()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:28:15\n+  --> $DIR/redundant_pattern_matching_option.rs:22:15\n    |\n LL |     while let None = None::<()> {}\n    |     ----------^^^^------------- help: try this: `while None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:31:15\n+  --> $DIR/redundant_pattern_matching_option.rs:25:15\n    |\n LL |     while let Some(_) = v.pop() {\n    |     ----------^^^^^^^---------- help: try this: `while v.pop().is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:39:5\n+  --> $DIR/redundant_pattern_matching_option.rs:33:5\n    |\n LL | /     match Some(42) {\n LL | |         Some(_) => true,\n@@ -52,7 +52,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:44:5\n+  --> $DIR/redundant_pattern_matching_option.rs:38:5\n    |\n LL | /     match None::<()> {\n LL | |         Some(_) => false,\n@@ -61,7 +61,7 @@ LL | |     };\n    | |_____^ help: try this: `None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:49:13\n+  --> $DIR/redundant_pattern_matching_option.rs:43:13\n    |\n LL |       let _ = match None::<()> {\n    |  _____________^\n@@ -71,49 +71,49 @@ LL | |     };\n    | |_____^ help: try this: `None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:55:20\n+  --> $DIR/redundant_pattern_matching_option.rs:49:20\n    |\n LL |     let x = if let Some(_) = opt { true } else { false };\n    |             -------^^^^^^^------ help: try this: `if opt.is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:60:20\n+  --> $DIR/redundant_pattern_matching_option.rs:54:20\n    |\n LL |     let _ = if let Some(_) = gen_opt() {\n    |             -------^^^^^^^------------ help: try this: `if gen_opt().is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:62:19\n+  --> $DIR/redundant_pattern_matching_option.rs:56:19\n    |\n LL |     } else if let None = gen_opt() {\n    |            -------^^^^------------ help: try this: `if gen_opt().is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:83:12\n+  --> $DIR/redundant_pattern_matching_option.rs:77:12\n    |\n LL |     if let Some(_) = Some(42) {}\n    |     -------^^^^^^^----------- help: try this: `if Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:85:12\n+  --> $DIR/redundant_pattern_matching_option.rs:79:12\n    |\n LL |     if let None = None::<()> {}\n    |     -------^^^^------------- help: try this: `if None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:87:15\n+  --> $DIR/redundant_pattern_matching_option.rs:81:15\n    |\n LL |     while let Some(_) = Some(42) {}\n    |     ----------^^^^^^^----------- help: try this: `while Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:89:15\n+  --> $DIR/redundant_pattern_matching_option.rs:83:15\n    |\n LL |     while let None = None::<()> {}\n    |     ----------^^^^------------- help: try this: `while None::<()>.is_none()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching_option.rs:91:5\n+  --> $DIR/redundant_pattern_matching_option.rs:85:5\n    |\n LL | /     match Some(42) {\n LL | |         Some(_) => true,\n@@ -122,7 +122,7 @@ LL | |     };\n    | |_____^ help: try this: `Some(42).is_some()`\n \n error: redundant pattern matching, consider using `is_none()`\n-  --> $DIR/redundant_pattern_matching_option.rs:96:5\n+  --> $DIR/redundant_pattern_matching_option.rs:90:5\n    |\n LL | /     match None::<()> {\n LL | |         Some(_) => false,"}, {"sha": "564c427f063103386077867aac70f82da9015941", "filename": "tests/ui/redundant_pattern_matching_poll.fixed", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_poll.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_poll.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_poll.fixed?ref=5a8396887714fb75f44eae2a3775b1b2a12f38ae", "patch": "@@ -0,0 +1,73 @@\n+// run-rustfix\n+\n+#![warn(clippy::all)]\n+#![warn(clippy::redundant_pattern_matching)]\n+#![allow(unused_must_use, clippy::needless_bool, clippy::match_like_matches_macro)]\n+\n+use std::task::Poll::{self, Pending, Ready};\n+\n+fn main() {\n+    if Pending::<()>.is_pending() {}\n+\n+    if Ready(42).is_ready() {}\n+\n+    if Ready(42).is_ready() {\n+        foo();\n+    } else {\n+        bar();\n+    }\n+\n+    while Ready(42).is_ready() {}\n+\n+    while Ready(42).is_pending() {}\n+\n+    while Pending::<()>.is_pending() {}\n+\n+    if Pending::<i32>.is_pending() {}\n+\n+    if Ready(42).is_ready() {}\n+\n+    Ready(42).is_ready();\n+\n+    Pending::<()>.is_pending();\n+\n+    let _ = Pending::<()>.is_pending();\n+\n+    let poll = Ready(false);\n+    let x = if poll.is_ready() { true } else { false };\n+    takes_poll(x);\n+\n+    poll_const();\n+\n+    let _ = if gen_poll().is_ready() {\n+        1\n+    } else if gen_poll().is_pending() {\n+        2\n+    } else {\n+        3\n+    };\n+}\n+\n+fn gen_poll() -> Poll<()> {\n+    Pending\n+}\n+\n+fn takes_poll(_: bool) {}\n+\n+fn foo() {}\n+\n+fn bar() {}\n+\n+const fn poll_const() {\n+    if Ready(42).is_ready() {}\n+\n+    if Pending::<()>.is_pending() {}\n+\n+    while Ready(42).is_ready() {}\n+\n+    while Pending::<()>.is_pending() {}\n+\n+    Ready(42).is_ready();\n+\n+    Pending::<()>.is_pending();\n+}"}, {"sha": "d453d4184af4eb0d25c2c9293ef5971b119dce28", "filename": "tests/ui/redundant_pattern_matching_poll.rs", "status": "added", "additions": 88, "deletions": 0, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_poll.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_poll.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_poll.rs?ref=5a8396887714fb75f44eae2a3775b1b2a12f38ae", "patch": "@@ -0,0 +1,88 @@\n+// run-rustfix\n+\n+#![warn(clippy::all)]\n+#![warn(clippy::redundant_pattern_matching)]\n+#![allow(unused_must_use, clippy::needless_bool, clippy::match_like_matches_macro)]\n+\n+use std::task::Poll::{self, Pending, Ready};\n+\n+fn main() {\n+    if let Pending = Pending::<()> {}\n+\n+    if let Ready(_) = Ready(42) {}\n+\n+    if let Ready(_) = Ready(42) {\n+        foo();\n+    } else {\n+        bar();\n+    }\n+\n+    while let Ready(_) = Ready(42) {}\n+\n+    while let Pending = Ready(42) {}\n+\n+    while let Pending = Pending::<()> {}\n+\n+    if Pending::<i32>.is_pending() {}\n+\n+    if Ready(42).is_ready() {}\n+\n+    match Ready(42) {\n+        Ready(_) => true,\n+        Pending => false,\n+    };\n+\n+    match Pending::<()> {\n+        Ready(_) => false,\n+        Pending => true,\n+    };\n+\n+    let _ = match Pending::<()> {\n+        Ready(_) => false,\n+        Pending => true,\n+    };\n+\n+    let poll = Ready(false);\n+    let x = if let Ready(_) = poll { true } else { false };\n+    takes_poll(x);\n+\n+    poll_const();\n+\n+    let _ = if let Ready(_) = gen_poll() {\n+        1\n+    } else if let Pending = gen_poll() {\n+        2\n+    } else {\n+        3\n+    };\n+}\n+\n+fn gen_poll() -> Poll<()> {\n+    Pending\n+}\n+\n+fn takes_poll(_: bool) {}\n+\n+fn foo() {}\n+\n+fn bar() {}\n+\n+const fn poll_const() {\n+    if let Ready(_) = Ready(42) {}\n+\n+    if let Pending = Pending::<()> {}\n+\n+    while let Ready(_) = Ready(42) {}\n+\n+    while let Pending = Pending::<()> {}\n+\n+    match Ready(42) {\n+        Ready(_) => true,\n+        Pending => false,\n+    };\n+\n+    match Pending::<()> {\n+        Ready(_) => false,\n+        Pending => true,\n+    };\n+}"}, {"sha": "42e5d6f41fe2ae2c480089a6326b57eb6c0f0969", "filename": "tests/ui/redundant_pattern_matching_poll.stderr", "status": "added", "additions": 128, "deletions": 0, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_poll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_poll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_poll.stderr?ref=5a8396887714fb75f44eae2a3775b1b2a12f38ae", "patch": "@@ -0,0 +1,128 @@\n+error: redundant pattern matching, consider using `is_pending()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:10:12\n+   |\n+LL |     if let Pending = Pending::<()> {}\n+   |     -------^^^^^^^---------------- help: try this: `if Pending::<()>.is_pending()`\n+   |\n+   = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\n+\n+error: redundant pattern matching, consider using `is_ready()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:12:12\n+   |\n+LL |     if let Ready(_) = Ready(42) {}\n+   |     -------^^^^^^^^------------ help: try this: `if Ready(42).is_ready()`\n+\n+error: redundant pattern matching, consider using `is_ready()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:14:12\n+   |\n+LL |     if let Ready(_) = Ready(42) {\n+   |     -------^^^^^^^^------------ help: try this: `if Ready(42).is_ready()`\n+\n+error: redundant pattern matching, consider using `is_ready()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:20:15\n+   |\n+LL |     while let Ready(_) = Ready(42) {}\n+   |     ----------^^^^^^^^------------ help: try this: `while Ready(42).is_ready()`\n+\n+error: redundant pattern matching, consider using `is_pending()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:22:15\n+   |\n+LL |     while let Pending = Ready(42) {}\n+   |     ----------^^^^^^^------------ help: try this: `while Ready(42).is_pending()`\n+\n+error: redundant pattern matching, consider using `is_pending()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:24:15\n+   |\n+LL |     while let Pending = Pending::<()> {}\n+   |     ----------^^^^^^^---------------- help: try this: `while Pending::<()>.is_pending()`\n+\n+error: redundant pattern matching, consider using `is_ready()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:30:5\n+   |\n+LL | /     match Ready(42) {\n+LL | |         Ready(_) => true,\n+LL | |         Pending => false,\n+LL | |     };\n+   | |_____^ help: try this: `Ready(42).is_ready()`\n+\n+error: redundant pattern matching, consider using `is_pending()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:35:5\n+   |\n+LL | /     match Pending::<()> {\n+LL | |         Ready(_) => false,\n+LL | |         Pending => true,\n+LL | |     };\n+   | |_____^ help: try this: `Pending::<()>.is_pending()`\n+\n+error: redundant pattern matching, consider using `is_pending()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:40:13\n+   |\n+LL |       let _ = match Pending::<()> {\n+   |  _____________^\n+LL | |         Ready(_) => false,\n+LL | |         Pending => true,\n+LL | |     };\n+   | |_____^ help: try this: `Pending::<()>.is_pending()`\n+\n+error: redundant pattern matching, consider using `is_ready()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:46:20\n+   |\n+LL |     let x = if let Ready(_) = poll { true } else { false };\n+   |             -------^^^^^^^^------- help: try this: `if poll.is_ready()`\n+\n+error: redundant pattern matching, consider using `is_ready()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:51:20\n+   |\n+LL |     let _ = if let Ready(_) = gen_poll() {\n+   |             -------^^^^^^^^------------- help: try this: `if gen_poll().is_ready()`\n+\n+error: redundant pattern matching, consider using `is_pending()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:53:19\n+   |\n+LL |     } else if let Pending = gen_poll() {\n+   |            -------^^^^^^^------------- help: try this: `if gen_poll().is_pending()`\n+\n+error: redundant pattern matching, consider using `is_ready()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:71:12\n+   |\n+LL |     if let Ready(_) = Ready(42) {}\n+   |     -------^^^^^^^^------------ help: try this: `if Ready(42).is_ready()`\n+\n+error: redundant pattern matching, consider using `is_pending()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:73:12\n+   |\n+LL |     if let Pending = Pending::<()> {}\n+   |     -------^^^^^^^---------------- help: try this: `if Pending::<()>.is_pending()`\n+\n+error: redundant pattern matching, consider using `is_ready()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:75:15\n+   |\n+LL |     while let Ready(_) = Ready(42) {}\n+   |     ----------^^^^^^^^------------ help: try this: `while Ready(42).is_ready()`\n+\n+error: redundant pattern matching, consider using `is_pending()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:77:15\n+   |\n+LL |     while let Pending = Pending::<()> {}\n+   |     ----------^^^^^^^---------------- help: try this: `while Pending::<()>.is_pending()`\n+\n+error: redundant pattern matching, consider using `is_ready()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:79:5\n+   |\n+LL | /     match Ready(42) {\n+LL | |         Ready(_) => true,\n+LL | |         Pending => false,\n+LL | |     };\n+   | |_____^ help: try this: `Ready(42).is_ready()`\n+\n+error: redundant pattern matching, consider using `is_pending()`\n+  --> $DIR/redundant_pattern_matching_poll.rs:84:5\n+   |\n+LL | /     match Pending::<()> {\n+LL | |         Ready(_) => false,\n+LL | |         Pending => true,\n+LL | |     };\n+   | |_____^ help: try this: `Pending::<()>.is_pending()`\n+\n+error: aborting due to 18 previous errors\n+"}, {"sha": "e94c5704b48917fd89667bed89cd3bb52896ab98", "filename": "tests/ui/redundant_pattern_matching_result.fixed", "status": "renamed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_result.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_result.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.fixed?ref=5a8396887714fb75f44eae2a3775b1b2a12f38ae", "patch": "@@ -3,7 +3,6 @@\n #![warn(clippy::all)]\n #![warn(clippy::redundant_pattern_matching)]\n #![allow(\n-    clippy::unit_arg,\n     unused_must_use,\n     clippy::needless_bool,\n     clippy::match_like_matches_macro,", "previous_filename": "tests/ui/redundant_pattern_matching.fixed"}, {"sha": "5d1752942322b0b19aa22d5bb46227bea1bb4eca", "filename": "tests/ui/redundant_pattern_matching_result.rs", "status": "renamed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.rs?ref=5a8396887714fb75f44eae2a3775b1b2a12f38ae", "patch": "@@ -3,7 +3,6 @@\n #![warn(clippy::all)]\n #![warn(clippy::redundant_pattern_matching)]\n #![allow(\n-    clippy::unit_arg,\n     unused_must_use,\n     clippy::needless_bool,\n     clippy::match_like_matches_macro,", "previous_filename": "tests/ui/redundant_pattern_matching.rs"}, {"sha": "d6a46babb77952de2a4d3f602841b77172bef6d6", "filename": "tests/ui/redundant_pattern_matching_result.stderr", "status": "renamed", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_result.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5a8396887714fb75f44eae2a3775b1b2a12f38ae/tests%2Fui%2Fredundant_pattern_matching_result.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fredundant_pattern_matching_result.stderr?ref=5a8396887714fb75f44eae2a3775b1b2a12f38ae", "patch": "@@ -1,37 +1,37 @@\n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:16:12\n+  --> $DIR/redundant_pattern_matching_result.rs:15:12\n    |\n LL |     if let Ok(_) = &result {}\n    |     -------^^^^^---------- help: try this: `if result.is_ok()`\n    |\n    = note: `-D clippy::redundant-pattern-matching` implied by `-D warnings`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:18:12\n+  --> $DIR/redundant_pattern_matching_result.rs:17:12\n    |\n LL |     if let Ok(_) = Ok::<i32, i32>(42) {}\n    |     -------^^^^^--------------------- help: try this: `if Ok::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:20:12\n+  --> $DIR/redundant_pattern_matching_result.rs:19:12\n    |\n LL |     if let Err(_) = Err::<i32, i32>(42) {}\n    |     -------^^^^^^---------------------- help: try this: `if Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:22:15\n+  --> $DIR/redundant_pattern_matching_result.rs:21:15\n    |\n LL |     while let Ok(_) = Ok::<i32, i32>(10) {}\n    |     ----------^^^^^--------------------- help: try this: `while Ok::<i32, i32>(10).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:24:15\n+  --> $DIR/redundant_pattern_matching_result.rs:23:15\n    |\n LL |     while let Err(_) = Ok::<i32, i32>(10) {}\n    |     ----------^^^^^^--------------------- help: try this: `while Ok::<i32, i32>(10).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:34:5\n+  --> $DIR/redundant_pattern_matching_result.rs:33:5\n    |\n LL | /     match Ok::<i32, i32>(42) {\n LL | |         Ok(_) => true,\n@@ -40,7 +40,7 @@ LL | |     };\n    | |_____^ help: try this: `Ok::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:39:5\n+  --> $DIR/redundant_pattern_matching_result.rs:38:5\n    |\n LL | /     match Ok::<i32, i32>(42) {\n LL | |         Ok(_) => false,\n@@ -49,7 +49,7 @@ LL | |     };\n    | |_____^ help: try this: `Ok::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:44:5\n+  --> $DIR/redundant_pattern_matching_result.rs:43:5\n    |\n LL | /     match Err::<i32, i32>(42) {\n LL | |         Ok(_) => false,\n@@ -58,7 +58,7 @@ LL | |     };\n    | |_____^ help: try this: `Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:49:5\n+  --> $DIR/redundant_pattern_matching_result.rs:48:5\n    |\n LL | /     match Err::<i32, i32>(42) {\n LL | |         Ok(_) => true,\n@@ -67,73 +67,73 @@ LL | |     };\n    | |_____^ help: try this: `Err::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:54:20\n+  --> $DIR/redundant_pattern_matching_result.rs:53:20\n    |\n LL |     let _ = if let Ok(_) = Ok::<usize, ()>(4) { true } else { false };\n    |             -------^^^^^--------------------- help: try this: `if Ok::<usize, ()>(4).is_ok()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:60:20\n+  --> $DIR/redundant_pattern_matching_result.rs:59:20\n    |\n LL |     let _ = if let Ok(_) = gen_res() {\n    |             -------^^^^^------------ help: try this: `if gen_res().is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:62:19\n+  --> $DIR/redundant_pattern_matching_result.rs:61:19\n    |\n LL |     } else if let Err(_) = gen_res() {\n    |            -------^^^^^^------------ help: try this: `if gen_res().is_err()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:85:19\n+  --> $DIR/redundant_pattern_matching_result.rs:84:19\n    |\n LL |         while let Some(_) = r#try!(result_opt()) {}\n    |         ----------^^^^^^^----------------------- help: try this: `while r#try!(result_opt()).is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:86:16\n+  --> $DIR/redundant_pattern_matching_result.rs:85:16\n    |\n LL |         if let Some(_) = r#try!(result_opt()) {}\n    |         -------^^^^^^^----------------------- help: try this: `if r#try!(result_opt()).is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:92:12\n+  --> $DIR/redundant_pattern_matching_result.rs:91:12\n    |\n LL |     if let Some(_) = m!() {}\n    |     -------^^^^^^^------- help: try this: `if m!().is_some()`\n \n error: redundant pattern matching, consider using `is_some()`\n-  --> $DIR/redundant_pattern_matching.rs:93:15\n+  --> $DIR/redundant_pattern_matching_result.rs:92:15\n    |\n LL |     while let Some(_) = m!() {}\n    |     ----------^^^^^^^------- help: try this: `while m!().is_some()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:111:12\n+  --> $DIR/redundant_pattern_matching_result.rs:110:12\n    |\n LL |     if let Ok(_) = Ok::<i32, i32>(42) {}\n    |     -------^^^^^--------------------- help: try this: `if Ok::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:113:12\n+  --> $DIR/redundant_pattern_matching_result.rs:112:12\n    |\n LL |     if let Err(_) = Err::<i32, i32>(42) {}\n    |     -------^^^^^^---------------------- help: try this: `if Err::<i32, i32>(42).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:115:15\n+  --> $DIR/redundant_pattern_matching_result.rs:114:15\n    |\n LL |     while let Ok(_) = Ok::<i32, i32>(10) {}\n    |     ----------^^^^^--------------------- help: try this: `while Ok::<i32, i32>(10).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:117:15\n+  --> $DIR/redundant_pattern_matching_result.rs:116:15\n    |\n LL |     while let Err(_) = Ok::<i32, i32>(10) {}\n    |     ----------^^^^^^--------------------- help: try this: `while Ok::<i32, i32>(10).is_err()`\n \n error: redundant pattern matching, consider using `is_ok()`\n-  --> $DIR/redundant_pattern_matching.rs:119:5\n+  --> $DIR/redundant_pattern_matching_result.rs:118:5\n    |\n LL | /     match Ok::<i32, i32>(42) {\n LL | |         Ok(_) => true,\n@@ -142,7 +142,7 @@ LL | |     };\n    | |_____^ help: try this: `Ok::<i32, i32>(42).is_ok()`\n \n error: redundant pattern matching, consider using `is_err()`\n-  --> $DIR/redundant_pattern_matching.rs:124:5\n+  --> $DIR/redundant_pattern_matching_result.rs:123:5\n    |\n LL | /     match Err::<i32, i32>(42) {\n LL | |         Ok(_) => false,", "previous_filename": "tests/ui/redundant_pattern_matching.stderr"}]}