{"sha": "49d9d5688e12a7874cd6e06c0122577e6b7d1167", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5ZDlkNTY4OGUxMmE3ODc0Y2Q2ZTA2YzAxMjI1NzdlNmI3ZDExNjc=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-25T19:19:20Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-03-25T19:19:20Z"}, "message": "Switch xfail system to use comments embedded in source files.", "tree": {"sha": "8149415e7b553a5f85b1f15eb56cca581373d1aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8149415e7b553a5f85b1f15eb56cca581373d1aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49d9d5688e12a7874cd6e06c0122577e6b7d1167", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49d9d5688e12a7874cd6e06c0122577e6b7d1167", "html_url": "https://github.com/rust-lang/rust/commit/49d9d5688e12a7874cd6e06c0122577e6b7d1167", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49d9d5688e12a7874cd6e06c0122577e6b7d1167/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a47cd50dfb9b8d88abea0baf4122e454d82e09e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a47cd50dfb9b8d88abea0baf4122e454d82e09e9", "html_url": "https://github.com/rust-lang/rust/commit/a47cd50dfb9b8d88abea0baf4122e454d82e09e9"}], "stats": {"total": 479, "additions": 245, "deletions": 234}, "files": [{"sha": "1cb84047a26d5e318bfe5d121b83d24d9f141eb3", "filename": "Makefile.in", "status": "modified", "additions": 56, "deletions": 234, "changes": 290, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/Makefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/Makefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Makefile.in?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -568,195 +568,17 @@ docsnap: doc/rust.pdf\n # Testing variables\n ######################################################################\n \n-# Float doesn't work in boot\n-\n-FLOAT_XFAILS := $(S)src/test/run-pass/float.rs \\\n-                $(S)src/test/run-pass/float2.rs \\\n-                $(S)src/test/run-pass/float-signature.rs \\\n-                $(S)src/test/run-pass/floatlits.rs\n-\n-# Temporarily xfail tests broken by the nominal-tags change.\n-\n-NOMINAL_TAG_XFAILS := $(S)src/test/run-pass/mlist.rs\n-\n-# Temporarily xfail tests broken by the constant-tags change.\n-\n-CONST_TAG_XFAILS := $(S)src/test/run-pass/generic-tag.rs\n-\n-# Temporarily xfail some of the task tests, while debugging the\n-# overhauled inter-domain messaging system.\n-\n-TASK_XFAILS := $(addprefix $(S)src/test/run-pass/, \\\n-                 task-comm-8.rs \\\n-                 task-comm-10.rs \\\n-                 task-comm-15.rs \\\n-                 task-comm-12.rs \\\n-                 task-comm-2.rs \\\n-                 task-comm-9.rs \\\n-                 task-comm-chan-nil.rs \\\n-                 task-life-0.rs \\\n-                 alt-type-simple.rs \\\n-                 many.rs)\n-\n-TEST_XFAILS_BOOT := $(TASK_XFAILS) \\\n-                    $(NOMINAL_TAG_XFAILS) \\\n-                    $(CONST_TAG_XFAILS) \\\n-                    $(FLOAT_XFAILS) \\\n-                    $(addprefix $(S)src/test/run-pass/, \\\n-                      arith-unsigned.rs \\\n-                      box-compare.rs \\\n-                      child-outlives-parent.rs \\\n-                      clone-with-exterior.rs \\\n-                      constrained-type.rs \\\n-                      destructor-ordering.rs \\\n-                      obj-as.rs \\\n-                      vec-slice.rs \\\n-                      fn-lval.rs \\\n-                      empty-mutable-vec.rs \\\n-                      generic-bind-2.rs \\\n-                      generic-fn-box.rs \\\n-                      generic-tup.rs \\\n-                      iter-ret.rs \\\n-                      leak-tag-copy.rs \\\n-                      lib-io.rs \\\n-                      maybe-mutable.rs \\\n-                      mlist-cycle.rs \\\n-                      obj-as.rs \\\n-                      seq-compare.rs \\\n-                      task-comm.rs \\\n-                      task-comm-3.rs \\\n-                      vec-slice.rs \\\n-                      while-and-do-while.rs) \\\n-                    $(addprefix $(S)src/test/run-fail/, \\\n-                      task-comm-14.rs) \\\n-                    $(addprefix $(S)src/test/compile-fail/, \\\n-                      bad-expr-path.rs \\\n-                      import.rs \\\n-                      import2.rs \\\n-                      import3.rs \\\n-                      import4.rs \\\n-                      bad-recv.rs \\\n-                      bad-send.rs \\\n-                      infinite-vec-type-recursion.rs \\\n-                      tail-non-call.rs \\\n-                      writing-through-read-alias.rs) \\\n-                    $(S)src/test/bench/shootout/nbody.rs\n-\n-TEST_XFAILS_STAGE0 := $(addprefix $(S)src/test/run-pass/, \\\n-                        acyclic-unwind.rs \\\n-                        alt-pattern-drop.rs \\\n-                        alt-type-simple.rs \\\n-                        basic-1.rs \\\n-                        basic-2.rs \\\n-                        basic.rs \\\n-                        child-outlives-parent.rs \\\n-                        clone-with-exterior.rs \\\n-                        comm.rs \\\n-                        constrained-type.rs \\\n-                        destructor-ordering.rs \\\n-                        iter-ret.rs \\\n-                        lazychan.rs \\\n-                        lib-bitv.rs \\\n-                        lib-deque.rs \\\n-                        lib-int.rs \\\n-                        lib-io.rs \\\n-                        lib-map.rs \\\n-                        lib-rand.rs \\\n-                        lib-sha1.rs \\\n-                        lib-sort.rs \\\n-                        lib-str.rs \\\n-                        lib-str-buf.rs \\\n-                        lib-task.rs \\\n-                        lib-uint.rs \\\n-                        lib-vec-str-conversions.rs \\\n-                        lib-vec.rs \\\n-                        many.rs \\\n-                        mlist-cycle.rs \\\n-                        mlist.rs \\\n-                        mutable-alias-vec.rs \\\n-                        obj-as.rs \\\n-                        obj-dtor.rs \\\n-                        pred.rs \\\n-                        preempt.rs \\\n-                        rt-circular-buffer.rs \\\n-                        size-and-align.rs \\\n-                        spawn-fn.rs \\\n-                        spawn-module-qualified.rs \\\n-                        spawn.rs \\\n-                        str-append.rs \\\n-                        syntax-extension-fmt.rs \\\n-                        syntax-extension-shell.rs \\\n-                        task-comm-0.rs \\\n-                        task-comm-1.rs \\\n-                        task-comm-10.rs \\\n-                        task-comm-11.rs \\\n-                        task-comm-12.rs \\\n-                        task-comm-13-thread.rs \\\n-                        task-comm-13.rs \\\n-                        task-comm-15.rs \\\n-                        task-comm-2.rs \\\n-                        task-comm-3.rs \\\n-                        task-comm-7.rs \\\n-                        task-comm-8.rs \\\n-                        task-comm-9.rs \\\n-                        task-comm.rs \\\n-                        task-killjoin.rs \\\n-                        task-life-0.rs \\\n-                        threads.rs \\\n-                        type-sizes.rs \\\n-                        typestate-cfg-nesting.rs \\\n-                        use.rs \\\n-                        use-import-export.rs \\\n-                        user.rs \\\n-                        utf8.rs \\\n-                        utf8_chars.rs \\\n-                        vec-alloc-append.rs \\\n-                        vec-append.rs \\\n-                        vec-slice.rs \\\n-                        while-with-break.rs \\\n-                        yield.rs \\\n-                        yield2.rs \\\n-                        multi.rc \\\n-                        native-mod.rc \\\n-                        native.rc \\\n-                        ) \\\n-                     $(filter-out \\\n-                      $(addprefix $(S)src/test/compile-fail/, \\\n-                        alt-tag-nullary.rs \\\n-                        alt-tag-unary.rs \\\n-                        arg-count-mismatch.rs \\\n-                        arg-type-mismatch.rs \\\n-                        bad-expr-path.rs \\\n-                        bad-expr-path2.rs \\\n-                        bogus-tag.rs \\\n-                        fru-extra-field.rs \\\n-                        import.rs \\\n-                        import2.rs \\\n-                        import3.rs \\\n-                        import4.rs \\\n-                        import-loop.rs \\\n-                        import-loop-2.rs \\\n-                        multiline-comment-line-tracking.rs \\\n-                        output-type-mismatch.rs \\\n-                        rec-missing-fields.rs \\\n-                        reserved-dec.rs \\\n-                        reserved-f128.rs \\\n-                        reserved-f16.rs \\\n-                        reserved-f80.rs \\\n-                        reserved-m128.rs \\\n-                        reserved-m32.rs \\\n-                        reserved-m64.rs \\\n-                        tail-non-call.rs \\\n-                        tail-typeck.rs \\\n-                        type-shadow.rs \\\n-                        while-type-error.rs \\\n-                        wrong-ret-type.rs \\\n-                        ), \\\n-                     $(wildcard $(S)src/test/*fail/*.rs test/*fail/*.rc)) \\\n-                     $(S)src/test/bench/shootout/fannkuchredux.rs \\\n-                     $(S)src/test/bench/shootout/fasta.rs \\\n-                     $(S)src/test/bench/shootout/binarytrees.rs \\\n-                     $(wildcard $(S)src/test/bench/99-bottles/*rs)\n+TEST_XFAILS_BOOT = $(shell grep \\\n+                       --recursive \\\n+                       --files-with-matches \\\n+                       --include=*.rs --include=*.rc \\\n+                       xfail-boot $(S)src/test)\n+\n+TEST_XFAILS_STAGE0 = $(shell grep \\\n+                       --recursive \\\n+                       --files-with-matches \\\n+                       --include=*.rs --include=*.rc \\\n+                       xfail-stage0 $(S)src/test)\n \n ifdef MINGW_CROSS\n TEST_XFAILS_BOOT += $(S)src/test/run-pass/native-mod.rc\n@@ -767,106 +589,106 @@ TEST_XFAILS_BOOT += $(S)src/test/run-pass/native-mod.rc\n TEST_XFAILS_STAGE0 += $(S)src/test/run-pass/native-mod.rc\n endif\n \n-BENCH_RS := $(wildcard $(S)src/test/bench/shootout/*.rs) \\\n+BENCH_RS = $(wildcard $(S)src/test/bench/shootout/*.rs) \\\n             $(wildcard $(S)src/test/bench/99-bottles/*.rs)\n-RPASS_RC := $(wildcard $(S)src/test/run-pass/*.rc)\n-RPASS_RS := $(wildcard $(S)src/test/run-pass/*.rs) $(BENCH_RS)\n-RFAIL_RC := $(wildcard $(S)src/test/run-fail/*.rc)\n-RFAIL_RS := $(wildcard $(S)src/test/run-fail/*.rs)\n-CFAIL_RC := $(wildcard $(S)src/test/compile-fail/*.rc)\n-CFAIL_RS := $(wildcard $(S)src/test/compile-fail/*.rs)\n+RPASS_RC = $(wildcard $(S)src/test/run-pass/*.rc)\n+RPASS_RS = $(wildcard $(S)src/test/run-pass/*.rs) $(BENCH_RS)\n+RFAIL_RC = $(wildcard $(S)src/test/run-fail/*.rc)\n+RFAIL_RS = $(wildcard $(S)src/test/run-fail/*.rs)\n+CFAIL_RC = $(wildcard $(S)src/test/compile-fail/*.rc)\n+CFAIL_RS = $(wildcard $(S)src/test/compile-fail/*.rs)\n \n ifdef CHECK_XFAILS\n-TEST_RPASS_CRATES_BOOT := $(filter $(TEST_XFAILS_BOOT), $(RPASS_RC))\n-TEST_RPASS_CRATES_STAGE0 := $(filter $(TEST_XFAILS_STAGE0), $(RPASS_RC))\n-TEST_RPASS_SOURCES_BOOT := $(filter $(TEST_XFAILS_BOOT), $(RPASS_RS))\n-TEST_RPASS_SOURCES_STAGE0 := $(filter $(TEST_XFAILS_STAGE0), $(RPASS_RS))\n+TEST_RPASS_CRATES_BOOT = $(filter $(TEST_XFAILS_BOOT), $(RPASS_RC))\n+TEST_RPASS_CRATES_STAGE0 = $(filter $(TEST_XFAILS_STAGE0), $(RPASS_RC))\n+TEST_RPASS_SOURCES_BOOT = $(filter $(TEST_XFAILS_BOOT), $(RPASS_RS))\n+TEST_RPASS_SOURCES_STAGE0 = $(filter $(TEST_XFAILS_STAGE0), $(RPASS_RS))\n else\n-TEST_RPASS_CRATES_BOOT := $(filter-out $(TEST_XFAILS_BOOT), $(RPASS_RC))\n-TEST_RPASS_CRATES_STAGE0 := $(filter-out $(TEST_XFAILS_STAGE0), $(RPASS_RC))\n-TEST_RPASS_SOURCES_BOOT := $(filter-out $(TEST_XFAILS_BOOT), $(RPASS_RS))\n-TEST_RPASS_SOURCES_STAGE0 := $(filter-out $(TEST_XFAILS_STAGE0), $(RPASS_RS))\n+TEST_RPASS_CRATES_BOOT = $(filter-out $(TEST_XFAILS_BOOT), $(RPASS_RC))\n+TEST_RPASS_CRATES_STAGE0 = $(filter-out $(TEST_XFAILS_STAGE0), $(RPASS_RC))\n+TEST_RPASS_SOURCES_BOOT = $(filter-out $(TEST_XFAILS_BOOT), $(RPASS_RS))\n+TEST_RPASS_SOURCES_STAGE0 = $(filter-out $(TEST_XFAILS_STAGE0), $(RPASS_RS))\n endif\n \n-TEST_RPASS_EXES_BOOT := \\\n+TEST_RPASS_EXES_BOOT = \\\n   $(subst $(S)src/,,$(TEST_RPASS_CRATES_BOOT:.rc=.boot$(X))) \\\n   $(subst $(S)src/,,$(TEST_RPASS_SOURCES_BOOT:.rs=.boot$(X)))\n-TEST_RPASS_EXES_STAGE0 := \\\n+TEST_RPASS_EXES_STAGE0 = \\\n   $(subst $(S)src/,,$(TEST_RPASS_CRATES_STAGE0:.rc=.stage0$(X))) \\\n   $(subst $(S)src/,,$(TEST_RPASS_SOURCES_STAGE0:.rs=.stage0$(X)))\n \n-TEST_RPASS_OUTS_BOOT  := \\\n+TEST_RPASS_OUTS_BOOT  = \\\n   $(TEST_RPASS_EXES_BOOT:.boot$(X)=.boot.out)\n-TEST_RPASS_OUTS_STAGE0 := \\\n+TEST_RPASS_OUTS_STAGE0 = \\\n   $(TEST_RPASS_EXES_STAGE0:.stage0$(X)=.stage0.out)\n \n-TEST_RPASS_TMPS_BOOT  := \\\n+TEST_RPASS_TMPS_BOOT  = \\\n   $(TEST_RPASS_EXES_BOOT:.boot$(X)=.boot$(X).tmp)\n-TEST_RPASS_TMPS_STAGE0 := \\\n+TEST_RPASS_TMPS_STAGE0 = \\\n   $(TEST_RPASS_EXES_STAGE0:.stage0$(X)=.stage0$(X).tmp)\n \n \n-TEST_RFAIL_CRATES_BOOT := $(filter-out $(TEST_XFAILS_BOOT), $(RFAIL_RC))\n-TEST_RFAIL_CRATES_STAGE0 := $(filter-out $(TEST_XFAILS_STAGE0), $(RFAIL_RC))\n-TEST_RFAIL_SOURCES_BOOT := $(filter-out $(TEST_XFAILS_BOOT), $(RFAIL_RS))\n-TEST_RFAIL_SOURCES_STAGE0 := $(filter-out $(TEST_XFAILS_STAGE0), $(RFAIL_RS))\n+TEST_RFAIL_CRATES_BOOT = $(filter-out $(TEST_XFAILS_BOOT), $(RFAIL_RC))\n+TEST_RFAIL_CRATES_STAGE0 = $(filter-out $(TEST_XFAILS_STAGE0), $(RFAIL_RC))\n+TEST_RFAIL_SOURCES_BOOT = $(filter-out $(TEST_XFAILS_BOOT), $(RFAIL_RS))\n+TEST_RFAIL_SOURCES_STAGE0 = $(filter-out $(TEST_XFAILS_STAGE0), $(RFAIL_RS))\n \n-TEST_RFAIL_EXES_BOOT := \\\n+TEST_RFAIL_EXES_BOOT = \\\n   $(subst $(S)src/,,$(TEST_RFAIL_CRATES_BOOT:.rc=.boot$(X))) \\\n   $(subst $(S)src/,,$(TEST_RFAIL_SOURCES_BOOT:.rs=.boot$(X)))\n-TEST_RFAIL_EXES_STAGE0 := \\\n+TEST_RFAIL_EXES_STAGE0 = \\\n   $(subst $(S)src/,,$(TEST_RFAIL_CRATES_STAGE0:.rc=.stage0$(X))) \\\n   $(subst $(S)src/,,$(TEST_RFAIL_SOURCES_STAGE0:.rs=.stage0$(X)))\n \n-TEST_RFAIL_OUTS_BOOT  := \\\n+TEST_RFAIL_OUTS_BOOT  = \\\n   $(TEST_RFAIL_EXES_BOOT:.boot$(X)=.boot.out)\n-TEST_RFAIL_OUTS_STAGE0 := \\\n+TEST_RFAIL_OUTS_STAGE0 = \\\n   $(TEST_RFAIL_EXES_STAGE0:.stage0$(X)=.stage0.out)\n \n-TEST_RFAIL_TMPS_BOOT  := \\\n+TEST_RFAIL_TMPS_BOOT  = \\\n   $(TEST_RFAIL_EXES_BOOT:.boot$(X)=.boot$(X).tmp)\n-TEST_RFAIL_TMPS_STAGE0 := \\\n+TEST_RFAIL_TMPS_STAGE0 = \\\n   $(TEST_RFAIL_EXES_STAGE0:.stage0$(X)=.stage0$(X).tmp)\n \n \n-TEST_CFAIL_CRATES_BOOT := $(filter-out $(TEST_XFAILS_BOOT), $(CFAIL_RC))\n-TEST_CFAIL_CRATES_STAGE0 := $(filter-out $(TEST_XFAILS_STAGE0), $(CFAIL_RC))\n-TEST_CFAIL_SOURCES_BOOT := $(filter-out $(TEST_XFAILS_BOOT), $(CFAIL_RS))\n-TEST_CFAIL_SOURCES_STAGE0 := $(filter-out $(TEST_XFAILS_STAGE0), $(CFAIL_RS))\n+TEST_CFAIL_CRATES_BOOT = $(filter-out $(TEST_XFAILS_BOOT), $(CFAIL_RC))\n+TEST_CFAIL_CRATES_STAGE0 = $(filter-out $(TEST_XFAILS_STAGE0), $(CFAIL_RC))\n+TEST_CFAIL_SOURCES_BOOT = $(filter-out $(TEST_XFAILS_BOOT), $(CFAIL_RS))\n+TEST_CFAIL_SOURCES_STAGE0 = $(filter-out $(TEST_XFAILS_STAGE0), $(CFAIL_RS))\n \n-TEST_CFAIL_EXES_BOOT := \\\n+TEST_CFAIL_EXES_BOOT = \\\n   $(subst $(S)src/,,$(TEST_CFAIL_CRATES_BOOT:.rc=.boot$(X))) \\\n   $(subst $(S)src/,,$(TEST_CFAIL_SOURCES_BOOT:.rs=.boot$(X)))\n-TEST_CFAIL_EXES_STAGE0 := \\\n+TEST_CFAIL_EXES_STAGE0 = \\\n   $(subst $(S)src/,,$(TEST_CFAIL_CRATES_STAGE0:.rc=.stage0$(X))) \\\n   $(subst $(S)src/,,$(TEST_CFAIL_SOURCES_STAGE0:.rs=.stage0$(X)))\n \n-TEST_CFAIL_OUTS_BOOT := \\\n+TEST_CFAIL_OUTS_BOOT = \\\n   $(TEST_CFAIL_EXES_BOOT:.boot$(X)=.boot.out)\n-TEST_CFAIL_OUTS_STAGE0 := \\\n+TEST_CFAIL_OUTS_STAGE0 = \\\n   $(TEST_CFAIL_EXES_STAGE0:.stage0$(X)=.stage0.out)\n \n-TEST_CFAIL_TMPS_BOOT := \\\n+TEST_CFAIL_TMPS_BOOT = \\\n   $(TEST_CFAIL_EXES_BOOT:.boot$(X)=.boot$(X).tmp)\n-TEST_CFAIL_TMPS_STAGE0 := \\\n+TEST_CFAIL_TMPS_STAGE0 = \\\n   $(TEST_CFAIL_EXES_STAGE0:.stage0$(X)=.stage0$(X).tmp)\n \n \n-ALL_TEST_CRATES := $(TEST_CFAIL_CRATES_BOOT) \\\n+ALL_TEST_CRATES = $(TEST_CFAIL_CRATES_BOOT) \\\n                    $(TEST_RFAIL_CRATES_BOOT) \\\n                    $(TEST_RPASS_CRATES_BOOT) \\\n                    $(TEST_CFAIL_CRATES_STAGE0) \\\n                    $(TEST_RFAIL_CRATES_STAGE0) \\\n                    $(TEST_RPASS_CRATES_STAGE0)\n \n-ALL_TEST_SOURCES := $(TEST_CFAIL_SOURCES_BOOT) \\\n+ALL_TEST_SOURCES = $(TEST_CFAIL_SOURCES_BOOT) \\\n                     $(TEST_RFAIL_SOURCES_BOOT) \\\n                     $(TEST_RPASS_SOURCES_BOOT) \\\n                     $(TEST_CFAIL_SOURCES_STAGE0) \\\n                     $(TEST_RFAIL_SOURCES_STAGE0) \\\n                     $(TEST_RPASS_SOURCES_STAGE0)\n \n-ALL_TEST_INPUTS := $(wildcard $(S)src/test/*/*.rs   \\\n+ALL_TEST_INPUTS = $(wildcard $(S)src/test/*/*.rs   \\\n                               $(S)src/test/*/*/*.rs \\\n                               $(S)src/test/*/*.rc)\n \n@@ -1131,7 +953,7 @@ PKG_3RDPARTY := rt/valgrind.h rt/memcheck.h \\\n                 rt/bigint/bigint.h rt/bigint/bigint_int.cpp \\\n                 rt/bigint/bigint_ext.cpp rt/bigint/low_primes.h\n \n-PKG_FILES :=\\\n+PKG_FILES = \\\n     $(wildcard $(S)src/etc/*.*)                \\\n     $(S)LICENSE.txt $(S)README                 \\\n     $(S)configure $(S)Makefile.in              \\"}, {"sha": "e43541f492969b3a7a76998013a37bbdef72ea72", "filename": "src/test/bench/99-bottles/99bob-iter.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2F99-bottles%2F99bob-iter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2F99-bottles%2F99bob-iter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2F99-bottles%2F99bob-iter.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n /* -*- mode:rust;indent-tabs-mode:nil -*- \n  * Implementation of 99 Bottles of Beer\n  * http://99-bottles-of-beer.net/"}, {"sha": "539f81526fd9a63dcc4f8ec0a7ada9778a4b77c2", "filename": "src/test/bench/99-bottles/99bob-pattern.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2F99-bottles%2F99bob-pattern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2F99-bottles%2F99bob-pattern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2F99-bottles%2F99bob-pattern.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n /* -*- mode:rust;indent-tabs-mode:nil -*- \n  * Implementation of 99 Bottles of Beer\n  * http://99-bottles-of-beer.net/"}, {"sha": "d5adf102c5285536c81fd43b703bb0a8c3eed79b", "filename": "src/test/bench/99-bottles/99bob-simple.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2F99-bottles%2F99bob-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2F99-bottles%2F99bob-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2F99-bottles%2F99bob-simple.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n /* -*- mode:rust;indent-tabs-mode:nil -*- \n  * Implementation of 99 Bottles of Beer\n  * http://99-bottles-of-beer.net/"}, {"sha": "41e2c536ed1200215e9fd7c037ea61ffa54dc5d7", "filename": "src/test/bench/99-bottles/99bob-tail.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2F99-bottles%2F99bob-tail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2F99-bottles%2F99bob-tail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2F99-bottles%2F99bob-tail.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n /* -*- mode:rust;indent-tabs-mode:nil -*- \n  * Implementation of 99 Bottles of Beer\n  * http://99-bottles-of-beer.net/"}, {"sha": "0fc7ced4a9f59a43ea10fed816a7c25aa4a9ab0b", "filename": "src/test/bench/shootout/binarytrees.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2Fshootout%2Fbinarytrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2Fshootout%2Fbinarytrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout%2Fbinarytrees.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n use std;\n \n import std._int;"}, {"sha": "65f6bdb239d0d728b82be408ff2c2f8c1fd652b4", "filename": "src/test/bench/shootout/fannkuchredux.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2Fshootout%2Ffannkuchredux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2Fshootout%2Ffannkuchredux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout%2Ffannkuchredux.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // Based on Isaac Gouy's fannkuchredux.csharp\n \n use std;"}, {"sha": "82d65e84e627113d119ff62161140bcde2f5b69e", "filename": "src/test/bench/shootout/fasta.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2Fshootout%2Ffasta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2Fshootout%2Ffasta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout%2Ffasta.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n /* -*- mode: rust; indent-tabs-mode: nil -*-\n  * Implementation of 'fasta' benchmark from\n  * Computer Language Benchmarks Game"}, {"sha": "5d9e304a420e54b81b23c4c51be11dbb848faac4", "filename": "src/test/bench/shootout/nbody.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2Fshootout%2Fnbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fbench%2Fshootout%2Fnbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout%2Fnbody.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n // based on:\n // http://shootout.alioth.debian.org/u32/benchmark.php?test=nbody&lang=java\n "}, {"sha": "0b5dbbfe996eba65e2fd03c0e37436f8114c75c2", "filename": "src/test/compile-fail/bad-alt.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-alt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-alt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-alt.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: Unexpected token 'x'\n \n fn main() {"}, {"sha": "8e30ac4407d65d285500c2e7ad261fa5d9d7f534", "filename": "src/test/compile-fail/bad-env-capture.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-env-capture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-env-capture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-env-capture.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: attempted dynamic environment-capture\n fn foo() {\n   let int x;"}, {"sha": "01e27c5a15a4981d225d4b2c4a4173d5d4746899", "filename": "src/test/compile-fail/bad-expr-path.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-expr-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-expr-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-expr-path.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n // error-pattern: unresolved name: a\n \n mod m1 {"}, {"sha": "d1a5203f5d803e0c978b7bc6679a46521d0a5689", "filename": "src/test/compile-fail/bad-main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-main.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: bad type signature\n \n fn main(int x) {"}, {"sha": "99324ce12c0f3372387413985dcaa0f7c5f17fcd", "filename": "src/test/compile-fail/bad-name.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-name.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n \n // error-pattern: malformed name\n "}, {"sha": "031d1059f9d1abd6a4e65abbbd923a2f9cab26b6", "filename": "src/test/compile-fail/bad-recv.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-recv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-recv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-recv.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n // error-pattern: mismatched types\n \n fn main() {"}, {"sha": "4a97539f011e0d4b0e425ebd6f4c7f49d364d506", "filename": "src/test/compile-fail/bad-send.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-send.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-send.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-send.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n // error-pattern: mismatched types\n \n fn main() {"}, {"sha": "53b96278a48e0039f43d04c39c4e8df55f106c4e", "filename": "src/test/compile-fail/bad-type-env-capture.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-type-env-capture.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: attempted dynamic environment-capture\n fn foo[T]() { obj bar(T b) {} }\n fn main() {}\n\\ No newline at end of file"}, {"sha": "7d85d07f8a004a453e1ed0c46bf1a5c6309ea856", "filename": "src/test/compile-fail/bind-alias.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbind-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fbind-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbind-alias.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: binding alias slot\n \n fn f(&int x) {}"}, {"sha": "4a0f704a0d225ffa0e1b2cdb4c7ecec4f5e0927e", "filename": "src/test/compile-fail/comm-makes-io.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fcomm-makes-io.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fcomm-makes-io.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcomm-makes-io.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: calculated effect is 'impure'\n \n fn main() {"}, {"sha": "6d81b69361052d81c3bb66bb0d87347fa8bccf3b", "filename": "src/test/compile-fail/constructor-as-cast.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fconstructor-as-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fconstructor-as-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconstructor-as-cast.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: non-type context\n type base =\n   obj {"}, {"sha": "5a069c5ae7aeb525f89b69f7d98f80d99b990931", "filename": "src/test/compile-fail/dead-code-be.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fdead-code-be.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fdead-code-be.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdead-code-be.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: dead"}, {"sha": "c992e4e5d0a07942808cdc130c8d995ff0ff5e02", "filename": "src/test/compile-fail/dead-code-ret.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdead-code-ret.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: dead"}, {"sha": "e4184ccda97f0e75f107fa4933260a1be29d1a99", "filename": "src/test/compile-fail/direct-obj-fn-call.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fdirect-obj-fn-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fdirect-obj-fn-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdirect-obj-fn-call.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n \n // error-pattern: is not a mod\n "}, {"sha": "e6680193d944d0596e2c0ab19336b370ae3d86d2", "filename": "src/test/compile-fail/does-nothing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fdoes-nothing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fdoes-nothing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fdoes-nothing.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: does nothing\n fn main() {\n   log \"doing\";"}, {"sha": "84e87c2e561ec03052d5467f17ea9f526c74d398", "filename": "src/test/compile-fail/export.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fexport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fexport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fexport.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: unknown module item\n mod foo {\n   export x;"}, {"sha": "74fcdb265205d3d7fe7816d7588e9cdd3e6bd1b9", "filename": "src/test/compile-fail/fru-typestate.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Ffru-typestate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Ffru-typestate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffru-typestate.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: precondition"}, {"sha": "db1eac5c36960f1a5d4583e2904d8ec5cbde88ef", "filename": "src/test/compile-fail/import.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fimport.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fimport.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n // error-pattern: unresolved name: baz\n import zed.bar;\n import zed.baz;"}, {"sha": "91d2ade36fcb6f4a00d709b9a27eabdda72da85f", "filename": "src/test/compile-fail/import2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fimport2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fimport2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport2.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n // error-pattern: unresolved name: zed\n import baz.zed.bar;\n mod baz {"}, {"sha": "eede762610ca6b269d7c2bb6c805ba2cf7325017", "filename": "src/test/compile-fail/import3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fimport3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fimport3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport3.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n // error-pattern: main is not a module or crate\n import main.bar;\n "}, {"sha": "bbef8d53eae84fc25cb99ecf8f254c8f85f80334", "filename": "src/test/compile-fail/import4.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fimport4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fimport4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimport4.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n // error-pattern: cyclic import\n \n import zed.bar;"}, {"sha": "17a651cad7a67f40c2afd409874b4c4575263916", "filename": "src/test/compile-fail/impure-pred.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fimpure-pred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fimpure-pred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimpure-pred.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: impure function used in constraint"}, {"sha": "8ba0e25be739b8bc04e5bbe5872cccc4c9ca21b6", "filename": "src/test/compile-fail/infinite-tag-type-recursion.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finfinite-tag-type-recursion.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: tag of infinite size"}, {"sha": "4534f119e178ccb1aa909d10ced3784ed4ed9439", "filename": "src/test/compile-fail/infinite-vec-type-recursion.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Finfinite-vec-type-recursion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Finfinite-vec-type-recursion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finfinite-vec-type-recursion.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: infinite recursive type definition"}, {"sha": "5e8281c53e4c576772416e176631f7557b87ba59", "filename": "src/test/compile-fail/io-infects-caller.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fio-infects-caller.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fio-infects-caller.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fio-infects-caller.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: calculated effect is 'impure'\n \n impure fn foo() {"}, {"sha": "5cff8b986e7a0bfcad12f28ec238e9493778fbda", "filename": "src/test/compile-fail/item-name-overload.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fitem-name-overload.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fitem-name-overload.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fitem-name-overload.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: name"}, {"sha": "4c73a4fd4c9beadf03269f6ce6fc6e0fd2438f0a", "filename": "src/test/compile-fail/missing-return.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fmissing-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fmissing-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmissing-return.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: return\n \n fn f() -> int {"}, {"sha": "d158f56324d144a0b83700bb5aefd60aab832d03", "filename": "src/test/compile-fail/native-makes-unsafe.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fnative-makes-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fnative-makes-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnative-makes-unsafe.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: calculated effect is 'unsafe'\n \n native mod foo {"}, {"sha": "96089e670c0a04028325e937d183a93badaea977", "filename": "src/test/compile-fail/no-self-dispatch.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fno-self-dispatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fno-self-dispatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fno-self-dispatch.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: unresolved identifier\n obj oT() {\n   fn get() -> int {"}, {"sha": "c599f3bcb45b76bf302199db140c042485b1392a", "filename": "src/test/compile-fail/not-a-pred.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fnot-a-pred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fnot-a-pred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnot-a-pred.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: mismatched types"}, {"sha": "7106df5c80bec25f433d3f5f4553df23cc1bc49d", "filename": "src/test/compile-fail/pred-on-wrong-slots.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fpred-on-wrong-slots.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fpred-on-wrong-slots.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpred-on-wrong-slots.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: Unsatisfied .* lt(a, c)"}, {"sha": "22882ff2aeed770e1392362b05726a716eba5f9a", "filename": "src/test/compile-fail/put-in-fn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fput-in-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fput-in-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fput-in-fn.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: iterator function\n \n fn f() -> int {"}, {"sha": "047db518fab4331a603aefa98267ed80b22253ef", "filename": "src/test/compile-fail/return-uninit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Freturn-uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Freturn-uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Freturn-uninit.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: precondition constraint\n \n fn f() -> int {"}, {"sha": "2ba4a30cae4e8457bffee908823cbc4293e404ab", "filename": "src/test/compile-fail/slot-as-pred.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fslot-as-pred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fslot-as-pred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslot-as-pred.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: mismatched types"}, {"sha": "bd7d7d9f02737d8f6d5fdffbfea7c9c7d8217d38", "filename": "src/test/compile-fail/spawn-non-nil-fn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fspawn-non-nil-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fspawn-non-nil-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fspawn-non-nil-fn.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: mismatched types\n \n fn f(int x) -> int {"}, {"sha": "e2dbc381fb168e04b64bb3a9d22e00c050beae9a", "filename": "src/test/compile-fail/tail-non-call.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Ftail-non-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Ftail-non-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftail-non-call.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n // error-pattern: Non-call expression in tail call\n \n fn f() -> int {"}, {"sha": "f49e744769251a82e1bf6528ae9ec3ee80e596ee", "filename": "src/test/compile-fail/unbalanced-comment.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Funbalanced-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Funbalanced-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funbalanced-comment.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: token"}, {"sha": "64784661b3cb3f50e4bb85c50b2dfcfda2e0a97b", "filename": "src/test/compile-fail/unnecessary-io.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Funnecessary-io.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Funnecessary-io.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funnecessary-io.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: calculated effect is ''\n impure fn main() {\n   log \"hi\";"}, {"sha": "9d48f164e231b5ee5ce51f4e08c476e41c57205e", "filename": "src/test/compile-fail/unnecessary-unsafe.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Funnecessary-unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Funnecessary-unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funnecessary-unsafe.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: calculated effect is ''\n unsafe fn main() {\n   log \"hi\";"}, {"sha": "532024e59d0675b399b569c319fe566d57d2ae17", "filename": "src/test/compile-fail/unsafe-infects-caller.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Funsafe-infects-caller.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Funsafe-infects-caller.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsafe-infects-caller.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: calculated effect is 'unsafe'\n \n native mod foo {"}, {"sha": "c77676b80999f952968fcf82be4ca32263290287", "filename": "src/test/compile-fail/use-uninit-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fuse-uninit-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fuse-uninit-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-uninit-2.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern:Unsatisfied precondition\n \n fn foo(int x) {"}, {"sha": "5dd3926ba0dfc440bb6f311ee9521b45a48e66b1", "filename": "src/test/compile-fail/use-uninit-3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fuse-uninit-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fuse-uninit-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-uninit-3.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern:Unsatisfied precondition\n \n fn foo(int x) {"}, {"sha": "bd2e9f416a2ee4437f356a8742c8bb2d96272db3", "filename": "src/test/compile-fail/use-uninit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fuse-uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fuse-uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fuse-uninit.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern:Unsatisfied precondition\n \n fn foo(int x) {"}, {"sha": "b49152b3e98cb390d4f705fcd55671f7b5f8a21a", "filename": "src/test/compile-fail/while-bypass.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwhile-bypass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwhile-bypass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwhile-bypass.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: precondition constraint\n \n fn f() -> int {"}, {"sha": "295752f8e0299d9e5540c718a27e6b20291a09f6", "filename": "src/test/compile-fail/while-expr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwhile-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwhile-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwhile-expr.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: precondition constraint\n \n fn main() {"}, {"sha": "373c60828cd141e42c1ffb695c3dd4fed2e8340a", "filename": "src/test/compile-fail/writing-through-read-alias.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwriting-through-read-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwriting-through-read-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwriting-through-read-alias.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern: writing to immutable type"}, {"sha": "7757609df7839bbe062ee970a4f12ca4b0f684a0", "filename": "src/test/compile-fail/writing-through-uninit-vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwriting-through-uninit-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwriting-through-uninit-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwriting-through-uninit-vec.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: Unsatisfied precondition constraint\n \n fn test() {"}, {"sha": "563fc9cd84e6b681b8ebfced3341eed056af0ab7", "filename": "src/test/compile-fail/writing-to-immutable-obj.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-obj.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-obj.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-obj.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: writing to immutable type\n obj objy(int x) {\n     fn foo() -> () {"}, {"sha": "8e94dfd94877e2f164eb3f364a97bd8582ff5a1d", "filename": "src/test/compile-fail/writing-to-immutable-rec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-rec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-rec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-rec.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: writing to immutable type\n fn main() {\n   let rec(int x) r = rec(x=1);"}, {"sha": "e05aa55b457b2c0eba54ad5e8a3b43fd29f5e9f6", "filename": "src/test/compile-fail/writing-to-immutable-tup.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-tup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-tup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-tup.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: writing to immutable type\n fn main() {\n   let tup(int) t = tup(1);"}, {"sha": "dac122b8d803e548eb3752f1cbf8377b368c6c86", "filename": "src/test/compile-fail/writing-to-immutable-vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwriting-to-immutable-vec.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern: writing to immutable type\n fn main() {\n   let vec[int] v = vec(1, 2, 3);"}, {"sha": "3ab821d5de1a28f40576d7051ab0cfab79d1946e", "filename": "src/test/run-fail/explicit-fail.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Fexplicit-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Fexplicit-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fexplicit-fail.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern:explicit\n \n fn main() {"}, {"sha": "e8c9cf71bcbee00274442a9439263761ffa801ff", "filename": "src/test/run-fail/fail.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Ffail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Ffail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // error-pattern:1 == 2\n \n fn main() {"}, {"sha": "df8b49d6cfee86ab5070cf42e02ab93904ba1d94", "filename": "src/test/run-fail/linked-failure.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Flinked-failure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Flinked-failure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Flinked-failure.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern:1 == 2"}, {"sha": "85418022ff00a51e7697616397d60d6dcc188efd", "filename": "src/test/run-fail/non-exhaustive-match.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Fnon-exhaustive-match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Fnon-exhaustive-match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fnon-exhaustive-match.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern:non-exhaustive match failure"}, {"sha": "d4430703c710b7e25f8a01c45df9ae2a4e1856e3", "filename": "src/test/run-fail/pred.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Fpred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Fpred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fpred.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern:predicate check"}, {"sha": "4388cb3ac802e5d7bc101fdce9e540d09d9f8b2a", "filename": "src/test/run-fail/str-overrun.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Fstr-overrun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Fstr-overrun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fstr-overrun.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern:bounds check"}, {"sha": "b56723c2832911d211c6b3c88f1cc7c928cb30aa", "filename": "src/test/run-fail/task-comm-14.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Ftask-comm-14.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Ftask-comm-14.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftask-comm-14.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n io fn main() {\n     let port[int] po = port();\n "}, {"sha": "961da730e3bdaa0a22df41317880e3abe9eb0096", "filename": "src/test/run-fail/vec-overrun.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Fvec-overrun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Fvec-overrun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fvec-overrun.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern:bounds check"}, {"sha": "a230d1be7ff7613f7065341883cc7e33b8f08874", "filename": "src/test/run-fail/vec-underrun.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Fvec-underrun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-fail%2Fvec-underrun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fvec-underrun.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // error-pattern:bounds check"}, {"sha": "4df67c9bd41d18650a9d8ee3f577d31bde7326ef", "filename": "src/test/run-pass/acyclic-unwind.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Facyclic-unwind.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n impure fn f(chan[int] c)"}, {"sha": "d3c62485fa83dbc088d9be6c1c3198910f157410", "filename": "src/test/run-pass/alt-pattern-drop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Falt-pattern-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Falt-pattern-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-pattern-drop.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "62193866e7205bd77108985b5a3afeee77811687", "filename": "src/test/run-pass/alt-type-simple.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Falt-type-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Falt-type-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-type-simple.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n fn altsimple(any x) {\n   alt type (f) {\n     case (int i) { print(\"int\"); }"}, {"sha": "748ff6b7da32bb724b4f9a72a2a17c0c98ab6f88", "filename": "src/test/run-pass/arith-unsigned.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Farith-unsigned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Farith-unsigned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Farith-unsigned.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n // Unsigned integer operations\n \n fn main() {"}, {"sha": "5697eea43b3ff848faf2eebf2497ab07422831c8", "filename": "src/test/run-pass/basic-1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fbasic-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fbasic-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic-1.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n impure fn a(chan[int] c) {"}, {"sha": "d73366847735563f314a50905a8089a3d7749ae8", "filename": "src/test/run-pass/basic-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fbasic-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fbasic-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic-2.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n impure fn a(chan[int] c) {"}, {"sha": "7495f037fed4fc3fedf08e7a2d474a9e51f54c17", "filename": "src/test/run-pass/basic.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fbasic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fbasic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbasic.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n impure fn a(chan[int] c) {"}, {"sha": "619790d796512d3ff381c92136d5c53a7e0eac61", "filename": "src/test/run-pass/box-compare.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fbox-compare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fbox-compare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbox-compare.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n fn main() {\n   check (@1 < @3);\n   check (@@\"hello \" > @@\"hello\");"}, {"sha": "01ee19afb44c1e2f9255abcc0e87bfe321ee192a", "filename": "src/test/run-pass/child-outlives-parent.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n // Reported as issue #126, child leaks the string.\n \n fn child2(str s) {"}, {"sha": "e97c409d50f3b9d653dd42bab0a639a46c657667", "filename": "src/test/run-pass/clone-with-exterior.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n fn f(@rec(int a, int b) x) {\n   check (x.a == 10);\n   check (x.b == 12);"}, {"sha": "93ccacfcc2a7700e44ac381066f2455f3779500f", "filename": "src/test/run-pass/comm.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fcomm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fcomm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcomm.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n impure fn main() {"}, {"sha": "3c110400438d227ae7f691ad4949f0e99ac8e8fe", "filename": "src/test/run-pass/constrained-type.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fconstrained-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fconstrained-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconstrained-type.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n // -*- rust -*-\n \n // Reported as issue #141, as a parse error. Ought to work in full though."}, {"sha": "aed38bc2fe3127f93049f6d64e2031aa49454028", "filename": "src/test/run-pass/destructor-ordering.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fdestructor-ordering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fdestructor-ordering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdestructor-ordering.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n // This test checks that destructors run in the right order.  Because\n // stateful objects can't have destructors, we have the destructors\n // record their expected order into a channel when they execute (so"}, {"sha": "237805ca8fdcf49f6fef3368442a0831d54d9964", "filename": "src/test/run-pass/empty-mutable-vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fempty-mutable-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fempty-mutable-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fempty-mutable-vec.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n fn main() {\n     let vec[mutable int] v = vec(mutable);\n }"}, {"sha": "55c42a6e187e4148a3b935193858cb83acd23188", "filename": "src/test/run-pass/float-signature.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ffloat-signature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ffloat-signature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffloat-signature.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n fn main() {\n     fn foo(float n) -> float {\n         ret n + 0.12345;"}, {"sha": "950271fb118856a691a383850c0d5a5b3ee05d07", "filename": "src/test/run-pass/float.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffloat.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n fn main() {\n   auto pi = 3.1415927;\n "}, {"sha": "9cc3a8ca9cd31a5bab77ac3cc88a43398af0da0b", "filename": "src/test/run-pass/float2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ffloat2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ffloat2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffloat2.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n fn main() {\n   auto a = 1.5e6;\n   auto b = 1.5E6;"}, {"sha": "10b0fb7766a60aa063eabd5cad05ef433fa127de", "filename": "src/test/run-pass/floatlits.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ffloatlits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ffloatlits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffloatlits.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n fn main() {\n   auto f = 4.999999999999;\n   check (f > 4.90);"}, {"sha": "4223e02268129b6143ed2fe419c32e03ada12e41", "filename": "src/test/run-pass/fn-lval.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ffn-lval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ffn-lval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffn-lval.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n // -*- rust -*-\n \n fn foo((fn(int) -> int) f) {}"}, {"sha": "3975867ac29a32f13781f9bbeab80695c162d8e3", "filename": "src/test/run-pass/generic-bind-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fgeneric-bind-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fgeneric-bind-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-bind-2.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n fn id[T](&T t) -> T {\n   ret t;\n }"}, {"sha": "1092ea8b65f30d5b83685198c3c6d326d9e347bc", "filename": "src/test/run-pass/generic-fn-box.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fgeneric-fn-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fgeneric-fn-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-fn-box.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n fn f[T](@T x) -> @T {\n     ret x;\n }"}, {"sha": "12a813e30853e31aead84c7ca1a5c33d8d33dd7c", "filename": "src/test/run-pass/generic-tag.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fgeneric-tag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fgeneric-tag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-tag.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n tag option[T] {\n   some(@T);\n   none;"}, {"sha": "c387ef1928dc119d80799bbd4ed8cf8bdc41f19c", "filename": "src/test/run-pass/generic-tup.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fgeneric-tup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fgeneric-tup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgeneric-tup.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n \n fn get_third[T](&tup(T,T,T) t) -> T {\n   ret t._2;"}, {"sha": "6d7250614fce506cfc81ce2647353b136c3605b1", "filename": "src/test/run-pass/iter-ret.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fiter-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fiter-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fiter-ret.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n iter x() -> int {\n }\n "}, {"sha": "adc14434e18da3e919f2dd51e568c5a7a5bc3256", "filename": "src/test/run-pass/lazychan.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flazychan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flazychan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flazychan.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n impure fn main() {"}, {"sha": "5a4ead33365edb8b6314749b762757f529e0b2e9", "filename": "src/test/run-pass/leak-tag-copy.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fleak-tag-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fleak-tag-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fleak-tag-copy.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n tag t {\n   a;\n   b(@int);"}, {"sha": "3bd5a03ac80653553c0b3c5ea157d0d91790d689", "filename": "src/test/run-pass/lib-bitv.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-bitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-bitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-bitv.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n use std;\n import std._vec;\n import std.bitv;"}, {"sha": "b51ff241d2f5b118120f0aa159c195e085000f7c", "filename": "src/test/run-pass/lib-deque.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-deque.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "9fd127ef6fbf8efdedd95318ee75f159fb818a75", "filename": "src/test/run-pass/lib-int.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-int.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-int.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-int.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n use std;\n \n import std._int;"}, {"sha": "aab6713f7ef9a08619edd2afdb9928179b75623d", "filename": "src/test/run-pass/lib-io.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-io.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-io.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-io.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "319c8a9b684157fd116217e989c89e33a24557aa", "filename": "src/test/run-pass/lib-map.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-map.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "62d94dc463050340bb5fb7c5ffdd028e54949f6e", "filename": "src/test/run-pass/lib-rand.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-rand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-rand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-rand.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "82c497c8506ffc0a52fa5db4a1b89ecc082e1249", "filename": "src/test/run-pass/lib-sha1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-sha1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-sha1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-sha1.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "f6076e5858552bf73adbbf5dc56881510c905960", "filename": "src/test/run-pass/lib-sort.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-sort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-sort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-sort.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n use std;\n \n fn check_sort(vec[int] v1, vec[int] v2) {"}, {"sha": "bd5cb036a699fb4fd1a74f442321cbc5c205efe3", "filename": "src/test/run-pass/lib-str-buf.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-str-buf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-str-buf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-str-buf.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "52f0f51b0870e2d9433cdc06776bea6f0db54e25", "filename": "src/test/run-pass/lib-str.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-str.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n use std;\n import std._str;\n "}, {"sha": "06e9182c7e633ad3ef031017402fe86cef226dc1", "filename": "src/test/run-pass/lib-task.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-task.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-task.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-task.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n use std;\n import std._task;\n "}, {"sha": "98d3755016bc79b14fd821211d2df7c247c72070", "filename": "src/test/run-pass/lib-uint.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-uint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-uint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-uint.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "b8da0777dc3249909d211328191593405a66c761", "filename": "src/test/run-pass/lib-vec-str-conversions.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-vec-str-conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-vec-str-conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-vec-str-conversions.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "6fde06ad33d72ab19cbfdcdc8b26927415de5377", "filename": "src/test/run-pass/lib-vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Flib-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flib-vec.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n use std;\n \n fn test_init_elt() {"}, {"sha": "8fe47133f69d9c3db9734a7a0192fbb863da08c4", "filename": "src/test/run-pass/many.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fmany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fmany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmany.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n // -*- rust -*-\n \n impure fn sub(chan[int] parent, int id) {"}, {"sha": "b859ae7c4641f2889c2a428147ee3cdecf3813f6", "filename": "src/test/run-pass/maybe-mutable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fmaybe-mutable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fmaybe-mutable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmaybe-mutable.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n // -*- rust -*-\n \n fn len(vec[mutable? int] v) -> uint {"}, {"sha": "050565921b84ca3e1be079eeea1e9c832a44a8cb", "filename": "src/test/run-pass/mlist-cycle.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fmlist-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fmlist-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmlist-cycle.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "6fc45d7c65bf713641ddc2dc8da3869fe26b63c4", "filename": "src/test/run-pass/mlist.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fmlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fmlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmlist.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n // -*- rust -*-\n \n tag mlist {"}, {"sha": "ad08db6ba9159aa4700b72828ef264a3fa7962fc", "filename": "src/test/run-pass/multi.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fmulti.rc", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fmulti.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmulti.rc?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n mod multi = \"multi-src\" {\n \n   mod foo; // implicitly = \"foo.rs\""}, {"sha": "367afaf861759c9fdb4eabffc99472fca793f950", "filename": "src/test/run-pass/mutable-alias-vec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fmutable-alias-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fmutable-alias-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmutable-alias-vec.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "17925c798b5c8290abce586905e2af7fb2b19497", "filename": "src/test/run-pass/native-mod.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fnative-mod.rc", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fnative-mod.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative-mod.rc?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n native mod libc = target_libc {"}, {"sha": "8955609643bb2989b43f46fb2f4112afcf5a54d6", "filename": "src/test/run-pass/native.rc", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fnative.rc", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fnative.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnative.rc?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n native \"rust\" mod rustrt {"}, {"sha": "6e0dac37b8fe62f3708323192c7430a6a5dae552", "filename": "src/test/run-pass/obj-as.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fobj-as.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fobj-as.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fobj-as.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,6 @@\n+// xfail-boot\n+// xfail-boot\n+// xfail-stage0\n \n obj big() {\n   fn one() -> int { ret 1; }"}, {"sha": "389675da23201dd5ed530969c52f690263d91825", "filename": "src/test/run-pass/obj-dtor.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fobj-dtor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fobj-dtor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fobj-dtor.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n obj worker(chan[int] c) {\n   drop {\n     log \"in dtor\";"}, {"sha": "c2bea01025e429e0a0889802032ffb8e9f49de7e", "filename": "src/test/run-pass/pred.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fpred.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fpred.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpred.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n fn f(int a, int b) : lt(a,b) {"}, {"sha": "42d6229d07c5acd4bec4761c51de79aec36e5fbb", "filename": "src/test/run-pass/preempt.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fpreempt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fpreempt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fpreempt.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // This checks that preemption works.\n \n impure fn starve_main(chan[int] alive) {"}, {"sha": "170781168352c3ad311cf1baaa323578f4ab500e", "filename": "src/test/run-pass/rt-circular-buffer.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Frt-circular-buffer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Frt-circular-buffer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frt-circular-buffer.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n // Regression tests for circular_buffer when using a unit"}, {"sha": "36db2b4667eed1e19683742cd92bddeac11fdf30", "filename": "src/test/run-pass/seq-compare.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fseq-compare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fseq-compare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fseq-compare.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n fn main() {\n   check (\"hello\" < \"hellr\");\n   check (\"hello \" > \"hello\");"}, {"sha": "5e0a9c207ddf3143931bc1f313a7b8480441dd64", "filename": "src/test/run-pass/size-and-align.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fsize-and-align.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fsize-and-align.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsize-and-align.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n tag clam[T] {"}, {"sha": "ea069e31fd019474a7d2a0e67220d2ee37449959", "filename": "src/test/run-pass/spawn-fn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fspawn-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fspawn-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn-fn.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n fn x(str s, int n) {"}, {"sha": "833e246aa301a6517c316365b95c0ba83e55ad30", "filename": "src/test/run-pass/spawn-module-qualified.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fspawn-module-qualified.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fspawn-module-qualified.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn-module-qualified.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n fn main() {\n   auto x = spawn m.child(10);\n   join x;"}, {"sha": "5dd758baf1c5041332a6a3491d502ce3ef848fb4", "filename": "src/test/run-pass/spawn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fspawn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fspawn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fspawn.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n fn main() {"}, {"sha": "724a0893c17f3ba73e2178db40e4a24d69c9cdd7", "filename": "src/test/run-pass/str-append.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fstr-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fstr-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstr-append.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "db0d8a1958314a17e0f4ef5a6ff5db956a02d222", "filename": "src/test/run-pass/syntax-extension-fmt.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n use std;\n import std._str;\n "}, {"sha": "f48a1b814a0848eba4cb14463eaa1ddbe6eb9686", "filename": "src/test/run-pass/syntax-extension-shell.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fsyntax-extension-shell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fsyntax-extension-shell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-shell.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n fn main() {\n   auto s = #shell { uname -a };\n   log s;"}, {"sha": "9030340c19b31df559207694333448ae65c693f0", "filename": "src/test/run-pass/task-comm-0.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-0.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n impure fn main() -> () {\n     test05();\n }"}, {"sha": "61613a20267d6f0bd9ac4e1467a8befe504f434d", "filename": "src/test/run-pass/task-comm-1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-1.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n fn main() -> () {\n    test00(); \n }"}, {"sha": "6932f7e0ba40469da744293b44faebd4bd88e2e1", "filename": "src/test/run-pass/task-comm-10.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-10.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n impure fn start(chan[chan[str]] c) {\n     let port[str] p = port();\n     c <| chan(p);"}, {"sha": "6de447ae934e76d8025a7765bcf724f82625d614", "filename": "src/test/run-pass/task-comm-11.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-11.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n impure fn start(chan[chan[str]] c) {\n     let port[str] p = port();\n     c <| chan(p);"}, {"sha": "5d89b5d3c471aa29222eefca1903cafeb52c9115", "filename": "src/test/run-pass/task-comm-12.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-12.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n use std;\n import std._task;\n "}, {"sha": "2fb32f95332a6cb2d7b15111ee4d9a197d68ea6f", "filename": "src/test/run-pass/task-comm-13-thread.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-13-thread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-13-thread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-13-thread.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n use std;\n import std._task;\n "}, {"sha": "719edbb7eabf4b16a62258a3f96a298b8f2b60a5", "filename": "src/test/run-pass/task-comm-13.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-13.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n use std;\n import std._task;\n "}, {"sha": "1eee1a0927a9153ddd0983c96135fbca38005f8b", "filename": "src/test/run-pass/task-comm-15.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-15.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n impure fn start(chan[int] c, int n) {\n     let int i = n;\n "}, {"sha": "a6fc911587ad68a29133106e1e9addddf623746c", "filename": "src/test/run-pass/task-comm-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-2.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n fn main() -> () {    \n     log \"===== SPAWNING and JOINING TASKS =====\";\n     test00(false);"}, {"sha": "b172a099712a7731a0ac3ebf9567b1e669b950ac", "filename": "src/test/run-pass/task-comm-3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-3.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n impure fn main() -> () {\n    log \"===== WITHOUT THREADS =====\";\n    test00(false);"}, {"sha": "599d2d832a668563d1b13afadf304a1afac21325", "filename": "src/test/run-pass/task-comm-7.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-7.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n impure fn main() -> () {\n    test00();\n }"}, {"sha": "1bc02660acd1bee6691c5d7749d91b2235e27947", "filename": "src/test/run-pass/task-comm-8.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-8.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n impure fn main() -> () {\n    test00();\n }"}, {"sha": "cf3758533940e3a9366804e770e909e8f81a7e02", "filename": "src/test/run-pass/task-comm-9.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-9.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n impure fn main() -> () {\n    test00();\n }"}, {"sha": "a341d939769011ecd2bf5f90592d9fb28839de97", "filename": "src/test/run-pass/task-comm-chan-nil.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-chan-nil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm-chan-nil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm-chan-nil.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n // -*- rust -*-\n \n // rustboot can't transmit nils across channels because they don't have"}, {"sha": "04751e374782e25147623266ad49a1196a3771ac", "filename": "src/test/run-pass/task-comm.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-comm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-comm.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n \n impure fn main() -> () {\n     test00(true);"}, {"sha": "6a9f272fe1c7937800f5370064152456c2580cf5", "filename": "src/test/run-pass/task-killjoin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-killjoin.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // Create a task that is supervised by another task,\n // join the supervised task from the supervising task,\n // then fail the supervised task. The supervised task"}, {"sha": "567f63a9561a7460a74243fc22a82ce0168610e9", "filename": "src/test/run-pass/task-life-0.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-life-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftask-life-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftask-life-0.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,5 @@\n+// xfail-boot\n+// xfail-stage0\n fn main() -> () {\n     spawn child(\"Hello\");\n }"}, {"sha": "3b6d8c0b39da7a375b32b89fe492d4031b4eadb8", "filename": "src/test/run-pass/threads.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fthreads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fthreads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fthreads.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n fn main() {"}, {"sha": "67b8b57871ff69d64e61b4215ebbc3a8f0823d5d", "filename": "src/test/run-pass/type-sizes.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftype-sizes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftype-sizes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftype-sizes.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n \n import size_of = std.sys.rustrt.size_of;\n "}, {"sha": "73399525f9c8c038ec60d0acdbf78c1c2ceef6e5", "filename": "src/test/run-pass/typestate-cfg-nesting.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftypestate-cfg-nesting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Ftypestate-cfg-nesting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypestate-cfg-nesting.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n \n fn f() {\n "}, {"sha": "5149593115e6f62aca5df51e88fc5831de1e9d3d", "filename": "src/test/run-pass/use-import-export.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fuse-import-export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fuse-import-export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse-import-export.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n \n mod foo {\n   export x;"}, {"sha": "a71957f20e4f7c85591ced7e1db9056753928eab", "filename": "src/test/run-pass/use.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fuse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fuse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuse.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n use std;\n use libc();\n use zed(name = \"std\");"}, {"sha": "b8a8144c227949acd437939c4e10db2d0029a4f4", "filename": "src/test/run-pass/user.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fuser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fuser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fuser.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n use std (name = \"std\","}, {"sha": "68f5fa9f680032ad367f2f696add750c9df21fd2", "filename": "src/test/run-pass/utf8.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Futf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Futf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Futf8.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n fn main() {\n   let char yen = '\u00a5';         // 0xa5\n   let char c_cedilla = '\u00e7';   // 0xe7"}, {"sha": "08671093edfb75b1b905b37d40915e76c8d16b26", "filename": "src/test/run-pass/utf8_chars.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Futf8_chars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Futf8_chars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Futf8_chars.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n use std;\n import std._str;\n import std._vec;"}, {"sha": "83d58d73978f03f20114422e2d37c015ea379691", "filename": "src/test/run-pass/vec-alloc-append.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fvec-alloc-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fvec-alloc-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-alloc-append.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // This is a test for issue #109.\n \n use std;"}, {"sha": "0f9f56dd9541b834793b699628ed110147c4cd2f", "filename": "src/test/run-pass/vec-append.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fvec-append.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fvec-append.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-append.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n use std;"}, {"sha": "5517414230899055bab3cbc6accc81013175854a", "filename": "src/test/run-pass/vec-slice.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fvec-slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fvec-slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-slice.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,6 @@\n+// xfail-boot\n+// xfail-boot\n+// xfail-stage0\n fn main() {\n   let vec[int] v = vec(1,2,3,4,5);\n   auto v2 = v.(1,2);"}, {"sha": "e48ab2fc246a83bcbda690d561a7096269d08758", "filename": "src/test/run-pass/while-and-do-while.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fwhile-and-do-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fwhile-and-do-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fwhile-and-do-while.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-boot\n fn main() {\n   let int x = 10;\n   let int y = 0;"}, {"sha": "40efebc81bccbc89835e9f990f119f8679de9c92", "filename": "src/test/run-pass/while-with-break.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fwhile-with-break.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fwhile-with-break.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fwhile-with-break.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n fn main() {"}, {"sha": "7b931afb73e9d411166c5cf38ad709b9d8aab7b8", "filename": "src/test/run-pass/yield.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fyield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fyield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fyield.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n fn main() {"}, {"sha": "f1a543416d00a7409e6bded487d864a094b01265", "filename": "src/test/run-pass/yield2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fyield2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49d9d5688e12a7874cd6e06c0122577e6b7d1167/src%2Ftest%2Frun-pass%2Fyield2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fyield2.rs?ref=49d9d5688e12a7874cd6e06c0122577e6b7d1167", "patch": "@@ -1,3 +1,4 @@\n+// xfail-stage0\n // -*- rust -*-\n \n fn main() {"}]}