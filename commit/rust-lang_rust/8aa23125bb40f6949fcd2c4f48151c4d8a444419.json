{"sha": "8aa23125bb40f6949fcd2c4f48151c4d8a444419", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhYTIzMTI1YmI0MGY2OTQ5ZmNkMmM0ZjQ4MTUxYzRkOGE0NDQ0MTk=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-29T19:01:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-29T19:01:38Z"}, "message": "Rollup merge of #65832 - tlively:emscripten-exception-handling, r=alexcrichton\n\nRe-enable Emscripten's exception handling support\n\nPasses LLVM codegen and Emscripten link-time flags for exception\nhandling if and only if the panic strategy is `unwind`. Sets the\ndefault panic strategy for Emscripten targets to `unwind`. Re-enables\ntests that depend on unwinding support for Emscripten, including\n`should_panic` tests.\n\nr? @alexcrichton", "tree": {"sha": "9078d6ef80abe9bd3f999b901bb8da7d0d8fc620", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9078d6ef80abe9bd3f999b901bb8da7d0d8fc620"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8aa23125bb40f6949fcd2c4f48151c4d8a444419", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJduIyTCRBK7hj4Ov3rIwAAdHIIAD4D2zJw6ROkE+P5O+h6ycmp\n37K0HfOPmDPMC4+nmRiq/mAizZvfpmlF/ceXd3xMvXUIgSXrN/mcdAlEPvIrWffd\nzivBAPcYaPADx8bAzdqaTHoRt8sqyyP9FDTIP+hnqRyNLjkE9S+YejdC2TflYPjk\nK/qel2Xp6OzFwRrpOp15lgShfI94L0C6+eQMUpnyjNtGqkNrSK902pFthVYeWM2X\nEqBlxMDc1886QjyOhKL8LexGIUfr/tjtFlmvW8gfLtVptRESUPVIGp0dCtCWh3uV\nz4ZSsf7QXvzm2OXy7tyPDDxTp1uNZRKXCa76m8MayutZK/5h8fqb8L+hfKZUERg=\n=HyR8\n-----END PGP SIGNATURE-----\n", "payload": "tree 9078d6ef80abe9bd3f999b901bb8da7d0d8fc620\nparent c4960c26027b6556aa5a63bc4a2c5697cf904e75\nparent 92c049be583a559430f17f3364c616fc92c059a1\nauthor Tyler Mandry <tmandry@gmail.com> 1572375698 -0700\ncommitter GitHub <noreply@github.com> 1572375698 -0700\n\nRollup merge of #65832 - tlively:emscripten-exception-handling, r=alexcrichton\n\nRe-enable Emscripten's exception handling support\n\nPasses LLVM codegen and Emscripten link-time flags for exception\nhandling if and only if the panic strategy is `unwind`. Sets the\ndefault panic strategy for Emscripten targets to `unwind`. Re-enables\ntests that depend on unwinding support for Emscripten, including\n`should_panic` tests.\n\nr? @alexcrichton\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8aa23125bb40f6949fcd2c4f48151c4d8a444419", "html_url": "https://github.com/rust-lang/rust/commit/8aa23125bb40f6949fcd2c4f48151c4d8a444419", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8aa23125bb40f6949fcd2c4f48151c4d8a444419/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c4960c26027b6556aa5a63bc4a2c5697cf904e75", "url": "https://api.github.com/repos/rust-lang/rust/commits/c4960c26027b6556aa5a63bc4a2c5697cf904e75", "html_url": "https://github.com/rust-lang/rust/commit/c4960c26027b6556aa5a63bc4a2c5697cf904e75"}, {"sha": "92c049be583a559430f17f3364c616fc92c059a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/92c049be583a559430f17f3364c616fc92c059a1", "html_url": "https://github.com/rust-lang/rust/commit/92c049be583a559430f17f3364c616fc92c059a1"}], "stats": {"total": 131, "additions": 63, "deletions": 68}, "files": [{"sha": "e76604e45bdeb3c60570e88e633a7d5039490a1f", "filename": "src/bootstrap/native.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Fbootstrap%2Fnative.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Fbootstrap%2Fnative.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fnative.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -534,6 +534,10 @@ impl Step for TestHelpers {\n         builder.info(\"Building test helpers\");\n         t!(fs::create_dir_all(&dst));\n         let mut cfg = cc::Build::new();\n+        // FIXME: Workaround for https://github.com/emscripten-core/emscripten/issues/9013\n+        if target.contains(\"emscripten\") {\n+            cfg.pic(false);\n+        }\n \n         // We may have found various cross-compilers a little differently due to our\n         // extra configuration, so inform gcc of these compilers. Note, though, that"}, {"sha": "85e0b6d465ab06d7d0bd0f503e8c6fa847c2b6cd", "filename": "src/librustc_codegen_llvm/llvm_util.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm_util.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -3,7 +3,7 @@ use crate::llvm;\n use syntax_pos::symbol::Symbol;\n use rustc::session::Session;\n use rustc::session::config::PrintRequest;\n-use rustc_target::spec::MergeFunctions;\n+use rustc_target::spec::{MergeFunctions, PanicStrategy};\n use libc::c_int;\n use std::ffi::CString;\n use syntax::feature_gate::UnstableFeatures;\n@@ -73,6 +73,11 @@ unsafe fn configure_llvm(sess: &Session) {\n             }\n         }\n \n+        if sess.target.target.target_os == \"emscripten\" &&\n+            sess.panic_strategy() == PanicStrategy::Unwind {\n+            add(\"-enable-emscripten-cxx-exceptions\");\n+        }\n+\n         // HACK(eddyb) LLVM inserts `llvm.assume` calls to preserve align attributes\n         // during inlining. Unfortunately these may block other optimizations.\n         add(\"-preserve-alignment-assumptions-during-inlining=false\");"}, {"sha": "85a90459f5ee473955c3f6a7625afe14ca8dc23f", "filename": "src/librustc_codegen_ssa/back/symbol_export.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Fback%2Fsymbol_export.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -364,8 +364,9 @@ fn symbol_export_level(tcx: TyCtxt<'_>, sym_def_id: DefId) -> SymbolExportLevel\n         codegen_fn_attrs.flags.contains(CodegenFnAttrFlags::RUSTC_STD_INTERNAL_SYMBOL);\n \n     if is_extern && !std_internal {\n-        // Emscripten cannot export statics, so reduce their export level here\n-        if tcx.sess.target.target.options.is_like_emscripten {\n+        let target = &tcx.sess.target.target.llvm_target;\n+        // WebAssembly cannot export data symbols, so reduce their export level\n+        if target.contains(\"wasm32\") || target.contains(\"emscripten\") {\n             if let Some(Node::Item(&hir::Item {\n                 kind: hir::ItemKind::Static(..),\n                 .."}, {"sha": "906c704c804f36ff7df85f30284c296934e4c5c4", "filename": "src/librustc_target/spec/wasm32_unknown_emscripten.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_emscripten.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_emscripten.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fwasm32_unknown_emscripten.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -9,12 +9,8 @@ pub fn target() -> Result<Target, String> {\n                                \"-s\".to_string(),\n                                \"ASSERTIONS=1\".to_string(),\n                                \"-s\".to_string(),\n-                               \"DISABLE_EXCEPTION_CATCHING=1\".to_string(),\n-                               \"-s\".to_string(),\n                                \"ABORTING_MALLOC=0\".to_string(),\n-                               // FIXME(tlively): Enable this linker option once libc type errors\n-                               // are resolved. See https://github.com/rust-lang/libc/pull/1478.\n-                               // \"-Wl,--fatal-warnings\".to_string(),\n+                               \"-Wl,--fatal-warnings\".to_string(),\n                                ]);\n \n     let opts = TargetOptions {\n@@ -24,10 +20,7 @@ pub fn target() -> Result<Target, String> {\n         linker: None,\n         linker_is_gnu: true,\n         is_like_emscripten: true,\n-        // FIXME(tlively): Emscripten supports unwinding, but we would have to pass\n-        // -enable-emscripten-cxx-exceptions to LLVM at codegen time and merge\n-        // https://reviews.llvm.org/rG5c3cdef84b82464756bb571c13c31cf7773860c3to use it.\n-        panic_strategy: PanicStrategy::Abort,\n+        panic_strategy: PanicStrategy::Unwind,\n         post_link_args,\n         target_family: Some(\"unix\".to_string()),\n         .. wasm32_base::options()"}, {"sha": "341a2e18db5fcfd50f449851647a41f74512c12f", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -441,9 +441,9 @@ pub fn run_test(\n ) {\n     let TestDescAndFn { desc, testfn } = test;\n \n-    // FIXME: Re-enable emscripten once it can catch panics again\n+    // Emscripten can catch panics but other wasm targets cannot\n     let ignore_because_no_process_support = desc.should_panic != ShouldPanic::No\n-        && (cfg!(target_arch = \"wasm32\") || cfg!(target_os = \"emscripten\"));\n+        && cfg!(target_arch = \"wasm32\") && !cfg!(target_os = \"emscripten\");\n \n     if force_ignore || desc.ignore || ignore_because_no_process_support {\n         let message = CompletedTest::new(desc, TrIgnored, None, Vec::new());"}, {"sha": "971f4e3e12ea81eb2cb411884a9b3b605b9b3bcf", "filename": "src/test/codegen/c-variadic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fcodegen%2Fc-variadic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fcodegen%2Fc-variadic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fc-variadic.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,4 +1,4 @@\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // compile-flags: -C no-prepopulate-passes\n // ignore-tidy-linelength\n "}, {"sha": "959929fbafbf10424f937f4b3b0c2eb68eb8832a", "filename": "src/test/codegen/drop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fcodegen%2Fdrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fcodegen%2Fdrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fdrop.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,4 +1,4 @@\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // compile-flags: -C no-prepopulate-passes\n \n #![crate_type = \"lib\"]"}, {"sha": "9f07488a9a8a6a3be34c9fc8e0f8706d98a7d48c", "filename": "src/test/codegen/personality_lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fcodegen%2Fpersonality_lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fcodegen%2Fpersonality_lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fpersonality_lifetimes.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // ignore-msvc\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n // compile-flags: -O -C no-prepopulate-passes\n "}, {"sha": "e5a2936b92497aa6cf26a8f126079f12c40e766f", "filename": "src/test/codegen/unwind-extern-exports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fcodegen%2Funwind-extern-exports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fcodegen%2Funwind-extern-exports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Funwind-extern-exports.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -C opt-level=0\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![crate_type = \"lib\"]\n #![feature(unwind_attributes)]"}, {"sha": "8403e1e9da9fa381f0b86be85e8b8647f765a8ae", "filename": "src/test/codegen/unwind-extern-imports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fcodegen%2Funwind-extern-imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fcodegen%2Funwind-extern-imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Funwind-extern-imports.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -C no-prepopulate-passes\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![crate_type = \"lib\"]\n #![feature(unwind_attributes)]"}, {"sha": "8c35f6ca0000dd8f6f57809bfd0f5993544723ab", "filename": "src/test/incremental/change_crate_dep_kind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fincremental%2Fchange_crate_dep_kind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fincremental%2Fchange_crate_dep_kind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fchange_crate_dep_kind.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,7 +1,7 @@\n // Test that we detect changes to the `dep_kind` query. If the change is not\n // detected then -Zincremental-verify-ich will trigger an assertion.\n \n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // revisions:cfail1 cfail2\n // compile-flags: -Z query-dep-graph -Cpanic=unwind\n // build-pass (FIXME(62277): could be check-pass?)"}, {"sha": "8dc6b73edf6d473ecd804cdd314597fbdb86dcd9", "filename": "src/test/mir-opt/box_expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fbox_expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fbox_expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fbox_expr.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,4 +1,4 @@\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![feature(box_syntax)]\n "}, {"sha": "109304d6d22ccdd4cb9368c12bbea673702e2f76", "filename": "src/test/mir-opt/generator-storage-dead-unwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fgenerator-storage-dead-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fgenerator-storage-dead-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fgenerator-storage-dead-unwind.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,4 +1,4 @@\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n // Test that we generate StorageDead on unwind paths for generators.\n //"}, {"sha": "e73390f52b5d552fc3287e923a0f52ac9a117c52", "filename": "src/test/mir-opt/issue-41110.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fissue-41110.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fissue-41110.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-41110.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,4 +1,4 @@\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n // check that we don't emit multiple drop flags when they are not needed.\n "}, {"sha": "a3b517e9bca87bfa0cf295af84a7496c3ad5fe65", "filename": "src/test/mir-opt/issue-62289.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fissue-62289.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fissue-62289.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissue-62289.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,7 +1,7 @@\n // check that we don't forget to drop the Box if we early return before\n // initializing it\n // ignore-tidy-linelength\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![feature(box_syntax)]\n "}, {"sha": "782bc31186ca5fb8eb8a4931bc077d8579e4d351", "filename": "src/test/mir-opt/no-spurious-drop-after-call.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fno-spurious-drop-after-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fno-spurious-drop-after-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fno-spurious-drop-after-call.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,4 +1,4 @@\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n // Test that after the call to `std::mem::drop` we do not generate a\n // MIR drop of the argument. (We used to have a `DROP(_2)` in the code"}, {"sha": "da73cc96348f059e4c15e29ce839204b2b824ed4", "filename": "src/test/mir-opt/packed-struct-drop-aligned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fpacked-struct-drop-aligned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fpacked-struct-drop-aligned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fpacked-struct-drop-aligned.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,4 +1,4 @@\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n fn main() {\n     let mut x = Packed(Aligned(Droppy(0)));"}, {"sha": "965897ad541e78f362328754b06da3d47e0c6c4d", "filename": "src/test/mir-opt/remove_fake_borrows.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fremove_fake_borrows.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,6 +1,6 @@\n // Test that the fake borrows for matches are removed after borrow checking.\n \n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n fn match_guard(x: Option<&&i32>, c: bool) -> i32 {\n     match x {"}, {"sha": "db36a1fab5f2104f48e2dc3a3dedea1532753d86", "filename": "src/test/mir-opt/retag.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fretag.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fmir-opt%2Fretag.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fretag.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,4 +1,4 @@\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // ignore-tidy-linelength\n // compile-flags: -Z mir-emit-retag -Z mir-opt-level=0 -Z span_free_formats\n "}, {"sha": "5d6fa416b9895e7e3aa2a1890a64f3c9846589cb", "filename": "src/test/ui/abi/statics/static-mut-foreign.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fabi%2Fstatics%2Fstatic-mut-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fabi%2Fstatics%2Fstatic-mut-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fabi%2Fstatics%2Fstatic-mut-foreign.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -5,10 +5,6 @@\n \n // ignore-wasm32-bare no libc to test ffi with\n \n-// FIXME: This will work on emscripten once libc is updated to include\n-// rust-lang/libc/#1478\n-// ignore-emscripten libc type mismatch\n-\n #![feature(rustc_private)]\n \n extern crate libc;"}, {"sha": "ea4a9e5afa50157279c76ac8d737e16e329f2ab7", "filename": "src/test/ui/binding/fn-arg-incomplete-pattern-drop-order.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fbinding%2Ffn-arg-incomplete-pattern-drop-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fbinding%2Ffn-arg-incomplete-pattern-drop-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbinding%2Ffn-arg-incomplete-pattern-drop-order.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -2,7 +2,7 @@\n // Check that partially moved from function parameters are dropped after the\n // named bindings that move from them.\n \n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n use std::{panic, cell::RefCell};\n "}, {"sha": "339bcfa1060a48e6a3c560176a987535317c2230", "filename": "src/test/ui/builtin-clone-unwind.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fbuiltin-clone-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fbuiltin-clone-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbuiltin-clone-unwind.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -2,7 +2,7 @@\n \n #![allow(unused_variables)]\n #![allow(unused_imports)]\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n // Test that builtin implementations of `Clone` cleanup everything\n // in case of unwinding."}, {"sha": "f181991713b2cd3fb4add9cec8f6f0db83a35bfb", "filename": "src/test/ui/catch-unwind-bang.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fcatch-unwind-bang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fcatch-unwind-bang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcatch-unwind-bang.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n fn worker() -> ! {\n     panic!()"}, {"sha": "91063edf0f6c4badf45a759ad86bcb9722290287", "filename": "src/test/ui/drop/dynamic-drop-async.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fdrop%2Fdynamic-drop-async.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fdrop%2Fdynamic-drop-async.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdrop%2Fdynamic-drop-async.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -5,7 +5,7 @@\n \n // run-pass\n // edition:2018\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![feature(slice_patterns)]\n #![allow(unused)]"}, {"sha": "29dcbfe9609a0bf59fe36bea428144cc9c9e8fbe", "filename": "src/test/ui/drop/dynamic-drop.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fdrop%2Fdynamic-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fdrop%2Fdynamic-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdrop%2Fdynamic-drop.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -2,7 +2,7 @@\n #![allow(unused_assignments)]\n #![allow(unused_variables)]\n \n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![feature(generators, generator_trait, untagged_unions)]\n #![feature(slice_patterns)]"}, {"sha": "20c443b63d17532f459ee214223fedcbefe0e98a", "filename": "src/test/ui/feature-gates/feature-gate-unwind-attributes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unwind-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unwind-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-unwind-attributes.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,4 +1,4 @@\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // compile-flags: -C no-prepopulate-passes -Cpasses=name-anon-globals\n \n #![crate_type = \"lib\"]"}, {"sha": "f88687858fd1139b92a5b9a517b384cea2b6239a", "filename": "src/test/ui/generator/panic-drops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fgenerator%2Fpanic-drops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fgenerator%2Fpanic-drops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fpanic-drops.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n \n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![feature(generators, generator_trait)]\n "}, {"sha": "5f6778674dce13a5e9fd32e8ff61ff3c2bbef2bb", "filename": "src/test/ui/generator/panic-safe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fgenerator%2Fpanic-safe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fgenerator%2Fpanic-safe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fpanic-safe.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n \n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![feature(generators, generator_trait)]\n "}, {"sha": "71a68ff684af31c6656fb61cc9bd20ecafa0e7fa", "filename": "src/test/ui/generator/resume-after-return.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fgenerator%2Fresume-after-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fgenerator%2Fresume-after-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerator%2Fresume-after-return.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n \n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![feature(generators, generator_trait)]\n "}, {"sha": "0d95d168b3db3fdb388dfaa7909e8f570bf8ebc8", "filename": "src/test/ui/issues/issue-14875.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fissues%2Fissue-14875.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fissues%2Fissue-14875.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-14875.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n // Check that values are not leaked when a dtor panics (#14875)\n "}, {"sha": "8ede8143ea6572a1b718fb0298ccde7248f6e1b9", "filename": "src/test/ui/issues/issue-29948.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fissues%2Fissue-29948.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fissues%2Fissue-29948.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-29948.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n use std::panic;\n "}, {"sha": "47c3ab59aa2eb9c2eba273f77eb142336a9cbc48", "filename": "src/test/ui/issues/issue-43853.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fissues%2Fissue-43853.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fissues%2Fissue-43853.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-43853.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n use std::panic;\n "}, {"sha": "cca0995d4ca10bad7d3f33020e88de160fdf8b5a", "filename": "src/test/ui/issues/issue-46519.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fissues%2Fissue-46519.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fissues%2Fissue-46519.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-46519.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n // compile-flags:--test -O\n \n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #[test]\n #[should_panic(expected = \"creating inhabited type\")]"}, {"sha": "d6612035750836e49accc865a8f2d05dcaeb35b3", "filename": "src/test/ui/iterators/iter-count-overflow-debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fiterators%2Fiter-count-overflow-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fiterators%2Fiter-count-overflow-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Fiter-count-overflow-debug.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n // only-32bit too impatient for 2\u2076\u2074 items\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // compile-flags: -C debug_assertions=yes -C opt-level=3\n \n use std::panic;"}, {"sha": "f1eded31702c4449d4ebf383127d13b251d84b81", "filename": "src/test/ui/iterators/iter-position-overflow-debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fiterators%2Fiter-position-overflow-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fiterators%2Fiter-position-overflow-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Fiter-position-overflow-debug.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n // only-32bit too impatient for 2\u2076\u2074 items\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // compile-flags: -C debug_assertions=yes -C opt-level=3\n \n use std::panic;"}, {"sha": "5d67c7cbb42565e00898ee95cb7d5b155a201c7f", "filename": "src/test/ui/iterators/iter-step-overflow-debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fiterators%2Fiter-step-overflow-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fiterators%2Fiter-step-overflow-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Fiter-step-overflow-debug.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // compile-flags: -C debug_assertions=yes\n \n use std::panic;"}, {"sha": "ee4ab4d24c6ab22da3d6c2579bf01308c144c0cf", "filename": "src/test/ui/iterators/iter-sum-overflow-debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fiterators%2Fiter-sum-overflow-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fiterators%2Fiter-sum-overflow-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Fiter-sum-overflow-debug.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // compile-flags: -C debug_assertions=yes\n \n use std::panic;"}, {"sha": "429f8e0bc9648a61aeecc631e91202fce4770891", "filename": "src/test/ui/iterators/iter-sum-overflow-overflow-checks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fiterators%2Fiter-sum-overflow-overflow-checks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fiterators%2Fiter-sum-overflow-overflow-checks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fiterators%2Fiter-sum-overflow-overflow-checks.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // compile-flags: -C overflow-checks\n \n use std::panic;"}, {"sha": "32cf59294e7603e7fc4d158c4be511a05f09bf24", "filename": "src/test/ui/macros/macro-comma-behavior-rpass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior-rpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior-rpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-comma-behavior-rpass.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -13,7 +13,7 @@\n // compile-flags: --test -C debug_assertions=yes\n // revisions: std core\n \n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![cfg_attr(core, no_std)]\n "}, {"sha": "6f13d5612ce51b93a333eaf4dfbcb558e68f5b17", "filename": "src/test/ui/mir/mir_calls_to_shims.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fmir%2Fmir_calls_to_shims.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fmir%2Fmir_calls_to_shims.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir_calls_to_shims.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![feature(fn_traits)]\n #![feature(never_type)]"}, {"sha": "2949437b1e4b659db6463f812ae0239c8c6fdb5b", "filename": "src/test/ui/mir/mir_drop_order.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fmir%2Fmir_drop_order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fmir%2Fmir_drop_order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir_drop_order.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n use std::cell::RefCell;\n use std::panic;"}, {"sha": "e0c30160b9e94be9ff2ceb286ad6d04151e26029", "filename": "src/test/ui/never_type/panic-uninitialized-zeroed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fnever_type%2Fpanic-uninitialized-zeroed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fnever_type%2Fpanic-uninitialized-zeroed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnever_type%2Fpanic-uninitialized-zeroed.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // This test checks that instantiating an uninhabited type via `mem::{uninitialized,zeroed}` results\n // in a runtime panic.\n "}, {"sha": "e9927304f23f8c380a0f1c9ea5fa0d76a79e2536", "filename": "src/test/ui/numbers-arithmetic/next-power-of-two-overflow-debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Fnext-power-of-two-overflow-debug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Fnext-power-of-two-overflow-debug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnumbers-arithmetic%2Fnext-power-of-two-overflow-debug.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n // compile-flags: -C debug_assertions=yes\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // ignore-emscripten dies with an LLVM error\n \n use std::panic;"}, {"sha": "5d72771c2dcff1bdff532ec1214b0acb67daa901", "filename": "src/test/ui/panic-runtime/transitive-link-a-bunch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fpanic-runtime%2Ftransitive-link-a-bunch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fpanic-runtime%2Ftransitive-link-a-bunch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-runtime%2Ftransitive-link-a-bunch.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -4,7 +4,7 @@\n // aux-build:wants-panic-runtime-abort.rs\n // aux-build:panic-runtime-lang-items.rs\n // error-pattern: is not compiled with this crate's panic strategy `unwind`\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![no_std]\n #![no_main]"}, {"sha": "4c25c09d6438f3146ca04a355be849481707add5", "filename": "src/test/ui/panic-runtime/want-unwind-got-abort.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fpanic-runtime%2Fwant-unwind-got-abort.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fpanic-runtime%2Fwant-unwind-got-abort.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-runtime%2Fwant-unwind-got-abort.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,7 +1,7 @@\n // error-pattern:is incompatible with this crate's strategy of `unwind`\n // aux-build:panic-runtime-abort.rs\n // aux-build:panic-runtime-lang-items.rs\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![no_std]\n #![no_main]"}, {"sha": "478af451e7f657bbd73ecceb3ca5b180027019ca", "filename": "src/test/ui/panic-runtime/want-unwind-got-abort2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fpanic-runtime%2Fwant-unwind-got-abort2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fpanic-runtime%2Fwant-unwind-got-abort2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpanic-runtime%2Fwant-unwind-got-abort2.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -2,7 +2,7 @@\n // aux-build:panic-runtime-abort.rs\n // aux-build:wants-panic-runtime-abort.rs\n // aux-build:panic-runtime-lang-items.rs\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![no_std]\n #![no_main]"}, {"sha": "418178d0f0ead071c24efda048d43721ac535eec", "filename": "src/test/ui/proc-macro/expand-with-a-macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-with-a-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-with-a-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fexpand-with-a-macro.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n // aux-build:expand-with-a-macro.rs\n \n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![deny(warnings)]\n "}, {"sha": "f1e53a0d8b4266658134f0953db9b546126ee211", "filename": "src/test/ui/reachable-unnameable-items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Freachable-unnameable-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Freachable-unnameable-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable-unnameable-items.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // aux-build:reachable-unnameable-items.rs\n \n extern crate reachable_unnameable_items;"}, {"sha": "0bd7bf3d51a78d01db1a8e86ebe49ad811f40c3b", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-in-test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-in-test.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,7 +1,7 @@\n // compile-flags: --test\n // run-pass\n \n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![feature(test)]\n "}, {"sha": "7923aa7c0e22f31affe992fabc45afaa67d844f9", "filename": "src/test/ui/rfcs/rfc1857-drop-order.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Frfcs%2Frfc1857-drop-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Frfcs%2Frfc1857-drop-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfcs%2Frfc1857-drop-order.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n \n #![allow(dead_code, unreachable_code)]\n "}, {"sha": "1a478460efc6c8954c6714450b848652cd700a85", "filename": "src/test/ui/test-attrs/test-allow-fail-attr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-allow-fail-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-allow-fail-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-allow-fail-attr.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // compile-flags: --test\n #![feature(allow_fail)]\n "}, {"sha": "9fa759f9eb4837a25ff0b215cba976b78f849412", "filename": "src/test/ui/test-attrs/test-should-fail-good-message.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-should-fail-good-message.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-should-fail-good-message.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftest-attrs%2Ftest-should-fail-good-message.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// ignore-emscripten compiled with panic=abort by default\n+// ignore-wasm32-bare compiled with panic=abort by default\n // compile-flags: --test\n #[test]\n #[should_panic(expected = \"foo\")]"}, {"sha": "d750595e272cffa0129cd08479ecbd27a0e47d0c", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8aa23125bb40f6949fcd2c4f48151c4d8a444419/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=8aa23125bb40f6949fcd2c4f48151c4d8a444419", "patch": "@@ -141,10 +141,6 @@ impl EarlyProps {\n                 if config.target == \"wasm32-unknown-unknown\" && config.parse_check_run_results(ln) {\n                     props.ignore = Ignore::Ignore;\n                 }\n-                // FIXME: Re-enable run-fail once panics are handled correctly\n-                if config.target.contains(\"emscripten\") && config.mode == common::RunFail {\n-                    props.ignore = Ignore::Ignore;\n-                }\n             }\n \n             if (config.mode == common::DebugInfoGdb || config.mode == common::DebugInfoGdbLldb) &&"}]}