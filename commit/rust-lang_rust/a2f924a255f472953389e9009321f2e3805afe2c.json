{"sha": "a2f924a255f472953389e9009321f2e3805afe2c", "node_id": "C_kwDOAAsO6NoAKGEyZjkyNGEyNTVmNDcyOTUzMzg5ZTkwMDkzMjFmMmUzODA1YWZlMmM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-11-29T09:41:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-29T09:41:34Z"}, "message": "Rollup merge of #91281 - scottmcm:non-exhaustive-as-test, r=Mark-Simulacrum\n\nAdd demonstration test for #91161\n\nSince cross-crate things are hard to demonstrate in playground, here's a test showing that something currently works that shouldn't.\n\ncc https://github.com/rust-lang/rust/issues/91161 that tracks fixing the problem (and updating this test)", "tree": {"sha": "1210c94d594c35a6c67500b3b925bf901d01f8f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1210c94d594c35a6c67500b3b925bf901d01f8f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2f924a255f472953389e9009321f2e3805afe2c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhpKBOCRBK7hj4Ov3rIwAAU5YIABX++aXlk0KNoMq3PsP1bqex\nLOr3R8ciLDLQuwB2vNx9fB6ExmyY3mx1ymGkJkfBXhFUPnoZOt2Ndld6bz8EvdTe\nJP13kk1gRCEDOPA79EAvuftaaKLUC9QYJi4MHz8aqKANlXVWX/hwJSkEs2oM7i+T\nUHc4I7enxUybtyW5lAUYeV39NfLjswZIHrWt8d6k7gRxXDagQf0Qaz83jfuAty/U\n/ECQSdL52iZz6Y/bPphEhXViw3zIHtOOndhwcGpOVyS2zM6DWgMtN1ApMyTjpq/b\noxOGsem8SraSSOySyOJbhNphd6ThvZVkjAJg9oJCKDcoe3qVLd1U5kwCGFEaZi4=\n=OQ6j\n-----END PGP SIGNATURE-----\n", "payload": "tree 1210c94d594c35a6c67500b3b925bf901d01f8f7\nparent 80277dcc4f39c7142c7217543b083ed6fd9919e8\nparent 50619f568a250750fcb6bea271ccfd8fdc0926bf\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1638178894 +0100\ncommitter GitHub <noreply@github.com> 1638178894 +0100\n\nRollup merge of #91281 - scottmcm:non-exhaustive-as-test, r=Mark-Simulacrum\n\nAdd demonstration test for #91161\n\nSince cross-crate things are hard to demonstrate in playground, here's a test showing that something currently works that shouldn't.\n\ncc https://github.com/rust-lang/rust/issues/91161 that tracks fixing the problem (and updating this test)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2f924a255f472953389e9009321f2e3805afe2c", "html_url": "https://github.com/rust-lang/rust/commit/a2f924a255f472953389e9009321f2e3805afe2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2f924a255f472953389e9009321f2e3805afe2c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80277dcc4f39c7142c7217543b083ed6fd9919e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/80277dcc4f39c7142c7217543b083ed6fd9919e8", "html_url": "https://github.com/rust-lang/rust/commit/80277dcc4f39c7142c7217543b083ed6fd9919e8"}, {"sha": "50619f568a250750fcb6bea271ccfd8fdc0926bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/50619f568a250750fcb6bea271ccfd8fdc0926bf", "html_url": "https://github.com/rust-lang/rust/commit/50619f568a250750fcb6bea271ccfd8fdc0926bf"}], "stats": {"total": 29, "additions": 29, "deletions": 0}, "files": [{"sha": "cb2b585ab96a8cd7680b5b006228e1cee1936a09", "filename": "src/test/ui/rfc-2008-non-exhaustive/auxiliary/enums.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a2f924a255f472953389e9009321f2e3805afe2c/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fenums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2f924a255f472953389e9009321f2e3805afe2c/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fenums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fauxiliary%2Fenums.rs?ref=a2f924a255f472953389e9009321f2e3805afe2c", "patch": "@@ -30,3 +30,15 @@ pub enum VariantNonExhaustive {\n pub enum NonExhaustiveSingleVariant {\n     A(bool),\n }\n+\n+#[repr(u8)]\n+pub enum FieldLessWithNonExhaustiveVariant {\n+    A,\n+    B,\n+    #[non_exhaustive]\n+    C,\n+}\n+\n+impl Default for FieldLessWithNonExhaustiveVariant {\n+    fn default() -> Self { Self::A }\n+}"}, {"sha": "d9657bac776850916b972c148ce2b56bb18421e2", "filename": "src/test/ui/rfc-2008-non-exhaustive/enum-as-cast.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a2f924a255f472953389e9009321f2e3805afe2c/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum-as-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2f924a255f472953389e9009321f2e3805afe2c/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum-as-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fenum-as-cast.rs?ref=a2f924a255f472953389e9009321f2e3805afe2c", "patch": "@@ -0,0 +1,17 @@\n+// aux-build:enums.rs\n+// run-pass\n+\n+extern crate enums;\n+\n+use enums::FieldLessWithNonExhaustiveVariant;\n+\n+fn main() {\n+    let e = FieldLessWithNonExhaustiveVariant::default();\n+    // FIXME: https://github.com/rust-lang/rust/issues/91161\n+    // This `as` cast *should* be an error, since it would fail\n+    // if the non-exhaustive variant got fields.  But today it\n+    // doesn't.  The fix for that will update this test to\n+    // show an error (and not be run-pass any more).\n+    let d = e as u8;\n+    assert_eq!(d, 0);\n+}"}]}