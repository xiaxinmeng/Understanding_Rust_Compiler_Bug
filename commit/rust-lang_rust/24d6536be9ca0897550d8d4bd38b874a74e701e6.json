{"sha": "24d6536be9ca0897550d8d4bd38b874a74e701e6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0ZDY1MzZiZTljYTA4OTc1NTBkOGQ0YmQzOGI4NzRhNzRlNzAxZTY=", "commit": {"author": {"name": "Taylor Yu", "email": "tlyu@mit.edu", "date": "2021-07-03T16:35:47Z"}, "committer": {"name": "Taylor Yu", "email": "tlyu@mit.edu", "date": "2021-07-03T16:35:47Z"}, "message": "stdio_locked: add tracking issue", "tree": {"sha": "cb6ceb1fc96d38dab7ca716af5aef9f609cc842a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb6ceb1fc96d38dab7ca716af5aef9f609cc842a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/24d6536be9ca0897550d8d4bd38b874a74e701e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/24d6536be9ca0897550d8d4bd38b874a74e701e6", "html_url": "https://github.com/rust-lang/rust/commit/24d6536be9ca0897550d8d4bd38b874a74e701e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/24d6536be9ca0897550d8d4bd38b874a74e701e6/comments", "author": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tlyu", "id": 431873, "node_id": "MDQ6VXNlcjQzMTg3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/431873?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlyu", "html_url": "https://github.com/tlyu", "followers_url": "https://api.github.com/users/tlyu/followers", "following_url": "https://api.github.com/users/tlyu/following{/other_user}", "gists_url": "https://api.github.com/users/tlyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlyu/subscriptions", "organizations_url": "https://api.github.com/users/tlyu/orgs", "repos_url": "https://api.github.com/users/tlyu/repos", "events_url": "https://api.github.com/users/tlyu/events{/privacy}", "received_events_url": "https://api.github.com/users/tlyu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8b8558f083d86247ef3260ebb4f97b276cdbf73", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8b8558f083d86247ef3260ebb4f97b276cdbf73", "html_url": "https://github.com/rust-lang/rust/commit/a8b8558f083d86247ef3260ebb4f97b276cdbf73"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "c68233b6a24e0526828985c25fc0d3cdd085253e", "filename": "library/std/src/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/24d6536be9ca0897550d8d4bd38b874a74e701e6/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24d6536be9ca0897550d8d4bd38b874a74e701e6/library%2Fstd%2Fsrc%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fmod.rs?ref=24d6536be9ca0897550d8d4bd38b874a74e701e6", "patch": "@@ -277,7 +277,7 @@ pub use self::error::{Error, ErrorKind, Result};\n pub use self::stdio::set_output_capture;\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::stdio::{stderr, stdin, stdout, Stderr, Stdin, Stdout};\n-#[unstable(feature = \"stdio_locked\", issue = \"none\")]\n+#[unstable(feature = \"stdio_locked\", issue = \"86845\")]\n pub use self::stdio::{stderr_locked, stdin_locked, stdout_locked};\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub use self::stdio::{StderrLock, StdinLock, StdoutLock};"}, {"sha": "206687e38fb9cfc402121d3c24c000124092102e", "filename": "library/std/src/io/stdio.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/24d6536be9ca0897550d8d4bd38b874a74e701e6/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "raw_url": "https://github.com/rust-lang/rust/raw/24d6536be9ca0897550d8d4bd38b874a74e701e6/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fio%2Fstdio.rs?ref=24d6536be9ca0897550d8d4bd38b874a74e701e6", "patch": "@@ -347,7 +347,7 @@ pub fn stdin() -> Stdin {\n ///     Ok(())\n /// }\n /// ```\n-#[unstable(feature = \"stdio_locked\", issue = \"none\")]\n+#[unstable(feature = \"stdio_locked\", issue = \"86845\")]\n pub fn stdin_locked() -> StdinLock<'static> {\n     stdin().into_locked()\n }\n@@ -442,7 +442,7 @@ impl Stdin {\n     ///     Ok(())\n     /// }\n     /// ```\n-    #[unstable(feature = \"stdio_locked\", issue = \"none\")]\n+    #[unstable(feature = \"stdio_locked\", issue = \"86845\")]\n     pub fn into_locked(self) -> StdinLock<'static> {\n         self.lock_any()\n     }\n@@ -668,7 +668,7 @@ pub fn stdout() -> Stdout {\n ///     Ok(())\n /// }\n /// ```\n-#[unstable(feature = \"stdio_locked\", issue = \"none\")]\n+#[unstable(feature = \"stdio_locked\", issue = \"86845\")]\n pub fn stdout_locked() -> StdoutLock<'static> {\n     stdout().into_locked()\n }\n@@ -745,7 +745,7 @@ impl Stdout {\n     ///     Ok(())\n     /// }\n     /// ```\n-    #[unstable(feature = \"stdio_locked\", issue = \"none\")]\n+    #[unstable(feature = \"stdio_locked\", issue = \"86845\")]\n     pub fn into_locked(self) -> StdoutLock<'static> {\n         self.lock_any()\n     }\n@@ -945,7 +945,7 @@ pub fn stderr() -> Stderr {\n ///     Ok(())\n /// }\n /// ```\n-#[unstable(feature = \"stdio_locked\", issue = \"none\")]\n+#[unstable(feature = \"stdio_locked\", issue = \"86845\")]\n pub fn stderr_locked() -> StderrLock<'static> {\n     stderr().into_locked()\n }\n@@ -1005,7 +1005,7 @@ impl Stderr {\n     ///     Ok(())\n     /// }\n     /// ```\n-    #[unstable(feature = \"stdio_locked\", issue = \"none\")]\n+    #[unstable(feature = \"stdio_locked\", issue = \"86845\")]\n     pub fn into_locked(self) -> StderrLock<'static> {\n         self.lock_any()\n     }"}]}