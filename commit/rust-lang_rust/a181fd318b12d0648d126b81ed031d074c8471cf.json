{"sha": "a181fd318b12d0648d126b81ed031d074c8471cf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExODFmZDMxOGIxMmQwNjQ4ZDEyNmI4MWVkMDMxZDA3NGM4NDcxY2Y=", "commit": {"author": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-06-03T13:43:06Z"}, "committer": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-06-04T00:34:00Z"}, "message": "Implement cargo lint to run clippy", "tree": {"sha": "8f4eb163d7ad51b756cf078630803d5c7f78560b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f4eb163d7ad51b756cf078630803d5c7f78560b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a181fd318b12d0648d126b81ed031d074c8471cf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a181fd318b12d0648d126b81ed031d074c8471cf", "html_url": "https://github.com/rust-lang/rust/commit/a181fd318b12d0648d126b81ed031d074c8471cf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a181fd318b12d0648d126b81ed031d074c8471cf/comments", "author": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d1b9fa446a3dbfb216fcc0b07d8a2990c632df9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d1b9fa446a3dbfb216fcc0b07d8a2990c632df9c", "html_url": "https://github.com/rust-lang/rust/commit/d1b9fa446a3dbfb216fcc0b07d8a2990c632df9c"}], "stats": {"total": 35, "additions": 34, "deletions": 1}, "files": [{"sha": "51ae33910b0afd1dd7666291c5fba48fda10aa59", "filename": ".cargo/config", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a181fd318b12d0648d126b81ed031d074c8471cf/.cargo%2Fconfig", "raw_url": "https://github.com/rust-lang/rust/raw/a181fd318b12d0648d126b81ed031d074c8471cf/.cargo%2Fconfig", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.cargo%2Fconfig?ref=a181fd318b12d0648d126b81ed031d074c8471cf", "patch": "@@ -12,6 +12,9 @@ install-code = \"run --package tools --bin tools -- install-code\"\n # Formats the full repository or installs the git hook to do it automatically.\n format       = \"run --package tools --bin tools -- format\"\n format-hook  = \"run --package tools --bin tools -- format-hook\"\n+# Run clippy\n+lint         = \"run --package tools --bin tools -- lint\"\n+\n # Runs the fuzzing test suite (currently only parser)\n fuzz-tests   = \"run --package tools --bin tools -- fuzz-tests\"\n "}, {"sha": "92634655d21e671b86d9ad6746ba06e13986e31d", "filename": "crates/tools/src/lib.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/a181fd318b12d0648d126b81ed031d074c8471cf/crates%2Ftools%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a181fd318b12d0648d126b81ed031d074c8471cf/crates%2Ftools%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Flib.rs?ref=a181fd318b12d0648d126b81ed031d074c8471cf", "patch": "@@ -133,6 +133,34 @@ pub fn install_format_hook() -> Result<()> {\n     Ok(())\n }\n \n+pub fn run_clippy() -> Result<()> {\n+    match Command::new(\"rustup\")\n+        .args(&[\"run\", TOOLCHAIN, \"--\", \"cargo\", \"clippy\", \"--version\"])\n+        .stderr(Stdio::null())\n+        .stdout(Stdio::null())\n+        .status()\n+    {\n+        Ok(status) if status.success() => (),\n+        _ => install_clippy()?,\n+    };\n+\n+    let allowed_lints = [\"clippy::collapsible_if\", \"clippy::nonminimal_bool\"];\n+    run(\n+        &format!(\n+            \"rustup run {} -- cargo clippy --all-features --all-targets -- -A {}\",\n+            TOOLCHAIN,\n+            allowed_lints.join(\" -A \")\n+        ),\n+        \".\",\n+    )?;\n+    Ok(())\n+}\n+\n+pub fn install_clippy() -> Result<()> {\n+    run(&format!(\"rustup install {}\", TOOLCHAIN), \".\")?;\n+    run(&format!(\"rustup component add clippy --toolchain {}\", TOOLCHAIN), \".\")\n+}\n+\n pub fn run_fuzzer() -> Result<()> {\n     match Command::new(\"cargo\")\n         .args(&[\"fuzz\", \"--help\"])"}, {"sha": "cf189bf1c5834a8d92f46cd86ed6be5502548c14", "filename": "crates/tools/src/main.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a181fd318b12d0648d126b81ed031d074c8471cf/crates%2Ftools%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a181fd318b12d0648d126b81ed031d074c8471cf/crates%2Ftools%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftools%2Fsrc%2Fmain.rs?ref=a181fd318b12d0648d126b81ed031d074c8471cf", "patch": "@@ -3,7 +3,7 @@ use core::str;\n use failure::bail;\n use tools::{\n     generate, gen_tests, install_format_hook, run, run_with_output, run_rustfmt,\n-    Overwrite, Result, run_fuzzer,\n+    Overwrite, Result, run_fuzzer, run_clippy,\n };\n use std::{path::{PathBuf}, env};\n \n@@ -16,6 +16,7 @@ fn main() -> Result<()> {\n         .subcommand(SubCommand::with_name(\"format\"))\n         .subcommand(SubCommand::with_name(\"format-hook\"))\n         .subcommand(SubCommand::with_name(\"fuzz-tests\"))\n+        .subcommand(SubCommand::with_name(\"lint\"))\n         .get_matches();\n     match matches.subcommand_name().expect(\"Subcommand must be specified\") {\n         \"install-code\" => {\n@@ -28,6 +29,7 @@ fn main() -> Result<()> {\n         \"gen-syntax\" => generate(Overwrite)?,\n         \"format\" => run_rustfmt(Overwrite)?,\n         \"format-hook\" => install_format_hook()?,\n+        \"lint\" => run_clippy()?,\n         \"fuzz-tests\" => run_fuzzer()?,\n         _ => unreachable!(),\n     }"}]}