{"sha": "e8e13f04b2218fbc5faa9774a1b5bba9296f3389", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4ZTEzZjA0YjIyMThmYmM1ZmFhOTc3NGExYjViYmE5Mjk2ZjMzODk=", "commit": {"author": {"name": "Colin Arnott", "email": "colin@urandom.co.uk", "date": "2019-07-13T01:34:00Z"}, "committer": {"name": "Colin Arnott", "email": "colin@urandom.co.uk", "date": "2019-07-13T01:50:45Z"}, "message": "simplify std::io::Write::write rustdoc\n\nThe std::io::Write::write method currensly suggests consumers guaranteed\nthat `0 <= n <= buf.len()`, for `Ok(n)`, however `n` is of type `usize`\ncausing the compiler to emit a warning:\n```\nwarning: comparison is useless due to type limits\n --> lib.rs:6:18\n  |\n6 |         Ok(n) => 0 <= n && n <= output.len(),\n  |                  ^^^^^^\n  |\n  = note: #[warn(unused_comparisons)] on by default\n```\n\nThis PR removes the suggestion to check `0 <= n` since it is moot.\n\nr? @steveklabnik", "tree": {"sha": "ca6c30659277b86eedf374792cc1caa62d60ee00", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca6c30659277b86eedf374792cc1caa62d60ee00"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8e13f04b2218fbc5faa9774a1b5bba9296f3389", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEBKOixgBCeEqup9BRBEemY/fz4jYFAl0pOPUACgkQBEemY/fz\n4jbH1g/+KW4K7h31XHK2+SA64l7DsHtV4HoCYP2N/Tnz/rB436V9ptnvTzrFrYRF\nXixudYsyxBJ9qWu13AN24/JGVqJBTaMFiSP7P2J2nNy0QevTGHDo/aj7jk0Mqzfu\nEa00jSx8qq+cg+gtHisw6oGX6gKR16dTcy9aYk9LNvuuLRWXMsXCewO6QJVdQEls\njH0BMcDTqi6/mzb+HMoOjzEM0/Cm3bGrvOwi4RjRit/Qu5dBm2dnlEw+3Y7kYKAw\n9XPFuHpjhJWHeOiomo/cncQux3AU/rWOR+D3AupNLtXT3fU/BQo+x2dZ/bjXVPIL\nsv055DY5cQRUTaTuhscw2ej/7bt0QJNV373hmrfIgEo7/jQkew6Ngtm/LksJdMrH\n2P7+YU+l3Y5kG/XzR0Ii+5MkFjDsVMXTaVzdmIBMHI9xIsQ+vxcY5mJir9TPZqrb\nHUjOYurEbsT11aIu7z+37qREZZ7XtwLSd96ZS8fyMsg1C8v5phgMLuh8w60Q7FhC\nhVgftCnkTpOywa/9SFw3AEZT/2OdmWXV3ky9UgGwF/I8u47mLvSQIdZQ4IXUaJGh\nImd91smBWZGC8I4OSFUDpKZ5Z8v1EaetARWH4veEMqt+h1UV/mi4c27Srypsxurl\nIh3xGU7Iwy+njlI0dbeO1ApyExEtpjJBArn3kfRiEvo9sK+G9cU=\n=eFsK\n-----END PGP SIGNATURE-----", "payload": "tree ca6c30659277b86eedf374792cc1caa62d60ee00\nparent 71f9384e3bec467158a628e2d11e77ffada16a90\nauthor Colin Arnott <colin@urandom.co.uk> 1562981640 +0000\ncommitter Colin Arnott <colin@urandom.co.uk> 1562982645 +0000\n\nsimplify std::io::Write::write rustdoc\n\nThe std::io::Write::write method currensly suggests consumers guaranteed\nthat `0 <= n <= buf.len()`, for `Ok(n)`, however `n` is of type `usize`\ncausing the compiler to emit a warning:\n```\nwarning: comparison is useless due to type limits\n --> lib.rs:6:18\n  |\n6 |         Ok(n) => 0 <= n && n <= output.len(),\n  |                  ^^^^^^\n  |\n  = note: #[warn(unused_comparisons)] on by default\n```\n\nThis PR removes the suggestion to check `0 <= n` since it is moot.\n\nr? @steveklabnik\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8e13f04b2218fbc5faa9774a1b5bba9296f3389", "html_url": "https://github.com/rust-lang/rust/commit/e8e13f04b2218fbc5faa9774a1b5bba9296f3389", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8e13f04b2218fbc5faa9774a1b5bba9296f3389/comments", "author": {"login": "urandom2", "id": 2526260, "node_id": "MDQ6VXNlcjI1MjYyNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2526260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urandom2", "html_url": "https://github.com/urandom2", "followers_url": "https://api.github.com/users/urandom2/followers", "following_url": "https://api.github.com/users/urandom2/following{/other_user}", "gists_url": "https://api.github.com/users/urandom2/gists{/gist_id}", "starred_url": "https://api.github.com/users/urandom2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urandom2/subscriptions", "organizations_url": "https://api.github.com/users/urandom2/orgs", "repos_url": "https://api.github.com/users/urandom2/repos", "events_url": "https://api.github.com/users/urandom2/events{/privacy}", "received_events_url": "https://api.github.com/users/urandom2/received_events", "type": "User", "site_admin": false}, "committer": {"login": "urandom2", "id": 2526260, "node_id": "MDQ6VXNlcjI1MjYyNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/2526260?v=4", "gravatar_id": "", "url": "https://api.github.com/users/urandom2", "html_url": "https://github.com/urandom2", "followers_url": "https://api.github.com/users/urandom2/followers", "following_url": "https://api.github.com/users/urandom2/following{/other_user}", "gists_url": "https://api.github.com/users/urandom2/gists{/gist_id}", "starred_url": "https://api.github.com/users/urandom2/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/urandom2/subscriptions", "organizations_url": "https://api.github.com/users/urandom2/orgs", "repos_url": "https://api.github.com/users/urandom2/repos", "events_url": "https://api.github.com/users/urandom2/events{/privacy}", "received_events_url": "https://api.github.com/users/urandom2/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "71f9384e3bec467158a628e2d11e77ffada16a90", "url": "https://api.github.com/repos/rust-lang/rust/commits/71f9384e3bec467158a628e2d11e77ffada16a90", "html_url": "https://github.com/rust-lang/rust/commit/71f9384e3bec467158a628e2d11e77ffada16a90"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "ebe68dba6e6ed6168d45f268ebb36ad737978245", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e8e13f04b2218fbc5faa9774a1b5bba9296f3389/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8e13f04b2218fbc5faa9774a1b5bba9296f3389/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=e8e13f04b2218fbc5faa9774a1b5bba9296f3389", "patch": "@@ -1105,7 +1105,7 @@ pub trait Write {\n     /// an [`Err`] variant.\n     ///\n     /// If the return value is [`Ok(n)`] then it must be guaranteed that\n-    /// `0 <= n <= buf.len()`. A return value of `0` typically means that the\n+    /// `n <= buf.len()`. A return value of `0` typically means that the\n     /// underlying object is no longer able to accept bytes and will likely not\n     /// be able to in the future as well, or that the buffer provided is empty.\n     ///"}]}