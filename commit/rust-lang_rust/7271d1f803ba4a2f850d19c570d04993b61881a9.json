{"sha": "7271d1f803ba4a2f850d19c570d04993b61881a9", "node_id": "C_kwDOAAsO6NoAKDcyNzFkMWY4MDNiYTRhMmY4NTBkMTljNTcwZDA0OTkzYjYxODgxYTk", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-11-19T06:10:43Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2021-12-07T02:06:58Z"}, "message": "Add test with multiple type params failing inference", "tree": {"sha": "bb1f24d5ff615578d137aeb4907b73b9be9bbf7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bb1f24d5ff615578d137aeb4907b73b9be9bbf7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7271d1f803ba4a2f850d19c570d04993b61881a9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7271d1f803ba4a2f850d19c570d04993b61881a9", "html_url": "https://github.com/rust-lang/rust/commit/7271d1f803ba4a2f850d19c570d04993b61881a9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7271d1f803ba4a2f850d19c570d04993b61881a9/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a691b1d92c0c34ee8b43a6d04df30c908c4d6a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a691b1d92c0c34ee8b43a6d04df30c908c4d6a3", "html_url": "https://github.com/rust-lang/rust/commit/6a691b1d92c0c34ee8b43a6d04df30c908c4d6a3"}], "stats": {"total": 61, "additions": 46, "deletions": 15}, "files": [{"sha": "9cf6cde259150a433041cbdb7631d194f04d736a", "filename": "compiler/rustc_infer/src/infer/error_reporting/need_type_info.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7271d1f803ba4a2f850d19c570d04993b61881a9/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7271d1f803ba4a2f850d19c570d04993b61881a9/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fneed_type_info.rs?ref=7271d1f803ba4a2f850d19c570d04993b61881a9", "patch": "@@ -939,9 +939,7 @@ impl<'tcx> ResolvedTypeParamEraser<'tcx> {\n     /// Replace not yet inferred const params with their def name.\n     fn replace_infers(&self, c: &'tcx Const<'tcx>, index: u32, name: Symbol) -> &'tcx Const<'tcx> {\n         match c.val {\n-            ty::ConstKind::Infer(..) => {\n-                self.tcx().mk_const_param(index, name, c.ty)\n-            }\n+            ty::ConstKind::Infer(..) => self.tcx().mk_const_param(index, name, c.ty),\n             _ => c,\n         }\n     }"}, {"sha": "1fea2da92da94367ec01ededabbbd74b014bde3f", "filename": "src/test/ui/inference/erase-type-params-in-label.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7271d1f803ba4a2f850d19c570d04993b61881a9/src%2Ftest%2Fui%2Finference%2Ferase-type-params-in-label.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7271d1f803ba4a2f850d19c570d04993b61881a9/src%2Ftest%2Fui%2Finference%2Ferase-type-params-in-label.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Ferase-type-params-in-label.rs?ref=7271d1f803ba4a2f850d19c570d04993b61881a9", "patch": "@@ -1,5 +1,8 @@\n fn main() {\n-    let foo = new(1, \"\"); //~ ERROR E0283\n+    let foo = foo(1, \"\"); //~ ERROR E0283\n+}\n+fn baz() {\n+    let bar = bar(1, \"\"); //~ ERROR E0283\n }\n \n struct Bar<T, K, N: Default> {\n@@ -8,6 +11,17 @@ struct Bar<T, K, N: Default> {\n     n: N,\n }\n \n-fn new<T, K, Z: Default>(t: T, k: K) -> Bar<T, K, Z> {\n+fn bar<T, K, Z: Default>(t: T, k: K) -> Bar<T, K, Z> {\n     Bar { t, k, n: Default::default() }\n }\n+\n+struct Foo<T, K, N: Default, M: Default> {\n+    t: T,\n+    k: K,\n+    n: N,\n+    m: M,\n+}\n+\n+fn foo<T, K, W: Default, Z: Default>(t: T, k: K) -> Foo<T, K, W, Z> {\n+    Foo { t, k, n: Default::default(), m: Default::default() }\n+}"}, {"sha": "d0b06cde9d63a58bef0164f77026ed17b1212c99", "filename": "src/test/ui/inference/erase-type-params-in-label.stderr", "status": "modified", "additions": 29, "deletions": 10, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/7271d1f803ba4a2f850d19c570d04993b61881a9/src%2Ftest%2Fui%2Finference%2Ferase-type-params-in-label.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7271d1f803ba4a2f850d19c570d04993b61881a9/src%2Ftest%2Fui%2Finference%2Ferase-type-params-in-label.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finference%2Ferase-type-params-in-label.stderr?ref=7271d1f803ba4a2f850d19c570d04993b61881a9", "patch": "@@ -1,22 +1,41 @@\n-error[E0283]: type annotations needed for `Bar<i32, &str, Z>`\n+error[E0283]: type annotations needed for `Foo<i32, &str, W, Z>`\n   --> $DIR/erase-type-params-in-label.rs:2:15\n    |\n-LL |     let foo = new(1, \"\");\n-   |         ---   ^^^ cannot infer type for type parameter `Z` declared on the function `new`\n+LL |     let foo = foo(1, \"\");\n+   |         ---   ^^^ cannot infer type for type parameter `W` declared on the function `foo`\n+   |         |\n+   |         consider giving `foo` the explicit type `Foo<_, _, W, Z>`, where the type parameter `W` is specified\n+   |\n+   = note: cannot satisfy `_: Default`\n+note: required by a bound in `foo`\n+  --> $DIR/erase-type-params-in-label.rs:25:17\n+   |\n+LL | fn foo<T, K, W: Default, Z: Default>(t: T, k: K) -> Foo<T, K, W, Z> {\n+   |                 ^^^^^^^ required by this bound in `foo`\n+help: consider specifying the type arguments in the function call\n+   |\n+LL |     let foo = foo::<T, K, W, Z>(1, \"\");\n+   |                  ++++++++++++++\n+\n+error[E0283]: type annotations needed for `Bar<i32, &str, Z>`\n+  --> $DIR/erase-type-params-in-label.rs:5:15\n+   |\n+LL |     let bar = bar(1, \"\");\n+   |         ---   ^^^ cannot infer type for type parameter `Z` declared on the function `bar`\n    |         |\n-   |         consider giving `foo` the explicit type `Bar<_, _, Z>`, where the type parameter `Z` is specified\n+   |         consider giving `bar` the explicit type `Bar<_, _, Z>`, where the type parameter `Z` is specified\n    |\n    = note: cannot satisfy `_: Default`\n-note: required by a bound in `new`\n-  --> $DIR/erase-type-params-in-label.rs:11:17\n+note: required by a bound in `bar`\n+  --> $DIR/erase-type-params-in-label.rs:14:17\n    |\n-LL | fn new<T, K, Z: Default>(t: T, k: K) -> Bar<T, K, Z> {\n-   |                 ^^^^^^^ required by this bound in `new`\n+LL | fn bar<T, K, Z: Default>(t: T, k: K) -> Bar<T, K, Z> {\n+   |                 ^^^^^^^ required by this bound in `bar`\n help: consider specifying the type arguments in the function call\n    |\n-LL |     let foo = new::<T, K, Z>(1, \"\");\n+LL |     let bar = bar::<T, K, Z>(1, \"\");\n    |                  +++++++++++\n \n-error: aborting due to previous error\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0283`."}]}