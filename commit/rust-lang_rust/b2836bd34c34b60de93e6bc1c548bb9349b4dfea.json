{"sha": "b2836bd34c34b60de93e6bc1c548bb9349b4dfea", "node_id": "C_kwDOAAsO6NoAKGIyODM2YmQzNGMzNGI2MGRlOTNlNmJjMWM1NDhiYjkzNDliNGRmZWE", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-29T12:29:35Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-29T12:29:35Z"}, "message": "Rollup merge of #98554 - DrMeepster:box_unsizing_is_not_special, r=RalfJung\n\nFix box with custom allocator in miri\n\nThis should fix the failures in https://github.com/rust-lang/miri/pull/2072 and https://github.com/rust-lang/rust/pull/98510.\n\ncc ```@RalfJung```", "tree": {"sha": "ecad7547e5b6c3005b4e25256015c13d52bcbda9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ecad7547e5b6c3005b4e25256015c13d52bcbda9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2836bd34c34b60de93e6bc1c548bb9349b4dfea", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJivEWvCRBK7hj4Ov3rIwAAcwUIADebfVVevvKrDBKWGp2QVPhY\nCZ1X52Z1j1VUdUCYRYcxg4DcyHyvS3QRJzCwBLzuHgwUTtIGW8eOO1FEiLhA9uWM\nLbV5Oa5z5thi0s1L8dTmuMjvog8wrIDyFsbvTw70WWHAXYfj6h9m5h64JOCT7fQb\nSrs9484jVDZW+tIR4YgTEQbPe+8DEH1YaTIBpLO6VhZKvHayhl6ac+0qyDiWkmhk\nKt3bJcu8uyz6T3fXIN1U5XVtmRG54II9TeAo5Z3/9B4bGq4IncUkp3sZd2tfgGaI\n/dMYa5EfXJ9vOb3k6ImxjYF4GWT4IbS17m0juzdGiXBbCwKxlNd8DJOpdEge6Rc=\n=eBsJ\n-----END PGP SIGNATURE-----\n", "payload": "tree ecad7547e5b6c3005b4e25256015c13d52bcbda9\nparent 375ab3e44f721bb65f7cf975de06b2daf52c8563\nparent 9039265c308fccf6599080db51e6db103ecaf5ad\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1656505775 +0530\ncommitter GitHub <noreply@github.com> 1656505775 +0530\n\nRollup merge of #98554 - DrMeepster:box_unsizing_is_not_special, r=RalfJung\n\nFix box with custom allocator in miri\n\nThis should fix the failures in https://github.com/rust-lang/miri/pull/2072 and https://github.com/rust-lang/rust/pull/98510.\n\ncc ```@RalfJung```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2836bd34c34b60de93e6bc1c548bb9349b4dfea", "html_url": "https://github.com/rust-lang/rust/commit/b2836bd34c34b60de93e6bc1c548bb9349b4dfea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2836bd34c34b60de93e6bc1c548bb9349b4dfea/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "375ab3e44f721bb65f7cf975de06b2daf52c8563", "url": "https://api.github.com/repos/rust-lang/rust/commits/375ab3e44f721bb65f7cf975de06b2daf52c8563", "html_url": "https://github.com/rust-lang/rust/commit/375ab3e44f721bb65f7cf975de06b2daf52c8563"}, {"sha": "9039265c308fccf6599080db51e6db103ecaf5ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/9039265c308fccf6599080db51e6db103ecaf5ad", "html_url": "https://github.com/rust-lang/rust/commit/9039265c308fccf6599080db51e6db103ecaf5ad"}], "stats": {"total": 24, "additions": 7, "deletions": 17}, "files": [{"sha": "076415b2d1b2f3b8f4df9267488db7b82dbffd8b", "filename": "compiler/rustc_const_eval/src/interpret/cast.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/b2836bd34c34b60de93e6bc1c548bb9349b4dfea/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2836bd34c34b60de93e6bc1c548bb9349b4dfea/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fcast.rs?ref=b2836bd34c34b60de93e6bc1c548bb9349b4dfea", "patch": "@@ -366,22 +366,6 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             }\n             (&ty::Adt(def_a, _), &ty::Adt(def_b, _)) => {\n                 assert_eq!(def_a, def_b);\n-                if def_a.is_box() || def_b.is_box() {\n-                    if !def_a.is_box() || !def_b.is_box() {\n-                        span_bug!(\n-                            self.cur_span(),\n-                            \"invalid unsizing between {:?} -> {:?}\",\n-                            src.layout.ty,\n-                            cast_ty.ty\n-                        );\n-                    }\n-                    return self.unsize_into_ptr(\n-                        src,\n-                        dest,\n-                        src.layout.ty.boxed_ty(),\n-                        cast_ty.ty.boxed_ty(),\n-                    );\n-                }\n \n                 // unsizing of generic struct with pointer fields\n                 // Example: `Arc<T>` -> `Arc<Trait>`"}, {"sha": "905ab6cb578fc1e0eef52b71276797efe7f530ab", "filename": "compiler/rustc_const_eval/src/interpret/validity.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b2836bd34c34b60de93e6bc1c548bb9349b4dfea/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2836bd34c34b60de93e6bc1c548bb9349b4dfea/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fvalidity.rs?ref=b2836bd34c34b60de93e6bc1c548bb9349b4dfea", "patch": "@@ -594,7 +594,13 @@ impl<'rt, 'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> ValidityVisitor<'rt, 'mir, '\n                 Ok(true)\n             }\n             ty::Adt(def, ..) if def.is_box() => {\n-                self.check_safe_pointer(value, \"box\")?;\n+                let unique = self.ecx.operand_field(value, 0)?;\n+                let nonnull = self.ecx.operand_field(&unique, 0)?;\n+                let ptr = self.ecx.operand_field(&nonnull, 0)?;\n+                self.check_safe_pointer(&ptr, \"box\")?;\n+\n+                // Check other fields of Box\n+                self.walk_value(value)?;\n                 Ok(true)\n             }\n             ty::FnPtr(_sig) => {"}]}