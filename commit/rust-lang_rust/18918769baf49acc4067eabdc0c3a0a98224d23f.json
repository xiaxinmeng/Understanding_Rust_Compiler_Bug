{"sha": "18918769baf49acc4067eabdc0c3a0a98224d23f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4OTE4NzY5YmFmNDlhY2M0MDY3ZWFiZGMwYzNhMGE5ODIyNGQyM2Y=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-23T18:38:25Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-23T18:38:25Z"}, "message": "Smarter join lines", "tree": {"sha": "5fd8881f035ef6177feb272d6984b38f4325ecfe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5fd8881f035ef6177feb272d6984b38f4325ecfe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/18918769baf49acc4067eabdc0c3a0a98224d23f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/18918769baf49acc4067eabdc0c3a0a98224d23f", "html_url": "https://github.com/rust-lang/rust/commit/18918769baf49acc4067eabdc0c3a0a98224d23f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/18918769baf49acc4067eabdc0c3a0a98224d23f/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6dcf87fb5f17393028a031b00a562ea8b74267ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/6dcf87fb5f17393028a031b00a562ea8b74267ca", "html_url": "https://github.com/rust-lang/rust/commit/6dcf87fb5f17393028a031b00a562ea8b74267ca"}], "stats": {"total": 37, "additions": 34, "deletions": 3}, "files": [{"sha": "b29603da310b9b3d62537c75c29c41a9b868eedf", "filename": "crates/libeditor/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/18918769baf49acc4067eabdc0c3a0a98224d23f/crates%2Flibeditor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18918769baf49acc4067eabdc0c3a0a98224d23f/crates%2Flibeditor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Flib.rs?ref=18918769baf49acc4067eabdc0c3a0a98224d23f", "patch": "@@ -12,7 +12,7 @@ mod typing;\n use libsyntax2::{\n     ast::{self, NameOwner},\n     AstNode,\n-    algo::{walk, find_leaf_at_offset, find_covering_node},\n+    algo::{walk, find_leaf_at_offset},\n     SyntaxKind::{self, *},\n };\n pub use libsyntax2::{ParsedFile, TextRange, TextUnit};"}, {"sha": "918f2325c0020f6368e1030ca92224ad0edf955e", "filename": "crates/libeditor/src/typing.rs", "status": "modified", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/18918769baf49acc4067eabdc0c3a0a98224d23f/crates%2Flibeditor%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18918769baf49acc4067eabdc0c3a0a98224d23f/crates%2Flibeditor%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Ftyping.rs?ref=18918769baf49acc4067eabdc0c3a0a98224d23f", "patch": "@@ -5,6 +5,7 @@ use libsyntax2::{\n         walk::preorder,\n         find_covering_node,\n     },\n+    SyntaxKind::*,\n };\n \n use {ActionResult, EditBuilder};\n@@ -68,6 +69,24 @@ fn remove_newline(\n     node_text: &str,\n     offset: TextUnit,\n ) {\n+    if node.kind() == WHITESPACE && node_text.bytes().filter(|&b| b == b'\\n').count() == 1 {\n+        match (node.prev_sibling(), node.next_sibling()) {\n+            (Some(prev), Some(next)) => {\n+                if prev.kind() == COMMA && (next.kind() == R_PAREN || next.kind() == R_BRACK) {\n+                    let range = TextRange::from_to(prev.range().start(), node.range().end());\n+                    edit.delete(range);\n+                } else {\n+                    edit.replace(\n+                        node.range(),\n+                        compute_ws(prev, next).to_string(),\n+                    );\n+                }\n+                return;\n+            }\n+            _ => (),\n+        }\n+    }\n+\n     let suff = &node_text[TextRange::from_to(\n         offset - node.range().start() + TextUnit::of_char('\\n'),\n         TextUnit::of_str(node_text),\n@@ -79,3 +98,15 @@ fn remove_newline(\n         \" \".to_string(),\n     );\n }\n+\n+fn compute_ws(left: SyntaxNodeRef, right: SyntaxNodeRef) -> &'static str {\n+    match left.kind() {\n+        L_PAREN | L_BRACK => return \"\",\n+        _ => (),\n+    }\n+    match right.kind() {\n+        R_PAREN | R_BRACK => return \"\",\n+        _ => (),\n+    }\n+    \" \"\n+}"}, {"sha": "e5088ad274918b28b8497d946c2a9cf6dfd30a79", "filename": "crates/libeditor/tests/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/18918769baf49acc4067eabdc0c3a0a98224d23f/crates%2Flibeditor%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/18918769baf49acc4067eabdc0c3a0a98224d23f/crates%2Flibeditor%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Ftests%2Ftest.rs?ref=18918769baf49acc4067eabdc0c3a0a98224d23f", "patch": "@@ -195,7 +195,7 @@ fn foo() {\n }\n \", r\"\n fn foo() {\n-    <|>foo(1, )\n+    <|>foo(1)\n }\n \");\n }\n@@ -221,7 +221,7 @@ fn foo() {\n }\n \", r\"\n fn foo() {\n-    foo(1, 2, 3, )\n+    foo(1, 2, 3)\n }\n \");\n }"}]}