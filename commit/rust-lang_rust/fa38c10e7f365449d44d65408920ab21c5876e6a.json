{"sha": "fa38c10e7f365449d44d65408920ab21c5876e6a", "node_id": "C_kwDOAAsO6NoAKGZhMzhjMTBlN2YzNjU0NDlkNDRkNjU0MDg5MjBhYjIxYzU4NzZlNmE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-24T01:09:15Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-09-24T01:09:15Z"}, "message": "Auto merge of #13288 - Veykril:variant-body, r=Veykril\n\nFix diagnostics not working in enum variant bodies\n\ncc https://github.com/rust-lang/rust-analyzer/pull/12966", "tree": {"sha": "01e75e48461d5ff8204f7d75403faad73f56bcb4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01e75e48461d5ff8204f7d75403faad73f56bcb4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa38c10e7f365449d44d65408920ab21c5876e6a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa38c10e7f365449d44d65408920ab21c5876e6a", "html_url": "https://github.com/rust-lang/rust/commit/fa38c10e7f365449d44d65408920ab21c5876e6a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa38c10e7f365449d44d65408920ab21c5876e6a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e7bb5e042e51f141a4b3b50a3240f4555ebd3ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e7bb5e042e51f141a4b3b50a3240f4555ebd3ca", "html_url": "https://github.com/rust-lang/rust/commit/4e7bb5e042e51f141a4b3b50a3240f4555ebd3ca"}, {"sha": "0231d19f3fba410896d52fa345fe1967c2ea8f55", "url": "https://api.github.com/repos/rust-lang/rust/commits/0231d19f3fba410896d52fa345fe1967c2ea8f55", "html_url": "https://github.com/rust-lang/rust/commit/0231d19f3fba410896d52fa345fe1967c2ea8f55"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "e1f69001e80029676da905aa754cd314414db6a7", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fa38c10e7f365449d44d65408920ab21c5876e6a/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa38c10e7f365449d44d65408920ab21c5876e6a/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=fa38c10e7f365449d44d65408920ab21c5876e6a", "patch": "@@ -50,7 +50,7 @@ use hir_def::{\n     resolver::{HasResolver, Resolver},\n     src::HasSource as _,\n     AdtId, AssocItemId, AssocItemLoc, AttrDefId, ConstId, ConstParamId, DefWithBodyId, EnumId,\n-    FunctionId, GenericDefId, HasModule, ImplId, ItemContainerId, LifetimeParamId,\n+    EnumVariantId, FunctionId, GenericDefId, HasModule, ImplId, ItemContainerId, LifetimeParamId,\n     LocalEnumVariantId, LocalFieldId, Lookup, MacroExpander, MacroId, ModuleId, StaticId, StructId,\n     TraitId, TypeAliasId, TypeOrConstParamId, TypeParamId, UnionId,\n };\n@@ -348,7 +348,10 @@ impl ModuleDef {\n             ModuleDef::Module(it) => it.id.into(),\n             ModuleDef::Const(it) => it.id.into(),\n             ModuleDef::Static(it) => it.id.into(),\n-            _ => return Vec::new(),\n+            ModuleDef::Variant(it) => {\n+                EnumVariantId { parent: it.parent.into(), local_id: it.id }.into()\n+            }\n+            ModuleDef::BuiltinType(_) | ModuleDef::Macro(_) => return Vec::new(),\n         };\n \n         let module = match self.module(db) {\n@@ -537,6 +540,12 @@ impl Module {\n                     }\n                     acc.extend(decl.diagnostics(db))\n                 }\n+                ModuleDef::Adt(Adt::Enum(e)) => {\n+                    for v in e.variants(db) {\n+                        acc.extend(ModuleDef::Variant(v).diagnostics(db));\n+                    }\n+                    acc.extend(decl.diagnostics(db))\n+                }\n                 _ => acc.extend(decl.diagnostics(db)),\n             }\n         }"}]}