{"sha": "c76cdce3d953759a53d4990af0f5fb472cbc04de", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3NmNkY2UzZDk1Mzc1OWE1M2Q0OTkwYWYwZjVmYjQ3MmNiYzA0ZGU=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2017-12-18T15:35:45Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2017-12-18T15:35:45Z"}, "message": "Prevent rustc overwriting input files\n\nIf rustc is invoked on a file that would be overwritten by the\ncompilation, the compilation now fails, to avoid accidental loss. This\nresolves #13019.", "tree": {"sha": "dcbcbc14b7064b3da433a12cc9bba35969e1ea03", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dcbcbc14b7064b3da433a12cc9bba35969e1ea03"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c76cdce3d953759a53d4990af0f5fb472cbc04de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c76cdce3d953759a53d4990af0f5fb472cbc04de", "html_url": "https://github.com/rust-lang/rust/commit/c76cdce3d953759a53d4990af0f5fb472cbc04de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c76cdce3d953759a53d4990af0f5fb472cbc04de/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53a6d14e5bb8b1915a5f0b9371bbf0da934ed052", "url": "https://api.github.com/repos/rust-lang/rust/commits/53a6d14e5bb8b1915a5f0b9371bbf0da934ed052", "html_url": "https://github.com/rust-lang/rust/commit/53a6d14e5bb8b1915a5f0b9371bbf0da934ed052"}], "stats": {"total": 66, "additions": 63, "deletions": 3}, "files": [{"sha": "ef05c9b07794254c3d54ecb2d8a970a764667e78", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/c76cdce3d953759a53d4990af0f5fb472cbc04de/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c76cdce3d953759a53d4990af0f5fb472cbc04de/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=c76cdce3d953759a53d4990af0f5fb472cbc04de", "patch": "@@ -528,6 +528,25 @@ impl OutputFilenames {\n     pub fn filestem(&self) -> String {\n         format!(\"{}{}\", self.out_filestem, self.extra)\n     }\n+\n+    pub fn contains_path(&self, input_path: &PathBuf) -> bool {\n+        let input_path = input_path.canonicalize().ok();\n+        if input_path.is_none() {\n+            return false\n+        }\n+        match self.single_output_file {\n+            Some(ref output_path) => output_path.canonicalize().ok() == input_path,\n+            None => {\n+                for k in self.outputs.keys() {\n+                    let output_path = self.path(k.to_owned());\n+                    if output_path.canonicalize().ok() == input_path {\n+                        return true;\n+                    }\n+                }\n+                false\n+            }\n+        }\n+    }\n }\n \n pub fn host_triple() -> &'static str {\n@@ -596,6 +615,12 @@ impl Options {\n             ).map(|(src, dst)| (src.clone(), dst.clone())).collect()\n         )\n     }\n+\n+    /// True if there will be an output file generated\n+    pub fn will_create_output_file(&self) -> bool {\n+        !self.debugging_opts.parse_only && // The file is just being parsed\n+            !self.debugging_opts.ls // The file is just being queried\n+    }\n }\n \n // The type of entry function, so"}, {"sha": "2bc0b39dd0d1a5a97c6ed1cb677d5d8b36dd61b3", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c76cdce3d953759a53d4990af0f5fb472cbc04de/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c76cdce3d953759a53d4990af0f5fb472cbc04de/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=c76cdce3d953759a53d4990af0f5fb472cbc04de", "patch": "@@ -232,11 +232,25 @@ pub fn run_compiler<'a>(args: &[String],\n     let loader = file_loader.unwrap_or(box RealFileLoader);\n     let codemap = Rc::new(CodeMap::with_file_loader(loader, sopts.file_path_mapping()));\n     let mut sess = session::build_session_with_codemap(\n-        sopts, input_file_path, descriptions, codemap, emitter_dest,\n+        sopts, input_file_path.clone(), descriptions, codemap, emitter_dest,\n     );\n     rustc_trans::init(&sess);\n     rustc_lint::register_builtins(&mut sess.lint_store.borrow_mut(), Some(&sess));\n \n+    // Ensure the source file isn't accidentally overwritten during compilation.\n+    match input_file_path {\n+        Some(input_file_path) => {\n+            if driver::build_output_filenames(&input, &odir, &ofile, &[], &sess)\n+                .contains_path(&input_file_path) && sess.opts.will_create_output_file() {\n+                sess.err(&format!(\n+                    \"the input file \\\"{}\\\" would be overwritten by the generated executable\",\n+                    input_file_path.display()));\n+                return (Err(CompileIncomplete::Stopped), Some(sess));\n+            }\n+        },\n+        None => {}\n+    }\n+\n     let mut cfg = config::build_configuration(&sess, cfg);\n     target_features::add_configuration(&mut cfg, &sess);\n     sess.parse_sess.config = cfg;"}, {"sha": "0554627d67753cd7a79b57140cf66cf41550f1d2", "filename": "src/test/run-make/output-filename-overwrites-input/Makefile", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/c76cdce3d953759a53d4990af0f5fb472cbc04de/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/c76cdce3d953759a53d4990af0f5fb472cbc04de/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2FMakefile?ref=c76cdce3d953759a53d4990af0f5fb472cbc04de", "patch": "@@ -0,0 +1,10 @@\n+-include ../tools.mk\n+\n+all:\n+\tcp foo.rs $(TMPDIR)/foo\n+\t$(RUSTC) $(TMPDIR)/foo 2>&1 \\\n+\t\t| $(CGREP) -e \"the input file \\\".*foo\\\" would be overwritten by the generated executable\"\n+\t$(RUSTC) foo.rs 2>&1 && $(RUSTC) -Z ls $(TMPDIR)/foo 2>&1\n+\tcp foo.rs $(TMPDIR)/foo.rs\n+\t$(RUSTC) $(TMPDIR)/foo.rs -o $(TMPDIR)/foo.rs 2>&1 \\\n+\t\t| $(CGREP) -e \"the input file \\\".*foo.rs\\\" would be overwritten by the generated executable\""}, {"sha": "046d27a9f0fe55586ed5f82a1533900e04e6b1ec", "filename": "src/test/run-make/output-filename-overwrites-input/foo.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c76cdce3d953759a53d4990af0f5fb472cbc04de/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c76cdce3d953759a53d4990af0f5fb472cbc04de/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Foutput-filename-overwrites-input%2Ffoo.rs?ref=c76cdce3d953759a53d4990af0f5fb472cbc04de", "patch": "@@ -0,0 +1,11 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {}"}, {"sha": "f161fe9f8e8df2f8d4ed7ac6ae31c35149492d29", "filename": "src/test/run-make/weird-output-filenames/Makefile", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c76cdce3d953759a53d4990af0f5fb472cbc04de/src%2Ftest%2Frun-make%2Fweird-output-filenames%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/c76cdce3d953759a53d4990af0f5fb472cbc04de/src%2Ftest%2Frun-make%2Fweird-output-filenames%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fweird-output-filenames%2FMakefile?ref=c76cdce3d953759a53d4990af0f5fb472cbc04de", "patch": "@@ -7,8 +7,8 @@ all:\n \tcp foo.rs $(TMPDIR)/.foo.bar\n \t$(RUSTC) $(TMPDIR)/.foo.bar 2>&1 \\\n \t\t| $(CGREP) -e \"invalid character.*in crate name:\"\n-\tcp foo.rs $(TMPDIR)/+foo+bar\n-\t$(RUSTC) $(TMPDIR)/+foo+bar 2>&1 \\\n+\tcp foo.rs $(TMPDIR)/+foo+bar.rs\n+\t$(RUSTC) $(TMPDIR)/+foo+bar.rs 2>&1 \\\n \t\t| $(CGREP) -e \"invalid character.*in crate name:\"\n \tcp foo.rs $(TMPDIR)/-foo.rs\n \t$(RUSTC) $(TMPDIR)/-foo.rs 2>&1 \\"}]}