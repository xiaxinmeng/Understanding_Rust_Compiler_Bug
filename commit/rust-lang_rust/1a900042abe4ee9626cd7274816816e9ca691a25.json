{"sha": "1a900042abe4ee9626cd7274816816e9ca691a25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhOTAwMDQyYWJlNGVlOTYyNmNkNzI3NDgxNjgxNmU5Y2E2OTFhMjU=", "commit": {"author": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-07-15T21:47:03Z"}, "committer": {"name": "xFrednet", "email": "xFrednet@gmail.com", "date": "2021-07-15T21:47:03Z"}, "message": "Added diagnostic items to functions for Clippy", "tree": {"sha": "a951d4316bd1c4cd639bc01f2fd87e57d48162c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a951d4316bd1c4cd639bc01f2fd87e57d48162c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a900042abe4ee9626cd7274816816e9ca691a25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a900042abe4ee9626cd7274816816e9ca691a25", "html_url": "https://github.com/rust-lang/rust/commit/1a900042abe4ee9626cd7274816816e9ca691a25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a900042abe4ee9626cd7274816816e9ca691a25/comments", "author": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "committer": {"login": "xFrednet", "id": 17087237, "node_id": "MDQ6VXNlcjE3MDg3MjM3", "avatar_url": "https://avatars.githubusercontent.com/u/17087237?v=4", "gravatar_id": "", "url": "https://api.github.com/users/xFrednet", "html_url": "https://github.com/xFrednet", "followers_url": "https://api.github.com/users/xFrednet/followers", "following_url": "https://api.github.com/users/xFrednet/following{/other_user}", "gists_url": "https://api.github.com/users/xFrednet/gists{/gist_id}", "starred_url": "https://api.github.com/users/xFrednet/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/xFrednet/subscriptions", "organizations_url": "https://api.github.com/users/xFrednet/orgs", "repos_url": "https://api.github.com/users/xFrednet/repos", "events_url": "https://api.github.com/users/xFrednet/events{/privacy}", "received_events_url": "https://api.github.com/users/xFrednet/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3982eb35cabe3a99194d768d34a92347967c3fa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/3982eb35cabe3a99194d768d34a92347967c3fa2", "html_url": "https://github.com/rust-lang/rust/commit/3982eb35cabe3a99194d768d34a92347967c3fa2"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "944e896ba6fd5c02b48baa2403fac336d06fa173", "filename": "compiler/rustc_span/src/symbol.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1a900042abe4ee9626cd7274816816e9ca691a25/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a900042abe4ee9626cd7274816816e9ca691a25/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fsymbol.rs?ref=1a900042abe4ee9626cd7274816816e9ca691a25", "patch": "@@ -368,6 +368,8 @@ symbols! {\n         closure,\n         closure_to_fn_coercion,\n         cmp,\n+        cmp_max,\n+        cmp_min,\n         cmpxchg16b_target_feature,\n         cmse_nonsecure_entry,\n         coerce_unsized,\n@@ -672,6 +674,7 @@ symbols! {\n         item,\n         item_like_imports,\n         iter,\n+        iter_repeat,\n         keyword,\n         kind,\n         kreg,\n@@ -738,6 +741,12 @@ symbols! {\n         maybe_uninit,\n         maybe_uninit_uninit,\n         maybe_uninit_zeroed,\n+        mem_discriminant,\n+        mem_drop,\n+        mem_forget,\n+        mem_replace,\n+        mem_size_of,\n+        mem_size_of_val,\n         mem_uninitialized,\n         mem_zeroed,\n         member_constraints,"}, {"sha": "79610bb409d37c06b383ea7622452560b179ebf6", "filename": "library/core/src/cmp.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1a900042abe4ee9626cd7274816816e9ca691a25/library%2Fcore%2Fsrc%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a900042abe4ee9626cd7274816816e9ca691a25/library%2Fcore%2Fsrc%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcmp.rs?ref=1a900042abe4ee9626cd7274816816e9ca691a25", "patch": "@@ -1104,6 +1104,7 @@ pub macro PartialOrd($item:item) {\n #[inline]\n #[must_use]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"cmp_min\")]\n pub fn min<T: Ord>(v1: T, v2: T) -> T {\n     v1.min(v2)\n }\n@@ -1166,6 +1167,7 @@ pub fn min_by_key<T, F: FnMut(&T) -> K, K: Ord>(v1: T, v2: T, mut f: F) -> T {\n #[inline]\n #[must_use]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"cmp_max\")]\n pub fn max<T: Ord>(v1: T, v2: T) -> T {\n     v1.max(v2)\n }"}, {"sha": "733142ed01103ce3e41806d56fecf1561a03d00a", "filename": "library/core/src/iter/sources/repeat.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1a900042abe4ee9626cd7274816816e9ca691a25/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a900042abe4ee9626cd7274816816e9ca691a25/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat.rs?ref=1a900042abe4ee9626cd7274816816e9ca691a25", "patch": "@@ -51,6 +51,7 @@ use crate::iter::{FusedIterator, TrustedLen};\n /// ```\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"iter_repeat\")]\n pub fn repeat<T: Clone>(elt: T) -> Repeat<T> {\n     Repeat { element: elt }\n }"}, {"sha": "2c75de39ffa2fc3644cdf479786903e046788f7a", "filename": "library/core/src/mem/mod.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1a900042abe4ee9626cd7274816816e9ca691a25/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a900042abe4ee9626cd7274816816e9ca691a25/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmod.rs?ref=1a900042abe4ee9626cd7274816816e9ca691a25", "patch": "@@ -140,6 +140,7 @@ pub use crate::intrinsics::transmute;\n #[inline]\n #[rustc_const_stable(feature = \"const_forget\", since = \"1.46.0\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"mem_forget\")]\n pub const fn forget<T>(t: T) {\n     let _ = ManuallyDrop::new(t);\n }\n@@ -298,6 +299,7 @@ pub fn forget_unsized<T: ?Sized>(t: T) {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_promotable]\n #[rustc_const_stable(feature = \"const_size_of\", since = \"1.24.0\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"mem_size_of\")]\n pub const fn size_of<T>() -> usize {\n     intrinsics::size_of::<T>()\n }\n@@ -324,6 +326,7 @@ pub const fn size_of<T>() -> usize {\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[rustc_const_unstable(feature = \"const_size_of_val\", issue = \"46571\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"mem_size_of_val\")]\n pub const fn size_of_val<T: ?Sized>(val: &T) -> usize {\n     // SAFETY: `val` is a reference, so it's a valid raw pointer\n     unsafe { intrinsics::size_of_val(val) }\n@@ -814,6 +817,7 @@ pub fn take<T: Default>(dest: &mut T) -> T {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n #[must_use = \"if you don't need the old value, you can just assign the new value directly\"]\n #[rustc_const_unstable(feature = \"const_replace\", issue = \"83164\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"mem_replace\")]\n pub const fn replace<T>(dest: &mut T, src: T) -> T {\n     // SAFETY: We read from `dest` but directly write `src` into it afterwards,\n     // such that the old value is not duplicated. Nothing is dropped and\n@@ -888,6 +892,7 @@ pub const fn replace<T>(dest: &mut T, src: T) -> T {\n /// [`RefCell`]: crate::cell::RefCell\n #[inline]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"mem_drop\")]\n pub fn drop<T>(_x: T) {}\n \n /// Interprets `src` as having type `&U`, and then reads `src` without moving\n@@ -1015,6 +1020,7 @@ impl<T> fmt::Debug for Discriminant<T> {\n /// ```\n #[stable(feature = \"discriminant_value\", since = \"1.21.0\")]\n #[rustc_const_unstable(feature = \"const_discriminant\", issue = \"69821\")]\n+#[cfg_attr(not(test), rustc_diagnostic_item = \"mem_discriminant\")]\n pub const fn discriminant<T>(v: &T) -> Discriminant<T> {\n     Discriminant(intrinsics::discriminant_value(v))\n }"}]}