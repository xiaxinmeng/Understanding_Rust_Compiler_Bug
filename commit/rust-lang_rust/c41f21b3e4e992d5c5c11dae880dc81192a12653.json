{"sha": "c41f21b3e4e992d5c5c11dae880dc81192a12653", "node_id": "C_kwDOAAsO6NoAKGM0MWYyMWIzZTRlOTkyZDVjNWMxMWRhZTg4MGRjODExOTJhMTI2NTM", "commit": {"author": {"name": "Thom Chiovoloni", "email": "thom@shift.click", "date": "2022-08-30T08:45:30Z"}, "committer": {"name": "Thom Chiovoloni", "email": "thom@shift.click", "date": "2022-08-30T12:03:22Z"}, "message": "Fix UB in Windows `DirBuffIter` (provenance and alignment)", "tree": {"sha": "50ce83f3b728ae323e8955f0d3d55ebd8a7fe30d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50ce83f3b728ae323e8955f0d3d55ebd8a7fe30d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c41f21b3e4e992d5c5c11dae880dc81192a12653", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niHUEABYKAB0WIQQszICQ1r0Zqrp7OLPXcz0dendfCgUCYw38nwAKCRDXcz0dendf\nCpodAQCb/V09AGujqG64kTeGTzb4K2Q4tO12zQsDFSFPvpj2RwEA/hR3VrU5VHEg\ndFGkS3SDNwYLcMg2QaSA9WdbI6mM5AE=\n=G01X\n-----END PGP SIGNATURE-----", "payload": "tree 50ce83f3b728ae323e8955f0d3d55ebd8a7fe30d\nparent 5c3490c90186a1b4d1ac66b57ddede55410409e1\nauthor Thom Chiovoloni <thom@shift.click> 1661849130 -0700\ncommitter Thom Chiovoloni <thom@shift.click> 1661861002 -0700\n\nFix UB in Windows `DirBuffIter` (provenance and alignment)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c41f21b3e4e992d5c5c11dae880dc81192a12653", "html_url": "https://github.com/rust-lang/rust/commit/c41f21b3e4e992d5c5c11dae880dc81192a12653", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c41f21b3e4e992d5c5c11dae880dc81192a12653/comments", "author": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thomcc", "id": 860665, "node_id": "MDQ6VXNlcjg2MDY2NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/860665?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thomcc", "html_url": "https://github.com/thomcc", "followers_url": "https://api.github.com/users/thomcc/followers", "following_url": "https://api.github.com/users/thomcc/following{/other_user}", "gists_url": "https://api.github.com/users/thomcc/gists{/gist_id}", "starred_url": "https://api.github.com/users/thomcc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thomcc/subscriptions", "organizations_url": "https://api.github.com/users/thomcc/orgs", "repos_url": "https://api.github.com/users/thomcc/repos", "events_url": "https://api.github.com/users/thomcc/events{/privacy}", "received_events_url": "https://api.github.com/users/thomcc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c3490c90186a1b4d1ac66b57ddede55410409e1", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c3490c90186a1b4d1ac66b57ddede55410409e1", "html_url": "https://github.com/rust-lang/rust/commit/5c3490c90186a1b4d1ac66b57ddede55410409e1"}], "stats": {"total": 17, "additions": 10, "deletions": 7}, "files": [{"sha": "0aa7c50ded1c7acfca41ad6c67eaa0dd463171e1", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 10, "deletions": 7, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/c41f21b3e4e992d5c5c11dae880dc81192a12653/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c41f21b3e4e992d5c5c11dae880dc81192a12653/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=c41f21b3e4e992d5c5c11dae880dc81192a12653", "patch": "@@ -658,18 +658,18 @@ impl File {\n \n /// A buffer for holding directory entries.\n struct DirBuff {\n-    buffer: Vec<u8>,\n+    buffer: Box<Align8<[u8; Self::BUFFER_SIZE]>>,\n }\n impl DirBuff {\n+    const BUFFER_SIZE: usize = 1024;\n     fn new() -> Self {\n-        const BUFFER_SIZE: usize = 1024;\n-        Self { buffer: vec![0_u8; BUFFER_SIZE] }\n+        Self { buffer: Box::new(Align8([0u8; Self::BUFFER_SIZE])) }\n     }\n     fn capacity(&self) -> usize {\n-        self.buffer.len()\n+        self.buffer.0.len()\n     }\n     fn as_mut_ptr(&mut self) -> *mut u8 {\n-        self.buffer.as_mut_ptr().cast()\n+        self.buffer.0.as_mut_ptr().cast()\n     }\n     /// Returns a `DirBuffIter`.\n     fn iter(&self) -> DirBuffIter<'_> {\n@@ -678,7 +678,7 @@ impl DirBuff {\n }\n impl AsRef<[u8]> for DirBuff {\n     fn as_ref(&self) -> &[u8] {\n-        &self.buffer\n+        &self.buffer.0\n     }\n }\n \n@@ -706,9 +706,12 @@ impl<'a> Iterator for DirBuffIter<'a> {\n         // used to get the file name slice.\n         let (name, is_directory, next_entry) = unsafe {\n             let info = buffer.as_ptr().cast::<c::FILE_ID_BOTH_DIR_INFO>();\n+            // Guaranteed to be aligned in documentation for\n+            // https://docs.microsoft.com/en-us/windows/win32/api/winbase/ns-winbase-file_id_both_dir_info\n+            assert!(info.is_aligned());\n             let next_entry = (*info).NextEntryOffset as usize;\n             let name = crate::slice::from_raw_parts(\n-                (*info).FileName.as_ptr().cast::<u16>(),\n+                ptr::addr_of!((*info).FileName).cast::<u16>(),\n                 (*info).FileNameLength as usize / size_of::<u16>(),\n             );\n             let is_directory = ((*info).FileAttributes & c::FILE_ATTRIBUTE_DIRECTORY) != 0;"}]}