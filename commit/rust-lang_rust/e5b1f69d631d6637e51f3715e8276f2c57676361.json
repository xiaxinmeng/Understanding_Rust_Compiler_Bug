{"sha": "e5b1f69d631d6637e51f3715e8276f2c57676361", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU1YjFmNjlkNjMxZDY2MzdlNTFmMzcxNWU4Mjc2ZjJjNTc2NzYzNjE=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2020-11-01T04:38:41Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2020-11-01T04:38:41Z"}, "message": "Inline Default::default() for atomics", "tree": {"sha": "ec175402f3db7d15d6cec662bc40c6bf0872b387", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec175402f3db7d15d6cec662bc40c6bf0872b387"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e5b1f69d631d6637e51f3715e8276f2c57676361", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e5b1f69d631d6637e51f3715e8276f2c57676361", "html_url": "https://github.com/rust-lang/rust/commit/e5b1f69d631d6637e51f3715e8276f2c57676361", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e5b1f69d631d6637e51f3715e8276f2c57676361/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a6403b0f04b58a35cb9f3e544b2847ee09bcf3a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6403b0f04b58a35cb9f3e544b2847ee09bcf3a4", "html_url": "https://github.com/rust-lang/rust/commit/a6403b0f04b58a35cb9f3e544b2847ee09bcf3a4"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "a3d93d7074b69e00df0fea87935c5d3efb908731", "filename": "library/core/src/sync/atomic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e5b1f69d631d6637e51f3715e8276f2c57676361/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e5b1f69d631d6637e51f3715e8276f2c57676361/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fsync%2Fatomic.rs?ref=e5b1f69d631d6637e51f3715e8276f2c57676361", "patch": "@@ -155,6 +155,7 @@ pub struct AtomicBool {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl Default for AtomicBool {\n     /// Creates an `AtomicBool` initialized to `false`.\n+    #[inline]\n     fn default() -> Self {\n         Self::new(false)\n     }\n@@ -1212,6 +1213,7 @@ macro_rules! atomic_int {\n \n         #[$stable]\n         impl Default for $atomic_type {\n+            #[inline]\n             fn default() -> Self {\n                 Self::new(Default::default())\n             }"}]}