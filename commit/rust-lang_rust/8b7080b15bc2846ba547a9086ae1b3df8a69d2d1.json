{"sha": "8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "node_id": "C_kwDOAAsO6NoAKDhiNzA4MGIxNWJjMjg0NmJhNTQ3YTkwODZhZTFiM2RmOGE2OWQyZDE", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-05-03T18:47:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-03T18:47:25Z"}, "message": "Rollup merge of #110943 - RalfJung:interpret-unsized-arg-ice, r=oli-obk\n\ninterpret: fail more gracefully on uninit unsized locals\n\nr? `@oli-obk`\n\nFixes https://github.com/rust-lang/rust/issues/68538", "tree": {"sha": "30ad5a23b4ce36aa48562bb34e432a0e017afaae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30ad5a23b4ce36aa48562bb34e432a0e017afaae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkUqw9CRBK7hj4Ov3rIwAAYXEIAFpWEgldZ80AHOv0erUtUBwi\n4mV/cbAoZOCS889AxQVFgD9nnmX8uZgsYz6/t85fI32NS4GglfUDGA1ignx3ppE2\nQQMrKGrsYgg4AyyDgATJBzbKdPnDgJuwVQNU74bQLtF3ysnuy9qg3s9lPqQnoRst\nUfXxBoAEuCEpo4Ex7z3ASNVfY0cyDFmxQki6WMXKPIIOG9KlaxrNCKlBcBre18eO\nNKwD+CaVP/UCgIVlVL0mUpBK132GIurvUG+E9wesZB4MKCmuplWogB/CTyrGS6gh\nropUF2cl0vz4Y9Z+Esn5t3/AoN0Re3rJUFQReCXCZQ2f+B1Hhwlqe3kEmCJW8SM=\n=m28W\n-----END PGP SIGNATURE-----\n", "payload": "tree 30ad5a23b4ce36aa48562bb34e432a0e017afaae\nparent 0228994cdf6dbf59450f64c0bf983ac9fbb1cfc4\nparent 6fcf165586364dc3feff57f3aa4eb4f637a6d4d5\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1683139645 +0530\ncommitter GitHub <noreply@github.com> 1683139645 +0530\n\nRollup merge of #110943 - RalfJung:interpret-unsized-arg-ice, r=oli-obk\n\ninterpret: fail more gracefully on uninit unsized locals\n\nr? `@oli-obk`\n\nFixes https://github.com/rust-lang/rust/issues/68538\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "html_url": "https://github.com/rust-lang/rust/commit/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0228994cdf6dbf59450f64c0bf983ac9fbb1cfc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/0228994cdf6dbf59450f64c0bf983ac9fbb1cfc4", "html_url": "https://github.com/rust-lang/rust/commit/0228994cdf6dbf59450f64c0bf983ac9fbb1cfc4"}, {"sha": "6fcf165586364dc3feff57f3aa4eb4f637a6d4d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/6fcf165586364dc3feff57f3aa4eb4f637a6d4d5", "html_url": "https://github.com/rust-lang/rust/commit/6fcf165586364dc3feff57f3aa4eb4f637a6d4d5"}], "stats": {"total": 21, "additions": 20, "deletions": 1}, "files": [{"sha": "b10f2e9f862dbc513714a580c0e08b157d1c3c91", "filename": "compiler/rustc_const_eval/src/const_eval/valtrees.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fvaltrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fvaltrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Fconst_eval%2Fvaltrees.rs?ref=8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "patch": "@@ -337,7 +337,7 @@ fn valtree_into_mplace<'tcx>(\n \n     match ty.kind() {\n         ty::FnDef(_, _) => {\n-            ecx.write_immediate(Immediate::Uninit, &place.into()).unwrap();\n+            // Zero-sized type, nothing to do.\n         }\n         ty::Bool | ty::Int(_) | ty::Uint(_) | ty::Float(_) | ty::Char => {\n             let scalar_int = valtree.unwrap_leaf();"}, {"sha": "a7f66071fe2bbd07a06e9144f21a8196a9d6d1c3", "filename": "compiler/rustc_const_eval/src/interpret/operand.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Foperand.rs?ref=8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "patch": "@@ -245,6 +245,12 @@ impl<'tcx, Prov: Provenance> ImmTy<'tcx, Prov> {\n impl<'tcx, Prov: Provenance> OpTy<'tcx, Prov> {\n     pub fn len(&self, cx: &impl HasDataLayout) -> InterpResult<'tcx, u64> {\n         if self.layout.is_unsized() {\n+            if matches!(self.op, Operand::Immediate(Immediate::Uninit)) {\n+                // Uninit unsized places shouldn't occur. In the interpreter we have them\n+                // temporarily for unsized arguments before their value is put in; in ConstProp they\n+                // remain uninit and this code can actually be reached.\n+                throw_inval!(UninitUnsizedLocal);\n+            }\n             // There are no unsized immediates.\n             self.assert_mem_place().len(cx)\n         } else {"}, {"sha": "e45284ca506554ce1b282595cc7f90b6a1729968", "filename": "compiler/rustc_middle/src/mir/interpret/error.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Finterpret%2Ferror.rs?ref=8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "patch": "@@ -134,6 +134,9 @@ pub enum InvalidProgramInfo<'tcx> {\n     FnAbiAdjustForForeignAbi(call::AdjustForForeignAbiError),\n     /// SizeOf of unsized type was requested.\n     SizeOfUnsizedType(Ty<'tcx>),\n+    /// An unsized local was accessed without having been initialized.\n+    /// This is not meaningful as we can't even have backing memory for such locals.\n+    UninitUnsizedLocal,\n }\n \n impl fmt::Display for InvalidProgramInfo<'_> {\n@@ -150,6 +153,7 @@ impl fmt::Display for InvalidProgramInfo<'_> {\n             Layout(ref err) => write!(f, \"{err}\"),\n             FnAbiAdjustForForeignAbi(ref err) => write!(f, \"{err}\"),\n             SizeOfUnsizedType(ty) => write!(f, \"size_of called on unsized type `{ty}`\"),\n+            UninitUnsizedLocal => write!(f, \"unsized local is used while uninitialized\"),\n         }\n     }\n }"}, {"sha": "5bffe0206294d80718fdba1d52d1f8cfe11f3ec3", "filename": "tests/ui/const_prop/const-prop-ice.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_prop%2Fconst-prop-ice.rs?ref=8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "previous_filename": "tests/ui/consts/const-prop-ice.rs"}, {"sha": "3bcf2b2de7bd7c01472e4b50a4d5216baec66f85", "filename": "tests/ui/const_prop/const-prop-ice.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-ice.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-ice.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_prop%2Fconst-prop-ice.stderr?ref=8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "previous_filename": "tests/ui/consts/const-prop-ice.stderr"}, {"sha": "d533e394c06fb5cab82cfe774d70b7c7b5d76909", "filename": "tests/ui/const_prop/const-prop-ice2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-ice2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-ice2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_prop%2Fconst-prop-ice2.rs?ref=8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "previous_filename": "tests/ui/consts/const-prop-ice2.rs"}, {"sha": "2b65ffc2db76058ae536c38470a1ad66a69bf435", "filename": "tests/ui/const_prop/const-prop-ice2.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-ice2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-ice2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_prop%2Fconst-prop-ice2.stderr?ref=8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "previous_filename": "tests/ui/consts/const-prop-ice2.stderr"}, {"sha": "8ab011661e3c51af2f08a12bde127abd558025b4", "filename": "tests/ui/const_prop/const-prop-ice3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-ice3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-ice3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_prop%2Fconst-prop-ice3.rs?ref=8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "previous_filename": "tests/ui/consts/const-prop-ice3.rs"}, {"sha": "8cc5b98250b5ae63aab41b3a90248a7dc582db89", "filename": "tests/ui/const_prop/const-prop-overflowing-casts.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-overflowing-casts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-overflowing-casts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_prop%2Fconst-prop-overflowing-casts.rs?ref=8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "previous_filename": "tests/ui/consts/const-prop-overflowing-casts.rs"}, {"sha": "21426205955be0320855c54db072ddb1d7c881ad", "filename": "tests/ui/const_prop/const-prop-read-static-in-const.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-read-static-in-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-read-static-in-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_prop%2Fconst-prop-read-static-in-const.rs?ref=8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "previous_filename": "tests/ui/consts/const-prop-read-static-in-const.rs"}, {"sha": "793da628587708c289a85c9cc1669a0320f16fdd", "filename": "tests/ui/const_prop/const-prop-read-static-in-const.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-read-static-in-const.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Fconst-prop-read-static-in-const.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_prop%2Fconst-prop-read-static-in-const.stderr?ref=8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "previous_filename": "tests/ui/consts/const-prop-read-static-in-const.stderr"}, {"sha": "c725b3238ea64bad3f7c774b5f12f8aedb47c59c", "filename": "tests/ui/const_prop/unsized-local-ice.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Funsized-local-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8b7080b15bc2846ba547a9086ae1b3df8a69d2d1/tests%2Fui%2Fconst_prop%2Funsized-local-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fconst_prop%2Funsized-local-ice.rs?ref=8b7080b15bc2846ba547a9086ae1b3df8a69d2d1", "patch": "@@ -0,0 +1,9 @@\n+// build-pass\n+//! Regression test for <https://github.com/rust-lang/rust/issues/68538>.\n+#![feature(unsized_fn_params)]\n+\n+pub fn take_unsized_slice(s: [u8]) {\n+    s[0];\n+}\n+\n+fn main() {}"}]}