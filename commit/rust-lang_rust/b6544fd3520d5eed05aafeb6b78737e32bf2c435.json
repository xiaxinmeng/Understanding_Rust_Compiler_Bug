{"sha": "b6544fd3520d5eed05aafeb6b78737e32bf2c435", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2NTQ0ZmQzNTIwZDVlZWQwNWFhZmViNmI3ODczN2UzMmJmMmM0MzU=", "commit": {"author": {"name": "Junseok Lee", "email": "lee.junseok@berkeley.edu", "date": "2015-02-01T02:21:57Z"}, "committer": {"name": "Junseok Lee", "email": "lee.junseok@berkeley.edu", "date": "2015-02-06T07:50:51Z"}, "message": "removed weird example", "tree": {"sha": "d2725e5d6fb3a1004a2fd381aa447088986da898", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2725e5d6fb3a1004a2fd381aa447088986da898"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6544fd3520d5eed05aafeb6b78737e32bf2c435", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6544fd3520d5eed05aafeb6b78737e32bf2c435", "html_url": "https://github.com/rust-lang/rust/commit/b6544fd3520d5eed05aafeb6b78737e32bf2c435", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6544fd3520d5eed05aafeb6b78737e32bf2c435/comments", "author": null, "committer": null, "parents": [{"sha": "715f9a5e8da73e04bff039dddc58800a5e6a24bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/715f9a5e8da73e04bff039dddc58800a5e6a24bd", "html_url": "https://github.com/rust-lang/rust/commit/715f9a5e8da73e04bff039dddc58800a5e6a24bd"}], "stats": {"total": 13, "additions": 0, "deletions": 13}, "files": [{"sha": "ab64d09f9d43f1a768117e89e6d63b9757057178", "filename": "src/libcore/marker.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b6544fd3520d5eed05aafeb6b78737e32bf2c435/src%2Flibcore%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6544fd3520d5eed05aafeb6b78737e32bf2c435/src%2Flibcore%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fmarker.rs?ref=b6544fd3520d5eed05aafeb6b78737e32bf2c435", "patch": "@@ -308,19 +308,6 @@ impl<T: ?Sized> Clone for ContravariantType<T> {\n ///\n /// For more information about variance, refer to this Wikipedia\n /// article <http://en.wikipedia.org/wiki/Variance_%28computer_science%29>.\n-///\n-/// # Example\n-///\n-/// The Cell type is an example which uses unsafe code to achieve\n-/// \"interior\" mutability:\n-///\n-/// ```\n-/// struct Cell<T> { value: T }\n-/// ```\n-///\n-/// The type system would infer that `value` is only read here and\n-/// never written, but in fact `Cell` uses unsafe code to achieve\n-/// interior mutability.\n #[unstable(feature = \"core\",\n            reason = \"likely to change with new variance strategy\")]\n #[lang=\"invariant_type\"]"}]}