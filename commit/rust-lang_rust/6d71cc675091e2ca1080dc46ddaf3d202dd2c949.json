{"sha": "6d71cc675091e2ca1080dc46ddaf3d202dd2c949", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkNzFjYzY3NTA5MWUyY2ExMDgwZGM0NmRkYWYzZDIwMmRkMmM5NDk=", "commit": {"author": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-12-20T22:55:03Z"}, "committer": {"name": "D\u00e1niel Buga", "email": "bugadani@gmail.com", "date": "2020-12-20T22:55:03Z"}, "message": "Move std_path construction into condition", "tree": {"sha": "e88882aeae44a4e56d3b51279e7dd13c87349e10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e88882aeae44a4e56d3b51279e7dd13c87349e10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d71cc675091e2ca1080dc46ddaf3d202dd2c949", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d71cc675091e2ca1080dc46ddaf3d202dd2c949", "html_url": "https://github.com/rust-lang/rust/commit/6d71cc675091e2ca1080dc46ddaf3d202dd2c949", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d71cc675091e2ca1080dc46ddaf3d202dd2c949/comments", "author": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bugadani", "id": 977627, "node_id": "MDQ6VXNlcjk3NzYyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/977627?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bugadani", "html_url": "https://github.com/bugadani", "followers_url": "https://api.github.com/users/bugadani/followers", "following_url": "https://api.github.com/users/bugadani/following{/other_user}", "gists_url": "https://api.github.com/users/bugadani/gists{/gist_id}", "starred_url": "https://api.github.com/users/bugadani/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bugadani/subscriptions", "organizations_url": "https://api.github.com/users/bugadani/orgs", "repos_url": "https://api.github.com/users/bugadani/repos", "events_url": "https://api.github.com/users/bugadani/events{/privacy}", "received_events_url": "https://api.github.com/users/bugadani/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "66c28729016301da78f294aaff15d29567d9d02c", "url": "https://api.github.com/repos/rust-lang/rust/commits/66c28729016301da78f294aaff15d29567d9d02c", "html_url": "https://github.com/rust-lang/rust/commit/66c28729016301da78f294aaff15d29567d9d02c"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "b13462587bc618ef55762577dd16a818ebb424a1", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6d71cc675091e2ca1080dc46ddaf3d202dd2c949/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d71cc675091e2ca1080dc46ddaf3d202dd2c949/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=6d71cc675091e2ca1080dc46ddaf3d202dd2c949", "patch": "@@ -1891,12 +1891,11 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                     self.r.trait_map.insert(id, traits);\n                 }\n \n-                let mut std_path = Vec::with_capacity(1 + path.len());\n-\n-                std_path.push(Segment::from_ident(Ident::with_dummy_span(sym::std)));\n-                std_path.extend(path);\n-\n                 if self.r.primitive_type_table.primitive_types.contains_key(&path[0].ident.name) {\n+                    let mut std_path = Vec::with_capacity(1 + path.len());\n+\n+                    std_path.push(Segment::from_ident(Ident::with_dummy_span(sym::std)));\n+                    std_path.extend(path);\n                     if let PathResult::Module(_) | PathResult::NonModule(_) =\n                         self.resolve_path(&std_path, Some(ns), false, span, CrateLint::No)\n                     {"}]}