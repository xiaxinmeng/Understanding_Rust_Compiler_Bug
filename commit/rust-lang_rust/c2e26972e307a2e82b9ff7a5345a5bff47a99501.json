{"sha": "c2e26972e307a2e82b9ff7a5345a5bff47a99501", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyZTI2OTcyZTMwN2EyZTgyYjlmZjdhNTM0NWE1YmZmNDdhOTk1MDE=", "commit": {"author": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2015-01-03T03:41:40Z"}, "committer": {"name": "Keegan McAllister", "email": "kmcallister@mozilla.com", "date": "2015-01-06T02:21:14Z"}, "message": "Un-gate macro_rules", "tree": {"sha": "90f8e7d444b5da0e4d1c91df22e43b13afd17140", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90f8e7d444b5da0e4d1c91df22e43b13afd17140"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c2e26972e307a2e82b9ff7a5345a5bff47a99501", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c2e26972e307a2e82b9ff7a5345a5bff47a99501", "html_url": "https://github.com/rust-lang/rust/commit/c2e26972e307a2e82b9ff7a5345a5bff47a99501", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c2e26972e307a2e82b9ff7a5345a5bff47a99501/comments", "author": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kmcallister", "id": 444997, "node_id": "MDQ6VXNlcjQ0NDk5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/444997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kmcallister", "html_url": "https://github.com/kmcallister", "followers_url": "https://api.github.com/users/kmcallister/followers", "following_url": "https://api.github.com/users/kmcallister/following{/other_user}", "gists_url": "https://api.github.com/users/kmcallister/gists{/gist_id}", "starred_url": "https://api.github.com/users/kmcallister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kmcallister/subscriptions", "organizations_url": "https://api.github.com/users/kmcallister/orgs", "repos_url": "https://api.github.com/users/kmcallister/repos", "events_url": "https://api.github.com/users/kmcallister/events{/privacy}", "received_events_url": "https://api.github.com/users/kmcallister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0163d3311f0afe7b8dc3b70dba8aa32f318225c", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0163d3311f0afe7b8dc3b70dba8aa32f318225c", "html_url": "https://github.com/rust-lang/rust/commit/d0163d3311f0afe7b8dc3b70dba8aa32f318225c"}], "stats": {"total": 275, "additions": 15, "deletions": 260}, "files": [{"sha": "9194c7a47663d66e343750d8c515e39da09b8c8a", "filename": "src/grammar/verify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Fgrammar%2Fverify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Fgrammar%2Fverify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fverify.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs, plugin, macro_rules)]\n+#![feature(globs, plugin)]\n \n extern crate syntax;\n extern crate rustc;"}, {"sha": "04c0a2e5580f357aeed58dfa324364aa5337a294", "filename": "src/libcoretest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Flibcoretest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Flibcoretest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Flib.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -7,7 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(globs, unsafe_destructor, macro_rules, slicing_syntax, default_type_params)]\n+#![feature(globs, unsafe_destructor, slicing_syntax, default_type_params)]\n #![feature(unboxed_closures)]\n \n extern crate core;"}, {"sha": "917c6e99992f24c2aa084a23d03352b695516cb4", "filename": "src/libfmt_macros/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Flibfmt_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Flibfmt_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibfmt_macros%2Flib.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -23,7 +23,7 @@\n        html_root_url = \"http://doc.rust-lang.org/nightly/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n-#![feature(macro_rules, globs, slicing_syntax)]\n+#![feature(globs, slicing_syntax)]\n #![feature(associated_types)]\n \n pub use self::Piece::*;"}, {"sha": "fe6e28f23a355349c89a3fa0f5ce3fe5e3639c3a", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -37,7 +37,7 @@ use std::ascii::AsciiExt;\n // if you change this list without updating src/doc/reference.md, @cmr will be sad\n static KNOWN_FEATURES: &'static [(&'static str, Status)] = &[\n     (\"globs\", Active),\n-    (\"macro_rules\", Active),\n+    (\"macro_rules\", Accepted),\n     (\"struct_variant\", Accepted),\n     (\"asm\", Active),\n     (\"managed_boxes\", Removed),\n@@ -169,12 +169,7 @@ impl<'a, 'v> Visitor<'v> for MacroVisitor<'a> {\n         let ast::MacInvocTT(ref path, _, _) = mac.node;\n         let id = path.segments.last().unwrap().identifier;\n \n-        if id == token::str_to_ident(\"macro_rules\") {\n-            self.context.gate_feature(\"macro_rules\", path.span, \"macro definitions are \\\n-                not stable enough for use and are subject to change\");\n-        }\n-\n-        else if id == token::str_to_ident(\"asm\") {\n+        if id == token::str_to_ident(\"asm\") {\n             self.context.gate_feature(\"asm\", path.span, \"inline assembly is not \\\n                 stable enough for use and is subject to change\");\n         }"}, {"sha": "0419d85d3914ec32bde0b610532ce62649a5bbcc", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -32,7 +32,7 @@\n        html_root_url = \"http://doc.rust-lang.org/nightly/\")]\n \n #![allow(unknown_features)]\n-#![feature(asm, macro_rules, globs, slicing_syntax)]\n+#![feature(asm, globs, slicing_syntax)]\n #![feature(unboxed_closures, default_type_params)]\n #![feature(old_orphan_check)]\n "}, {"sha": "708830d02598643bed2c33caa802baccd910b628", "filename": "src/test/auxiliary/lint_stability.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Flint_stability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Flint_stability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Flint_stability.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n #![crate_name=\"lint_stability\"]\n #![crate_type = \"lib\"]\n \n-#![feature(macro_rules)]\n-\n #[deprecated]\n pub fn deprecated() {}\n #[deprecated=\"text\"]"}, {"sha": "4f55ac4f65fd48ee9e56f8164fc8b73dcba93419", "filename": "src/test/auxiliary/macro_crate_def_only.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fmacro_crate_def_only.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fmacro_crate_def_only.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmacro_crate_def_only.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n #[macro_export]\n macro_rules! make_a_5 {\n     () => (5)"}, {"sha": "922efc1aec38fa99f2a1928155a0c85c28d3f78e", "filename": "src/test/auxiliary/macro_crate_nonterminal.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fmacro_crate_nonterminal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fmacro_crate_nonterminal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmacro_crate_nonterminal.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n pub fn increment(x: uint) -> uint {\n     x + 1\n }"}, {"sha": "ce66cad213d0e2f7fd33e32a5214524def5f7bdf", "filename": "src/test/auxiliary/macro_crate_test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmacro_crate_test.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,7 +10,7 @@\n \n // force-host\n \n-#![feature(globs, plugin_registrar, macro_rules, quote)]\n+#![feature(globs, plugin_registrar, quote)]\n \n extern crate syntax;\n extern crate rustc;"}, {"sha": "84e944f69b98ee406dfec98baea4aaf10a1db92d", "filename": "src/test/auxiliary/macro_export_inner_module.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fmacro_export_inner_module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fmacro_export_inner_module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmacro_export_inner_module.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n pub mod inner {\n     #[macro_export]\n     macro_rules! foo {"}, {"sha": "a913749bc66a92397d8399a4fa85840499aaf64b", "filename": "src/test/auxiliary/macro_reexport_1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fmacro_reexport_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fmacro_reexport_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fmacro_reexport_1.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -9,8 +9,6 @@\n // except according to those terms.\n \n #![crate_type = \"dylib\"]\n-#![feature(macro_rules)]\n-\n #[macro_export]\n macro_rules! reexported {\n     () => ( 3u )"}, {"sha": "12833daf6045854990ba64e416c6670832e64876", "filename": "src/test/auxiliary/svh-a-base.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-a-base.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n //! should not affect the strict version hash (SVH) computation\n //! (#14132).\n \n-#![feature(macro_rules)]\n-\n #![crate_name = \"a\"]\n \n macro_rules! three {"}, {"sha": "9e74bf281358faa1e582d81080183fb0fc38f392", "filename": "src/test/auxiliary/svh-a-change-lit.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-change-lit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-change-lit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-a-change-lit.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n //! should not affect the strict version hash (SVH) computation\n //! (#14132).\n \n-#![feature(macro_rules)]\n-\n #![crate_name = \"a\"]\n \n macro_rules! three {"}, {"sha": "c900550041b5c82a58d243ce64e67c18a1cf72d4", "filename": "src/test/auxiliary/svh-a-change-significant-cfg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-change-significant-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-change-significant-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-a-change-significant-cfg.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n //! should not affect the strict version hash (SVH) computation\n //! (#14132).\n \n-#![feature(macro_rules)]\n-\n #![crate_name = \"a\"]\n \n macro_rules! three {"}, {"sha": "04f8eb3cf9bc0fd4121230931631fa66da136818", "filename": "src/test/auxiliary/svh-a-change-trait-bound.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-change-trait-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-change-trait-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-a-change-trait-bound.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n //! should not affect the strict version hash (SVH) computation\n //! (#14132).\n \n-#![feature(macro_rules)]\n-\n #![crate_name = \"a\"]\n \n macro_rules! three {"}, {"sha": "c7e0a18768a3d36ae7271d56bd00fd5bcd3ee9fb", "filename": "src/test/auxiliary/svh-a-change-type-arg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-change-type-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-change-type-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-a-change-type-arg.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n //! should not affect the strict version hash (SVH) computation\n //! (#14132).\n \n-#![feature(macro_rules)]\n-\n #![crate_name = \"a\"]\n \n macro_rules! three {"}, {"sha": "5100af323183b18726535987931245f269798ed0", "filename": "src/test/auxiliary/svh-a-change-type-ret.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-change-type-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-change-type-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-a-change-type-ret.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n //! should not affect the strict version hash (SVH) computation\n //! (#14132).\n \n-#![feature(macro_rules)]\n-\n #![crate_name = \"a\"]\n \n macro_rules! three {"}, {"sha": "077c33cb90d756f3555b64c1aa81c2b1f4a7b2a0", "filename": "src/test/auxiliary/svh-a-change-type-static.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-change-type-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-change-type-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-a-change-type-static.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n //! should not affect the strict version hash (SVH) computation\n //! (#14132).\n \n-#![feature(macro_rules)]\n-\n #![crate_name = \"a\"]\n \n macro_rules! three {"}, {"sha": "d481fa5a1fa3b033d65967408d0f13e7209e53d2", "filename": "src/test/auxiliary/svh-a-comment.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-a-comment.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n //! should not affect the strict version hash (SVH) computation\n //! (#14132).\n \n-#![feature(macro_rules)]\n-\n #![crate_name = \"a\"]\n \n macro_rules! three {"}, {"sha": "9e99a355ac1ee2a17df3d10d77ed5bb798e93a6d", "filename": "src/test/auxiliary/svh-a-doc.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-a-doc.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n //! should not affect the strict version hash (SVH) computation\n //! (#14132).\n \n-#![feature(macro_rules)]\n-\n #![crate_name = \"a\"]\n \n macro_rules! three {"}, {"sha": "b8dd497ac99c8e6fae182d27dd29d4a40d0491df", "filename": "src/test/auxiliary/svh-a-macro.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-a-macro.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n //! should not affect the strict version hash (SVH) computation\n //! (#14132).\n \n-#![feature(macro_rules)]\n-\n #![crate_name = \"a\"]\n \n macro_rules! three {"}, {"sha": "12833daf6045854990ba64e416c6670832e64876", "filename": "src/test/auxiliary/svh-a-no-change.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-no-change.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-no-change.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-a-no-change.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n //! should not affect the strict version hash (SVH) computation\n //! (#14132).\n \n-#![feature(macro_rules)]\n-\n #![crate_name = \"a\"]\n \n macro_rules! three {"}, {"sha": "690ddc670f5fa57bb919d670d9bf31c4b1d45a33", "filename": "src/test/auxiliary/svh-a-redundant-cfg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-redundant-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-redundant-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-a-redundant-cfg.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n //! should not affect the strict version hash (SVH) computation\n //! (#14132).\n \n-#![feature(macro_rules)]\n-\n #![crate_name = \"a\"]\n \n macro_rules! three {"}, {"sha": "216e8e997f22de643e86f712dd718888965dd7a1", "filename": "src/test/auxiliary/svh-a-whitespace.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-whitespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Fsvh-a-whitespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fsvh-a-whitespace.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n //! should not affect the strict version hash (SVH) computation\n //! (#14132).\n \n-#![feature(macro_rules)]\n-\n #![crate_name = \"a\"]\n \n macro_rules! three {"}, {"sha": "11b6108b99ed91245f3dc35508662ce7aa7bd671", "filename": "src/test/auxiliary/two_macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Ftwo_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fauxiliary%2Ftwo_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Ftwo_macros.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // force-host\n \n-#![feature(macro_rules)]\n-\n #[macro_export]\n macro_rules! macro_one { () => (\"one\") }\n "}, {"sha": "9007b4fd64c43c440985a8da75774168e1ff27a4", "filename": "src/test/bench/core-std.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fbench%2Fcore-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fbench%2Fcore-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fcore-std.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -11,7 +11,6 @@\n // ignore-lexer-test FIXME #15679\n // Microbenchmarks for various functions in std and extra\n \n-#![feature(macro_rules)]\n #![feature(unboxed_closures)]\n \n use std::io::File;"}, {"sha": "16d6036d4c40ff8eb9b6d228941e37b088a41815", "filename": "src/test/bench/shootout-mandelbrot.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-mandelbrot.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -38,7 +38,6 @@\n // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n // OF THE POSSIBILITY OF SUCH DAMAGE.\n \n-#![feature(macro_rules)]\n #![feature(simd)]\n #![allow(experimental)]\n "}, {"sha": "ef538eb699189e1d7cfd042ccc4fac62c625952d", "filename": "src/test/bench/shootout-regex-dna.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -41,7 +41,7 @@\n // ignore-stage1\n // ignore-cross-compile #12102\n \n-#![feature(macro_rules, plugin, slicing_syntax)]\n+#![feature(plugin, slicing_syntax)]\n \n extern crate regex;\n "}, {"sha": "dcbb25ba5a95f629e64253039afe0c62f1b18b73", "filename": "src/test/compile-fail/cleanup-rvalue-scopes-cf.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fcleanup-rvalue-scopes-cf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fcleanup-rvalue-scopes-cf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcleanup-rvalue-scopes-cf.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -11,8 +11,6 @@\n // Test that the borrow checker prevents pointers to temporaries\n // with statement lifetimes from escaping.\n \n-#![feature(macro_rules)]\n-\n use std::ops::Drop;\n \n static mut FLAGS: u64 = 0;"}, {"sha": "1814b1cd544ef8ee02a725543b2cd2d4c41e667d", "filename": "src/test/compile-fail/const-block-non-item-statement.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fconst-block-non-item-statement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fconst-block-non-item-statement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-block-non-item-statement.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n static A: uint = { 1u; 2 };\n //~^ ERROR: blocks in constants are limited to items and tail expressions\n "}, {"sha": "dea0c60d91b7fe53da4b506af17ab152909b47ce", "filename": "src/test/compile-fail/gated-macro-rules.rs", "status": "removed", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d0163d3311f0afe7b8dc3b70dba8aa32f318225c/src%2Ftest%2Fcompile-fail%2Fgated-macro-rules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0163d3311f0afe7b8dc3b70dba8aa32f318225c/src%2Ftest%2Fcompile-fail%2Fgated-macro-rules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fgated-macro-rules.rs?ref=d0163d3311f0afe7b8dc3b70dba8aa32f318225c", "patch": "@@ -1,14 +0,0 @@\n-// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-macro_rules! foo { () => () }\n-//~^ ERROR: macro definitions are not stable enough for use\n-\n-fn main() {}"}, {"sha": "dd6682a6f4282c0cbddef859aba64e5f01b260f2", "filename": "src/test/compile-fail/hygienic-label-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fhygienic-label-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fhygienic-label-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fhygienic-label-1.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! foo {\n     () => { break 'x; }\n }"}, {"sha": "24194d7bbe9702a6a86b64e41c19ded5b42f506f", "filename": "src/test/compile-fail/hygienic-label-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fhygienic-label-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fhygienic-label-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fhygienic-label-2.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! foo {\n     ($e: expr) => { 'x: loop { $e } }\n }"}, {"sha": "4ff3bec3c64594eb49b8b4bf0aef9fe54e6f11ad", "filename": "src/test/compile-fail/hygienic-label-3.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fhygienic-label-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fhygienic-label-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fhygienic-label-3.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! foo {\n     () => { break 'x; }\n }"}, {"sha": "174e8a2834f4ba9507f1865fb7183e7358992bd8", "filename": "src/test/compile-fail/hygienic-label-4.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fhygienic-label-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fhygienic-label-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fhygienic-label-4.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! foo {\n     ($e: expr) => { 'x: for _ in range(0,1) { $e } }\n }"}, {"sha": "971f643c0fe91c319c5ab276458078b663c5e2c5", "filename": "src/test/compile-fail/if-let.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fif-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fif-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fif-let.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n fn macros() {\n     macro_rules! foo{\n         ($p:pat, $e:expr, $b:block) => {{"}, {"sha": "74835f4bf22cafce53576e85bfb0c108da852fa9", "filename": "src/test/compile-fail/infinite-macro-expansion.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Finfinite-macro-expansion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Finfinite-macro-expansion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Finfinite-macro-expansion.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! recursive {\n     () => (recursive!()) //~ ERROR recursion limit reached while expanding the macro `recursive`\n }"}, {"sha": "370a6228db6ac733358a97e8ee5df73b3cde769d", "filename": "src/test/compile-fail/issue-10536.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fissue-10536.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fissue-10536.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-10536.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n \n // error-pattern:\n \n-#![feature(macro_rules)]\n-\n macro_rules! foo{\n     () => {{\n         macro_rules! bar{() => (())}"}, {"sha": "d4de4e177f02684e19d87b14ce1a8faaf7def19b", "filename": "src/test/compile-fail/issue-15167.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fissue-15167.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fissue-15167.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15167.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -15,8 +15,6 @@\n \n // ignore-test\n \n-#![feature(macro_rules)]\n-\n macro_rules! f { () => (n) }\n \n fn main() -> (){"}, {"sha": "68ac19b383f5a06eeb6e09f5af834de762c5ff75", "filename": "src/test/compile-fail/issue-16098.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fissue-16098.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fissue-16098.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-16098.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! prob1 {\n     (0) => {\n         0"}, {"sha": "c5be0da5f4b2a2b6d866d5931901281d008bcfda", "filename": "src/test/compile-fail/issue-6596.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fissue-6596.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fissue-6596.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-6596.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n // error-pattern: unexpected token\n \n macro_rules! e {"}, {"sha": "56d2b2cd6c0845c8a2b4e1ca0df6e6e95ddb853f", "filename": "src/test/compile-fail/lint-unsafe-block.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Flint-unsafe-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Flint-unsafe-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-unsafe-block.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -11,8 +11,6 @@\n #![allow(unused_unsafe)]\n #![allow(dead_code)]\n #![deny(unsafe_blocks)]\n-#![feature(macro_rules)]\n-\n unsafe fn allowed() {}\n \n #[allow(unsafe_blocks)] fn also_allowed() { unsafe {} }"}, {"sha": "9cfffb5fa6b629941c6ba29045a2408825d2bfbb", "filename": "src/test/compile-fail/liveness-return-last-stmt-semi.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fliveness-return-last-stmt-semi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fliveness-return-last-stmt-semi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fliveness-return-last-stmt-semi.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n //\n // regression test for #8005\n \n-#![feature(macro_rules)]\n-\n macro_rules! test { () => { fn foo() -> int { 1i; } } }\n                                              //~^ ERROR not all control paths return a value\n                                              //~^^ HELP consider removing this semicolon"}, {"sha": "53b29ccb0c0c7580b48be88f1ff096e0795fd921", "filename": "src/test/compile-fail/macro-incomplete-parse.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fmacro-incomplete-parse.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fmacro-incomplete-parse.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-incomplete-parse.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! ignored_item {\n     () => {\n         fn foo() {}"}, {"sha": "e4fc5bb462700d0d8409e534488bc6e139bd98ba", "filename": "src/test/compile-fail/macro-inner-attributes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fmacro-inner-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fmacro-inner-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-inner-attributes.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! test { ($nm:ident,\n                      #[$a:meta],\n                      $i:item) => (mod $nm { #![$a] $i }); }"}, {"sha": "a66b63870143614aa407a27ce56eaab6688d4fd2", "filename": "src/test/compile-fail/macro-match-nonterminal.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fmacro-match-nonterminal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fmacro-match-nonterminal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-match-nonterminal.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! test { ($a, $b) => (()); } //~ ERROR Cannot transcribe\n \n fn main() {"}, {"sha": "a0f23c72bc41e0b590f03d55081fb4a3d5b6b27e", "filename": "src/test/compile-fail/macro-outer-attributes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fmacro-outer-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fmacro-outer-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-outer-attributes.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! test { ($nm:ident,\n                      #[$a:meta],\n                      $i:item) => (mod $nm { #[$a] $i }); }"}, {"sha": "f4740492651ae03e4cd15a1412f8d8a8887bfccd", "filename": "src/test/compile-fail/method-macro-backtrace.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fmethod-macro-backtrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fmethod-macro-backtrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmethod-macro-backtrace.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // forbid-output: in expansion of\n \n-#![feature(macro_rules)]\n-\n macro_rules! make_method {\n     ($name:ident) => ( fn $name(&self) { } )\n }"}, {"sha": "1c79c9a2293a0f03bfbe9a63d151a265ab6bdb34", "filename": "src/test/compile-fail/pattern-macro-hygiene.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fpattern-macro-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fpattern-macro-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fpattern-macro-hygiene.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! foo { () => ( x ) }\n \n fn main() {"}, {"sha": "6e1ecb10e3a2ad1c46af841761b029522fb7cb35", "filename": "src/test/compile-fail/recursion_limit.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Frecursion_limit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Frecursion_limit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frecursion_limit.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -12,7 +12,6 @@\n // deeply nested types that will fail the `Send` check by overflow\n // when the recursion limit is set very low.\n \n-#![feature(macro_rules)]\n #![allow(dead_code)]\n #![recursion_limit=\"10\"]\n "}, {"sha": "c839ade75cf29875bc0b835b10477c0baeb22129", "filename": "src/test/compile-fail/svh-change-lit.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fsvh-change-lit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fsvh-change-lit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsvh-change-lit.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n // aux-build:svh-b.rs\n // aux-build:svh-a-change-lit.rs\n \n-#![feature(macro_rules)]\n-\n extern crate a;\n extern crate b; //~ ERROR: found possibly newer version of crate `a` which `b` depends on\n //~^ NOTE: perhaps this crate needs to be recompiled"}, {"sha": "df0adf36ce2e6f4fb72fe61aee610ceac7c2a8e0", "filename": "src/test/compile-fail/svh-change-significant-cfg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fsvh-change-significant-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fsvh-change-significant-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsvh-change-significant-cfg.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n // aux-build:svh-b.rs\n // aux-build:svh-a-change-significant-cfg.rs\n \n-#![feature(macro_rules)]\n-\n extern crate a;\n extern crate b; //~ ERROR: found possibly newer version of crate `a` which `b` depends on\n //~^ NOTE: perhaps this crate needs to be recompiled"}, {"sha": "4774384fecd496558f6b282dfb8c8c6715075317", "filename": "src/test/compile-fail/svh-change-trait-bound.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fsvh-change-trait-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fsvh-change-trait-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsvh-change-trait-bound.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n // aux-build:svh-b.rs\n // aux-build:svh-a-change-trait-bound.rs\n \n-#![feature(macro_rules)]\n-\n extern crate a;\n extern crate b; //~ ERROR: found possibly newer version of crate `a` which `b` depends on\n //~^ NOTE: perhaps this crate needs to be recompiled"}, {"sha": "51d3fd0a73a129401789e3dafded5ebeaca7dd34", "filename": "src/test/compile-fail/svh-change-type-arg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fsvh-change-type-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fsvh-change-type-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsvh-change-type-arg.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n // aux-build:svh-b.rs\n // aux-build:svh-a-change-type-arg.rs\n \n-#![feature(macro_rules)]\n-\n extern crate a;\n extern crate b; //~ ERROR: found possibly newer version of crate `a` which `b` depends on\n //~^ NOTE: perhaps this crate needs to be recompiled"}, {"sha": "609e0f3689e5dfe6e2738771571b8241fd86149b", "filename": "src/test/compile-fail/svh-change-type-ret.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fsvh-change-type-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fsvh-change-type-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsvh-change-type-ret.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n // aux-build:svh-b.rs\n // aux-build:svh-a-change-type-ret.rs\n \n-#![feature(macro_rules)]\n-\n extern crate a;\n extern crate b; //~ ERROR: found possibly newer version of crate `a` which `b` depends on\n //~^ NOTE: perhaps this crate needs to be recompiled"}, {"sha": "c42714609b6f8908f07d258d5e4b0b6b6e777805", "filename": "src/test/compile-fail/svh-change-type-static.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fsvh-change-type-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fsvh-change-type-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fsvh-change-type-static.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n // aux-build:svh-b.rs\n // aux-build:svh-a-change-type-static.rs\n \n-#![feature(macro_rules)]\n-\n extern crate a;\n extern crate b; //~ ERROR: found possibly newer version of crate `a` which `b` depends on\n //~^ NOTE: perhaps this crate needs to be recompiled"}, {"sha": "95cb17c215b7bbca96848e3f8e644a6f2fb2ad48", "filename": "src/test/compile-fail/trace_macros-format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Ftrace_macros-format.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Ftrace_macros-format.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ftrace_macros-format.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules, trace_macros)]\n+#![feature(trace_macros)]\n \n fn main() {\n     trace_macros!(); //~ ERROR trace_macros! accepts only `true` or `false`"}, {"sha": "adb8ee6940d3b22f94d32da70faa3f6e56307086", "filename": "src/test/compile-fail/while-let.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fwhile-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fcompile-fail%2Fwhile-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fwhile-let.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n fn macros() {\n     macro_rules! foo{\n         ($p:pat, $e:expr, $b:block) => {{"}, {"sha": "2aa31969a46ad30fba375b2b4f5a9e98f23c8f98", "filename": "src/test/debuginfo/lexical-scope-with-macro.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Flexical-scope-with-macro.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -111,7 +111,6 @@\n // lldb-command:continue\n \n \n-#![feature(macro_rules)]\n #![omit_gdb_pretty_printer_section]\n \n macro_rules! trivial {"}, {"sha": "6febe2ff7c1d324c76239c574a68c0b4a3fdb46c", "filename": "src/test/run-make/pretty-expanded-hygiene/input.pp.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-make%2Fpretty-expanded-hygiene%2Finput.pp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-make%2Fpretty-expanded-hygiene%2Finput.pp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpretty-expanded-hygiene%2Finput.pp.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n // minimal junk\n #![no_std]\n "}, {"sha": "c31b67b8043ae400303e47c2a336e1db328231e5", "filename": "src/test/run-make/pretty-expanded-hygiene/input.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-make%2Fpretty-expanded-hygiene%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-make%2Fpretty-expanded-hygiene%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpretty-expanded-hygiene%2Finput.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n // minimal junk\n #![no_std]\n "}, {"sha": "28db3953a0021d2834c2c1efa3234f1120ea121c", "filename": "src/test/run-pass/borrowck-macro-interaction-issue-6304.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fborrowck-macro-interaction-issue-6304.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fborrowck-macro-interaction-issue-6304.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrowck-macro-interaction-issue-6304.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -11,8 +11,6 @@\n // Check that we do not ICE when compiling this\n // macro, which reuses the expression `$id`\n \n-#![feature(macro_rules)]\n-\n \n struct Foo {\n   a: int"}, {"sha": "aeb6fcbbc0f01fb63f9e28a03aa29606eec6b74f", "filename": "src/test/run-pass/cfg-macros-foo.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fcfg-macros-foo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fcfg-macros-foo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfg-macros-foo.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n // check that cfg correctly chooses between the macro impls (see also\n // cfg-macros-notfoo.rs)\n \n-#![feature(macro_rules)]\n-\n #[cfg(foo)]\n #[macro_use]\n mod foo {"}, {"sha": "adc27d556227e3fb22b3bf10e4c1216f53b50c72", "filename": "src/test/run-pass/cfg-macros-notfoo.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fcfg-macros-notfoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fcfg-macros-notfoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcfg-macros-notfoo.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n // check that cfg correctly chooses between the macro impls (see also\n // cfg-macros-foo.rs)\n \n-#![feature(macro_rules)]\n-\n #[cfg(foo)]\n #[macro_use]\n mod foo {"}, {"sha": "8969cca2610ea65f1461364b66ad6f593a7adcf0", "filename": "src/test/run-pass/cleanup-rvalue-for-scope.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-for-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-for-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-for-scope.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -11,8 +11,6 @@\n // Test that the lifetime of rvalues in for loops is extended\n // to the for loop itself.\n \n-#![feature(macro_rules)]\n-\n use std::ops::Drop;\n \n static mut FLAGS: u64 = 0;"}, {"sha": "59763e417a2585233030bad588bddd738472c98b", "filename": "src/test/run-pass/cleanup-rvalue-scopes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-scopes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-scopes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-scopes.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -12,8 +12,6 @@\n // statement or end of block, as appropriate given the temporary\n // lifetime rules.\n \n-#![feature(macro_rules)]\n-\n use std::ops::Drop;\n \n static mut FLAGS: u64 = 0;"}, {"sha": "ca7f761b80d3111ecf485d39c56a26675f75ecf4", "filename": "src/test/run-pass/colorful-write-macros.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fcolorful-write-macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fcolorful-write-macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcolorful-write-macros.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -11,8 +11,6 @@\n // no-pretty-expanded\n \n #![allow(unused_must_use, dead_code, deprecated)]\n-#![feature(macro_rules)]\n-\n use std::io::MemWriter;\n use std::fmt;\n "}, {"sha": "11590ceb19d4889960e84669a22b9a51608094fb", "filename": "src/test/run-pass/const-binops.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fconst-binops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fconst-binops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-binops.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! assert_approx_eq {\n     ($a:expr, $b:expr) => ({\n         use std::num::Float;"}, {"sha": "03afe798954d514afe053882edf4b35b0028c0cb", "filename": "src/test/run-pass/const-block-item-macro-codegen.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fconst-block-item-macro-codegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fconst-block-item-macro-codegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-block-item-macro-codegen.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -11,8 +11,6 @@\n // General test that function items in static blocks\n // can be generated with a macro.\n \n-#![feature(macro_rules)]\n-\n struct MyType {\n     desc: &'static str,\n     data: uint,"}, {"sha": "d55b420db083e28f882e112cbb4d4643a3ef1092", "filename": "src/test/run-pass/const-block-item.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fconst-block-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fconst-block-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconst-block-item.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n mod foo {\n     pub trait Value {\n         fn value(&self) -> uint;"}, {"sha": "3298976de6ce34d8bd6f13fe8af4d629b951f1fe", "filename": "src/test/run-pass/core-run-destroy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -15,7 +15,6 @@\n // memory, which makes for some *confusing* logs. That's why these are here\n // instead of in std.\n \n-#![feature(macro_rules)]\n #![reexport_test_harness_main = \"test_main\"]\n \n extern crate libc;"}, {"sha": "c9b60d22ecb7b9bd7a6e6a8cbd3172b198be353e", "filename": "src/test/run-pass/deriving-in-macro.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fderiving-in-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fderiving-in-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-in-macro.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! define_vec {\n     () => (\n         mod foo {"}, {"sha": "e8086b8b7c6b20c2a988de3cd5976fa32160c03c", "filename": "src/test/run-pass/deriving-show.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fderiving-show.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fderiving-show.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderiving-show.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n #[derive(Show)]\n struct Unit;\n "}, {"sha": "07941eca2243ec4cb8107bdf177b8489c1c2fc5c", "filename": "src/test/run-pass/enum-discrim-width-stuff.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fenum-discrim-width-stuff.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fenum-discrim-width-stuff.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenum-discrim-width-stuff.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! check {\n     ($m:ident, $t:ty, $v:expr) => {{\n         mod $m {"}, {"sha": "1fb434f7d76192332c667e6747fa6c317e634563", "filename": "src/test/run-pass/exponential-notation.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fexponential-notation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fexponential-notation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexponential-notation.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n use std::num::strconv::ExponentFormat::{ExpBin, ExpDec};\n use std::num::strconv::SignificantDigits::DigMax;\n use std::num::strconv::SignFormat::{SignAll, SignNeg};"}, {"sha": "fbaeb1753f41de6436f2c376b6b401c9672e38b0", "filename": "src/test/run-pass/html-literals.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fhtml-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fhtml-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhtml-literals.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // A test of the macro system. Can we do HTML literals?\n \n-#![feature(macro_rules)]\n-\n \n /*\n "}, {"sha": "17c0299cf4dd7aaf8d6c73579a5b907891f789dd", "filename": "src/test/run-pass/hygienic-labels-in-let.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fhygienic-labels-in-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fhygienic-labels-in-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhygienic-labels-in-let.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-pretty: pprust doesn't print hygiene output\n \n-#![feature(macro_rules)]\n-\n macro_rules! loop_x {\n     ($e: expr) => {\n         // $e shouldn't be able to interact with this 'x"}, {"sha": "e899a1adb794f1a5e72b4b543f451c3908b88819", "filename": "src/test/run-pass/hygienic-labels.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fhygienic-labels.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fhygienic-labels.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhygienic-labels.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! loop_x {\n     ($e: expr) => {\n         // $e shouldn't be able to interact with this 'x"}, {"sha": "d38b0ea27476569f1f8ac0df6e1cb7776c03e3cb", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -11,7 +11,6 @@\n // no-pretty-expanded unnecessary unsafe block generated\n // ignore-lexer-test FIXME #15679\n \n-#![feature(macro_rules)]\n #![deny(warnings)]\n #![allow(unused_must_use)]\n "}, {"sha": "efb2ecfe875df812d31ab0a3f1473793b1c28653", "filename": "src/test/run-pass/intrinsics-math.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fintrinsics-math.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -9,7 +9,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(globs, macro_rules, intrinsics)]\n+#![feature(globs, intrinsics)]\n \n macro_rules! assert_approx_eq {\n     ($a:expr, $b:expr) => ({"}, {"sha": "a441729e2d0ba015287dad9217a5a823f59a9a4a", "filename": "src/test/run-pass/issue-14936.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-14936.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-14936.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-14936.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(asm, macro_rules)]\n+#![feature(asm)]\n \n type History = Vec<&'static str>;\n "}, {"sha": "6d1813f8aa437bb965aa254a31777c3467c64fc3", "filename": "src/test/run-pass/issue-15189.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-15189.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-15189.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15189.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-pretty\n \n-#![feature(macro_rules)]\n-\n macro_rules! third {\n     ($e:expr) => ({let x = 2; $e[x]})\n }"}, {"sha": "e3c102e01ec5e0cb0a2a3289befde1848167a3f9", "filename": "src/test/run-pass/issue-15221.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-15221.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-15221.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-15221.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! inner {\n     ($e:pat ) => ($e)\n }"}, {"sha": "7c3b0a5f1f0146fbd413735612440b2c8056aa63", "filename": "src/test/run-pass/issue-5060.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-5060.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-5060.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5060.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! print_hd_tl {\n     ($field_hd:ident, $($field_tl:ident),+) => ({\n         print!(\"{}\", stringify!($field_hd));"}, {"sha": "32fca7a182c1b7c465dfc2f915fa11cbb8912bd5", "filename": "src/test/run-pass/issue-5554.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-5554.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-5554.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5554.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n use std::default::Default;\n \n pub struct X<T> {"}, {"sha": "589ccefd9ea2801a2b6e7e6d6fb2049129037733", "filename": "src/test/run-pass/issue-5718.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-5718.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-5718.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-5718.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n struct Element;\n \n macro_rules! foo {"}, {"sha": "86948ebcb91e0e4dbf2de046876376d3508a3f41", "filename": "src/test/run-pass/issue-7911.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-7911.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-7911.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-7911.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -14,8 +14,6 @@\n // with different mutability in macro in two methods\n \n #![allow(unused_variable)] // unused foobar_immut + foobar_mut\n-#![feature(macro_rules)]\n-\n trait FooBar {}\n struct Bar(i32);\n struct Foo { bar: Bar }"}, {"sha": "865905bf50441a9143b527b7af53924cf8f20573", "filename": "src/test/run-pass/issue-8709.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-8709.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-8709.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8709.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! sty {\n     ($t:ty) => (stringify!($t))\n }"}, {"sha": "b70711f9f39e25a393a5fafc2e59b3726e5ff92e", "filename": "src/test/run-pass/issue-8851.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-8851.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-8851.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8851.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n // after fixing #9384 and implementing hygiene for match bindings,\n // this now fails because the insertion of the 'y' into the match\n // doesn't cause capture. Making this macro hygienic (as I've done)"}, {"sha": "09d0f20c96d6c4d9eda35e3fdb22a6daf2780b4e", "filename": "src/test/run-pass/issue-9110.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-9110.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-9110.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9110.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! silly_macro {\n     () => (\n         pub mod Qux {"}, {"sha": "2e089d30bab0259809170a346df59783b48bd896", "filename": "src/test/run-pass/issue-9129.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-9129.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-9129.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9129.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-pretty\n \n-#![feature(macro_rules)]\n-\n \n pub trait bomb { fn boom(&self, Ident); }\n pub struct S;"}, {"sha": "e5a287d01491939f3818c3702b2d82632063c715", "filename": "src/test/run-pass/issue-9737.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-9737.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fissue-9737.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-9737.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-test #9737\n \n-#![feature(macro_rules)]\n-\n macro_rules! f {\n     (v: $x:expr) => ( println!(\"{}\", $x) )\n }"}, {"sha": "a6060bebbc5cde4ec793ec374d0e54d73469ada4", "filename": "src/test/run-pass/lambda-var-hygiene.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Flambda-var-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Flambda-var-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flambda-var-hygiene.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-test #9383\n \n-#![feature(macro_rules)]\n-\n // shouldn't affect evaluation of $ex:\n macro_rules! bad_macro {\n     ($ex:expr) => ({(|_x| { $ex }) (9) })"}, {"sha": "2287cc48b66ce1e6504255e18347567c96fbc0f5", "filename": "src/test/run-pass/let-var-hygiene.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Flet-var-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Flet-var-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Flet-var-hygiene.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n // shouldn't affect evaluation of $ex:\n macro_rules! bad_macro {\n     ($ex:expr) => ({let _x = 9i; $ex})"}, {"sha": "80b2f408c1915674ad74da5987f5eb904bb59df5", "filename": "src/test/run-pass/macro-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-2.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-pretty - token trees can't pretty print\n \n-#![feature(macro_rules)]\n-\n pub fn main() {\n \n     macro_rules! mylambda_tt {"}, {"sha": "60217139cd77804e60bc652b67b0de7552422ca2", "filename": "src/test/run-pass/macro-attribute-expansion.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-attribute-expansion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-attribute-expansion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-attribute-expansion.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-pretty - token trees can't pretty print\n \n-#![feature(macro_rules)]\n-\n macro_rules! descriptions {\n     ($name:ident is $desc:expr) => {\n         // Check that we will correctly expand attributes"}, {"sha": "521aef4b5ba5b0b02bebe2e30381d75fc3d8c512", "filename": "src/test/run-pass/macro-attributes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-attributes.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-pretty - token trees can't pretty print\n \n-#![feature(macro_rules)]\n-\n macro_rules! compiles_fine {\n     (#[$at:meta]) => {\n         // test that the different types of attributes work"}, {"sha": "6c568d6d493ca9d2aa352280ea4a6f3ea5e21707", "filename": "src/test/run-pass/macro-block-nonterminal.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-block-nonterminal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-block-nonterminal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-block-nonterminal.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! do_block{\n     ($val:block) => {$val}\n }"}, {"sha": "fbbe0105cf4fe3dc8e64185c363d3bf64344238e", "filename": "src/test/run-pass/macro-crate-use.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-crate-use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-crate-use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-crate-use.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n pub fn increment(x: uint) -> uint {\n     x + 1\n }"}, {"sha": "c4012e2cf3c7e4459d30492642b5d0b879d5ce1e", "filename": "src/test/run-pass/macro-deep_expansion.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-deep_expansion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-deep_expansion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-deep_expansion.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! foo2 {\n     () => {\n         \"foo\""}, {"sha": "ff5b29d6ac88b16f3c3fa294327972ce12314406", "filename": "src/test/run-pass/macro-interpolation.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-interpolation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-interpolation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-interpolation.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! overly_complicated {\n     ($fnname:ident, $arg:ident, $ty:ty, $body:block, $val:expr, $pat:pat, $res:path) =>\n     ({"}, {"sha": "ce748967498387ad24166e01167ee5b23f872074", "filename": "src/test/run-pass/macro-invocation-in-count-expr-fixed-array-type.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-invocation-in-count-expr-fixed-array-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-invocation-in-count-expr-fixed-array-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-invocation-in-count-expr-fixed-array-type.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! four {\n     () => (4)\n }"}, {"sha": "47e3a0723993e2240f1fd499fd194d1758282efc", "filename": "src/test/run-pass/macro-meta-items.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-meta-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-meta-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-meta-items.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -11,8 +11,6 @@\n // ignore-pretty - token trees can't pretty print\n // compile-flags: --cfg foo\n \n-#![feature(macro_rules)]\n-\n macro_rules! compiles_fine {\n     ($at:meta) => {\n         #[cfg($at)]"}, {"sha": "fd16958d8964b9ab259951290d586acd97107c9c", "filename": "src/test/run-pass/macro-method-issue-4621.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-method-issue-4621.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-method-issue-4621.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-method-issue-4621.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n struct A;\n \n macro_rules! make_thirteen_method {() => (fn thirteen(&self)->int {13})}"}, {"sha": "f78f93e84810c8108d130ff63af29ac72749917d", "filename": "src/test/run-pass/macro-multiple-items.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-multiple-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-multiple-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-multiple-items.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-pretty - token trees can't pretty print\n \n-#![feature(macro_rules)]\n-\n macro_rules! make_foo {\n     () => (\n         struct Foo;"}, {"sha": "c6efc2f2bc83bbbd1180c747490c68d1bab8255c", "filename": "src/test/run-pass/macro-nt-list.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-nt-list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-nt-list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-nt-list.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! list {\n     ( ($($id:ident),*) ) => (());\n     ( [$($id:ident),*] ) => (());"}, {"sha": "3276aa0265f70dd15e4e3799070a56954fc45c5f", "filename": "src/test/run-pass/macro-of-higher-order.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-of-higher-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-of-higher-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-of-higher-order.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! higher_order {\n     (subst $lhs:tt => $rhs:tt) => ({\n             macro_rules! anon { $lhs => $rhs }"}, {"sha": "07b75389cf4ffaccd8afa83c206c6f02f773a5cb", "filename": "src/test/run-pass/macro-pat.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-pat.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! mypat {\n     () => (\n         Some('y')"}, {"sha": "4aa1587943413de7cc5fa0be6948fc642054c7ac", "filename": "src/test/run-pass/macro-path.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-path.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n mod m {\n     pub type t = int;\n }"}, {"sha": "cb5370c8bcba1b1f27b1c8ee12a8276485d883dc", "filename": "src/test/run-pass/macro-stmt.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-stmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-stmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-stmt.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-pretty - token trees can't pretty print\n \n-#![feature(macro_rules)]\n-\n macro_rules! myfn {\n     ( $f:ident, ( $( $x:ident ),* ), $body:block ) => (\n         fn $f( $( $x : int),* ) -> int $body"}, {"sha": "3f9d07466cc8197e3ba3de62f8bd733f555a070e", "filename": "src/test/run-pass/macro-with-attrs1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-with-attrs1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-with-attrs1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-with-attrs1.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // compile-flags: --cfg foo\n \n-#![feature(macro_rules)]\n-\n #[cfg(foo)]\n macro_rules! foo { () => (1i) }\n "}, {"sha": "f90a0dfa6b31e41c2bec64082769b381dbe2e19a", "filename": "src/test/run-pass/macro-with-attrs2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-with-attrs2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-with-attrs2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-with-attrs2.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n #[cfg(foo)]\n macro_rules! foo { () => (1i) }\n "}, {"sha": "93bb9557604c49cd9d4e61fa1373b74edd7485bf", "filename": "src/test/run-pass/macro-with-braces-in-expr-position.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-with-braces-in-expr-position.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmacro-with-braces-in-expr-position.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-with-braces-in-expr-position.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n use std::thread::Thread;\n \n macro_rules! expr { ($e: expr) => { $e } }"}, {"sha": "e4886ddaa0ed3155943fe8221cec54a23a66f638", "filename": "src/test/run-pass/match-in-macro.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmatch-in-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmatch-in-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-in-macro.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n enum Foo {\n     B { b1: int, bb1: int},\n }"}, {"sha": "984f675b4dc7ddab5e0ba6183ebcc25d4ca74d2b", "filename": "src/test/run-pass/match-var-hygiene.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmatch-var-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fmatch-var-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmatch-var-hygiene.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-test #9384\n \n-#![feature(macro_rules)]\n-\n // shouldn't affect evaluation of $ex.\n macro_rules! bad_macro { ($ex:expr) => (\n     {match 9 {_x => $ex}}"}, {"sha": "8b41670734f95bee52407cf7c9065ef205728e05", "filename": "src/test/run-pass/non-built-in-quote.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fnon-built-in-quote.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fnon-built-in-quote.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnon-built-in-quote.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! quote_tokens { () => (()) }\n \n pub fn main() {"}, {"sha": "9b9a7f68995f7e90456ef1753fd93190d652a07d", "filename": "src/test/run-pass/nullable-pointer-iotareduction.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fnullable-pointer-iotareduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fnullable-pointer-iotareduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnullable-pointer-iotareduction.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n use std::{option, mem};\n \n // Iota-reduction is a rule in the Calculus of (Co-)Inductive Constructions,"}, {"sha": "02fc0cf0291d43ba23e1eee7986f7efa39460e93", "filename": "src/test/run-pass/nullable-pointer-size.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fnullable-pointer-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fnullable-pointer-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fnullable-pointer-size.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n use std::mem;\n \n enum E<T> { Thing(int, T), Nothing((), ((), ()), [i8; 0]) }"}, {"sha": "46daa6594303c51b1c9a587a705ae08652ff6ccc", "filename": "src/test/run-pass/small-enums-with-fields.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsmall-enums-with-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsmall-enums-with-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsmall-enums-with-fields.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n use std::mem::size_of;\n \n #[derive(PartialEq, Show)]"}, {"sha": "235c4e74d085740f5fa9408b65ce2097c245af55", "filename": "src/test/run-pass/svh-add-comment.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsvh-add-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsvh-add-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsvh-add-comment.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n // aux-build:svh-b.rs\n // aux-build:svh-a-comment.rs\n \n-#![feature(macro_rules)]\n-\n extern crate a;\n extern crate b;\n "}, {"sha": "365960b96e4e956a2de4b7cabf09baa7b6f50b10", "filename": "src/test/run-pass/svh-add-doc.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsvh-add-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsvh-add-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsvh-add-doc.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n // aux-build:svh-b.rs\n // aux-build:svh-a-doc.rs\n \n-#![feature(macro_rules)]\n-\n extern crate a;\n extern crate b;\n "}, {"sha": "a0dbc96cdb02abe7eddcc721f9016a439d381c00", "filename": "src/test/run-pass/svh-add-macro.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsvh-add-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsvh-add-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsvh-add-macro.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n // aux-build:svh-b.rs\n // aux-build:svh-a-macro.rs\n \n-#![feature(macro_rules)]\n-\n extern crate a;\n extern crate b;\n "}, {"sha": "98b7663c58ebb1f9e3e0d239cdda759036511d38", "filename": "src/test/run-pass/svh-add-nothing.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsvh-add-nothing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsvh-add-nothing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsvh-add-nothing.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n // aux-build:svh-b.rs\n // aux-build:svh-a-no-change.rs\n \n-#![feature(macro_rules)]\n-\n extern crate a;\n extern crate b;\n "}, {"sha": "650f76d729a54a676fe64c6748ca566d110445a0", "filename": "src/test/run-pass/svh-add-redundant-cfg.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsvh-add-redundant-cfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsvh-add-redundant-cfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsvh-add-redundant-cfg.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n // aux-build:svh-b.rs\n // aux-build:svh-a-redundant-cfg.rs\n \n-#![feature(macro_rules)]\n-\n extern crate a;\n extern crate b;\n "}, {"sha": "6612c93e90bc536e8b41ecb8c13a2fde180fff9f", "filename": "src/test/run-pass/svh-add-whitespace.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsvh-add-whitespace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsvh-add-whitespace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsvh-add-whitespace.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -13,8 +13,6 @@\n // aux-build:svh-b.rs\n // aux-build:svh-a-whitespace.rs\n \n-#![feature(macro_rules)]\n-\n extern crate a;\n extern crate b;\n "}, {"sha": "f85305cf31926256c7f97082273443cb04f4ee7c", "filename": "src/test/run-pass/syntax-extension-source-utils.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-source-utils.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -11,8 +11,6 @@\n // This test is brittle!\n // ignore-pretty - the pretty tests lose path information, breaking include!\n \n-#![feature(macro_rules)]\n-\n pub mod m1 {\n     pub mod m2 {\n         pub fn where_am_i() -> String {\n@@ -24,9 +22,9 @@ pub mod m1 {\n macro_rules! indirect_line { () => ( line!() ) }\n \n pub fn main() {\n-    assert_eq!(line!(), 27);\n+    assert_eq!(line!(), 25);\n     //assert!((column!() == 11));\n-    assert_eq!(indirect_line!(), 29);\n+    assert_eq!(indirect_line!(), 27);\n     assert!((file!().ends_with(\"syntax-extension-source-utils.rs\")));\n     assert_eq!(stringify!((2*3) + 5).to_string(), \"( 2 * 3 ) + 5\".to_string());\n     assert!(include!(\"syntax-extension-source-utils-files/includeme.\\\n@@ -44,7 +42,7 @@ pub fn main() {\n     // The Windows tests are wrapped in an extra module for some reason\n     assert!((m1::m2::where_am_i().as_slice().ends_with(\"m1::m2\")));\n \n-    assert!(match (47, \"( 2 * 3 ) + 5\") {\n+    assert!(match (45, \"( 2 * 3 ) + 5\") {\n         (line!(), stringify!((2*3) + 5)) => true,\n         _ => false\n     })"}, {"sha": "adbc16f5c2918e91d132a5ff00dd6c7232640180", "filename": "src/test/run-pass/tcp-connect-timeouts.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Ftcp-connect-timeouts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Ftcp-connect-timeouts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftcp-connect-timeouts.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -16,7 +16,7 @@\n // one test task to ensure that errors are timeouts, not file descriptor\n // exhaustion.\n \n-#![feature(macro_rules, globs)]\n+#![feature(globs)]\n #![allow(experimental)]\n #![reexport_test_harness_main = \"test_main\"]\n "}, {"sha": "673e852356266bafc5c35152453260d889201923", "filename": "src/test/run-pass/typeck-macro-interaction-issue-8852.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Ftypeck-macro-interaction-issue-8852.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Ftypeck-macro-interaction-issue-8852.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftypeck-macro-interaction-issue-8852.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n enum T {\n     A(int),\n     B(f64)"}, {"sha": "a263501f8fe71fbd276e2f2a9165c472a2b17a7d", "filename": "src/test/run-pass/vec-macro-with-brackets.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fvec-macro-with-brackets.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c2e26972e307a2e82b9ff7a5345a5bff47a99501/src%2Ftest%2Frun-pass%2Fvec-macro-with-brackets.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fvec-macro-with-brackets.rs?ref=c2e26972e307a2e82b9ff7a5345a5bff47a99501", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(macro_rules)]\n-\n macro_rules! vec [\n     ($($e:expr),*) => ({\n         let mut _temp = ::std::vec::Vec::new();"}]}