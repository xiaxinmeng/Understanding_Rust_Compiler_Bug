{"sha": "f88fb2a9a5d5f3acf5ff284c411022e14c28207b", "node_id": "C_kwDOAAsO6NoAKGY4OGZiMmE5YTVkNWYzYWNmNWZmMjg0YzQxMTAyMmUxNGMyODIwN2I", "commit": {"author": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-02-01T23:10:59Z"}, "committer": {"name": "Dan Gohman", "email": "dev@sunfishcode.online", "date": "2022-02-01T23:10:59Z"}, "message": "x.py fmt", "tree": {"sha": "88fecaed9933e9b357c09b7cf01eab4c73c80228", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88fecaed9933e9b357c09b7cf01eab4c73c80228"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f88fb2a9a5d5f3acf5ff284c411022e14c28207b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f88fb2a9a5d5f3acf5ff284c411022e14c28207b", "html_url": "https://github.com/rust-lang/rust/commit/f88fb2a9a5d5f3acf5ff284c411022e14c28207b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f88fb2a9a5d5f3acf5ff284c411022e14c28207b/comments", "author": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sunfishcode", "id": 4503403, "node_id": "MDQ6VXNlcjQ1MDM0MDM=", "avatar_url": "https://avatars.githubusercontent.com/u/4503403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sunfishcode", "html_url": "https://github.com/sunfishcode", "followers_url": "https://api.github.com/users/sunfishcode/followers", "following_url": "https://api.github.com/users/sunfishcode/following{/other_user}", "gists_url": "https://api.github.com/users/sunfishcode/gists{/gist_id}", "starred_url": "https://api.github.com/users/sunfishcode/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sunfishcode/subscriptions", "organizations_url": "https://api.github.com/users/sunfishcode/orgs", "repos_url": "https://api.github.com/users/sunfishcode/repos", "events_url": "https://api.github.com/users/sunfishcode/events{/privacy}", "received_events_url": "https://api.github.com/users/sunfishcode/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "656d2a3a12746d624b8ee9dada8a70d708e1526c", "url": "https://api.github.com/repos/rust-lang/rust/commits/656d2a3a12746d624b8ee9dada8a70d708e1526c", "html_url": "https://github.com/rust-lang/rust/commit/656d2a3a12746d624b8ee9dada8a70d708e1526c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "35b8b950372928aae7651b2a2de9daf459598f12", "filename": "library/std/src/os/fd/raw.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f88fb2a9a5d5f3acf5ff284c411022e14c28207b/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f88fb2a9a5d5f3acf5ff284c411022e14c28207b/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fos%2Ffd%2Fraw.rs?ref=f88fb2a9a5d5f3acf5ff284c411022e14c28207b", "patch": "@@ -5,12 +5,12 @@\n use crate::fs;\n use crate::io;\n use crate::os::raw;\n-#[cfg(unix)]\n-use crate::os::unix::io::OwnedFd;\n #[cfg(all(doc, unix))]\n use crate::os::unix::io::AsFd;\n #[cfg(all(doc, target_os = \"wasi\"))]\n use crate::os::unix::io::AsFd;\n+#[cfg(unix)]\n+use crate::os::unix::io::OwnedFd;\n #[cfg(target_os = \"wasi\")]\n use crate::os::wasi::io::OwnedFd;\n use crate::sys_common::{AsInner, IntoInner};"}]}