{"sha": "c4453ccb82743f8994a89ebdf9c8c30a5c5b6998", "node_id": "C_kwDOAAsO6NoAKGM0NDUzY2NiODI3NDNmODk5NGE4OWViZGY5YzhjMzBhNWM1YjY5OTg", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-07T18:57:45Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-07T18:57:45Z"}, "message": "Rollup merge of #108793 - clubby789:pythonpath-compiletest, r=compiler-errors\n\nAppend to existing `PYTHONPATH` in compiletest instead of overwriting\n\nFixes #108779", "tree": {"sha": "7d1352eae691c31d584fad64cc6878174f59357c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7d1352eae691c31d584fad64cc6878174f59357c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4453ccb82743f8994a89ebdf9c8c30a5c5b6998", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkB4kpCRBK7hj4Ov3rIwAAbJsIAC/XtBRxtI0dygynJ1ohdhpz\n8l3vOq9Zv+6O7BVXvB5VU+IVXfwt/LLZ7iyDcq9yIQqylrhZyUb9oWdDAqe/52lD\nTzWv6ZFYuu6s1F5J0F+qILKPnuCUIilPEVC4g+SjFLfh3SEWvyyAWLau3D5rFpNO\nHaYN15vOrRsgYPWDZ3DbBeF7C1MnU6qEGr5YoBlVzvRkzr+EJiSDnTZrqpwhJAl9\nh4Q8nvJ1bjgGHQnNjSdVHR7hTNphnAGB1JhmxuvLL9Lc+KXTbHU4Uj8fRlWRJE/n\ntovm2MQf4awwvL36bVnAntn8f18eHk+Ivn5/dtTTXNS/qWmwUOsfBMp7ZIt0CgI=\n=yb3R\n-----END PGP SIGNATURE-----\n", "payload": "tree 7d1352eae691c31d584fad64cc6878174f59357c\nparent c21a640c5a31d64a276cbb76e9e358623ec0ad17\nparent 2632a1c8798e060a6570dbb91b64ae52f24b4acd\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1678215465 +0100\ncommitter GitHub <noreply@github.com> 1678215465 +0100\n\nRollup merge of #108793 - clubby789:pythonpath-compiletest, r=compiler-errors\n\nAppend to existing `PYTHONPATH` in compiletest instead of overwriting\n\nFixes #108779\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4453ccb82743f8994a89ebdf9c8c30a5c5b6998", "html_url": "https://github.com/rust-lang/rust/commit/c4453ccb82743f8994a89ebdf9c8c30a5c5b6998", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4453ccb82743f8994a89ebdf9c8c30a5c5b6998/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c21a640c5a31d64a276cbb76e9e358623ec0ad17", "url": "https://api.github.com/repos/rust-lang/rust/commits/c21a640c5a31d64a276cbb76e9e358623ec0ad17", "html_url": "https://github.com/rust-lang/rust/commit/c21a640c5a31d64a276cbb76e9e358623ec0ad17"}, {"sha": "2632a1c8798e060a6570dbb91b64ae52f24b4acd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2632a1c8798e060a6570dbb91b64ae52f24b4acd", "html_url": "https://github.com/rust-lang/rust/commit/2632a1c8798e060a6570dbb91b64ae52f24b4acd"}], "stats": {"total": 14, "additions": 12, "deletions": 2}, "files": [{"sha": "a127875b55d5ffc3eba277ee330e427bc4133a8e", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c4453ccb82743f8994a89ebdf9c8c30a5c5b6998/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4453ccb82743f8994a89ebdf9c8c30a5c5b6998/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=c4453ccb82743f8994a89ebdf9c8c30a5c5b6998", "patch": "@@ -983,7 +983,12 @@ impl<'test> TestCx<'test> {\n                 &[\"-quiet\".as_ref(), \"-batch\".as_ref(), \"-nx\".as_ref(), &debugger_script];\n \n             let mut gdb = Command::new(self.config.gdb.as_ref().unwrap());\n-            gdb.args(debugger_opts).env(\"PYTHONPATH\", rust_pp_module_abs_path);\n+            let pythonpath = if let Ok(pp) = std::env::var(\"PYTHONPATH\") {\n+                format!(\"{pp}:{rust_pp_module_abs_path}\")\n+            } else {\n+                rust_pp_module_abs_path\n+            };\n+            gdb.args(debugger_opts).env(\"PYTHONPATH\", pythonpath);\n \n             debugger_run_result =\n                 self.compose_and_run(gdb, self.config.run_lib_path.to_str().unwrap(), None, None);\n@@ -1149,13 +1154,18 @@ impl<'test> TestCx<'test> {\n     ) -> ProcRes {\n         // Prepare the lldb_batchmode which executes the debugger script\n         let lldb_script_path = rust_src_root.join(\"src/etc/lldb_batchmode.py\");\n+        let pythonpath = if let Ok(pp) = std::env::var(\"PYTHONPATH\") {\n+            format!(\"{pp}:{}\", self.config.lldb_python_dir.as_ref().unwrap())\n+        } else {\n+            self.config.lldb_python_dir.as_ref().unwrap().to_string()\n+        };\n         self.cmd2procres(\n             Command::new(&self.config.python)\n                 .arg(&lldb_script_path)\n                 .arg(test_executable)\n                 .arg(debugger_script)\n                 .env(\"PYTHONUNBUFFERED\", \"1\") // Help debugging #78665\n-                .env(\"PYTHONPATH\", self.config.lldb_python_dir.as_ref().unwrap()),\n+                .env(\"PYTHONPATH\", pythonpath),\n         )\n     }\n "}]}