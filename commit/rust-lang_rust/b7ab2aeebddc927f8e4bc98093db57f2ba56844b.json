{"sha": "b7ab2aeebddc927f8e4bc98093db57f2ba56844b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3YWIyYWVlYmRkYzkyN2Y4ZTRiYzk4MDkzZGI1N2YyYmE1Njg0NGI=", "commit": {"author": {"name": "Ryan Prichard", "email": "ryan.prichard@gmail.com", "date": "2015-04-17T12:05:22Z"}, "committer": {"name": "Ryan Prichard", "email": "ryan.prichard@gmail.com", "date": "2015-04-23T03:26:19Z"}, "message": "Fix the dependency for the pretty-rpass-full tests\n\nThe current code attempts to define the\nPRETTY_DEPS$(1)_H_$(3)_pretty-rpass-full variable, which does not work,\nbecause $(1) and $(3) are not inside a function. Moreover, there is a test\n(run-pass-fulldeps/compiler-calls.rs) that uses rustc_driver, which is not\nan indirect dependency of librustc or libsyntax. Listing all the\ndependencies will be hard to maintain, but there's a better way to do\nthis...\n\nAs with the rpass-full and cfail-full tests, add dependencies using the\n$$(CSREQ$(1)_T_$(3)_H_$(3)) variable, which includes the complete set of\nhost and target crates, built for a particular stage and host. We use\nT_$(3), not T_$(2), because we only build LLVM for host triples (not\ntarget triples), so we can only build rustc_llvm for host triples. The\nfulldeps tests that use plugins need host rustc crates, whereas fulldeps\ntests that link against rustc and run should be skipped for\ncross-compilation (such as Android).\n\nFixes #22021", "tree": {"sha": "4634cf6486b211e2adc038a93283ed1084789bd3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4634cf6486b211e2adc038a93283ed1084789bd3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7ab2aeebddc927f8e4bc98093db57f2ba56844b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7ab2aeebddc927f8e4bc98093db57f2ba56844b", "html_url": "https://github.com/rust-lang/rust/commit/b7ab2aeebddc927f8e4bc98093db57f2ba56844b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7ab2aeebddc927f8e4bc98093db57f2ba56844b/comments", "author": {"login": "rprichard", "id": 1572855, "node_id": "MDQ6VXNlcjE1NzI4NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1572855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rprichard", "html_url": "https://github.com/rprichard", "followers_url": "https://api.github.com/users/rprichard/followers", "following_url": "https://api.github.com/users/rprichard/following{/other_user}", "gists_url": "https://api.github.com/users/rprichard/gists{/gist_id}", "starred_url": "https://api.github.com/users/rprichard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rprichard/subscriptions", "organizations_url": "https://api.github.com/users/rprichard/orgs", "repos_url": "https://api.github.com/users/rprichard/repos", "events_url": "https://api.github.com/users/rprichard/events{/privacy}", "received_events_url": "https://api.github.com/users/rprichard/received_events", "type": "User", "site_admin": false}, "committer": {"login": "rprichard", "id": 1572855, "node_id": "MDQ6VXNlcjE1NzI4NTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1572855?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rprichard", "html_url": "https://github.com/rprichard", "followers_url": "https://api.github.com/users/rprichard/followers", "following_url": "https://api.github.com/users/rprichard/following{/other_user}", "gists_url": "https://api.github.com/users/rprichard/gists{/gist_id}", "starred_url": "https://api.github.com/users/rprichard/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rprichard/subscriptions", "organizations_url": "https://api.github.com/users/rprichard/orgs", "repos_url": "https://api.github.com/users/rprichard/repos", "events_url": "https://api.github.com/users/rprichard/events{/privacy}", "received_events_url": "https://api.github.com/users/rprichard/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7fbedc58e3b0e102ece926a7f99041fc3ad3037a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7fbedc58e3b0e102ece926a7f99041fc3ad3037a", "html_url": "https://github.com/rust-lang/rust/commit/7fbedc58e3b0e102ece926a7f99041fc3ad3037a"}], "stats": {"total": 18, "additions": 10, "deletions": 8}, "files": [{"sha": "2d72583e07e33af1b7aff604c0ac4b5a53952f25", "filename": "mk/tests.mk", "status": "modified", "additions": 10, "deletions": 8, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b7ab2aeebddc927f8e4bc98093db57f2ba56844b/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/b7ab2aeebddc927f8e4bc98093db57f2ba56844b/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=b7ab2aeebddc927f8e4bc98093db57f2ba56844b", "patch": "@@ -753,20 +753,22 @@ PRETTY_DEPS_pretty-rpass-full = $(RPASS_FULL_TESTS)\n PRETTY_DEPS_pretty-rfail = $(RFAIL_TESTS)\n PRETTY_DEPS_pretty-bench = $(BENCH_TESTS)\n PRETTY_DEPS_pretty-pretty = $(PRETTY_TESTS)\n-# The stage- and host-specific dependencies are for e.g. macro_crate_test which pulls in\n-# external crates.\n-PRETTY_DEPS$(1)_H_$(3)_pretty-rpass =\n-PRETTY_DEPS$(1)_H_$(3)_pretty-rpass-full = $$(HLIB$(1)_H_$(3))/stamp.syntax $$(HLIB$(1)_H_$(3))/stamp.rustc\n-PRETTY_DEPS$(1)_H_$(3)_pretty-rfail =\n-PRETTY_DEPS$(1)_H_$(3)_pretty-bench =\n-PRETTY_DEPS$(1)_H_$(3)_pretty-pretty =\n PRETTY_DIRNAME_pretty-rpass = run-pass\n PRETTY_DIRNAME_pretty-rpass-valgrind = run-pass-valgrind\n PRETTY_DIRNAME_pretty-rpass-full = run-pass-fulldeps\n PRETTY_DIRNAME_pretty-rfail = run-fail\n PRETTY_DIRNAME_pretty-bench = bench\n PRETTY_DIRNAME_pretty-pretty = pretty\n \n+define DEF_PRETTY_FULLDEPS\n+PRETTY_DEPS$(1)_T_$(2)_H_$(3)_pretty-rpass-full = $$(CSREQ$(1)_T_$(3)_H_$(3))\n+endef\n+\n+$(foreach host,$(CFG_HOST), \\\n+ $(foreach target,$(CFG_TARGET), \\\n+  $(foreach stage,$(STAGES), \\\n+   $(eval $(call DEF_PRETTY_FULLDEPS,$(stage),$(target),$(host))))))\n+\n define DEF_RUN_PRETTY_TEST\n \n PRETTY_ARGS$(1)-T-$(2)-H-$(3)-$(4) := \\\n@@ -780,7 +782,7 @@ check-stage$(1)-T-$(2)-H-$(3)-$(4)-exec: $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4\n $$(call TEST_OK_FILE,$(1),$(2),$(3),$(4)): \\\n \t        $$(TEST_SREQ$(1)_T_$(2)_H_$(3)) \\\n \t        $$(PRETTY_DEPS_$(4)) \\\n-\t        $$(PRETTY_DEPS$(1)_H_$(3)_$(4))\n+\t        $$(PRETTY_DEPS$(1)_T_$(2)_H_$(3)_$(4))\n \t@$$(call E, run pretty-rpass [$(2)]: $$<)\n \t$$(Q)touch $$@.start_time\n \t$$(Q)$$(call CFG_RUN_CTEST_$(2),$(1),$$<,$(3)) \\"}]}