{"sha": "01d59f4a322c019cb9cbc2935fe8e7ba432bcd3d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxZDU5ZjRhMzIyYzAxOWNiOWNiYzI5MzVmZThlN2JhNDMyYmNkM2Q=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-02-02T21:24:43Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-02-02T21:27:20Z"}, "message": "Use name only when searching for an import candidate", "tree": {"sha": "196b013028820527229f4fe2741be200fc062404", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/196b013028820527229f4fe2741be200fc062404"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/01d59f4a322c019cb9cbc2935fe8e7ba432bcd3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/01d59f4a322c019cb9cbc2935fe8e7ba432bcd3d", "html_url": "https://github.com/rust-lang/rust/commit/01d59f4a322c019cb9cbc2935fe8e7ba432bcd3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/01d59f4a322c019cb9cbc2935fe8e7ba432bcd3d/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5e61c9b11def1897c4123eeafb14b4d6a5223546", "url": "https://api.github.com/repos/rust-lang/rust/commits/5e61c9b11def1897c4123eeafb14b4d6a5223546", "html_url": "https://github.com/rust-lang/rust/commit/5e61c9b11def1897c4123eeafb14b4d6a5223546"}], "stats": {"total": 22, "additions": 16, "deletions": 6}, "files": [{"sha": "7fd1f0e7d55d4f4c8a38b74d5a1dd046d19513d8", "filename": "crates/ra_assists/src/assists/auto_import.rs", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/01d59f4a322c019cb9cbc2935fe8e7ba432bcd3d/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs", "raw_url": "https://github.com/rust-lang/rust/raw/01d59f4a322c019cb9cbc2935fe8e7ba432bcd3d/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fassists%2Fauto_import.rs?ref=01d59f4a322c019cb9cbc2935fe8e7ba432bcd3d", "patch": "@@ -1,7 +1,7 @@\n use hir::{db::HirDatabase, ModPath};\n use ra_syntax::{\n     ast::{self, AstNode},\n-    SyntaxKind::USE_ITEM,\n+    SyntaxKind::{NAME_REF, USE_ITEM},\n     SyntaxNode,\n };\n \n@@ -36,6 +36,8 @@ pub(crate) fn auto_import<F: ImportsLocator>(\n     if path_to_import_syntax.ancestors().find(|ancestor| ancestor.kind() == USE_ITEM).is_some() {\n         return None;\n     }\n+    let name_to_import =\n+        path_to_import_syntax.descendants().find(|child| child.kind() == NAME_REF)?;\n \n     let module = path_to_import_syntax.ancestors().find_map(ast::Module::cast);\n     let position = match module.and_then(|it| it.item_list()) {\n@@ -52,7 +54,7 @@ pub(crate) fn auto_import<F: ImportsLocator>(\n     }\n \n     let proposed_imports = imports_locator\n-        .find_imports(&path_to_import_syntax.to_string())\n+        .find_imports(&name_to_import.to_string())\n         .into_iter()\n         .filter_map(|module_def| module_with_name_to_import.find_use_path(ctx.db, module_def))\n         .filter(|use_path| !use_path.segments.is_empty())\n@@ -121,21 +123,29 @@ mod tests {\n             r\"\n             use PubMod::PubStruct1;\n \n-            PubStruct2<|>\n+            struct Test {\n+                test: Pub<|>Struct2<u8>,\n+            }\n \n             pub mod PubMod {\n                 pub struct PubStruct1;\n-                pub struct PubStruct2;\n+                pub struct PubStruct2<T> {\n+                    _t: T,\n+                }\n             }\n             \",\n             r\"\n             use PubMod::{PubStruct2, PubStruct1};\n \n-            PubStruct2<|>\n+            struct Test {\n+                test: Pub<|>Struct2<u8>,\n+            }\n \n             pub mod PubMod {\n                 pub struct PubStruct1;\n-                pub struct PubStruct2;\n+                pub struct PubStruct2<T> {\n+                    _t: T,\n+                }\n             }\n             \",\n         );"}]}