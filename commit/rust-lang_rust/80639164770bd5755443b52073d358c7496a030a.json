{"sha": "80639164770bd5755443b52073d358c7496a030a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwNjM5MTY0NzcwYmQ1NzU1NDQzYjUyMDczZDM1OGM3NDk2YTAzMGE=", "commit": {"author": {"name": "Florian Gilcher", "email": "florian.gilcher@asquera.de", "date": "2015-10-17T18:16:54Z"}, "committer": {"name": "Florian Gilcher", "email": "florian.gilcher@asquera.de", "date": "2015-10-17T18:16:54Z"}, "message": "Cleanup as discussed in PR", "tree": {"sha": "f90b863c1980697dad573f7ec4b34228a22869af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f90b863c1980697dad573f7ec4b34228a22869af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80639164770bd5755443b52073d358c7496a030a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80639164770bd5755443b52073d358c7496a030a", "html_url": "https://github.com/rust-lang/rust/commit/80639164770bd5755443b52073d358c7496a030a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80639164770bd5755443b52073d358c7496a030a/comments", "author": {"login": "skade", "id": 47542, "node_id": "MDQ6VXNlcjQ3NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/47542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skade", "html_url": "https://github.com/skade", "followers_url": "https://api.github.com/users/skade/followers", "following_url": "https://api.github.com/users/skade/following{/other_user}", "gists_url": "https://api.github.com/users/skade/gists{/gist_id}", "starred_url": "https://api.github.com/users/skade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skade/subscriptions", "organizations_url": "https://api.github.com/users/skade/orgs", "repos_url": "https://api.github.com/users/skade/repos", "events_url": "https://api.github.com/users/skade/events{/privacy}", "received_events_url": "https://api.github.com/users/skade/received_events", "type": "User", "site_admin": false}, "committer": {"login": "skade", "id": 47542, "node_id": "MDQ6VXNlcjQ3NTQy", "avatar_url": "https://avatars.githubusercontent.com/u/47542?v=4", "gravatar_id": "", "url": "https://api.github.com/users/skade", "html_url": "https://github.com/skade", "followers_url": "https://api.github.com/users/skade/followers", "following_url": "https://api.github.com/users/skade/following{/other_user}", "gists_url": "https://api.github.com/users/skade/gists{/gist_id}", "starred_url": "https://api.github.com/users/skade/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/skade/subscriptions", "organizations_url": "https://api.github.com/users/skade/orgs", "repos_url": "https://api.github.com/users/skade/repos", "events_url": "https://api.github.com/users/skade/events{/privacy}", "received_events_url": "https://api.github.com/users/skade/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39e93d572b4fa85a71bbe04a2a1c15bcb445e26c", "url": "https://api.github.com/repos/rust-lang/rust/commits/39e93d572b4fa85a71bbe04a2a1c15bcb445e26c", "html_url": "https://github.com/rust-lang/rust/commit/39e93d572b4fa85a71bbe04a2a1c15bcb445e26c"}], "stats": {"total": 51, "additions": 40, "deletions": 11}, "files": [{"sha": "a3657460fe9924d8c3d0ac13635a4a62133ffcde", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/80639164770bd5755443b52073d358c7496a030a/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80639164770bd5755443b52073d358c7496a030a/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=80639164770bd5755443b52073d358c7496a030a", "patch": "@@ -152,8 +152,8 @@ pub fn plugin_registrar(reg: &mut Registry) {\n         mut_reference::UNNECESSARY_MUT_PASSED,\n         mutex_atomic::MUTEX_ATOMIC,\n         needless_bool::NEEDLESS_BOOL,\n-        needless_features::AS_MUT_SLICE,\n-        needless_features::AS_SLICE,\n+        needless_features::UNSTABLE_AS_MUT_SLICE,\n+        needless_features::UNSTABLE_AS_SLICE,\n         open_options::NONSENSICAL_OPEN_OPTIONS,\n         precedence::PRECEDENCE,\n         ptr_arg::PTR_ARG,"}, {"sha": "b1d38df73113cc671dd07f28bb88177d63ca7dfb", "filename": "src/needless_features.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/80639164770bd5755443b52073d358c7496a030a/src%2Fneedless_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80639164770bd5755443b52073d358c7496a030a/src%2Fneedless_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fneedless_features.rs?ref=80639164770bd5755443b52073d358c7496a030a", "patch": "@@ -6,44 +6,48 @@ use rustc::lint::*;\n use rustc_front::hir::*;\n \n use utils::{span_lint};\n+use utils;\n \n declare_lint! {\n-    pub AS_SLICE,\n+    pub UNSTABLE_AS_SLICE,\n     Warn,\n     \"as_slice is not stable and can be replaced by & v[..]\\\n see https://github.com/rust-lang/rust/issues/27729\"\n }\n \n declare_lint! {\n-    pub AS_MUT_SLICE,\n+    pub UNSTABLE_AS_MUT_SLICE,\n     Warn,\n     \"as_mut_slice is not stable and can be replaced by &mut v[..]\\\n see https://github.com/rust-lang/rust/issues/27729\"\n }\n \n-\n #[derive(Copy,Clone)]\n pub struct NeedlessFeaturesPass;\n \n impl LintPass for NeedlessFeaturesPass {\n     fn get_lints(&self) -> LintArray {\n-        lint_array!(AS_SLICE,AS_MUT_SLICE)\n+        lint_array!(UNSTABLE_AS_SLICE,UNSTABLE_AS_MUT_SLICE)\n     }\n }\n \n impl LateLintPass for NeedlessFeaturesPass {\n     fn check_expr(&mut self, cx: &LateContext, expr: &Expr) {\n         if let ExprMethodCall(ref name, _, _) = expr.node {\n-            if name.node.as_str() == \"as_slice\" {\n-                span_lint(cx, AS_SLICE, expr.span,\n+            if name.node.as_str() == \"as_slice\" && check_paths(cx, expr) {\n+                span_lint(cx, UNSTABLE_AS_SLICE, expr.span,\n                           \"used as_slice() from the 'convert' nightly feature. Use &[..] \\\n                            instead\");\n             }\n-            if name.node.as_str() == \"as_mut_slice\" {\n-                span_lint(cx, AS_MUT_SLICE, expr.span,\n+            if name.node.as_str() == \"as_mut_slice\" && check_paths(cx, expr) {\n+                span_lint(cx, UNSTABLE_AS_MUT_SLICE, expr.span,\n                           \"used as_mut_slice() from the 'convert' nightly feature. Use &mut [..] \\\n                            instead\");\n             }\n         }\n     }\n-}\n\\ No newline at end of file\n+}\n+\n+fn check_paths(cx: &LateContext, expr: &Expr) -> bool {\n+    utils::match_impl_method(cx, expr, &[\"collections\", \"vec\", \"Vec<T>\"])\n+}"}, {"sha": "c3ebfd8147d9cddd50249d354200afbfb64ed148", "filename": "src/utils.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/80639164770bd5755443b52073d358c7496a030a/src%2Futils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80639164770bd5755443b52073d358c7496a030a/src%2Futils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Futils.rs?ref=80639164770bd5755443b52073d358c7496a030a", "patch": "@@ -118,6 +118,19 @@ pub fn match_type(cx: &LateContext, ty: ty::Ty, path: &[&str]) -> bool {\n     }\n }\n \n+/// check if method call given in \"expr\" belongs to given trait\n+pub fn match_impl_method(cx: &LateContext, expr: &Expr, path: &[&str]) -> bool {\n+    let method_call = ty::MethodCall::expr(expr.id);\n+\n+    let trt_id = cx.tcx.tables\n+                       .borrow().method_map.get(&method_call)\n+                       .and_then(|callee| cx.tcx.impl_of_method(callee.def_id));\n+    if let Some(trt_id) = trt_id {\n+        match_def_path(cx, trt_id, path)\n+    } else {\n+        false\n+    }\n+}\n /// check if method call given in \"expr\" belongs to given trait\n pub fn match_trait_method(cx: &LateContext, expr: &Expr, path: &[&str]) -> bool {\n     let method_call = ty::MethodCall::expr(expr.id);"}, {"sha": "dee2a19d5d0f32263baa942080523b50621d0ddc", "filename": "tests/compile-fail/needless_features.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/80639164770bd5755443b52073d358c7496a030a/tests%2Fcompile-fail%2Fneedless_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80639164770bd5755443b52073d358c7496a030a/tests%2Fcompile-fail%2Fneedless_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fneedless_features.rs?ref=80639164770bd5755443b52073d358c7496a030a", "patch": "@@ -12,6 +12,18 @@ fn test_as_slice() {\n     v2.as_mut_slice(); //~ERROR used as_mut_slice() from the 'convert' nightly feature. Use &mut [..]\n }\n \n+struct ShouldWork;\n+\n+impl ShouldWork {\n+    fn as_slice(&self) -> &ShouldWork { self }\n+}\n+\n+fn test_should_work() {\n+    let sw = ShouldWork;\n+    sw.as_slice();\n+}\n+\n fn main() {\n     test_as_slice();\n+    test_should_work();\n }"}]}