{"sha": "7cdc8972342e8f4946b518ac4886079f604cf2c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjZGM4OTcyMzQyZThmNDk0NmI1MThhYzQ4ODYwNzlmNjA0Y2YyYzE=", "commit": {"author": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2020-05-22T02:11:52Z"}, "committer": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2020-05-22T02:11:52Z"}, "message": "only try to suggest for try trait_ref", "tree": {"sha": "a322e86172d3dd9cbeb8277394703a13811b45b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a322e86172d3dd9cbeb8277394703a13811b45b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7cdc8972342e8f4946b518ac4886079f604cf2c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7cdc8972342e8f4946b518ac4886079f604cf2c1", "html_url": "https://github.com/rust-lang/rust/commit/7cdc8972342e8f4946b518ac4886079f604cf2c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7cdc8972342e8f4946b518ac4886079f604cf2c1/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "47cc221e9827ab1b92f20353f423916a3f14d182", "url": "https://api.github.com/repos/rust-lang/rust/commits/47cc221e9827ab1b92f20353f423916a3f14d182", "html_url": "https://github.com/rust-lang/rust/commit/47cc221e9827ab1b92f20353f423916a3f14d182"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "e15ea11569f346172d4816abf43039364c3a3cfc", "filename": "src/libcore/ops/try.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7cdc8972342e8f4946b518ac4886079f604cf2c1/src%2Flibcore%2Fops%2Ftry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cdc8972342e8f4946b518ac4886079f604cf2c1/src%2Flibcore%2Fops%2Ftry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Ftry.rs?ref=7cdc8972342e8f4946b518ac4886079f604cf2c1", "patch": "@@ -25,6 +25,7 @@\n     )\n )]\n #[doc(alias = \"?\")]\n+#[cfg_attr(not(bootstrap), lang = \"try\")]\n pub trait Try {\n     /// The type of this value when viewed as successful.\n     #[unstable(feature = \"try_trait\", issue = \"42327\")]"}, {"sha": "8921cc0c99dcad466f136e449e470616309ee3d0", "filename": "src/librustc_hir/lang_items.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7cdc8972342e8f4946b518ac4886079f604cf2c1/src%2Flibrustc_hir%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cdc8972342e8f4946b518ac4886079f604cf2c1/src%2Flibrustc_hir%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_hir%2Flang_items.rs?ref=7cdc8972342e8f4946b518ac4886079f604cf2c1", "patch": "@@ -256,4 +256,6 @@ language_item_table! {\n     AlignOffsetLangItem,         \"align_offset\",       align_offset_fn,         Target::Fn;\n \n     TerminationTraitLangItem,    \"termination\",        termination,             Target::Trait;\n+\n+    TryTraitLangItem,            \"try\",                try_trait,               Target::Trait;\n }"}, {"sha": "f18a417cccd058de2d6e7af3c13a8cd564cd4d0b", "filename": "src/librustc_trait_selection/traits/error_reporting/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7cdc8972342e8f4946b518ac4886079f604cf2c1/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7cdc8972342e8f4946b518ac4886079f604cf2c1/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fmod.rs?ref=7cdc8972342e8f4946b518ac4886079f604cf2c1", "patch": "@@ -402,7 +402,11 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                         self.suggest_remove_reference(&obligation, &mut err, &trait_ref);\n                         self.suggest_semicolon_removal(&obligation, &mut err, span, &trait_ref);\n                         self.note_version_mismatch(&mut err, &trait_ref);\n-                        self.suggest_await_before_try(&mut err, &obligation, &trait_ref, span);\n+\n+                        if Some(trait_ref.def_id()) == tcx.lang_items().try_trait() {\n+                            self.suggest_await_before_try(&mut err, &obligation, &trait_ref, span);\n+                        }\n+\n                         if self.suggest_impl_trait(&mut err, span, &obligation, &trait_ref) {\n                             err.emit();\n                             return;"}]}