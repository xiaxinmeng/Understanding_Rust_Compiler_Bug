{"sha": "8e11189cbb129b5df33e27d21c077da6cfc5926f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhlMTExODljYmIxMjliNWRmMzNlMjdkMjFjMDc3ZGE2Y2ZjNTkyNmY=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-06-24T00:43:35Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-06-24T01:01:38Z"}, "message": "Move tests to `ui`", "tree": {"sha": "36a812709f3a589b5df7532c6a94daf2f328c31f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/36a812709f3a589b5df7532c6a94daf2f328c31f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8e11189cbb129b5df33e27d21c077da6cfc5926f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8e11189cbb129b5df33e27d21c077da6cfc5926f", "html_url": "https://github.com/rust-lang/rust/commit/8e11189cbb129b5df33e27d21c077da6cfc5926f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8e11189cbb129b5df33e27d21c077da6cfc5926f/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "229d0d3266002d343cdd2f4a3bf7f2fe9da15f38", "url": "https://api.github.com/repos/rust-lang/rust/commits/229d0d3266002d343cdd2f4a3bf7f2fe9da15f38", "html_url": "https://github.com/rust-lang/rust/commit/229d0d3266002d343cdd2f4a3bf7f2fe9da15f38"}], "stats": {"total": 269, "additions": 269, "deletions": 0}, "files": [{"sha": "2a6c71dbe39232abb0412ef6ff1e0f633cb31585", "filename": "src/test/ui/block-result/block-must-not-have-result-do.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-do.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-do.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-do.rs?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "previous_filename": "src/test/compile-fail/block-must-not-have-result-do.rs"}, {"sha": "a770ebeab35a7acc863dac283e06dec7fda01f42", "filename": "src/test/ui/block-result/block-must-not-have-result-do.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-do.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-do.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-do.stderr?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,11 @@\n+error[E0308]: mismatched types\n+  --> $DIR/block-must-not-have-result-do.rs:13:9\n+   |\n+13 |         true //~  ERROR mismatched types\n+   |         ^^^^ expected (), found bool\n+   |\n+   = note: expected type `()`\n+              found type `bool`\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "8728685fc8b026e4f8cf4f4559278eb96c119e5c", "filename": "src/test/ui/block-result/block-must-not-have-result-res.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-res.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-res.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-res.rs?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "previous_filename": "src/test/compile-fail/block-must-not-have-result-res.rs"}, {"sha": "b1146864566e33ec54fa13681c0c8e2a24c11929", "filename": "src/test/ui/block-result/block-must-not-have-result-res.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-res.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-res.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-res.stderr?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,11 @@\n+error[E0308]: mismatched types\n+  --> $DIR/block-must-not-have-result-res.rs:15:9\n+   |\n+15 |         true //~  ERROR mismatched types\n+   |         ^^^^ expected (), found bool\n+   |\n+   = note: expected type `()`\n+              found type `bool`\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "a0fb470e1e4d0f1887a13e7b9967184102455dc2", "filename": "src/test/ui/block-result/block-must-not-have-result-while.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-while.rs?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "previous_filename": "src/test/compile-fail/block-must-not-have-result-while.rs"}, {"sha": "31ec7cdd3c5abc39a10d9b8b5cc2f2c10518149a", "filename": "src/test/ui/block-result/block-must-not-have-result-while.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-while.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-while.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fblock-must-not-have-result-while.stderr?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,11 @@\n+error[E0308]: mismatched types\n+  --> $DIR/block-must-not-have-result-while.rs:13:9\n+   |\n+13 |         true //~  ERROR mismatched types\n+   |         ^^^^ expected (), found bool\n+   |\n+   = note: expected type `()`\n+              found type `bool`\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "530a0e415622815150b4d26221f1bbf95ea9561c", "filename": "src/test/ui/block-result/consider-removing-last-semi.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.rs?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "previous_filename": "src/test/compile-fail/consider-removing-last-semi.rs"}, {"sha": "944c9d6c427941a99bf3070b359b4573bc885d6c", "filename": "src/test/ui/block-result/consider-removing-last-semi.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fconsider-removing-last-semi.stderr?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,38 @@\n+error[E0308]: mismatched types\n+  --> $DIR/consider-removing-last-semi.rs:11:18\n+   |\n+11 |   fn f() -> String {  //~ ERROR mismatched types\n+   |  __________________^\n+12 | |     0u8;\n+13 | |     \"bla\".to_string();  //~ HELP consider removing this semicolon\n+14 | | }\n+   | |_^ expected struct `std::string::String`, found ()\n+   |\n+   = note: expected type `std::string::String`\n+              found type `()`\n+help: consider removing this semicolon:\n+  --> $DIR/consider-removing-last-semi.rs:13:22\n+   |\n+13 |     \"bla\".to_string();  //~ HELP consider removing this semicolon\n+   |                      ^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/consider-removing-last-semi.rs:16:18\n+   |\n+16 |   fn g() -> String {  //~ ERROR mismatched types\n+   |  __________________^\n+17 | |     \"this won't work\".to_string();\n+18 | |     \"removeme\".to_string(); //~ HELP consider removing this semicolon\n+19 | | }\n+   | |_^ expected struct `std::string::String`, found ()\n+   |\n+   = note: expected type `std::string::String`\n+              found type `()`\n+help: consider removing this semicolon:\n+  --> $DIR/consider-removing-last-semi.rs:18:27\n+   |\n+18 |     \"removeme\".to_string(); //~ HELP consider removing this semicolon\n+   |                           ^\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "8a0d7a335d6afb17d238246bb46ae44f6797ed25", "filename": "src/test/ui/block-result/expected-return-on-unit.stderr", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fexpected-return-on-unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fexpected-return-on-unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fexpected-return-on-unit.stderr?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,4 @@\n+error[E0601]: main function not found\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "192f78e41cb43cdf23d71c231f4661fc63ac3870", "filename": "src/test/ui/block-result/issue-11714.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.rs?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "previous_filename": "src/test/compile-fail/issue-11714.rs"}, {"sha": "cba9c3f51d7e30bb0d6e8505bd6cf8de17579743", "filename": "src/test/ui/block-result/issue-11714.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-11714.stderr?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,21 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-11714.rs:11:18\n+   |\n+11 |   fn blah() -> i32 { //~ ERROR mismatched types\n+   |  __________________^\n+12 | |     1\n+13 | |\n+14 | |     ; //~ HELP consider removing this semicolon:\n+15 | | }\n+   | |_^ expected i32, found ()\n+   |\n+   = note: expected type `i32`\n+              found type `()`\n+help: consider removing this semicolon:\n+  --> $DIR/issue-11714.rs:14:5\n+   |\n+14 |     ; //~ HELP consider removing this semicolon:\n+   |     ^\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "9406199afc231904e58df233178c4f6c544673eb", "filename": "src/test/ui/block-result/issue-13428.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.rs?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "previous_filename": "src/test/compile-fail/issue-13428.rs"}, {"sha": "d0ed8935cd7755f35aa3d4923e8a29135c21b2c9", "filename": "src/test/ui/block-result/issue-13428.stderr", "status": "added", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-13428.stderr?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,41 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-13428.rs:13:20\n+   |\n+13 |   fn foo() -> String {  //~ ERROR mismatched types\n+   |  ____________________^\n+14 | |     format!(\"Hello {}\",\n+15 | |             \"world\")\n+16 | |     // Put the trailing semicolon on its own line to test that the\n+17 | |     // note message gets the offending semicolon exactly\n+18 | |     ;   //~ HELP consider removing this semicolon\n+19 | | }\n+   | |_^ expected struct `std::string::String`, found ()\n+   |\n+   = note: expected type `std::string::String`\n+              found type `()`\n+help: consider removing this semicolon:\n+  --> $DIR/issue-13428.rs:18:5\n+   |\n+18 |     ;   //~ HELP consider removing this semicolon\n+   |     ^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-13428.rs:21:20\n+   |\n+21 |   fn bar() -> String {  //~ ERROR mismatched types\n+   |  ____________________^\n+22 | |     \"foobar\".to_string()\n+23 | |     ;   //~ HELP consider removing this semicolon\n+24 | | }\n+   | |_^ expected struct `std::string::String`, found ()\n+   |\n+   = note: expected type `std::string::String`\n+              found type `()`\n+help: consider removing this semicolon:\n+  --> $DIR/issue-13428.rs:23:5\n+   |\n+23 |     ;   //~ HELP consider removing this semicolon\n+   |     ^\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "e4ed87c3cb0cd5baac0a663c3af4a76006e38c9f", "filename": "src/test/ui/block-result/issue-13624.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.rs?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "previous_filename": "src/test/compile-fail/issue-13624.rs"}, {"sha": "72ff859d7e93a0f71bbbafcb25e79b5e804038bb", "filename": "src/test/ui/block-result/issue-13624.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-13624.stderr?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,20 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-13624.rs:17:5\n+   |\n+17 |     Enum::EnumStructVariant { x: 1, y: 2, z: 3 }\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found enum `a::Enum`\n+   |\n+   = note: expected type `()`\n+              found type `a::Enum`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-13624.rs:32:9\n+   |\n+32 |         a::Enum::EnumStructVariant { x, y, z } => {\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected (), found enum `a::Enum`\n+   |\n+   = note: expected type `()`\n+              found type `a::Enum`\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "9df63583998692931f52c1496887aa130881e382", "filename": "src/test/ui/block-result/issue-20862.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-20862.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-20862.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-20862.rs?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "previous_filename": "src/test/compile-fail/issue-20862.rs"}, {"sha": "757fe1666c35c09a2a7d5459a7bd5df81248bb27", "filename": "src/test/ui/block-result/issue-20862.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-20862.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-20862.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-20862.stderr?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,17 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-20862.rs:12:5\n+   |\n+12 |     |y| x + y\n+   |     ^^^^^^^^^ expected (), found closure\n+   |\n+   = note: expected type `()`\n+              found type `[closure@$DIR/issue-20862.rs:12:5: 12:14 x:_]`\n+\n+error[E0618]: expected function, found `()`\n+  --> $DIR/issue-20862.rs:17:13\n+   |\n+17 |     let x = foo(5)(2);\n+   |             ^^^^^^^^^\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "81f66e3e2cfeeb855648c2ae8b1d4af4a89a2674", "filename": "src/test/ui/block-result/issue-22645.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-22645.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-22645.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-22645.rs?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "previous_filename": "src/test/compile-fail/issue-22645.rs"}, {"sha": "3921a301c922393d5d7af0fb2230d7398970983b", "filename": "src/test/ui/block-result/issue-22645.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-22645.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-22645.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-22645.stderr?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,21 @@\n+error[E0277]: the trait bound `{integer}: Scalar` is not satisfied\n+  --> $DIR/issue-22645.rs:25:5\n+   |\n+25 |   b + 3 //~ ERROR E0277\n+   |     ^ the trait `Scalar` is not implemented for `{integer}`\n+   |\n+   = help: the following implementations were found:\n+             <f64 as Scalar>\n+   = note: required because of the requirements on the impl of `std::ops::Add<{integer}>` for `Bob`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-22645.rs:25:3\n+   |\n+25 |   b + 3 //~ ERROR E0277\n+   |   ^^^^^ expected (), found struct `Bob`\n+   |\n+   = note: expected type `()`\n+              found type `Bob`\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "7928c04b9df87b5f3130ea6158933a6a010ada15", "filename": "src/test/ui/block-result/issue-3563.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.rs?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "previous_filename": "src/test/compile-fail/issue-3563.rs"}, {"sha": "9b403bcd93db7ced0cf5d5ad6275af420b2d0576", "filename": "src/test/ui/block-result/issue-3563.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-3563.stderr?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,17 @@\n+error[E0599]: no method named `b` found for type `&Self` in the current scope\n+  --> $DIR/issue-3563.rs:13:17\n+   |\n+13 |         || self.b()\n+   |                 ^\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-3563.rs:13:9\n+   |\n+13 |         || self.b()\n+   |         ^^^^^^^^^^^ expected (), found closure\n+   |\n+   = note: expected type `()`\n+              found type `[closure@$DIR/issue-3563.rs:13:9: 13:20 self:_]`\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "1cbb7588e17df5e5fdddb3d8f0ff54f5e2608bbf", "filename": "src/test/ui/block-result/issue-5500.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.rs?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "previous_filename": "src/test/compile-fail/issue-5500.rs"}, {"sha": "bffe2a82ca8d756961d54f284a0efbc2beff9928", "filename": "src/test/ui/block-result/issue-5500.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Fissue-5500.stderr?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,11 @@\n+error[E0308]: mismatched types\n+  --> $DIR/issue-5500.rs:12:5\n+   |\n+12 |     &panic!()\n+   |     ^^^^^^^^^ expected (), found reference\n+   |\n+   = note: expected type `()`\n+              found type `&_`\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "291b7a16f141b8215b34efadbc4a9d6adda44474", "filename": "src/test/ui/block-result/unexpected-return-on-unit.rs", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.rs?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,24 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that we do some basic error correcton in the tokeniser (and don't spew\n+// too many bogus errors).\n+\n+fn foo() -> usize {\n+    3\n+}\n+\n+fn bar() {\n+    foo()\n+}\n+\n+fn main() {\n+    bar()\n+}"}, {"sha": "ad10312d064dea9a1cb08937949f1271b7aba49d", "filename": "src/test/ui/block-result/unexpected-return-on-unit.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fblock-result%2Funexpected-return-on-unit.stderr?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,11 @@\n+error[E0308]: mismatched types\n+  --> $DIR/unexpected-return-on-unit.rs:19:5\n+   |\n+19 |     foo()\n+   |     ^^^^^ expected (), found usize\n+   |\n+   = note: expected type `()`\n+              found type `usize`\n+\n+error: aborting due to previous error(s)\n+"}, {"sha": "8c61fc602e09e7432845ce35afe008b3771af1d6", "filename": "src/test/ui/mismatched_types/for-loop-has-unit-body.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fmismatched_types%2Ffor-loop-has-unit-body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fmismatched_types%2Ffor-loop-has-unit-body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Ffor-loop-has-unit-body.rs?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "previous_filename": "src/test/compile-fail/for-loop-has-unit-body.rs"}, {"sha": "6787fe91bf30847efb0b341f3c18d04db2151a44", "filename": "src/test/ui/mismatched_types/for-loop-has-unit-body.stderr", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fmismatched_types%2Ffor-loop-has-unit-body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8e11189cbb129b5df33e27d21c077da6cfc5926f/src%2Ftest%2Fui%2Fmismatched_types%2Ffor-loop-has-unit-body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Ffor-loop-has-unit-body.stderr?ref=8e11189cbb129b5df33e27d21c077da6cfc5926f", "patch": "@@ -0,0 +1,11 @@\n+error[E0308]: mismatched types\n+  --> $DIR/for-loop-has-unit-body.rs:13:9\n+   |\n+13 |         x //~ ERROR mismatched types\n+   |         ^ expected (), found integral variable\n+   |\n+   = note: expected type `()`\n+              found type `{integer}`\n+\n+error: aborting due to previous error(s)\n+"}]}