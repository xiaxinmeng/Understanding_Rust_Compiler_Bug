{"sha": "f6882ede4dc32684e000d256644c9e192ea8c738", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2ODgyZWRlNGRjMzI2ODRlMDAwZDI1NjY0NGM5ZTE5MmVhOGM3Mzg=", "commit": {"author": {"name": "Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-10-09T08:01:31Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-10-09T08:01:31Z"}, "message": "Merge pull request #3287 from JoshMcguigan/cmp_owned-2925\n\ncmp_owned false positive", "tree": {"sha": "7fa967514bc91d4c580a1000aa925214b5789bdb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7fa967514bc91d4c580a1000aa925214b5789bdb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6882ede4dc32684e000d256644c9e192ea8c738", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbvGBbCRBK7hj4Ov3rIwAAdHIIAKqc/bowo6wvu3V9aYerdH3g\nEXseg7vMVLd+t8tBnGCE68rjmaHbdkNmB5UlNF+ibyIDKPRXgW0+w7UNme2RZBpV\nVEa+D9fDwBANSnogLzMzfneJ1I31FQpoRA2q+TonpE5hOeZO2h1kHr/kD9jpK+DV\nw4ULO9FMr6GBGf8b1TIPLVA9GmquMLzV0t6nkHpmvyA31b3HgdsWN0Ovu73PCHZf\ngimfVTwivvpHaYRscL8ZB6Q7xzsGcQJD67waKSlp2JWd5IlJas354w0zs6tsnzsP\ngDG3lMnF7IWRhFfT+Qj82vzDwXtwQp1MDCmmfzMFHIWc5STIgVmM12cOxcy1lkE=\n=byFJ\n-----END PGP SIGNATURE-----\n", "payload": "tree 7fa967514bc91d4c580a1000aa925214b5789bdb\nparent 995a974182dd4377f7b570423d3fa5aacfed21cc\nparent ad5c29a445692c0c074ee1f019fe1ff2056da23f\nauthor Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer <github35764891676564198441@oli-obk.de> 1539072091 +0200\ncommitter GitHub <noreply@github.com> 1539072091 +0200\n\nMerge pull request #3287 from JoshMcguigan/cmp_owned-2925\n\ncmp_owned false positive"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6882ede4dc32684e000d256644c9e192ea8c738", "html_url": "https://github.com/rust-lang/rust/commit/f6882ede4dc32684e000d256644c9e192ea8c738", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6882ede4dc32684e000d256644c9e192ea8c738/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "995a974182dd4377f7b570423d3fa5aacfed21cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/995a974182dd4377f7b570423d3fa5aacfed21cc", "html_url": "https://github.com/rust-lang/rust/commit/995a974182dd4377f7b570423d3fa5aacfed21cc"}, {"sha": "ad5c29a445692c0c074ee1f019fe1ff2056da23f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad5c29a445692c0c074ee1f019fe1ff2056da23f", "html_url": "https://github.com/rust-lang/rust/commit/ad5c29a445692c0c074ee1f019fe1ff2056da23f"}], "stats": {"total": 42, "additions": 27, "deletions": 15}, "files": [{"sha": "4e6d5b72efce74fd6fea9d2ace77e31366279d18", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 14, "deletions": 12, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f6882ede4dc32684e000d256644c9e192ea8c738/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6882ede4dc32684e000d256644c9e192ea8c738/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=f6882ede4dc32684e000d256644c9e192ea8c738", "patch": "@@ -334,11 +334,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n                     |db| {\n                         let sugg = if binop.node == BinOpKind::Or { !sugg } else { sugg };\n                         db.span_suggestion_with_applicability(\n-                            s.span, \n+                            s.span,\n                             \"replace it with\",\n                             format!(\n                                 \"if {} {{ {}; }}\",\n-                                sugg, \n+                                sugg,\n                                 &snippet(cx, b.span, \"..\"),\n                             ),\n                             Applicability::MachineApplicable, // snippet\n@@ -520,16 +520,17 @@ fn check_to_owned(cx: &LateContext<'_, '_>, expr: &Expr, other: &Expr) {\n         None => return,\n     };\n \n-    // *arg impls PartialEq<other>\n-    if !arg_ty\n+    let deref_arg_impl_partial_eq_other = arg_ty\n         .builtin_deref(true)\n-        .map_or(false, |tam| implements_trait(cx, tam.ty, partial_eq_trait_id, &[other_ty.into()]))\n-        // arg impls PartialEq<*other>\n-        && !other_ty\n+        .map_or(false, |tam| implements_trait(cx, tam.ty, partial_eq_trait_id, &[other_ty.into()]));\n+    let arg_impl_partial_eq_deref_other = other_ty\n         .builtin_deref(true)\n-        .map_or(false, |tam| implements_trait(cx, arg_ty, partial_eq_trait_id, &[tam.ty.into()]))\n-        // arg impls PartialEq<other>\n-        && !implements_trait(cx, arg_ty, partial_eq_trait_id, &[other_ty.into()])\n+        .map_or(false, |tam| implements_trait(cx, arg_ty, partial_eq_trait_id, &[tam.ty.into()]));\n+    let arg_impl_partial_eq_other = implements_trait(cx, arg_ty, partial_eq_trait_id, &[other_ty.into()]);\n+\n+    if !deref_arg_impl_partial_eq_other\n+        && !arg_impl_partial_eq_deref_other\n+        && !arg_impl_partial_eq_other\n     {\n         return;\n     }\n@@ -559,10 +560,11 @@ fn check_to_owned(cx: &LateContext<'_, '_>, expr: &Expr, other: &Expr) {\n                     }\n                 }\n             }\n+            let try_hint = if deref_arg_impl_partial_eq_other { format!(\"*{}\", snip) } else { snip.to_string() };\n             db.span_suggestion_with_applicability(\n-                expr.span, \n+                expr.span,\n                 \"try\",\n-                snip.to_string(),\n+                try_hint,\n                 Applicability::MachineApplicable, // snippet\n             );\n         },"}, {"sha": "031809f5df5f391884eef7825ac9a80416211c58", "filename": "tests/ui/cmp_owned.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f6882ede4dc32684e000d256644c9e192ea8c738/tests%2Fui%2Fcmp_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6882ede4dc32684e000d256644c9e192ea8c738/tests%2Fui%2Fcmp_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned.rs?ref=f6882ede4dc32684e000d256644c9e192ea8c738", "patch": "@@ -31,6 +31,10 @@ fn main() {\n     42.to_string() == \"42\";\n \n     Foo.to_owned() == Foo;\n+\n+    \"abc\".chars().filter(|c| c.to_owned() != 'X');\n+\n+    \"abc\".chars().filter(|c| *c != 'X');\n }\n \n struct Foo;"}, {"sha": "5434b68de9fc4751e6c7f1d9cc861ee997a0311b", "filename": "tests/ui/cmp_owned.stderr", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f6882ede4dc32684e000d256644c9e192ea8c738/tests%2Fui%2Fcmp_owned.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f6882ede4dc32684e000d256644c9e192ea8c738/tests%2Fui%2Fcmp_owned.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcmp_owned.stderr?ref=f6882ede4dc32684e000d256644c9e192ea8c738", "patch": "@@ -31,10 +31,16 @@ error: this creates an owned instance just for comparison\n    |     ^^^^^^^^^^^^^^ help: try: `Foo`\n \n error: this creates an owned instance just for comparison\n-  --> $DIR/cmp_owned.rs:40:9\n+  --> $DIR/cmp_owned.rs:35:30\n    |\n-40 |         self.to_owned() == *other\n+35 |     \"abc\".chars().filter(|c| c.to_owned() != 'X');\n+   |                              ^^^^^^^^^^^^ help: try: `*c`\n+\n+error: this creates an owned instance just for comparison\n+  --> $DIR/cmp_owned.rs:44:9\n+   |\n+44 |         self.to_owned() == *other\n    |         ^^^^^^^^^^^^^^^ try calling implementing the comparison without allocating\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 7 previous errors\n "}]}