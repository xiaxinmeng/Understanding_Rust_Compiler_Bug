{"sha": "c257f098a8f0854e52a6c773eed2ba04ee75de97", "node_id": "C_kwDOAAsO6NoAKGMyNTdmMDk4YThmMDg1NGU1MmE2Yzc3M2VlZDJiYTA0ZWU3NWRlOTc", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-04T18:19:37Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-04T18:19:37Z"}, "message": "Auto merge of #9115 - Alexendoo:new-with-const-generics, r=llogiq\n\n`new_without_default`: ignore const generics/lifetime params on `fn new`\n\nFixes #9113\n\nNo longer lints if `fn new` has any params\n\nchangelog: [`new_without_default`]: no longer lints const generics and lifetime params on `fn new`", "tree": {"sha": "d4629ea57a4589ff017c40c3a9c751541ddafe6a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4629ea57a4589ff017c40c3a9c751541ddafe6a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c257f098a8f0854e52a6c773eed2ba04ee75de97", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c257f098a8f0854e52a6c773eed2ba04ee75de97", "html_url": "https://github.com/rust-lang/rust/commit/c257f098a8f0854e52a6c773eed2ba04ee75de97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c257f098a8f0854e52a6c773eed2ba04ee75de97/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b15f06e74f1195228d8dbb3f38d3e085b6c9ccc1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b15f06e74f1195228d8dbb3f38d3e085b6c9ccc1", "html_url": "https://github.com/rust-lang/rust/commit/b15f06e74f1195228d8dbb3f38d3e085b6c9ccc1"}, {"sha": "fec45930823c77acd91bfeec153b323bacfab099", "url": "https://api.github.com/repos/rust-lang/rust/commits/fec45930823c77acd91bfeec153b323bacfab099", "html_url": "https://github.com/rust-lang/rust/commit/fec45930823c77acd91bfeec153b323bacfab099"}], "stats": {"total": 26, "additions": 17, "deletions": 9}, "files": [{"sha": "5c45ee6d94ad3c58ad33daeffc50ae747e5999de", "filename": "clippy_lints/src/new_without_default.rs", "status": "modified", "additions": 3, "deletions": 9, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c257f098a8f0854e52a6c773eed2ba04ee75de97/clippy_lints%2Fsrc%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c257f098a8f0854e52a6c773eed2ba04ee75de97/clippy_lints%2Fsrc%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fnew_without_default.rs?ref=c257f098a8f0854e52a6c773eed2ba04ee75de97", "patch": "@@ -88,15 +88,9 @@ impl<'tcx> LateLintPass<'tcx> for NewWithoutDefault {\n                             // shouldn't be implemented when it is hidden in docs\n                             return;\n                         }\n-                        if impl_item\n-                            .generics\n-                            .params\n-                            .iter()\n-                            .any(|gen| matches!(gen.kind, hir::GenericParamKind::Type { .. }))\n-                        {\n-                            // when the result of `new()` depends on a type parameter we should not require\n-                            // an\n-                            // impl of `Default`\n+                        if !impl_item.generics.params.is_empty() {\n+                            // when the result of `new()` depends on a parameter we should not require\n+                            // an impl of `Default`\n                             return;\n                         }\n                         if_chain! {"}, {"sha": "65809023f8dff129d3d3d734c72d09def63b74c9", "filename": "tests/ui/new_without_default.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c257f098a8f0854e52a6c773eed2ba04ee75de97/tests%2Fui%2Fnew_without_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c257f098a8f0854e52a6c773eed2ba04ee75de97/tests%2Fui%2Fnew_without_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnew_without_default.rs?ref=c257f098a8f0854e52a6c773eed2ba04ee75de97", "patch": "@@ -212,3 +212,17 @@ impl DocHidden {\n }\n \n fn main() {}\n+\n+pub struct IgnoreConstGenericNew(usize);\n+impl IgnoreConstGenericNew {\n+    pub fn new<const N: usize>() -> Self {\n+        Self(N)\n+    }\n+}\n+\n+pub struct IgnoreLifetimeNew;\n+impl IgnoreLifetimeNew {\n+    pub fn new<'a>() -> Self {\n+        Self\n+    }\n+}"}]}