{"sha": "0179aacfc1d1e5086edacc0aee1e21b753645a13", "node_id": "C_kwDOAAsO6NoAKDAxNzlhYWNmYzFkMWU1MDg2ZWRhY2MwYWVlMWUyMWI3NTM2NDVhMTM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-20T23:14:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-20T23:14:15Z"}, "message": "Rollup merge of #96196 - jyn514:no-assertion, r=Mark-Simulacrum\n\nRemove assertion that all paths in `ShouldRun` exist\n\nThis breaks on submodules (see #96188). Disable the assertion for now until I can think of a proper\nfix.\n\nThis doesn't revert any of the changes in `Step`s themselves, only what\n`ShouldRun::paths` does.", "tree": {"sha": "10486bc84496e32323dca3c60a9cbcb25872cacc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10486bc84496e32323dca3c60a9cbcb25872cacc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0179aacfc1d1e5086edacc0aee1e21b753645a13", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiYJPHCRBK7hj4Ov3rIwAAPeQIAGTXOXO2ims9E83LmQk5fwoO\n7zxNu2nToGHNFIc2qBlJBiSMMGvEdbaOdqFLXWqj8f5lB0Oxn0EX0SnOLsQwu1dJ\nqfZWS3tgQAoviqZh3o+SnSgJ0vxRPY3qjXkznPofB+XhqwGVHdqmv/o7OsNQKAIo\n6VljtMliFFPc6Qwuj2oc09JEhiZPnTiGtZTQFZKzi3k2gOKwkK6enDI+kz54X0df\nqlr1X/8FO+M/2GhEwOTKlC4iYmngrd4T0pdjmGyUGfpt1hvDBRPHvm9dL87s4izS\ngABdUBDELSTpI/iv+r1Ziq78N+oiu3FTvDwYxwNUrml1WDKa/YauRvZw0VdmLE8=\n=aAJT\n-----END PGP SIGNATURE-----\n", "payload": "tree 10486bc84496e32323dca3c60a9cbcb25872cacc\nparent 1e43aae0ef1dfb4d5ec470990dfedda201ad18ad\nparent b4ca06558a51cf421be98e1dbb8285c7b32f6450\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1650496455 +0200\ncommitter GitHub <noreply@github.com> 1650496455 +0200\n\nRollup merge of #96196 - jyn514:no-assertion, r=Mark-Simulacrum\n\nRemove assertion that all paths in `ShouldRun` exist\n\nThis breaks on submodules (see #96188). Disable the assertion for now until I can think of a proper\nfix.\n\nThis doesn't revert any of the changes in `Step`s themselves, only what\n`ShouldRun::paths` does.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0179aacfc1d1e5086edacc0aee1e21b753645a13", "html_url": "https://github.com/rust-lang/rust/commit/0179aacfc1d1e5086edacc0aee1e21b753645a13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0179aacfc1d1e5086edacc0aee1e21b753645a13/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1e43aae0ef1dfb4d5ec470990dfedda201ad18ad", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e43aae0ef1dfb4d5ec470990dfedda201ad18ad", "html_url": "https://github.com/rust-lang/rust/commit/1e43aae0ef1dfb4d5ec470990dfedda201ad18ad"}, {"sha": "b4ca06558a51cf421be98e1dbb8285c7b32f6450", "url": "https://api.github.com/repos/rust-lang/rust/commits/b4ca06558a51cf421be98e1dbb8285c7b32f6450", "html_url": "https://github.com/rust-lang/rust/commit/b4ca06558a51cf421be98e1dbb8285c7b32f6450"}], "stats": {"total": 12, "additions": 7, "deletions": 5}, "files": [{"sha": "965e66880f4d1a1dd4e2d215a5004058dd420424", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0179aacfc1d1e5086edacc0aee1e21b753645a13/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0179aacfc1d1e5086edacc0aee1e21b753645a13/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=0179aacfc1d1e5086edacc0aee1e21b753645a13", "patch": "@@ -388,11 +388,13 @@ impl<'a> ShouldRun<'a> {\n             paths\n                 .iter()\n                 .map(|p| {\n-                    assert!(\n-                        self.builder.src.join(p).exists(),\n-                        \"`should_run.paths` should correspond to real on-disk paths - use `alias` if there is no relevant path: {}\",\n-                        p\n-                    );\n+                    // FIXME(#96188): make sure this is actually a path.\n+                    // This currently breaks for paths within submodules.\n+                    //assert!(\n+                    //    self.builder.src.join(p).exists(),\n+                    //    \"`should_run.paths` should correspond to real on-disk paths - use `alias` if there is no relevant path: {}\",\n+                    //    p\n+                    //);\n                     TaskPath { path: p.into(), kind: Some(self.kind) }\n                 })\n                 .collect(),"}]}