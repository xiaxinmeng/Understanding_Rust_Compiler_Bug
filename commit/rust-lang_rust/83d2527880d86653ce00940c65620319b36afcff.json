{"sha": "83d2527880d86653ce00940c65620319b36afcff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZDI1Mjc4ODBkODY2NTNjZTAwOTQwYzY1NjIwMzE5YjM2YWZjZmY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-30T14:50:15Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-30T18:07:59Z"}, "message": "Move joinLines to the new Ctx", "tree": {"sha": "1c20ffd305fe661b1aab9d1e0b0bbc7e05ec389c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1c20ffd305fe661b1aab9d1e0b0bbc7e05ec389c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83d2527880d86653ce00940c65620319b36afcff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83d2527880d86653ce00940c65620319b36afcff", "html_url": "https://github.com/rust-lang/rust/commit/83d2527880d86653ce00940c65620319b36afcff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83d2527880d86653ce00940c65620319b36afcff/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b42d3ee3cc22aaa892d15c4ba2219a3bc53907a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b42d3ee3cc22aaa892d15c4ba2219a3bc53907a1", "html_url": "https://github.com/rust-lang/rust/commit/b42d3ee3cc22aaa892d15c4ba2219a3bc53907a1"}], "stats": {"total": 42, "additions": 21, "deletions": 21}, "files": [{"sha": "8090c7e5b2089e3b92b11b4a07e268d8ae45815c", "filename": "editors/code/src/commands/index.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83d2527880d86653ce00940c65620319b36afcff/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "raw_url": "https://github.com/rust-lang/rust/raw/83d2527880d86653ce00940c65620319b36afcff/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Findex.ts?ref=83d2527880d86653ce00940c65620319b36afcff", "patch": "@@ -2,10 +2,10 @@ import { Ctx, Cmd } from '../ctx'\n \n import { analyzerStatus } from './analyzer_status';\n import { matchingBrace } from './matching_brace';\n+import { joinLines } from './join_lines';\n import * as applySourceChange from './apply_source_change';\n import * as expandMacro from './expand_macro';\n import * as inlayHints from './inlay_hints';\n-import * as joinLines from './join_lines';\n import * as onEnter from './on_enter';\n import * as parentModule from './parent_module';\n import * as runnables from './runnables';"}, {"sha": "7952fb0c006ceba7691aaedbd38857908a25ceaf", "filename": "editors/code/src/commands/join_lines.ts", "status": "modified", "additions": 19, "deletions": 19, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/83d2527880d86653ce00940c65620319b36afcff/editors%2Fcode%2Fsrc%2Fcommands%2Fjoin_lines.ts", "raw_url": "https://github.com/rust-lang/rust/raw/83d2527880d86653ce00940c65620319b36afcff/editors%2Fcode%2Fsrc%2Fcommands%2Fjoin_lines.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fjoin_lines.ts?ref=83d2527880d86653ce00940c65620319b36afcff", "patch": "@@ -1,29 +1,29 @@\n-import * as vscode from 'vscode';\n-\n import { Range, TextDocumentIdentifier } from 'vscode-languageclient';\n-import { Server } from '../server';\n+import { Ctx, Cmd } from '../ctx';\n import {\n     handle as applySourceChange,\n     SourceChange,\n } from './apply_source_change';\n \n+export function joinLines(ctx: Ctx): Cmd {\n+    return async () => {\n+        const editor = ctx.activeRustEditor;\n+        if (!editor) {\n+            return;\n+        }\n+        const request: JoinLinesParams = {\n+            range: ctx.client.code2ProtocolConverter.asRange(editor.selection),\n+            textDocument: { uri: editor.document.uri.toString() },\n+        };\n+        const change = await ctx.client.sendRequest<SourceChange>(\n+            'rust-analyzer/joinLines',\n+            request,\n+        );\n+        await applySourceChange(change);\n+    }\n+}\n+\n interface JoinLinesParams {\n     textDocument: TextDocumentIdentifier;\n     range: Range;\n }\n-\n-export async function handle() {\n-    const editor = vscode.window.activeTextEditor;\n-    if (editor == null || editor.document.languageId !== 'rust') {\n-        return;\n-    }\n-    const request: JoinLinesParams = {\n-        range: Server.client.code2ProtocolConverter.asRange(editor.selection),\n-        textDocument: { uri: editor.document.uri.toString() },\n-    };\n-    const change = await Server.client.sendRequest<SourceChange>(\n-        'rust-analyzer/joinLines',\n-        request,\n-    );\n-    await applySourceChange(change);\n-}"}, {"sha": "95beb2d8fbab52210949b291f11f953c0fc6f0fd", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83d2527880d86653ce00940c65620319b36afcff/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/83d2527880d86653ce00940c65620319b36afcff/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=83d2527880d86653ce00940c65620319b36afcff", "patch": "@@ -18,6 +18,7 @@ export async function activate(context: vscode.ExtensionContext) {\n     ctx.registerCommand('analyzerStatus', commands.analyzerStatus);\n     ctx.registerCommand('collectGarbage', commands.collectGarbage);\n     ctx.registerCommand('matchingBrace', commands.matchingBrace);\n+    ctx.registerCommand('joinLines', commands.joinLines);\n \n     function disposeOnDeactivation(disposable: vscode.Disposable) {\n         context.subscriptions.push(disposable);\n@@ -56,7 +57,6 @@ export async function activate(context: vscode.ExtensionContext) {\n     }\n \n     // Commands are requests from vscode to the language server\n-    registerCommand('rust-analyzer.joinLines', commands.joinLines.handle);\n     registerCommand('rust-analyzer.parentModule', commands.parentModule.handle);\n     registerCommand('rust-analyzer.run', commands.runnables.handle);\n     // Unlike the above this does not send requests to the language server"}]}