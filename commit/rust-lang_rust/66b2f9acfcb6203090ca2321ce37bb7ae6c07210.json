{"sha": "66b2f9acfcb6203090ca2321ce37bb7ae6c07210", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2YjJmOWFjZmNiNjIwMzA5MGNhMjMyMWNlMzdiYjdhZTZjMDcyMTA=", "commit": {"author": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2020-05-15T15:36:19Z"}, "committer": {"name": "Wim Looman", "email": "git@nemo157.com", "date": "2020-08-30T18:16:22Z"}, "message": "Add checking for export_name to unsafe_code lint", "tree": {"sha": "481bd20423f211bf00d0f6f973094516c3926c7d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/481bd20423f211bf00d0f6f973094516c3926c7d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66b2f9acfcb6203090ca2321ce37bb7ae6c07210", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66b2f9acfcb6203090ca2321ce37bb7ae6c07210", "html_url": "https://github.com/rust-lang/rust/commit/66b2f9acfcb6203090ca2321ce37bb7ae6c07210", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66b2f9acfcb6203090ca2321ce37bb7ae6c07210/comments", "author": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Nemo157", "id": 81079, "node_id": "MDQ6VXNlcjgxMDc5", "avatar_url": "https://avatars.githubusercontent.com/u/81079?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Nemo157", "html_url": "https://github.com/Nemo157", "followers_url": "https://api.github.com/users/Nemo157/followers", "following_url": "https://api.github.com/users/Nemo157/following{/other_user}", "gists_url": "https://api.github.com/users/Nemo157/gists{/gist_id}", "starred_url": "https://api.github.com/users/Nemo157/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Nemo157/subscriptions", "organizations_url": "https://api.github.com/users/Nemo157/orgs", "repos_url": "https://api.github.com/users/Nemo157/repos", "events_url": "https://api.github.com/users/Nemo157/events{/privacy}", "received_events_url": "https://api.github.com/users/Nemo157/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06a0269c110975d72a7312aab593abbb66c47f27", "url": "https://api.github.com/repos/rust-lang/rust/commits/06a0269c110975d72a7312aab593abbb66c47f27", "html_url": "https://github.com/rust-lang/rust/commit/06a0269c110975d72a7312aab593abbb66c47f27"}], "stats": {"total": 90, "additions": 71, "deletions": 19}, "files": [{"sha": "784468aac2a49c7496837cc3d1a966f753232db2", "filename": "compiler/rustc_lint/src/builtin.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/66b2f9acfcb6203090ca2321ce37bb7ae6c07210/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66b2f9acfcb6203090ca2321ce37bb7ae6c07210/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Fbuiltin.rs?ref=66b2f9acfcb6203090ca2321ce37bb7ae6c07210", "patch": "@@ -283,6 +283,11 @@ impl EarlyLintPass for UnsafeCode {\n                         lint.build(\"declaration of a `no_mangle` function\").emit();\n                     })\n                 }\n+                if attr::contains_name(&it.attrs, sym::export_name) {\n+                    self.report_unsafe(cx, it.span, |lint| {\n+                        lint.build(\"declaration of a function with `export_name`\").emit();\n+                    })\n+                }\n             }\n \n             ast::ItemKind::Static(..) => {\n@@ -291,6 +296,11 @@ impl EarlyLintPass for UnsafeCode {\n                         lint.build(\"declaration of a `no_mangle` static\").emit();\n                     })\n                 }\n+                if attr::contains_name(&it.attrs, sym::export_name) {\n+                    self.report_unsafe(cx, it.span, |lint| {\n+                        lint.build(\"declaration of a static with `export_name`\").emit();\n+                    })\n+                }\n             }\n \n             _ => {}"}, {"sha": "4ac02b51f62fec0e687cab1a9d75eeec6cac2c60", "filename": "src/test/ui/lint/lint-unsafe-code.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/66b2f9acfcb6203090ca2321ce37bb7ae6c07210/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66b2f9acfcb6203090ca2321ce37bb7ae6c07210/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.rs?ref=66b2f9acfcb6203090ca2321ce37bb7ae6c07210", "patch": "@@ -13,19 +13,27 @@ mod allowed_unsafe {\n     unsafe trait AllowedUnsafe { }\n     unsafe impl AllowedUnsafe for super::Bar {}\n     #[no_mangle] fn allowed2() {}\n+    #[export_name = \"foo\"] fn allowed3() {}\n }\n \n macro_rules! unsafe_in_macro {\n     () => {{\n         #[no_mangle] fn foo() {} //~ ERROR: declaration of a `no_mangle` function\n         #[no_mangle] static FOO: u32 = 5; //~ ERROR: declaration of a `no_mangle` static\n+        #[export_name = \"bar\"] fn bar() {}\n+        //~^ ERROR: declaration of a function with `export_name`\n+        #[export_name = \"BAR\"] static BAR: u32 = 5;\n+        //~^ ERROR: declaration of a static with `export_name`\n         unsafe {} //~ ERROR: usage of an `unsafe` block\n     }}\n }\n \n #[no_mangle] fn foo() {} //~ ERROR: declaration of a `no_mangle` function\n #[no_mangle] static FOO: u32 = 5; //~ ERROR: declaration of a `no_mangle` static\n \n+#[export_name = \"bar\"] fn bar() {} //~ ERROR: declaration of a function with `export_name`\n+#[export_name = \"BAR\"] static BAR: u32 = 5; //~ ERROR: declaration of a static with `export_name`\n+\n unsafe fn baz() {} //~ ERROR: declaration of an `unsafe` function\n unsafe trait Foo {} //~ ERROR: declaration of an `unsafe` trait\n unsafe impl Foo for Bar {} //~ ERROR: implementation of an `unsafe` trait"}, {"sha": "aadd02277ef81b116bcbe5d413fa8a50409ee3da", "filename": "src/test/ui/lint/lint-unsafe-code.stderr", "status": "modified", "additions": 53, "deletions": 19, "changes": 72, "blob_url": "https://github.com/rust-lang/rust/blob/66b2f9acfcb6203090ca2321ce37bb7ae6c07210/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66b2f9acfcb6203090ca2321ce37bb7ae6c07210/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-unsafe-code.stderr?ref=66b2f9acfcb6203090ca2321ce37bb7ae6c07210", "patch": "@@ -1,5 +1,5 @@\n error: declaration of a `no_mangle` function\n-  --> $DIR/lint-unsafe-code.rs:26:14\n+  --> $DIR/lint-unsafe-code.rs:31:14\n    |\n LL | #[no_mangle] fn foo() {}\n    |              ^^^^^^^^^^^\n@@ -11,91 +11,103 @@ LL | #![deny(unsafe_code)]\n    |         ^^^^^^^^^^^\n \n error: declaration of a `no_mangle` static\n-  --> $DIR/lint-unsafe-code.rs:27:14\n+  --> $DIR/lint-unsafe-code.rs:32:14\n    |\n LL | #[no_mangle] static FOO: u32 = 5;\n    |              ^^^^^^^^^^^^^^^^^^^^\n \n+error: declaration of a function with `export_name`\n+  --> $DIR/lint-unsafe-code.rs:34:24\n+   |\n+LL | #[export_name = \"bar\"] fn bar() {}\n+   |                        ^^^^^^^^^^^\n+\n+error: declaration of a static with `export_name`\n+  --> $DIR/lint-unsafe-code.rs:35:24\n+   |\n+LL | #[export_name = \"BAR\"] static BAR: u32 = 5;\n+   |                        ^^^^^^^^^^^^^^^^^^^^\n+\n error: declaration of an `unsafe` function\n-  --> $DIR/lint-unsafe-code.rs:29:1\n+  --> $DIR/lint-unsafe-code.rs:37:1\n    |\n LL | unsafe fn baz() {}\n    | ^^^^^^^^^^^^^^^^^^\n \n error: declaration of an `unsafe` trait\n-  --> $DIR/lint-unsafe-code.rs:30:1\n+  --> $DIR/lint-unsafe-code.rs:38:1\n    |\n LL | unsafe trait Foo {}\n    | ^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` trait\n-  --> $DIR/lint-unsafe-code.rs:31:1\n+  --> $DIR/lint-unsafe-code.rs:39:1\n    |\n LL | unsafe impl Foo for Bar {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: declaration of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:34:5\n+  --> $DIR/lint-unsafe-code.rs:42:5\n    |\n LL |     unsafe fn baz(&self);\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:35:5\n+  --> $DIR/lint-unsafe-code.rs:43:5\n    |\n LL |     unsafe fn provided(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:36:5\n+  --> $DIR/lint-unsafe-code.rs:44:5\n    |\n LL |     unsafe fn provided_override(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:40:5\n+  --> $DIR/lint-unsafe-code.rs:48:5\n    |\n LL |     unsafe fn baz(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:41:5\n+  --> $DIR/lint-unsafe-code.rs:49:5\n    |\n LL |     unsafe fn provided_override(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:60:5\n+  --> $DIR/lint-unsafe-code.rs:68:5\n    |\n LL |     unsafe fn provided_override(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:71:5\n+  --> $DIR/lint-unsafe-code.rs:79:5\n    |\n LL |     unsafe fn provided(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:77:5\n+  --> $DIR/lint-unsafe-code.rs:85:5\n    |\n LL |     unsafe fn provided(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: implementation of an `unsafe` method\n-  --> $DIR/lint-unsafe-code.rs:81:5\n+  --> $DIR/lint-unsafe-code.rs:89:5\n    |\n LL |     unsafe fn baz(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: usage of an `unsafe` block\n-  --> $DIR/lint-unsafe-code.rs:92:5\n+  --> $DIR/lint-unsafe-code.rs:100:5\n    |\n LL |     unsafe {}\n    |     ^^^^^^^^^\n \n error: declaration of a `no_mangle` function\n-  --> $DIR/lint-unsafe-code.rs:20:22\n+  --> $DIR/lint-unsafe-code.rs:21:22\n    |\n LL |         #[no_mangle] fn foo() {}\n    |                      ^^^^^^^^^^^\n@@ -106,7 +118,7 @@ LL |     unsafe_in_macro!()\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: declaration of a `no_mangle` static\n-  --> $DIR/lint-unsafe-code.rs:21:22\n+  --> $DIR/lint-unsafe-code.rs:22:22\n    |\n LL |         #[no_mangle] static FOO: u32 = 5;\n    |                      ^^^^^^^^^^^^^^^^^^^^\n@@ -116,8 +128,30 @@ LL |     unsafe_in_macro!()\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n+error: declaration of a function with `export_name`\n+  --> $DIR/lint-unsafe-code.rs:23:32\n+   |\n+LL |         #[export_name = \"bar\"] fn bar() {}\n+   |                                ^^^^^^^^^^^\n+...\n+LL |     unsafe_in_macro!()\n+   |     ------------------ in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error: declaration of a static with `export_name`\n+  --> $DIR/lint-unsafe-code.rs:25:32\n+   |\n+LL |         #[export_name = \"BAR\"] static BAR: u32 = 5;\n+   |                                ^^^^^^^^^^^^^^^^^^^^\n+...\n+LL |     unsafe_in_macro!()\n+   |     ------------------ in this macro invocation\n+   |\n+   = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n error: usage of an `unsafe` block\n-  --> $DIR/lint-unsafe-code.rs:22:9\n+  --> $DIR/lint-unsafe-code.rs:27:9\n    |\n LL |         unsafe {}\n    |         ^^^^^^^^^\n@@ -127,5 +161,5 @@ LL |     unsafe_in_macro!()\n    |\n    = note: this error originates in a macro (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error: aborting due to 18 previous errors\n+error: aborting due to 22 previous errors\n "}]}