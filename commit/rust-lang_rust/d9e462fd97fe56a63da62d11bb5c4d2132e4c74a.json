{"sha": "d9e462fd97fe56a63da62d11bb5c4d2132e4c74a", "node_id": "C_kwDOAAsO6NoAKGQ5ZTQ2MmZkOTdmZTU2YTYzZGE2MmQxMWJiNWM0ZDIxMzJlNGM3NGE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-06T15:02:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-08-06T15:02:30Z"}, "message": "Auto merge of #12953 - stanciuadrian:fmt, r=lnicola\n\nRun stable `fmt` & `cargo` through `rustup`\n\n`cargo test -p ide-assists` fails on Windows/x64/nightly:\n\n```shell\n> rustup self update\ninfo: checking for self-updates\n  rustup unchanged - 1.25.1\n\n> rustup update\ninfo: syncing channel updates for 'stable-x86_64-pc-windows-msvc'\ninfo: syncing channel updates for 'nightly-x86_64-pc-windows-msvc'\ninfo: checking for self-updates\n\n   stable-x86_64-pc-windows-msvc unchanged - rustc 1.62.1 (e092d0b6b 2022-07-16)\n  nightly-x86_64-pc-windows-msvc unchanged - rustc 1.64.0-nightly (affe0d3a0 2022-08-05)\n\ninfo: cleaning up downloads & tmp directories\n\n> rustup show\nDefault host: x86_64-pc-windows-msvc\nrustup home:  C:\\Users\\stanc\\.rustup\n\ninstalled toolchains\n--------------------\n\nstable-x86_64-pc-windows-msvc\nnightly-x86_64-pc-windows-msvc (default)\n\nactive toolchain\n----------------\n\nnightly-x86_64-pc-windows-msvc (default)\nrustc 1.64.0-nightly (affe0d3a0 2022-08-05)\n\n> cargo test -p ide-assists\n\ntest tests::sourcegen::sourcegen_assists_docs ... FAILED\n\nfailures:\n\n---- tests::sourcegen::sourcegen_assists_docs stdout ----\nthread 'tests::sourcegen::sourcegen_assists_docs' panicked at 'Failed to run rustfmt from toolchain 'stable'. Please run `rustup component add rustfmt --toolchain stable` to install it.', crates\\sourcegen\\src\\lib.rs:141:9\nnote: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n\nfailures:\n    tests::sourcegen::sourcegen_assists_docs\n\ntest result: FAILED. 1576 passed; 1 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.82s\n\nerror: test failed, to rerun pass '-p ide-assists --lib'\n```\n\nAfter some investigation it seemed that [`cmd!`](https://github.com/rust-lang/rust-analyzer/blob/51705698bd66919435e4fcbc25d96bd7fc5583f4/crates/sourcegen/src/lib.rs#L139) didn't execute the expected (stable) rustfmt.\n\nA simple `xshell` test failed too:\n\n```rust\nuse xshell::{cmd, Shell};\n\nfn main() {\n    let sh = &Shell::new().unwrap();\n    sh.set_var(\"RUSTUP_TOOLCHAIN\", \"stable\");\n    let version = cmd!(sh, \"rustfmt --version\").read().unwrap_or_default();\n    println!(\"{version}\");\n}\n```\n\nBypassing `xshell` and using `Command` directly failed too:\n\n```rust\nuse std::process::{Command, Stdio};\n\nfn main() {\n    let child = Command::new(\"rustfmt\")\n        .arg(\"--version\")\n        .stdin(Stdio::null())\n        .stdout(Stdio::piped())\n        .env(\"RUSTUP_TOOLCHAIN\", \"stable\")\n        .spawn()\n        .expect(\"failed to start\");\n    let output = child.wait_with_output().unwrap();\n    let version = String::from_utf8_lossy(&output.stdout);\n    println!(\"{version}\");\n}\n```\n\nSpawning `cargo +stable fmt version` [failed too](https://github.com/rust-lang/rustup/issues/3036) with `error: no such subcommand: +stable`.\n\nOnly `rustup run stable` worked fine for both `cargo` and `fmt`.\n\nThanks to `@lnicola` for a live investigation session, hints and tips.", "tree": {"sha": "7e804d40abcd23d3e5294ffea9a7e888cfb8fc34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e804d40abcd23d3e5294ffea9a7e888cfb8fc34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9e462fd97fe56a63da62d11bb5c4d2132e4c74a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9e462fd97fe56a63da62d11bb5c4d2132e4c74a", "html_url": "https://github.com/rust-lang/rust/commit/d9e462fd97fe56a63da62d11bb5c4d2132e4c74a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9e462fd97fe56a63da62d11bb5c4d2132e4c74a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "51705698bd66919435e4fcbc25d96bd7fc5583f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/51705698bd66919435e4fcbc25d96bd7fc5583f4", "html_url": "https://github.com/rust-lang/rust/commit/51705698bd66919435e4fcbc25d96bd7fc5583f4"}, {"sha": "e8a9bc09a3f0ddf4d5f5706a6b101eceb0d90960", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8a9bc09a3f0ddf4d5f5706a6b101eceb0d90960", "html_url": "https://github.com/rust-lang/rust/commit/e8a9bc09a3f0ddf4d5f5706a6b101eceb0d90960"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "58099a58de053acb0506bfc61a77b264a987e6dd", "filename": "crates/rust-analyzer/tests/slow-tests/tidy.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/d9e462fd97fe56a63da62d11bb5c4d2132e4c74a/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9e462fd97fe56a63da62d11bb5c4d2132e4c74a/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftidy.rs?ref=d9e462fd97fe56a63da62d11bb5c4d2132e4c74a", "patch": "@@ -13,19 +13,18 @@ use xshell::cmd;\n fn check_code_formatting() {\n     let sh = &Shell::new().unwrap();\n     sh.change_dir(sourcegen::project_root());\n-    sh.set_var(\"RUSTUP_TOOLCHAIN\", \"stable\");\n \n-    let out = cmd!(sh, \"rustfmt --version\").read().unwrap();\n+    let out = cmd!(sh, \"rustup run stable rustfmt --version\").read().unwrap();\n     if !out.contains(\"stable\") {\n         panic!(\n             \"Failed to run rustfmt from toolchain 'stable'. \\\n                  Please run `rustup component add rustfmt --toolchain stable` to install it.\",\n         )\n     }\n \n-    let res = cmd!(sh, \"cargo fmt -- --check\").run();\n+    let res = cmd!(sh, \"rustup run stable cargo fmt -- --check\").run();\n     if res.is_err() {\n-        let _ = cmd!(sh, \"cargo fmt\").run();\n+        let _ = cmd!(sh, \"rustup run stable cargo fmt\").run();\n     }\n     res.unwrap()\n }"}, {"sha": "4e0ee63f32f26a2e7ce56b832325e223bb0233b7", "filename": "crates/sourcegen/src/lib.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/d9e462fd97fe56a63da62d11bb5c4d2132e4c74a/crates%2Fsourcegen%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9e462fd97fe56a63da62d11bb5c4d2132e4c74a/crates%2Fsourcegen%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsourcegen%2Fsrc%2Flib.rs?ref=d9e462fd97fe56a63da62d11bb5c4d2132e4c74a", "patch": "@@ -136,7 +136,7 @@ impl fmt::Display for Location {\n }\n \n fn ensure_rustfmt(sh: &Shell) {\n-    let version = cmd!(sh, \"rustfmt --version\").read().unwrap_or_default();\n+    let version = cmd!(sh, \"rustup run stable rustfmt --version\").read().unwrap_or_default();\n     if !version.contains(\"stable\") {\n         panic!(\n             \"Failed to run rustfmt from toolchain 'stable'. \\\n@@ -147,13 +147,15 @@ fn ensure_rustfmt(sh: &Shell) {\n \n pub fn reformat(text: String) -> String {\n     let sh = Shell::new().unwrap();\n-    sh.set_var(\"RUSTUP_TOOLCHAIN\", \"stable\");\n     ensure_rustfmt(&sh);\n     let rustfmt_toml = project_root().join(\"rustfmt.toml\");\n-    let mut stdout = cmd!(sh, \"rustfmt --config-path {rustfmt_toml} --config fn_single_line=true\")\n-        .stdin(text)\n-        .read()\n-        .unwrap();\n+    let mut stdout = cmd!(\n+        sh,\n+        \"rustup run stable rustfmt --config-path {rustfmt_toml} --config fn_single_line=true\"\n+    )\n+    .stdin(text)\n+    .read()\n+    .unwrap();\n     if !stdout.ends_with('\\n') {\n         stdout.push('\\n');\n     }"}]}