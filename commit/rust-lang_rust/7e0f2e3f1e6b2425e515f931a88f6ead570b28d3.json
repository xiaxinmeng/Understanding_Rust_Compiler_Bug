{"sha": "7e0f2e3f1e6b2425e515f931a88f6ead570b28d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlMGYyZTNmMWU2YjI0MjVlNTE1ZjkzMWE4OGY2ZWFkNTcwYjI4ZDM=", "commit": {"author": {"name": "pJunger", "email": "pJunger@users.noreply.github.com", "date": "2019-05-14T20:40:39Z"}, "committer": {"name": "pJunger", "email": "pJunger@users.noreply.github.com", "date": "2019-05-18T07:34:56Z"}, "message": "Removed unused lifetime.", "tree": {"sha": "14877a93a5dce6de6ea26e4f999c16221167d4b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14877a93a5dce6de6ea26e4f999c16221167d4b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e0f2e3f1e6b2425e515f931a88f6ead570b28d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e0f2e3f1e6b2425e515f931a88f6ead570b28d3", "html_url": "https://github.com/rust-lang/rust/commit/7e0f2e3f1e6b2425e515f931a88f6ead570b28d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e0f2e3f1e6b2425e515f931a88f6ead570b28d3/comments", "author": {"login": "pJunger", "id": 16426009, "node_id": "MDQ6VXNlcjE2NDI2MDA5", "avatar_url": "https://avatars.githubusercontent.com/u/16426009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pJunger", "html_url": "https://github.com/pJunger", "followers_url": "https://api.github.com/users/pJunger/followers", "following_url": "https://api.github.com/users/pJunger/following{/other_user}", "gists_url": "https://api.github.com/users/pJunger/gists{/gist_id}", "starred_url": "https://api.github.com/users/pJunger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pJunger/subscriptions", "organizations_url": "https://api.github.com/users/pJunger/orgs", "repos_url": "https://api.github.com/users/pJunger/repos", "events_url": "https://api.github.com/users/pJunger/events{/privacy}", "received_events_url": "https://api.github.com/users/pJunger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pJunger", "id": 16426009, "node_id": "MDQ6VXNlcjE2NDI2MDA5", "avatar_url": "https://avatars.githubusercontent.com/u/16426009?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pJunger", "html_url": "https://github.com/pJunger", "followers_url": "https://api.github.com/users/pJunger/followers", "following_url": "https://api.github.com/users/pJunger/following{/other_user}", "gists_url": "https://api.github.com/users/pJunger/gists{/gist_id}", "starred_url": "https://api.github.com/users/pJunger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pJunger/subscriptions", "organizations_url": "https://api.github.com/users/pJunger/orgs", "repos_url": "https://api.github.com/users/pJunger/repos", "events_url": "https://api.github.com/users/pJunger/events{/privacy}", "received_events_url": "https://api.github.com/users/pJunger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ce9494a3df6ff490efd38ee3a6fbd0a7ba8c95dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce9494a3df6ff490efd38ee3a6fbd0a7ba8c95dd", "html_url": "https://github.com/rust-lang/rust/commit/ce9494a3df6ff490efd38ee3a6fbd0a7ba8c95dd"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "11ea8b7ea7a1a590a37c890be76e5b7cdc1369c8", "filename": "clippy_lints/src/checked_conversions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7e0f2e3f1e6b2425e515f931a88f6ead570b28d3/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e0f2e3f1e6b2425e515f931a88f6ead570b28d3/clippy_lints%2Fsrc%2Fchecked_conversions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fchecked_conversions.rs?ref=7e0f2e3f1e6b2425e515f931a88f6ead570b28d3", "patch": "@@ -140,7 +140,7 @@ impl<'a> Conversion<'a> {\n     }\n \n     /// Try to construct a new conversion if the conversion type is valid\n-    fn try_new<'b>(expr_to_cast: &'a Expr, from_type: Symbol, to_type: Symbol) -> Option<Conversion<'a>> {\n+    fn try_new(expr_to_cast: &'a Expr, from_type: Symbol, to_type: Symbol) -> Option<Conversion<'a>> {\n         ConversionType::try_new(from_type, to_type).map(|cvt| Conversion {\n             cvt,\n             expr_to_cast,"}]}