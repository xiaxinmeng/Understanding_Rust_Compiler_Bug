{"sha": "07e0161106580e460e5aa6a2acd2a1a7276ba101", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZTAxNjExMDY1ODBlNDYwZTVhYTZhMmFjZDJhMWE3Mjc2YmExMDE=", "commit": {"author": {"name": "David Ripton", "email": "dripton@ripton.net", "date": "2015-10-13T03:24:27Z"}, "committer": {"name": "David Ripton", "email": "dripton@ripton.net", "date": "2015-10-13T03:24:27Z"}, "message": "Typo fix", "tree": {"sha": "e81b602e9dd291310d3d8d06c78bc86c0e72d07c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e81b602e9dd291310d3d8d06c78bc86c0e72d07c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07e0161106580e460e5aa6a2acd2a1a7276ba101", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07e0161106580e460e5aa6a2acd2a1a7276ba101", "html_url": "https://github.com/rust-lang/rust/commit/07e0161106580e460e5aa6a2acd2a1a7276ba101", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07e0161106580e460e5aa6a2acd2a1a7276ba101/comments", "author": {"login": "dripton", "id": 153528, "node_id": "MDQ6VXNlcjE1MzUyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/153528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dripton", "html_url": "https://github.com/dripton", "followers_url": "https://api.github.com/users/dripton/followers", "following_url": "https://api.github.com/users/dripton/following{/other_user}", "gists_url": "https://api.github.com/users/dripton/gists{/gist_id}", "starred_url": "https://api.github.com/users/dripton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dripton/subscriptions", "organizations_url": "https://api.github.com/users/dripton/orgs", "repos_url": "https://api.github.com/users/dripton/repos", "events_url": "https://api.github.com/users/dripton/events{/privacy}", "received_events_url": "https://api.github.com/users/dripton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dripton", "id": 153528, "node_id": "MDQ6VXNlcjE1MzUyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/153528?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dripton", "html_url": "https://github.com/dripton", "followers_url": "https://api.github.com/users/dripton/followers", "following_url": "https://api.github.com/users/dripton/following{/other_user}", "gists_url": "https://api.github.com/users/dripton/gists{/gist_id}", "starred_url": "https://api.github.com/users/dripton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dripton/subscriptions", "organizations_url": "https://api.github.com/users/dripton/orgs", "repos_url": "https://api.github.com/users/dripton/repos", "events_url": "https://api.github.com/users/dripton/events{/privacy}", "received_events_url": "https://api.github.com/users/dripton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60c18c8f3446c6300ec63641249f1910fdc9464f", "url": "https://api.github.com/repos/rust-lang/rust/commits/60c18c8f3446c6300ec63641249f1910fdc9464f", "html_url": "https://github.com/rust-lang/rust/commit/60c18c8f3446c6300ec63641249f1910fdc9464f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d839e1820920ae6b8faa6cbc19e0e5a1b59f68ee", "filename": "src/doc/trpl/error-handling.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/07e0161106580e460e5aa6a2acd2a1a7276ba101/src%2Fdoc%2Ftrpl%2Ferror-handling.md", "raw_url": "https://github.com/rust-lang/rust/raw/07e0161106580e460e5aa6a2acd2a1a7276ba101/src%2Fdoc%2Ftrpl%2Ferror-handling.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftrpl%2Ferror-handling.md?ref=07e0161106580e460e5aa6a2acd2a1a7276ba101", "patch": "@@ -1898,7 +1898,7 @@ for pop in search(&data_file, &city) {\n \n In this piece of code, we take `file` (which has the type\n `Option<String>`), and convert it to a type that `search` can use, in\n-this case, `&Option<AsRef<Path>>`. Do do this, we take a reference of\n+this case, `&Option<AsRef<Path>>`. To do this, we take a reference of\n file, and map `Path::new` onto it. In this case, `as_ref()` converts\n the `Option<String>` into an `Option<&str>`, and from there, we can\n execute `Path::new` to the content of the optional, and return the"}]}