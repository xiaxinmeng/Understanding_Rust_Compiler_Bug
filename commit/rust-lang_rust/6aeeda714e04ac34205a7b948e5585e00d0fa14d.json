{"sha": "6aeeda714e04ac34205a7b948e5585e00d0fa14d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZWVkYTcxNGUwNGFjMzQyMDVhN2I5NDhlNTU4NWUwMGQwZmExNGQ=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2018-07-09T20:25:36Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2018-07-09T20:25:36Z"}, "message": "doc: Clarify the lifetime returned by `Box::leak`\n\n`Box::leak` mentions that it can return a `'static` reference, but it\nwasn't immediately clear to me why it doesn't always do so.  This is\nbecause of the `T: 'a` constraint needed to form a valid reference, and\nin general we want to be more flexible than requiring `T: 'static`.\nThis patch tries to clarify the relationship between `T` and `'a`.", "tree": {"sha": "05be539b980c0cf224f074d4ec19d8989c79adc2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05be539b980c0cf224f074d4ec19d8989c79adc2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6aeeda714e04ac34205a7b948e5585e00d0fa14d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6aeeda714e04ac34205a7b948e5585e00d0fa14d", "html_url": "https://github.com/rust-lang/rust/commit/6aeeda714e04ac34205a7b948e5585e00d0fa14d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6aeeda714e04ac34205a7b948e5585e00d0fa14d/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c6807bb1b282e0c5398aa4e659dbc165b6f3c81b", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6807bb1b282e0c5398aa4e659dbc165b6f3c81b", "html_url": "https://github.com/rust-lang/rust/commit/c6807bb1b282e0c5398aa4e659dbc165b6f3c81b"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "8a65843b50d7d5d55dd072991da094c0e28ac2b3", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6aeeda714e04ac34205a7b948e5585e00d0fa14d/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6aeeda714e04ac34205a7b948e5585e00d0fa14d/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=6aeeda714e04ac34205a7b948e5585e00d0fa14d", "patch": "@@ -194,7 +194,9 @@ impl<T: ?Sized> Box<T> {\n     }\n \n     /// Consumes and leaks the `Box`, returning a mutable reference,\n-    /// `&'a mut T`. Here, the lifetime `'a` may be chosen to be `'static`.\n+    /// `&'a mut T`. Note that the type `T` must outlive the chosen lifetime\n+    /// `'a`. If the type has only static references, or none at all, then this\n+    /// may be chosen to be `'static`.\n     ///\n     /// This function is mainly useful for data that lives for the remainder of\n     /// the program's life. Dropping the returned reference will cause a memory"}]}