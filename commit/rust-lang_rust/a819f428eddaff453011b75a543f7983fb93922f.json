{"sha": "a819f428eddaff453011b75a543f7983fb93922f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MTlmNDI4ZWRkYWZmNDUzMDExYjc1YTU0M2Y3OTgzZmI5MzkyMmY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-22T06:54:43Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-22T06:54:43Z"}, "message": "Rollup merge of #71607 - RalfJung:pin-drop-panic, r=nikomatsakis\n\nclarify interaction of pin drop guarantee and panics\n\nCc https://github.com/rust-lang/unsafe-code-guidelines/issues/232\n@Diggsey would this have helped?", "tree": {"sha": "6862de6c2466f15460a1e73a42e4e1749005e699", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6862de6c2466f15460a1e73a42e4e1749005e699"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a819f428eddaff453011b75a543f7983fb93922f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJex3c1CRBK7hj4Ov3rIwAAdHIIAAFuBTBeX/qRAOKvJXdGIFh1\nUMNMDukEWMARcEm7BaCRF61pLC67H45ORdLtEmIqgynz2dsG4/flipuveHblAHaQ\nBOGyaa81A00CDUDvBDv/JmyIj6czqNpgu96Cy4HwRZ4MEWmXV/5yLCg5kGeb4E2u\nrgar1VEO1PzqPlatE/eJ7qoaVW7ONzTEnf2y5g02EbEj0F8VXTJBGslan5ZS5OTT\nhNxc3jbx55xm6C2UYZNXs895Ni8l0ClCwqwZWpMuNBfHNfv3YXD/z7dSSelTzPfD\nMBRux6Kp7gBbSjrpVp73pCODw2AFcCqR23xbzlj0oKXpdsHthpivKBU7tFXqc2Q=\n=opeV\n-----END PGP SIGNATURE-----\n", "payload": "tree 6862de6c2466f15460a1e73a42e4e1749005e699\nparent 458a3e76294fd859fb037f425404180c91e14767\nparent 33541d5e55c3114e01e06b27715ae04372ce027f\nauthor Ralf Jung <post@ralfj.de> 1590130483 +0200\ncommitter GitHub <noreply@github.com> 1590130483 +0200\n\nRollup merge of #71607 - RalfJung:pin-drop-panic, r=nikomatsakis\n\nclarify interaction of pin drop guarantee and panics\n\nCc https://github.com/rust-lang/unsafe-code-guidelines/issues/232\n@Diggsey would this have helped?\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a819f428eddaff453011b75a543f7983fb93922f", "html_url": "https://github.com/rust-lang/rust/commit/a819f428eddaff453011b75a543f7983fb93922f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a819f428eddaff453011b75a543f7983fb93922f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "458a3e76294fd859fb037f425404180c91e14767", "url": "https://api.github.com/repos/rust-lang/rust/commits/458a3e76294fd859fb037f425404180c91e14767", "html_url": "https://github.com/rust-lang/rust/commit/458a3e76294fd859fb037f425404180c91e14767"}, {"sha": "33541d5e55c3114e01e06b27715ae04372ce027f", "url": "https://api.github.com/repos/rust-lang/rust/commits/33541d5e55c3114e01e06b27715ae04372ce027f", "html_url": "https://github.com/rust-lang/rust/commit/33541d5e55c3114e01e06b27715ae04372ce027f"}], "stats": {"total": 6, "additions": 4, "deletions": 2}, "files": [{"sha": "6f5bf7ad9da52e1e40fae1383d77c813eb6f99fe", "filename": "src/libcore/pin.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a819f428eddaff453011b75a543f7983fb93922f/src%2Flibcore%2Fpin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a819f428eddaff453011b75a543f7983fb93922f/src%2Flibcore%2Fpin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fpin.rs?ref=a819f428eddaff453011b75a543f7983fb93922f", "patch": "@@ -139,10 +139,12 @@\n //! otherwise invalidating the memory used to store the data is restricted, too.\n //! Concretely, for pinned data you have to maintain the invariant\n //! that *its memory will not get invalidated or repurposed from the moment it gets pinned until\n-//! when [`drop`] is called*. Memory can be invalidated by deallocation, but also by\n+//! when [`drop`] is called*.  Only once [`drop`] returns or panics, the memory may be reused.\n+//!\n+//! Memory can be \"invalidated\" by deallocation, but also by\n //! replacing a [`Some(v)`] by [`None`], or calling [`Vec::set_len`] to \"kill\" some elements\n //! off of a vector. It can be repurposed by using [`ptr::write`] to overwrite it without\n-//! calling the destructor first.\n+//! calling the destructor first. None of this is allowed for pinned data without calling [`drop`].\n //!\n //! This is exactly the kind of guarantee that the intrusive linked list from the previous\n //! section needs to function correctly."}]}