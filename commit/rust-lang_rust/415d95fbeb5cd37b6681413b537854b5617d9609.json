{"sha": "415d95fbeb5cd37b6681413b537854b5617d9609", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNWQ5NWZiZWI1Y2QzN2I2NjgxNDEzYjUzNzg1NGI1NjE3ZDk2MDk=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-09T19:49:23Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-17T19:51:55Z"}, "message": "mir: Translate Rvalue::Slice without relying on tvec.", "tree": {"sha": "6889256f2d2c9893db15b51fe0b087c6cbaa2e2d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6889256f2d2c9893db15b51fe0b087c6cbaa2e2d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/415d95fbeb5cd37b6681413b537854b5617d9609", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/415d95fbeb5cd37b6681413b537854b5617d9609", "html_url": "https://github.com/rust-lang/rust/commit/415d95fbeb5cd37b6681413b537854b5617d9609", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/415d95fbeb5cd37b6681413b537854b5617d9609/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aca4f9396d58bd9966f48fcf7b71a093264ed272", "url": "https://api.github.com/repos/rust-lang/rust/commits/aca4f9396d58bd9966f48fcf7b71a093264ed272", "html_url": "https://github.com/rust-lang/rust/commit/aca4f9396d58bd9966f48fcf7b71a093264ed272"}], "stats": {"total": 22, "additions": 13, "deletions": 9}, "files": [{"sha": "4b4cf328f638e8261fe0047a26f7b6f5a5a9b804", "filename": "src/librustc_trans/trans/mir/rvalue.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/415d95fbeb5cd37b6681413b537854b5617d9609/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/415d95fbeb5cd37b6681413b537854b5617d9609/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Frvalue.rs?ref=415d95fbeb5cd37b6681413b537854b5617d9609", "patch": "@@ -18,7 +18,7 @@ use rustc::mir::repr as mir;\n use trans::asm;\n use trans::base;\n use trans::callee::Callee;\n-use trans::common::{self, BlockAndBuilder, Result};\n+use trans::common::{self, C_uint, BlockAndBuilder, Result};\n use trans::debuginfo::DebugLoc;\n use trans::declare;\n use trans::adt;\n@@ -176,13 +176,17 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n             mir::Rvalue::Slice { ref input, from_start, from_end } => {\n                 let ccx = bcx.ccx();\n                 let input = self.trans_lvalue(&bcx, input);\n-                let (llbase, lllen) = bcx.with_block(|bcx| {\n-                    tvec::get_base_and_len(bcx,\n-                                           input.llval,\n-                                           input.ty.to_ty(bcx.tcx()))\n-                });\n-                let llbase1 = bcx.gepi(llbase, &[from_start]);\n-                let adj = common::C_uint(ccx, from_start + from_end);\n+                let ty = input.ty.to_ty(bcx.tcx());\n+                let (llbase1, lllen) = match ty.sty {\n+                    ty::TyArray(_, n) => {\n+                        (bcx.gepi(input.llval, &[0, from_start]), C_uint(ccx, n))\n+                    }\n+                    ty::TySlice(_) | ty::TyStr => {\n+                        (bcx.gepi(input.llval, &[from_start]), input.llextra)\n+                    }\n+                    _ => unreachable!(\"cannot slice {}\", ty)\n+                };\n+                let adj = C_uint(ccx, from_start + from_end);\n                 let lllen1 = bcx.sub(lllen, adj);\n                 bcx.store(llbase1, get_dataptr(&bcx, dest.llval));\n                 bcx.store(lllen1, get_meta(&bcx, dest.llval));\n@@ -443,7 +447,7 @@ impl<'bcx, 'tcx> MirContext<'bcx, 'tcx> {\n                 let llty = type_of::type_of(bcx.ccx(), content_ty);\n                 let llsize = machine::llsize_of(bcx.ccx(), llty);\n                 let align = type_of::align_of(bcx.ccx(), content_ty);\n-                let llalign = common::C_uint(bcx.ccx(), align);\n+                let llalign = C_uint(bcx.ccx(), align);\n                 let llty_ptr = llty.ptr_to();\n                 let box_ty = bcx.tcx().mk_box(content_ty);\n                 let mut llval = None;"}]}