{"sha": "3009574165ca607d1d12bd9a557f06776f69927a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMDk1NzQxNjVjYTYwN2QxZDEyYmQ5YTU1N2YwNjc3NmY2OTkyN2E=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-09T20:55:56Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-06-09T21:04:11Z"}, "message": "rustc: Unify with the root types", "tree": {"sha": "0ca1965e1f8ca67c0df43ba4a94301cd2635f289", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ca1965e1f8ca67c0df43ba4a94301cd2635f289"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3009574165ca607d1d12bd9a557f06776f69927a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3009574165ca607d1d12bd9a557f06776f69927a", "html_url": "https://github.com/rust-lang/rust/commit/3009574165ca607d1d12bd9a557f06776f69927a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3009574165ca607d1d12bd9a557f06776f69927a/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c1be2aeba334f260ebb23d885af1242f5fd52f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c1be2aeba334f260ebb23d885af1242f5fd52f1", "html_url": "https://github.com/rust-lang/rust/commit/3c1be2aeba334f260ebb23d885af1242f5fd52f1"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "399113d437ad863168cc1437758598f600474b2c", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3009574165ca607d1d12bd9a557f06776f69927a/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3009574165ca607d1d12bd9a557f06776f69927a/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=3009574165ca607d1d12bd9a557f06776f69927a", "patch": "@@ -1810,9 +1810,10 @@ mod unify {\n \n     fn record_var_binding(&@ctxt cx, int key, t typ) -> result {\n         ufind::grow(cx.vb.sets, (key as uint) + 1u);\n+        auto root = ufind::find(cx.vb.sets, key as uint);\n \n         auto result_type = typ;\n-        alt (smallintmap::find[t](cx.vb.types, key as uint)) {\n+        alt (smallintmap::find[t](cx.vb.types, root)) {\n             case (some(?old_type)) {\n                 alt (unify_step(cx, old_type, typ)) {\n                     case (ures_ok(?unified_type)) {\n@@ -1824,7 +1825,7 @@ mod unify {\n             case (none) { /* fall through */ }\n         }\n \n-        smallintmap::insert[t](cx.vb.types, key as uint, result_type);\n+        smallintmap::insert[t](cx.vb.types, root, result_type);\n         ret ures_ok(typ);\n     }\n "}]}