{"sha": "a8a2c141ecc66274690a81e692ea982eb557e7ec", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4YTJjMTQxZWNjNjYyNzQ2OTBhODFlNjkyZWE5ODJlYjU1N2U3ZWM=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-02-13T20:28:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-02-13T20:28:11Z"}, "message": "Rollup merge of #69127 - tmiasko:new-pass-manager-use-after-scope, r=nikic\n\nEnable use after scope detection in the new LLVM pass manager\n\nImplementation of 08a1c566a792dcf9657d293155f7ada87746bb65 for the new LLVM pass manager, support for which landed in the meantime.", "tree": {"sha": "982285b92cd6bb1120d51110d0a5f2a34d18d081", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/982285b92cd6bb1120d51110d0a5f2a34d18d081"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8a2c141ecc66274690a81e692ea982eb557e7ec", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeRbFbCRBK7hj4Ov3rIwAAdHIIAHUzbeeYBeBpAwmNKfDgdjXW\nq1gM1QuJxeQDlwpeIcBFFYiLYj/mbFjP7BxyxsVUTr0mb5yrQjo+KFvKhXRI51RL\n4/q487ieW2uS7LOP5a1otTHjG8eMKVpp0mqpBTvpcKvx0xowVIS+9V3QOEKCuUY1\nUV0meD68WR/aJr5OZ5SyHllIq9drl8y22bDs4O7WdMZbu7dTISga++dK4Rl1ugq0\nK5pMVKXuI/tu1TA8yqHWGAYZtfTXFj5VqxIH1cSQ+tcNtdA5n9M5yy7zeUZStvWb\nxjwmS24MLKWtgZXsTwtmM5BUij0fehvGp66hoObsX9sMGEmknA1PyK912m4bLC8=\n=erHj\n-----END PGP SIGNATURE-----\n", "payload": "tree 982285b92cd6bb1120d51110d0a5f2a34d18d081\nparent c8343b8653cdb0fb6cabf588ddee2fef07635b35\nparent 91b4a24219f33b7ad28b5ba147d50bc160c6f56c\nauthor Dylan DPC <dylan.dpc@gmail.com> 1581625691 +0100\ncommitter GitHub <noreply@github.com> 1581625691 +0100\n\nRollup merge of #69127 - tmiasko:new-pass-manager-use-after-scope, r=nikic\n\nEnable use after scope detection in the new LLVM pass manager\n\nImplementation of 08a1c566a792dcf9657d293155f7ada87746bb65 for the new LLVM pass manager, support for which landed in the meantime.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8a2c141ecc66274690a81e692ea982eb557e7ec", "html_url": "https://github.com/rust-lang/rust/commit/a8a2c141ecc66274690a81e692ea982eb557e7ec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8a2c141ecc66274690a81e692ea982eb557e7ec/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c8343b8653cdb0fb6cabf588ddee2fef07635b35", "url": "https://api.github.com/repos/rust-lang/rust/commits/c8343b8653cdb0fb6cabf588ddee2fef07635b35", "html_url": "https://github.com/rust-lang/rust/commit/c8343b8653cdb0fb6cabf588ddee2fef07635b35"}, {"sha": "91b4a24219f33b7ad28b5ba147d50bc160c6f56c", "url": "https://api.github.com/repos/rust-lang/rust/commits/91b4a24219f33b7ad28b5ba147d50bc160c6f56c", "html_url": "https://github.com/rust-lang/rust/commit/91b4a24219f33b7ad28b5ba147d50bc160c6f56c"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "8cebcaccfaad77568ac5ad2776998b556365c71e", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a8a2c141ecc66274690a81e692ea982eb557e7ec/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/a8a2c141ecc66274690a81e692ea982eb557e7ec/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=a8a2c141ecc66274690a81e692ea982eb557e7ec", "patch": "@@ -761,14 +761,14 @@ LLVMRustOptimizeWithNewPassManager(\n     }\n \n     if (SanitizerOptions->SanitizeAddress) {\n-      // FIXME: Rust does not expose the UseAfterScope option.\n       PipelineStartEPCallbacks.push_back([&](ModulePassManager &MPM) {\n         MPM.addPass(RequireAnalysisPass<ASanGlobalsMetadataAnalysis, Module>());\n       });\n       OptimizerLastEPCallbacks.push_back(\n         [SanitizerOptions](FunctionPassManager &FPM, PassBuilder::OptimizationLevel Level) {\n           FPM.addPass(AddressSanitizerPass(\n-              /*CompileKernel=*/false, SanitizerOptions->SanitizeRecover));\n+              /*CompileKernel=*/false, SanitizerOptions->SanitizeRecover,\n+              /*UseAfterScope=*/true));\n         }\n       );\n       PipelineStartEPCallbacks.push_back("}]}