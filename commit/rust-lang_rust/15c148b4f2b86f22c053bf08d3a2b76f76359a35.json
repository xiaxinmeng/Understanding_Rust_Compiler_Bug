{"sha": "15c148b4f2b86f22c053bf08d3a2b76f76359a35", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE1YzE0OGI0ZjJiODZmMjJjMDUzYmYwOGQzYTJiNzZmNzYzNTlhMzU=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-03-05T20:44:40Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-03-05T20:44:40Z"}, "message": "Rollup merge of #82736 - spastorino:mir-opt-level-perf-changes, r=oli-obk\n\nBump optimization from mir_opt_level 2 to 3 and 3 to 4 and make \"release\" be level 2 by default\n\nr? `@oli-obk`", "tree": {"sha": "45c22b8d755fc5e607aa9ea8571373b54fb4de48", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45c22b8d755fc5e607aa9ea8571373b54fb4de48"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/15c148b4f2b86f22c053bf08d3a2b76f76359a35", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgQpg5CRBK7hj4Ov3rIwAAdHIIAAL8oPDt5vfRwLCvAfEmtgHl\nWbjDW6wBdvdkFS99oa73jWGTmKS+FBVi7SBwwhgZVH9eRHIJb55EzAhhRHnUzgOp\ng6tBmxgKyfkCKnDbkiByMxrGUUPC1MYYFV/JMSTzdu+iHjXCdFcCgQa8wEKZAjG3\nflfLcv7orYa6kE/xzJUwFA/ldOV07jtamWv1dYaCCqRqA48urPiGreikwtc15qAp\n3K7fjxU5bSDFZYg5aZ9c8Qw4DBhuCS1NBOvWIU4N16ItP7vB0RF+5g6TEL1ZIYc+\nZ/5U3Z7n3VN+rKIKFt7HwdPiNw2bzJhYdexvxBo8hxjNi3RqrH71pgGBe2jVunY=\n=Lh6F\n-----END PGP SIGNATURE-----\n", "payload": "tree 45c22b8d755fc5e607aa9ea8571373b54fb4de48\nparent 34b2caa79f4451ff7eede9a578295e1a48db4bf2\nparent 11d9390c93020330de935fc95d91fb557b1f782c\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1614977080 +0100\ncommitter GitHub <noreply@github.com> 1614977080 +0100\n\nRollup merge of #82736 - spastorino:mir-opt-level-perf-changes, r=oli-obk\n\nBump optimization from mir_opt_level 2 to 3 and 3 to 4 and make \"release\" be level 2 by default\n\nr? `@oli-obk`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/15c148b4f2b86f22c053bf08d3a2b76f76359a35", "html_url": "https://github.com/rust-lang/rust/commit/15c148b4f2b86f22c053bf08d3a2b76f76359a35", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/15c148b4f2b86f22c053bf08d3a2b76f76359a35/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "34b2caa79f4451ff7eede9a578295e1a48db4bf2", "url": "https://api.github.com/repos/rust-lang/rust/commits/34b2caa79f4451ff7eede9a578295e1a48db4bf2", "html_url": "https://github.com/rust-lang/rust/commit/34b2caa79f4451ff7eede9a578295e1a48db4bf2"}, {"sha": "11d9390c93020330de935fc95d91fb557b1f782c", "url": "https://api.github.com/repos/rust-lang/rust/commits/11d9390c93020330de935fc95d91fb557b1f782c", "html_url": "https://github.com/rust-lang/rust/commit/11d9390c93020330de935fc95d91fb557b1f782c"}], "stats": {"total": 226, "additions": 117, "deletions": 109}, "files": [{"sha": "286469736205703df5d281277928aa07021eafcf", "filename": "compiler/rustc_interface/src/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_interface%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Ftests.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -566,7 +566,7 @@ fn test_debugging_options_tracking_hash() {\n     tracked!(link_only, true);\n     tracked!(merge_functions, Some(MergeFunctions::Disabled));\n     tracked!(mir_emit_retag, true);\n-    tracked!(mir_opt_level, 3);\n+    tracked!(mir_opt_level, Some(4));\n     tracked!(mutable_noalias, true);\n     tracked!(new_llvm_pass_manager, true);\n     tracked!(no_codegen, true);"}, {"sha": "b5c8b4bebc360496349001822c0dc24c1bece0f2", "filename": "compiler/rustc_mir/src/transform/const_goto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_goto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_goto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_goto.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -28,7 +28,7 @@ pub struct ConstGoto;\n \n impl<'tcx> MirPass<'tcx> for ConstGoto {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        if tcx.sess.opts.debugging_opts.mir_opt_level < 3 {\n+        if tcx.sess.mir_opt_level() < 4 {\n             return;\n         }\n         trace!(\"Running ConstGoto on {:?}\", body.source);"}, {"sha": "263df44f4d149386e38aafc9d9f0c675c42b7197", "filename": "compiler/rustc_mir/src/transform/const_prop.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fconst_prop.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -725,7 +725,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n             return None;\n         }\n \n-        if self.tcx.sess.opts.debugging_opts.mir_opt_level >= 3 {\n+        if self.tcx.sess.mir_opt_level() >= 4 {\n             self.eval_rvalue_with_identities(rvalue, place)\n         } else {\n             self.use_ecx(|this| this.ecx.eval_rvalue_into_place(rvalue, place))\n@@ -903,7 +903,7 @@ impl<'mir, 'tcx> ConstPropagator<'mir, 'tcx> {\n \n     /// Returns `true` if and only if this `op` should be const-propagated into.\n     fn should_const_prop(&mut self, op: &OpTy<'tcx>) -> bool {\n-        let mir_opt_level = self.tcx.sess.opts.debugging_opts.mir_opt_level;\n+        let mir_opt_level = self.tcx.sess.mir_opt_level();\n \n         if mir_opt_level == 0 {\n             return false;\n@@ -1071,9 +1071,9 @@ impl<'mir, 'tcx> MutVisitor<'tcx> for ConstPropagator<'mir, 'tcx> {\n     fn visit_operand(&mut self, operand: &mut Operand<'tcx>, location: Location) {\n         self.super_operand(operand, location);\n \n-        // Only const prop copies and moves on `mir_opt_level=2` as doing so\n+        // Only const prop copies and moves on `mir_opt_level=3` as doing so\n         // currently slightly increases compile time in some cases.\n-        if self.tcx.sess.opts.debugging_opts.mir_opt_level >= 2 {\n+        if self.tcx.sess.mir_opt_level() >= 3 {\n             self.propagate_operand(operand)\n         }\n     }\n@@ -1253,7 +1253,7 @@ impl<'mir, 'tcx> MutVisitor<'tcx> for ConstPropagator<'mir, 'tcx> {\n             TerminatorKind::SwitchInt { ref mut discr, .. } => {\n                 // FIXME: This is currently redundant with `visit_operand`, but sadly\n                 // always visiting operands currently causes a perf regression in LLVM codegen, so\n-                // `visit_operand` currently only runs for propagates places for `mir_opt_level=3`.\n+                // `visit_operand` currently only runs for propagates places for `mir_opt_level=4`.\n                 self.propagate_operand(discr)\n             }\n             // None of these have Operands to const-propagate.\n@@ -1272,7 +1272,7 @@ impl<'mir, 'tcx> MutVisitor<'tcx> for ConstPropagator<'mir, 'tcx> {\n             // Every argument in our function calls have already been propagated in `visit_operand`.\n             //\n             // NOTE: because LLVM codegen gives slight performance regressions with it, so this is\n-            // gated on `mir_opt_level=2`.\n+            // gated on `mir_opt_level=3`.\n             TerminatorKind::Call { .. } => {}\n         }\n "}, {"sha": "c4b51099f538953a2927a1213db0d8ea8becfefd", "filename": "compiler/rustc_mir/src/transform/deduplicate_blocks.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdeduplicate_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdeduplicate_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdeduplicate_blocks.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -16,7 +16,7 @@ pub struct DeduplicateBlocks;\n \n impl<'tcx> MirPass<'tcx> for DeduplicateBlocks {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        if tcx.sess.opts.debugging_opts.mir_opt_level < 3 {\n+        if tcx.sess.mir_opt_level() < 4 {\n             return;\n         }\n         debug!(\"Running DeduplicateBlocks on `{:?}`\", body.source);"}, {"sha": "0822ab73c4c67ccf33f94d63ede259f77e0dd916", "filename": "compiler/rustc_mir/src/transform/dest_prop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdest_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdest_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fdest_prop.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -127,9 +127,9 @@ pub struct DestinationPropagation;\n \n impl<'tcx> MirPass<'tcx> for DestinationPropagation {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        // Only run at mir-opt-level=2 or higher for now (we don't fix up debuginfo and remove\n+        // Only run at mir-opt-level=3 or higher for now (we don't fix up debuginfo and remove\n         // storage statements at the moment).\n-        if tcx.sess.opts.debugging_opts.mir_opt_level <= 1 {\n+        if tcx.sess.mir_opt_level() < 3 {\n             return;\n         }\n "}, {"sha": "821167fd9f05cea8ebf9f9f6e3c580d933551a42", "filename": "compiler/rustc_mir/src/transform/early_otherwise_branch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fearly_otherwise_branch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fearly_otherwise_branch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fearly_otherwise_branch.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -26,7 +26,7 @@ pub struct EarlyOtherwiseBranch;\n \n impl<'tcx> MirPass<'tcx> for EarlyOtherwiseBranch {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        if tcx.sess.opts.debugging_opts.mir_opt_level < 2 {\n+        if tcx.sess.mir_opt_level() < 3 {\n             return;\n         }\n         trace!(\"running EarlyOtherwiseBranch on {:?}\", body.source);"}, {"sha": "cf85503b3d54b3ed0b1b511d945133c15f736352", "filename": "compiler/rustc_mir/src/transform/inline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Finline.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -52,7 +52,7 @@ crate fn is_enabled(tcx: TyCtxt<'_>) -> bool {\n         return enabled;\n     }\n \n-    tcx.sess.opts.debugging_opts.mir_opt_level >= 2\n+    tcx.sess.mir_opt_level() >= 3\n }\n \n impl<'tcx> MirPass<'tcx> for Inline {"}, {"sha": "e254f0553aa592b9ea32c7fe36f4a46e4e8e7614", "filename": "compiler/rustc_mir/src/transform/match_branches.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmatch_branches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmatch_branches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmatch_branches.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -40,7 +40,7 @@ pub struct MatchBranchSimplification;\n \n impl<'tcx> MirPass<'tcx> for MatchBranchSimplification {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        if tcx.sess.opts.debugging_opts.mir_opt_level <= 1 {\n+        if tcx.sess.mir_opt_level() < 3 {\n             return;\n         }\n "}, {"sha": "13546442f6652a5ef98b56227d7dd865ed3e7035", "filename": "compiler/rustc_mir/src/transform/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmod.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -475,7 +475,7 @@ fn run_post_borrowck_cleanup_passes<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tc\n }\n \n fn run_optimization_passes<'tcx>(tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-    let mir_opt_level = tcx.sess.opts.debugging_opts.mir_opt_level;\n+    let mir_opt_level = tcx.sess.mir_opt_level();\n \n     // Lowering generator control-flow and variables has to happen before we do anything else\n     // to them. We run some optimizations before that, because they may be harder to do on the state"}, {"sha": "4aaa0baa9f46a26fb640f59b73e5f322eb84c6db", "filename": "compiler/rustc_mir/src/transform/multiple_return_terminators.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmultiple_return_terminators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmultiple_return_terminators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fmultiple_return_terminators.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -10,7 +10,7 @@ pub struct MultipleReturnTerminators;\n \n impl<'tcx> MirPass<'tcx> for MultipleReturnTerminators {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        if tcx.sess.opts.debugging_opts.mir_opt_level < 3 {\n+        if tcx.sess.mir_opt_level() < 4 {\n             return;\n         }\n "}, {"sha": "445dc12909c14dce14c6bab3af46c90689a50857", "filename": "compiler/rustc_mir/src/transform/nrvo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fnrvo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fnrvo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fnrvo.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -34,7 +34,7 @@ pub struct RenameReturnPlace;\n \n impl<'tcx> MirPass<'tcx> for RenameReturnPlace {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut mir::Body<'tcx>) {\n-        if tcx.sess.opts.debugging_opts.mir_opt_level == 0 {\n+        if tcx.sess.mir_opt_level() == 0 {\n             return;\n         }\n "}, {"sha": "658c6b6e9db20086855c89e94b73799352195b87", "filename": "compiler/rustc_mir/src/transform/unreachable_prop.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Funreachable_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Funreachable_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Funreachable_prop.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -12,8 +12,8 @@ pub struct UnreachablePropagation;\n \n impl MirPass<'_> for UnreachablePropagation {\n     fn run_pass<'tcx>(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n-        if tcx.sess.opts.debugging_opts.mir_opt_level < 3 {\n-            // Enable only under -Zmir-opt-level=3 as in some cases (check the deeply-nested-opt\n+        if tcx.sess.mir_opt_level() < 4 {\n+            // Enable only under -Zmir-opt-level=4 as in some cases (check the deeply-nested-opt\n             // perf benchmark) LLVM may spend quite a lot of time optimizing the generated code.\n             return;\n         }"}, {"sha": "f25828e21618f4c31f436e7883ff05114466c9be", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 16, "deletions": 14, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1938,21 +1938,23 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n             Some(SymbolManglingVersion::V0) => {}\n         }\n \n-        if debugging_opts.mir_opt_level > 1 {\n-            // Functions inlined during MIR transform can, at best, make it impossible to\n-            // effectively cover inlined functions, and, at worst, break coverage map generation\n-            // during LLVM codegen. For example, function counter IDs are only unique within a\n-            // function. Inlining after these counters are injected can produce duplicate counters,\n-            // resulting in an invalid coverage map (and ICE); so this option combination is not\n-            // allowed.\n-            early_warn(\n-                error_format,\n-                &format!(\n-                    \"`-Z mir-opt-level={}` (or any level > 1) enables function inlining, which \\\n+        if let Some(mir_opt_level) = debugging_opts.mir_opt_level {\n+            if mir_opt_level > 1 {\n+                // Functions inlined during MIR transform can, at best, make it impossible to\n+                // effectively cover inlined functions, and, at worst, break coverage map generation\n+                // during LLVM codegen. For example, function counter IDs are only unique within a\n+                // function. Inlining after these counters are injected can produce duplicate counters,\n+                // resulting in an invalid coverage map (and ICE); so this option combination is not\n+                // allowed.\n+                early_warn(\n+                    error_format,\n+                    &format!(\n+                        \"`-Z mir-opt-level={}` (or any level > 1) enables function inlining, which \\\n                     is incompatible with `-Z instrument-coverage`. Inlining will be disabled.\",\n-                    debugging_opts.mir_opt_level,\n-                ),\n-            );\n+                        mir_opt_level,\n+                    ),\n+                );\n+            }\n         }\n     }\n "}, {"sha": "79bbad8307ba7cb20350a270c213a31d526ada4a", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -999,8 +999,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     mir_emit_retag: bool = (false, parse_bool, [TRACKED],\n         \"emit Retagging MIR statements, interpreted e.g., by miri; implies -Zmir-opt-level=0 \\\n         (default: no)\"),\n-    mir_opt_level: usize = (1, parse_uint, [TRACKED],\n-        \"MIR optimization level (0-3; default: 1)\"),\n+    mir_opt_level: Option<usize> = (None, parse_opt_uint, [TRACKED],\n+        \"MIR optimization level (0-4; default: 1 in non optimized builds and 2 in optimized builds)\"),\n     mutable_noalias: bool = (false, parse_bool, [TRACKED],\n         \"emit noalias metadata for mutable references (default: no)\"),\n     new_llvm_pass_manager: bool = (false, parse_bool, [TRACKED],"}, {"sha": "963df0fb4d70bed1285122e422c4942e7c3bd481", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -640,6 +640,12 @@ impl Session {\n     pub fn binary_dep_depinfo(&self) -> bool {\n         self.opts.debugging_opts.binary_dep_depinfo\n     }\n+    pub fn mir_opt_level(&self) -> usize {\n+        self.opts\n+            .debugging_opts\n+            .mir_opt_level\n+            .unwrap_or_else(|| if self.opts.optimize != config::OptLevel::No { 2 } else { 1 })\n+    }\n \n     /// Gets the features enabled for the current compilation session.\n     /// DO NOT USE THIS METHOD if there is a TyCtxt available, as it circumvents"}, {"sha": "d271fe027e309d5f609856242af52dd9f12f3d97", "filename": "src/test/codegen/issue-59352.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fcodegen%2Fissue-59352.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fcodegen%2Fissue-59352.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fissue-59352.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -5,8 +5,8 @@\n // Once the optimizer can do that, mir-opt/issues/issue-59352.rs will need to be updated and this\n // test case should be removed as it will become redundant.\n \n-// mir-opt-level=2 enables inlining and enables LLVM to optimize away the unreachable panic call.\n-// compile-flags: -O -Z mir-opt-level=2\n+// mir-opt-level=3 enables inlining and enables LLVM to optimize away the unreachable panic call.\n+// compile-flags: -O -Z mir-opt-level=3\n \n #![crate_type = \"rlib\"]\n "}, {"sha": "d9e6f6c34ec5aafcfa075ee5660f25a3b8e1f0d6", "filename": "src/test/codegen/naked-noinline.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fcodegen%2Fnaked-noinline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fcodegen%2Fnaked-noinline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fnaked-noinline.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // Checks that naked functions are never inlined.\n-// compile-flags: -O -Zmir-opt-level=2\n+// compile-flags: -O -Zmir-opt-level=3\n // ignore-wasm32\n #![crate_type = \"lib\"]\n #![feature(asm)]"}, {"sha": "f4af60baefe9d3847ead3eb15360075851f160c3", "filename": "src/test/codegen/sanitizer-no-sanitize-inlining.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fcodegen%2Fsanitizer-no-sanitize-inlining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fcodegen%2Fsanitizer-no-sanitize-inlining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fsanitizer-no-sanitize-inlining.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -4,8 +4,8 @@\n // needs-sanitizer-address\n // needs-sanitizer-leak\n // revisions: ASAN LSAN\n-//[ASAN] compile-flags: -Zsanitizer=address -C opt-level=3 -Z mir-opt-level=3\n-//[LSAN] compile-flags: -Zsanitizer=leak    -C opt-level=3 -Z mir-opt-level=3\n+//[ASAN] compile-flags: -Zsanitizer=address -C opt-level=3 -Z mir-opt-level=4\n+//[LSAN] compile-flags: -Zsanitizer=leak    -C opt-level=3 -Z mir-opt-level=4\n \n #![crate_type=\"lib\"]\n #![feature(no_sanitize)]"}, {"sha": "81e2435e5b80e4232b8fa49e569d9960389468b1", "filename": "src/test/codegen/try_identity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fcodegen%2Ftry_identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fcodegen%2Ftry_identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ftry_identity.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -C no-prepopulate-passes -O -Z mir-opt-level=2 -Zunsound-mir-opts\n+// compile-flags: -C no-prepopulate-passes -O -Z mir-opt-level=3 -Zunsound-mir-opts\n \n // Ensure that `x?` has no overhead on `Result<T, E>` due to identity `match`es in lowering.\n // This requires inlining to trigger the MIR optimizations in `SimplifyArmIdentity`."}, {"sha": "57164e3e794d20822e5760786eb7603de9b1f789", "filename": "src/test/mir-opt/const_prop/boolean_identities.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboolean_identities.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboolean_identities.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fboolean_identities.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -O -Zmir-opt-level=3\n+// compile-flags: -O -Zmir-opt-level=4\n \n // EMIT_MIR boolean_identities.test.ConstProp.diff\n pub fn test(x: bool, y: bool) -> bool {"}, {"sha": "81eccae46b97e2673d2ccf6a31200946e7f64fbc", "filename": "src/test/mir-opt/const_prop/issue-66971.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-66971.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-66971.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-66971.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=2\n+// compile-flags: -Z mir-opt-level=3\n \n // Due to a bug in propagating scalar pairs the assertion below used to fail. In the expected\n // outputs below, after ConstProp this is how _2 would look like with the bug:"}, {"sha": "c78b8b971783f0393981be5802721aa111a94829", "filename": "src/test/mir-opt/const_prop/issue-67019.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-67019.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-67019.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fissue-67019.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=2\n+// compile-flags: -Z mir-opt-level=3\n \n // This used to ICE in const-prop\n "}, {"sha": "b0ecdf1818e4d365f13ed10fab76895fe2b746b8", "filename": "src/test/mir-opt/const_prop/mult_by_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmult_by_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmult_by_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fconst_prop%2Fmult_by_zero.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -O -Zmir-opt-level=3\n+// compile-flags: -O -Zmir-opt-level=4\n \n // EMIT_MIR mult_by_zero.test.ConstProp.diff\n fn test(x : i32) -> i32 {"}, {"sha": "548213ab83caf5e48e6992001bc9065c9d86f779", "filename": "src/test/mir-opt/early_otherwise_branch.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=3\n+// compile-flags: -Z mir-opt-level=4\n // EMIT_MIR early_otherwise_branch.opt1.EarlyOtherwiseBranch.diff\n fn opt1(x: Option<u32>, y: Option<u32>) -> u32 {\n     match (x, y) {"}, {"sha": "aa304f747f748e312adc3e51e15bd7c86146553a", "filename": "src/test/mir-opt/early_otherwise_branch_3_element_tuple.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_3_element_tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_3_element_tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_3_element_tuple.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=3\n+// compile-flags: -Z mir-opt-level=4\n \n // EMIT_MIR early_otherwise_branch_3_element_tuple.opt1.EarlyOtherwiseBranch.diff\n fn opt1(x: Option<u32>, y: Option<u32>, z: Option<u32>) -> u32 {"}, {"sha": "e11337643dacba17e2f89edf6c2d68f634700181", "filename": "src/test/mir-opt/early_otherwise_branch_68867.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_68867.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // ignore-tidy-linelength\n-// compile-flags: -Z mir-opt-level=3 -Zunsound-mir-opts\n+// compile-flags: -Z mir-opt-level=4 -Zunsound-mir-opts\n \n // example from #68867\n type CSSFloat = f32;"}, {"sha": "aa9ddf485b5aa606ef146b62d5267aece6e371a6", "filename": "src/test/mir-opt/early_otherwise_branch_noopt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_noopt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_noopt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fearly_otherwise_branch_noopt.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=3\n+// compile-flags: -Z mir-opt-level=4\n \n // must not optimize as it does not follow the pattern of\n // left and right hand side being the same variant"}, {"sha": "049a97816f68bed68afe9b216a3d1309dc9f9047", "filename": "src/test/mir-opt/inline/inline-into-box-place.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-into-box-place.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,6 +1,6 @@\n // ignore-endian-big\n // ignore-wasm32-bare compiled with panic=abort by default\n-// compile-flags: -Z mir-opt-level=3\n+// compile-flags: -Z mir-opt-level=4\n // EMIT_MIR_FOR_EACH_BIT_WIDTH\n #![feature(box_syntax)]\n // EMIT_MIR inline_into_box_place.main.Inline.diff"}, {"sha": "378e71a25673f14cc82f4a438ede58a8591522ed", "filename": "src/test/mir-opt/inline/inline-trait-method_2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Finline%2Finline-trait-method_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Finline%2Finline-trait-method_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Finline%2Finline-trait-method_2.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z span_free_formats -Z mir-opt-level=3\n+// compile-flags: -Z span_free_formats -Z mir-opt-level=4\n \n // EMIT_MIR inline_trait_method_2.test2.Inline.after.mir\n fn test2(x: &dyn X) -> bool {"}, {"sha": "1e0045555ab84d5906768003b7a02541652cb7aa", "filename": "src/test/mir-opt/issues/issue-59352.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fissues%2Fissue-59352.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fissues%2Fissue-59352.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fissues%2Fissue-59352.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -7,7 +7,7 @@\n // removed.\n \n // EMIT_MIR issue_59352.num_to_digit.PreCodegen.after.mir\n-// compile-flags: -Z mir-opt-level=2 -Z span_free_formats\n+// compile-flags: -Z mir-opt-level=3 -Z span_free_formats\n \n pub fn num_to_digit(num: char) -> u32 {\n     // CHECK-NOT: panic"}, {"sha": "a2b902d148363c6d2be89a9ead08304c4559becd", "filename": "src/test/mir-opt/multiple_return_terminators.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fmultiple_return_terminators.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fmultiple_return_terminators.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fmultiple_return_terminators.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=3\n+// compile-flags: -Z mir-opt-level=4\n // EMIT_MIR multiple_return_terminators.test.MultipleReturnTerminators.diff\n \n fn test(x: bool) {"}, {"sha": "bedc86bbacb8c67fbe2d3b965e0e20a7fcad2ed5", "filename": "src/test/mir-opt/simplify-arm-identity.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-arm-identity.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,7 +1,7 @@\n // Checks that `SimplifyArmIdentity` is not applied if enums have incompatible layouts.\n // Regression test for issue #66856.\n //\n-// compile-flags: -Zmir-opt-level=2\n+// compile-flags: -Zmir-opt-level=3\n // EMIT_MIR_FOR_EACH_BIT_WIDTH\n \n enum Src {"}, {"sha": "50b5147e0cf65b78cfa0936038b8f5333fb9e1cf", "filename": "src/test/mir-opt/simplify-arm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fsimplify-arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fmir-opt%2Fsimplify-arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fsimplify-arm.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=2 -Zunsound-mir-opts\n+// compile-flags: -Z mir-opt-level=3 -Zunsound-mir-opts\n // EMIT_MIR simplify_arm.id.SimplifyArmIdentity.diff\n // EMIT_MIR simplify_arm.id.SimplifyBranchSame.diff\n // EMIT_MIR simplify_arm.id_result.SimplifyArmIdentity.diff"}, {"sha": "9d3f25b3b47f8a5b7ee9ea670254f58333ce1fc5", "filename": "src/test/ui/const-generics/issues/issue-75299.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-75299.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-75299.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fissues%2Fissue-75299.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Zmir-opt-level=3\n+// compile-flags: -Zmir-opt-level=4\n // run-pass\n \n #![feature(const_generics)]"}, {"sha": "adc7874104ae6acd19ffbd0e7809c2e1bc22912a", "filename": "src/test/ui/const_prop/inline_spans.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // build-fail\n-// compile-flags: -Zmir-opt-level=2\n+// compile-flags: -Zmir-opt-level=3\n \n #![deny(warnings)]\n "}, {"sha": "1db53d77193f2486ce0dd1e827decf7897788df5", "filename": "src/test/ui/const_prop/inline_spans_lint_attribute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans_lint_attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans_lint_attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst_prop%2Finline_spans_lint_attribute.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,6 +1,6 @@\n // Must be build-pass, because check-pass will not run const prop and thus not emit the lint anyway.\n // build-pass\n-// compile-flags: -Zmir-opt-level=2\n+// compile-flags: -Zmir-opt-level=3\n \n #![deny(warnings)]\n "}, {"sha": "4971d96476f4304345cb595e8210aee8d116edd0", "filename": "src/test/ui/consts/issue-66345.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconsts%2Fissue-66345.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconsts%2Fissue-66345.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-66345.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,8 +1,8 @@\n // run-pass\n-// compile-flags: -Z mir-opt-level=3\n+// compile-flags: -Z mir-opt-level=4\n \n // Checks that the compiler does not ICE when passing references to field of by-value struct\n-// with -Z mir-opt-level=3\n+// with -Z mir-opt-level=4\n \n fn do_nothing(_: &()) {}\n "}, {"sha": "dd24c2d27e27a0a44acd2a14ef18778cddb7725b", "filename": "src/test/ui/consts/issue-67529.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconsts%2Fissue-67529.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconsts%2Fissue-67529.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-67529.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=2\n+// compile-flags: -Z mir-opt-level=3\n // run-pass\n \n struct Baz<T: ?Sized> {"}, {"sha": "4c71a2e022446329d35e81e7501bd1d3dc6e9306", "filename": "src/test/ui/consts/issue-67640.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconsts%2Fissue-67640.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconsts%2Fissue-67640.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-67640.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=3\n+// compile-flags: -Z mir-opt-level=4\n // run-pass\n \n struct X {"}, {"sha": "e5a74f15654c428596f3cb0d13119bc6d5d694ec", "filename": "src/test/ui/consts/issue-67641.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconsts%2Fissue-67641.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconsts%2Fissue-67641.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-67641.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=2\n+// compile-flags: -Z mir-opt-level=3\n // run-pass\n \n use std::cell::Cell;"}, {"sha": "b9e96a87f14722064d9d3f8975f2299c4573d8b2", "filename": "src/test/ui/consts/issue-67862.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconsts%2Fissue-67862.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconsts%2Fissue-67862.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-67862.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=2\n+// compile-flags: -Z mir-opt-level=3\n // run-pass\n \n fn e220() -> (i64, i64) {"}, {"sha": "c581ef6b0f7bb5c6bdaf50b9ac248467a8826df9", "filename": "src/test/ui/consts/trait_specialization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconsts%2Ftrait_specialization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fconsts%2Ftrait_specialization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Ftrait_specialization.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // ignore-wasm32-bare which doesn't support `std::process:exit()`\n-// compile-flags: -Zmir-opt-level=2\n+// compile-flags: -Zmir-opt-level=3\n // run-pass\n \n // Tests that specialization does not cause optimizations running on polymorphic MIR to resolve"}, {"sha": "4bb61dbc7f400b14937506bec42e4f0580cf2fd0", "filename": "src/test/ui/dest-prop/skeptic-miscompile.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fdest-prop%2Fskeptic-miscompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fdest-prop%2Fskeptic-miscompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdest-prop%2Fskeptic-miscompile.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n \n-// compile-flags: -Zmir-opt-level=2\n+// compile-flags: -Zmir-opt-level=3\n \n trait IterExt: Iterator {\n     fn fold_ex<B, F>(mut self, init: B, mut f: F) -> B"}, {"sha": "cd728b15256e958603aaf5ed5147ba48338690fd", "filename": "src/test/ui/issues/issue-50411.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fissues%2Fissue-50411.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fissues%2Fissue-50411.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50411.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -3,7 +3,7 @@\n // elaborate-drops invoked on it) and then try to elaboate drops a\n // second time. Uncool.\n \n-// compile-flags:-Zmir-opt-level=3\n+// compile-flags:-Zmir-opt-level=4\n // build-pass\n \n fn main() {"}, {"sha": "1e20a546069551192b85f6fedf5f7f2b26d359d6", "filename": "src/test/ui/issues/issue-50865-private-impl-trait/auxiliary/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fissues%2Fissue-50865-private-impl-trait%2Fauxiliary%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fissues%2Fissue-50865-private-impl-trait%2Fauxiliary%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-50865-private-impl-trait%2Fauxiliary%2Flib.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // revisions: default miropt\n-//[miropt]compile-flags: -Z mir-opt-level=2\n+//[miropt]compile-flags: -Z mir-opt-level=3\n // ~^ This flag is for #77668, it used to be ICE.\n \n #![crate_type = \"lib\"]"}, {"sha": "0c37346eaf803d87375d2206528fe23714a57265", "filename": "src/test/ui/issues/issue-77002.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fissues%2Fissue-77002.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fissues%2Fissue-77002.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-77002.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Zmir-opt-level=2 -Copt-level=0\n+// compile-flags: -Zmir-opt-level=3 -Copt-level=0\n // run-pass\n \n type M = [i64; 2];"}, {"sha": "90f4df739f12ac358f5eae2bf6a192a27d98d476", "filename": "src/test/ui/mir/auxiliary/issue_76375_aux.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fauxiliary%2Fissue_76375_aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fauxiliary%2Fissue_76375_aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fauxiliary%2Fissue_76375_aux.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // edition:2018\n-// compile-flags: -Z mir-opt-level=2\n+// compile-flags: -Z mir-opt-level=3\n \n #[inline(always)]\n pub fn copy_prop(s: bool) -> String {"}, {"sha": "878ad4e475a1e136d53dffd2c47190d37fe6c2d3", "filename": "src/test/ui/mir/issue-66851.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-66851.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-66851.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-66851.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -2,7 +2,7 @@\n // did not check that the types matched up in the `Ok(r)` branch.\n //\n // run-pass\n-// compile-flags: -Zmir-opt-level=2\n+// compile-flags: -Zmir-opt-level=3\n \n #[derive(Debug, PartialEq, Eq)]\n enum SpecialsRes { Res(u64) }"}, {"sha": "71150a80bc0a12c3c1119bccd672f478c8401892", "filename": "src/test/ui/mir/issue-67639-normalization-ice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-67639-normalization-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-67639-normalization-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-67639-normalization-ice.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=3\n+// compile-flags: -Z mir-opt-level=4\n // build-pass\n \n // This used to ICE in const-prop due"}, {"sha": "1ff6b4d628c8b317785321981b14ad0121c86822", "filename": "src/test/ui/mir/issue-67710-inline-projection.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-67710-inline-projection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-67710-inline-projection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-67710-inline-projection.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=2\n+// compile-flags: -Z mir-opt-level=3\n // build-pass\n \n // This used to ICE due to the inling pass not examining projections"}, {"sha": "550bd452a80934412852da56e64759cba5e07ce4", "filename": "src/test/ui/mir/issue-68841.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-68841.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-68841.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-68841.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=2\n+// compile-flags: -Z mir-opt-level=3\n // edition:2018\n // build-pass\n "}, {"sha": "18f2e38d14c4acfc017fd77aba8e4e0616e3dced", "filename": "src/test/ui/mir/issue-71793-inline-args-storage.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-71793-inline-args-storage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-71793-inline-args-storage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-71793-inline-args-storage.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -4,7 +4,7 @@\n //\n // check-pass\n // edition:2018\n-// compile-args: -Zmir-opt-level=2\n+// compile-args: -Zmir-opt-level=3\n \n #![crate_type = \"lib\"]\n "}, {"sha": "d54e23169c4d3f7d1f4b5918a5a31a7b3899c945", "filename": "src/test/ui/mir/issue-75053.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-75053.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-75053.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-75053.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=2\n+// compile-flags: -Z mir-opt-level=3\n // build-pass\n \n #![feature(type_alias_impl_trait)]"}, {"sha": "18473e79e86a5613d012308a826e65ecacff89f8", "filename": "src/test/ui/mir/issue-76248.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-76248.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-76248.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-76248.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -3,7 +3,7 @@\n // Regression test for #76248.\n //\n // build-pass\n-// compile-flags: -Zmir-opt-level=2\n+// compile-flags: -Zmir-opt-level=3\n \n const N: usize = 1;\n "}, {"sha": "e635caca9fdf49d1c4a2cdd4c74c4a2643370798", "filename": "src/test/ui/mir/issue-76375.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-76375.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-76375.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-76375.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -2,7 +2,7 @@\n //\n // edition:2018\n // build-pass\n-// compile-flags: -Z mir-opt-level=2\n+// compile-flags: -Z mir-opt-level=3\n // aux-build:issue_76375_aux.rs\n \n #![crate_type = \"lib\"]"}, {"sha": "1d4ec11762afd77eaa710d2990613062100565d6", "filename": "src/test/ui/mir/issue-76740-copy-propagation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-76740-copy-propagation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-76740-copy-propagation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-76740-copy-propagation.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,6 +1,6 @@\n // Regression test for issue #76740.\n // run-pass\n-// compile-flags: -Zmir-opt-level=3\n+// compile-flags: -Zmir-opt-level=4\n \n #[derive(Copy, Clone)]\n pub struct V([usize; 4]);"}, {"sha": "acf4c20542d72592a8340beb636a9d4491823e8e", "filename": "src/test/ui/mir/issue-77911.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-77911.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-77911.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-77911.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=2\n+// compile-flags: -Z mir-opt-level=3\n // build-pass\n \n use std::fs::File;"}, {"sha": "a0d1f5a780e0eee165a9a6b4b564739641ea44ef", "filename": "src/test/ui/mir/issue-78496.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-78496.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue-78496.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue-78496.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// compile-flags: -Z mir-opt-level=2 -C opt-level=0\n+// compile-flags: -Z mir-opt-level=3 -C opt-level=0\n \n // example from #78496\n pub enum E<'a> {"}, {"sha": "2507af38cdf73c9931c8e18b5ecb62ce177c0fec", "filename": "src/test/ui/mir/issue66339.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue66339.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fissue66339.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fissue66339.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=2\n+// compile-flags: -Z mir-opt-level=3\n // build-pass\n \n // This used to ICE in const-prop"}, {"sha": "e36e8bd746d90dc6ba339bc0dcc64fce7ff08d07", "filename": "src/test/ui/mir/mir-inlining/array-clone-with-generic-size.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Farray-clone-with-generic-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Farray-clone-with-generic-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Farray-clone-with-generic-size.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -2,7 +2,7 @@\n // Regression test for issue #79269.\n //\n // build-pass\n-// compile-flags: -Zmir-opt-level=2 -Zvalidate-mir\n+// compile-flags: -Zmir-opt-level=3 -Zvalidate-mir\n #[derive(Clone)]\n struct Array<T, const N: usize>([T; N]);\n "}, {"sha": "04a23212e7b9f051e84c87182772e4813ce71566", "filename": "src/test/ui/mir/mir-inlining/ice-issue-45493.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-45493.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-45493.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-45493.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// compile-flags:-Zmir-opt-level=2\n+// compile-flags:-Zmir-opt-level=3\n \n trait Array {\n     type Item;"}, {"sha": "09b1279ef34e1e87da756c35722f7b4867e50fa2", "filename": "src/test/ui/mir/mir-inlining/ice-issue-45885.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-45885.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-45885.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-45885.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// compile-flags:-Zmir-opt-level=2\n+// compile-flags:-Zmir-opt-level=3\n \n pub enum Enum {\n     A,"}, {"sha": "7c135250940dcada44221cdc98d16c1a121ae74c", "filename": "src/test/ui/mir/mir-inlining/ice-issue-68347.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-68347.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-68347.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-68347.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// compile-flags:-Zmir-opt-level=2\n+// compile-flags:-Zmir-opt-level=3\n pub fn main() {\n     let _x: fn() = handle_debug_column;\n }"}, {"sha": "ef05ff9ce03b9192a4e43cce10a14061e86fb7d8", "filename": "src/test/ui/mir/mir-inlining/ice-issue-77306-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-77306-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-77306-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-77306-1.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// compile-flags:-Zmir-opt-level=2\n+// compile-flags:-Zmir-opt-level=3\n \n // Previously ICEd because we did not normalize during inlining,\n // see https://github.com/rust-lang/rust/pull/77306 for more discussion."}, {"sha": "cb208401313e9402edb596fa6e4a5d5780a84760", "filename": "src/test/ui/mir/mir-inlining/ice-issue-77306-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-77306-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-77306-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-77306-2.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// compile-flags:-Zmir-opt-level=2\n+// compile-flags:-Zmir-opt-level=3\n \n struct Cursor {}\n struct TokenTree {}"}, {"sha": "0d3fbfe5d1a0612944cbebd2a27d28484a79baf9", "filename": "src/test/ui/mir/mir-inlining/ice-issue-77564.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-77564.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-77564.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fice-issue-77564.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// compile-flags:-Zmir-opt-level=2\n+// compile-flags:-Zmir-opt-level=3\n \n use std::mem::MaybeUninit;\n const N: usize = 2;"}, {"sha": "8ed7f25d2bbdbd79dbe9a8cee50b24f8ab3e2649", "filename": "src/test/ui/mir/mir-inlining/inline-instrument-coverage-fail.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Finline-instrument-coverage-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Finline-instrument-coverage-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Finline-instrument-coverage-fail.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,9 +1,9 @@\n-// Ensures -Zmir-opt-level=2 (specifically, inlining) is not allowed with -Zinstrument-coverage.\n+// Ensures -Zmir-opt-level=3 (specifically, inlining) is not allowed with -Zinstrument-coverage.\n // Regression test for issue #80060.\n //\n // needs-profiler-support\n // build-pass\n-// compile-flags: -Zmir-opt-level=2 -Zinstrument-coverage\n+// compile-flags: -Zmir-opt-level=3 -Zinstrument-coverage\n #[inline(never)]\n fn foo() {}\n "}, {"sha": "d482afc395d19623582b3ceabf07d5c5a19e2d2f", "filename": "src/test/ui/mir/mir-inlining/inline-instrument-coverage-fail.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Finline-instrument-coverage-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Finline-instrument-coverage-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Finline-instrument-coverage-fail.stderr?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,2 +1,2 @@\n-warning: `-Z mir-opt-level=2` (or any level > 1) enables function inlining, which is incompatible with `-Z instrument-coverage`. Inlining will be disabled.\n+warning: `-Z mir-opt-level=3` (or any level > 1) enables function inlining, which is incompatible with `-Z instrument-coverage`. Inlining will be disabled.\n "}, {"sha": "8b3cb703dc0de181d9645939739611b2322696ae", "filename": "src/test/ui/mir/mir-inlining/no-trait-method-issue-40473.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fno-trait-method-issue-40473.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fno-trait-method-issue-40473.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fno-trait-method-issue-40473.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// compile-flags:-Zmir-opt-level=2\n+// compile-flags:-Zmir-opt-level=3\n pub trait Foo {\n     fn bar(&self) -> usize { 2 }\n }"}, {"sha": "e2620682679b2cf99455d1f8f6194933b685a06f", "filename": "src/test/ui/mir/mir-inlining/var-debuginfo-issue-67586.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fvar-debuginfo-issue-67586.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fvar-debuginfo-issue-67586.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir-inlining%2Fvar-debuginfo-issue-67586.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// compile-flags: -Z mir-opt-level=2 -C opt-level=0 -C debuginfo=2\n+// compile-flags: -Z mir-opt-level=3 -C opt-level=0 -C debuginfo=2\n \n #[inline(never)]\n pub fn foo(bar: usize) -> usize {"}, {"sha": "b66a85d07d3b973ad1c5ac2eb2bf22fa9e1adb1e", "filename": "src/test/ui/mir/mir_const_prop_tuple_field_reorder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir_const_prop_tuple_field_reorder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fmir_const_prop_tuple_field_reorder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fmir_const_prop_tuple_field_reorder.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,4 +1,4 @@\n-// compile-flags: -Z mir-opt-level=2\n+// compile-flags: -Z mir-opt-level=3\n // build-pass\n #![crate_type=\"lib\"]\n "}, {"sha": "1892807253ae3c1a7f9fb2a791ce5bf6df9aa726", "filename": "src/test/ui/mir/ssa-analysis-regression-50041.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fssa-analysis-regression-50041.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fmir%2Fssa-analysis-regression-50041.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmir%2Fssa-analysis-regression-50041.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // build-pass\n-// compile-flags: -Z mir-opt-level=3\n+// compile-flags: -Z mir-opt-level=4\n \n #![crate_type=\"lib\"]\n #![feature(lang_items)]"}, {"sha": "bbd991e36ccaf2d3a0b0f61625a07d2dd11fc9db", "filename": "src/test/ui/polymorphization/promoted-function-3.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpolymorphization%2Fpromoted-function-3.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,5 +1,5 @@\n // run-pass\n-// compile-flags: -Zpolymorphize=on -Zmir-opt-level=3\n+// compile-flags: -Zpolymorphize=on -Zmir-opt-level=4\n \n fn caller<T, U>() -> &'static usize {\n     callee::<U>()"}, {"sha": "e5754d355d9cb37a0d25c86c29632f4dce6dafad", "filename": "src/test/ui/rfc-2091-track-caller/caller-location-intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-intrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-intrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fcaller-location-intrinsic.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n // revisions: default mir-opt\n-//[mir-opt] compile-flags: -Zmir-opt-level=3\n+//[mir-opt] compile-flags: -Zmir-opt-level=4\n \n #[inline(never)]\n #[track_caller]"}, {"sha": "89b0b69f38dc09cd5e7d0e81929908c67a9362c8", "filename": "src/test/ui/rfc-2091-track-caller/const-caller-location.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fconst-caller-location.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fconst-caller-location.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fconst-caller-location.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n // revisions: default mir-opt\n-//[mir-opt] compile-flags: -Zmir-opt-level=3\n+//[mir-opt] compile-flags: -Zmir-opt-level=4\n \n #![feature(const_caller_location, const_fn)]\n "}, {"sha": "87e52881c152f7a6ffd08dfffcaa2d07ecb03bd1", "filename": "src/test/ui/rfc-2091-track-caller/intrinsic-wrapper.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fintrinsic-wrapper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fintrinsic-wrapper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fintrinsic-wrapper.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n // revisions: default mir-opt\n-//[mir-opt] compile-flags: -Zmir-opt-level=3\n+//[mir-opt] compile-flags: -Zmir-opt-level=4\n \n macro_rules! caller_location_from_macro {\n     () => (core::panic::Location::caller());"}, {"sha": "1b13ea3e93c89e3cf848c44524c3e0a8f2a65f8c", "filename": "src/test/ui/rfc-2091-track-caller/pass.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fpass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fpass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fpass.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n // revisions: default mir-opt\n-//[mir-opt] compile-flags: -Zmir-opt-level=3\n+//[mir-opt] compile-flags: -Zmir-opt-level=4\n \n #[track_caller]\n fn f() {}"}, {"sha": "84b7c6701e5e1d18ebda289631f606d520726ebc", "filename": "src/test/ui/rfc-2091-track-caller/std-panic-locations.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fstd-panic-locations.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fstd-panic-locations.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Fstd-panic-locations.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n // ignore-wasm32-bare compiled with panic=abort by default\n // revisions: default mir-opt\n-//[mir-opt] compile-flags: -Zmir-opt-level=3\n+//[mir-opt] compile-flags: -Zmir-opt-level=4\n \n #![feature(option_expect_none, option_unwrap_none)]\n #![allow(unconditional_panic)]"}, {"sha": "9d28eb9de095c684919d58464e0b2c49de8fee3e", "filename": "src/test/ui/rfc-2091-track-caller/track-caller-attribute.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftrack-caller-attribute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftrack-caller-attribute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftrack-caller-attribute.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n // revisions: default mir-opt\n-//[mir-opt] compile-flags: -Zmir-opt-level=3\n+//[mir-opt] compile-flags: -Zmir-opt-level=4\n \n use std::panic::Location;\n "}, {"sha": "65881257815acde15178d199214b37a7ecae80f6", "filename": "src/test/ui/rfc-2091-track-caller/tracked-fn-ptr-with-arg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-fn-ptr-with-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-fn-ptr-with-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-fn-ptr-with-arg.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n // revisions: default mir-opt\n-//[mir-opt] compile-flags: -Zmir-opt-level=3\n+//[mir-opt] compile-flags: -Zmir-opt-level=4\n \n fn pass_to_ptr_call<T>(f: fn(T), x: T) {\n     f(x);"}, {"sha": "8bb4dd288f054f4b8acd04416cf020fdcb2ffc04", "filename": "src/test/ui/rfc-2091-track-caller/tracked-fn-ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-fn-ptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-fn-ptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2091-track-caller%2Ftracked-fn-ptr.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1,6 +1,6 @@\n // run-pass\n // revisions: default mir-opt\n-//[mir-opt] compile-flags: -Zmir-opt-level=3\n+//[mir-opt] compile-flags: -Zmir-opt-level=4\n \n fn ptr_call(f: fn()) {\n     f();"}, {"sha": "4be6818305010dc95147275ee8df857ed0be0342", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-inlining-issue67557-ice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557-ice.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -2,7 +2,7 @@\n // passed the wrong Instance, causing issues with inlining. See #67557.\n //\n // run-pass\n-// compile-flags: -Zmir-opt-level=3\n+// compile-flags: -Zmir-opt-level=4\n #![feature(platform_intrinsics, repr_simd)]\n \n extern \"platform-intrinsic\" {"}, {"sha": "67556829815b3eb6e781950a36f30611f55e4361", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-inlining-issue67557.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -2,7 +2,7 @@\n // the wrong Instance, causing issues with inlining. See #67557.\n //\n // run-pass\n-// compile-flags: -Zmir-opt-level=3\n+// compile-flags: -Zmir-opt-level=4\n #![feature(platform_intrinsics, repr_simd)]\n \n extern \"platform-intrinsic\" {"}, {"sha": "94af21568ee80ea3a880f7a158a386a8dfc7959d", "filename": "src/tools/clippy/src/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy%2Fsrc%2Fdriver.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -83,7 +83,7 @@ impl rustc_driver::Callbacks for ClippyCallbacks {\n         // run on the unoptimized MIR. On the other hand this results in some false negatives. If\n         // MIR passes can be enabled / disabled separately, we should figure out, what passes to\n         // use for Clippy.\n-        config.opts.debugging_opts.mir_opt_level = 0;\n+        config.opts.debugging_opts.mir_opt_level = Some(0);\n     }\n }\n "}, {"sha": "9a82591e5a75a434702fa49b999d5cf6bac9be30", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/15c148b4f2b86f22c053bf08d3a2b76f76359a35/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=15c148b4f2b86f22c053bf08d3a2b76f76359a35", "patch": "@@ -1960,7 +1960,7 @@ impl<'test> TestCx<'test> {\n                 rustc.args(&[\n                     \"-Copt-level=1\",\n                     \"-Zdump-mir=all\",\n-                    \"-Zmir-opt-level=3\",\n+                    \"-Zmir-opt-level=4\",\n                     \"-Zvalidate-mir\",\n                     \"-Zdump-mir-exclude-pass-number\",\n                 ]);"}]}