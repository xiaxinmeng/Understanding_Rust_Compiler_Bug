{"sha": "408475a59329c32766b4e4ad8296b6726e17bfec", "node_id": "C_kwDOAAsO6NoAKDQwODQ3NWE1OTMyOWMzMjc2NmI0ZTRhZDgyOTZiNjcyNmUxN2JmZWM", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T08:26:18Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-10-10T08:26:18Z"}, "message": "move test", "tree": {"sha": "dc1de32f57a3042ac0dd8bcd376a8dd861e88551", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc1de32f57a3042ac0dd8bcd376a8dd861e88551"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/408475a59329c32766b4e4ad8296b6726e17bfec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/408475a59329c32766b4e4ad8296b6726e17bfec", "html_url": "https://github.com/rust-lang/rust/commit/408475a59329c32766b4e4ad8296b6726e17bfec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/408475a59329c32766b4e4ad8296b6726e17bfec/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0a104cbd1482d0d108217075fae85e0349b54af", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0a104cbd1482d0d108217075fae85e0349b54af", "html_url": "https://github.com/rust-lang/rust/commit/b0a104cbd1482d0d108217075fae85e0349b54af"}], "stats": {"total": 103, "additions": 58, "deletions": 45}, "files": [{"sha": "b4b4ad10ae08b8e260a59a103a7bb7982c28b4dc", "filename": "crates/hir_def/src/macro_expansion_tests/mbe.rs", "status": "modified", "additions": 58, "deletions": 0, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/408475a59329c32766b4e4ad8296b6726e17bfec/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/408475a59329c32766b4e4ad8296b6726e17bfec/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fmacro_expansion_tests%2Fmbe.rs?ref=408475a59329c32766b4e4ad8296b6726e17bfec", "patch": "@@ -878,3 +878,61 @@ mod c {}\n \"#]],\n     )\n }\n+\n+#[test]\n+fn test_all_items() {\n+    check(\n+        r#\"\n+macro_rules! m { ($($i:item)*) => ($($i )*) }\n+m! {\n+    extern crate a;\n+    mod b;\n+    mod c {}\n+    use d;\n+    const E: i32 = 0;\n+    static F: i32 = 0;\n+    impl G {}\n+    struct H;\n+    enum I { Foo }\n+    trait J {}\n+    fn h() {}\n+    extern {}\n+    type T = u8;\n+}\n+\"#,\n+        expect![[r#\"\n+macro_rules! m { ($($i:item)*) => ($($i )*) }\n+extern crate a;\n+mod b;\n+mod c {}\n+use d;\n+const E:i32 = 0;\n+static F:i32 = 0;\n+impl G {}\n+struct H;\n+enum I {\n+    Foo\n+}\n+trait J {}\n+fn h() {}\n+extern {}\n+type T = u8;\n+\"#]],\n+    );\n+}\n+\n+#[test]\n+fn test_block() {\n+    check(\n+        r#\"\n+macro_rules! m { ($b:block) => { fn foo() $b } }\n+m! { { 1; } }\n+\"#,\n+        expect![[r#\"\n+macro_rules! m { ($b:block) => { fn foo() $b } }\n+fn foo() {\n+    1;\n+}\n+\"#]],\n+    );\n+}"}, {"sha": "8fee2420760a160e2821eb2dbfd28bb21aff85ab", "filename": "crates/mbe/src/tests/expand.rs", "status": "modified", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/408475a59329c32766b4e4ad8296b6726e17bfec/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/408475a59329c32766b4e4ad8296b6726e17bfec/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fmbe%2Fsrc%2Ftests%2Fexpand.rs?ref=408475a59329c32766b4e4ad8296b6726e17bfec", "patch": "@@ -101,51 +101,6 @@ fn test_attr_to_token_tree() {\n     );\n }\n \n-#[test]\n-fn test_all_items() {\n-    parse_macro(\n-        r#\"\n-        macro_rules! foo {\n-            ($ ($ i:item)*) => ($ (\n-                $ i\n-            )*)\n-        }\n-\"#,\n-    ).\n-    assert_expand_items(\n-        r#\"\n-        foo! {\n-            extern crate a;\n-            mod b;\n-            mod c {}\n-            use d;\n-            const E: i32 = 0;\n-            static F: i32 = 0;\n-            impl G {}\n-            struct H;\n-            enum I { Foo }\n-            trait J {}\n-            fn h() {}\n-            extern {}\n-            type T = u8;\n-        }\n-\"#,\n-        r#\"extern crate a ; mod b ; mod c {} use d ; const E : i32 = 0 ; static F : i32 = 0 ; impl G {} struct H ; enum I {Foo} trait J {} fn h () {} extern {} type T = u8 ;\"#,\n-    );\n-}\n-\n-#[test]\n-fn test_block() {\n-    parse_macro(\n-        r#\"\n-        macro_rules! foo {\n-            ($ i:block) => { fn foo() $ i }\n-        }\n-\"#,\n-    )\n-    .assert_expand_statements(\"foo! { { 1; } }\", \"fn foo () {1 ;}\");\n-}\n-\n #[test]\n fn test_meta() {\n     parse_macro("}]}