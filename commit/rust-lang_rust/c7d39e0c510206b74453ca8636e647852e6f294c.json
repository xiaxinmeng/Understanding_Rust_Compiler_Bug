{"sha": "c7d39e0c510206b74453ca8636e647852e6f294c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM3ZDM5ZTBjNTEwMjA2Yjc0NDUzY2E4NjM2ZTY0Nzg1MmU2ZjI5NGM=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-20T16:42:45Z"}, "committer": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-07-20T16:43:25Z"}, "message": "Remove unused method", "tree": {"sha": "03e820cb03c253d2e8ae4f2c076692ac1c588628", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/03e820cb03c253d2e8ae4f2c076692ac1c588628"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c7d39e0c510206b74453ca8636e647852e6f294c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c7d39e0c510206b74453ca8636e647852e6f294c", "html_url": "https://github.com/rust-lang/rust/commit/c7d39e0c510206b74453ca8636e647852e6f294c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c7d39e0c510206b74453ca8636e647852e6f294c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cab813ad91ec7b2016ae3c0e6fc804becb2d623", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cab813ad91ec7b2016ae3c0e6fc804becb2d623", "html_url": "https://github.com/rust-lang/rust/commit/7cab813ad91ec7b2016ae3c0e6fc804becb2d623"}], "stats": {"total": 19, "additions": 1, "deletions": 18}, "files": [{"sha": "e4acb2ad4b161d2d684a403acc62605b48099e8f", "filename": "src/librustc_codegen_llvm/builder.rs", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/c7d39e0c510206b74453ca8636e647852e6f294c/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c7d39e0c510206b74453ca8636e647852e6f294c/src%2Flibrustc_codegen_llvm%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fbuilder.rs?ref=c7d39e0c510206b74453ca8636e647852e6f294c", "patch": "@@ -13,7 +13,7 @@\n use llvm;\n use llvm::{AtomicRmwBinOp, AtomicOrdering, SynchronizationScope, AsmDialect};\n use llvm::{Opcode, IntPredicate, RealPredicate, False, OperandBundleDef};\n-use llvm::{ValueRef, BasicBlockRef, BuilderRef, ModuleRef};\n+use llvm::{ValueRef, BasicBlockRef, BuilderRef};\n use common::*;\n use type_::Type;\n use value::Value;\n@@ -1157,23 +1157,6 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         }\n     }\n \n-    pub fn trap(&self) {\n-        unsafe {\n-            let bb: BasicBlockRef = llvm::LLVMGetInsertBlock(self.llbuilder);\n-            let fn_: ValueRef = llvm::LLVMGetBasicBlockParent(bb);\n-            let m: ModuleRef = llvm::LLVMGetGlobalParent(fn_);\n-            let p = \"llvm.trap\\0\".as_ptr();\n-            let t: ValueRef = llvm::LLVMGetNamedFunction(m, p as *const _);\n-            assert!((t as isize != 0));\n-            let args: &[ValueRef] = &[];\n-            self.count_insn(\"trap\");\n-            llvm::LLVMRustBuildCall(self.llbuilder, t,\n-                                    args.as_ptr(), args.len() as c_uint,\n-                                    ptr::null_mut(),\n-                                    noname());\n-        }\n-    }\n-\n     pub fn landing_pad(&self, ty: Type, pers_fn: ValueRef,\n                        num_clauses: usize) -> ValueRef {\n         self.count_insn(\"landingpad\");"}]}