{"sha": "1205e6cff3b2df4ed8465aa1f4f4b3f8e230b7a3", "node_id": "C_kwDOAAsO6NoAKDEyMDVlNmNmZjNiMmRmNGVkODQ2NWFhMWY0ZjRiM2Y4ZTIzMGI3YTM", "commit": {"author": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-06-05T02:37:09Z"}, "committer": {"name": "jyn", "email": "github@jyn.dev", "date": "2023-06-05T02:44:02Z"}, "message": "Use the top-level Kind to determine whether Steps are excluded\n\nPreviously, this would use the `Kind` passed to `--exclude` (and not do any filtering at all if no kind was passed).\nThat meant that `x test linkchecker --exclude std` would fail - you had to explicitly say `--exclude test::std`.\n\nChange bootstrap to use the top-level Kind instead, which does the right thing automatically.\nNote that this breaks things like `x test --exclude doc::std`, but I'm not sure why you'd ever want to do that.", "tree": {"sha": "e86c6697ecab3abe32d850b1d60e6f0d65b5b66a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e86c6697ecab3abe32d850b1d60e6f0d65b5b66a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1205e6cff3b2df4ed8465aa1f4f4b3f8e230b7a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1205e6cff3b2df4ed8465aa1f4f4b3f8e230b7a3", "html_url": "https://github.com/rust-lang/rust/commit/1205e6cff3b2df4ed8465aa1f4f4b3f8e230b7a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1205e6cff3b2df4ed8465aa1f4f4b3f8e230b7a3/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dcf3571c513a29a60a5061ce84c3c618cf5e4cd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/dcf3571c513a29a60a5061ce84c3c618cf5e4cd5", "html_url": "https://github.com/rust-lang/rust/commit/dcf3571c513a29a60a5061ce84c3c618cf5e4cd5"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "1aba0713850aef9216cd75818de11fb0d9559082", "filename": "src/bootstrap/CHANGELOG.md", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1205e6cff3b2df4ed8465aa1f4f4b3f8e230b7a3/src%2Fbootstrap%2FCHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/1205e6cff3b2df4ed8465aa1f4f4b3f8e230b7a3/src%2Fbootstrap%2FCHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2FCHANGELOG.md?ref=1205e6cff3b2df4ed8465aa1f4f4b3f8e230b7a3", "patch": "@@ -18,6 +18,7 @@ The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/).\n - `x.py fmt` now formats only files modified between the merge-base of HEAD and the last commit in the master branch of the rust-lang repository and the current working directory. To restore old behaviour, use `x.py fmt .`. The check mode is not affected by this change. [#105702](https://github.com/rust-lang/rust/pull/105702)\n - The `llvm.version-check` config option has been removed. Older versions were never supported. If you still need to support older versions (e.g. you are applying custom patches), patch `check_llvm_version` in bootstrap to change the minimum version. [#108619](https://github.com/rust-lang/rust/pull/108619)\n - The `rust.ignore-git` option has been renamed to `rust.omit-git-hash`. [#110059](https://github.com/rust-lang/rust/pull/110059)\n+- `--exclude` no longer accepts a `Kind` as part of a Step; instead it uses the top-level Kind of the subcommand. If this matches how you were already using --exclude (e.g. `x test --exclude test::std`), simply remove the kind: `--exclude std`. If you were using a kind that did not match the top-level subcommand, please open an issue explaining why you wanted this feature.\n \n ### Non-breaking changes\n "}, {"sha": "5bdba28158abd950cce50dfaaf50986629747df6", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/1205e6cff3b2df4ed8465aa1f4f4b3f8e230b7a3/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1205e6cff3b2df4ed8465aa1f4f4b3f8e230b7a3/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=1205e6cff3b2df4ed8465aa1f4f4b3f8e230b7a3", "patch": "@@ -307,7 +307,7 @@ impl StepDescription {\n     }\n \n     fn is_excluded(&self, builder: &Builder<'_>, pathset: &PathSet) -> bool {\n-        if builder.config.exclude.iter().any(|e| pathset.has(&e.path, e.kind)) {\n+        if builder.config.exclude.iter().any(|e| pathset.has(&e.path, Some(builder.kind))) {\n             println!(\"Skipping {:?} because it is excluded\", pathset);\n             return true;\n         }"}]}