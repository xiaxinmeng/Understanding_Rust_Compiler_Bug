{"sha": "d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxYTViMjc3YTFjZWY0Y2ZkNDhlOWFhOTg3ZTVjODc3NjM2MGZkMjU=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-08-31T06:47:23Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-08-31T06:47:23Z"}, "message": "rollup merge of #16839 : treeman/issue-15358", "tree": {"sha": "12081aa017cd6b5c52f42f9d81e07422c0e58a6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12081aa017cd6b5c52f42f9d81e07422c0e58a6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "html_url": "https://github.com/rust-lang/rust/commit/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0bce6672495d4339c0b2a2d2965bcc8024152e1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/0bce6672495d4339c0b2a2d2965bcc8024152e1a", "html_url": "https://github.com/rust-lang/rust/commit/0bce6672495d4339c0b2a2d2965bcc8024152e1a"}, {"sha": "5bf1b03e5c8753680c231ebcb7735a9855de31a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bf1b03e5c8753680c231ebcb7735a9855de31a3", "html_url": "https://github.com/rust-lang/rust/commit/5bf1b03e5c8753680c231ebcb7735a9855de31a3"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "4c8dd86c61618933db74ca04c43fb1751eb7b12c", "filename": "src/doc/guide.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Fdoc%2Fguide.md", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Fdoc%2Fguide.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fguide.md?ref=d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "patch": "@@ -630,7 +630,7 @@ In Rust, however, using `let` to introduce a binding is _not_ an expression. The\n following will produce a compile-time error:\n \n ```{ignore}\n-let x = (let y = 5i); // found `let` in ident position\n+let x = (let y = 5i); // expected identifier, found keyword `let`\n ```\n \n The compiler is telling us here that it was expecting to see the beginning of"}, {"sha": "fc93e482adc931181b193eb914ba45a3621f63a6", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "patch": "@@ -599,7 +599,7 @@ impl<'a> Parser<'a> {\n             let token_str = self.this_token_to_string();\n             let span = self.span;\n             self.span_err(span,\n-                          format!(\"found `{}` in ident position\",\n+                          format!(\"expected identifier, found keyword `{}`\",\n                                   token_str).as_slice());\n         }\n     }"}, {"sha": "ca10bdd9848ece78f7f018e68b6dac5b2ca10249", "filename": "src/test/compile-fail/bad-value-ident-false.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fbad-value-ident-false.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fbad-value-ident-false.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-value-ident-false.rs?ref=d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "patch": "@@ -8,5 +8,5 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn false() { } //~ ERROR found `false` in ident position\n+fn false() { } //~ ERROR expected identifier, found keyword `false`\n fn main() { }"}, {"sha": "4508d5219a21735f71c93fa9f4a50123b96da25a", "filename": "src/test/compile-fail/bad-value-ident-true.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fbad-value-ident-true.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fbad-value-ident-true.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fbad-value-ident-true.rs?ref=d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "patch": "@@ -8,5 +8,5 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn true() { } //~ ERROR found `true` in ident position\n+fn true() { } //~ ERROR expected identifier, found keyword `true`\n fn main() { }"}, {"sha": "6cbc8aa1ea642509af53ea077ab9b765315b3bda", "filename": "src/test/compile-fail/keyword-super.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fkeyword-super.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fkeyword-super.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkeyword-super.rs?ref=d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n fn main() {\n-    let super: int; //~ ERROR found `super` in ident position\n+    let super: int; //~ ERROR expected identifier, found keyword `super`\n }"}, {"sha": "64eac47e69b329b97d9ce93409c560b413c03ca9", "filename": "src/test/compile-fail/keyword.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fkeyword.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fkeyword.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fkeyword.rs?ref=d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n pub mod break {\n-    //~^ ERROR found `break` in ident position\n+    //~^ ERROR expected identifier, found keyword `break`\n }"}, {"sha": "c8711598163a0c199278b71def8a6f1176060491", "filename": "src/test/compile-fail/removed-syntax-field-let.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-field-let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-field-let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-field-let.rs?ref=d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "patch": "@@ -10,6 +10,6 @@\n \n struct s {\n     let foo: (),\n-    //~^  ERROR found `let` in ident position\n+    //~^  ERROR expected identifier, found keyword `let`\n     //~^^ ERROR expected `:`, found `foo`\n }"}, {"sha": "b20da6346f775decc0e124afde42598dd2b2cd22", "filename": "src/test/compile-fail/removed-syntax-mut-vec-expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-mut-vec-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-mut-vec-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-mut-vec-expr.rs?ref=d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "patch": "@@ -10,6 +10,6 @@\n \n fn f() {\n     let v = [mut 1, 2, 3, 4];\n-    //~^  ERROR found `mut` in ident position\n+    //~^  ERROR expected identifier, found keyword `mut`\n     //~^^ ERROR expected `]`, found `1`\n }"}, {"sha": "c5eec2ef6e19930f43e35458c3b3fa5fed3fa4ba", "filename": "src/test/compile-fail/removed-syntax-mut-vec-ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-mut-vec-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-mut-vec-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-mut-vec-ty.rs?ref=d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n type v = [mut int];\n-    //~^  ERROR found `mut` in ident position\n+    //~^  ERROR expected identifier, found keyword `mut`\n     //~^^ ERROR expected `]`, found `int`"}, {"sha": "124b3738fab5ffd6e9041f0eb67010adf3732504", "filename": "src/test/compile-fail/removed-syntax-uniq-mut-expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-uniq-mut-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-uniq-mut-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-uniq-mut-expr.rs?ref=d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "patch": "@@ -10,6 +10,6 @@\n \n fn f() {\n     let a_box = box mut 42;\n-    //~^  ERROR found `mut` in ident position\n+    //~^  ERROR expected identifier, found keyword `mut`\n     //~^^ ERROR expected `;`, found `42`\n }"}, {"sha": "579bfed1331ed5e4467d52b6f5244fbbef4442a8", "filename": "src/test/compile-fail/removed-syntax-uniq-mut-ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-uniq-mut-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-uniq-mut-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fremoved-syntax-uniq-mut-ty.rs?ref=d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n type mut_box = Box<mut int>;\n-    //~^  ERROR found `mut` in ident position\n+    //~^  ERROR expected identifier, found keyword `mut`\n     //~^^ ERROR expected `,`, found `int`"}, {"sha": "c5f9e8d5991938878d669152669f493ef2cb874b", "filename": "src/test/compile-fail/unsized2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Funsized2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1a5b277a1cef4cfd48e9aa987e5c8776360fd25/src%2Ftest%2Fcompile-fail%2Funsized2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funsized2.rs?ref=d1a5b277a1cef4cfd48e9aa987e5c8776360fd25", "patch": "@@ -13,5 +13,5 @@\n fn f<X>() {}\n \n pub fn main() {\n-    f<type>(); //~ ERROR found `type` in ident position\n+    f<type>(); //~ ERROR expected identifier, found keyword `type`\n }"}]}