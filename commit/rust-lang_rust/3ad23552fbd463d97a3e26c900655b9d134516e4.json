{"sha": "3ad23552fbd463d97a3e26c900655b9d134516e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNhZDIzNTUyZmJkNDYzZDk3YTNlMjZjOTAwNjU1YjlkMTM0NTE2ZTQ=", "commit": {"author": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-08-15T13:16:59Z"}, "committer": {"name": "Huon Wilson", "email": "dbau.pp+github@gmail.com", "date": "2013-08-16T04:37:24Z"}, "message": "syntax: add a local_data_key macro that creates a key for access to the TLS.\n\nThis allows the internal implementation details of the TLS keys to be\nchanged without requiring the update of all the users. (Or, applying\nchanges that have to be applied for the keys to work correctly, e.g.\nforcing LLVM to not merge these constants.)", "tree": {"sha": "5507ee278d6cde91ab847d802f04ca372775b620", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5507ee278d6cde91ab847d802f04ca372775b620"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ad23552fbd463d97a3e26c900655b9d134516e4", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ad23552fbd463d97a3e26c900655b9d134516e4", "html_url": "https://github.com/rust-lang/rust/commit/3ad23552fbd463d97a3e26c900655b9d134516e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ad23552fbd463d97a3e26c900655b9d134516e4/comments", "author": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "committer": {"login": "huonw", "id": 1203825, "node_id": "MDQ6VXNlcjEyMDM4MjU=", "avatar_url": "https://avatars.githubusercontent.com/u/1203825?v=4", "gravatar_id": "", "url": "https://api.github.com/users/huonw", "html_url": "https://github.com/huonw", "followers_url": "https://api.github.com/users/huonw/followers", "following_url": "https://api.github.com/users/huonw/following{/other_user}", "gists_url": "https://api.github.com/users/huonw/gists{/gist_id}", "starred_url": "https://api.github.com/users/huonw/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/huonw/subscriptions", "organizations_url": "https://api.github.com/users/huonw/orgs", "repos_url": "https://api.github.com/users/huonw/repos", "events_url": "https://api.github.com/users/huonw/events{/privacy}", "received_events_url": "https://api.github.com/users/huonw/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "790e6bb3972c3b167a8e0314305740a20f62d2f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/790e6bb3972c3b167a8e0314305740a20f62d2f0", "html_url": "https://github.com/rust-lang/rust/commit/790e6bb3972c3b167a8e0314305740a20f62d2f0"}], "stats": {"total": 67, "additions": 64, "deletions": 3}, "files": [{"sha": "4dbe61b0c49d79c6a8a60a995065ed6781c8d654", "filename": "src/libstd/local_data.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ad23552fbd463d97a3e26c900655b9d134516e4/src%2Flibstd%2Flocal_data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ad23552fbd463d97a3e26c900655b9d134516e4/src%2Flibstd%2Flocal_data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flocal_data.rs?ref=3ad23552fbd463d97a3e26c900655b9d134516e4", "patch": "@@ -24,8 +24,8 @@ wish to store.\n ~~~{.rust}\n use std::local_data;\n \n-static key_int: local_data::Key<int> = &local_data::Key;\n-static key_vector: local_data::Key<~[int]> = &local_data::Key;\n+local_data_key!(key_int: int);\n+local_data_key!(key_vector: ~[int]);\n \n local_data::set(key_int, 3);\n local_data::get(key_int, |opt| assert_eq!(opt, Some(&3)));"}, {"sha": "49eb9f1221248dcfcb3ebac0f1c477e3870b8741", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3ad23552fbd463d97a3e26c900655b9d134516e4/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ad23552fbd463d97a3e26c900655b9d134516e4/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=3ad23552fbd463d97a3e26c900655b9d134516e4", "patch": "@@ -957,6 +957,17 @@ pub fn std_macros() -> @str {\n             println(fmt!($($arg),+))\n         )\n     )\n+\n+    // NOTE: use this after a snapshot lands to abstract the details\n+    // of the TLS interface.\n+    macro_rules! local_data_key (\n+        ($name:ident: $ty:ty) => (\n+            static $name: ::std::local_data::Key<$ty> = &::std::local_data::Key;\n+        );\n+        (pub $name:ident: $ty:ty) => (\n+            pub static $name: ::std::local_data::Key<$ty> = &::std::local_data::Key;\n+        )\n+    )\n }\";\n }\n "}, {"sha": "4f60391892da37439f1fe84fc20ddd15c086e6ed", "filename": "src/test/compile-fail/core-tls-store-pointer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3ad23552fbd463d97a3e26c900655b9d134516e4/src%2Ftest%2Fcompile-fail%2Fcore-tls-store-pointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ad23552fbd463d97a3e26c900655b9d134516e4/src%2Ftest%2Fcompile-fail%2Fcore-tls-store-pointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fcore-tls-store-pointer.rs?ref=3ad23552fbd463d97a3e26c900655b9d134516e4", "patch": "@@ -12,7 +12,7 @@\n \n use std::local_data;\n \n-static key: local_data::Key<@&int> = &local_data::Key;\n+local_data_key!(key: @&int)\n //~^ ERROR only 'static is allowed\n \n fn main() {}"}, {"sha": "a64c5c09584870e10f6d797fea6e0ea3f80ab5ea", "filename": "src/test/compile-fail/macro-local-data-key-priv.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/3ad23552fbd463d97a3e26c900655b9d134516e4/src%2Ftest%2Fcompile-fail%2Fmacro-local-data-key-priv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ad23552fbd463d97a3e26c900655b9d134516e4/src%2Ftest%2Fcompile-fail%2Fmacro-local-data-key-priv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fmacro-local-data-key-priv.rs?ref=3ad23552fbd463d97a3e26c900655b9d134516e4", "patch": "@@ -0,0 +1,22 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::local_data;\n+\n+// check that the local data keys are private by default.\n+\n+mod bar {\n+    local_data_key!(baz: float)\n+}\n+\n+fn main() {\n+    local_data::set(bar::baz, -10.0);\n+    //~^ ERROR unresolved name `bar::baz`\n+}"}, {"sha": "b53d7b36d7925ac63f5daca2f4c598371810188b", "filename": "src/test/run-pass/macro-local-data-key.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/3ad23552fbd463d97a3e26c900655b9d134516e4/src%2Ftest%2Frun-pass%2Fmacro-local-data-key.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ad23552fbd463d97a3e26c900655b9d134516e4/src%2Ftest%2Frun-pass%2Fmacro-local-data-key.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-local-data-key.rs?ref=3ad23552fbd463d97a3e26c900655b9d134516e4", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use std::local_data;\n+\n+local_data_key!(foo: int)\n+\n+mod bar {\n+    local_data_key!(pub baz: float)\n+}\n+\n+fn main() {\n+    local_data::get(foo, |x| assert!(x.is_none()));\n+    local_data::get(bar::baz, |y| assert!(y.is_none()));\n+\n+    local_data::set(foo, 3);\n+    local_data::set(bar::baz, -10.0);\n+\n+    local_data::get(foo, |x| assert_eq!(*x.unwrap(), 3));\n+    local_data::get(bar::baz, |y| assert_eq!(*y.unwrap(), -10.0));\n+}"}]}