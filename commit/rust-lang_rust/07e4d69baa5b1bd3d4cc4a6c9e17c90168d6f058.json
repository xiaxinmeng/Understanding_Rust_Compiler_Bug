{"sha": "07e4d69baa5b1bd3d4cc4a6c9e17c90168d6f058", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZTRkNjliYWE1YjFiZDNkNGNjNGE2YzllMTdjOTAxNjhkNmYwNTg=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-07T18:45:31Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-06-07T18:50:06Z"}, "message": "iterator: work around method resolve bug (#5898)", "tree": {"sha": "3b1c0b1e7c7fe4f3ca5acd55c354845a5f38e41b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b1c0b1e7c7fe4f3ca5acd55c354845a5f38e41b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07e4d69baa5b1bd3d4cc4a6c9e17c90168d6f058", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07e4d69baa5b1bd3d4cc4a6c9e17c90168d6f058", "html_url": "https://github.com/rust-lang/rust/commit/07e4d69baa5b1bd3d4cc4a6c9e17c90168d6f058", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07e4d69baa5b1bd3d4cc4a6c9e17c90168d6f058/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d945543ebf446913a44375169aa23686ffaa6205", "url": "https://api.github.com/repos/rust-lang/rust/commits/d945543ebf446913a44375169aa23686ffaa6205", "html_url": "https://github.com/rust-lang/rust/commit/d945543ebf446913a44375169aa23686ffaa6205"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "4ed82f63b394c62db1b597ba8f5e5f0f93c5ec99", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/07e4d69baa5b1bd3d4cc4a6c9e17c90168d6f058/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07e4d69baa5b1bd3d4cc4a6c9e17c90168d6f058/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=07e4d69baa5b1bd3d4cc4a6c9e17c90168d6f058", "patch": "@@ -285,7 +285,8 @@ pub trait IteratorUtil<A> {\n     /// let a = [1, 2, 3, 4, 5];\n     /// assert!(a.iter().last().get() == &5);\n     /// ~~~\n-    fn last(&mut self) -> Option<A>;\n+    // FIXME: #5898: should be called `last`\n+    fn last_(&mut self) -> Option<A>;\n \n     /// Performs a fold operation over the entire iterator, returning the\n     /// eventual state at the end of the iteration.\n@@ -437,7 +438,7 @@ impl<A, T: Iterator<A>> IteratorUtil<A> for T {\n \n     /// Return the last item yielded by an iterator.\n     #[inline(always)]\n-    fn last(&mut self) -> Option<A> {\n+    fn last_(&mut self) -> Option<A> {\n         let mut last = None;\n         for self.advance |x| { last = Some(x); }\n         last\n@@ -1025,8 +1026,8 @@ mod tests {\n     #[test]\n     fn test_iterator_last() {\n         let v = &[0, 1, 2, 3, 4];\n-        assert_eq!(v.iter().last().unwrap(), &4);\n-        assert_eq!(v.slice(0, 1).iter().last().unwrap(), &0);\n+        assert_eq!(v.iter().last_().unwrap(), &4);\n+        assert_eq!(v.slice(0, 1).iter().last_().unwrap(), &0);\n     }\n \n     #[test]"}]}