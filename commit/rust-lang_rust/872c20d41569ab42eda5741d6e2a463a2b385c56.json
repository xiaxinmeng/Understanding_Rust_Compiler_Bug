{"sha": "872c20d41569ab42eda5741d6e2a463a2b385c56", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3MmMyMGQ0MTU2OWFiNDJlZGE1NzQxZDZlMmE0NjNhMmIzODVjNTY=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-04-09T03:22:22Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2019-04-14T19:45:18Z"}, "message": "Fix ExternEntry test", "tree": {"sha": "b942986adbb70344ed4bcce439a1a674e06b3604", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b942986adbb70344ed4bcce439a1a674e06b3604"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/872c20d41569ab42eda5741d6e2a463a2b385c56", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAlyzjc4ACgkQtAh+UQ6Y\nsWQ3ZRAAgjJ+xbqxXqyTJYAA1EybNpqTGqzq4JdBFj5NOIn+/DlamIxRXqbJkIbT\nZs5K64Pe+n2xDBQdsUvBOvfLOpSaOSfUeAyXYy//kyF54h/fDYhbLNU6/WekrwNc\nLy9yduzTELrgB+0luCd36PDEcFxH2SJ7ClZ51+simghvmvKZMP9idIWOYl8+6c3R\ntsUbSnMNKBOB1XkEHYHK7cnRMfO9Jnk+pZ/rVwCHMKOU5g309PBe+IyiSAFAlHYZ\n6+yLVdG0uVrApk9cQreEPiZ4CCCkKfu2/kknaPlhjCtvQ3leW3/Uiz7UDlKXJdax\nOWR93HfsjrufBO2ndm90nGNaZGYwaUlvihFHiM0lEZF7I6oFeP4zcHstr4wkxGKi\no78Jf7zSTectUi8Hz2+j1hxjG6D6DrlKzASJiGdqpoHB1vssBb5kpSzzJgF00WMv\neKpNOUSKAZCkZAeSFAdO91/3dTuXvNWX4Dc4BO9yAhvtn6Qmh/HzGeTnOucA35si\nN5/wbOm2SGW06wK1A0XUMa6wlEMo/ESqmrXaWFCUsup7q2wp/qt34lmJjgJF37Ck\n4EFt0rs0M9lmijV2zBZJZZOKWB0GnDBFZfXXuW2v6iLlZrnNq0iEWMoxa4dGMU/V\n14IiSLJsA/YM5Rx1BhkOfaF97L7fZ4PQQ9+DTdsBO55R93lV67w=\n=02zH\n-----END PGP SIGNATURE-----", "payload": "tree b942986adbb70344ed4bcce439a1a674e06b3604\nparent 724f6a11b3b9ea7c267c8f009f2e6958e6286e5f\nauthor Aaron Hill <aa1ronham@gmail.com> 1554780142 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1555271118 -0400\n\nFix ExternEntry test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/872c20d41569ab42eda5741d6e2a463a2b385c56", "html_url": "https://github.com/rust-lang/rust/commit/872c20d41569ab42eda5741d6e2a463a2b385c56", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/872c20d41569ab42eda5741d6e2a463a2b385c56/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "724f6a11b3b9ea7c267c8f009f2e6958e6286e5f", "url": "https://api.github.com/repos/rust-lang/rust/commits/724f6a11b3b9ea7c267c8f009f2e6958e6286e5f", "html_url": "https://github.com/rust-lang/rust/commit/724f6a11b3b9ea7c267c8f009f2e6958e6286e5f"}], "stats": {"total": 36, "additions": 11, "deletions": 25}, "files": [{"sha": "00dfe9aca3940fe0b39430a0eaacacb21f7c0f35", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 11, "deletions": 25, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/872c20d41569ab42eda5741d6e2a463a2b385c56/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/872c20d41569ab42eda5741d6e2a463a2b385c56/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=872c20d41569ab42eda5741d6e2a463a2b385c56", "patch": "@@ -2686,9 +2686,11 @@ mod tests {\n     use super::Options;\n \n     impl ExternEntry {\n-        fn new_public(location: Option<String>) -> ExternEntry {\n-            let mut locations = BTreeSet::new();\n-            locations.insert(location);\n+        fn new_public<S: Into<String>,\n+                      I: IntoIterator<Item = Option<S>>>(locations: I) -> ExternEntry {\n+            let locations: BTreeSet<_> = locations.into_iter().map(|o| o.map(|s| s.into()))\n+                .collect();\n+\n             ExternEntry {\n                 locations,\n                 is_private_dep: false\n@@ -2708,10 +2710,6 @@ mod tests {\n         BTreeMap::from_iter(entries.into_iter())\n     }\n \n-    fn mk_set<V: Ord>(entries: Vec<V>) -> BTreeSet<V> {\n-        BTreeSet::from_iter(entries.into_iter())\n-    }\n-\n     // When the user supplies --test we should implicitly supply --cfg test\n     #[test]\n     fn test_switch_implies_cfg_test() {\n@@ -2829,45 +2827,33 @@ mod tests {\n         v1.externs = Externs::new(mk_map(vec![\n             (\n                 String::from(\"a\"),\n-                mk_set(vec![ExternEntry::new_public(Some(String::from(\"b\"))),\n-                            ExternEntry::new_public(Some(String::from(\"c\")))\n-                            ]),\n+                ExternEntry::new_public(vec![Some(\"b\"), Some(\"c\")])\n             ),\n             (\n                 String::from(\"d\"),\n-                mk_set(vec![ExternEntry::new_public(Some(String::from(\"e\"))),\n-                            ExternEntry::new_public(Some(String::from(\"f\")))\n-                            ]),\n+                ExternEntry::new_public(vec![Some(\"e\"), Some(\"f\")])\n             ),\n         ]));\n \n         v2.externs = Externs::new(mk_map(vec![\n             (\n                 String::from(\"d\"),\n-                mk_set(vec![ExternEntry::new_public(Some(String::from(\"e\"))),\n-                            ExternEntry::new_public(Some(String::from(\"f\")))\n-                            ]),\n+                ExternEntry::new_public(vec![Some(\"e\"), Some(\"f\")])\n             ),\n             (\n                 String::from(\"a\"),\n-                mk_set(vec![ExternEntry::new_public(Some(String::from(\"b\"))),\n-                            ExternEntry::new_public(Some(String::from(\"c\")))\n-                            ]),\n+                ExternEntry::new_public(vec![Some(\"b\"), Some(\"c\")])\n             ),\n         ]));\n \n         v3.externs = Externs::new(mk_map(vec![\n             (\n                 String::from(\"a\"),\n-                mk_set(vec![ExternEntry::new_public(Some(String::from(\"b\"))),\n-                            ExternEntry::new_public(Some(String::from(\"c\")))\n-                            ]),\n+                ExternEntry::new_public(vec![Some(\"b\"), Some(\"c\")])\n             ),\n             (\n                 String::from(\"d\"),\n-                mk_set(vec![ExternEntry::new_public(Some(String::from(\"f\"))),\n-                            ExternEntry::new_public(Some(String::from(\"e\")))\n-                            ]),\n+                ExternEntry::new_public(vec![Some(\"f\"), Some(\"e\")])\n             ),\n         ]));\n "}]}