{"sha": "3cd7a1740692ec34825d916550141b299caf458b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZDdhMTc0MDY5MmVjMzQ4MjVkOTE2NTUwMTQxYjI5OWNhZjQ1OGI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-23T20:19:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-23T20:19:24Z"}, "message": "Rollup merge of #65704 - RalfJung:exact-size, r=oli-obk\n\nrelax ExactSizeIterator bound on write_bytes\n\nToo many iterators don't have that bound. Instead we do run-time checks.\n\nr? @oli-obk", "tree": {"sha": "aa2b50a73237dd118df3faef760be2bf3dd7723f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa2b50a73237dd118df3faef760be2bf3dd7723f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3cd7a1740692ec34825d916550141b299caf458b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdsLXMCRBK7hj4Ov3rIwAAdHIIABKS9i6as0HVqodW59JYYwjU\nxDqTax7rD/x19szNBw/j5jN3Hg295OCA4uC6EoBSKFHNapqedrhWWSZyo3EHd/4U\nbbihXRwpLkSDa8YuYEWiQBw6X+NfrNyxe4l3/emMvyhcqmpyHUN5MiVm84JatlcE\nnyaVq4KLRit13fxz/3mLcBTuh2CyVHfvUz60P9RKqBO2MglnoNiMtIPP45xaLkJ1\nwMVqg8zC5rHR0rVMxD7l9uxxAZ4wFkjl9H68KtFwpRTvUicLE8ojJ4y+fGiqsZkr\n7/NgbNlKtHlqQ8MCrCcDOf0uaiVohoojxWbMmjgxIGLhkh0KZ2FoF39T3LeRBog=\n=U4rE\n-----END PGP SIGNATURE-----\n", "payload": "tree aa2b50a73237dd118df3faef760be2bf3dd7723f\nparent b2b35797d0a8978ac8f20b44b0bba83e1e5deaa9\nparent fe84809394fbc6ad2d36f6f142671bea7a492a4c\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1571861964 +0200\ncommitter GitHub <noreply@github.com> 1571861964 +0200\n\nRollup merge of #65704 - RalfJung:exact-size, r=oli-obk\n\nrelax ExactSizeIterator bound on write_bytes\n\nToo many iterators don't have that bound. Instead we do run-time checks.\n\nr? @oli-obk\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3cd7a1740692ec34825d916550141b299caf458b", "html_url": "https://github.com/rust-lang/rust/commit/3cd7a1740692ec34825d916550141b299caf458b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3cd7a1740692ec34825d916550141b299caf458b/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2b35797d0a8978ac8f20b44b0bba83e1e5deaa9", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2b35797d0a8978ac8f20b44b0bba83e1e5deaa9", "html_url": "https://github.com/rust-lang/rust/commit/b2b35797d0a8978ac8f20b44b0bba83e1e5deaa9"}, {"sha": "fe84809394fbc6ad2d36f6f142671bea7a492a4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe84809394fbc6ad2d36f6f142671bea7a492a4c", "html_url": "https://github.com/rust-lang/rust/commit/fe84809394fbc6ad2d36f6f142671bea7a492a4c"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "aa8ac4902a8947bc758d8404fe771a490ef73480", "filename": "src/librustc/mir/interpret/allocation.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3cd7a1740692ec34825d916550141b299caf458b/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cd7a1740692ec34825d916550141b299caf458b/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fallocation.rs?ref=3cd7a1740692ec34825d916550141b299caf458b", "patch": "@@ -353,11 +353,14 @@ impl<'tcx, Tag: Copy, Extra: AllocationExtra<Tag>> Allocation<Tag, Extra> {\n         &mut self,\n         cx: &impl HasDataLayout,\n         ptr: Pointer<Tag>,\n-        src: impl IntoIterator<Item=u8, IntoIter: iter::ExactSizeIterator>,\n+        src: impl IntoIterator<Item=u8>,\n     ) -> InterpResult<'tcx>\n     {\n         let mut src = src.into_iter();\n-        let bytes = self.get_bytes_mut(cx, ptr, Size::from_bytes(src.len() as u64))?;\n+        let (lower, upper) = src.size_hint();\n+        let len = upper.expect(\"can only write bounded iterators\");\n+        assert_eq!(lower, len, \"can only write iterators with a precise length\");\n+        let bytes = self.get_bytes_mut(cx, ptr, Size::from_bytes(len as u64))?;\n         // `zip` would stop when the first iterator ends; we want to definitely\n         // cover all of `bytes`.\n         for dest in bytes {"}, {"sha": "d113ee33162d26114c92c64d0995e013d1a26ff0", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3cd7a1740692ec34825d916550141b299caf458b/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3cd7a1740692ec34825d916550141b299caf458b/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=3cd7a1740692ec34825d916550141b299caf458b", "patch": "@@ -7,7 +7,7 @@\n //! short-circuiting the empty case!\n \n use std::collections::VecDeque;\n-use std::{ptr, iter};\n+use std::ptr;\n use std::borrow::Cow;\n \n use rustc::ty::{self, Instance, ParamEnv, query::TyCtxtAt};\n@@ -791,11 +791,12 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'mir, 'tcx, M> {\n     pub fn write_bytes(\n         &mut self,\n         ptr: Scalar<M::PointerTag>,\n-        src: impl IntoIterator<Item=u8, IntoIter: iter::ExactSizeIterator>,\n+        src: impl IntoIterator<Item=u8>,\n     ) -> InterpResult<'tcx>\n     {\n         let src = src.into_iter();\n-        let size = Size::from_bytes(src.len() as u64);\n+        let size = Size::from_bytes(src.size_hint().0 as u64);\n+        // `write_bytes` checks that this lower bound matches the upper bound matches reality.\n         let ptr = match self.check_ptr_access(ptr, size, Align::from_bytes(1).unwrap())? {\n             Some(ptr) => ptr,\n             None => return Ok(()), // zero-sized access"}]}