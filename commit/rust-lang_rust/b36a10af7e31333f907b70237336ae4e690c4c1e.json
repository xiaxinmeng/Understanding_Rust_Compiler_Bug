{"sha": "b36a10af7e31333f907b70237336ae4e690c4c1e", "node_id": "C_kwDOAAsO6NoAKGIzNmExMGFmN2UzMTMzM2Y5MDdiNzAyMzczMzZhZTRlNjkwYzRjMWU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-09-22T12:55:51Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-09-22T12:55:51Z"}, "message": "Rollup merge of #101598 - chriswailes:sanitizers, r=nagisa,eholk\n\nUpdate rustc's information on Android's sanitizers\n\nThis patch updates sanitizer support definitions for Android inside the compiler.  It also adjusts the logic to make sure no pre-built sanitizer runtime libraries are emitted as these are instead provided dynamically on Android targets.", "tree": {"sha": "4f60b9c379bd3cd9275e8ca3ba9ebf72e079ec43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f60b9c379bd3cd9275e8ca3ba9ebf72e079ec43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b36a10af7e31333f907b70237336ae4e690c4c1e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjLFtXCRBK7hj4Ov3rIwAA0jYIADB0J9JfWyfxfqBfFSAh5Oya\nzyDEtgG6CDwjb+P0KSeYIR95CC/WBRhxF6J15t7Y3cAiG6jnLm1jb1G2VK1oatxa\ny3PY9G/UtTsGfFoABEi5mg1gHGW+AzGLSVIBt4ltZVXjtTn2dizKzDHZY3PTtTo3\nEDOjUqGxkOWibkfzBSUWtTOIsb/D3hCjUsSKpmnBI6O52dF75Tk2f4CpXkVIcuKV\nEBl9FfoQ3lhzTEfOge14XDV8USsIN/L1Zx0Ae3B+tcJ6Vs45qGHguFiHSCpQJYBe\nXOFZ3o5fxnydTiJDrBX3QByU/04HTqc01tVw223yDGxinUZOc0dIYy33c4ipwtE=\n=0RkT\n-----END PGP SIGNATURE-----\n", "payload": "tree 4f60b9c379bd3cd9275e8ca3ba9ebf72e079ec43\nparent c10f7d73953a02982bbac3a504b0d22a7bda32b1\nparent 3d5a41724bd72c228a9e26a44a55337672c7dee3\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1663851351 +0530\ncommitter GitHub <noreply@github.com> 1663851351 +0530\n\nRollup merge of #101598 - chriswailes:sanitizers, r=nagisa,eholk\n\nUpdate rustc's information on Android's sanitizers\n\nThis patch updates sanitizer support definitions for Android inside the compiler.  It also adjusts the logic to make sure no pre-built sanitizer runtime libraries are emitted as these are instead provided dynamically on Android targets.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b36a10af7e31333f907b70237336ae4e690c4c1e", "html_url": "https://github.com/rust-lang/rust/commit/b36a10af7e31333f907b70237336ae4e690c4c1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b36a10af7e31333f907b70237336ae4e690c4c1e/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c10f7d73953a02982bbac3a504b0d22a7bda32b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c10f7d73953a02982bbac3a504b0d22a7bda32b1", "html_url": "https://github.com/rust-lang/rust/commit/c10f7d73953a02982bbac3a504b0d22a7bda32b1"}, {"sha": "3d5a41724bd72c228a9e26a44a55337672c7dee3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d5a41724bd72c228a9e26a44a55337672c7dee3", "html_url": "https://github.com/rust-lang/rust/commit/3d5a41724bd72c228a9e26a44a55337672c7dee3"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "bb57fca74a21ecf06172febdaa438322c272bc21", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b36a10af7e31333f907b70237336ae4e690c4c1e/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b36a10af7e31333f907b70237336ae4e690c4c1e/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=b36a10af7e31333f907b70237336ae4e690c4c1e", "patch": "@@ -1090,11 +1090,12 @@ fn add_sanitizer_libraries(sess: &Session, crate_type: CrateType, linker: &mut d\n     // both executables and dynamic shared objects. Everywhere else the runtimes\n     // are currently distributed as static libraries which should be linked to\n     // executables only.\n-    let needs_runtime = match crate_type {\n-        CrateType::Executable => true,\n-        CrateType::Dylib | CrateType::Cdylib | CrateType::ProcMacro => sess.target.is_like_osx,\n-        CrateType::Rlib | CrateType::Staticlib => false,\n-    };\n+    let needs_runtime = !sess.target.is_like_android\n+        && match crate_type {\n+            CrateType::Executable => true,\n+            CrateType::Dylib | CrateType::Cdylib | CrateType::ProcMacro => sess.target.is_like_osx,\n+            CrateType::Rlib | CrateType::Staticlib => false,\n+        };\n \n     if !needs_runtime {\n         return;"}, {"sha": "9c1df1a06778e9fd12eb2f0d900d032ad89c954f", "filename": "compiler/rustc_target/src/spec/android_base.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b36a10af7e31333f907b70237336ae4e690c4c1e/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b36a10af7e31333f907b70237336ae4e690c4c1e/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fandroid_base.rs?ref=b36a10af7e31333f907b70237336ae4e690c4c1e", "patch": "@@ -1,10 +1,12 @@\n-use crate::spec::TargetOptions;\n+use crate::spec::{SanitizerSet, TargetOptions};\n \n pub fn opts() -> TargetOptions {\n     let mut base = super::linux_base::opts();\n     base.os = \"android\".into();\n+    base.is_like_android = true;\n     base.default_dwarf_version = 2;\n     base.has_thread_local = false;\n+    base.supported_sanitizers = SanitizerSet::ADDRESS;\n     // This is for backward compatibility, see https://github.com/rust-lang/rust/issues/49867\n     // for context. (At that time, there was no `-C force-unwind-tables`, so the only solution\n     // was to always emit `uwtable`)."}, {"sha": "f62029c90673b65627aa46565cc7709c0bd94971", "filename": "compiler/rustc_target/src/spec/i686_unknown_linux_gnu.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b36a10af7e31333f907b70237336ae4e690c4c1e/compiler%2Frustc_target%2Fsrc%2Fspec%2Fi686_unknown_linux_gnu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b36a10af7e31333f907b70237336ae4e690c4c1e/compiler%2Frustc_target%2Fsrc%2Fspec%2Fi686_unknown_linux_gnu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fi686_unknown_linux_gnu.rs?ref=b36a10af7e31333f907b70237336ae4e690c4c1e", "patch": "@@ -1,9 +1,10 @@\n-use crate::spec::{LinkerFlavor, StackProbeType, Target};\n+use crate::spec::{LinkerFlavor, SanitizerSet, StackProbeType, Target};\n \n pub fn target() -> Target {\n     let mut base = super::linux_gnu_base::opts();\n     base.cpu = \"pentium4\".into();\n     base.max_atomic_width = Some(64);\n+    base.supported_sanitizers = SanitizerSet::ADDRESS;\n     base.add_pre_link_args(LinkerFlavor::Gcc, &[\"-m32\"]);\n     // don't use probe-stack=inline-asm until rust#83139 and rust#84667 are resolved\n     base.stack_probes = StackProbeType::Call;"}, {"sha": "35b4cce50a02ef54dcf1b4561f17ae4302fc41dd", "filename": "compiler/rustc_target/src/spec/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b36a10af7e31333f907b70237336ae4e690c4c1e/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b36a10af7e31333f907b70237336ae4e690c4c1e/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fmod.rs?ref=b36a10af7e31333f907b70237336ae4e690c4c1e", "patch": "@@ -1381,6 +1381,8 @@ pub struct TargetOptions {\n     pub is_like_msvc: bool,\n     /// Whether a target toolchain is like WASM.\n     pub is_like_wasm: bool,\n+    /// Whether a target toolchain is like Android, implying a Linux kernel and a Bionic libc\n+    pub is_like_android: bool,\n     /// Default supported version of DWARF on this platform.\n     /// Useful because some platforms (osx, bsd) only want up to DWARF2.\n     pub default_dwarf_version: u32,\n@@ -1673,6 +1675,7 @@ impl Default for TargetOptions {\n             is_like_windows: false,\n             is_like_msvc: false,\n             is_like_wasm: false,\n+            is_like_android: false,\n             default_dwarf_version: 4,\n             allows_weak_linkage: true,\n             has_rpath: false,\n@@ -2320,6 +2323,7 @@ impl Target {\n         key!(is_like_windows, bool);\n         key!(is_like_msvc, bool);\n         key!(is_like_wasm, bool);\n+        key!(is_like_android, bool);\n         key!(default_dwarf_version, u32);\n         key!(allows_weak_linkage, bool);\n         key!(has_rpath, bool);\n@@ -2570,6 +2574,7 @@ impl ToJson for Target {\n         target_option_val!(is_like_windows);\n         target_option_val!(is_like_msvc);\n         target_option_val!(is_like_wasm);\n+        target_option_val!(is_like_android);\n         target_option_val!(default_dwarf_version);\n         target_option_val!(allows_weak_linkage);\n         target_option_val!(has_rpath);"}, {"sha": "e5ff0906be8a59005d8191651a72a8d961e06bf2", "filename": "src/tools/compiletest/src/util.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b36a10af7e31333f907b70237336ae4e690c4c1e/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b36a10af7e31333f907b70237336ae4e690c4c1e/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Futil.rs?ref=b36a10af7e31333f907b70237336ae4e690c4c1e", "patch": "@@ -11,9 +11,15 @@ mod tests;\n pub const ASAN_SUPPORTED_TARGETS: &[&str] = &[\n     \"aarch64-apple-darwin\",\n     \"aarch64-fuchsia\",\n+    \"aarch64-linux-android\",\n     \"aarch64-unknown-linux-gnu\",\n+    \"arm-linux-androideabi\",\n+    \"armv7-linux-androideabi\",\n+    \"i686-linux-android\",\n+    \"i686-unknown-linux-gnu\",\n     \"x86_64-apple-darwin\",\n     \"x86_64-fuchsia\",\n+    \"x86_64-linux-android\",\n     \"x86_64-unknown-freebsd\",\n     \"x86_64-unknown-linux-gnu\",\n ];"}]}