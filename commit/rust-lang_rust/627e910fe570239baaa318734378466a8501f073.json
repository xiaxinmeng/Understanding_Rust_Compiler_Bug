{"sha": "627e910fe570239baaa318734378466a8501f073", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYyN2U5MTBmZTU3MDIzOWJhYWEzMTg3MzQzNzg0NjZhODUwMWYwNzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-09T14:28:49Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-03-09T14:28:49Z"}, "message": "Auto merge of #6868 - Jarcho:lang_item, r=flip1995\n\nDon't assume lang items will exist.\n\n~~Should fix lintcheck warnings caused by #6823~~\nSee below\n\nchangelog: None", "tree": {"sha": "0f2e81e9c277c90261b0980485d304da253d0cf3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f2e81e9c277c90261b0980485d304da253d0cf3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/627e910fe570239baaa318734378466a8501f073", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/627e910fe570239baaa318734378466a8501f073", "html_url": "https://github.com/rust-lang/rust/commit/627e910fe570239baaa318734378466a8501f073", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/627e910fe570239baaa318734378466a8501f073/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3ed0bccb703c9a6ebb5ca9d1d727c7bc248b1dd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/3ed0bccb703c9a6ebb5ca9d1d727c7bc248b1dd5", "html_url": "https://github.com/rust-lang/rust/commit/3ed0bccb703c9a6ebb5ca9d1d727c7bc248b1dd5"}, {"sha": "f2d917e3b1e6c91fe005e2dabc7cb5627de6d813", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2d917e3b1e6c91fe005e2dabc7cb5627de6d813", "html_url": "https://github.com/rust-lang/rust/commit/f2d917e3b1e6c91fe005e2dabc7cb5627de6d813"}], "stats": {"total": 28, "additions": 20, "deletions": 8}, "files": [{"sha": "594c370f6608f87df00f79f58bd317ce7751f3f1", "filename": "clippy_lints/src/derive.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/627e910fe570239baaa318734378466a8501f073/clippy_lints%2Fsrc%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/627e910fe570239baaa318734378466a8501f073/clippy_lints%2Fsrc%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderive.rs?ref=627e910fe570239baaa318734378466a8501f073", "patch": "@@ -293,7 +293,12 @@ fn check_ord_partial_ord<'tcx>(\n \n /// Implementation of the `EXPL_IMPL_CLONE_ON_COPY` lint.\n fn check_copy_clone<'tcx>(cx: &LateContext<'tcx>, item: &Item<'_>, trait_ref: &TraitRef<'_>, ty: Ty<'tcx>) {\n-    if cx.tcx.lang_items().clone_trait() == trait_ref.trait_def_id() {\n+    if cx\n+        .tcx\n+        .lang_items()\n+        .clone_trait()\n+        .map_or(false, |id| Some(id) == trait_ref.trait_def_id())\n+    {\n         if !is_copy(cx, ty) {\n             return;\n         }"}, {"sha": "33ff01a30e8813c7e85a0963f5c094d6c47b9d31", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/627e910fe570239baaa318734378466a8501f073/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/627e910fe570239baaa318734378466a8501f073/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=627e910fe570239baaa318734378466a8501f073", "patch": "@@ -358,10 +358,13 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n \n     fn visit_poly_trait_ref(&mut self, poly_tref: &'tcx PolyTraitRef<'tcx>, tbm: TraitBoundModifier) {\n         let trait_ref = &poly_tref.trait_ref;\n-        if CLOSURE_TRAIT_BOUNDS\n-            .iter()\n-            .any(|&item| trait_ref.trait_def_id() == self.cx.tcx.lang_items().require(item).ok())\n-        {\n+        if CLOSURE_TRAIT_BOUNDS.iter().any(|&item| {\n+            self.cx\n+                .tcx\n+                .lang_items()\n+                .require(item)\n+                .map_or(false, |id| Some(id) == trait_ref.trait_def_id())\n+        }) {\n             let mut sub_visitor = RefVisitor::new(self.cx);\n             sub_visitor.visit_trait_ref(trait_ref);\n             self.nested_elision_site_lts.append(&mut sub_visitor.all_lts());"}, {"sha": "4b685c09a0548771101789ac952da24cd873ce25", "filename": "clippy_lints/src/map_clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/627e910fe570239baaa318734378466a8501f073/clippy_lints%2Fsrc%2Fmap_clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/627e910fe570239baaa318734378466a8501f073/clippy_lints%2Fsrc%2Fmap_clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmap_clone.rs?ref=627e910fe570239baaa318734378466a8501f073", "patch": "@@ -81,7 +81,7 @@ impl<'tcx> LateLintPass<'tcx> for MapClone {\n                                 if ident_eq(name, obj) && method.ident.name == sym::clone;\n                                 if let Some(fn_id) = cx.typeck_results().type_dependent_def_id(closure_expr.hir_id);\n                                 if let Some(trait_id) = cx.tcx.trait_of_item(fn_id);\n-                                if Some(trait_id) == cx.tcx.lang_items().clone_trait();\n+                                if cx.tcx.lang_items().clone_trait().map_or(false, |id| id == trait_id);\n                                 // no autoderefs\n                                 if !cx.typeck_results().expr_adjustments(obj).iter()\n                                     .any(|a| matches!(a.kind, Adjust::Deref(Some(..))));"}, {"sha": "37ea652246d91ee11628c9b6294ec6bbe0eae4d8", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/627e910fe570239baaa318734378466a8501f073/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/627e910fe570239baaa318734378466a8501f073/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=627e910fe570239baaa318734378466a8501f073", "patch": "@@ -239,7 +239,10 @@ pub fn is_ty_param_lang_item(cx: &LateContext<'_>, qpath: &QPath<'tcx>, item: La\n     if let TyKind::Path(qpath) = &ty.kind {\n         cx.qpath_res(qpath, ty.hir_id)\n             .opt_def_id()\n-            .and_then(|id| (cx.tcx.lang_items().require(item) == Ok(id)).then(|| ty))\n+            .map_or(false, |id| {\n+                cx.tcx.lang_items().require(item).map_or(false, |lang_id| id == lang_id)\n+            })\n+            .then(|| ty)\n     } else {\n         None\n     }\n@@ -256,7 +259,8 @@ pub fn is_ty_param_diagnostic_item(\n     if let TyKind::Path(qpath) = &ty.kind {\n         cx.qpath_res(qpath, ty.hir_id)\n             .opt_def_id()\n-            .and_then(|id| cx.tcx.is_diagnostic_item(item, id).then(|| ty))\n+            .map_or(false, |id| cx.tcx.is_diagnostic_item(item, id))\n+            .then(|| ty)\n     } else {\n         None\n     }"}]}