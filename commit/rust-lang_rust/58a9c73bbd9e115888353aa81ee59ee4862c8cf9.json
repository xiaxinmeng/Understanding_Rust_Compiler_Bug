{"sha": "58a9c73bbd9e115888353aa81ee59ee4862c8cf9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4YTljNzNiYmQ5ZTExNTg4ODM1M2FhODFlZTU5ZWU0ODYyYzhjZjk=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-26T21:48:41Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-26T21:48:41Z"}, "message": "Make the HIR map own the Definitions.", "tree": {"sha": "3717375fd7d37a894034425d1f2a927eada7c0ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3717375fd7d37a894034425d1f2a927eada7c0ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58a9c73bbd9e115888353aa81ee59ee4862c8cf9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58a9c73bbd9e115888353aa81ee59ee4862c8cf9", "html_url": "https://github.com/rust-lang/rust/commit/58a9c73bbd9e115888353aa81ee59ee4862c8cf9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58a9c73bbd9e115888353aa81ee59ee4862c8cf9/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "144d1c217151bbb6fea6a93a22e9dc9bfabae77f", "url": "https://api.github.com/repos/rust-lang/rust/commits/144d1c217151bbb6fea6a93a22e9dc9bfabae77f", "html_url": "https://github.com/rust-lang/rust/commit/144d1c217151bbb6fea6a93a22e9dc9bfabae77f"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "5bf5a93ad010271833671248ea41dbb6916ef412", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/58a9c73bbd9e115888353aa81ee59ee4862c8cf9/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58a9c73bbd9e115888353aa81ee59ee4862c8cf9/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=58a9c73bbd9e115888353aa81ee59ee4862c8cf9", "patch": "@@ -200,7 +200,7 @@ pub struct Map<'hir> {\n \n     map: HirEntryMap<'hir>,\n \n-    definitions: &'hir Definitions,\n+    definitions: Definitions,\n \n     /// The reverse mapping of `node_to_hir_id`.\n     hir_to_node_id: FxHashMap<HirId, NodeId>,\n@@ -267,8 +267,8 @@ impl<'hir> Map<'hir> {\n     }\n \n     #[inline]\n-    pub fn definitions(&self) -> &'hir Definitions {\n-        self.definitions\n+    pub fn definitions(&self) -> &Definitions {\n+        &self.definitions\n     }\n \n     pub fn def_key(&self, def_id: DefId) -> DefKey {\n@@ -1251,7 +1251,7 @@ impl Named for ImplItem { fn name(&self) -> Name { self.ident.name } }\n pub fn map_crate<'hir>(sess: &crate::session::Session,\n                        cstore: &CrateStoreDyn,\n                        forest: &'hir Forest,\n-                       definitions: &'hir Definitions)\n+                       definitions: Definitions)\n                        -> Map<'hir> {\n     let _prof_timer = sess.prof.generic_activity(\"build_hir_map\");\n \n@@ -1260,7 +1260,7 @@ pub fn map_crate<'hir>(sess: &crate::session::Session,\n         .map(|(node_id, &hir_id)| (hir_id, node_id)).collect();\n \n     let (map, crate_hash) = {\n-        let hcx = crate::ich::StableHashingContext::new(sess, &forest.krate, definitions, cstore);\n+        let hcx = crate::ich::StableHashingContext::new(sess, &forest.krate, &definitions, cstore);\n \n         let mut collector = NodeCollector::root(sess,\n                                                 &forest.krate,"}, {"sha": "63ea24d89ff855d3c80fd0f559e3906881a8e51b", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58a9c73bbd9e115888353aa81ee59ee4862c8cf9/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58a9c73bbd9e115888353aa81ee59ee4862c8cf9/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=58a9c73bbd9e115888353aa81ee59ee4862c8cf9", "patch": "@@ -777,7 +777,7 @@ pub fn create_global_ctxt(\n \n         // Construct the HIR map.\n         let hir_map = time(sess, \"indexing HIR\", || {\n-            hir::map::map_crate(sess, &*resolver_outputs.cstore, &mut hir_forest, &defs)\n+            hir::map::map_crate(sess, &*resolver_outputs.cstore, &mut hir_forest, defs)\n         });\n \n         let query_result_on_disk_cache = time(sess, \"load query result cache\", || {"}]}