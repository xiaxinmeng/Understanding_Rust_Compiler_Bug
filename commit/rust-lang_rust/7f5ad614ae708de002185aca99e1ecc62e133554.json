{"sha": "7f5ad614ae708de002185aca99e1ecc62e133554", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmNWFkNjE0YWU3MDhkZTAwMjE4NWFjYTk5ZTFlY2M2MmUxMzM1NTQ=", "commit": {"author": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-05-12T11:35:12Z"}, "committer": {"name": "Giacomo Stevanato", "email": "giaco.stevanato@gmail.com", "date": "2021-05-12T11:57:30Z"}, "message": "Bless tests", "tree": {"sha": "5d5761635091160ea6b8657934fda3764d6f0b9c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d5761635091160ea6b8657934fda3764d6f0b9c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f5ad614ae708de002185aca99e1ecc62e133554", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f5ad614ae708de002185aca99e1ecc62e133554", "html_url": "https://github.com/rust-lang/rust/commit/7f5ad614ae708de002185aca99e1ecc62e133554", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f5ad614ae708de002185aca99e1ecc62e133554/comments", "author": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SkiFire13", "id": 9020423, "node_id": "MDQ6VXNlcjkwMjA0MjM=", "avatar_url": "https://avatars.githubusercontent.com/u/9020423?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SkiFire13", "html_url": "https://github.com/SkiFire13", "followers_url": "https://api.github.com/users/SkiFire13/followers", "following_url": "https://api.github.com/users/SkiFire13/following{/other_user}", "gists_url": "https://api.github.com/users/SkiFire13/gists{/gist_id}", "starred_url": "https://api.github.com/users/SkiFire13/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SkiFire13/subscriptions", "organizations_url": "https://api.github.com/users/SkiFire13/orgs", "repos_url": "https://api.github.com/users/SkiFire13/repos", "events_url": "https://api.github.com/users/SkiFire13/events{/privacy}", "received_events_url": "https://api.github.com/users/SkiFire13/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "566012ebf2a0a3af5edd2fe5faaec54c8d197c59", "url": "https://api.github.com/repos/rust-lang/rust/commits/566012ebf2a0a3af5edd2fe5faaec54c8d197c59", "html_url": "https://github.com/rust-lang/rust/commit/566012ebf2a0a3af5edd2fe5faaec54c8d197c59"}], "stats": {"total": 645, "additions": 604, "deletions": 41}, "files": [{"sha": "400600a086c0c0031f9a81ff6454b5dbb1da31ff", "filename": "src/test/ui/generic-associated-types/gat-trait-path-parenthesised-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f5ad614ae708de002185aca99e1ecc62e133554/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgat-trait-path-parenthesised-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f5ad614ae708de002185aca99e1ecc62e133554/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgat-trait-path-parenthesised-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fgat-trait-path-parenthesised-args.stderr?ref=7f5ad614ae708de002185aca99e1ecc62e133554", "patch": "@@ -49,7 +49,7 @@ error[E0107]: this associated type takes 0 generic arguments but 1 generic argum\n   --> $DIR/gat-trait-path-parenthesised-args.rs:8:27\n    |\n LL | fn foo<'a>(arg: Box<dyn X<Y('a) = &'a ()>>) {}\n-   |                           ^-------------- help: remove these generics\n+   |                           ^---- help: remove these generics\n    |                           |\n    |                           expected 0 generic arguments\n    |"}, {"sha": "17a924cedad2ce5f878cbcdddbcf0507163106cd", "filename": "src/test/ui/generics/wrong-number-of-args.stderr", "status": "modified", "additions": 595, "deletions": 32, "changes": 627, "blob_url": "https://github.com/rust-lang/rust/blob/7f5ad614ae708de002185aca99e1ecc62e133554/src%2Ftest%2Fui%2Fgenerics%2Fwrong-number-of-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f5ad614ae708de002185aca99e1ecc62e133554/src%2Ftest%2Fui%2Fgenerics%2Fwrong-number-of-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgenerics%2Fwrong-number-of-args.stderr?ref=7f5ad614ae708de002185aca99e1ecc62e133554", "patch": "@@ -116,14 +116,30 @@ note: struct defined here, with 2 generic parameters: `A`, `B`\n LL |     struct Ty<A, B>;\n    |            ^^ -  -\n \n+error[E0107]: this struct takes 2 generic arguments but 0 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:40:14\n+   |\n+LL |     type E = Ty<>;\n+   |              ^^ expected 2 generic arguments\n+   |\n+note: struct defined here, with 2 generic parameters: `A`, `B`\n+  --> $DIR/wrong-number-of-args.rs:24:12\n+   |\n+LL |     struct Ty<A, B>;\n+   |            ^^ -  -\n+help: add missing generic arguments\n+   |\n+LL |     type E = Ty<A, B>;\n+   |                 ^^^^\n+\n error[E0107]: missing generics for struct `lifetime_and_type::Ty`\n-  --> $DIR/wrong-number-of-args.rs:44:14\n+  --> $DIR/wrong-number-of-args.rs:48:14\n    |\n LL |     type A = Ty;\n    |              ^^ expected 1 generic argument\n    |\n note: struct defined here, with 1 generic parameter: `T`\n-  --> $DIR/wrong-number-of-args.rs:42:12\n+  --> $DIR/wrong-number-of-args.rs:46:12\n    |\n LL |     struct Ty<'a, T>;\n    |            ^^     -\n@@ -133,7 +149,7 @@ LL |     type A = Ty<T>;\n    |              ^^^^^\n \n error[E0106]: missing lifetime specifier\n-  --> $DIR/wrong-number-of-args.rs:44:14\n+  --> $DIR/wrong-number-of-args.rs:48:14\n    |\n LL |     type A = Ty;\n    |              ^^ expected named lifetime parameter\n@@ -144,13 +160,13 @@ LL |     type A<'a> = Ty<'a>;\n    |           ^^^^   ^^^^^^\n \n error[E0107]: this struct takes 1 generic argument but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:50:14\n+  --> $DIR/wrong-number-of-args.rs:54:14\n    |\n LL |     type B = Ty<'static>;\n    |              ^^ expected 1 generic argument\n    |\n note: struct defined here, with 1 generic parameter: `T`\n-  --> $DIR/wrong-number-of-args.rs:42:12\n+  --> $DIR/wrong-number-of-args.rs:46:12\n    |\n LL |     struct Ty<'a, T>;\n    |            ^^     -\n@@ -160,7 +176,7 @@ LL |     type B = Ty<'static, T>;\n    |                        ^^^\n \n error[E0106]: missing lifetime specifier\n-  --> $DIR/wrong-number-of-args.rs:54:17\n+  --> $DIR/wrong-number-of-args.rs:58:17\n    |\n LL |     type C = Ty<usize>;\n    |                 ^ expected named lifetime parameter\n@@ -170,14 +186,41 @@ help: consider introducing a named lifetime parameter\n LL |     type C<'a> = Ty<'a, usize>;\n    |           ^^^^      ^^^\n \n-error[E0107]: missing generics for struct `type_and_type_and_type::Ty`\n+error[E0107]: this struct takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/wrong-number-of-args.rs:64:14\n    |\n+LL |     type E = Ty<>;\n+   |              ^^ expected 1 generic argument\n+   |\n+note: struct defined here, with 1 generic parameter: `T`\n+  --> $DIR/wrong-number-of-args.rs:46:12\n+   |\n+LL |     struct Ty<'a, T>;\n+   |            ^^     -\n+help: add missing generic argument\n+   |\n+LL |     type E = Ty<T>;\n+   |                 ^\n+\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/wrong-number-of-args.rs:64:16\n+   |\n+LL |     type E = Ty<>;\n+   |                ^- expected named lifetime parameter\n+   |\n+help: consider introducing a named lifetime parameter\n+   |\n+LL |     type E<'a> = Ty<'a>;\n+   |           ^^^^      ^^\n+\n+error[E0107]: missing generics for struct `type_and_type_and_type::Ty`\n+  --> $DIR/wrong-number-of-args.rs:74:14\n+   |\n LL |     type A = Ty;\n    |              ^^ expected at least 2 generic arguments\n    |\n note: struct defined here, with at least 2 generic parameters: `A`, `B`\n-  --> $DIR/wrong-number-of-args.rs:62:12\n+  --> $DIR/wrong-number-of-args.rs:72:12\n    |\n LL |     struct Ty<A, B, C = &'static str>;\n    |            ^^ -  -\n@@ -187,15 +230,15 @@ LL |     type A = Ty<A, B>;\n    |              ^^^^^^^^\n \n error[E0107]: this struct takes at least 2 generic arguments but 1 generic argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:68:14\n+  --> $DIR/wrong-number-of-args.rs:78:14\n    |\n LL |     type B = Ty<usize>;\n    |              ^^ ----- supplied 1 generic argument\n    |              |\n    |              expected at least 2 generic arguments\n    |\n note: struct defined here, with at least 2 generic parameters: `A`, `B`\n-  --> $DIR/wrong-number-of-args.rs:62:12\n+  --> $DIR/wrong-number-of-args.rs:72:12\n    |\n LL |     struct Ty<A, B, C = &'static str>;\n    |            ^^ -  -\n@@ -205,35 +248,51 @@ LL |     type B = Ty<usize, B>;\n    |                      ^^^\n \n error[E0107]: this struct takes at most 3 generic arguments but 4 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:76:14\n+  --> $DIR/wrong-number-of-args.rs:86:14\n    |\n LL |     type E = Ty<usize, String, char, f64>;\n    |              ^^                      --- help: remove this generic argument\n    |              |\n    |              expected at most 3 generic arguments\n    |\n note: struct defined here, with at most 3 generic parameters: `A`, `B`, `C`\n-  --> $DIR/wrong-number-of-args.rs:62:12\n+  --> $DIR/wrong-number-of-args.rs:72:12\n    |\n LL |     struct Ty<A, B, C = &'static str>;\n    |            ^^ -  -  -\n \n+error[E0107]: this struct takes at least 2 generic arguments but 0 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:90:14\n+   |\n+LL |     type F = Ty<>;\n+   |              ^^ expected at least 2 generic arguments\n+   |\n+note: struct defined here, with at least 2 generic parameters: `A`, `B`\n+  --> $DIR/wrong-number-of-args.rs:72:12\n+   |\n+LL |     struct Ty<A, B, C = &'static str>;\n+   |            ^^ -  -\n+help: add missing generic arguments\n+   |\n+LL |     type F = Ty<A, B>;\n+   |                 ^^^^\n+\n error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:96:22\n+  --> $DIR/wrong-number-of-args.rs:110:22\n    |\n LL |     type A = Box<dyn NonGeneric<usize>>;\n    |                      ^^^^^^^^^^------- help: remove these generics\n    |                      |\n    |                      expected 0 generic arguments\n    |\n note: trait defined here, with 0 generic parameters\n-  --> $DIR/wrong-number-of-args.rs:84:11\n+  --> $DIR/wrong-number-of-args.rs:98:11\n    |\n LL |     trait NonGeneric {\n    |           ^^^^^^^^^^\n \n error[E0106]: missing lifetime specifier\n-  --> $DIR/wrong-number-of-args.rs:100:22\n+  --> $DIR/wrong-number-of-args.rs:114:22\n    |\n LL |     type B = Box<dyn GenericLifetime>;\n    |                      ^^^^^^^^^^^^^^^ expected named lifetime parameter\n@@ -244,27 +303,27 @@ LL |     type B<'a> = Box<dyn GenericLifetime<'a>>;\n    |           ^^^^           ^^^^^^^^^^^^^^^^^^^\n \n error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:104:22\n+  --> $DIR/wrong-number-of-args.rs:118:22\n    |\n LL |     type C = Box<dyn GenericLifetime<'static, 'static>>;\n    |                      ^^^^^^^^^^^^^^^          ------- help: remove this lifetime argument\n    |                      |\n    |                      expected 1 lifetime argument\n    |\n note: trait defined here, with 1 lifetime parameter: `'a`\n-  --> $DIR/wrong-number-of-args.rs:88:11\n+  --> $DIR/wrong-number-of-args.rs:102:11\n    |\n LL |     trait GenericLifetime<'a> {\n    |           ^^^^^^^^^^^^^^^ --\n \n error[E0107]: missing generics for trait `GenericType`\n-  --> $DIR/wrong-number-of-args.rs:108:22\n+  --> $DIR/wrong-number-of-args.rs:122:22\n    |\n LL |     type D = Box<dyn GenericType>;\n    |                      ^^^^^^^^^^^ expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:92:11\n+  --> $DIR/wrong-number-of-args.rs:106:11\n    |\n LL |     trait GenericType<A> {\n    |           ^^^^^^^^^^^ -\n@@ -274,21 +333,493 @@ LL |     type D = Box<dyn GenericType<A>>;\n    |                      ^^^^^^^^^^^^^^\n \n error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:112:22\n+  --> $DIR/wrong-number-of-args.rs:126:22\n    |\n LL |     type E = Box<dyn GenericType<String, usize>>;\n    |                      ^^^^^^^^^^^         ----- help: remove this generic argument\n    |                      |\n    |                      expected 1 generic argument\n    |\n note: trait defined here, with 1 generic parameter: `A`\n-  --> $DIR/wrong-number-of-args.rs:92:11\n+  --> $DIR/wrong-number-of-args.rs:106:11\n    |\n LL |     trait GenericType<A> {\n    |           ^^^^^^^^^^^ -\n \n+error[E0106]: missing lifetime specifier\n+  --> $DIR/wrong-number-of-args.rs:130:37\n+   |\n+LL |     type F = Box<dyn GenericLifetime<>>;\n+   |                                     ^- expected named lifetime parameter\n+   |\n+help: consider introducing a named lifetime parameter\n+   |\n+LL |     type F<'a> = Box<dyn GenericLifetime<'a>>;\n+   |           ^^^^                           ^^\n+\n+error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:134:22\n+   |\n+LL |     type G = Box<dyn GenericType<>>;\n+   |                      ^^^^^^^^^^^ expected 1 generic argument\n+   |\n+note: trait defined here, with 1 generic parameter: `A`\n+  --> $DIR/wrong-number-of-args.rs:106:11\n+   |\n+LL |     trait GenericType<A> {\n+   |           ^^^^^^^^^^^ -\n+help: add missing generic argument\n+   |\n+LL |     type G = Box<dyn GenericType<A>>;\n+   |                                  ^\n+\n+error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+  --> $DIR/wrong-number-of-args.rs:145:26\n+   |\n+LL |         type A = Box<dyn NonGenericAT<usize, AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^------------------- help: remove these generics\n+   |                          |\n+   |                          expected 0 generic arguments\n+   |\n+note: trait defined here, with 0 generic parameters\n+  --> $DIR/wrong-number-of-args.rs:141:15\n+   |\n+LL |         trait NonGenericAT {\n+   |               ^^^^^^^^^^^^\n+\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/wrong-number-of-args.rs:155:44\n+   |\n+LL |         type A = Box<dyn GenericLifetimeAT<AssocTy=()>>;\n+   |                                            ^ expected named lifetime parameter\n+   |\n+help: consider introducing a named lifetime parameter\n+   |\n+LL |         type A<'a> = Box<dyn GenericLifetimeAT<'a, AssocTy=()>>;\n+   |               ^^^^                             ^^^\n+\n+error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:159:26\n+   |\n+LL |         type B = Box<dyn GenericLifetimeAT<'static, 'static, AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^          ------- help: remove this lifetime argument\n+   |                          |\n+   |                          expected 1 lifetime argument\n+   |\n+note: trait defined here, with 1 lifetime parameter: `'a`\n+  --> $DIR/wrong-number-of-args.rs:151:15\n+   |\n+LL |         trait GenericLifetimeAT<'a> {\n+   |               ^^^^^^^^^^^^^^^^^ --\n+\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/wrong-number-of-args.rs:163:44\n+   |\n+LL |         type C = Box<dyn GenericLifetimeAT<(), AssocTy=()>>;\n+   |                                            ^ expected named lifetime parameter\n+   |\n+help: consider introducing a named lifetime parameter\n+   |\n+LL |         type C<'a> = Box<dyn GenericLifetimeAT<'a, (), AssocTy=()>>;\n+   |               ^^^^                             ^^^\n+\n+error[E0107]: this trait takes 0 generic arguments but 1 generic argument was supplied\n+  --> $DIR/wrong-number-of-args.rs:163:26\n+   |\n+LL |         type C = Box<dyn GenericLifetimeAT<(), AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^ -- help: remove this generic argument\n+   |                          |\n+   |                          expected 0 generic arguments\n+   |\n+note: trait defined here, with 0 generic parameters\n+  --> $DIR/wrong-number-of-args.rs:151:15\n+   |\n+LL |         trait GenericLifetimeAT<'a> {\n+   |               ^^^^^^^^^^^^^^^^^\n+\n+error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:175:26\n+   |\n+LL |         type A = Box<dyn GenericTypeAT<AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^ expected 1 generic argument\n+   |\n+note: trait defined here, with 1 generic parameter: `A`\n+  --> $DIR/wrong-number-of-args.rs:171:15\n+   |\n+LL |         trait GenericTypeAT<A> {\n+   |               ^^^^^^^^^^^^^ -\n+help: add missing generic argument\n+   |\n+LL |         type A = Box<dyn GenericTypeAT<A, AssocTy=()>>;\n+   |                                        ^^\n+\n+error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:179:26\n+   |\n+LL |         type B = Box<dyn GenericTypeAT<(), (), AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^     -- help: remove this generic argument\n+   |                          |\n+   |                          expected 1 generic argument\n+   |\n+note: trait defined here, with 1 generic parameter: `A`\n+  --> $DIR/wrong-number-of-args.rs:171:15\n+   |\n+LL |         trait GenericTypeAT<A> {\n+   |               ^^^^^^^^^^^^^ -\n+\n+error[E0107]: this trait takes 0 lifetime arguments but 1 lifetime argument was supplied\n+  --> $DIR/wrong-number-of-args.rs:183:26\n+   |\n+LL |         type C = Box<dyn GenericTypeAT<'static, AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^--------------------- help: remove these generics\n+   |                          |\n+   |                          expected 0 lifetime arguments\n+   |\n+note: trait defined here, with 0 lifetime parameters\n+  --> $DIR/wrong-number-of-args.rs:171:15\n+   |\n+LL |         trait GenericTypeAT<A> {\n+   |               ^^^^^^^^^^^^^\n+\n+error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:183:26\n+   |\n+LL |         type C = Box<dyn GenericTypeAT<'static, AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^ expected 1 generic argument\n+   |\n+note: trait defined here, with 1 generic parameter: `A`\n+  --> $DIR/wrong-number-of-args.rs:171:15\n+   |\n+LL |         trait GenericTypeAT<A> {\n+   |               ^^^^^^^^^^^^^ -\n+help: add missing generic argument\n+   |\n+LL |         type C = Box<dyn GenericTypeAT<'static, A, AssocTy=()>>;\n+   |                                               ^^^\n+\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/wrong-number-of-args.rs:195:48\n+   |\n+LL |         type A = Box<dyn GenericLifetimeTypeAT<AssocTy=()>>;\n+   |                                                ^ expected named lifetime parameter\n+   |\n+help: consider introducing a named lifetime parameter\n+   |\n+LL |         type A<'a> = Box<dyn GenericLifetimeTypeAT<'a, AssocTy=()>>;\n+   |               ^^^^                                 ^^^\n+\n+error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:195:26\n+   |\n+LL |         type A = Box<dyn GenericLifetimeTypeAT<AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^^^^^ expected 1 generic argument\n+   |\n+note: trait defined here, with 1 generic parameter: `A`\n+  --> $DIR/wrong-number-of-args.rs:191:15\n+   |\n+LL |         trait GenericLifetimeTypeAT<'a, A> {\n+   |               ^^^^^^^^^^^^^^^^^^^^^     -\n+help: add missing generic argument\n+   |\n+LL |         type A = Box<dyn GenericLifetimeTypeAT<A, AssocTy=()>>;\n+   |                                                ^^\n+\n+error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:201:26\n+   |\n+LL |         type B = Box<dyn GenericLifetimeTypeAT<'static, AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^^^^^ expected 1 generic argument\n+   |\n+note: trait defined here, with 1 generic parameter: `A`\n+  --> $DIR/wrong-number-of-args.rs:191:15\n+   |\n+LL |         trait GenericLifetimeTypeAT<'a, A> {\n+   |               ^^^^^^^^^^^^^^^^^^^^^     -\n+help: add missing generic argument\n+   |\n+LL |         type B = Box<dyn GenericLifetimeTypeAT<'static, A, AssocTy=()>>;\n+   |                                                       ^^^\n+\n+error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:205:26\n+   |\n+LL |         type C = Box<dyn GenericLifetimeTypeAT<'static, 'static, AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^^^^^          ------- help: remove this lifetime argument\n+   |                          |\n+   |                          expected 1 lifetime argument\n+   |\n+note: trait defined here, with 1 lifetime parameter: `'a`\n+  --> $DIR/wrong-number-of-args.rs:191:15\n+   |\n+LL |         trait GenericLifetimeTypeAT<'a, A> {\n+   |               ^^^^^^^^^^^^^^^^^^^^^ --\n+\n+error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:205:26\n+   |\n+LL |         type C = Box<dyn GenericLifetimeTypeAT<'static, 'static, AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^^^^^ expected 1 generic argument\n+   |\n+note: trait defined here, with 1 generic parameter: `A`\n+  --> $DIR/wrong-number-of-args.rs:191:15\n+   |\n+LL |         trait GenericLifetimeTypeAT<'a, A> {\n+   |               ^^^^^^^^^^^^^^^^^^^^^     -\n+help: add missing generic argument\n+   |\n+LL |         type C = Box<dyn GenericLifetimeTypeAT<'static, 'static, A, AssocTy=()>>;\n+   |                                                                ^^^\n+\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/wrong-number-of-args.rs:211:48\n+   |\n+LL |         type D = Box<dyn GenericLifetimeTypeAT<(), AssocTy=()>>;\n+   |                                                ^ expected named lifetime parameter\n+   |\n+help: consider introducing a named lifetime parameter\n+   |\n+LL |         type D<'a> = Box<dyn GenericLifetimeTypeAT<'a, (), AssocTy=()>>;\n+   |               ^^^^                                 ^^^\n+\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/wrong-number-of-args.rs:215:48\n+   |\n+LL |         type E = Box<dyn GenericLifetimeTypeAT<(), (), AssocTy=()>>;\n+   |                                                ^ expected named lifetime parameter\n+   |\n+help: consider introducing a named lifetime parameter\n+   |\n+LL |         type E<'a> = Box<dyn GenericLifetimeTypeAT<'a, (), (), AssocTy=()>>;\n+   |               ^^^^                                 ^^^\n+\n+error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:215:26\n+   |\n+LL |         type E = Box<dyn GenericLifetimeTypeAT<(), (), AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^^^^^     -- help: remove this generic argument\n+   |                          |\n+   |                          expected 1 generic argument\n+   |\n+note: trait defined here, with 1 generic parameter: `A`\n+  --> $DIR/wrong-number-of-args.rs:191:15\n+   |\n+LL |         trait GenericLifetimeTypeAT<'a, A> {\n+   |               ^^^^^^^^^^^^^^^^^^^^^     -\n+\n+error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:221:26\n+   |\n+LL |         type F = Box<dyn GenericLifetimeTypeAT<'static, 'static, (), AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^^^^^          ------- help: remove this lifetime argument\n+   |                          |\n+   |                          expected 1 lifetime argument\n+   |\n+note: trait defined here, with 1 lifetime parameter: `'a`\n+  --> $DIR/wrong-number-of-args.rs:191:15\n+   |\n+LL |         trait GenericLifetimeTypeAT<'a, A> {\n+   |               ^^^^^^^^^^^^^^^^^^^^^ --\n+\n+error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:225:26\n+   |\n+LL |         type G = Box<dyn GenericLifetimeTypeAT<'static, (), (), AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^^^^^              -- help: remove this generic argument\n+   |                          |\n+   |                          expected 1 generic argument\n+   |\n+note: trait defined here, with 1 generic parameter: `A`\n+  --> $DIR/wrong-number-of-args.rs:191:15\n+   |\n+LL |         trait GenericLifetimeTypeAT<'a, A> {\n+   |               ^^^^^^^^^^^^^^^^^^^^^     -\n+\n+error[E0107]: this trait takes 1 lifetime argument but 2 lifetime arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:229:26\n+   |\n+LL |         type H = Box<dyn GenericLifetimeTypeAT<'static, 'static, (), (), AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^^^^^          ------- help: remove this lifetime argument\n+   |                          |\n+   |                          expected 1 lifetime argument\n+   |\n+note: trait defined here, with 1 lifetime parameter: `'a`\n+  --> $DIR/wrong-number-of-args.rs:191:15\n+   |\n+LL |         trait GenericLifetimeTypeAT<'a, A> {\n+   |               ^^^^^^^^^^^^^^^^^^^^^ --\n+\n+error[E0107]: this trait takes 1 generic argument but 2 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:229:26\n+   |\n+LL |         type H = Box<dyn GenericLifetimeTypeAT<'static, 'static, (), (), AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^^^^^                       -- help: remove this generic argument\n+   |                          |\n+   |                          expected 1 generic argument\n+   |\n+note: trait defined here, with 1 generic parameter: `A`\n+  --> $DIR/wrong-number-of-args.rs:191:15\n+   |\n+LL |         trait GenericLifetimeTypeAT<'a, A> {\n+   |               ^^^^^^^^^^^^^^^^^^^^^     -\n+\n+error[E0107]: this trait takes 2 generic arguments but 0 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:241:26\n+   |\n+LL |         type A = Box<dyn GenericTypeTypeAT<AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^ expected 2 generic arguments\n+   |\n+note: trait defined here, with 2 generic parameters: `A`, `B`\n+  --> $DIR/wrong-number-of-args.rs:237:15\n+   |\n+LL |         trait GenericTypeTypeAT<A, B> {\n+   |               ^^^^^^^^^^^^^^^^^ -  -\n+help: add missing generic arguments\n+   |\n+LL |         type A = Box<dyn GenericTypeTypeAT<A, B, AssocTy=()>>;\n+   |                                            ^^^^^\n+\n+error[E0107]: this trait takes 2 generic arguments but 1 generic argument was supplied\n+  --> $DIR/wrong-number-of-args.rs:245:26\n+   |\n+LL |         type B = Box<dyn GenericTypeTypeAT<(), AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^ -- supplied 1 generic argument\n+   |                          |\n+   |                          expected 2 generic arguments\n+   |\n+note: trait defined here, with 2 generic parameters: `A`, `B`\n+  --> $DIR/wrong-number-of-args.rs:237:15\n+   |\n+LL |         trait GenericTypeTypeAT<A, B> {\n+   |               ^^^^^^^^^^^^^^^^^ -  -\n+help: add missing generic argument\n+   |\n+LL |         type B = Box<dyn GenericTypeTypeAT<(), B, AssocTy=()>>;\n+   |                                              ^^^\n+\n+error[E0107]: this trait takes 2 generic arguments but 3 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:249:26\n+   |\n+LL |         type C = Box<dyn GenericTypeTypeAT<(), (), (), AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^         -- help: remove this generic argument\n+   |                          |\n+   |                          expected 2 generic arguments\n+   |\n+note: trait defined here, with 2 generic parameters: `A`, `B`\n+  --> $DIR/wrong-number-of-args.rs:237:15\n+   |\n+LL |         trait GenericTypeTypeAT<A, B> {\n+   |               ^^^^^^^^^^^^^^^^^ -  -\n+\n+error[E0106]: missing lifetime specifiers\n+  --> $DIR/wrong-number-of-args.rs:259:52\n+   |\n+LL |         type A = Box<dyn GenericLifetimeLifetimeAT<AssocTy=()>>;\n+   |                                                    ^ expected 2 lifetime parameters\n+   |\n+help: consider introducing a named lifetime parameter\n+   |\n+LL |         type A<'a> = Box<dyn GenericLifetimeLifetimeAT<'a, 'a, AssocTy=()>>;\n+   |               ^^^^                                     ^^^^^^^\n+\n+error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+  --> $DIR/wrong-number-of-args.rs:263:26\n+   |\n+LL |         type B = Box<dyn GenericLifetimeLifetimeAT<'static, AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^ ------- supplied 1 lifetime argument\n+   |                          |\n+   |                          expected 2 lifetime arguments\n+   |\n+note: trait defined here, with 2 lifetime parameters: `'a`, `'b`\n+  --> $DIR/wrong-number-of-args.rs:255:15\n+   |\n+LL |         trait GenericLifetimeLifetimeAT<'a, 'b> {\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^ --  --\n+help: add missing lifetime argument\n+   |\n+LL |         type B = Box<dyn GenericLifetimeLifetimeAT<'static, 'b, AssocTy=()>>;\n+   |                                                           ^^^^\n+\n+error[E0106]: missing lifetime specifiers\n+  --> $DIR/wrong-number-of-args.rs:273:56\n+   |\n+LL |         type A = Box<dyn GenericLifetimeLifetimeTypeAT<AssocTy=()>>;\n+   |                                                        ^ expected 2 lifetime parameters\n+   |\n+help: consider introducing a named lifetime parameter\n+   |\n+LL |         type A<'a> = Box<dyn GenericLifetimeLifetimeTypeAT<'a, 'a, AssocTy=()>>;\n+   |               ^^^^                                         ^^^^^^^\n+\n+error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:273:26\n+   |\n+LL |         type A = Box<dyn GenericLifetimeLifetimeTypeAT<AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 generic argument\n+   |\n+note: trait defined here, with 1 generic parameter: `A`\n+  --> $DIR/wrong-number-of-args.rs:269:15\n+   |\n+LL |         trait GenericLifetimeLifetimeTypeAT<'a, 'b, A> {\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^         -\n+help: add missing generic argument\n+   |\n+LL |         type A = Box<dyn GenericLifetimeLifetimeTypeAT<A, AssocTy=()>>;\n+   |                                                        ^^\n+\n+error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+  --> $DIR/wrong-number-of-args.rs:279:26\n+   |\n+LL |         type B = Box<dyn GenericLifetimeLifetimeTypeAT<'static, AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ------- supplied 1 lifetime argument\n+   |                          |\n+   |                          expected 2 lifetime arguments\n+   |\n+note: trait defined here, with 2 lifetime parameters: `'a`, `'b`\n+  --> $DIR/wrong-number-of-args.rs:269:15\n+   |\n+LL |         trait GenericLifetimeLifetimeTypeAT<'a, 'b, A> {\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --  --\n+help: add missing lifetime argument\n+   |\n+LL |         type B = Box<dyn GenericLifetimeLifetimeTypeAT<'static, 'b, AssocTy=()>>;\n+   |                                                               ^^^^\n+\n+error[E0107]: this trait takes 1 generic argument but 0 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:279:26\n+   |\n+LL |         type B = Box<dyn GenericLifetimeLifetimeTypeAT<'static, AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 1 generic argument\n+   |\n+note: trait defined here, with 1 generic parameter: `A`\n+  --> $DIR/wrong-number-of-args.rs:269:15\n+   |\n+LL |         trait GenericLifetimeLifetimeTypeAT<'a, 'b, A> {\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^         -\n+help: add missing generic argument\n+   |\n+LL |         type B = Box<dyn GenericLifetimeLifetimeTypeAT<'static, A, AssocTy=()>>;\n+   |                                                               ^^^\n+\n+error[E0107]: this trait takes 2 lifetime arguments but 1 lifetime argument was supplied\n+  --> $DIR/wrong-number-of-args.rs:285:26\n+   |\n+LL |         type C = Box<dyn GenericLifetimeLifetimeTypeAT<'static, (), AssocTy=()>>;\n+   |                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ ------- supplied 1 lifetime argument\n+   |                          |\n+   |                          expected 2 lifetime arguments\n+   |\n+note: trait defined here, with 2 lifetime parameters: `'a`, `'b`\n+  --> $DIR/wrong-number-of-args.rs:269:15\n+   |\n+LL |         trait GenericLifetimeLifetimeTypeAT<'a, 'b, A> {\n+   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ --  --\n+help: add missing lifetime argument\n+   |\n+LL |         type C = Box<dyn GenericLifetimeLifetimeTypeAT<'static, 'b, (), AssocTy=()>>;\n+   |                                                               ^^^^\n+\n error[E0107]: missing generics for struct `HashMap`\n-  --> $DIR/wrong-number-of-args.rs:121:18\n+  --> $DIR/wrong-number-of-args.rs:295:18\n    |\n LL |         type A = HashMap;\n    |                  ^^^^^^^ expected at least 2 generic arguments\n@@ -304,7 +835,7 @@ LL |         type A = HashMap<K, V>;\n    |                  ^^^^^^^^^^^^^\n \n error[E0107]: this struct takes at least 2 generic arguments but 1 generic argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:125:18\n+  --> $DIR/wrong-number-of-args.rs:299:18\n    |\n LL |         type B = HashMap<String>;\n    |                  ^^^^^^^ ------ supplied 1 generic argument\n@@ -322,7 +853,7 @@ LL |         type B = HashMap<String, V>;\n    |                                ^^^\n \n error[E0107]: this struct takes 0 lifetime arguments but 1 lifetime argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:129:18\n+  --> $DIR/wrong-number-of-args.rs:303:18\n    |\n LL |         type C = HashMap<'static>;\n    |                  ^^^^^^^--------- help: remove these generics\n@@ -336,7 +867,7 @@ LL | pub struct HashMap<K, V, S = RandomState> {\n    |            ^^^^^^^\n \n error[E0107]: this struct takes at least 2 generic arguments but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:129:18\n+  --> $DIR/wrong-number-of-args.rs:303:18\n    |\n LL |         type C = HashMap<'static>;\n    |                  ^^^^^^^ expected at least 2 generic arguments\n@@ -352,7 +883,7 @@ LL |         type C = HashMap<'static, K, V>;\n    |                                 ^^^^^^\n \n error[E0107]: this struct takes at most 3 generic arguments but 4 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:135:18\n+  --> $DIR/wrong-number-of-args.rs:309:18\n    |\n LL |         type D = HashMap<usize, String, char, f64>;\n    |                  ^^^^^^^                      --- help: remove this generic argument\n@@ -365,8 +896,24 @@ note: struct defined here, with at most 3 generic parameters: `K`, `V`, `S`\n LL | pub struct HashMap<K, V, S = RandomState> {\n    |            ^^^^^^^ -  -  -\n \n+error[E0107]: this struct takes at least 2 generic arguments but 0 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:313:18\n+   |\n+LL |         type E = HashMap<>;\n+   |                  ^^^^^^^ expected at least 2 generic arguments\n+   |\n+note: struct defined here, with at least 2 generic parameters: `K`, `V`\n+  --> $SRC_DIR/std/src/collections/hash/map.rs:LL:COL\n+   |\n+LL | pub struct HashMap<K, V, S = RandomState> {\n+   |            ^^^^^^^ -  -\n+help: add missing generic arguments\n+   |\n+LL |         type E = HashMap<K, V>;\n+   |                          ^^^^\n+\n error[E0107]: missing generics for enum `Result`\n-  --> $DIR/wrong-number-of-args.rs:141:18\n+  --> $DIR/wrong-number-of-args.rs:319:18\n    |\n LL |         type A = Result;\n    |                  ^^^^^^ expected 2 generic arguments\n@@ -382,7 +929,7 @@ LL |         type A = Result<T, E>;\n    |                  ^^^^^^^^^^^^\n \n error[E0107]: this enum takes 2 generic arguments but 1 generic argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:145:18\n+  --> $DIR/wrong-number-of-args.rs:323:18\n    |\n LL |         type B = Result<String>;\n    |                  ^^^^^^ ------ supplied 1 generic argument\n@@ -400,7 +947,7 @@ LL |         type B = Result<String, E>;\n    |                               ^^^\n \n error[E0107]: this enum takes 0 lifetime arguments but 1 lifetime argument was supplied\n-  --> $DIR/wrong-number-of-args.rs:149:18\n+  --> $DIR/wrong-number-of-args.rs:327:18\n    |\n LL |         type C = Result<'static>;\n    |                  ^^^^^^--------- help: remove these generics\n@@ -414,7 +961,7 @@ LL | pub enum Result<T, E> {\n    |          ^^^^^^\n \n error[E0107]: this enum takes 2 generic arguments but 0 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:149:18\n+  --> $DIR/wrong-number-of-args.rs:327:18\n    |\n LL |         type C = Result<'static>;\n    |                  ^^^^^^ expected 2 generic arguments\n@@ -430,7 +977,7 @@ LL |         type C = Result<'static, T, E>;\n    |                                ^^^^^^\n \n error[E0107]: this enum takes 2 generic arguments but 3 generic arguments were supplied\n-  --> $DIR/wrong-number-of-args.rs:155:18\n+  --> $DIR/wrong-number-of-args.rs:333:18\n    |\n LL |         type D = Result<usize, String, char>;\n    |                  ^^^^^^                ---- help: remove this generic argument\n@@ -443,7 +990,23 @@ note: enum defined here, with 2 generic parameters: `T`, `E`\n LL | pub enum Result<T, E> {\n    |          ^^^^^^ -  -\n \n-error: aborting due to 30 previous errors\n+error[E0107]: this enum takes 2 generic arguments but 0 generic arguments were supplied\n+  --> $DIR/wrong-number-of-args.rs:337:18\n+   |\n+LL |         type E = Result<>;\n+   |                  ^^^^^^ expected 2 generic arguments\n+   |\n+note: enum defined here, with 2 generic parameters: `T`, `E`\n+  --> $SRC_DIR/core/src/result.rs:LL:COL\n+   |\n+LL | pub enum Result<T, E> {\n+   |          ^^^^^^ -  -\n+help: add missing generic arguments\n+   |\n+LL |         type E = Result<T, E>;\n+   |                         ^^^^\n+\n+error: aborting due to 69 previous errors\n \n Some errors have detailed explanations: E0106, E0107.\n For more information about an error, try `rustc --explain E0106`."}, {"sha": "462f6fb7b872001b336381aefc607379ec2b1a2d", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-used-on-struct-1.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f5ad614ae708de002185aca99e1ecc62e133554/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f5ad614ae708de002185aca99e1ecc62e133554/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.rs?ref=7f5ad614ae708de002185aca99e1ecc62e133554", "patch": "@@ -7,7 +7,7 @@ struct Bar<A> {\n fn bar() {\n     let x: Box<Bar()> = panic!();\n     //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n-    //~| ERROR missing generics for struct `Bar`\n+    //~| ERROR this struct takes 1 generic argument but 0 generic arguments\n }\n \n fn main() { }"}, {"sha": "90bef7ba1180808305bea54c4d54e159700a18a0", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-used-on-struct-1.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7f5ad614ae708de002185aca99e1ecc62e133554/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f5ad614ae708de002185aca99e1ecc62e133554/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct-1.stderr?ref=7f5ad614ae708de002185aca99e1ecc62e133554", "patch": "@@ -4,7 +4,7 @@ error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n LL |     let x: Box<Bar()> = panic!();\n    |                ^^^^^ only `Fn` traits may use parentheses\n \n-error[E0107]: missing generics for struct `Bar`\n+error[E0107]: this struct takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/unboxed-closure-sugar-used-on-struct-1.rs:8:16\n    |\n LL |     let x: Box<Bar()> = panic!();\n@@ -17,8 +17,8 @@ LL | struct Bar<A> {\n    |        ^^^ -\n help: add missing generic argument\n    |\n-LL |     let x: Box<Bar<A>()> = panic!();\n-   |                ^^^^^^\n+LL |     let x: Box<Bar(A)> = panic!();\n+   |                    ^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "bd61cbd80220e15665ec2c4473e1b8ac35b373b8", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-used-on-struct.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7f5ad614ae708de002185aca99e1ecc62e133554/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f5ad614ae708de002185aca99e1ecc62e133554/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.rs?ref=7f5ad614ae708de002185aca99e1ecc62e133554", "patch": "@@ -6,7 +6,7 @@ struct Bar<A> {\n \n fn foo(b: Box<Bar()>) {\n     //~^ ERROR parenthesized type parameters may only be used with a `Fn` trait\n-    //~| ERROR missing generics for struct `Bar`\n+    //~| ERROR this struct takes 1 generic argument but 0 generic arguments\n }\n \n fn main() { }"}, {"sha": "931675afd83f027e4d38dba99aac7e08f3ed76a1", "filename": "src/test/ui/unboxed-closures/unboxed-closure-sugar-used-on-struct.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7f5ad614ae708de002185aca99e1ecc62e133554/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7f5ad614ae708de002185aca99e1ecc62e133554/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funboxed-closures%2Funboxed-closure-sugar-used-on-struct.stderr?ref=7f5ad614ae708de002185aca99e1ecc62e133554", "patch": "@@ -4,7 +4,7 @@ error[E0214]: parenthesized type parameters may only be used with a `Fn` trait\n LL | fn foo(b: Box<Bar()>) {\n    |               ^^^^^ only `Fn` traits may use parentheses\n \n-error[E0107]: missing generics for struct `Bar`\n+error[E0107]: this struct takes 1 generic argument but 0 generic arguments were supplied\n   --> $DIR/unboxed-closure-sugar-used-on-struct.rs:7:15\n    |\n LL | fn foo(b: Box<Bar()>) {\n@@ -17,8 +17,8 @@ LL | struct Bar<A> {\n    |        ^^^ -\n help: add missing generic argument\n    |\n-LL | fn foo(b: Box<Bar<A>()>) {\n-   |               ^^^^^^\n+LL | fn foo(b: Box<Bar(A)>) {\n+   |                   ^\n \n error: aborting due to 2 previous errors\n "}]}