{"sha": "13ba07b85499fcb6548969c60f887086867009ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzYmEwN2I4NTQ5OWZjYjY1NDg5NjljNjBmODg3MDg2ODY3MDA5YmE=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-03-08T18:44:11Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2016-03-08T18:44:11Z"}, "message": "Rollup merge of #32099 - bluss:doc-string-slicing, r=alexcrichton\n\nClarify documentation for string slicing (Index impls)\n\nClarify documentation for string slicing (Index impls)\n\n- Mention the sugared syntax for the implementations, since it's not\n  apparent from the docs that `Index<Range<usize>>` corresponds to\n  `&self[a..b]`.\n- Be specific in that start <= end and end <= len\n\nThis is just one fix in response to #32057", "tree": {"sha": "ca090dbdeea49385700d3336f7da0071e1f520f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca090dbdeea49385700d3336f7da0071e1f520f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/13ba07b85499fcb6548969c60f887086867009ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/13ba07b85499fcb6548969c60f887086867009ba", "html_url": "https://github.com/rust-lang/rust/commit/13ba07b85499fcb6548969c60f887086867009ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/13ba07b85499fcb6548969c60f887086867009ba/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e35e5c434b0c3301aa62d2d8648fd5decfdddb7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e35e5c434b0c3301aa62d2d8648fd5decfdddb7e", "html_url": "https://github.com/rust-lang/rust/commit/e35e5c434b0c3301aa62d2d8648fd5decfdddb7e"}, {"sha": "55671a0290b700d3f39cd79d102bbad2962d2a62", "url": "https://api.github.com/repos/rust-lang/rust/commits/55671a0290b700d3f39cd79d102bbad2962d2a62", "html_url": "https://github.com/rust-lang/rust/commit/55671a0290b700d3f39cd79d102bbad2962d2a62"}], "stats": {"total": 64, "additions": 51, "deletions": 13}, "files": [{"sha": "f5abdf65a5b4f525d1e8930286a59adf1f6ce8e6", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 51, "deletions": 13, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/13ba07b85499fcb6548969c60f887086867009ba/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/13ba07b85499fcb6548969c60f887086867009ba/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=13ba07b85499fcb6548969c60f887086867009ba", "patch": "@@ -1311,13 +1311,19 @@ mod traits {\n         }\n     }\n \n+    /// Implements substring slicing with syntax `&self[begin .. end]`.\n+    ///\n     /// Returns a slice of the given string from the byte range\n     /// [`begin`..`end`).\n     ///\n     /// This operation is `O(1)`.\n     ///\n-    /// Panics when `begin` and `end` do not point to valid characters\n-    /// or point beyond the last character of the string.\n+    /// # Panics\n+    ///\n+    /// Panics if `begin` or `end` does not point to the starting\n+    /// byte offset of a character (as defined by `is_char_boundary`).\n+    /// Requires that `begin <= end` and `end <= len` where `len` is the\n+    /// length of the string.\n     ///\n     /// # Examples\n     ///\n@@ -1353,8 +1359,20 @@ mod traits {\n         }\n     }\n \n+    /// Implements mutable substring slicing with syntax\n+    /// `&mut self[begin .. end]`.\n+    ///\n     /// Returns a mutable slice of the given string from the byte range\n     /// [`begin`..`end`).\n+    ///\n+    /// This operation is `O(1)`.\n+    ///\n+    /// # Panics\n+    ///\n+    /// Panics if `begin` or `end` does not point to the starting\n+    /// byte offset of a character (as defined by `is_char_boundary`).\n+    /// Requires that `begin <= end` and `end <= len` where `len` is the\n+    /// length of the string.\n     #[stable(feature = \"derefmut_for_string\", since = \"1.2.0\")]\n     impl ops::IndexMut<ops::Range<usize>> for str {\n         #[inline]\n@@ -1370,13 +1388,12 @@ mod traits {\n         }\n     }\n \n-    /// Returns a slice of the string from the beginning to byte\n-    /// `end`.\n+    /// Implements substring slicing with syntax `&self[.. end]`.\n     ///\n-    /// Equivalent to `self[0 .. end]`.\n+    /// Returns a slice of the string from the beginning to byte offset\n+    /// `end`.\n     ///\n-    /// Panics when `end` does not point to a valid character, or is\n-    /// out of bounds.\n+    /// Equivalent to `&self[0 .. end]`.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     impl ops::Index<ops::RangeTo<usize>> for str {\n         type Output = str;\n@@ -1392,8 +1409,12 @@ mod traits {\n         }\n     }\n \n-    /// Returns a mutable slice of the string from the beginning to byte\n+    /// Implements mutable substring slicing with syntax `&mut self[.. end]`.\n+    ///\n+    /// Returns a mutable slice of the string from the beginning to byte offset\n     /// `end`.\n+    ///\n+    /// Equivalent to `&mut self[0 .. end]`.\n     #[stable(feature = \"derefmut_for_string\", since = \"1.2.0\")]\n     impl ops::IndexMut<ops::RangeTo<usize>> for str {\n         #[inline]\n@@ -1407,12 +1428,12 @@ mod traits {\n         }\n     }\n \n-    /// Returns a slice of the string from `begin` to its end.\n+    /// Implements substring slicing with syntax `&self[begin ..]`.\n     ///\n-    /// Equivalent to `self[begin .. self.len()]`.\n+    /// Returns a slice of the string from byte offset `begin`\n+    /// to the end of the string.\n     ///\n-    /// Panics when `begin` does not point to a valid character, or is\n-    /// out of bounds.\n+    /// Equivalent to `&self[begin .. len]`.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     impl ops::Index<ops::RangeFrom<usize>> for str {\n         type Output = str;\n@@ -1428,7 +1449,12 @@ mod traits {\n         }\n     }\n \n-    /// Returns a slice of the string from `begin` to its end.\n+    /// Implements mutable substring slicing with syntax `&mut self[begin ..]`.\n+    ///\n+    /// Returns a mutable slice of the string from byte offset `begin`\n+    /// to the end of the string.\n+    ///\n+    /// Equivalent to `&mut self[begin .. len]`.\n     #[stable(feature = \"derefmut_for_string\", since = \"1.2.0\")]\n     impl ops::IndexMut<ops::RangeFrom<usize>> for str {\n         #[inline]\n@@ -1443,6 +1469,12 @@ mod traits {\n         }\n     }\n \n+    /// Implements substring slicing with syntax `&self[..]`.\n+    ///\n+    /// Returns a slice of the whole string. This operation can\n+    /// never panic.\n+    ///\n+    /// Equivalent to `&self[0 .. len]`.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     impl ops::Index<ops::RangeFull> for str {\n         type Output = str;\n@@ -1453,6 +1485,12 @@ mod traits {\n         }\n     }\n \n+    /// Implements mutable substring slicing with syntax `&mut self[..]`.\n+    ///\n+    /// Returns a mutable slice of the whole string. This operation can\n+    /// never panic.\n+    ///\n+    /// Equivalent to `&mut self[0 .. len]`.\n     #[stable(feature = \"derefmut_for_string\", since = \"1.2.0\")]\n     impl ops::IndexMut<ops::RangeFull> for str {\n         #[inline]"}]}