{"sha": "35a69d09ee8f997c681c77b6e621906e243caeec", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM1YTY5ZDA5ZWU4Zjk5N2M2ODFjNzdiNmU2MjE5MDZlMjQzY2FlZWM=", "commit": {"author": {"name": "Luca Barbieri", "email": "luca@luca-barbieri.com", "date": "2020-04-03T19:12:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-04-08T12:49:19Z"}, "message": "Fix warnings emitted when compiling as part of rustc", "tree": {"sha": "183a1ce5a0b2ea335366e8c1d6bea670e9e9405f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/183a1ce5a0b2ea335366e8c1d6bea670e9e9405f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35a69d09ee8f997c681c77b6e621906e243caeec", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35a69d09ee8f997c681c77b6e621906e243caeec", "html_url": "https://github.com/rust-lang/rust/commit/35a69d09ee8f997c681c77b6e621906e243caeec", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35a69d09ee8f997c681c77b6e621906e243caeec/comments", "author": {"login": "luca-barbieri", "id": 298418, "node_id": "MDQ6VXNlcjI5ODQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/298418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luca-barbieri", "html_url": "https://github.com/luca-barbieri", "followers_url": "https://api.github.com/users/luca-barbieri/followers", "following_url": "https://api.github.com/users/luca-barbieri/following{/other_user}", "gists_url": "https://api.github.com/users/luca-barbieri/gists{/gist_id}", "starred_url": "https://api.github.com/users/luca-barbieri/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luca-barbieri/subscriptions", "organizations_url": "https://api.github.com/users/luca-barbieri/orgs", "repos_url": "https://api.github.com/users/luca-barbieri/repos", "events_url": "https://api.github.com/users/luca-barbieri/events{/privacy}", "received_events_url": "https://api.github.com/users/luca-barbieri/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ea7c9cb62aaef468c9ff1483e109329d2d5fccd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ea7c9cb62aaef468c9ff1483e109329d2d5fccd", "html_url": "https://github.com/rust-lang/rust/commit/8ea7c9cb62aaef468c9ff1483e109329d2d5fccd"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "8d1098036d40f8a40091bebb729c4661b364f3b9", "filename": "crates/ra_syntax/src/algo.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35a69d09ee8f997c681c77b6e621906e243caeec/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35a69d09ee8f997c681c77b6e621906e243caeec/crates%2Fra_syntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Falgo.rs?ref=35a69d09ee8f997c681c77b6e621906e243caeec", "patch": "@@ -316,7 +316,7 @@ impl<'a> SyntaxRewriter<'a> {\n     }\n }\n \n-impl<'a> ops::AddAssign for SyntaxRewriter<'_> {\n+impl ops::AddAssign for SyntaxRewriter<'_> {\n     fn add_assign(&mut self, rhs: SyntaxRewriter) {\n         assert!(rhs.f.is_none());\n         self.replacements.extend(rhs.replacements)"}]}