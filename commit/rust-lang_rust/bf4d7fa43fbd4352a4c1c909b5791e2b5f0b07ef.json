{"sha": "bf4d7fa43fbd4352a4c1c909b5791e2b5f0b07ef", "node_id": "C_kwDOAAsO6NoAKGJmNGQ3ZmE0M2ZiZDQzNTJhNGMxYzkwOWI1NzkxZTJiNWYwYjA3ZWY", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-04-29T14:27:05Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-05-03T13:37:16Z"}, "message": "Hide InlineConst's generic arg during print\n\nThe generic arg is for type inference only and shouldn't be exposed\nto users.", "tree": {"sha": "d683a6cdd804e783938ebd4a0bff01674a1387dd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d683a6cdd804e783938ebd4a0bff01674a1387dd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf4d7fa43fbd4352a4c1c909b5791e2b5f0b07ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf4d7fa43fbd4352a4c1c909b5791e2b5f0b07ef", "html_url": "https://github.com/rust-lang/rust/commit/bf4d7fa43fbd4352a4c1c909b5791e2b5f0b07ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf4d7fa43fbd4352a4c1c909b5791e2b5f0b07ef/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ea5fa17998d7768664129294277986f7bad27923", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea5fa17998d7768664129294277986f7bad27923", "html_url": "https://github.com/rust-lang/rust/commit/ea5fa17998d7768664129294277986f7bad27923"}], "stats": {"total": 4, "additions": 4, "deletions": 0}, "files": [{"sha": "a1d1b6b3a785bcc6e522d6e7363140e4a4fcdb90", "filename": "compiler/rustc_middle/src/ty/print/mod.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bf4d7fa43fbd4352a4c1c909b5791e2b5f0b07ef/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf4d7fa43fbd4352a4c1c909b5791e2b5f0b07ef/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Fprint%2Fmod.rs?ref=bf4d7fa43fbd4352a4c1c909b5791e2b5f0b07ef", "patch": "@@ -136,6 +136,10 @@ pub trait Printer<'tcx>: Sized {\n                     match key.disambiguated_data.data {\n                         // Closures' own generics are only captures, don't print them.\n                         DefPathData::ClosureExpr => {}\n+                        // This covers both `DefKind::AnonConst` and `DefKind::InlineConst`.\n+                        // Anon consts doesn't have their own generics, and inline consts' own\n+                        // generics are their inferred types, so don't print them.\n+                        DefPathData::AnonConst => {}\n \n                         // If we have any generic arguments to print, we do that\n                         // on top of the same path, but without its own generics."}]}