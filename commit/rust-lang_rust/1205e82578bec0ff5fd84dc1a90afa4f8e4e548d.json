{"sha": "1205e82578bec0ff5fd84dc1a90afa4f8e4e548d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEyMDVlODI1NzhiZWMwZmY1ZmQ4NGRjMWE5MGFmYTRmOGU0ZTU0OGQ=", "commit": {"author": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2021-03-18T00:24:29Z"}, "committer": {"name": "Erik Desjardins", "email": "erikdesjardins@users.noreply.github.com", "date": "2021-03-18T00:24:29Z"}, "message": "remove unnecessary and ineffective caching", "tree": {"sha": "d6570a40745835015dedaaed767022770ae75786", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6570a40745835015dedaaed767022770ae75786"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1205e82578bec0ff5fd84dc1a90afa4f8e4e548d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1205e82578bec0ff5fd84dc1a90afa4f8e4e548d", "html_url": "https://github.com/rust-lang/rust/commit/1205e82578bec0ff5fd84dc1a90afa4f8e4e548d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1205e82578bec0ff5fd84dc1a90afa4f8e4e548d/comments", "author": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erikdesjardins", "id": 7673145, "node_id": "MDQ6VXNlcjc2NzMxNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/7673145?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erikdesjardins", "html_url": "https://github.com/erikdesjardins", "followers_url": "https://api.github.com/users/erikdesjardins/followers", "following_url": "https://api.github.com/users/erikdesjardins/following{/other_user}", "gists_url": "https://api.github.com/users/erikdesjardins/gists{/gist_id}", "starred_url": "https://api.github.com/users/erikdesjardins/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erikdesjardins/subscriptions", "organizations_url": "https://api.github.com/users/erikdesjardins/orgs", "repos_url": "https://api.github.com/users/erikdesjardins/repos", "events_url": "https://api.github.com/users/erikdesjardins/events{/privacy}", "received_events_url": "https://api.github.com/users/erikdesjardins/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6d5b728b38669233c684dbca8d09f249b429446", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6d5b728b38669233c684dbca8d09f249b429446", "html_url": "https://github.com/rust-lang/rust/commit/b6d5b728b38669233c684dbca8d09f249b429446"}], "stats": {"total": 31, "additions": 9, "deletions": 22}, "files": [{"sha": "5b1dcba670437dd7b85126a4ade2943c12960033", "filename": "compiler/rustc_mir/src/transform/remove_zsts.rs", "status": "modified", "additions": 9, "deletions": 22, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/1205e82578bec0ff5fd84dc1a90afa4f8e4e548d/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_zsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1205e82578bec0ff5fd84dc1a90afa4f8e4e548d/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_zsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fremove_zsts.rs?ref=1205e82578bec0ff5fd84dc1a90afa4f8e4e548d", "patch": "@@ -1,7 +1,6 @@\n //! Removes assignments to ZST places.\n \n use crate::transform::MirPass;\n-use rustc_data_structures::fx::FxHashMap;\n use rustc_middle::mir::{Body, StatementKind};\n use rustc_middle::ty::TyCtxt;\n \n@@ -10,35 +9,23 @@ pub struct RemoveZsts;\n impl<'tcx> MirPass<'tcx> for RemoveZsts {\n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n         let param_env = tcx.param_env(body.source.def_id());\n-\n         let (basic_blocks, local_decls) = body.basic_blocks_and_local_decls_mut();\n-\n-        let mut is_zst_cache = FxHashMap::default();\n-\n         for block in basic_blocks.iter_mut() {\n             for statement in block.statements.iter_mut() {\n                 match statement.kind {\n                     StatementKind::Assign(box (place, _)) => {\n                         let place_ty = place.ty(local_decls, tcx).ty;\n-\n-                        let is_inhabited_zst = *is_zst_cache.entry(place_ty).or_insert_with(|| {\n-                            if let Ok(layout) = tcx.layout_of(param_env.and(place_ty)) {\n-                                if layout.is_zst() && !layout.abi.is_uninhabited() {\n-                                    return true;\n+                        if let Ok(layout) = tcx.layout_of(param_env.and(place_ty)) {\n+                            if layout.is_zst() && !layout.abi.is_uninhabited() {\n+                                if tcx.consider_optimizing(|| {\n+                                    format!(\n+                                        \"RemoveZsts - Place: {:?} SourceInfo: {:?}\",\n+                                        place, statement.source_info\n+                                    )\n+                                }) {\n+                                    statement.make_nop();\n                                 }\n                             }\n-                            false\n-                        });\n-\n-                        if is_inhabited_zst {\n-                            if tcx.consider_optimizing(|| {\n-                                format!(\n-                                    \"RemoveZsts - Place: {:?} SourceInfo: {:?}\",\n-                                    place, statement.source_info\n-                                )\n-                            }) {\n-                                statement.make_nop();\n-                            }\n                         }\n                     }\n                     _ => {}"}]}