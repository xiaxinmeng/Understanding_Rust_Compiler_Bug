{"sha": "e70818983b634ecccfc20d4d8266d695dba1c335", "node_id": "C_kwDOAAsO6NoAKGU3MDgxODk4M2I2MzRlY2NjZmMyMGQ0ZDgyNjZkNjk1ZGJhMWMzMzU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-06T22:00:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-06T22:00:25Z"}, "message": "Rollup merge of #110013 - compiler-errors:non-exhaustive-privacy-reason, r=WaffleLapkin\n\nLabel `non_exhaustive` attribute on privacy errors from non-local items\n\nLabel when an ADT is `non_exhaustive` and we get a privacy error, help with confusion in a case like this:\n\n```rust\n#[non_exhaustive]\npub struct Foo;\n\n// other crate\nlet x = Foo;\n//~^ ERROR unit struct `Foo` is private\n```", "tree": {"sha": "c4217915665c266a8695ab9e259d56492d93fef0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4217915665c266a8695ab9e259d56492d93fef0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e70818983b634ecccfc20d4d8266d695dba1c335", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkL0D5CRBK7hj4Ov3rIwAA1GcIAE1hIk0Bvv5LSNepzgT6/xGa\ny690Xw9dr5taJY9XvDSo/O3EMa1eSMmz7UUVK6IO8jtz1AHNluyIAmLU14Ku7Vqq\nAMdYeyBjhhaZLWzDLcZS9hRDmGUKOxKnApMtuA/LDk8Ih17c8XuqUi/2yY98Sy4I\nGJruJ20Gh1C9sInGt/uy8Tp8aL97R4wPp29eHpRjRHFoV0GL6sPFKQ+fU6efrXi5\nzT25rsiWHAn2csGIQPi0Ev9LCCIfbi3oocualN8D+qN/IJ0tbK7vNvevHjsvaaqc\npXkwukIpd2jgJs2jWztkGOv+N43WTEbSAdbIDJ3jFYc5OBc6hn8FmXWR3nfnVoM=\n=f8lv\n-----END PGP SIGNATURE-----\n", "payload": "tree c4217915665c266a8695ab9e259d56492d93fef0\nparent 17ed06aad2542f59221f40b7c23a3b7ef771af1c\nparent 8ed2dc0bcee8c7ca43d2b6a66c9743cacf8dcddf\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1680818425 +0200\ncommitter GitHub <noreply@github.com> 1680818425 +0200\n\nRollup merge of #110013 - compiler-errors:non-exhaustive-privacy-reason, r=WaffleLapkin\n\nLabel `non_exhaustive` attribute on privacy errors from non-local items\n\nLabel when an ADT is `non_exhaustive` and we get a privacy error, help with confusion in a case like this:\n\n```rust\n#[non_exhaustive]\npub struct Foo;\n\n// other crate\nlet x = Foo;\n//~^ ERROR unit struct `Foo` is private\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e70818983b634ecccfc20d4d8266d695dba1c335", "html_url": "https://github.com/rust-lang/rust/commit/e70818983b634ecccfc20d4d8266d695dba1c335", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e70818983b634ecccfc20d4d8266d695dba1c335/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17ed06aad2542f59221f40b7c23a3b7ef771af1c", "url": "https://api.github.com/repos/rust-lang/rust/commits/17ed06aad2542f59221f40b7c23a3b7ef771af1c", "html_url": "https://github.com/rust-lang/rust/commit/17ed06aad2542f59221f40b7c23a3b7ef771af1c"}, {"sha": "8ed2dc0bcee8c7ca43d2b6a66c9743cacf8dcddf", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ed2dc0bcee8c7ca43d2b6a66c9743cacf8dcddf", "html_url": "https://github.com/rust-lang/rust/commit/8ed2dc0bcee8c7ca43d2b6a66c9743cacf8dcddf"}], "stats": {"total": 49, "additions": 38, "deletions": 11}, "files": [{"sha": "0c9d306081eb8c95673ac940737635d636e77a91", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e70818983b634ecccfc20d4d8266d695dba1c335/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e70818983b634ecccfc20d4d8266d695dba1c335/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=e70818983b634ecccfc20d4d8266d695dba1c335", "patch": "@@ -1607,7 +1607,17 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n         let mut err =\n             struct_span_err!(self.tcx.sess, ident.span, E0603, \"{} `{}` is private\", descr, ident);\n         err.span_label(ident.span, &format!(\"private {}\", descr));\n-        if let Some(span) = ctor_fields_span {\n+\n+        let mut non_exhaustive = None;\n+        // If an ADT is foreign and marked as `non_exhaustive`, then that's\n+        // probably why we have the privacy error.\n+        // Otherwise, point out if the struct has any private fields.\n+        if let Some(def_id) = res.opt_def_id()\n+            && !def_id.is_local()\n+            && let Some(attr) = self.tcx.get_attr(def_id, sym::non_exhaustive)\n+        {\n+            non_exhaustive = Some(attr.span);\n+        } else if let Some(span) = ctor_fields_span {\n             err.span_label(span, \"a constructor is private if any of the fields is private\");\n             if let Res::Def(_, d) = res && let Some(fields) = self.field_visibility_spans.get(&d) {\n                 err.multipart_suggestion_verbose(\n@@ -1656,6 +1666,14 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n             if !first && binding.vis.is_public() {\n                 note_span.push_span_label(def_span, \"consider importing it directly\");\n             }\n+            // Final step in the import chain, point out if the ADT is `non_exhaustive`\n+            // which is probably why this privacy violation occurred.\n+            if next_binding.is_none() && let Some(span) = non_exhaustive {\n+                note_span.push_span_label(\n+                    span,\n+                    format!(\"cannot be constructed because it is `#[non_exhaustive]`\"),\n+                );\n+            }\n             err.span_note(note_span, &msg);\n         }\n "}, {"sha": "39b1ef1e078c7e7af19feb8d05354b4ae61b7746", "filename": "tests/ui/rfc-2008-non-exhaustive/struct.stderr", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e70818983b634ecccfc20d4d8266d695dba1c335/tests%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e70818983b634ecccfc20d4d8266d695dba1c335/tests%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr?ref=e70818983b634ecccfc20d4d8266d695dba1c335", "patch": "@@ -10,14 +10,11 @@ error[E0603]: tuple struct constructor `TupleStruct` is private\n LL |     let ts_explicit = structs::TupleStruct(640, 480);\n    |                                ^^^^^^^^^^^ private tuple struct constructor\n    |\n-  ::: $DIR/auxiliary/structs.rs:12:24\n-   |\n-LL | pub struct TupleStruct(pub u16, pub u16);\n-   |                        ---------------- a constructor is private if any of the fields is private\n-   |\n note: the tuple struct constructor `TupleStruct` is defined here\n   --> $DIR/auxiliary/structs.rs:12:1\n    |\n+LL | #[non_exhaustive]\n+   | ----------------- cannot be constructed because it is `#[non_exhaustive]`\n LL | pub struct TupleStruct(pub u16, pub u16);\n    | ^^^^^^^^^^^^^^^^^^^^^^\n \n@@ -30,6 +27,8 @@ LL |     let us_explicit = structs::UnitStruct;\n note: the unit struct `UnitStruct` is defined here\n   --> $DIR/auxiliary/structs.rs:9:1\n    |\n+LL | #[non_exhaustive]\n+   | ----------------- cannot be constructed because it is `#[non_exhaustive]`\n LL | pub struct UnitStruct;\n    | ^^^^^^^^^^^^^^^^^^^^^\n "}, {"sha": "4083f57a9cdf9ca8c2ef5b81c146bd8c298f6013", "filename": "tests/ui/rfc-2008-non-exhaustive/variant.stderr", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/e70818983b634ecccfc20d4d8266d695dba1c335/tests%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e70818983b634ecccfc20d4d8266d695dba1c335/tests%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frfc-2008-non-exhaustive%2Fvariant.stderr?ref=e70818983b634ecccfc20d4d8266d695dba1c335", "patch": "@@ -8,7 +8,9 @@ note: the tuple variant `Tuple` is defined here\n   --> $DIR/auxiliary/variants.rs:5:23\n    |\n LL |     #[non_exhaustive] Tuple(u32),\n-   |                       ^^^^^\n+   |     ----------------- ^^^^^\n+   |     |\n+   |     cannot be constructed because it is `#[non_exhaustive]`\n \n error[E0603]: unit variant `Unit` is private\n   --> $DIR/variant.rs:14:47\n@@ -20,7 +22,9 @@ note: the unit variant `Unit` is defined here\n   --> $DIR/auxiliary/variants.rs:4:23\n    |\n LL |     #[non_exhaustive] Unit,\n-   |                       ^^^^\n+   |     ----------------- ^^^^\n+   |     |\n+   |     cannot be constructed because it is `#[non_exhaustive]`\n \n error[E0603]: unit variant `Unit` is private\n   --> $DIR/variant.rs:18:32\n@@ -32,7 +36,9 @@ note: the unit variant `Unit` is defined here\n   --> $DIR/auxiliary/variants.rs:4:23\n    |\n LL |     #[non_exhaustive] Unit,\n-   |                       ^^^^\n+   |     ----------------- ^^^^\n+   |     |\n+   |     cannot be constructed because it is `#[non_exhaustive]`\n \n error[E0603]: tuple variant `Tuple` is private\n   --> $DIR/variant.rs:20:32\n@@ -44,7 +50,9 @@ note: the tuple variant `Tuple` is defined here\n   --> $DIR/auxiliary/variants.rs:5:23\n    |\n LL |     #[non_exhaustive] Tuple(u32),\n-   |                       ^^^^^\n+   |     ----------------- ^^^^^\n+   |     |\n+   |     cannot be constructed because it is `#[non_exhaustive]`\n \n error[E0603]: tuple variant `Tuple` is private\n   --> $DIR/variant.rs:26:35\n@@ -56,7 +64,9 @@ note: the tuple variant `Tuple` is defined here\n   --> $DIR/auxiliary/variants.rs:5:23\n    |\n LL |     #[non_exhaustive] Tuple(u32),\n-   |                       ^^^^^\n+   |     ----------------- ^^^^^\n+   |     |\n+   |     cannot be constructed because it is `#[non_exhaustive]`\n \n error[E0639]: cannot create non-exhaustive variant using struct expression\n   --> $DIR/variant.rs:8:26"}]}