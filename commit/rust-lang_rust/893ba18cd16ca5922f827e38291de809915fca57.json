{"sha": "893ba18cd16ca5922f827e38291de809915fca57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5M2JhMThjZDE2Y2E1OTIyZjgyN2UzODI5MWRlODA5OTE1ZmNhNTc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-25T00:51:04Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-25T00:51:04Z"}, "message": "auto merge of #9474 : thestinger/rust/internal, r=alexcrichton\n\nthe entry point is wrapped with what should be the only public function", "tree": {"sha": "638095aa7dd62bd2a0e94a3913edd8ea3c303840", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/638095aa7dd62bd2a0e94a3913edd8ea3c303840"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/893ba18cd16ca5922f827e38291de809915fca57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/893ba18cd16ca5922f827e38291de809915fca57", "html_url": "https://github.com/rust-lang/rust/commit/893ba18cd16ca5922f827e38291de809915fca57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/893ba18cd16ca5922f827e38291de809915fca57/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7d68adbdd75300a4a10b2dcc59e1048f613db48", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7d68adbdd75300a4a10b2dcc59e1048f613db48", "html_url": "https://github.com/rust-lang/rust/commit/a7d68adbdd75300a4a10b2dcc59e1048f613db48"}, {"sha": "5867bbd794785c4ea51becbc5d008549b03dcf16", "url": "https://api.github.com/repos/rust-lang/rust/commits/5867bbd794785c4ea51becbc5d008549b03dcf16", "html_url": "https://github.com/rust-lang/rust/commit/5867bbd794785c4ea51becbc5d008549b03dcf16"}], "stats": {"total": 37, "additions": 19, "deletions": 18}, "files": [{"sha": "49b4d711f861a5f00d98f708cf3e2cc36b8b1d34", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/893ba18cd16ca5922f827e38291de809915fca57/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/893ba18cd16ca5922f827e38291de809915fca57/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=893ba18cd16ca5922f827e38291de809915fca57", "patch": "@@ -2321,6 +2321,23 @@ pub fn trans_mod(ccx: @mut CrateContext, m: &ast::_mod) {\n     }\n }\n \n+fn finish_register_fn(ccx: @mut CrateContext, sp: Span, sym: ~str, node_id: ast::NodeId,\n+                      llfn: ValueRef) {\n+    ccx.item_symbols.insert(node_id, sym);\n+\n+    if !*ccx.sess.building_library {\n+        lib::llvm::SetLinkage(llfn, lib::llvm::InternalLinkage);\n+    }\n+\n+    // FIXME #4404 android JNI hacks\n+    let is_entry = is_entry_fn(&ccx.sess, node_id) && (!*ccx.sess.building_library ||\n+                      (*ccx.sess.building_library &&\n+                       ccx.sess.targ_cfg.os == session::OsAndroid));\n+    if is_entry {\n+        create_entry_wrapper(ccx, sp, llfn);\n+    }\n+}\n+\n pub fn register_fn(ccx: @mut CrateContext,\n                    sp: Span,\n                    sym: ~str,\n@@ -2336,15 +2353,7 @@ pub fn register_fn(ccx: @mut CrateContext,\n     };\n \n     let llfn = decl_rust_fn(ccx, f.sig.inputs, f.sig.output, sym);\n-    ccx.item_symbols.insert(node_id, sym);\n-\n-    // FIXME #4404 android JNI hacks\n-    let is_entry = is_entry_fn(&ccx.sess, node_id) && (!*ccx.sess.building_library ||\n-                      (*ccx.sess.building_library &&\n-                       ccx.sess.targ_cfg.os == session::OsAndroid));\n-    if is_entry {\n-        create_entry_wrapper(ccx, sp, llfn);\n-    }\n+    finish_register_fn(ccx, sp, sym, node_id, llfn);\n     llfn\n }\n \n@@ -2361,15 +2370,7 @@ pub fn register_fn_llvmty(ccx: @mut CrateContext,\n            ast_map::path_to_str(item_path(ccx, &node_id), token::get_ident_interner()));\n \n     let llfn = decl_fn(ccx.llmod, sym, cc, fn_ty);\n-    ccx.item_symbols.insert(node_id, sym);\n-\n-    // FIXME #4404 android JNI hacks\n-    let is_entry = is_entry_fn(&ccx.sess, node_id) && (!*ccx.sess.building_library ||\n-                      (*ccx.sess.building_library &&\n-                       ccx.sess.targ_cfg.os == session::OsAndroid));\n-    if is_entry {\n-        create_entry_wrapper(ccx, sp, llfn);\n-    }\n+    finish_register_fn(ccx, sp, sym, node_id, llfn);\n     llfn\n }\n "}]}