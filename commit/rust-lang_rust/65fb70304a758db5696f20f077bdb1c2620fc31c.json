{"sha": "65fb70304a758db5696f20f077bdb1c2620fc31c", "node_id": "C_kwDOAAsO6NoAKDY1ZmI3MDMwNGE3NThkYjU2OTZmMjBmMDc3YmRiMWMyNjIwZmMzMWM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-29T17:24:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-29T17:24:34Z"}, "message": "Rollup merge of #106263 - chenyukang:yukang/fix-106261-formater, r=jyn514\n\nFormatter should not try to format non-Rust files\n\nFixes #106261", "tree": {"sha": "f0e17d989b3961cf34da79047e7ccf898463fea7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0e17d989b3961cf34da79047e7ccf898463fea7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65fb70304a758db5696f20f077bdb1c2620fc31c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjrc1SCRBK7hj4Ov3rIwAAZf4IACwRb82S2+x2AVzhwCdRoBG/\nkPtJttmfNzxa1EMDd0/D0jkVdWYlEIByAgfE8F8KHQb4WH59jkLIfiauGENJ3kTn\nSzb4DL4GWCPiG02PzeokO9fmFu5KPHzCDIPsDNI5kbel8yZ3+8P2wn8BpRDfaIt2\nvVjx3Ca0dKBNQ/AHY93T2vTwF73jdEcJUL+b4ZGwFl8tcfEpwOU233Ps0R8NTFoq\n6DQzC6FUp3+GPwdm/P+VAoHKMIov6Ya/Y4itP2CLH3L5NJb7dxhLXoWcIXACkCd8\nAfnEyv9E7ngrYivh8J7LHZzXkN9Tn3GInl4n37D5ZgcsC7pFqLjWc5kiQGusXD0=\n=XOy0\n-----END PGP SIGNATURE-----\n", "payload": "tree f0e17d989b3961cf34da79047e7ccf898463fea7\nparent caa33bfc75e51ba412db6b9b415336aecd8e6c66\nparent 7ebcc786b829cf96e1eeeb6e1a1c01b74832b940\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1672334674 +0100\ncommitter GitHub <noreply@github.com> 1672334674 +0100\n\nRollup merge of #106263 - chenyukang:yukang/fix-106261-formater, r=jyn514\n\nFormatter should not try to format non-Rust files\n\nFixes #106261\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65fb70304a758db5696f20f077bdb1c2620fc31c", "html_url": "https://github.com/rust-lang/rust/commit/65fb70304a758db5696f20f077bdb1c2620fc31c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65fb70304a758db5696f20f077bdb1c2620fc31c/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "caa33bfc75e51ba412db6b9b415336aecd8e6c66", "url": "https://api.github.com/repos/rust-lang/rust/commits/caa33bfc75e51ba412db6b9b415336aecd8e6c66", "html_url": "https://github.com/rust-lang/rust/commit/caa33bfc75e51ba412db6b9b415336aecd8e6c66"}, {"sha": "7ebcc786b829cf96e1eeeb6e1a1c01b74832b940", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ebcc786b829cf96e1eeeb6e1a1c01b74832b940", "html_url": "https://github.com/rust-lang/rust/commit/7ebcc786b829cf96e1eeeb6e1a1c01b74832b940"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "1d57c6ecbbb8d93167cc195b38b44d6f2f5fd8a2", "filename": "src/bootstrap/format.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/65fb70304a758db5696f20f077bdb1c2620fc31c/src%2Fbootstrap%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65fb70304a758db5696f20f077bdb1c2620fc31c/src%2Fbootstrap%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fformat.rs?ref=65fb70304a758db5696f20f077bdb1c2620fc31c", "patch": "@@ -74,11 +74,11 @@ fn update_rustfmt_version(build: &Builder<'_>) {\n     t!(std::fs::write(stamp_file, version))\n }\n \n-/// Returns the files modified between the `merge-base` of HEAD and\n+/// Returns the Rust files modified between the `merge-base` of HEAD and\n /// rust-lang/master and what is now on the disk.\n ///\n /// Returns `None` if all files should be formatted.\n-fn get_modified_files(build: &Builder<'_>) -> Option<Vec<String>> {\n+fn get_modified_rs_files(build: &Builder<'_>) -> Option<Vec<String>> {\n     let Ok(remote) = get_rust_lang_rust_remote() else {return None;};\n     if !verify_rustfmt_version(build) {\n         return None;\n@@ -95,6 +95,7 @@ fn get_modified_files(build: &Builder<'_>) -> Option<Vec<String>> {\n         )\n         .lines()\n         .map(|s| s.trim().to_owned())\n+        .filter(|f| Path::new(f).extension().map_or(false, |ext| ext == \"rs\"))\n         .collect(),\n     )\n }\n@@ -195,7 +196,7 @@ pub fn format(build: &Builder<'_>, check: bool, paths: &[PathBuf]) {\n                 ignore_fmt.add(&format!(\"!/{}\", untracked_path)).expect(&untracked_path);\n             }\n             if !check && paths.is_empty() {\n-                if let Some(files) = get_modified_files(build) {\n+                if let Some(files) = get_modified_rs_files(build) {\n                     for file in files {\n                         println!(\"formatting modified file {file}\");\n                         ignore_fmt.add(&format!(\"/{file}\")).expect(&file);"}]}