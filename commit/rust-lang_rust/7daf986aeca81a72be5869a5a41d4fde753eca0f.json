{"sha": "7daf986aeca81a72be5869a5a41d4fde753eca0f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdkYWY5ODZhZWNhODFhNzJiZTU4NjlhNWE0MWQ0ZmRlNzUzZWNhMGY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-05T00:04:08Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-06-05T22:11:33Z"}, "message": "Port remaining run-fail tests to use classes instead of resources", "tree": {"sha": "46e7105da73f4197522528ad1d35b4b2dfa36625", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/46e7105da73f4197522528ad1d35b4b2dfa36625"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7daf986aeca81a72be5869a5a41d4fde753eca0f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7daf986aeca81a72be5869a5a41d4fde753eca0f", "html_url": "https://github.com/rust-lang/rust/commit/7daf986aeca81a72be5869a5a41d4fde753eca0f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7daf986aeca81a72be5869a5a41d4fde753eca0f/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ebde93861fc004aec9d1fdac528cca9aad9a7612", "url": "https://api.github.com/repos/rust-lang/rust/commits/ebde93861fc004aec9d1fdac528cca9aad9a7612", "html_url": "https://github.com/rust-lang/rust/commit/ebde93861fc004aec9d1fdac528cca9aad9a7612"}], "stats": {"total": 72, "additions": 47, "deletions": 25}, "files": [{"sha": "736d0d81a5dd7c012cef32e6187d3b86b53e0193", "filename": "src/test/run-fail/morestack2.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Fmorestack2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack2.rs?ref=7daf986aeca81a72be5869a5a41d4fde753eca0f", "patch": "@@ -20,18 +20,21 @@ fn getbig_call_c_and_fail(i: int) {\n     }\n }\n \n-resource and_then_get_big_again(_i: ()) {\n+class and_then_get_big_again {\n+  new() {}\n+  drop {\n     fn getbig(i: int) {\n         if i != 0 {\n             getbig(i - 1);\n         }\n     }\n     getbig(10000);\n+  }\n }\n \n fn main() {\n     task::spawn {||\n-        let r = and_then_get_big_again(());\n+        let r = and_then_get_big_again();\n         getbig_call_c_and_fail(10000);\n     };\n }\n\\ No newline at end of file"}, {"sha": "61b0b824d25a17db07b3e9527d4d87b242e4e2e8", "filename": "src/test/run-fail/morestack3.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Fmorestack3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Fmorestack3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack3.rs?ref=7daf986aeca81a72be5869a5a41d4fde753eca0f", "patch": "@@ -5,21 +5,24 @@\n use std;\n \n fn getbig_and_fail(&&i: int) {\n-    let r = and_then_get_big_again(@0);\n+    let _r = and_then_get_big_again();\n     if i != 0 {\n         getbig_and_fail(i - 1);\n     } else {\n         fail;\n     }\n }\n \n-resource and_then_get_big_again(_i: @int) {\n+class and_then_get_big_again {\n+  new() {}\n+  drop {\n     fn getbig(i: int) {\n         if i != 0 {\n             getbig(i - 1);\n         }\n     }\n     getbig(100);\n+  }\n }\n \n fn main() {"}, {"sha": "63155b50de15490d83dcbd7f85874ca3d1b69c76", "filename": "src/test/run-fail/morestack4.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Fmorestack4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Fmorestack4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Fmorestack4.rs?ref=7daf986aeca81a72be5869a5a41d4fde753eca0f", "patch": "@@ -5,15 +5,17 @@\n use std;\n \n fn getbig_and_fail(&&i: int) {\n-    let r = and_then_get_big_again(@0);\n+    let r = and_then_get_big_again();\n     if i != 0 {\n         getbig_and_fail(i - 1);\n     } else {\n         fail;\n     }\n }\n \n-resource and_then_get_big_again(_i: @int) {\n+class and_then_get_big_again {\n+  new() {}\n+  drop {}\n }\n \n fn main() {"}, {"sha": "680df73d62e464c0778b6adeea6e30a02f4485e4", "filename": "src/test/run-fail/rt-set-exit-status-fail2.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frt-set-exit-status-fail2.rs?ref=7daf986aeca81a72be5869a5a41d4fde753eca0f", "patch": "@@ -1,15 +1,19 @@\n // error-pattern:whatever\n \n-fn main() {\n-    log(error, \"whatever\");\n-    task::spawn {||\n-        resource r(_i: ()) {\n+class r {\n             // Setting the exit status after the runtime has already\n             // failed has no effect and the process exits with the\n             // runtime's exit code\n-            os::set_exit_status(50);\n-        }\n-        let i = r(());\n+  drop {\n+    os::set_exit_status(50);\n+  }\n+  new() {}\n+}\n+\n+fn main() {\n+    log(error, \"whatever\");\n+    task::spawn {||\n+      let i = r();\n     };\n     fail;\n }\n\\ No newline at end of file"}, {"sha": "b483a5eb10a54bea9d6f141d1b113ebcfd14f520", "filename": "src/test/run-fail/too-much-recursion-unwinding.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Ftoo-much-recursion-unwinding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Ftoo-much-recursion-unwinding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ftoo-much-recursion-unwinding.rs?ref=7daf986aeca81a72be5869a5a41d4fde753eca0f", "patch": "@@ -9,11 +9,15 @@ fn recurse() {\n     recurse();\n }\n \n-resource r(recursed: *mut bool) unsafe {\n+class r {\n+  let recursed: *mut bool;\n+  new(recursed: *mut bool) unsafe { self.recursed = recursed; }\n+  drop unsafe { \n     if !*recursed {\n         *recursed = true;\n         recurse();\n     }\n+  }\n }\n \n fn main() {"}, {"sha": "8b771dc7651a35b1b0a8855f2594eae70d33bfda", "filename": "src/test/run-fail/unwind-box-res.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Funwind-box-res.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Funwind-box-res.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-box-res.rs?ref=7daf986aeca81a72be5869a5a41d4fde753eca0f", "patch": "@@ -4,8 +4,12 @@ fn failfn() {\n     fail;\n }\n \n-resource r(v: *int) unsafe {\n-    let v2: ~int = unsafe::reinterpret_cast(v);\n+class r {\n+  let v: *int;\n+  new(v: *int) { self.v = v; }\n+  drop unsafe {\n+    let _v2: ~int = unsafe::reinterpret_cast(self.v);\n+  }\n }\n \n fn main() unsafe {"}, {"sha": "9e24c1598c6af9e7c1b8c9e3d6152f45de19bf78", "filename": "src/test/run-fail/unwind-resource-fail.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-resource-fail.rs?ref=7daf986aeca81a72be5869a5a41d4fde753eca0f", "patch": "@@ -1,9 +1,9 @@\n // error-pattern:fail\n // xfail-test\n \n-resource r(i: int) {\n-    // What happens when destructors throw?\n-    fail;\n+class r {\n+  new(i:int) {}\n+  drop { fail; }\n }\n \n fn main() {"}, {"sha": "a29f83bf49a7fdb011cb9828763f625f5527b72b", "filename": "src/test/run-fail/unwind-resource-fail2.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Funwind-resource-fail2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Funwind-resource-fail2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-resource-fail2.rs?ref=7daf986aeca81a72be5869a5a41d4fde753eca0f", "patch": "@@ -1,9 +1,9 @@\n // error-pattern:fail\n // xfail-test\n \n-resource r(i: int) {\n-    // Double-fail!!\n-    fail;\n+class r {\n+  new(i:int) {}\n+  drop { fail; }\n }\n \n fn main() {"}, {"sha": "c7eeec2e5480ac8fb70fd43750940b991033953e", "filename": "src/test/run-fail/unwind-resource-fail3.rs", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7daf986aeca81a72be5869a5a41d4fde753eca0f/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Funwind-resource-fail3.rs?ref=7daf986aeca81a72be5869a5a41d4fde753eca0f", "patch": "@@ -1,9 +1,11 @@\n // error-pattern:quux\n // xfail-test\n \n-resource faily_box(_i: @int) {\n-    // What happens to the box pointer owned by this resource?\n-    fail \"quux\";\n+class faily_box {\n+  let i: @int;\n+  new(i: @int) { self.i = i; }\n+  // What happens to the box pointer owned by this class?\n+  drop { fail \"quux\"; }\n }\n \n fn main() {"}]}