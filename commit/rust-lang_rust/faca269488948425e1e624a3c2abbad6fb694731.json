{"sha": "faca269488948425e1e624a3c2abbad6fb694731", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhY2EyNjk0ODg5NDg0MjVlMWU2MjRhM2MyYWJiYWQ2ZmI2OTQ3MzE=", "commit": {"author": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T11:10:27Z"}, "committer": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T15:22:32Z"}, "message": "clean tests/ui/float.rs\n\nCleaning the empty lines for clarity.", "tree": {"sha": "f42c1512bd962c2e3dfb86777b819d7864f38d13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f42c1512bd962c2e3dfb86777b819d7864f38d13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/faca269488948425e1e624a3c2abbad6fb694731", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/faca269488948425e1e624a3c2abbad6fb694731", "html_url": "https://github.com/rust-lang/rust/commit/faca269488948425e1e624a3c2abbad6fb694731", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/faca269488948425e1e624a3c2abbad6fb694731/comments", "author": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc9cdf1d645c3462be505ff5f4c3e5349271f839", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc9cdf1d645c3462be505ff5f4c3e5349271f839", "html_url": "https://github.com/rust-lang/rust/commit/bc9cdf1d645c3462be505ff5f4c3e5349271f839"}], "stats": {"total": 83, "additions": 28, "deletions": 55}, "files": [{"sha": "d6a74193ae312f73facce54e844855d20699aa89", "filename": "tests/ui/float_cmp.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/faca269488948425e1e624a3c2abbad6fb694731/tests%2Fui%2Ffloat_cmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faca269488948425e1e624a3c2abbad6fb694731/tests%2Fui%2Ffloat_cmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.rs?ref=faca269488948425e1e624a3c2abbad6fb694731", "patch": "@@ -41,48 +41,21 @@ fn main() {\n     ZERO + ZERO != 1.0; //no error, comparison with zero is ok\n \n     ONE == 1f32;\n-\n-\n-\n     ONE == 1.0 + 0.0;\n-\n-\n-\n-\n     ONE + ONE == ZERO + ONE + ONE;\n-\n-\n-\n-\n     ONE != 2.0;\n-\n-\n-\n     ONE != 0.0; // no error, comparison with zero is ok\n     twice(ONE) != ONE;\n-\n-\n-\n     ONE as f64 != 2.0;\n-\n-\n-\n     ONE as f64 != 0.0; // no error, comparison with zero is ok\n \n     let x : f64 = 1.0;\n \n     x == 1.0;\n-\n-\n-\n     x != 0f64; // no error, comparison with zero is ok\n \n     twice(x) != twice(ONE as f64);\n \n-\n-\n-\n-\n     x < 0.0; // no errors, lower or greater comparisons need no fuzzyness\n     x > 0.0;\n     x <= 0.0;"}, {"sha": "082990334d1ced0112512e7c7017b6c03de8c857", "filename": "tests/ui/float_cmp.stderr", "status": "modified", "additions": 28, "deletions": 28, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/faca269488948425e1e624a3c2abbad6fb694731/tests%2Fui%2Ffloat_cmp.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/faca269488948425e1e624a3c2abbad6fb694731/tests%2Fui%2Ffloat_cmp.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffloat_cmp.stderr?ref=faca269488948425e1e624a3c2abbad6fb694731", "patch": "@@ -16,87 +16,87 @@ note: std::f32::EPSILON and std::f64::EPSILON are available.\n    |     ^^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:47:5\n+  --> $DIR/float_cmp.rs:44:5\n    |\n-47 |     ONE == 1.0 + 0.0;\n+44 |     ONE == 1.0 + 0.0;\n    |     ^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(ONE - (1.0 + 0.0)).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:47:5\n+  --> $DIR/float_cmp.rs:44:5\n    |\n-47 |     ONE == 1.0 + 0.0;\n+44 |     ONE == 1.0 + 0.0;\n    |     ^^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:52:5\n+  --> $DIR/float_cmp.rs:45:5\n    |\n-52 |     ONE + ONE == ZERO + ONE + ONE;\n+45 |     ONE + ONE == ZERO + ONE + ONE;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(ONE + ONE - (ZERO + ONE + ONE)).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:52:5\n+  --> $DIR/float_cmp.rs:45:5\n    |\n-52 |     ONE + ONE == ZERO + ONE + ONE;\n+45 |     ONE + ONE == ZERO + ONE + ONE;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:57:5\n+  --> $DIR/float_cmp.rs:46:5\n    |\n-57 |     ONE != 2.0;\n+46 |     ONE != 2.0;\n    |     ^^^^^^^^^^ help: consider comparing them within some error `(ONE - 2.0).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:57:5\n+  --> $DIR/float_cmp.rs:46:5\n    |\n-57 |     ONE != 2.0;\n+46 |     ONE != 2.0;\n    |     ^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:62:5\n+  --> $DIR/float_cmp.rs:48:5\n    |\n-62 |     twice(ONE) != ONE;\n+48 |     twice(ONE) != ONE;\n    |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(twice(ONE) - ONE).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:62:5\n+  --> $DIR/float_cmp.rs:48:5\n    |\n-62 |     twice(ONE) != ONE;\n+48 |     twice(ONE) != ONE;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:66:5\n+  --> $DIR/float_cmp.rs:49:5\n    |\n-66 |     ONE as f64 != 2.0;\n+49 |     ONE as f64 != 2.0;\n    |     ^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(ONE as f64 - 2.0).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:66:5\n+  --> $DIR/float_cmp.rs:49:5\n    |\n-66 |     ONE as f64 != 2.0;\n+49 |     ONE as f64 != 2.0;\n    |     ^^^^^^^^^^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:74:5\n+  --> $DIR/float_cmp.rs:54:5\n    |\n-74 |     x == 1.0;\n+54 |     x == 1.0;\n    |     ^^^^^^^^ help: consider comparing them within some error `(x - 1.0).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:74:5\n+  --> $DIR/float_cmp.rs:54:5\n    |\n-74 |     x == 1.0;\n+54 |     x == 1.0;\n    |     ^^^^^^^^\n \n error: strict comparison of f32 or f64\n-  --> $DIR/float_cmp.rs:80:5\n+  --> $DIR/float_cmp.rs:57:5\n    |\n-80 |     twice(x) != twice(ONE as f64);\n+57 |     twice(x) != twice(ONE as f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider comparing them within some error `(twice(x) - twice(ONE as f64)).abs() < error`\n    |\n note: std::f32::EPSILON and std::f64::EPSILON are available.\n-  --> $DIR/float_cmp.rs:80:5\n+  --> $DIR/float_cmp.rs:57:5\n    |\n-80 |     twice(x) != twice(ONE as f64);\n+57 |     twice(x) != twice(ONE as f64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: aborting due to 8 previous errors"}]}