{"sha": "30b8f8b913710ce867c6292ea9599d686a8325e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwYjhmOGI5MTM3MTBjZTg2N2M2MjkyZWE5NTk5ZDY4NmE4MzI1ZTc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-21T21:43:11Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T23:54:30Z"}, "message": "librustc: De-`@mut` `IrMaps::variable_map`", "tree": {"sha": "78012a6812b9a65e7fc31ded170dbd4c410148c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/78012a6812b9a65e7fc31ded170dbd4c410148c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/30b8f8b913710ce867c6292ea9599d686a8325e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/30b8f8b913710ce867c6292ea9599d686a8325e7", "html_url": "https://github.com/rust-lang/rust/commit/30b8f8b913710ce867c6292ea9599d686a8325e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/30b8f8b913710ce867c6292ea9599d686a8325e7/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e5c399a83cc0b85b5d79bb6d5377f18d348cc597", "url": "https://api.github.com/repos/rust-lang/rust/commits/e5c399a83cc0b85b5d79bb6d5377f18d348cc597", "html_url": "https://github.com/rust-lang/rust/commit/e5c399a83cc0b85b5d79bb6d5377f18d348cc597"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "1830694147d4480d63cefcf9060a4f78c6d90561", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/30b8f8b913710ce867c6292ea9599d686a8325e7/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/30b8f8b913710ce867c6292ea9599d686a8325e7/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=30b8f8b913710ce867c6292ea9599d686a8325e7", "patch": "@@ -248,7 +248,7 @@ struct IrMaps {\n     num_live_nodes: Cell<uint>,\n     num_vars: Cell<uint>,\n     live_node_map: RefCell<HashMap<NodeId, LiveNode>>,\n-    variable_map: HashMap<NodeId, Variable>,\n+    variable_map: RefCell<HashMap<NodeId, Variable>>,\n     capture_info_map: HashMap<NodeId, @~[CaptureInfo]>,\n     var_kinds: ~[VarKind],\n     lnks: ~[LiveNodeKind],\n@@ -265,7 +265,7 @@ fn IrMaps(tcx: ty::ctxt,\n         num_live_nodes: Cell::new(0),\n         num_vars: Cell::new(0),\n         live_node_map: RefCell::new(HashMap::new()),\n-        variable_map: HashMap::new(),\n+        variable_map: RefCell::new(HashMap::new()),\n         capture_info_map: HashMap::new(),\n         var_kinds: ~[],\n         lnks: ~[],\n@@ -302,7 +302,8 @@ impl IrMaps {\n \n         match vk {\n             Local(LocalInfo { id: node_id, .. }) | Arg(node_id, _) => {\n-                self.variable_map.insert(node_id, v);\n+                let mut variable_map = self.variable_map.borrow_mut();\n+                variable_map.get().insert(node_id, v);\n             },\n             ImplicitRet => {}\n         }\n@@ -313,7 +314,8 @@ impl IrMaps {\n     }\n \n     pub fn variable(&mut self, node_id: NodeId, span: Span) -> Variable {\n-        match self.variable_map.find(&node_id) {\n+        let variable_map = self.variable_map.borrow();\n+        match variable_map.get().find(&node_id) {\n           Some(&var) => var,\n           None => {\n             self.tcx.sess.span_bug("}]}