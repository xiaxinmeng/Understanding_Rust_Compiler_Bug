{"sha": "c088e5092bc1d98784f79a7965c8980a2d9609c3", "node_id": "C_kwDOAAsO6NoAKGMwODhlNTA5MmJjMWQ5ODc4NGY3OWE3OTY1Yzg5ODBhMmQ5NjA5YzM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-12-19T16:38:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-12-19T16:38:33Z"}, "message": "Rollup merge of #91791 - terrarier2111:fix-float-ice, r=nagisa\n\nFix an ICE when lowering a float with missing exponent magnitude\n\nThis fixes: https://github.com/rust-lang/rust/issues/91434", "tree": {"sha": "90ed7b44d77271aa98cca3d37a97b5542ab2648e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/90ed7b44d77271aa98cca3d37a97b5542ab2648e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c088e5092bc1d98784f79a7965c8980a2d9609c3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhv2AJCRBK7hj4Ov3rIwAA8s4IAHAp5iRXDLrbBuqqZiOmid3q\nKFD+iMoIgrpL9izCDxVrSPSJ1WyIhWugUmrxK4Mf0LCD+4ISx5k5a35ggXaO+OlF\n/0lMmIn8AJSL2Y4KtSVkVugSfVav0rdwqsX3PypetGtHSijhZhHJGc2qezcjYzkD\ncqgKNtISToc9ECJl9eMqY8wlREN8yzWHc3CIvg2Bx/Xli5ysNn73WDCE7RTzvIrX\nPHLa38tidQxN66GjRd6XzsWJc88cpMZI6r3VdBmrXDbfVKBq22vmEsjyLTEnp++3\n6E4DG8PQwiKAhg8kGPtWyWHcxkZeZ6ga5meY10OW/JQambdVKQgDwW5RMQvzZso=\n=O8L+\n-----END PGP SIGNATURE-----\n", "payload": "tree 90ed7b44d77271aa98cca3d37a97b5542ab2648e\nparent 41c3017c82bbc16842cc3bc1afa904e6910e293c\nparent 0003280b9b4ef53e11b89ef69d0a2c4ffc725459\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1639931913 +0100\ncommitter GitHub <noreply@github.com> 1639931913 +0100\n\nRollup merge of #91791 - terrarier2111:fix-float-ice, r=nagisa\n\nFix an ICE when lowering a float with missing exponent magnitude\n\nThis fixes: https://github.com/rust-lang/rust/issues/91434\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c088e5092bc1d98784f79a7965c8980a2d9609c3", "html_url": "https://github.com/rust-lang/rust/commit/c088e5092bc1d98784f79a7965c8980a2d9609c3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c088e5092bc1d98784f79a7965c8980a2d9609c3/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41c3017c82bbc16842cc3bc1afa904e6910e293c", "url": "https://api.github.com/repos/rust-lang/rust/commits/41c3017c82bbc16842cc3bc1afa904e6910e293c", "html_url": "https://github.com/rust-lang/rust/commit/41c3017c82bbc16842cc3bc1afa904e6910e293c"}, {"sha": "0003280b9b4ef53e11b89ef69d0a2c4ffc725459", "url": "https://api.github.com/repos/rust-lang/rust/commits/0003280b9b4ef53e11b89ef69d0a2c4ffc725459", "html_url": "https://github.com/rust-lang/rust/commit/0003280b9b4ef53e11b89ef69d0a2c4ffc725459"}], "stats": {"total": 51, "additions": 42, "deletions": 9}, "files": [{"sha": "9b54db0d7de86534a4fe8c12e3072b97d8c54a90", "filename": "compiler/rustc_mir_build/src/thir/constant.rs", "status": "modified", "additions": 13, "deletions": 9, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/c088e5092bc1d98784f79a7965c8980a2d9609c3/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c088e5092bc1d98784f79a7965c8980a2d9609c3/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fthir%2Fconstant.rs?ref=c088e5092bc1d98784f79a7965c8980a2d9609c3", "patch": "@@ -46,7 +46,9 @@ crate fn lit_to_const<'tcx>(\n         (ast::LitKind::Int(n, _), ty::Uint(_)) | (ast::LitKind::Int(n, _), ty::Int(_)) => {\n             trunc(if neg { (*n as i128).overflowing_neg().0 as u128 } else { *n })?\n         }\n-        (ast::LitKind::Float(n, _), ty::Float(fty)) => parse_float(*n, *fty, neg),\n+        (ast::LitKind::Float(n, _), ty::Float(fty)) => {\n+            parse_float(*n, *fty, neg).ok_or(LitToConstError::Reported)?\n+        }\n         (ast::LitKind::Bool(b), ty::Bool) => ConstValue::Scalar(Scalar::from_bool(*b)),\n         (ast::LitKind::Char(c), ty::Char) => ConstValue::Scalar(Scalar::from_char(*c)),\n         (ast::LitKind::Err(_), _) => return Err(LitToConstError::Reported),\n@@ -55,14 +57,15 @@ crate fn lit_to_const<'tcx>(\n     Ok(ty::Const::from_value(tcx, lit, ty))\n }\n \n-fn parse_float<'tcx>(num: Symbol, fty: ty::FloatTy, neg: bool) -> ConstValue<'tcx> {\n+fn parse_float<'tcx>(num: Symbol, fty: ty::FloatTy, neg: bool) -> Option<ConstValue<'tcx>> {\n     let num = num.as_str();\n     use rustc_apfloat::ieee::{Double, Single};\n     let scalar = match fty {\n         ty::FloatTy::F32 => {\n-            let rust_f = num\n-                .parse::<f32>()\n-                .unwrap_or_else(|e| panic!(\"f32 failed to parse `{}`: {:?}\", num, e));\n+            let rust_f = match num.parse::<f32>() {\n+                Ok(f) => f,\n+                Err(_) => return None,\n+            };\n             let mut f = num.parse::<Single>().unwrap_or_else(|e| {\n                 panic!(\"apfloat::ieee::Single failed to parse `{}`: {:?}\", num, e)\n             });\n@@ -82,9 +85,10 @@ fn parse_float<'tcx>(num: Symbol, fty: ty::FloatTy, neg: bool) -> ConstValue<'tc\n             Scalar::from_f32(f)\n         }\n         ty::FloatTy::F64 => {\n-            let rust_f = num\n-                .parse::<f64>()\n-                .unwrap_or_else(|e| panic!(\"f64 failed to parse `{}`: {:?}\", num, e));\n+            let rust_f = match num.parse::<f64>() {\n+                Ok(f) => f,\n+                Err(_) => return None,\n+            };\n             let mut f = num.parse::<Double>().unwrap_or_else(|e| {\n                 panic!(\"apfloat::ieee::Double failed to parse `{}`: {:?}\", num, e)\n             });\n@@ -105,5 +109,5 @@ fn parse_float<'tcx>(num: Symbol, fty: ty::FloatTy, neg: bool) -> ConstValue<'tc\n         }\n     };\n \n-    ConstValue::Scalar(scalar)\n+    Some(ConstValue::Scalar(scalar))\n }"}, {"sha": "fc7731291b371a33906f3d56b03adad01a989a24", "filename": "src/test/ui/consts/issue-91434.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c088e5092bc1d98784f79a7965c8980a2d9609c3/src%2Ftest%2Fui%2Fconsts%2Fissue-91434.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c088e5092bc1d98784f79a7965c8980a2d9609c3/src%2Ftest%2Fui%2Fconsts%2Fissue-91434.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-91434.rs?ref=c088e5092bc1d98784f79a7965c8980a2d9609c3", "patch": "@@ -0,0 +1,6 @@\n+fn main() {\n+    [9; [[9E; h]]];\n+    //~^ ERROR: expected at least one digit in exponent\n+    //~| ERROR: cannot find value `h` in this scope [E0425]\n+    //~| ERROR: constant expression depends on a generic parameter\n+}"}, {"sha": "9d3fe5f201656be94c13f8fc2f50415d3876b2c8", "filename": "src/test/ui/consts/issue-91434.stderr", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/c088e5092bc1d98784f79a7965c8980a2d9609c3/src%2Ftest%2Fui%2Fconsts%2Fissue-91434.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c088e5092bc1d98784f79a7965c8980a2d9609c3/src%2Ftest%2Fui%2Fconsts%2Fissue-91434.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fissue-91434.stderr?ref=c088e5092bc1d98784f79a7965c8980a2d9609c3", "patch": "@@ -0,0 +1,23 @@\n+error: expected at least one digit in exponent\n+  --> $DIR/issue-91434.rs:2:11\n+   |\n+LL |     [9; [[9E; h]]];\n+   |           ^^\n+\n+error[E0425]: cannot find value `h` in this scope\n+  --> $DIR/issue-91434.rs:2:15\n+   |\n+LL |     [9; [[9E; h]]];\n+   |               ^ not found in this scope\n+\n+error: constant expression depends on a generic parameter\n+  --> $DIR/issue-91434.rs:2:9\n+   |\n+LL |     [9; [[9E; h]]];\n+   |         ^^^^^^^^^\n+   |\n+   = note: this may fail depending on what value the parameter takes\n+\n+error: aborting due to 3 previous errors\n+\n+For more information about this error, try `rustc --explain E0425`."}]}