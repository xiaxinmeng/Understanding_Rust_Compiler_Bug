{"sha": "e121d9671afe4eae1f418db14a6fdae07652c51c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxMjFkOTY3MWFmZTRlYWUxZjQxOGRiMTRhNmZkYWUwNzY1MmM1MWM=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-27T15:48:43Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-06-03T17:19:29Z"}, "message": "Use precise span for must_use tuple components", "tree": {"sha": "e7a978b17f953c1e71a6f7bfa72fa11f9e839d10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7a978b17f953c1e71a6f7bfa72fa11f9e839d10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e121d9671afe4eae1f418db14a6fdae07652c51c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e121d9671afe4eae1f418db14a6fdae07652c51c", "html_url": "https://github.com/rust-lang/rust/commit/e121d9671afe4eae1f418db14a6fdae07652c51c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e121d9671afe4eae1f418db14a6fdae07652c51c/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0", "html_url": "https://github.com/rust-lang/rust/commit/fd36b5fd52003d3c3b246c8fb9fb669c5f0f68b0"}], "stats": {"total": 45, "additions": 38, "deletions": 7}, "files": [{"sha": "a2bf0b894f6c11e7c7aee38da6f18717bf5e066a", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/e121d9671afe4eae1f418db14a6fdae07652c51c/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e121d9671afe4eae1f418db14a6fdae07652c51c/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=e121d9671afe4eae1f418db14a6fdae07652c51c", "patch": "@@ -54,7 +54,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n         {\n             true\n         } else {\n-            check_must_use_ty(cx, ty, s.span)\n+            check_must_use_ty(cx, ty, &expr, s.span)\n         };\n \n         let mut fn_warned = false;\n@@ -138,6 +138,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n         fn check_must_use_ty(\n             cx: &LateContext<'_, '_>,\n             ty: Ty<'_>,\n+            expr: &hir::Expr,\n             span: Span,\n         ) -> bool {\n             match ty.sty {\n@@ -170,9 +171,19 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n                     has_emitted\n                 }\n                 ty::Tuple(ref tys) => {\n-                    tys.iter().map(|k| k.expect_ty()).any(|ty| {\n-                        check_must_use_ty(cx, ty, span)\n-                    })\n+                    let mut has_emitted = false;\n+                    let spans = if let hir::ExprKind::Tup(comps) = &expr.node {\n+                        debug_assert_eq!(comps.len(), tys.len());\n+                        comps.iter().map(|e| e.span).collect()\n+                    } else {\n+                        vec![]\n+                    };\n+                    for (i, ty) in tys.iter().map(|k| k.expect_ty()).enumerate() {\n+                        if check_must_use_ty(cx, ty, expr, *spans.get(i).unwrap_or(&span)) {\n+                            has_emitted = true;\n+                        }\n+                    }\n+                    has_emitted\n                 }\n                 _ => false,\n             }"}, {"sha": "2cdcfef35f7a6af8b9f56fc3ce3fbab780d50797", "filename": "src/test/ui/lint/must_use-tuple.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e121d9671afe4eae1f418db14a6fdae07652c51c/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e121d9671afe4eae1f418db14a6fdae07652c51c/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.rs?ref=e121d9671afe4eae1f418db14a6fdae07652c51c", "patch": "@@ -2,4 +2,8 @@\n \n fn main() {\n     (Ok::<(), ()>(()),); //~ ERROR unused `std::result::Result` that must be used\n+\n+    (Ok::<(), ()>(()), 0, Ok::<(), ()>(()), 5);\n+    //~^ ERROR unused `std::result::Result` that must be used\n+    //~^^ ERROR unused `std::result::Result` that must be used\n }"}, {"sha": "59cdf5849f757a791a1b272a1fe9f0b329f18615", "filename": "src/test/ui/lint/must_use-tuple.stderr", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/e121d9671afe4eae1f418db14a6fdae07652c51c/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/e121d9671afe4eae1f418db14a6fdae07652c51c/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_use-tuple.stderr?ref=e121d9671afe4eae1f418db14a6fdae07652c51c", "patch": "@@ -1,8 +1,8 @@\n error: unused `std::result::Result` that must be used\n-  --> $DIR/must_use-tuple.rs:4:5\n+  --> $DIR/must_use-tuple.rs:4:6\n    |\n LL |     (Ok::<(), ()>(()),);\n-   |     ^^^^^^^^^^^^^^^^^^^^\n+   |      ^^^^^^^^^^^^^^^^\n    |\n note: lint level defined here\n   --> $DIR/must_use-tuple.rs:1:9\n@@ -11,5 +11,21 @@ LL | #![deny(unused_must_use)]\n    |         ^^^^^^^^^^^^^^^\n    = note: this `Result` may be an `Err` variant, which should be handled\n \n-error: aborting due to previous error\n+error: unused `std::result::Result` that must be used\n+  --> $DIR/must_use-tuple.rs:6:6\n+   |\n+LL |     (Ok::<(), ()>(()), 0, Ok::<(), ()>(()), 5);\n+   |      ^^^^^^^^^^^^^^^^\n+   |\n+   = note: this `Result` may be an `Err` variant, which should be handled\n+\n+error: unused `std::result::Result` that must be used\n+  --> $DIR/must_use-tuple.rs:6:27\n+   |\n+LL |     (Ok::<(), ()>(()), 0, Ok::<(), ()>(()), 5);\n+   |                           ^^^^^^^^^^^^^^^^\n+   |\n+   = note: this `Result` may be an `Err` variant, which should be handled\n+\n+error: aborting due to 3 previous errors\n "}]}