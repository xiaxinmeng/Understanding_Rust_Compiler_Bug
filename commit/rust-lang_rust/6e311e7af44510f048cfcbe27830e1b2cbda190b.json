{"sha": "6e311e7af44510f048cfcbe27830e1b2cbda190b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZlMzExZTdhZjQ0NTEwZjA0OGNmY2JlMjc4MzBlMWIyY2JkYTE5MGI=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-08-05T07:46:59Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-08-05T07:56:29Z"}, "message": "Make C_u8 take a u8 instead of a usize value", "tree": {"sha": "a4c761294dd3a1194033d74f23894e792f56bb29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a4c761294dd3a1194033d74f23894e792f56bb29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e311e7af44510f048cfcbe27830e1b2cbda190b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e311e7af44510f048cfcbe27830e1b2cbda190b", "html_url": "https://github.com/rust-lang/rust/commit/6e311e7af44510f048cfcbe27830e1b2cbda190b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e311e7af44510f048cfcbe27830e1b2cbda190b/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8228240ca88371150314d5474b6795c5410c7a8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8228240ca88371150314d5474b6795c5410c7a8e", "html_url": "https://github.com/rust-lang/rust/commit/8228240ca88371150314d5474b6795c5410c7a8e"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "fb3afd16ea0f43499e4b448f7a216c2c68f9c878", "filename": "src/librustc_trans/trans/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e311e7af44510f048cfcbe27830e1b2cbda190b/src%2Flibrustc_trans%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e311e7af44510f048cfcbe27830e1b2cbda190b/src%2Flibrustc_trans%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2F_match.rs?ref=6e311e7af44510f048cfcbe27830e1b2cbda190b", "patch": "@@ -1670,7 +1670,7 @@ pub fn store_local<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n                     // Dummy-locals start out uninitialized, so set their\n                     // drop-flag hints (if any) to \"moved.\"\n                     if let Some(hint) = kind.dropflag_hint(bcx) {\n-                        let moved_hint = adt::DTOR_MOVED_HINT as usize;\n+                        let moved_hint = adt::DTOR_MOVED_HINT;\n                         debug!(\"store moved_hint={} for hint={:?}, uninitialized dummy\",\n                                moved_hint, hint);\n                         Store(bcx, C_u8(bcx.fcx.ccx, moved_hint), hint.to_value().value());"}, {"sha": "e79618893c7f8190aa085fab91c451be62375a0f", "filename": "src/librustc_trans/trans/adt.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6e311e7af44510f048cfcbe27830e1b2cbda190b/src%2Flibrustc_trans%2Ftrans%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e311e7af44510f048cfcbe27830e1b2cbda190b/src%2Flibrustc_trans%2Ftrans%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fadt.rs?ref=6e311e7af44510f048cfcbe27830e1b2cbda190b", "patch": "@@ -983,15 +983,15 @@ pub fn trans_set_discr<'blk, 'tcx>(bcx: Block<'blk, 'tcx>, r: &Repr<'tcx>,\n             if dtor_active(dtor) {\n                 let ptr = trans_field_ptr(bcx, r, val, discr,\n                                           cases[discr as usize].fields.len() - 2);\n-                Store(bcx, C_u8(bcx.ccx(), DTOR_NEEDED as usize), ptr);\n+                Store(bcx, C_u8(bcx.ccx(), DTOR_NEEDED), ptr);\n             }\n             Store(bcx, C_integral(ll_inttype(bcx.ccx(), ity), discr as u64, true),\n                   GEPi(bcx, val, &[0, 0]));\n         }\n         Univariant(ref st, dtor) => {\n             assert_eq!(discr, 0);\n             if dtor_active(dtor) {\n-                Store(bcx, C_u8(bcx.ccx(), DTOR_NEEDED as usize),\n+                Store(bcx, C_u8(bcx.ccx(), DTOR_NEEDED),\n                     GEPi(bcx, val, &[0, st.fields.len() - 1]));\n             }\n         }"}, {"sha": "adc678f2c0e20646d17e9fc8326d2249e7d6022e", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6e311e7af44510f048cfcbe27830e1b2cbda190b/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e311e7af44510f048cfcbe27830e1b2cbda190b/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=6e311e7af44510f048cfcbe27830e1b2cbda190b", "patch": "@@ -999,7 +999,7 @@ fn memfill<'a, 'tcx>(b: &Builder<'a, 'tcx>, llptr: ValueRef, ty: Ty<'tcx>, byte:\n \n     let llintrinsicfn = ccx.get_intrinsic(&intrinsic_key);\n     let llptr = b.pointercast(llptr, Type::i8(ccx).ptr_to());\n-    let llzeroval = C_u8(ccx, byte as usize);\n+    let llzeroval = C_u8(ccx, byte);\n     let size = machine::llsize_of(ccx, llty);\n     let align = C_i32(ccx, type_of::align_of(ccx, ty) as i32);\n     let volatile = C_bool(ccx, false);\n@@ -1296,7 +1296,7 @@ pub fn init_function<'a, 'tcx>(fcx: &'a FunctionContext<'a, 'tcx>,\n         for &info in fragment_infos {\n \n             let make_datum = |id| {\n-                let init_val = C_u8(fcx.ccx, adt::DTOR_NEEDED_HINT as usize);\n+                let init_val = C_u8(fcx.ccx, adt::DTOR_NEEDED_HINT);\n                 let llname = &format!(\"dropflag_hint_{}\", id);\n                 debug!(\"adding hint {}\", llname);\n                 let ptr = alloc_ty(entry_bcx, tcx.types.u8, llname);"}, {"sha": "0de870de7c6d409aaa9311f29d71c764ae6747c7", "filename": "src/librustc_trans/trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e311e7af44510f048cfcbe27830e1b2cbda190b/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e311e7af44510f048cfcbe27830e1b2cbda190b/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs?ref=6e311e7af44510f048cfcbe27830e1b2cbda190b", "patch": "@@ -807,7 +807,7 @@ impl AsU64 for u64  { fn as_u64(self) -> u64 { self as u64 }}\n impl AsU64 for u32  { fn as_u64(self) -> u64 { self as u64 }}\n impl AsU64 for usize { fn as_u64(self) -> u64 { self as u64 }}\n \n-pub fn C_u8(ccx: &CrateContext, i: usize) -> ValueRef {\n+pub fn C_u8(ccx: &CrateContext, i: u8) -> ValueRef {\n     C_integral(Type::i8(ccx), i as u64, false)\n }\n "}, {"sha": "2c8123412cddc451530bd6a6a5974a2af0c40c51", "filename": "src/librustc_trans/trans/datum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e311e7af44510f048cfcbe27830e1b2cbda190b/src%2Flibrustc_trans%2Ftrans%2Fdatum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e311e7af44510f048cfcbe27830e1b2cbda190b/src%2Flibrustc_trans%2Ftrans%2Fdatum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdatum.rs?ref=6e311e7af44510f048cfcbe27830e1b2cbda190b", "patch": "@@ -409,7 +409,7 @@ impl KindOps for Lvalue {\n             //    aware of drop-hint won't bother calling the\n             //    drop-glue itself.\n             if let Some(hint_datum) = self.drop_flag_info.hint_datum(bcx) {\n-                let moved_hint_byte = adt::DTOR_MOVED_HINT as usize;\n+                let moved_hint_byte = adt::DTOR_MOVED_HINT;\n                 let hint_llval = hint_datum.to_value().value();\n                 Store(bcx, C_u8(bcx.fcx.ccx, moved_hint_byte), hint_llval);\n             }"}, {"sha": "01173b7f6dff30cfbef38cde7dcdec2d4456e134", "filename": "src/librustc_trans/trans/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e311e7af44510f048cfcbe27830e1b2cbda190b/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e311e7af44510f048cfcbe27830e1b2cbda190b/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs?ref=6e311e7af44510f048cfcbe27830e1b2cbda190b", "patch": "@@ -1021,7 +1021,7 @@ fn trans_rvalue_stmt_unadjusted<'blk, 'tcx>(bcx: Block<'blk, 'tcx>,\n                 //    its drop-hint (if any) says \"initialized.\"\n                 if let Some(hint_val) = opt_hint_val {\n                     let hint_llval = hint_val.value();\n-                    let drop_needed = C_u8(bcx.fcx.ccx, adt::DTOR_NEEDED_HINT as usize);\n+                    let drop_needed = C_u8(bcx.fcx.ccx, adt::DTOR_NEEDED_HINT);\n                     Store(bcx, drop_needed, hint_llval);\n                 }\n                 src_datum.store_to(bcx, dst_datum.val)"}]}