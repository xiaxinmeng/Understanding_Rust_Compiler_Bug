{"sha": "c393db67baf3a15ec61351ffb0e3811e07b8a467", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzOTNkYjY3YmFmM2ExNWVjNjEzNTFmZmIwZTM4MTFlMDdiOGE0Njc=", "commit": {"author": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2018-03-22T00:44:21Z"}, "committer": {"name": "Taylor Cramer", "email": "cramertj@google.com", "date": "2018-03-26T05:39:38Z"}, "message": "Stabilize universal_impl_trait", "tree": {"sha": "7788c1c955c4e0d056536409cc52a4f39cdf3187", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7788c1c955c4e0d056536409cc52a4f39cdf3187"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c393db67baf3a15ec61351ffb0e3811e07b8a467", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c393db67baf3a15ec61351ffb0e3811e07b8a467", "html_url": "https://github.com/rust-lang/rust/commit/c393db67baf3a15ec61351ffb0e3811e07b8a467", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c393db67baf3a15ec61351ffb0e3811e07b8a467/comments", "author": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cramertj", "id": 5963049, "node_id": "MDQ6VXNlcjU5NjMwNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5963049?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cramertj", "html_url": "https://github.com/cramertj", "followers_url": "https://api.github.com/users/cramertj/followers", "following_url": "https://api.github.com/users/cramertj/following{/other_user}", "gists_url": "https://api.github.com/users/cramertj/gists{/gist_id}", "starred_url": "https://api.github.com/users/cramertj/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cramertj/subscriptions", "organizations_url": "https://api.github.com/users/cramertj/orgs", "repos_url": "https://api.github.com/users/cramertj/repos", "events_url": "https://api.github.com/users/cramertj/events{/privacy}", "received_events_url": "https://api.github.com/users/cramertj/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "445fafaa4b95fdde04751aa523b9e9f06e2c06ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/445fafaa4b95fdde04751aa523b9e9f06e2c06ea", "html_url": "https://github.com/rust-lang/rust/commit/445fafaa4b95fdde04751aa523b9e9f06e2c06ea"}], "stats": {"total": 123, "additions": 15, "deletions": 108}, "files": [{"sha": "6b3c5e92720df6e9ef6ee001f4676c96dadadf98", "filename": "src/doc/unstable-book/src/language-features/universal-impl-trait.md", "status": "removed", "additions": 0, "deletions": 32, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/445fafaa4b95fdde04751aa523b9e9f06e2c06ea/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Funiversal-impl-trait.md", "raw_url": "https://github.com/rust-lang/rust/raw/445fafaa4b95fdde04751aa523b9e9f06e2c06ea/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Funiversal-impl-trait.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Funiversal-impl-trait.md?ref=445fafaa4b95fdde04751aa523b9e9f06e2c06ea", "patch": "@@ -1,32 +0,0 @@\n-# `universal_impl_trait`\n-\n-The tracking issue for this feature is: [#34511].\n-\n-[#34511]: https://github.com/rust-lang/rust/issues/34511\n-\n---------------------\n-\n-The `universal_impl_trait` feature extends the [`conservative_impl_trait`]\n-feature allowing the `impl Trait` syntax in arguments (universal\n-quantification).\n-\n-[`conservative_impl_trait`]: ./language-features/conservative-impl-trait.html\n-\n-## Examples\n-\n-```rust\n-#![feature(universal_impl_trait)]\n-use std::ops::Not;\n-\n-fn any_zero(values: impl IntoIterator<Item = i32>) -> bool {\n-    for val in values { if val == 0 { return true; } }\n-    false\n-}\n-\n-fn main() {\n-    let test1 = -5..;\n-    let test2 = vec![1, 8, 42, -87, 60];\n-    assert!(any_zero(test1));\n-    assert!(bool::not(any_zero(test2)));\n-}\n-```"}, {"sha": "2ae102fbef0306565a4302ebd0673de8970ac03b", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -1143,17 +1143,6 @@ impl<'a> LoweringContext<'a> {\n                         )\n                     }\n                     ImplTraitContext::Universal(def_id) => {\n-                        let has_feature = self.sess.features_untracked().universal_impl_trait;\n-                        if !t.span.allows_unstable() && !has_feature {\n-                            emit_feature_err(\n-                                &self.sess.parse_sess,\n-                                \"universal_impl_trait\",\n-                                t.span,\n-                                GateIssue::Language,\n-                                \"`impl Trait` in argument position is experimental\",\n-                            );\n-                        }\n-\n                         let def_node_id = self.next_id().node_id;\n \n                         // Add a definition for the in-band TyParam"}, {"sha": "d133352de07850f9ce20a3235b09440820cbcb98", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -70,7 +70,7 @@\n #![feature(specialization)]\n #![feature(unboxed_closures)]\n #![feature(underscore_lifetimes)]\n-#![feature(universal_impl_trait)]\n+#![cfg_attr(stage0, feature(universal_impl_trait))]\n #![feature(trace_macros)]\n #![feature(trusted_len)]\n #![feature(catch_expr)]"}, {"sha": "05bd3ae845fb05486fa0a958a92c1fec0bc985fe", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -34,7 +34,7 @@\n #![feature(underscore_lifetimes)]\n #![feature(macro_vis_matcher)]\n #![feature(allow_internal_unstable)]\n-#![feature(universal_impl_trait)]\n+#![cfg_attr(stage0, feature(universal_impl_trait))]\n \n #![cfg_attr(unix, feature(libc))]\n #![cfg_attr(test, feature(test))]"}, {"sha": "1f882676f61aa87ee64677f3ec5c2acc1d8c04c2", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -4600,7 +4600,6 @@ This error indicates that there is a mismatch between generic parameters and\n impl Trait parameters in a trait declaration versus its impl.\n \n ```compile_fail,E0643\n-#![feature(universal_impl_trait)]\n trait Foo {\n     fn foo(&self, _: &impl Iterator);\n }"}, {"sha": "db900ed6e35544b4ab304242ad1bd13cdbf56361", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -279,9 +279,6 @@ declare_features! (\n     // Allows `impl Trait` in function return types.\n     (active, conservative_impl_trait, \"1.12.0\", Some(34511), None),\n \n-    // Allows `impl Trait` in function arguments.\n-    (active, universal_impl_trait, \"1.23.0\", Some(34511), None),\n-\n     // Allows exhaustive pattern matching on types that contain uninhabited types.\n     (active, exhaustive_patterns, \"1.13.0\", None, None),\n \n@@ -566,6 +563,8 @@ declare_features! (\n     // Copy/Clone closures (RFC 2132)\n     (accepted, clone_closures, \"1.26.0\", Some(44490), None),\n     (accepted, copy_closures, \"1.26.0\", Some(44490), None),\n+    // Allows `impl Trait` in function arguments.\n+    (accepted, universal_impl_trait, \"1.26.0\", Some(34511), None),\n );\n \n // If you change this, please modify src/doc/unstable-book as well. You must"}, {"sha": "23549918ff1b3b4971b811267df5d50e722d0313", "filename": "src/test/compile-fail/impl-trait/impl-generic-mismatch-ab.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fcompile-fail%2Fimpl-trait%2Fimpl-generic-mismatch-ab.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fcompile-fail%2Fimpl-trait%2Fimpl-generic-mismatch-ab.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimpl-trait%2Fimpl-generic-mismatch-ab.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(universal_impl_trait)]\n use std::fmt::Debug;\n \n trait Foo {"}, {"sha": "eea7ca20957804739792ebefe4e44dbc52905658", "filename": "src/test/compile-fail/impl-trait/impl-generic-mismatch.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fcompile-fail%2Fimpl-trait%2Fimpl-generic-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fcompile-fail%2Fimpl-trait%2Fimpl-generic-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimpl-trait%2Fimpl-generic-mismatch.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(universal_impl_trait)]\n use std::fmt::Debug;\n \n trait Foo {"}, {"sha": "c93bcf7f390ee965d6ffa517c4133b6b5938cc27", "filename": "src/test/compile-fail/impl-trait/where-allowed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fcompile-fail%2Fimpl-trait%2Fwhere-allowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fcompile-fail%2Fimpl-trait%2Fwhere-allowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fimpl-trait%2Fwhere-allowed.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -10,7 +10,7 @@\n \n //! A simple test for testing many permutations of allowedness of\n //! impl Trait\n-#![feature(conservative_impl_trait, universal_impl_trait, dyn_trait)]\n+#![feature(conservative_impl_trait, dyn_trait)]\n use std::fmt::Debug;\n \n // Allowed"}, {"sha": "d1e2b471d9ae6f65cfeb2e46793a267030b874cd", "filename": "src/test/run-pass/impl-trait/example-calendar.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fexample-calendar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fexample-calendar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait%2Fexample-calendar.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -12,7 +12,6 @@\n //[nll] compile-flags: -Znll -Zborrowck=mir\n \n #![feature(conservative_impl_trait,\n-           universal_impl_trait,\n            fn_traits,\n            step_trait,\n            unboxed_closures,"}, {"sha": "c589e23f95041ad3e5b90e7792c483cc6bf4325f", "filename": "src/test/run-pass/impl-trait/lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait%2Flifetimes.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(conservative_impl_trait, underscore_lifetimes, universal_impl_trait)]\n+#![feature(conservative_impl_trait, underscore_lifetimes)]\n #![allow(warnings)]\n \n use std::fmt::Debug;"}, {"sha": "9fc74757da0bf3ce5e1c38c96af2abd55adecb90", "filename": "src/test/run-pass/impl-trait/universal_hrtb_anon.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_hrtb_anon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_hrtb_anon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_hrtb_anon.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(universal_impl_trait)]\n-\n fn hrtb(f: impl Fn(&u32) -> u32) -> u32 {\n     f(&22) + f(&44)\n }"}, {"sha": "3aefc79ebf78245717ea3f26a74befed049a9bba", "filename": "src/test/run-pass/impl-trait/universal_hrtb_named.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_hrtb_named.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_hrtb_named.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_hrtb_named.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(universal_impl_trait)]\n-\n fn hrtb(f: impl for<'a> Fn(&'a u32) -> &'a u32) -> u32 {\n     f(&22) + f(&44)\n }"}, {"sha": "57452a2e475c31b0b8a59946fc20872597400c72", "filename": "src/test/run-pass/impl-trait/universal_in_adt_in_parameters.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_in_adt_in_parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_in_adt_in_parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_in_adt_in_parameters.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(universal_impl_trait)]\n use std::fmt::Display;\n \n fn check_display_eq(iter: &Vec<impl Display>) {"}, {"sha": "fea946f12584e7b4add9d2988c60422bde502ed5", "filename": "src/test/run-pass/impl-trait/universal_in_impl_trait_in_parameters.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_in_impl_trait_in_parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_in_impl_trait_in_parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_in_impl_trait_in_parameters.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(universal_impl_trait)]\n use std::fmt::Display;\n \n fn check_display_eq(iter: impl IntoIterator<Item = impl Display>) {"}, {"sha": "d3611e02e025bf36fa797f1a67946355e62fccfa", "filename": "src/test/run-pass/impl-trait/universal_in_trait_defn_parameters.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_in_trait_defn_parameters.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_in_trait_defn_parameters.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_in_trait_defn_parameters.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(universal_impl_trait)]\n-\n use std::fmt::Debug;\n \n trait InTraitDefnParameters {"}, {"sha": "594207feb09a44908135b2b3f9213822bb434bdc", "filename": "src/test/run-pass/impl-trait/universal_multiple_bounds.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_multiple_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_multiple_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait%2Funiversal_multiple_bounds.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(universal_impl_trait)]\n-\n use std::fmt::Display;\n \n fn foo(f: impl Display + Clone) -> String {"}, {"sha": "b5b73675ca72411a10b697d4bc98066d865e8f61", "filename": "src/test/run-pass/in-band-lifetimes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fin-band-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fin-band-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fin-band-lifetimes.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #![allow(warnings)]\n-#![feature(in_band_lifetimes, universal_impl_trait, conservative_impl_trait)]\n+#![feature(in_band_lifetimes, conservative_impl_trait)]\n \n fn foo(x: &'x u8) -> &'x u8 { x }\n fn foo2(x: &'a u8, y: &u8) -> &'a u8 { x }"}, {"sha": "876b8c0a1d3820984bfc5b2b44437117086592b4", "filename": "src/test/run-pass/issue-46959.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fissue-46959.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frun-pass%2Fissue-46959.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-46959.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(universal_impl_trait)]\n #![feature(conservative_impl_trait)]\n #![deny(non_camel_case_types)]\n "}, {"sha": "ce09f62a552d762cdc8bcb5cae00fe5520f1dd23", "filename": "src/test/rustdoc/issue-46976.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frustdoc%2Fissue-46976.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Frustdoc%2Fissue-46976.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-46976.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -8,5 +8,4 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(universal_impl_trait)]\n pub fn ice(f: impl Fn()) {}"}, {"sha": "e5bdf3a42eb3e6b0d1ad5a170830d258833125aa", "filename": "src/test/ui/feature-gate-universal.rs", "status": "removed", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/445fafaa4b95fdde04751aa523b9e9f06e2c06ea/src%2Ftest%2Fui%2Ffeature-gate-universal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/445fafaa4b95fdde04751aa523b9e9f06e2c06ea/src%2Ftest%2Fui%2Ffeature-gate-universal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-universal.rs?ref=445fafaa4b95fdde04751aa523b9e9f06e2c06ea", "patch": "@@ -1,16 +0,0 @@\n-// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// gate-test-universal_impl_trait\n-\n-fn foo(x: impl std::fmt::Debug) { print!(\"{:?}\", x); }\n-//~^ ERROR `impl Trait` in argument position is experimental\n-\n-fn main() {}"}, {"sha": "dc1a6b29c72c6d9192f7ecf3eaba3716c92ecd94", "filename": "src/test/ui/feature-gate-universal.stderr", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/445fafaa4b95fdde04751aa523b9e9f06e2c06ea/src%2Ftest%2Fui%2Ffeature-gate-universal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/445fafaa4b95fdde04751aa523b9e9f06e2c06ea/src%2Ftest%2Fui%2Ffeature-gate-universal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gate-universal.stderr?ref=445fafaa4b95fdde04751aa523b9e9f06e2c06ea", "patch": "@@ -1,11 +0,0 @@\n-error[E0658]: `impl Trait` in argument position is experimental (see issue #34511)\n-  --> $DIR/feature-gate-universal.rs:13:11\n-   |\n-LL | fn foo(x: impl std::fmt::Debug) { print!(\"{:?}\", x); }\n-   |           ^^^^^^^^^^^^^^^^^^^^\n-   |\n-   = help: add #![feature(universal_impl_trait)] to the crate attributes to enable\n-\n-error: aborting due to previous error\n-\n-For more information about this error, try `rustc --explain E0658`."}, {"sha": "6a62eb36c303c96265e5d288ce224d0fb3e6d8f7", "filename": "src/test/ui/impl-trait/universal-mismatched-type.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal-mismatched-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal-mismatched-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal-mismatched-type.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(universal_impl_trait)]\n-\n use std::fmt::Debug;\n \n fn foo(x: impl Debug) -> String {"}, {"sha": "031db511ff30d7ed0db7dae93c14df58a9468739", "filename": "src/test/ui/impl-trait/universal-mismatched-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal-mismatched-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal-mismatched-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal-mismatched-type.stderr?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: mismatched types\n-  --> $DIR/universal-mismatched-type.rs:16:5\n+  --> $DIR/universal-mismatched-type.rs:14:5\n    |\n LL | fn foo(x: impl Debug) -> String {\n    |                          ------ expected `std::string::String` because of return type"}, {"sha": "5ecef1fee65d11bc314291b25617fb557d6d00f8", "filename": "src/test/ui/impl-trait/universal-two-impl-traits.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal-two-impl-traits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal-two-impl-traits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal-two-impl-traits.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(universal_impl_trait)]\n-\n use std::fmt::Debug;\n \n fn foo(x: impl Debug, y: impl Debug) -> String {"}, {"sha": "ed406895fc699bd4c193f48846c95db44785ad4f", "filename": "src/test/ui/impl-trait/universal-two-impl-traits.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal-two-impl-traits.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal-two-impl-traits.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal-two-impl-traits.stderr?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -1,5 +1,5 @@\n error[E0308]: mismatched types\n-  --> $DIR/universal-two-impl-traits.rs:17:9\n+  --> $DIR/universal-two-impl-traits.rs:15:9\n    |\n LL |     a = y; //~ ERROR mismatched\n    |         ^ expected type parameter, found a different type parameter"}, {"sha": "a5e948223fb1c837021e7555e36224b42ac8cac2", "filename": "src/test/ui/impl-trait/universal_wrong_bounds.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(universal_impl_trait)]\n-\n use std::fmt::Display;\n \n fn foo(f: impl Display + Clone) -> String {"}, {"sha": "02ac4707bc555778c8d9db47857bc6a67b4d365a", "filename": "src/test/ui/impl-trait/universal_wrong_bounds.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Funiversal_wrong_bounds.stderr?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -1,11 +1,11 @@\n error[E0425]: cannot find function `wants_clone` in this scope\n-  --> $DIR/universal_wrong_bounds.rs:18:5\n+  --> $DIR/universal_wrong_bounds.rs:16:5\n    |\n LL |     wants_clone(f); //~ ERROR cannot find\n    |     ^^^^^^^^^^^ did you mean `wants_cone`?\n \n error[E0405]: cannot find trait `Debug` in this scope\n-  --> $DIR/universal_wrong_bounds.rs:21:24\n+  --> $DIR/universal_wrong_bounds.rs:19:24\n    |\n LL | fn wants_debug(g: impl Debug) { } //~ ERROR cannot find\n    |                        ^^^^^ not found in this scope\n@@ -15,7 +15,7 @@ LL | use std::fmt::Debug;\n    |\n \n error[E0405]: cannot find trait `Debug` in this scope\n-  --> $DIR/universal_wrong_bounds.rs:22:26\n+  --> $DIR/universal_wrong_bounds.rs:20:26\n    |\n LL | fn wants_display(g: impl Debug) { } //~ ERROR cannot find\n    |                          ^^^^^ not found in this scope"}, {"sha": "05e88bf848d46f7b5915712a7232759010d8aa5e", "filename": "src/test/ui/impl_trait_projections.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fimpl_trait_projections.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fimpl_trait_projections.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl_trait_projections.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -7,7 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(dyn_trait, conservative_impl_trait, universal_impl_trait)]\n+#![feature(dyn_trait, conservative_impl_trait)]\n \n use std::fmt::Debug;\n use std::option;"}, {"sha": "c1b268eac701c57bf14e1d6f708fc89ae16cb2fd", "filename": "src/test/ui/in-band-lifetimes/E0687_where.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fin-band-lifetimes%2FE0687_where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fin-band-lifetimes%2FE0687_where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2FE0687_where.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #![allow(warnings)]\n-#![feature(in_band_lifetimes, universal_impl_trait)]\n+#![feature(in_band_lifetimes)]\n \n fn bar<F>(x: &F) where F: Fn(&'a u32) {} //~ ERROR must be explicitly\n "}, {"sha": "0fb1222d7973e5e76efb633bf68297a3e1112aa1", "filename": "src/test/ui/nested_impl_trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fnested_impl_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c393db67baf3a15ec61351ffb0e3811e07b8a467/src%2Ftest%2Fui%2Fnested_impl_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnested_impl_trait.rs?ref=c393db67baf3a15ec61351ffb0e3811e07b8a467", "patch": "@@ -7,7 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(conservative_impl_trait, universal_impl_trait)]\n+#![feature(conservative_impl_trait)]\n \n use std::fmt::Debug;\n "}]}