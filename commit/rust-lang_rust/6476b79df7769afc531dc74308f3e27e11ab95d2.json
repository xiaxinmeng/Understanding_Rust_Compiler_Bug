{"sha": "6476b79df7769afc531dc74308f3e27e11ab95d2", "node_id": "C_kwDOAAsO6NoAKDY0NzZiNzlkZjc3NjlhZmM1MzFkYzc0MzA4ZjNlMjdlMTFhYjk1ZDI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-04-28T05:34:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-28T05:34:04Z"}, "message": "Rollup merge of #110918 - ChrisDenton:on-error-resume-next, r=cuviper\n\n`remove_dir_all`: try deleting the directory even if `FILE_LIST_DIRECTORY` access is denied\n\nIf opening a directory with `FILE_LIST_DIRECTORY` access fails then we should try opening without requesting that access. We may still be able to delete it if it's empty or a link.\n\nFixes https://github.com/rust-lang/cargo/issues/12042", "tree": {"sha": "06e38dde6d568cfbd36bd46ae43ae7785352c59c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/06e38dde6d568cfbd36bd46ae43ae7785352c59c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6476b79df7769afc531dc74308f3e27e11ab95d2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkS1rMCRBK7hj4Ov3rIwAAwC4IAIL+WOsX7hGGkAEVzi1jzyTl\nlM4QdxhHPCGcJ6sLDU5o6X36269JfxnkihZc3+A3kNl3fMfPooyJhhQLTxefWGha\nkvoMcTU/DshC3sk4FSvcnY8tVG/NJt/oM+0OmZLy9UAfqJqkyJdJ8MumD0Vfyjej\nB3K7/HeKYydSrRj8IriIdaNMvT0Rx5TEq0oHqhLW4io2il/f+/COr3PNY8U8kabE\n/zzzEE5v+Ln44klMo7rQBtXGH48qw+mijdY3PYoBjc5YUUGrLjVoNpZv+UTwe4NF\nBiKEI2TEi6IQLNZe87Je4FVZp8SMY34pKi6dK5V6lyckEmvaykiRgSICcglQmuc=\n=2ulq\n-----END PGP SIGNATURE-----\n", "payload": "tree 06e38dde6d568cfbd36bd46ae43ae7785352c59c\nparent 901bab70d34748379331f1c1f069f57029f46b5e\nparent ddff7f0e50c1184c5cfa1a54c7bd2b6848ed85d6\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1682660044 +0200\ncommitter GitHub <noreply@github.com> 1682660044 +0200\n\nRollup merge of #110918 - ChrisDenton:on-error-resume-next, r=cuviper\n\n`remove_dir_all`: try deleting the directory even if `FILE_LIST_DIRECTORY` access is denied\n\nIf opening a directory with `FILE_LIST_DIRECTORY` access fails then we should try opening without requesting that access. We may still be able to delete it if it's empty or a link.\n\nFixes https://github.com/rust-lang/cargo/issues/12042\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6476b79df7769afc531dc74308f3e27e11ab95d2", "html_url": "https://github.com/rust-lang/rust/commit/6476b79df7769afc531dc74308f3e27e11ab95d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6476b79df7769afc531dc74308f3e27e11ab95d2/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "901bab70d34748379331f1c1f069f57029f46b5e", "url": "https://api.github.com/repos/rust-lang/rust/commits/901bab70d34748379331f1c1f069f57029f46b5e", "html_url": "https://github.com/rust-lang/rust/commit/901bab70d34748379331f1c1f069f57029f46b5e"}, {"sha": "ddff7f0e50c1184c5cfa1a54c7bd2b6848ed85d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ddff7f0e50c1184c5cfa1a54c7bd2b6848ed85d6", "html_url": "https://github.com/rust-lang/rust/commit/ddff7f0e50c1184c5cfa1a54c7bd2b6848ed85d6"}], "stats": {"total": 41, "additions": 22, "deletions": 19}, "files": [{"sha": "8ed62cdddcd9c33559cf0702300022575747356e", "filename": "library/std/src/sys/windows/fs.rs", "status": "modified", "additions": 22, "deletions": 19, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/6476b79df7769afc531dc74308f3e27e11ab95d2/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6476b79df7769afc531dc74308f3e27e11ab95d2/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Ffs.rs?ref=6476b79df7769afc531dc74308f3e27e11ab95d2", "patch": "@@ -1132,26 +1132,29 @@ fn remove_dir_all_iterative(f: &File, delete: fn(&File) -> io::Result<()>) -> io\n                     &dir,\n                     &name,\n                     c::SYNCHRONIZE | c::DELETE | c::FILE_LIST_DIRECTORY,\n-                )?;\n-                dirlist.push(child_dir);\n-            } else {\n-                for i in 1..=MAX_RETRIES {\n-                    let result = open_link_no_reparse(&dir, &name, c::SYNCHRONIZE | c::DELETE);\n-                    match result {\n-                        Ok(f) => delete(&f)?,\n-                        // Already deleted, so skip.\n-                        Err(e) if e.kind() == io::ErrorKind::NotFound => break,\n-                        // Retry a few times if the file is locked or a delete is already in progress.\n-                        Err(e)\n-                            if i < MAX_RETRIES\n-                                && (e.raw_os_error() == Some(c::ERROR_DELETE_PENDING as _)\n-                                    || e.raw_os_error()\n-                                        == Some(c::ERROR_SHARING_VIOLATION as _)) => {}\n-                        // Otherwise return the error.\n-                        Err(e) => return Err(e),\n-                    }\n-                    thread::yield_now();\n+                );\n+                // On success, add the handle to the queue.\n+                // If opening the directory fails we treat it the same as a file\n+                if let Ok(child_dir) = child_dir {\n+                    dirlist.push(child_dir);\n+                    continue;\n+                }\n+            }\n+            for i in 1..=MAX_RETRIES {\n+                let result = open_link_no_reparse(&dir, &name, c::SYNCHRONIZE | c::DELETE);\n+                match result {\n+                    Ok(f) => delete(&f)?,\n+                    // Already deleted, so skip.\n+                    Err(e) if e.kind() == io::ErrorKind::NotFound => break,\n+                    // Retry a few times if the file is locked or a delete is already in progress.\n+                    Err(e)\n+                        if i < MAX_RETRIES\n+                            && (e.raw_os_error() == Some(c::ERROR_DELETE_PENDING as _)\n+                                || e.raw_os_error() == Some(c::ERROR_SHARING_VIOLATION as _)) => {}\n+                    // Otherwise return the error.\n+                    Err(e) => return Err(e),\n                 }\n+                thread::yield_now();\n             }\n         }\n         // If there were no more files then delete the directory."}]}