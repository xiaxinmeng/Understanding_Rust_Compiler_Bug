{"sha": "7ba37adbfdcbc2ca3ca220938c85400512cace97", "node_id": "C_kwDOAAsO6NoAKDdiYTM3YWRiZmRjYmMyY2EzY2EyMjA5MzhjODU0MDA1MTJjYWNlOTc", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev+love@gmail.com", "date": "2022-12-06T03:48:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-06T03:48:53Z"}, "message": "Rollup merge of #105315 - fmease:norm-subst-iat, r=compiler-errors\n\nNormalize inherent associated types after substitution\n\nFixes #105314.\n\nr? ````@cjgillot```` (#105224)\n````@rustbot```` label F-inherent_associated_types", "tree": {"sha": "d75401f8e8aa93549d584e5726d0b548e36e6728", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d75401f8e8aa93549d584e5726d0b548e36e6728"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ba37adbfdcbc2ca3ca220938c85400512cace97", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjjrulCRBK7hj4Ov3rIwAAQIoIAJBsj3MhNEPfDZ2sSjvK5UTW\nM/ojnCgKNXNbw0fM5RDwdTWN5JXJ+VM04X5iE58vgLZZNSwj8oUjNNjurN6WrpPd\nshm4qxrfxptaC4uXXSd7VT2SE56/dgasRJcKlBt/G0HuzUu0HaumE2vcUNRR1k2B\nYWyZinFGz0HCgKvy/17GNmFjLLVgLQkiKh/HgLe6If85M4kh2YkUTmJ6OvugltNo\nNbRfvEVw+nJhvMScr9u1vIL68djbm2E5Ed2ThsC52eJfG7fSpMY6HJdIT+CZ7dYs\n4vr4LbMe9Vsh7L7GGWYLusO6cbv4Jhk69kzF/usCQ112/Am3czfOw6ydaTD06SY=\n=zVKw\n-----END PGP SIGNATURE-----\n", "payload": "tree d75401f8e8aa93549d584e5726d0b548e36e6728\nparent eeb1bbc64103a3c6f47bb31cef051ad122147dfa\nparent d5cb5fb1853952c0e5377e86a09c0fcf5bf2a829\nauthor Yuki Okushi <huyuumi.dev+love@gmail.com> 1670298533 +0900\ncommitter GitHub <noreply@github.com> 1670298533 +0900\n\nRollup merge of #105315 - fmease:norm-subst-iat, r=compiler-errors\n\nNormalize inherent associated types after substitution\n\nFixes #105314.\n\nr? ````@cjgillot```` (#105224)\n````@rustbot```` label F-inherent_associated_types\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ba37adbfdcbc2ca3ca220938c85400512cace97", "html_url": "https://github.com/rust-lang/rust/commit/7ba37adbfdcbc2ca3ca220938c85400512cace97", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ba37adbfdcbc2ca3ca220938c85400512cace97/comments", "author": null, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eeb1bbc64103a3c6f47bb31cef051ad122147dfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/eeb1bbc64103a3c6f47bb31cef051ad122147dfa", "html_url": "https://github.com/rust-lang/rust/commit/eeb1bbc64103a3c6f47bb31cef051ad122147dfa"}, {"sha": "d5cb5fb1853952c0e5377e86a09c0fcf5bf2a829", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5cb5fb1853952c0e5377e86a09c0fcf5bf2a829", "html_url": "https://github.com/rust-lang/rust/commit/d5cb5fb1853952c0e5377e86a09c0fcf5bf2a829"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "66906b331da2ece663b3b06fb9883a144b5d474a", "filename": "compiler/rustc_hir_analysis/src/astconv/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7ba37adbfdcbc2ca3ca220938c85400512cace97/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ba37adbfdcbc2ca3ca220938c85400512cace97/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fastconv%2Fmod.rs?ref=7ba37adbfdcbc2ca3ca220938c85400512cace97", "patch": "@@ -1930,6 +1930,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                     adt_substs,\n                 );\n                 let ty = tcx.bound_type_of(assoc_ty_did).subst(tcx, item_substs);\n+                let ty = self.normalize_ty(span, ty);\n                 return Ok((ty, DefKind::AssocTy, assoc_ty_did));\n             }\n         }"}, {"sha": "50763ecddf99c34dc1a9447e7106675f5686945e", "filename": "src/test/ui/associated-inherent-types/normalize-projection-0.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7ba37adbfdcbc2ca3ca220938c85400512cace97/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fnormalize-projection-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ba37adbfdcbc2ca3ca220938c85400512cace97/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fnormalize-projection-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fnormalize-projection-0.rs?ref=7ba37adbfdcbc2ca3ca220938c85400512cace97", "patch": "@@ -0,0 +1,22 @@\n+// check-pass\n+\n+#![feature(inherent_associated_types)]\n+#![allow(incomplete_features)]\n+\n+struct S<T>(T);\n+\n+impl<T: O> S<T> {\n+    type P = <T as O>::P;\n+}\n+\n+trait O {\n+    type P;\n+}\n+\n+impl O for i32 {\n+    type P = String;\n+}\n+\n+fn main() {\n+    let _: S<i32>::P = String::new();\n+}"}, {"sha": "2f7b2551a03eced2c807406d1c922748196f513b", "filename": "src/test/ui/associated-inherent-types/normalize-projection-1.rs", "status": "added", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7ba37adbfdcbc2ca3ca220938c85400512cace97/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fnormalize-projection-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ba37adbfdcbc2ca3ca220938c85400512cace97/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fnormalize-projection-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-inherent-types%2Fnormalize-projection-1.rs?ref=7ba37adbfdcbc2ca3ca220938c85400512cace97", "patch": "@@ -0,0 +1,22 @@\n+// check-pass\n+\n+#![feature(inherent_associated_types)]\n+#![allow(incomplete_features)]\n+\n+struct S;\n+\n+impl S {\n+    type P<T: O> = <T as O>::P;\n+}\n+\n+trait O {\n+    type P;\n+}\n+\n+impl O for i32 {\n+    type P = String;\n+}\n+\n+fn main() {\n+    let _: S::P<i32> = String::new();\n+}"}]}