{"sha": "c4b180aa9ce0dc33143de75dfe9aade191689beb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0YjE4MGFhOWNlMGRjMzMxNDNkZTc1ZGZlOWFhZGUxOTE2ODliZWI=", "commit": {"author": {"name": "Chris Morgan", "email": "me@chrismorgan.info", "date": "2013-08-29T16:15:01Z"}, "committer": {"name": "Chris Morgan", "email": "me@chrismorgan.info", "date": "2013-09-03T16:34:23Z"}, "message": "Highlight everything in the prelude in Vim.\n\nThis is a rather more extensive change than the last, but *ever* so much\neasier to maintain reasonably, as there's then something to track\ndirectly.", "tree": {"sha": "8c773667ce46ef4ae089c6d3f33b2de36e5292c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c773667ce46ef4ae089c6d3f33b2de36e5292c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4b180aa9ce0dc33143de75dfe9aade191689beb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4b180aa9ce0dc33143de75dfe9aade191689beb", "html_url": "https://github.com/rust-lang/rust/commit/c4b180aa9ce0dc33143de75dfe9aade191689beb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4b180aa9ce0dc33143de75dfe9aade191689beb/comments", "author": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chris-morgan", "id": 392868, "node_id": "MDQ6VXNlcjM5Mjg2OA==", "avatar_url": "https://avatars.githubusercontent.com/u/392868?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chris-morgan", "html_url": "https://github.com/chris-morgan", "followers_url": "https://api.github.com/users/chris-morgan/followers", "following_url": "https://api.github.com/users/chris-morgan/following{/other_user}", "gists_url": "https://api.github.com/users/chris-morgan/gists{/gist_id}", "starred_url": "https://api.github.com/users/chris-morgan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chris-morgan/subscriptions", "organizations_url": "https://api.github.com/users/chris-morgan/orgs", "repos_url": "https://api.github.com/users/chris-morgan/repos", "events_url": "https://api.github.com/users/chris-morgan/events{/privacy}", "received_events_url": "https://api.github.com/users/chris-morgan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afbf908ff472f6557c01632bf531e2a21bd812c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/afbf908ff472f6557c01632bf531e2a21bd812c8", "html_url": "https://github.com/rust-lang/rust/commit/afbf908ff472f6557c01632bf531e2a21bd812c8"}], "stats": {"total": 104, "additions": 78, "deletions": 26}, "files": [{"sha": "a2229d4a5ae5ebc7358624c6c54b4676a912ea09", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 78, "deletions": 26, "changes": 104, "blob_url": "https://github.com/rust-lang/rust/blob/c4b180aa9ce0dc33143de75dfe9aade191689beb/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/c4b180aa9ce0dc33143de75dfe9aade191689beb/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=c4b180aa9ce0dc33143de75dfe9aade191689beb", "patch": "@@ -11,6 +11,8 @@ elseif exists(\"b:current_syntax\")\n   finish\n endif\n \n+\" Syntax definitions {{{1\n+\" Basic keywords {{{2\n syn keyword   rustConditional match if else\n syn keyword   rustOperator    as\n \n@@ -32,27 +34,80 @@ syn keyword   rustStorage     const mut ref static\n syn match     rustIdentifier  contains=rustIdentifierPrime \"\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\%([^[:cntrl:][:punct:][:space:]]\\|_\\)*\" display contained\n syn match     rustFuncName    \"\\%([^[:cntrl:][:space:][:punct:][:digit:]]\\|_\\)\\%([^[:cntrl:][:punct:][:space:]]\\|_\\)*\" display contained\n \n-\" reserved\n+\" Reserved (but not yet used) keywords {{{2\n syn keyword   rustKeyword     be yield typeof\n \n+\" Built-in types {{{2\n syn keyword   rustType        int uint float char bool u8 u16 u32 u64 f32\n syn keyword   rustType        f64 i8 i16 i32 i64 str Self\n-syn keyword   rustType        Option Either Result Ordering\n-\n-\" Types from libc\n-syn keyword   rustType        c_float c_double c_void FILE fpos_t\n-syn keyword   rustType        DIR dirent\n-syn keyword   rustType        c_char c_schar c_uchar\n-syn keyword   rustType        c_short c_ushort c_int c_uint c_long c_ulong\n-syn keyword   rustType        size_t ptrdiff_t clock_t time_t\n-syn keyword   rustType        c_longlong c_ulonglong intptr_t uintptr_t\n-syn keyword   rustType        off_t dev_t ino_t pid_t mode_t ssize_t\n-\n-syn keyword   rustTrait       Const Copy Freeze Send Owned Sized \" inherent traits\n-syn keyword   rustTrait       Clone DeepClone Decodable Encodable IterBytes Rand ToCStr ToStr ToStrConsume FromStr\n-syn keyword   rustTrait       ApproxEq Eq Ord TotalEq TotalOrd Num Ptr Equiv\n-syn keyword   rustTrait       Drop Add Sub Mul Div Rem Not Neg BitAnd BitOr\n-syn keyword   rustTrait       BitXor Shl Shr Index\n+\n+\" Things from the prelude (src/libstd/prelude.rs) {{{2\n+\" This section is just straight transformation of the contents of the prelude,\n+\" to make it easy to update.\n+\n+\" Core operators {{{3\n+syn keyword   rustEnum        Either\n+syn keyword   rustEnumVariant Left Right\n+syn keyword   rustTrait       Sized\n+syn keyword   rustTrait       Freeze Send\n+syn keyword   rustTrait       Add Sub Mul Div Rem Neg Not\n+syn keyword   rustTrait       BitAnd BitOr BitXor\n+syn keyword   rustTrait       Drop\n+syn keyword   rustTrait       Shl Shr Index\n+syn keyword   rustEnum        Option\n+syn keyword   rustEnumVariant Some None\n+syn keyword   rustEnum        Result\n+syn keyword   rustEnumVariant Ok Err\n+\n+\" Functions {{{3\n+\"syn keyword rustFunction print println\n+\"syn keyword rustFunction range\n+\n+\" Types and traits {{{3\n+syn keyword rustTrait ToCStr\n+syn keyword rustTrait Clone DeepClone\n+syn keyword rustTrait Eq ApproxEq Ord TotalEq TotalOrd Ordering Equiv\n+syn keyword rustEnumVariant Less Equal Greater\n+syn keyword rustTrait Char\n+syn keyword rustTrait Container Mutable Map MutableMap Set MutableSet\n+syn keyword rustTrait Hash\n+syn keyword rustTrait Times\n+syn keyword rustTrait FromIterator Extendable\n+syn keyword rustTrait Iterator DoubleEndedIterator RandomAccessIterator ClonableIterator\n+syn keyword rustTrait OrdIterator MutableDoubleEndedIterator\n+syn keyword rustTrait Num NumCast CheckedAdd CheckedSub CheckedMul\n+syn keyword rustTrait Orderable Signed Unsigned Round\n+syn keyword rustTrait Algebraic Trigonometric Exponential Hyperbolic\n+syn keyword rustTrait Integer Fractional Real RealExt\n+syn keyword rustTrait Bitwise BitCount Bounded\n+syn keyword rustTrait Primitive Int Float ToStrRadix\n+syn keyword rustTrait GenericPath\n+syn keyword rustTrait Path\n+syn keyword rustTrait PosixPath\n+syn keyword rustTrait WindowsPath\n+syn keyword rustTrait RawPtr\n+syn keyword rustTrait Ascii AsciiCast OwnedAsciiCast AsciiStr ToBytesConsume\n+syn keyword rustTrait Str StrVector StrSlice OwnedStr\n+syn keyword rustTrait FromStr\n+syn keyword rustTrait IterBytes\n+syn keyword rustTrait ToStr ToStrConsume\n+syn keyword rustTrait CopyableTuple ImmutableTuple\n+syn keyword rustTrait CloneableTuple1 ImmutableTuple1\n+syn keyword rustTrait CloneableTuple2 CloneableTuple3 CloneableTuple4 CloneableTuple5\n+syn keyword rustTrait CloneableTuple6 CloneableTuple7 CloneableTuple8 CloneableTuple9\n+syn keyword rustTrait CloneableTuple10 CloneableTuple11 CloneableTuple12\n+syn keyword rustTrait ImmutableTuple2 ImmutableTuple3 ImmutableTuple4 ImmutableTuple5\n+syn keyword rustTrait ImmutableTuple6 ImmutableTuple7 ImmutableTuple8 ImmutableTuple9\n+syn keyword rustTrait ImmutableTuple10 ImmutableTuple11 ImmutableTuple12\n+syn keyword rustTrait Vector VectorVector CopyableVector ImmutableVector\n+syn keyword rustTrait ImmutableEqVector ImmutableTotalOrdVector ImmutableCopyableVector\n+syn keyword rustTrait OwnedVector OwnedCopyableVector OwnedEqVector MutableVector\n+syn keyword rustTrait Reader ReaderUtil Writer WriterUtil\n+syn keyword rustTrait Default\n+\n+\"syn keyword rustFunction stream\n+syn keyword rustTrait Port Chan GenericChan GenericSmartChan GenericPort Peekable\n+\"syn keyword rustFunction spawn\n \n syn keyword   rustSelf        self\n syn keyword   rustBoolean     true false\n@@ -62,15 +117,7 @@ syn keyword   rustConstant    Left Right      \" either\n syn keyword   rustConstant    Ok Err          \" result\n syn keyword   rustConstant    Less Equal Greater \" Ordering\n \n-\" Constants from libc\n-syn keyword   rustConstant    EXIT_FAILURE EXIT_SUCCESS RAND_MAX\n-syn keyword   rustConstant    EOF SEEK_SET SEEK_CUR SEEK_END _IOFBF _IONBF\n-syn keyword   rustConstant    _IOLBF BUFSIZ FOPEN_MAX FILENAME_MAX L_tmpnam\n-syn keyword   rustConstant    TMP_MAX O_RDONLY O_WRONLY O_RDWR O_APPEND O_CREAT\n-syn keyword   rustConstant    O_EXCL O_TRUNC S_IFIFO S_IFCHR S_IFBLK S_IFDIR\n-syn keyword   rustConstant    S_IFREG S_IFMT S_IEXEC S_IWRITE S_IREAD S_IRWXU\n-syn keyword   rustConstant    S_IXUSR S_IWUSR S_IRUSR F_OK R_OK W_OK X_OK\n-syn keyword   rustConstant    STDIN_FILENO STDOUT_FILENO STDERR_FILENO\n+\" Other syntax {{{2\n \n \" If foo::bar changes to foo.bar, change this (\"::\" to \"\\.\").\n \" If foo::bar changes to Foo::bar, change this (first \"\\w\" to \"\\u\").\n@@ -142,12 +189,14 @@ syn region    rustCommentDoc  start=\"//[/!]\" end=\"$\" contains=rustTodo keepend\n \n syn keyword rustTodo contained TODO FIXME XXX NB NOTE\n \n+\" Folding rules {{{2\n \" Trivial folding rules to begin with.\n \" TODO: use the AST to make really good folding\n syn region rustFoldBraces start=\"{\" end=\"}\" transparent fold\n \" If you wish to enable this, setlocal foldmethod=syntax\n \" It's not enabled by default as it would drive some people mad.\n \n+\" Default highlighting {{{1\n hi def link rustHexNumber       rustNumber\n hi def link rustBinNumber       rustNumber\n hi def link rustIdentifierPrime rustIdentifier\n@@ -161,6 +210,8 @@ hi def link rustString        String\n hi def link rustCharacter     Character\n hi def link rustNumber        Number\n hi def link rustBoolean       Boolean\n+hi def link rustEnum          rustType\n+hi def link rustEnumVariant   rustConstant\n hi def link rustConstant      Constant\n hi def link rustSelf          Constant\n hi def link rustFloat         Float\n@@ -171,6 +222,7 @@ hi def link rustIdentifier    Identifier\n hi def link rustCapsIdent     rustIdentifier\n hi def link rustModPath       Include\n hi def link rustModPathSep    Delimiter\n+hi def link rustFunction      Function\n hi def link rustFuncName      Function\n hi def link rustFuncCall      Function\n hi def link rustCommentMLDoc  rustCommentDoc"}]}