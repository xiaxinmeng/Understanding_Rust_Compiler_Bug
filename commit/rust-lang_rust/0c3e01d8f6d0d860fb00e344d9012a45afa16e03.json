{"sha": "0c3e01d8f6d0d860fb00e344d9012a45afa16e03", "node_id": "C_kwDOAAsO6NoAKDBjM2UwMWQ4ZjZkMGQ4NjBmYjAwZTM0NGQ5MDEyYTQ1YWZhMTZlMDM", "commit": {"author": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-09-19T09:44:29Z"}, "committer": {"name": "lcnr", "email": "rust@lcnr.de", "date": "2022-09-19T09:44:29Z"}, "message": "extend polymorphization hack comment.", "tree": {"sha": "f827ceccbf9b3f66b44be1d075f652738f4789f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f827ceccbf9b3f66b44be1d075f652738f4789f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c3e01d8f6d0d860fb00e344d9012a45afa16e03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c3e01d8f6d0d860fb00e344d9012a45afa16e03", "html_url": "https://github.com/rust-lang/rust/commit/0c3e01d8f6d0d860fb00e344d9012a45afa16e03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c3e01d8f6d0d860fb00e344d9012a45afa16e03/comments", "author": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lcnr", "id": 29864074, "node_id": "MDQ6VXNlcjI5ODY0MDc0", "avatar_url": "https://avatars.githubusercontent.com/u/29864074?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lcnr", "html_url": "https://github.com/lcnr", "followers_url": "https://api.github.com/users/lcnr/followers", "following_url": "https://api.github.com/users/lcnr/following{/other_user}", "gists_url": "https://api.github.com/users/lcnr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lcnr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lcnr/subscriptions", "organizations_url": "https://api.github.com/users/lcnr/orgs", "repos_url": "https://api.github.com/users/lcnr/repos", "events_url": "https://api.github.com/users/lcnr/events{/privacy}", "received_events_url": "https://api.github.com/users/lcnr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "647052fc04960acf5143e98763e02169ba76a08d", "url": "https://api.github.com/repos/rust-lang/rust/commits/647052fc04960acf5143e98763e02169ba76a08d", "html_url": "https://github.com/rust-lang/rust/commit/647052fc04960acf5143e98763e02169ba76a08d"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "cc820d9eb2d9e1c366132ddc5689523ee83b2c49", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0c3e01d8f6d0d860fb00e344d9012a45afa16e03/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0c3e01d8f6d0d860fb00e344d9012a45afa16e03/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=0c3e01d8f6d0d860fb00e344d9012a45afa16e03", "patch": "@@ -2767,6 +2767,8 @@ impl<'tcx> ty::Instance<'tcx> {\n                 // (i.e. due to being inside a projection that got normalized, see\n                 // `src/test/ui/polymorphization/normalized_sig_types.rs`), and codegen not keeping\n                 // track of a polymorphization `ParamEnv` to allow normalizing later.\n+                //\n+                // We normalize the `fn_sig` again after substituting at a later point.\n                 let mut sig = match *ty.kind() {\n                     ty::FnDef(def_id, substs) => tcx\n                         .bound_fn_sig(def_id)"}]}