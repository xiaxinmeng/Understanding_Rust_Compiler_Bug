{"sha": "4fc3765c5477f98cfdf325475b2b01c6c094ed2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmYzM3NjVjNTQ3N2Y5OGNmZGYzMjU0NzViMmIwMWM2YzA5NGVkMmQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-16T06:56:11Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-08-16T06:56:11Z"}, "message": "Auto merge of #43883 - frewsxcv:frewsxcv-set-readonly-clarification, r=QuietMisdreavus\n\nClarify writable behavior of readonly-named `Permissions` methods.\n\nOpened primarily to fix https://github.com/rust-lang/rust/issues/41984.", "tree": {"sha": "fd60e890abe6577dcda55e49988eda766c68f1fc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd60e890abe6577dcda55e49988eda766c68f1fc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4fc3765c5477f98cfdf325475b2b01c6c094ed2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4fc3765c5477f98cfdf325475b2b01c6c094ed2d", "html_url": "https://github.com/rust-lang/rust/commit/4fc3765c5477f98cfdf325475b2b01c6c094ed2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4fc3765c5477f98cfdf325475b2b01c6c094ed2d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6f4ab9458a7ad06c8ce630604f533c8c0c0acef4", "url": "https://api.github.com/repos/rust-lang/rust/commits/6f4ab9458a7ad06c8ce630604f533c8c0c0acef4", "html_url": "https://github.com/rust-lang/rust/commit/6f4ab9458a7ad06c8ce630604f533c8c0c0acef4"}, {"sha": "10a479ebe170398e70f872a7afa222d00a9c8f53", "url": "https://api.github.com/repos/rust-lang/rust/commits/10a479ebe170398e70f872a7afa222d00a9c8f53", "html_url": "https://github.com/rust-lang/rust/commit/10a479ebe170398e70f872a7afa222d00a9c8f53"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "a438b4afdd0c9f37679de65a647725e5bb9b3710", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3765c5477f98cfdf325475b2b01c6c094ed2d/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3765c5477f98cfdf325475b2b01c6c094ed2d/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=4fc3765c5477f98cfdf325475b2b01c6c094ed2d", "patch": "@@ -916,7 +916,7 @@ impl AsInner<fs_imp::FileAttr> for Metadata {\n }\n \n impl Permissions {\n-    /// Returns whether these permissions describe a readonly file.\n+    /// Returns whether these permissions describe a readonly (unwritable) file.\n     ///\n     /// # Examples\n     ///\n@@ -934,7 +934,11 @@ impl Permissions {\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn readonly(&self) -> bool { self.0.readonly() }\n \n-    /// Modifies the readonly flag for this set of permissions.\n+    /// Modifies the readonly flag for this set of permissions. If the\n+    /// `readonly` argument is `true`, using the resulting `Permission` will\n+    /// update file permissions to forbid writing. Conversely, if it's `false`,\n+    /// using the resulting `Permission` will update file permissions to allow\n+    /// writing.\n     ///\n     /// This operation does **not** modify the filesystem. To modify the\n     /// filesystem use the `fs::set_permissions` function."}, {"sha": "cb0f687e0721c2793261d99197bc1406524d22de", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4fc3765c5477f98cfdf325475b2b01c6c094ed2d/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4fc3765c5477f98cfdf325475b2b01c6c094ed2d/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=4fc3765c5477f98cfdf325475b2b01c6c094ed2d", "patch": "@@ -170,11 +170,17 @@ impl AsInner<stat64> for FileAttr {\n }\n \n impl FilePermissions {\n-    pub fn readonly(&self) -> bool { self.mode & 0o222 == 0 }\n+    pub fn readonly(&self) -> bool {\n+        // check if any class (owner, group, others) has write permission\n+        self.mode & 0o222 == 0\n+    }\n+\n     pub fn set_readonly(&mut self, readonly: bool) {\n         if readonly {\n+            // remove write permission for all classes; equivalent to `chmod a-w <file>`\n             self.mode &= !0o222;\n         } else {\n+            // add write permission for all classes; equivalent to `chmod a+w <file>`\n             self.mode |= 0o222;\n         }\n     }"}]}