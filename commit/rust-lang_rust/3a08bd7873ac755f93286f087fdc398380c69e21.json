{"sha": "3a08bd7873ac755f93286f087fdc398380c69e21", "node_id": "C_kwDOAAsO6NoAKDNhMDhiZDc4NzNhYzc1NWY5MzI4NmYwODdmZGMzOTgzODBjNjllMjE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-12T05:03:48Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-05-12T05:03:48Z"}, "message": "Auto merge of #96889 - Aaron1011:place-ref-remove, r=compiler-errors\n\nRemove `PartialOrd`/`Ord` impl for `PlaceRef`\n\nThis is a new attempt at #93315. It removes one usage\nof the `Ord` impl for `DefId`, which should make it easier\nto eventually remove that impl.", "tree": {"sha": "639f9bfa1efa2369d9c4a224ab33970e293b8a43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/639f9bfa1efa2369d9c4a224ab33970e293b8a43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3a08bd7873ac755f93286f087fdc398380c69e21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3a08bd7873ac755f93286f087fdc398380c69e21", "html_url": "https://github.com/rust-lang/rust/commit/3a08bd7873ac755f93286f087fdc398380c69e21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3a08bd7873ac755f93286f087fdc398380c69e21/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d2ea98cff1fde1d8b9e83a0eb639b8ec2cb82d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d2ea98cff1fde1d8b9e83a0eb639b8ec2cb82d8", "html_url": "https://github.com/rust-lang/rust/commit/1d2ea98cff1fde1d8b9e83a0eb639b8ec2cb82d8"}, {"sha": "6b747aa397c7ed95f8ee53195ada25f8d9ee953d", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b747aa397c7ed95f8ee53195ada25f8d9ee953d", "html_url": "https://github.com/rust-lang/rust/commit/6b747aa397c7ed95f8ee53195ada25f8d9ee953d"}], "stats": {"total": 20, "additions": 15, "deletions": 5}, "files": [{"sha": "3ce33d547c582075af18072242ff3c57e102513a", "filename": "compiler/rustc_const_eval/src/transform/validate.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/3a08bd7873ac755f93286f087fdc398380c69e21/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a08bd7873ac755f93286f087fdc398380c69e21/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Ftransform%2Fvalidate.rs?ref=3a08bd7873ac755f93286f087fdc398380c69e21", "patch": "@@ -1,5 +1,6 @@\n //! Validates the MIR to ensure that invariants are upheld.\n \n+use rustc_data_structures::fx::FxHashSet;\n use rustc_index::bit_set::BitSet;\n use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::mir::interpret::Scalar;\n@@ -701,8 +702,8 @@ impl<'a, 'tcx> Visitor<'tcx> for TypeChecker<'a, 'tcx> {\n                     }\n                 }\n                 let all_len = self.place_cache.len();\n-                self.place_cache.sort_unstable();\n-                self.place_cache.dedup();\n+                let mut dedup = FxHashSet::default();\n+                self.place_cache.retain(|p| dedup.insert(*p));\n                 let has_duplicates = all_len != self.place_cache.len();\n                 if has_duplicates {\n                     self.fail("}, {"sha": "e3522e0c915627dddb64833a265f65088f4e025d", "filename": "compiler/rustc_middle/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3a08bd7873ac755f93286f087fdc398380c69e21/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a08bd7873ac755f93286f087fdc398380c69e21/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flib.rs?ref=3a08bd7873ac755f93286f087fdc398380c69e21", "patch": "@@ -35,6 +35,7 @@\n #![feature(get_mut_unchecked)]\n #![feature(if_let_guard)]\n #![feature(map_first_last)]\n+#![feature(negative_impls)]\n #![feature(never_type)]\n #![feature(extern_types)]\n #![feature(new_uninit)]"}, {"sha": "20ab3536222382a01c0dff814aac2defcea49b2f", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3a08bd7873ac755f93286f087fdc398380c69e21/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a08bd7873ac755f93286f087fdc398380c69e21/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=3a08bd7873ac755f93286f087fdc398380c69e21", "patch": "@@ -2084,12 +2084,18 @@ rustc_index::newtype_index! {\n     }\n }\n \n-#[derive(Clone, Copy, Debug, PartialEq, Eq, PartialOrd, Ord, Hash)]\n+#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n pub struct PlaceRef<'tcx> {\n     pub local: Local,\n     pub projection: &'tcx [PlaceElem<'tcx>],\n }\n \n+// Once we stop implementing `Ord` for `DefId`,\n+// this impl will be unnecessary. Until then, we'll\n+// leave this impl in place to prevent re-adding a\n+// dependnecy on the `Ord` impl for `DefId`\n+impl<'tcx> !PartialOrd for PlaceRef<'tcx> {}\n+\n impl<'tcx> Place<'tcx> {\n     // FIXME change this to a const fn by also making List::empty a const fn.\n     pub fn return_place() -> Place<'tcx> {"}, {"sha": "fa5ec22926efcf4d5a161ac12438d92a8775c3fc", "filename": "compiler/rustc_mir_build/src/build/matches/mod.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3a08bd7873ac755f93286f087fdc398380c69e21/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3a08bd7873ac755f93286f087fdc398380c69e21/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_build%2Fsrc%2Fbuild%2Fmatches%2Fmod.rs?ref=3a08bd7873ac755f93286f087fdc398380c69e21", "patch": "@@ -11,7 +11,7 @@ use crate::build::ForGuard::{self, OutsideGuard, RefWithinGuard};\n use crate::build::{BlockAnd, BlockAndExtension, Builder};\n use crate::build::{GuardFrame, GuardFrameLocal, LocalsForNode};\n use rustc_data_structures::{\n-    fx::{FxIndexMap, FxIndexSet},\n+    fx::{FxHashSet, FxIndexMap, FxIndexSet},\n     stack::ensure_sufficient_stack,\n };\n use rustc_hir::HirId;\n@@ -1741,7 +1741,9 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n             all_fake_borrows.push(place.as_ref());\n         }\n \n-        all_fake_borrows.dedup();\n+        // Deduplicate\n+        let mut dedup = FxHashSet::default();\n+        all_fake_borrows.retain(|b| dedup.insert(*b));\n \n         debug!(\"add_fake_borrows all_fake_borrows = {:?}\", all_fake_borrows);\n "}]}