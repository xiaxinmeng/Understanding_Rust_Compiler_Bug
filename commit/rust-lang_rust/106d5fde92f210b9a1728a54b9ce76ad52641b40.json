{"sha": "106d5fde92f210b9a1728a54b9ce76ad52641b40", "node_id": "C_kwDOAAsO6NoAKDEwNmQ1ZmRlOTJmMjEwYjlhMTcyOGE1NGI5Y2U3NmFkNTI2NDFiNDA", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-05-30T12:33:50Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-30T12:33:50Z"}, "message": "Rollup merge of #97504 - JohnTitor:cleanup-deps, r=davidtwco\n\nEnsure source file present when calculating max line number\n\nResubmission of #89268, fixes #71363\nThe behavior difference of `simulate-remapped-rust-src-base` is not something we should take into account here, so limiting targets to run the test makes sense, I think.\n\nr? `@davidtwco,` and `@estebank,` you might be interested in this change", "tree": {"sha": "ac39dbd4e01f601c28f57195e049bd463e686aa4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ac39dbd4e01f601c28f57195e049bd463e686aa4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/106d5fde92f210b9a1728a54b9ce76ad52641b40", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJilLmuCRBK7hj4Ov3rIwAAoAwIAFQ/5DeWFscK4OfzmPirK3qi\nltorVpnyviSv3Fbt0JpENHB4THpCxQCk44xQwp8YkP9xU4PW3/32ifWKaUIYzlyP\n5JfXNz6Sr6u4Y05gv8aQM30HC0aIoH0goO6uh1Rem1NNUXQ4fvjKqvRPXR5p0F5f\nDAoGSolU7sfk7HM8mv9MlZE6/8Dvr6FdNjUjtOQdmWYHpsmh099mIVsyAnn4aUWi\ntGznR5NIErt5JuwsFtwWus/vh1P+REPOYWtGLL8QXA5BhCLt9zqR0iFJ+LNLoLRi\nBM0OAb2z9GjxMju1Sle6m0YyOA7Q9yOJ/Sm9AvG/xECkgb8GaTj7x+CoItyprlM=\n=mIxX\n-----END PGP SIGNATURE-----\n", "payload": "tree ac39dbd4e01f601c28f57195e049bd463e686aa4\nparent 8fd9e24b9a7660fae2f10090e3063808d70afc97\nparent 5a4e9363a3fe142d5c7ea7acb8c61985fe34e704\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1653914030 +0200\ncommitter GitHub <noreply@github.com> 1653914030 +0200\n\nRollup merge of #97504 - JohnTitor:cleanup-deps, r=davidtwco\n\nEnsure source file present when calculating max line number\n\nResubmission of #89268, fixes #71363\nThe behavior difference of `simulate-remapped-rust-src-base` is not something we should take into account here, so limiting targets to run the test makes sense, I think.\n\nr? `@davidtwco,` and `@estebank,` you might be interested in this change\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/106d5fde92f210b9a1728a54b9ce76ad52641b40", "html_url": "https://github.com/rust-lang/rust/commit/106d5fde92f210b9a1728a54b9ce76ad52641b40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/106d5fde92f210b9a1728a54b9ce76ad52641b40/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fd9e24b9a7660fae2f10090e3063808d70afc97", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fd9e24b9a7660fae2f10090e3063808d70afc97", "html_url": "https://github.com/rust-lang/rust/commit/8fd9e24b9a7660fae2f10090e3063808d70afc97"}, {"sha": "5a4e9363a3fe142d5c7ea7acb8c61985fe34e704", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a4e9363a3fe142d5c7ea7acb8c61985fe34e704", "html_url": "https://github.com/rust-lang/rust/commit/5a4e9363a3fe142d5c7ea7acb8c61985fe34e704"}], "stats": {"total": 48, "additions": 46, "deletions": 2}, "files": [{"sha": "3fdc8cf8ac25fb9cd30da027b104e59844f92164", "filename": "compiler/rustc_errors/src/emitter.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/106d5fde92f210b9a1728a54b9ce76ad52641b40/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/106d5fde92f210b9a1728a54b9ce76ad52641b40/compiler%2Frustc_errors%2Fsrc%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Femitter.rs?ref=106d5fde92f210b9a1728a54b9ce76ad52641b40", "patch": "@@ -1261,16 +1261,23 @@ impl EmitterWriter {\n             return 0;\n         };\n \n+        let will_be_emitted = |span: Span| {\n+            !span.is_dummy() && {\n+                let file = sm.lookup_source_file(span.hi());\n+                sm.ensure_source_file_source_present(file)\n+            }\n+        };\n+\n         let mut max = 0;\n         for primary_span in msp.primary_spans() {\n-            if !primary_span.is_dummy() {\n+            if will_be_emitted(*primary_span) {\n                 let hi = sm.lookup_char_pos(primary_span.hi());\n                 max = (hi.line).max(max);\n             }\n         }\n         if !self.short_message {\n             for span_label in msp.span_labels() {\n-                if !span_label.span.is_dummy() {\n+                if will_be_emitted(span_label.span) {\n                     let hi = sm.lookup_char_pos(span_label.span.hi());\n                     max = (hi.line).max(max);\n                 }"}, {"sha": "3e85559caf923422ec53d3eb2bc4ecfc4810ae56", "filename": "src/test/ui/span/issue-71363.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/106d5fde92f210b9a1728a54b9ce76ad52641b40/src%2Ftest%2Fui%2Fspan%2Fissue-71363.rs", "raw_url": "https://github.com/rust-lang/rust/raw/106d5fde92f210b9a1728a54b9ce76ad52641b40/src%2Ftest%2Fui%2Fspan%2Fissue-71363.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-71363.rs?ref=106d5fde92f210b9a1728a54b9ce76ad52641b40", "patch": "@@ -0,0 +1,10 @@\n+// compile-flags: -Z simulate-remapped-rust-src-base=/rustc/xyz -Z ui-testing=no\n+// only-x86_64-unknown-linux-gnu\n+//---^ Limiting target as the above unstable flags don't play well on some environment.\n+\n+struct MyError;\n+impl std::error::Error for MyError {}\n+//~^ ERROR: `MyError` doesn't implement `std::fmt::Display`\n+//~| ERROR: `MyError` doesn't implement `Debug`\n+\n+fn main() {}"}, {"sha": "d54f21752b89aa4fe553662d171496e68501cdc9", "filename": "src/test/ui/span/issue-71363.stderr", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/106d5fde92f210b9a1728a54b9ce76ad52641b40/src%2Ftest%2Fui%2Fspan%2Fissue-71363.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/106d5fde92f210b9a1728a54b9ce76ad52641b40/src%2Ftest%2Fui%2Fspan%2Fissue-71363.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-71363.stderr?ref=106d5fde92f210b9a1728a54b9ce76ad52641b40", "patch": "@@ -0,0 +1,27 @@\n+error[E0277]: `MyError` doesn't implement `std::fmt::Display`\n+ --> $DIR/issue-71363.rs:6:6\n+  |\n+6 | impl std::error::Error for MyError {}\n+  |      ^^^^^^^^^^^^^^^^^ `MyError` cannot be formatted with the default formatter\n+  |\n+  = help: the trait `std::fmt::Display` is not implemented for `MyError`\n+  = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\n+note: required by a bound in `std::error::Error`\n+\n+error[E0277]: `MyError` doesn't implement `Debug`\n+ --> $DIR/issue-71363.rs:6:6\n+  |\n+6 | impl std::error::Error for MyError {}\n+  |      ^^^^^^^^^^^^^^^^^ `MyError` cannot be formatted using `{:?}`\n+  |\n+  = help: the trait `Debug` is not implemented for `MyError`\n+  = note: add `#[derive(Debug)]` to `MyError` or manually `impl Debug for MyError`\n+note: required by a bound in `std::error::Error`\n+help: consider annotating `MyError` with `#[derive(Debug)]`\n+  |\n+5 | #[derive(Debug)]\n+  |\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0277`."}]}