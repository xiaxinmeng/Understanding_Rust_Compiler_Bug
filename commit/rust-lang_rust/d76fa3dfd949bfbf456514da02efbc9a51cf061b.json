{"sha": "d76fa3dfd949bfbf456514da02efbc9a51cf061b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3NmZhM2RmZDk0OWJmYmY0NTY1MTRkYTAyZWZiYzlhNTFjZjA2MWI=", "commit": {"author": {"name": "Theemathas Chirananthavat", "email": "theemathas@gmail.com", "date": "2016-12-28T18:54:23Z"}, "committer": {"name": "Theemathas Chirananthavat", "email": "theemathas@gmail.com", "date": "2016-12-28T19:21:53Z"}, "message": "Add skeleton for double_parens lint.", "tree": {"sha": "208d0f2d969bf982b384b801c2cae10dda76ee59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/208d0f2d969bf982b384b801c2cae10dda76ee59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d76fa3dfd949bfbf456514da02efbc9a51cf061b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d76fa3dfd949bfbf456514da02efbc9a51cf061b", "html_url": "https://github.com/rust-lang/rust/commit/d76fa3dfd949bfbf456514da02efbc9a51cf061b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d76fa3dfd949bfbf456514da02efbc9a51cf061b/comments", "author": {"login": "theemathas", "id": 6120103, "node_id": "MDQ6VXNlcjYxMjAxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/6120103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theemathas", "html_url": "https://github.com/theemathas", "followers_url": "https://api.github.com/users/theemathas/followers", "following_url": "https://api.github.com/users/theemathas/following{/other_user}", "gists_url": "https://api.github.com/users/theemathas/gists{/gist_id}", "starred_url": "https://api.github.com/users/theemathas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theemathas/subscriptions", "organizations_url": "https://api.github.com/users/theemathas/orgs", "repos_url": "https://api.github.com/users/theemathas/repos", "events_url": "https://api.github.com/users/theemathas/events{/privacy}", "received_events_url": "https://api.github.com/users/theemathas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "theemathas", "id": 6120103, "node_id": "MDQ6VXNlcjYxMjAxMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/6120103?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theemathas", "html_url": "https://github.com/theemathas", "followers_url": "https://api.github.com/users/theemathas/followers", "following_url": "https://api.github.com/users/theemathas/following{/other_user}", "gists_url": "https://api.github.com/users/theemathas/gists{/gist_id}", "starred_url": "https://api.github.com/users/theemathas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theemathas/subscriptions", "organizations_url": "https://api.github.com/users/theemathas/orgs", "repos_url": "https://api.github.com/users/theemathas/repos", "events_url": "https://api.github.com/users/theemathas/events{/privacy}", "received_events_url": "https://api.github.com/users/theemathas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e7352877c5cad5c06ce011643ef9e3995f097575", "url": "https://api.github.com/repos/rust-lang/rust/commits/e7352877c5cad5c06ce011643ef9e3995f097575", "html_url": "https://github.com/rust-lang/rust/commit/e7352877c5cad5c06ce011643ef9e3995f097575"}], "stats": {"total": 38, "additions": 38, "deletions": 0}, "files": [{"sha": "85611cd6c8592fd9f2a72d4beebd7266962fdf87", "filename": "clippy_lints/src/double_parens.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/d76fa3dfd949bfbf456514da02efbc9a51cf061b/clippy_lints%2Fsrc%2Fdouble_parens.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d76fa3dfd949bfbf456514da02efbc9a51cf061b/clippy_lints%2Fsrc%2Fdouble_parens.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdouble_parens.rs?ref=d76fa3dfd949bfbf456514da02efbc9a51cf061b", "patch": "@@ -0,0 +1,35 @@\n+use syntax::ast::*;\n+use rustc::lint::{EarlyContext, LintArray, LintPass, EarlyLintPass};\n+\n+/// **What it does:** Checks for unnecessary double parentheses.\n+///\n+/// **Why is this bad?** This makes code harder to read and might indicate a\n+/// mistake.\n+///\n+/// **Known problems:** None.\n+///\n+/// **Example:**\n+/// ```rust\n+/// ((0))\n+/// foo((0))\n+/// ((1, 2))\n+/// ```\n+declare_lint! {\n+    pub DOUBLE_PARENS, Warn,\n+    \"Warn on unnecessary double parentheses\"\n+}\n+\n+#[derive(Copy, Clone)]\n+pub struct DoubleParens;\n+\n+impl LintPass for DoubleParens {\n+    fn get_lints(&self) -> LintArray {\n+        lint_array!(DOUBLE_PARENS)\n+    }\n+}\n+\n+impl EarlyLintPass for DoubleParens {\n+    fn check_expr(&mut self, cx: &EarlyContext, expr: &Expr) {\n+        // insert check here.\n+    }\n+}"}, {"sha": "ac92d5ec97bc5ce1ae9b4bcb1439b028050ae37e", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/d76fa3dfd949bfbf456514da02efbc9a51cf061b/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d76fa3dfd949bfbf456514da02efbc9a51cf061b/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=d76fa3dfd949bfbf456514da02efbc9a51cf061b", "patch": "@@ -69,6 +69,7 @@ pub mod copies;\n pub mod cyclomatic_complexity;\n pub mod derive;\n pub mod doc;\n+pub mod double_parens;\n pub mod drop_ref;\n pub mod entry;\n pub mod enum_clike;\n@@ -283,6 +284,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_late_lint_pass(box if_let_redundant_pattern_matching::Pass);\n     reg.register_late_lint_pass(box partialeq_ne_impl::Pass);\n     reg.register_early_lint_pass(box reference::Pass);\n+    reg.register_early_lint_pass(box double_parens::DoubleParens);\n \n     reg.register_lint_group(\"clippy_restrictions\", vec![\n         arithmetic::FLOAT_ARITHMETIC,\n@@ -355,6 +357,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n         derive::DERIVE_HASH_XOR_EQ,\n         derive::EXPL_IMPL_CLONE_ON_COPY,\n         doc::DOC_MARKDOWN,\n+        double_parens::DOUBLE_PARENS,\n         drop_ref::DROP_REF,\n         entry::MAP_ENTRY,\n         enum_clike::ENUM_CLIKE_UNPORTABLE_VARIANT,"}]}