{"sha": "b55717f9b0023f58b7ca2fab77a0b33206076ac4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1NTcxN2Y5YjAwMjNmNThiN2NhMmZhYjc3YTBiMzMyMDYwNzZhYzQ=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-03T19:23:05Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-11-19T17:41:10Z"}, "message": "Use general uninhabitedness checking", "tree": {"sha": "0327b10c0acf1cf446152e974a389d158fc97ed6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0327b10c0acf1cf446152e974a389d158fc97ed6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b55717f9b0023f58b7ca2fab77a0b33206076ac4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b55717f9b0023f58b7ca2fab77a0b33206076ac4", "html_url": "https://github.com/rust-lang/rust/commit/b55717f9b0023f58b7ca2fab77a0b33206076ac4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b55717f9b0023f58b7ca2fab77a0b33206076ac4/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e8a982a234532ad9cce7f072d130029df96bebc", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e8a982a234532ad9cce7f072d130029df96bebc", "html_url": "https://github.com/rust-lang/rust/commit/9e8a982a234532ad9cce7f072d130029df96bebc"}], "stats": {"total": 24, "additions": 10, "deletions": 14}, "files": [{"sha": "6383ca69fe5ca3f196d07cb9af63465a2a6fc479", "filename": "src/librustc_lint/unused.rs", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b55717f9b0023f58b7ca2fab77a0b33206076ac4/src%2Flibrustc_lint%2Funused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b55717f9b0023f58b7ca2fab77a0b33206076ac4/src%2Flibrustc_lint%2Funused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Funused.rs?ref=b55717f9b0023f58b7ca2fab77a0b33206076ac4", "patch": "@@ -60,19 +60,15 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n         }\n \n         let t = cx.tables.expr_ty(&expr);\n-        // FIXME(varkor): replace with `t.is_unit() || t.conservative_is_uninhabited()`.\n-        let type_permits_no_use = match t.sty {\n-            ty::Tuple(ref tys) if tys.is_empty() => true,\n-            ty::Never => true,\n-            ty::Adt(def, _) => {\n-                if def.variants.is_empty() {\n-                    true\n-                } else {\n-                    check_must_use(cx, def.did, s.span, \"\")\n-                }\n+        let type_permits_lack_of_use = if t.is_unit()\n+            || cx.tcx.is_ty_uninhabited_from(cx.tcx.hir.get_module_parent(expr.id), t) {\n+            true\n+        } else {\n+            match t.sty {\n+                ty::Adt(def, _) => check_must_use(cx, def.did, s.span, \"\"),\n+                _ => false,\n             }\n-            _ => false,\n-        };\n+        }\n \n         let mut fn_warned = false;\n         let mut op_warned = false;\n@@ -99,7 +95,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n         if let Some(def) = maybe_def {\n             let def_id = def.def_id();\n             fn_warned = check_must_use(cx, def_id, s.span, \"return value of \");\n-        } else if type_permits_no_use {\n+        } else if type_permits_lack_of_use {\n             // We don't warn about unused unit or uninhabited types.\n             // (See https://github.com/rust-lang/rust/issues/43806 for details.)\n             return;\n@@ -148,7 +144,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnusedResults {\n             op_warned = true;\n         }\n \n-        if !(type_permits_no_use || fn_warned || op_warned) {\n+        if !(type_permits_lack_of_use || fn_warned || op_warned) {\n             cx.span_lint(UNUSED_RESULTS, s.span, \"unused result\");\n         }\n "}]}