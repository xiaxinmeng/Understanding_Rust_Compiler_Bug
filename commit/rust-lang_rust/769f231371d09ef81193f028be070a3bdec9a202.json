{"sha": "769f231371d09ef81193f028be070a3bdec9a202", "node_id": "C_kwDOAAsO6NoAKDc2OWYyMzEzNzFkMDllZjgxMTkzZjAyOGJlMDcwYTNiZGVjOWEyMDI", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-11-15T09:44:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-11-15T09:44:11Z"}, "message": "Rollup merge of #104309 - chenyukang:yukang/fix-104088-identifier-error, r=davidtwco\n\nSlightly improve error message for invalid identifier\n\nfixes #104088", "tree": {"sha": "26da4b9297f9d93a726dcd81ba8648a6c8f3eca5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26da4b9297f9d93a726dcd81ba8648a6c8f3eca5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/769f231371d09ef81193f028be070a3bdec9a202", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjc19rCRBK7hj4Ov3rIwAAaoQIAJcI2MAvkYE9rsBe9KiHA8Co\nzvB8T63BnW7f+LXg1rdjjrQl2LzGQQPnxNjcVIav+QkfFU5wgu8EtKSZi2BiJYL5\nQSZCRfmGYK6SYbHtsNidFI9CgcD7wbgAQdgKAvcgoAxI8j5KKdro1JQrUJ9TxnBL\nAR/AbR0UdkkN6u76v3VlEm8C0521he5c+eGbX86J6rLEc/09Ls4sTFriCF8wfcRU\n7xxs0v8mjjJRP3WW0KBHXBpGsEfAF9HRcEZOZFSpbOzokcGgTNiPRCy6y9UPprey\n05zZTBvCBq7sjURsF+YgLUXnZu//Trz9rdGxt95ZyGpgxPG0mdiwK9E6VfFC0QI=\n=/YUj\n-----END PGP SIGNATURE-----\n", "payload": "tree 26da4b9297f9d93a726dcd81ba8648a6c8f3eca5\nparent d8b416db0af5b26fb01db3a275f2f3c114b36c61\nparent b2b509491d55072d31935c4c3f267d3d46f61f03\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1668505451 +0100\ncommitter GitHub <noreply@github.com> 1668505451 +0100\n\nRollup merge of #104309 - chenyukang:yukang/fix-104088-identifier-error, r=davidtwco\n\nSlightly improve error message for invalid identifier\n\nfixes #104088\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/769f231371d09ef81193f028be070a3bdec9a202", "html_url": "https://github.com/rust-lang/rust/commit/769f231371d09ef81193f028be070a3bdec9a202", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/769f231371d09ef81193f028be070a3bdec9a202/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8b416db0af5b26fb01db3a275f2f3c114b36c61", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8b416db0af5b26fb01db3a275f2f3c114b36c61", "html_url": "https://github.com/rust-lang/rust/commit/d8b416db0af5b26fb01db3a275f2f3c114b36c61"}, {"sha": "b2b509491d55072d31935c4c3f267d3d46f61f03", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2b509491d55072d31935c4c3f267d3d46f61f03", "html_url": "https://github.com/rust-lang/rust/commit/b2b509491d55072d31935c4c3f267d3d46f61f03"}], "stats": {"total": 82, "additions": 80, "deletions": 2}, "files": [{"sha": "4c7ce30097c95f324050b0d93ae2cc2770e1615c", "filename": "compiler/rustc_error_messages/locales/en-US/parser.ftl", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/769f231371d09ef81193f028be070a3bdec9a202/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/769f231371d09ef81193f028be070a3bdec9a202/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl?ref=769f231371d09ef81193f028be070a3bdec9a202", "patch": "@@ -384,3 +384,6 @@ parser_fn_ptr_with_generics = function pointer types may not have generic parame\n         [true] the\n         *[false] a\n     } `for` parameter list\n+\n+parser_invalid_identifier_with_leading_number = expected identifier, found number literal\n+    .label = identifiers cannot start with a number"}, {"sha": "2b17cea97949a2cdfd1cecfcd17a56af5387dea6", "filename": "compiler/rustc_parse/src/errors.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/769f231371d09ef81193f028be070a3bdec9a202/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/769f231371d09ef81193f028be070a3bdec9a202/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Ferrors.rs?ref=769f231371d09ef81193f028be070a3bdec9a202", "patch": "@@ -1205,6 +1205,14 @@ pub(crate) struct SelfParamNotFirst {\n     pub span: Span,\n }\n \n+#[derive(Diagnostic)]\n+#[diag(parser_invalid_identifier_with_leading_number)]\n+pub(crate) struct InvalidIdentiferStartsWithNumber {\n+    #[primary_span]\n+    #[label]\n+    pub span: Span,\n+}\n+\n #[derive(Diagnostic)]\n #[diag(parser_const_generic_without_braces)]\n pub(crate) struct ConstGenericWithoutBraces {"}, {"sha": "18b661034e070915d4b0893054e088a0dab4ba6e", "filename": "compiler/rustc_parse/src/parser/stmt.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/769f231371d09ef81193f028be070a3bdec9a202/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/769f231371d09ef81193f028be070a3bdec9a202/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs?ref=769f231371d09ef81193f028be070a3bdec9a202", "patch": "@@ -10,8 +10,8 @@ use super::{\n use crate::errors::{\n     AssignmentElseNotAllowed, CompoundAssignmentExpressionInLet, ConstLetMutuallyExclusive,\n     DocCommentDoesNotDocumentAnything, ExpectedStatementAfterOuterAttr, InvalidCurlyInLetElse,\n-    InvalidExpressionInLetElse, InvalidVariableDeclaration, InvalidVariableDeclarationSub,\n-    WrapExpressionInParentheses,\n+    InvalidExpressionInLetElse, InvalidIdentiferStartsWithNumber, InvalidVariableDeclaration,\n+    InvalidVariableDeclarationSub, WrapExpressionInParentheses,\n };\n use crate::maybe_whole;\n \n@@ -264,6 +264,7 @@ impl<'a> Parser<'a> {\n             self.bump();\n         }\n \n+        self.report_invalid_identifier_error()?;\n         let (pat, colon) = self.parse_pat_before_ty(None, RecoverComma::Yes, \"`let` bindings\")?;\n \n         let (err, ty) = if colon {\n@@ -355,6 +356,17 @@ impl<'a> Parser<'a> {\n         Ok(P(ast::Local { ty, pat, kind, id: DUMMY_NODE_ID, span: lo.to(hi), attrs, tokens: None }))\n     }\n \n+    /// report error for `let 1x = 123`\n+    pub fn report_invalid_identifier_error(&mut self) -> PResult<'a, ()> {\n+        if let token::Literal(lit) = self.token.uninterpolate().kind &&\n+            let Err(_) = rustc_ast::Lit::from_token(&self.token) &&\n+            (lit.kind == token::LitKind::Integer || lit.kind == token::LitKind::Float) &&\n+            self.look_ahead(1, |t| matches!(t.kind, token::Eq) || matches!(t.kind, token::Colon ) ) {\n+                return Err(self.sess.create_err(InvalidIdentiferStartsWithNumber { span: self.token.span }));\n+        }\n+        Ok(())\n+    }\n+\n     fn check_let_else_init_bool_expr(&self, init: &ast::Expr) {\n         if let ast::ExprKind::Binary(op, ..) = init.kind {\n             if op.node.lazy() {"}, {"sha": "5f794fe2dc924500ba36f4a77bfccf864b5a2ecd", "filename": "src/test/ui/parser/issues/issue-104088.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/769f231371d09ef81193f028be070a3bdec9a202/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-104088.rs", "raw_url": "https://github.com/rust-lang/rust/raw/769f231371d09ef81193f028be070a3bdec9a202/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-104088.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-104088.rs?ref=769f231371d09ef81193f028be070a3bdec9a202", "patch": "@@ -0,0 +1,26 @@\n+fn test() {\n+    if let 123 = 123 { println!(\"yes\"); }\n+}\n+\n+fn test_2() {\n+    let 1x = 123;\n+    //~^ ERROR expected identifier, found number literal\n+}\n+\n+fn test_3() {\n+    let 2x: i32 = 123;\n+    //~^ ERROR expected identifier, found number literal\n+}\n+\n+fn test_4() {\n+    if let 2e1 = 123 {\n+        //~^ ERROR mismatched types\n+    }\n+}\n+\n+fn test_5() {\n+    let 23name = 123;\n+    //~^ ERROR expected identifier, found number literal\n+}\n+\n+fn main() {}"}, {"sha": "ff4b4bdb6953e13673c1814b56f755c6e9f69462", "filename": "src/test/ui/parser/issues/issue-104088.stderr", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/769f231371d09ef81193f028be070a3bdec9a202/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-104088.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/769f231371d09ef81193f028be070a3bdec9a202/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-104088.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-104088.stderr?ref=769f231371d09ef81193f028be070a3bdec9a202", "patch": "@@ -0,0 +1,29 @@\n+error: expected identifier, found number literal\n+  --> $DIR/issue-104088.rs:6:9\n+   |\n+LL |     let 1x = 123;\n+   |         ^^ identifiers cannot start with a number\n+\n+error: expected identifier, found number literal\n+  --> $DIR/issue-104088.rs:11:9\n+   |\n+LL |     let 2x: i32 = 123;\n+   |         ^^ identifiers cannot start with a number\n+\n+error: expected identifier, found number literal\n+  --> $DIR/issue-104088.rs:22:9\n+   |\n+LL |     let 23name = 123;\n+   |         ^^^^^^ identifiers cannot start with a number\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-104088.rs:16:12\n+   |\n+LL |     if let 2e1 = 123 {\n+   |            ^^^   --- this expression has type `{integer}`\n+   |            |\n+   |            expected integer, found floating-point number\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "f3a6a668372fb91dd33048cd9655eee8a9b3d71e", "filename": "src/test/ui/parser/slowparse-bstring.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/769f231371d09ef81193f028be070a3bdec9a202/src%2Ftest%2Fui%2Fparser%2Fslowparse-bstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/769f231371d09ef81193f028be070a3bdec9a202/src%2Ftest%2Fui%2Fparser%2Fslowparse-bstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fslowparse-bstring.rs?ref=769f231371d09ef81193f028be070a3bdec9a202", "previous_filename": "src/test/ui/slowparse-bstring.rs"}, {"sha": "6ebc61dae783b2cdf4ba5b59d93e87568f20d243", "filename": "src/test/ui/parser/slowparse-string.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/769f231371d09ef81193f028be070a3bdec9a202/src%2Ftest%2Fui%2Fparser%2Fslowparse-string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/769f231371d09ef81193f028be070a3bdec9a202/src%2Ftest%2Fui%2Fparser%2Fslowparse-string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fslowparse-string.rs?ref=769f231371d09ef81193f028be070a3bdec9a202", "previous_filename": "src/test/ui/slowparse-string.rs"}]}