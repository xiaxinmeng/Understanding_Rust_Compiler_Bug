{"sha": "7ae4fd75c40b95626ff8ae9ee70da8d86791c949", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhZTRmZDc1YzQwYjk1NjI2ZmY4YWU5ZWU3MGRhOGQ4Njc5MWM5NDk=", "commit": {"author": {"name": "SiegeLord", "email": "slabode@aim.com", "date": "2013-09-09T22:33:35Z"}, "committer": {"name": "SiegeLord", "email": "slabode@aim.com", "date": "2013-09-11T18:49:09Z"}, "message": "Rename encode_struct_field_names to encode_struct_fields to reflect what it actually does", "tree": {"sha": "268a8f5373f8f5314c6c7af73f65c17fcb001b81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/268a8f5373f8f5314c6c7af73f65c17fcb001b81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7ae4fd75c40b95626ff8ae9ee70da8d86791c949", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7ae4fd75c40b95626ff8ae9ee70da8d86791c949", "html_url": "https://github.com/rust-lang/rust/commit/7ae4fd75c40b95626ff8ae9ee70da8d86791c949", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7ae4fd75c40b95626ff8ae9ee70da8d86791c949/comments", "author": {"login": "SiegeLord", "id": 480550, "node_id": "MDQ6VXNlcjQ4MDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/480550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLord", "html_url": "https://github.com/SiegeLord", "followers_url": "https://api.github.com/users/SiegeLord/followers", "following_url": "https://api.github.com/users/SiegeLord/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLord/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLord/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLord/orgs", "repos_url": "https://api.github.com/users/SiegeLord/repos", "events_url": "https://api.github.com/users/SiegeLord/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLord/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SiegeLord", "id": 480550, "node_id": "MDQ6VXNlcjQ4MDU1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/480550?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SiegeLord", "html_url": "https://github.com/SiegeLord", "followers_url": "https://api.github.com/users/SiegeLord/followers", "following_url": "https://api.github.com/users/SiegeLord/following{/other_user}", "gists_url": "https://api.github.com/users/SiegeLord/gists{/gist_id}", "starred_url": "https://api.github.com/users/SiegeLord/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SiegeLord/subscriptions", "organizations_url": "https://api.github.com/users/SiegeLord/orgs", "repos_url": "https://api.github.com/users/SiegeLord/repos", "events_url": "https://api.github.com/users/SiegeLord/events{/privacy}", "received_events_url": "https://api.github.com/users/SiegeLord/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c5402fd36ae3ab0cca55e4c0f62f0f8264a7e3a", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c5402fd36ae3ab0cca55e4c0f62f0f8264a7e3a", "html_url": "https://github.com/rust-lang/rust/commit/8c5402fd36ae3ab0cca55e4c0f62f0f8264a7e3a"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "98c7a7a126eb0fd223c9093188484611e6c6f0c6", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7ae4fd75c40b95626ff8ae9ee70da8d86791c949/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7ae4fd75c40b95626ff8ae9ee70da8d86791c949/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=7ae4fd75c40b95626ff8ae9ee70da8d86791c949", "patch": "@@ -307,7 +307,7 @@ fn encode_parent_item(ebml_w: &mut writer::Encoder, id: DefId) {\n     ebml_w.end_tag();\n }\n \n-fn encode_struct_field_names(ecx: &EncodeContext,\n+fn encode_struct_fields(ecx: &EncodeContext,\n                              ebml_w: &mut writer::Encoder,\n                              def: @struct_def) {\n     for f in def.fields.iter() {\n@@ -364,7 +364,7 @@ fn encode_enum_variant_info(ecx: &EncodeContext,\n             ast::struct_variant_kind(def) => {\n                 let idx = encode_info_for_struct(ecx, ebml_w, path,\n                                          def.fields, index);\n-                encode_struct_field_names(ecx, ebml_w, def);\n+                encode_struct_fields(ecx, ebml_w, def);\n                 let bkts = create_index(idx);\n                 encode_index(ebml_w, bkts, write_i64);\n             }\n@@ -1017,7 +1017,7 @@ fn encode_info_for_item(ecx: &EncodeContext,\n         /* Encode def_ids for each field and method\n          for methods, write all the stuff get_trait_method\n         needs to know*/\n-        encode_struct_field_names(ecx, ebml_w, struct_def);\n+        encode_struct_fields(ecx, ebml_w, struct_def);\n \n         // Encode inherent implementations for this structure.\n         encode_inherent_implementations(ecx, ebml_w, def_id);"}]}