{"sha": "6680118588f4ba52683b9fffbb7ac88a50b4f971", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ODAxMTg1ODhmNGJhNTI2ODNiOWZmZmJiN2FjODhhNTBiNGY5NzE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-03T10:56:38Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-03T10:56:38Z"}, "message": "de-duplicate <unnamed> default thread name", "tree": {"sha": "be2b1226347b2fdecd67f9686fbde976a099e03f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be2b1226347b2fdecd67f9686fbde976a099e03f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6680118588f4ba52683b9fffbb7ac88a50b4f971", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6680118588f4ba52683b9fffbb7ac88a50b4f971", "html_url": "https://github.com/rust-lang/rust/commit/6680118588f4ba52683b9fffbb7ac88a50b4f971", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6680118588f4ba52683b9fffbb7ac88a50b4f971/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2f4e6fc65f15d593dacb79f6558d66618705415", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2f4e6fc65f15d593dacb79f6558d66618705415", "html_url": "https://github.com/rust-lang/rust/commit/f2f4e6fc65f15d593dacb79f6558d66618705415"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "2119175e12cc9164c9d67999548352588a83d459", "filename": "src/thread.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/6680118588f4ba52683b9fffbb7ac88a50b4f971/src%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6680118588f4ba52683b9fffbb7ac88a50b4f971/src%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fthread.rs?ref=6680118588f4ba52683b9fffbb7ac88a50b4f971", "patch": "@@ -134,16 +134,20 @@ impl<'mir, 'tcx> Thread<'mir, 'tcx> {\n         }\n         false\n     }\n+\n+    /// Get the name of the current thread, or `<unnamed>` if it was not set.\n+    fn thread_name(&self) -> &[u8] {\n+        if let Some(ref thread_name) = self.thread_name {\n+            thread_name\n+        } else {\n+            b\"<unnamed>\"\n+        }\n+    }\n }\n \n impl<'mir, 'tcx> std::fmt::Debug for Thread<'mir, 'tcx> {\n     fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {\n-        if let Some(ref name) = self.thread_name {\n-            write!(f, \"{}\", String::from_utf8_lossy(name))?;\n-        } else {\n-            write!(f, \"<unnamed>\")?;\n-        }\n-        write!(f, \"({:?}, {:?})\", self.state, self.join_status)\n+        write!(f, \"{}({:?}, {:?})\", String::from_utf8_lossy(self.thread_name()), self.state, self.join_status)\n     }\n }\n \n@@ -314,11 +318,7 @@ impl<'mir, 'tcx: 'mir> ThreadManager<'mir, 'tcx> {\n \n     /// Get the name of the active thread.\n     fn get_thread_name(&self) -> &[u8] {\n-        if let Some(ref thread_name) = self.active_thread_ref().thread_name {\n-            thread_name\n-        } else {\n-            b\"<unnamed>\"\n-        }\n+        self.active_thread_ref().thread_name()\n     }\n \n     /// Allocate a new blockset id."}]}