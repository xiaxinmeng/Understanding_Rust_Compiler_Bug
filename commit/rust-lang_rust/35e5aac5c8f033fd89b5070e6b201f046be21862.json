{"sha": "35e5aac5c8f033fd89b5070e6b201f046be21862", "node_id": "C_kwDOAAsO6NoAKDM1ZTVhYWM1YzhmMDMzZmQ4OWI1MDcwZTZiMjAxZjA0NmJlMjE4NjI", "commit": {"author": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-03-28T17:26:35Z"}, "committer": {"name": "Urgau", "email": "urgau@numericable.fr", "date": "2023-05-10T17:36:02Z"}, "message": "Drop uplifted clippy::forget_copy", "tree": {"sha": "5b922ab6e851bd7a26abbd933cb1b57bc697da47", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b922ab6e851bd7a26abbd933cb1b57bc697da47"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/35e5aac5c8f033fd89b5070e6b201f046be21862", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/35e5aac5c8f033fd89b5070e6b201f046be21862", "html_url": "https://github.com/rust-lang/rust/commit/35e5aac5c8f033fd89b5070e6b201f046be21862", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/35e5aac5c8f033fd89b5070e6b201f046be21862/comments", "author": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Urgau", "id": 3616612, "node_id": "MDQ6VXNlcjM2MTY2MTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3616612?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Urgau", "html_url": "https://github.com/Urgau", "followers_url": "https://api.github.com/users/Urgau/followers", "following_url": "https://api.github.com/users/Urgau/following{/other_user}", "gists_url": "https://api.github.com/users/Urgau/gists{/gist_id}", "starred_url": "https://api.github.com/users/Urgau/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Urgau/subscriptions", "organizations_url": "https://api.github.com/users/Urgau/orgs", "repos_url": "https://api.github.com/users/Urgau/repos", "events_url": "https://api.github.com/users/Urgau/events{/privacy}", "received_events_url": "https://api.github.com/users/Urgau/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22688fc91f2d8811c50518499dcfb5691c6f2588", "url": "https://api.github.com/repos/rust-lang/rust/commits/22688fc91f2d8811c50518499dcfb5691c6f2588", "html_url": "https://github.com/rust-lang/rust/commit/22688fc91f2d8811c50518499dcfb5691c6f2588"}], "stats": {"total": 341, "additions": 61, "deletions": 280}, "files": [{"sha": "04993e4928799b41b64c14a0eb35849a581519f1", "filename": "clippy_lints/src/declared_lints.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35e5aac5c8f033fd89b5070e6b201f046be21862/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35e5aac5c8f033fd89b5070e6b201f046be21862/clippy_lints%2Fsrc%2Fdeclared_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdeclared_lints.rs?ref=35e5aac5c8f033fd89b5070e6b201f046be21862", "patch": "@@ -133,7 +133,6 @@ pub(crate) static LINTS: &[&crate::LintInfo] = &[\n     crate::doc::UNNECESSARY_SAFETY_DOC_INFO,\n     crate::double_parens::DOUBLE_PARENS_INFO,\n     crate::drop_forget_ref::DROP_NON_DROP_INFO,\n-    crate::drop_forget_ref::FORGET_COPY_INFO,\n     crate::drop_forget_ref::FORGET_NON_DROP_INFO,\n     crate::drop_forget_ref::UNDROPPED_MANUALLY_DROPS_INFO,\n     crate::duplicate_mod::DUPLICATE_MOD_INFO,"}, {"sha": "b2f7d026cc8b24a00cea5c932b21beae676bc919", "filename": "clippy_lints/src/drop_forget_ref.rs", "status": "modified", "additions": 2, "deletions": 33, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/35e5aac5c8f033fd89b5070e6b201f046be21862/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35e5aac5c8f033fd89b5070e6b201f046be21862/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdrop_forget_ref.rs?ref=35e5aac5c8f033fd89b5070e6b201f046be21862", "patch": "@@ -7,34 +7,6 @@ use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::sym;\n \n-declare_clippy_lint! {\n-    /// ### What it does\n-    /// Checks for calls to `std::mem::forget` with a value that\n-    /// derives the Copy trait\n-    ///\n-    /// ### Why is this bad?\n-    /// Calling `std::mem::forget` [does nothing for types that\n-    /// implement Copy](https://doc.rust-lang.org/std/mem/fn.drop.html) since the\n-    /// value will be copied and moved into the function on invocation.\n-    ///\n-    /// An alternative, but also valid, explanation is that Copy types do not\n-    /// implement\n-    /// the Drop trait, which means they have no destructors. Without a destructor,\n-    /// there\n-    /// is nothing for `std::mem::forget` to ignore.\n-    ///\n-    /// ### Example\n-    /// ```rust\n-    /// let x: i32 = 42; // i32 implements Copy\n-    /// std::mem::forget(x) // A copy of x is passed to the function, leaving the\n-    ///                     // original unaffected\n-    /// ```\n-    #[clippy::version = \"pre 1.29.0\"]\n-    pub FORGET_COPY,\n-    correctness,\n-    \"calls to `std::mem::forget` with a value that implements Copy\"\n-}\n-\n declare_clippy_lint! {\n     /// ### What it does\n     /// Checks for calls to `std::mem::drop` with a value that does not implement `Drop`.\n@@ -104,15 +76,12 @@ declare_clippy_lint! {\n     \"use of safe `std::mem::drop` function to drop a std::mem::ManuallyDrop, which will not drop the inner value\"\n }\n \n-const FORGET_COPY_SUMMARY: &str = \"calls to `std::mem::forget` with a value that implements `Copy`. \\\n-                                   Forgetting a copy leaves the original intact\";\n const DROP_NON_DROP_SUMMARY: &str = \"call to `std::mem::drop` with a value that does not implement `Drop`. \\\n                                  Dropping such a type only extends its contained lifetimes\";\n const FORGET_NON_DROP_SUMMARY: &str = \"call to `std::mem::forget` with a value that does not implement `Drop`. \\\n                                    Forgetting such a type is the same as dropping it\";\n \n declare_lint_pass!(DropForgetRef => [\n-    FORGET_COPY,\n     DROP_NON_DROP,\n     FORGET_NON_DROP,\n     UNDROPPED_MANUALLY_DROPS\n@@ -129,11 +98,11 @@ impl<'tcx> LateLintPass<'tcx> for DropForgetRef {\n             let is_copy = is_copy(cx, arg_ty);\n             let drop_is_single_call_in_arm = is_single_call_in_arm(cx, arg, expr);\n             let (lint, msg) = match fn_name {\n-                // early return for uplifted lints: drop_ref, drop_copy, forget_ref\n+                // early return for uplifted lints: drop_ref, drop_copy, forget_ref, forget_copy\n                 sym::mem_drop if arg_ty.is_ref() && !drop_is_single_call_in_arm => return,\n                 sym::mem_forget if arg_ty.is_ref() => return,\n                 sym::mem_drop if is_copy && !drop_is_single_call_in_arm => return,\n-                sym::mem_forget if is_copy => (FORGET_COPY, FORGET_COPY_SUMMARY),\n+                sym::mem_forget if is_copy => return,\n                 sym::mem_drop if is_type_lang_item(cx, arg_ty, LangItem::ManuallyDrop) => {\n                     span_lint_and_help(\n                         cx,"}, {"sha": "52e22c0c6303c22a8b010d5924ebb72124acc242", "filename": "clippy_lints/src/renamed_lints.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/35e5aac5c8f033fd89b5070e6b201f046be21862/clippy_lints%2Fsrc%2Frenamed_lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35e5aac5c8f033fd89b5070e6b201f046be21862/clippy_lints%2Fsrc%2Frenamed_lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Frenamed_lints.rs?ref=35e5aac5c8f033fd89b5070e6b201f046be21862", "patch": "@@ -37,6 +37,7 @@ pub static RENAMED_LINTS: &[(&str, &str)] = &[\n     (\"clippy::for_loop_over_option\", \"for_loops_over_fallibles\"),\n     (\"clippy::for_loop_over_result\", \"for_loops_over_fallibles\"),\n     (\"clippy::for_loops_over_fallibles\", \"for_loops_over_fallibles\"),\n+    (\"clippy::forget_copy\", \"forget_copy\"),\n     (\"clippy::forget_ref\", \"forget_ref\"),\n     (\"clippy::into_iter_on_array\", \"array_into_iter\"),\n     (\"clippy::invalid_atomic_ordering\", \"invalid_atomic_ordering\"),"}, {"sha": "ebe60ebbd304d72b625642d2ad7ccb546b075446", "filename": "tests/ui/drop_forget_copy.rs", "status": "removed", "additions": 0, "deletions": 86, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/22688fc91f2d8811c50518499dcfb5691c6f2588/tests%2Fui%2Fdrop_forget_copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/22688fc91f2d8811c50518499dcfb5691c6f2588/tests%2Fui%2Fdrop_forget_copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_forget_copy.rs?ref=22688fc91f2d8811c50518499dcfb5691c6f2588", "patch": "@@ -1,86 +0,0 @@\n-#![warn(drop_copy, clippy::forget_copy)]\n-#![allow(clippy::toplevel_ref_arg, drop_ref, forget_ref, unused_mut)]\n-\n-use std::mem::{drop, forget};\n-use std::vec::Vec;\n-\n-#[derive(Copy, Clone)]\n-struct SomeStruct;\n-\n-struct AnotherStruct {\n-    x: u8,\n-    y: u8,\n-    z: Vec<u8>,\n-}\n-\n-impl Clone for AnotherStruct {\n-    fn clone(&self) -> AnotherStruct {\n-        AnotherStruct {\n-            x: self.x,\n-            y: self.y,\n-            z: self.z.clone(),\n-        }\n-    }\n-}\n-\n-fn main() {\n-    let s1 = SomeStruct {};\n-    let s2 = s1;\n-    let s3 = &s1;\n-    let mut s4 = s1;\n-    let ref s5 = s1;\n-\n-    drop(s1);\n-    drop(s2);\n-    drop(s3);\n-    drop(s4);\n-    drop(s5);\n-\n-    forget(s1);\n-    forget(s2);\n-    forget(s3);\n-    forget(s4);\n-    forget(s5);\n-\n-    let a1 = AnotherStruct {\n-        x: 255,\n-        y: 0,\n-        z: vec![1, 2, 3],\n-    };\n-    let a2 = &a1;\n-    let mut a3 = a1.clone();\n-    let ref a4 = a1;\n-    let a5 = a1.clone();\n-\n-    drop(a2);\n-    drop(a3);\n-    drop(a4);\n-    drop(a5);\n-\n-    forget(a2);\n-    let a3 = &a1;\n-    forget(a3);\n-    forget(a4);\n-    let a5 = a1.clone();\n-    forget(a5);\n-}\n-\n-#[allow(unused)]\n-#[allow(clippy::unit_cmp)]\n-fn issue9482(x: u8) {\n-    fn println_and<T>(t: T) -> T {\n-        println!(\"foo\");\n-        t\n-    }\n-\n-    match x {\n-        0 => drop(println_and(12)), // Don't lint (copy type), we only care about side-effects\n-        1 => drop(println_and(String::new())), // Don't lint (no copy type), we only care about side-effects\n-        2 => {\n-            drop(println_and(13)); // Lint, even if we only care about the side-effect, it's already in a block\n-        },\n-        3 if drop(println_and(14)) == () => (), // Lint, idiomatic use is only in body of `Arm`\n-        4 => drop(2),                           // Lint, not a fn/method call\n-        _ => (),\n-    }\n-}"}, {"sha": "3b19cf3968f6e104aaad743ebc633dca290832fa", "filename": "tests/ui/drop_forget_copy.stderr", "status": "removed", "additions": 0, "deletions": 112, "changes": 112, "blob_url": "https://github.com/rust-lang/rust/blob/22688fc91f2d8811c50518499dcfb5691c6f2588/tests%2Fui%2Fdrop_forget_copy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/22688fc91f2d8811c50518499dcfb5691c6f2588/tests%2Fui%2Fdrop_forget_copy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdrop_forget_copy.stderr?ref=22688fc91f2d8811c50518499dcfb5691c6f2588", "patch": "@@ -1,112 +0,0 @@\n-error: calls to `std::mem::forget` with a value that implements `Copy`. Forgetting a copy leaves the original intact\n-  --> $DIR/drop_forget_copy.rs:39:5\n-   |\n-LL |     forget(s1);\n-   |     ^^^^^^^^^^\n-   |\n-note: argument has type `SomeStruct`\n-  --> $DIR/drop_forget_copy.rs:39:12\n-   |\n-LL |     forget(s1);\n-   |            ^^\n-   = note: `-D clippy::forget-copy` implied by `-D warnings`\n-\n-error: calls to `std::mem::forget` with a value that implements `Copy`. Forgetting a copy leaves the original intact\n-  --> $DIR/drop_forget_copy.rs:40:5\n-   |\n-LL |     forget(s2);\n-   |     ^^^^^^^^^^\n-   |\n-note: argument has type `SomeStruct`\n-  --> $DIR/drop_forget_copy.rs:40:12\n-   |\n-LL |     forget(s2);\n-   |            ^^\n-\n-error: calls to `std::mem::forget` with a value that implements `Copy`. Forgetting a copy leaves the original intact\n-  --> $DIR/drop_forget_copy.rs:42:5\n-   |\n-LL |     forget(s4);\n-   |     ^^^^^^^^^^\n-   |\n-note: argument has type `SomeStruct`\n-  --> $DIR/drop_forget_copy.rs:42:12\n-   |\n-LL |     forget(s4);\n-   |            ^^\n-\n-error: calls to `std::mem::drop` with a value that implements `Copy`.\n-  --> $DIR/drop_forget_copy.rs:33:5\n-   |\n-LL |     drop(s1);\n-   |     ^^^^^^^^\n-   |\n-note: argument has type `SomeStruct`\n-  --> $DIR/drop_forget_copy.rs:33:10\n-   |\n-LL |     drop(s1);\n-   |          ^^\n-   = note: `-D drop-copy` implied by `-D warnings`\n-\n-error: calls to `std::mem::drop` with a value that implements `Copy`.\n-  --> $DIR/drop_forget_copy.rs:34:5\n-   |\n-LL |     drop(s2);\n-   |     ^^^^^^^^\n-   |\n-note: argument has type `SomeStruct`\n-  --> $DIR/drop_forget_copy.rs:34:10\n-   |\n-LL |     drop(s2);\n-   |          ^^\n-\n-error: calls to `std::mem::drop` with a value that implements `Copy`.\n-  --> $DIR/drop_forget_copy.rs:36:5\n-   |\n-LL |     drop(s4);\n-   |     ^^^^^^^^\n-   |\n-note: argument has type `SomeStruct`\n-  --> $DIR/drop_forget_copy.rs:36:10\n-   |\n-LL |     drop(s4);\n-   |          ^^\n-\n-error: calls to `std::mem::drop` with a value that implements `Copy`.\n-  --> $DIR/drop_forget_copy.rs:80:13\n-   |\n-LL |             drop(println_and(13)); // Lint, even if we only care about the side-effect, it's already in a block\n-   |             ^^^^^^^^^^^^^^^^^^^^^\n-   |\n-note: argument has type `i32`\n-  --> $DIR/drop_forget_copy.rs:80:18\n-   |\n-LL |             drop(println_and(13)); // Lint, even if we only care about the side-effect, it's already in a block\n-   |                  ^^^^^^^^^^^^^^^\n-\n-error: calls to `std::mem::drop` with a value that implements `Copy`.\n-  --> $DIR/drop_forget_copy.rs:82:14\n-   |\n-LL |         3 if drop(println_and(14)) == () => (), // Lint, idiomatic use is only in body of `Arm`\n-   |              ^^^^^^^^^^^^^^^^^^^^^\n-   |\n-note: argument has type `i32`\n-  --> $DIR/drop_forget_copy.rs:82:19\n-   |\n-LL |         3 if drop(println_and(14)) == () => (), // Lint, idiomatic use is only in body of `Arm`\n-   |                   ^^^^^^^^^^^^^^^\n-\n-error: calls to `std::mem::drop` with a value that implements `Copy`.\n-  --> $DIR/drop_forget_copy.rs:83:14\n-   |\n-LL |         4 => drop(2),                           // Lint, not a fn/method call\n-   |              ^^^^^^^\n-   |\n-note: argument has type `i32`\n-  --> $DIR/drop_forget_copy.rs:83:19\n-   |\n-LL |         4 => drop(2),                           // Lint, not a fn/method call\n-   |                   ^\n-\n-error: aborting due to 9 previous errors\n-"}, {"sha": "5137448a6d4babcbc7ec7c3391d885700c3d52bd", "filename": "tests/ui/mem_forget.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35e5aac5c8f033fd89b5070e6b201f046be21862/tests%2Fui%2Fmem_forget.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35e5aac5c8f033fd89b5070e6b201f046be21862/tests%2Fui%2Fmem_forget.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmem_forget.rs?ref=35e5aac5c8f033fd89b5070e6b201f046be21862", "patch": "@@ -5,7 +5,7 @@ use std::mem as memstuff;\n use std::mem::forget as forgetSomething;\n \n #[warn(clippy::mem_forget)]\n-#[allow(clippy::forget_copy)]\n+#[allow(forget_copy)]\n fn main() {\n     let five: i32 = 5;\n     forgetSomething(five);"}, {"sha": "9036f89261288ffb1f35a9634ba67b3ca0007798", "filename": "tests/ui/rename.fixed", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35e5aac5c8f033fd89b5070e6b201f046be21862/tests%2Fui%2Frename.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/35e5aac5c8f033fd89b5070e6b201f046be21862/tests%2Fui%2Frename.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.fixed?ref=35e5aac5c8f033fd89b5070e6b201f046be21862", "patch": "@@ -32,6 +32,7 @@\n #![allow(drop_copy)]\n #![allow(drop_ref)]\n #![allow(for_loops_over_fallibles)]\n+#![allow(forget_copy)]\n #![allow(forget_ref)]\n #![allow(array_into_iter)]\n #![allow(invalid_atomic_ordering)]\n@@ -79,6 +80,7 @@\n #![warn(for_loops_over_fallibles)]\n #![warn(for_loops_over_fallibles)]\n #![warn(for_loops_over_fallibles)]\n+#![warn(forget_copy)]\n #![warn(forget_ref)]\n #![warn(array_into_iter)]\n #![warn(invalid_atomic_ordering)]"}, {"sha": "43cabe810f3447d7825e3d7bb6936c022ac7075b", "filename": "tests/ui/rename.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/35e5aac5c8f033fd89b5070e6b201f046be21862/tests%2Fui%2Frename.rs", "raw_url": "https://github.com/rust-lang/rust/raw/35e5aac5c8f033fd89b5070e6b201f046be21862/tests%2Fui%2Frename.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.rs?ref=35e5aac5c8f033fd89b5070e6b201f046be21862", "patch": "@@ -32,6 +32,7 @@\n #![allow(drop_copy)]\n #![allow(drop_ref)]\n #![allow(for_loops_over_fallibles)]\n+#![allow(forget_copy)]\n #![allow(forget_ref)]\n #![allow(array_into_iter)]\n #![allow(invalid_atomic_ordering)]\n@@ -79,6 +80,7 @@\n #![warn(clippy::for_loop_over_option)]\n #![warn(clippy::for_loop_over_result)]\n #![warn(clippy::for_loops_over_fallibles)]\n+#![warn(clippy::forget_copy)]\n #![warn(clippy::forget_ref)]\n #![warn(clippy::into_iter_on_array)]\n #![warn(clippy::invalid_atomic_ordering)]"}, {"sha": "1ad7cf412c896db6cb34030b19cfc03dafdb94ec", "filename": "tests/ui/rename.stderr", "status": "modified", "additions": 53, "deletions": 47, "changes": 100, "blob_url": "https://github.com/rust-lang/rust/blob/35e5aac5c8f033fd89b5070e6b201f046be21862/tests%2Fui%2Frename.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/35e5aac5c8f033fd89b5070e6b201f046be21862/tests%2Fui%2Frename.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Frename.stderr?ref=35e5aac5c8f033fd89b5070e6b201f046be21862", "patch": "@@ -1,280 +1,286 @@\n error: lint `clippy::almost_complete_letter_range` has been renamed to `clippy::almost_complete_range`\n-  --> $DIR/rename.rs:47:9\n+  --> $DIR/rename.rs:48:9\n    |\n LL | #![warn(clippy::almost_complete_letter_range)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::almost_complete_range`\n    |\n    = note: `-D renamed-and-removed-lints` implied by `-D warnings`\n \n error: lint `clippy::blacklisted_name` has been renamed to `clippy::disallowed_names`\n-  --> $DIR/rename.rs:48:9\n+  --> $DIR/rename.rs:49:9\n    |\n LL | #![warn(clippy::blacklisted_name)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_names`\n \n error: lint `clippy::block_in_if_condition_expr` has been renamed to `clippy::blocks_in_if_conditions`\n-  --> $DIR/rename.rs:49:9\n+  --> $DIR/rename.rs:50:9\n    |\n LL | #![warn(clippy::block_in_if_condition_expr)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::blocks_in_if_conditions`\n \n error: lint `clippy::block_in_if_condition_stmt` has been renamed to `clippy::blocks_in_if_conditions`\n-  --> $DIR/rename.rs:50:9\n+  --> $DIR/rename.rs:51:9\n    |\n LL | #![warn(clippy::block_in_if_condition_stmt)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::blocks_in_if_conditions`\n \n error: lint `clippy::box_vec` has been renamed to `clippy::box_collection`\n-  --> $DIR/rename.rs:51:9\n+  --> $DIR/rename.rs:52:9\n    |\n LL | #![warn(clippy::box_vec)]\n    |         ^^^^^^^^^^^^^^^ help: use the new name: `clippy::box_collection`\n \n error: lint `clippy::const_static_lifetime` has been renamed to `clippy::redundant_static_lifetimes`\n-  --> $DIR/rename.rs:52:9\n+  --> $DIR/rename.rs:53:9\n    |\n LL | #![warn(clippy::const_static_lifetime)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::redundant_static_lifetimes`\n \n error: lint `clippy::cyclomatic_complexity` has been renamed to `clippy::cognitive_complexity`\n-  --> $DIR/rename.rs:53:9\n+  --> $DIR/rename.rs:54:9\n    |\n LL | #![warn(clippy::cyclomatic_complexity)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::cognitive_complexity`\n \n error: lint `clippy::derive_hash_xor_eq` has been renamed to `clippy::derived_hash_with_manual_eq`\n-  --> $DIR/rename.rs:54:9\n+  --> $DIR/rename.rs:55:9\n    |\n LL | #![warn(clippy::derive_hash_xor_eq)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::derived_hash_with_manual_eq`\n \n error: lint `clippy::disallowed_method` has been renamed to `clippy::disallowed_methods`\n-  --> $DIR/rename.rs:55:9\n+  --> $DIR/rename.rs:56:9\n    |\n LL | #![warn(clippy::disallowed_method)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_methods`\n \n error: lint `clippy::disallowed_type` has been renamed to `clippy::disallowed_types`\n-  --> $DIR/rename.rs:56:9\n+  --> $DIR/rename.rs:57:9\n    |\n LL | #![warn(clippy::disallowed_type)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::disallowed_types`\n \n error: lint `clippy::eval_order_dependence` has been renamed to `clippy::mixed_read_write_in_expression`\n-  --> $DIR/rename.rs:57:9\n+  --> $DIR/rename.rs:58:9\n    |\n LL | #![warn(clippy::eval_order_dependence)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::mixed_read_write_in_expression`\n \n error: lint `clippy::identity_conversion` has been renamed to `clippy::useless_conversion`\n-  --> $DIR/rename.rs:58:9\n+  --> $DIR/rename.rs:59:9\n    |\n LL | #![warn(clippy::identity_conversion)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::useless_conversion`\n \n error: lint `clippy::if_let_some_result` has been renamed to `clippy::match_result_ok`\n-  --> $DIR/rename.rs:59:9\n+  --> $DIR/rename.rs:60:9\n    |\n LL | #![warn(clippy::if_let_some_result)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::match_result_ok`\n \n error: lint `clippy::logic_bug` has been renamed to `clippy::overly_complex_bool_expr`\n-  --> $DIR/rename.rs:60:9\n+  --> $DIR/rename.rs:61:9\n    |\n LL | #![warn(clippy::logic_bug)]\n    |         ^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::overly_complex_bool_expr`\n \n error: lint `clippy::new_without_default_derive` has been renamed to `clippy::new_without_default`\n-  --> $DIR/rename.rs:61:9\n+  --> $DIR/rename.rs:62:9\n    |\n LL | #![warn(clippy::new_without_default_derive)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::new_without_default`\n \n error: lint `clippy::option_and_then_some` has been renamed to `clippy::bind_instead_of_map`\n-  --> $DIR/rename.rs:62:9\n+  --> $DIR/rename.rs:63:9\n    |\n LL | #![warn(clippy::option_and_then_some)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::bind_instead_of_map`\n \n error: lint `clippy::option_expect_used` has been renamed to `clippy::expect_used`\n-  --> $DIR/rename.rs:63:9\n+  --> $DIR/rename.rs:64:9\n    |\n LL | #![warn(clippy::option_expect_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::expect_used`\n \n error: lint `clippy::option_map_unwrap_or` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:64:9\n+  --> $DIR/rename.rs:65:9\n    |\n LL | #![warn(clippy::option_map_unwrap_or)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::option_map_unwrap_or_else` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:65:9\n+  --> $DIR/rename.rs:66:9\n    |\n LL | #![warn(clippy::option_map_unwrap_or_else)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::option_unwrap_used` has been renamed to `clippy::unwrap_used`\n-  --> $DIR/rename.rs:66:9\n+  --> $DIR/rename.rs:67:9\n    |\n LL | #![warn(clippy::option_unwrap_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::unwrap_used`\n \n error: lint `clippy::ref_in_deref` has been renamed to `clippy::needless_borrow`\n-  --> $DIR/rename.rs:67:9\n+  --> $DIR/rename.rs:68:9\n    |\n LL | #![warn(clippy::ref_in_deref)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::needless_borrow`\n \n error: lint `clippy::result_expect_used` has been renamed to `clippy::expect_used`\n-  --> $DIR/rename.rs:68:9\n+  --> $DIR/rename.rs:69:9\n    |\n LL | #![warn(clippy::result_expect_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::expect_used`\n \n error: lint `clippy::result_map_unwrap_or_else` has been renamed to `clippy::map_unwrap_or`\n-  --> $DIR/rename.rs:69:9\n+  --> $DIR/rename.rs:70:9\n    |\n LL | #![warn(clippy::result_map_unwrap_or_else)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::map_unwrap_or`\n \n error: lint `clippy::result_unwrap_used` has been renamed to `clippy::unwrap_used`\n-  --> $DIR/rename.rs:70:9\n+  --> $DIR/rename.rs:71:9\n    |\n LL | #![warn(clippy::result_unwrap_used)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::unwrap_used`\n \n error: lint `clippy::single_char_push_str` has been renamed to `clippy::single_char_add_str`\n-  --> $DIR/rename.rs:71:9\n+  --> $DIR/rename.rs:72:9\n    |\n LL | #![warn(clippy::single_char_push_str)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::single_char_add_str`\n \n error: lint `clippy::stutter` has been renamed to `clippy::module_name_repetitions`\n-  --> $DIR/rename.rs:72:9\n+  --> $DIR/rename.rs:73:9\n    |\n LL | #![warn(clippy::stutter)]\n    |         ^^^^^^^^^^^^^^^ help: use the new name: `clippy::module_name_repetitions`\n \n error: lint `clippy::to_string_in_display` has been renamed to `clippy::recursive_format_impl`\n-  --> $DIR/rename.rs:73:9\n+  --> $DIR/rename.rs:74:9\n    |\n LL | #![warn(clippy::to_string_in_display)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::recursive_format_impl`\n \n error: lint `clippy::zero_width_space` has been renamed to `clippy::invisible_characters`\n-  --> $DIR/rename.rs:74:9\n+  --> $DIR/rename.rs:75:9\n    |\n LL | #![warn(clippy::zero_width_space)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `clippy::invisible_characters`\n \n error: lint `clippy::clone_double_ref` has been renamed to `suspicious_double_ref_op`\n-  --> $DIR/rename.rs:75:9\n+  --> $DIR/rename.rs:76:9\n    |\n LL | #![warn(clippy::clone_double_ref)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `suspicious_double_ref_op`\n \n error: lint `clippy::drop_bounds` has been renamed to `drop_bounds`\n-  --> $DIR/rename.rs:76:9\n+  --> $DIR/rename.rs:77:9\n    |\n LL | #![warn(clippy::drop_bounds)]\n    |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `drop_bounds`\n \n error: lint `clippy::drop_copy` has been renamed to `drop_copy`\n-  --> $DIR/rename.rs:77:9\n+  --> $DIR/rename.rs:78:9\n    |\n LL | #![warn(clippy::drop_copy)]\n    |         ^^^^^^^^^^^^^^^^^ help: use the new name: `drop_copy`\n \n error: lint `clippy::drop_ref` has been renamed to `drop_ref`\n-  --> $DIR/rename.rs:78:9\n+  --> $DIR/rename.rs:79:9\n    |\n LL | #![warn(clippy::drop_ref)]\n    |         ^^^^^^^^^^^^^^^^ help: use the new name: `drop_ref`\n \n error: lint `clippy::for_loop_over_option` has been renamed to `for_loops_over_fallibles`\n-  --> $DIR/rename.rs:79:9\n+  --> $DIR/rename.rs:80:9\n    |\n LL | #![warn(clippy::for_loop_over_option)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `for_loops_over_fallibles`\n \n error: lint `clippy::for_loop_over_result` has been renamed to `for_loops_over_fallibles`\n-  --> $DIR/rename.rs:80:9\n+  --> $DIR/rename.rs:81:9\n    |\n LL | #![warn(clippy::for_loop_over_result)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `for_loops_over_fallibles`\n \n error: lint `clippy::for_loops_over_fallibles` has been renamed to `for_loops_over_fallibles`\n-  --> $DIR/rename.rs:81:9\n+  --> $DIR/rename.rs:82:9\n    |\n LL | #![warn(clippy::for_loops_over_fallibles)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `for_loops_over_fallibles`\n \n+error: lint `clippy::forget_copy` has been renamed to `forget_copy`\n+  --> $DIR/rename.rs:83:9\n+   |\n+LL | #![warn(clippy::forget_copy)]\n+   |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `forget_copy`\n+\n error: lint `clippy::forget_ref` has been renamed to `forget_ref`\n-  --> $DIR/rename.rs:82:9\n+  --> $DIR/rename.rs:84:9\n    |\n LL | #![warn(clippy::forget_ref)]\n    |         ^^^^^^^^^^^^^^^^^^ help: use the new name: `forget_ref`\n \n error: lint `clippy::into_iter_on_array` has been renamed to `array_into_iter`\n-  --> $DIR/rename.rs:83:9\n+  --> $DIR/rename.rs:85:9\n    |\n LL | #![warn(clippy::into_iter_on_array)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `array_into_iter`\n \n error: lint `clippy::invalid_atomic_ordering` has been renamed to `invalid_atomic_ordering`\n-  --> $DIR/rename.rs:84:9\n+  --> $DIR/rename.rs:86:9\n    |\n LL | #![warn(clippy::invalid_atomic_ordering)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `invalid_atomic_ordering`\n \n error: lint `clippy::invalid_ref` has been renamed to `invalid_value`\n-  --> $DIR/rename.rs:85:9\n+  --> $DIR/rename.rs:87:9\n    |\n LL | #![warn(clippy::invalid_ref)]\n    |         ^^^^^^^^^^^^^^^^^^^ help: use the new name: `invalid_value`\n \n error: lint `clippy::let_underscore_drop` has been renamed to `let_underscore_drop`\n-  --> $DIR/rename.rs:86:9\n+  --> $DIR/rename.rs:88:9\n    |\n LL | #![warn(clippy::let_underscore_drop)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `let_underscore_drop`\n \n error: lint `clippy::mem_discriminant_non_enum` has been renamed to `enum_intrinsics_non_enums`\n-  --> $DIR/rename.rs:87:9\n+  --> $DIR/rename.rs:89:9\n    |\n LL | #![warn(clippy::mem_discriminant_non_enum)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `enum_intrinsics_non_enums`\n \n error: lint `clippy::panic_params` has been renamed to `non_fmt_panics`\n-  --> $DIR/rename.rs:88:9\n+  --> $DIR/rename.rs:90:9\n    |\n LL | #![warn(clippy::panic_params)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `non_fmt_panics`\n \n error: lint `clippy::positional_named_format_parameters` has been renamed to `named_arguments_used_positionally`\n-  --> $DIR/rename.rs:89:9\n+  --> $DIR/rename.rs:91:9\n    |\n LL | #![warn(clippy::positional_named_format_parameters)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `named_arguments_used_positionally`\n \n error: lint `clippy::temporary_cstring_as_ptr` has been renamed to `temporary_cstring_as_ptr`\n-  --> $DIR/rename.rs:90:9\n+  --> $DIR/rename.rs:92:9\n    |\n LL | #![warn(clippy::temporary_cstring_as_ptr)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `temporary_cstring_as_ptr`\n \n error: lint `clippy::unknown_clippy_lints` has been renamed to `unknown_lints`\n-  --> $DIR/rename.rs:91:9\n+  --> $DIR/rename.rs:93:9\n    |\n LL | #![warn(clippy::unknown_clippy_lints)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: use the new name: `unknown_lints`\n \n error: lint `clippy::unused_label` has been renamed to `unused_labels`\n-  --> $DIR/rename.rs:92:9\n+  --> $DIR/rename.rs:94:9\n    |\n LL | #![warn(clippy::unused_label)]\n    |         ^^^^^^^^^^^^^^^^^^^^ help: use the new name: `unused_labels`\n \n-error: aborting due to 46 previous errors\n+error: aborting due to 47 previous errors\n "}]}