{"sha": "6af821f20205e449ab022d04e669c8063b6b9cb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhZjgyMWYyMDIwNWU0NDlhYjAyMmQwNGU2NjljODA2M2I2YjljYjQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-10T14:20:17Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-10T14:20:17Z"}, "message": "rename GlobalEvalContext to EvalContext", "tree": {"sha": "2d70de77180943960fb210cfc4109052b6c9786c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d70de77180943960fb210cfc4109052b6c9786c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6af821f20205e449ab022d04e669c8063b6b9cb4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXWsyhAAoJEFbW7qD8Z6xGaE4QALIRJYOLHISqF1aJ8ryaUvGg\nfp+dOu1Q5b7075jZPonbRhYTOZGLDjSUGNuGGEgsHYQCw4a4fAUwAZouYzkSkRM5\nYYWABE3bbyT8vqN8Xgv4MeccP/hs4aGhPx0f5fxdZ13WmzGr320Pqdrme7H4xiSR\nIjKuii00cEfLT8uWyLrsqFw3eMIY4e80kZ9aKb8NB0oPlFM1d+L0nlkLDbOZaEZt\nqLdqDlGLWaueicSMqvCJBAzo4peZGeok6sGLfsvF5IEJ8QLP8v4TD6ugegAQxBXA\naZEpFntNUS9I8eOXQl3dbqWQ10KMBtqH/VnHB7WfCX/U2+N5/g8RGgIi1hBF7sIO\nGO/YsHGDnCb2MVTlcfjZUkt42nyBGMm3SewRQ3OzwDqu5LbCXPYwViLbxg2B70ii\nBx0riF21i0H08M8EXhipAmDRhJmszJgeXpDVIXRt4PTZamMrBw5F9yDzSmx/BCdi\nSzrfQg+iSKoF83rGaqkMAHt+FySJcG2jHT8RfwaCYbZnErHd745PPqmDP6cg6T4Y\nRtB96T6f3C83zCt367JawAL3lFrNsaAWm9yhyMT1FGLP9RMas+o2pt6y71Cx6uR6\n/4NBP7Eyfy0eD76oGmQnNeF3Jpbe1ZscwUIab5oQYw1lLk2ayIr032CA4eR0J1cW\nDOzWx+uQ59RAGS5pj+Sz\n=TDp4\n-----END PGP SIGNATURE-----", "payload": "tree 2d70de77180943960fb210cfc4109052b6c9786c\nparent b3c1713b89cacc7c86e7cf028f2206b309a6a152\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465568417 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465568417 +0200\n\nrename GlobalEvalContext to EvalContext"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6af821f20205e449ab022d04e669c8063b6b9cb4", "html_url": "https://github.com/rust-lang/rust/commit/6af821f20205e449ab022d04e669c8063b6b9cb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6af821f20205e449ab022d04e669c8063b6b9cb4/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b3c1713b89cacc7c86e7cf028f2206b309a6a152", "url": "https://api.github.com/repos/rust-lang/rust/commits/b3c1713b89cacc7c86e7cf028f2206b309a6a152", "html_url": "https://github.com/rust-lang/rust/commit/b3c1713b89cacc7c86e7cf028f2206b309a6a152"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "f4e7ea0d7f06a5604f41bdf36aac52a3e1dd9a1e", "filename": "src/bin/miri.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6af821f20205e449ab022d04e669c8063b6b9cb4/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af821f20205e449ab022d04e669c8063b6b9cb4/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=6af821f20205e449ab022d04e669c8063b6b9cb4", "patch": "@@ -11,7 +11,7 @@ extern crate syntax;\n #[macro_use] extern crate log;\n \n use miri::{\n-    GlobalEvalContext,\n+    EvalContext,\n     CachedMir,\n     step,\n     EvalError,\n@@ -59,7 +59,7 @@ fn interpret_start_points<'a, 'tcx>(\n \n                 debug!(\"Interpreting: {}\", item.name);\n \n-                let mut gecx = GlobalEvalContext::new(tcx, mir_map);\n+                let mut gecx = EvalContext::new(tcx, mir_map);\n                 let substs = tcx.mk_substs(subst::Substs::empty());\n                 let return_ptr = gecx.alloc_ret_ptr(mir.return_ty, substs);\n \n@@ -86,7 +86,7 @@ fn interpret_start_points<'a, 'tcx>(\n     }\n }\n \n-fn report(tcx: TyCtxt, gecx: &GlobalEvalContext, e: EvalError) {\n+fn report(tcx: TyCtxt, gecx: &EvalContext, e: EvalError) {\n     let frame = gecx.stack().last().expect(\"stackframe was empty\");\n     let block = frame.mir.basic_block_data(frame.next_block);\n     let span = if frame.stmt < block.statements.len() {"}, {"sha": "9fcb2da36b5dba8254f5f9fd00405b82efd88078", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6af821f20205e449ab022d04e669c8063b6b9cb4/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af821f20205e449ab022d04e669c8063b6b9cb4/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=6af821f20205e449ab022d04e669c8063b6b9cb4", "patch": "@@ -24,11 +24,11 @@ use std::collections::HashMap;\n \n mod stepper;\n \n-pub fn step<'fncx, 'a: 'fncx, 'tcx: 'a>(gecx: &'fncx mut GlobalEvalContext<'a, 'tcx>) -> EvalResult<bool> {\n+pub fn step<'fncx, 'a: 'fncx, 'tcx: 'a>(gecx: &'fncx mut EvalContext<'a, 'tcx>) -> EvalResult<bool> {\n     stepper::Stepper::new(gecx).step()\n }\n \n-pub struct GlobalEvalContext<'a, 'tcx: 'a> {\n+pub struct EvalContext<'a, 'tcx: 'a> {\n     /// The results of the type checker, from rustc.\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n \n@@ -123,9 +123,9 @@ enum ConstantKind {\n     Global,\n }\n \n-impl<'a, 'tcx> GlobalEvalContext<'a, 'tcx> {\n+impl<'a, 'tcx> EvalContext<'a, 'tcx> {\n     pub fn new(tcx: TyCtxt<'a, 'tcx, 'tcx>, mir_map: &'a MirMap<'tcx>) -> Self {\n-        GlobalEvalContext {\n+        EvalContext {\n             tcx: tcx,\n             mir_map: mir_map,\n             mir_cache: RefCell::new(DefIdMap()),"}, {"sha": "7e1b328a4eeb5e99b7df2ec2c1f7567f2767d9f8", "filename": "src/interpreter/stepper.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/6af821f20205e449ab022d04e669c8063b6b9cb4/src%2Finterpreter%2Fstepper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af821f20205e449ab022d04e669c8063b6b9cb4/src%2Finterpreter%2Fstepper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fstepper.rs?ref=6af821f20205e449ab022d04e669c8063b6b9cb4", "patch": "@@ -1,7 +1,7 @@\n use super::{\n     CachedMir,\n     ConstantId,\n-    GlobalEvalContext,\n+    EvalContext,\n     ConstantKind,\n };\n use error::EvalResult;\n@@ -13,11 +13,11 @@ use syntax::codemap::Span;\n use std::rc::Rc;\n \n pub(super) struct Stepper<'fncx, 'a: 'fncx, 'tcx: 'a>{\n-    gecx: &'fncx mut GlobalEvalContext<'a, 'tcx>,\n+    gecx: &'fncx mut EvalContext<'a, 'tcx>,\n }\n \n impl<'fncx, 'a, 'tcx> Stepper<'fncx, 'a, 'tcx> {\n-    pub(super) fn new(gecx: &'fncx mut GlobalEvalContext<'a, 'tcx>) -> Self {\n+    pub(super) fn new(gecx: &'fncx mut EvalContext<'a, 'tcx>) -> Self {\n         Stepper {\n             gecx: gecx,\n         }\n@@ -98,7 +98,7 @@ impl<'fncx, 'a, 'tcx> Stepper<'fncx, 'a, 'tcx> {\n // The reason for this is, that `push_stack_frame` modifies the stack out of obvious reasons\n struct ConstantExtractor<'a, 'b: 'a, 'tcx: 'b> {\n     span: Span,\n-    gecx: &'a mut GlobalEvalContext<'b, 'tcx>,\n+    gecx: &'a mut EvalContext<'b, 'tcx>,\n     mir: &'a mir::Mir<'tcx>,\n     def_id: DefId,\n     substs: &'tcx subst::Substs<'tcx>,"}, {"sha": "c3369878f3554478e54d28413497a2ef77e9c259", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6af821f20205e449ab022d04e669c8063b6b9cb4/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6af821f20205e449ab022d04e669c8063b6b9cb4/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=6af821f20205e449ab022d04e669c8063b6b9cb4", "patch": "@@ -30,7 +30,7 @@ pub use error::{\n };\n \n pub use interpreter::{\n-    GlobalEvalContext,\n+    EvalContext,\n     step,\n     Frame,\n     CachedMir,"}]}