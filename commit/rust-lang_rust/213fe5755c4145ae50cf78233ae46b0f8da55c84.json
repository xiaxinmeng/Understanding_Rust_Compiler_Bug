{"sha": "213fe5755c4145ae50cf78233ae46b0f8da55c84", "node_id": "C_kwDOAAsO6NoAKDIxM2ZlNTc1NWM0MTQ1YWU1MGNmNzgyMzNhZTQ2YjBmOGRhNTVjODQ", "commit": {"author": {"name": "Hasan Ali", "email": "hasan@hasali.dev", "date": "2022-06-06T07:51:50Z"}, "committer": {"name": "Hasan Ali", "email": "hasan@hasali.dev", "date": "2022-06-06T07:51:50Z"}, "message": "Add restartServerOnConfigChange setting", "tree": {"sha": "a6159bdf21445d1ed53c981d9ccdae9c2ddbc6c7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a6159bdf21445d1ed53c981d9ccdae9c2ddbc6c7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/213fe5755c4145ae50cf78233ae46b0f8da55c84", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/213fe5755c4145ae50cf78233ae46b0f8da55c84", "html_url": "https://github.com/rust-lang/rust/commit/213fe5755c4145ae50cf78233ae46b0f8da55c84", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/213fe5755c4145ae50cf78233ae46b0f8da55c84/comments", "author": {"login": "hasali19", "id": 10169241, "node_id": "MDQ6VXNlcjEwMTY5MjQx", "avatar_url": "https://avatars.githubusercontent.com/u/10169241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hasali19", "html_url": "https://github.com/hasali19", "followers_url": "https://api.github.com/users/hasali19/followers", "following_url": "https://api.github.com/users/hasali19/following{/other_user}", "gists_url": "https://api.github.com/users/hasali19/gists{/gist_id}", "starred_url": "https://api.github.com/users/hasali19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hasali19/subscriptions", "organizations_url": "https://api.github.com/users/hasali19/orgs", "repos_url": "https://api.github.com/users/hasali19/repos", "events_url": "https://api.github.com/users/hasali19/events{/privacy}", "received_events_url": "https://api.github.com/users/hasali19/received_events", "type": "User", "site_admin": false}, "committer": {"login": "hasali19", "id": 10169241, "node_id": "MDQ6VXNlcjEwMTY5MjQx", "avatar_url": "https://avatars.githubusercontent.com/u/10169241?v=4", "gravatar_id": "", "url": "https://api.github.com/users/hasali19", "html_url": "https://github.com/hasali19", "followers_url": "https://api.github.com/users/hasali19/followers", "following_url": "https://api.github.com/users/hasali19/following{/other_user}", "gists_url": "https://api.github.com/users/hasali19/gists{/gist_id}", "starred_url": "https://api.github.com/users/hasali19/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/hasali19/subscriptions", "organizations_url": "https://api.github.com/users/hasali19/orgs", "repos_url": "https://api.github.com/users/hasali19/repos", "events_url": "https://api.github.com/users/hasali19/events{/privacy}", "received_events_url": "https://api.github.com/users/hasali19/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92241d65aed0b2908e15c7b4baa2992bba28b260", "url": "https://api.github.com/repos/rust-lang/rust/commits/92241d65aed0b2908e15c7b4baa2992bba28b260", "html_url": "https://github.com/rust-lang/rust/commit/92241d65aed0b2908e15c7b4baa2992bba28b260"}], "stats": {"total": 22, "additions": 21, "deletions": 1}, "files": [{"sha": "e56583e63bd2fd021d6b9ace7f932af913da5dad", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/213fe5755c4145ae50cf78233ae46b0f8da55c84/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/213fe5755c4145ae50cf78233ae46b0f8da55c84/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=213fe5755c4145ae50cf78233ae46b0f8da55c84", "patch": "@@ -1115,6 +1115,11 @@\n                         \"Search in current workspace and dependencies.\"\n                     ]\n                 },\n+                \"rust-analyzer.restartServerOnConfigChange\": {\n+                    \"markdownDescription\": \"Whether to restart the server automatically when certain settings that require a restart are changed.\",\n+                    \"default\": false,\n+                    \"type\": \"boolean\"\n+                },\n                 \"$generated-end\": {}\n             }\n         },"}, {"sha": "c9ca235ed5f7e8793bdc75049278d9e1e34f6fe4", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/213fe5755c4145ae50cf78233ae46b0f8da55c84/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/213fe5755c4145ae50cf78233ae46b0f8da55c84/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=213fe5755c4145ae50cf78233ae46b0f8da55c84", "patch": "@@ -60,7 +60,18 @@ export class Config {\n \n         if (!requiresReloadOpt) return;\n \n-        await vscode.commands.executeCommand(\"rust-analyzer.reload\");\n+        if (this.restartServerOnConfigChange) {\n+            await vscode.commands.executeCommand(\"rust-analyzer.reload\");\n+        } else {\n+            const userResponse = await vscode.window.showInformationMessage(\n+                `Changing \"${requiresReloadOpt}\" requires a reload`,\n+                \"Reload now\"\n+            );\n+\n+            if (userResponse === \"Reload now\") {\n+                await vscode.commands.executeCommand(\"rust-analyzer.reload\");\n+            }\n+        }\n     }\n \n     // We don't do runtime config validation here for simplicity. More on stackoverflow:\n@@ -112,6 +123,10 @@ export class Config {\n         return this.get<RunnableEnvCfg>(\"runnableEnv\");\n     }\n \n+    get restartServerOnConfigChange() {\n+        return this.get<boolean>(\"restartServerOnConfigChange\");\n+    }\n+\n     get debug() {\n         let sourceFileMap = this.get<Record<string, string> | \"auto\">(\"debug.sourceFileMap\");\n         if (sourceFileMap !== \"auto\") {"}]}