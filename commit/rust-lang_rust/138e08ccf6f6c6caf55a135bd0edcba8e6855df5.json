{"sha": "138e08ccf6f6c6caf55a135bd0edcba8e6855df5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEzOGUwOGNjZjZmNmM2Y2FmNTVhMTM1YmQwZWRjYmE4ZTY4NTVkZjU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2019-05-18T13:56:53Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2019-07-23T15:17:31Z"}, "message": "Make #[doc(include)] paths behave like other paths\n\nThis makes them relative to the containing file instead of the crate\nroot", "tree": {"sha": "87eabfe1808c8fad13278d5e1e7f802f1526caeb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87eabfe1808c8fad13278d5e1e7f802f1526caeb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/138e08ccf6f6c6caf55a135bd0edcba8e6855df5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/138e08ccf6f6c6caf55a135bd0edcba8e6855df5", "html_url": "https://github.com/rust-lang/rust/commit/138e08ccf6f6c6caf55a135bd0edcba8e6855df5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/138e08ccf6f6c6caf55a135bd0edcba8e6855df5/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba78db310b2ddf9b5f8e6c87a58e8ea8df374e16", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba78db310b2ddf9b5f8e6c87a58e8ea8df374e16", "html_url": "https://github.com/rust-lang/rust/commit/ba78db310b2ddf9b5f8e6c87a58e8ea8df374e16"}], "stats": {"total": 55, "additions": 34, "deletions": 21}, "files": [{"sha": "fd50657800d50809b1bc1bbd13d2d58f2343e76b", "filename": "src/libstd/os/raw/mod.rs", "status": "modified", "additions": 32, "deletions": 16, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/138e08ccf6f6c6caf55a135bd0edcba8e6855df5/src%2Flibstd%2Fos%2Fraw%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138e08ccf6f6c6caf55a135bd0edcba8e6855df5/src%2Flibstd%2Fos%2Fraw%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fos%2Fraw%2Fmod.rs?ref=138e08ccf6f6c6caf55a135bd0edcba8e6855df5", "patch": "@@ -8,7 +8,8 @@\n \n #![stable(feature = \"raw_os\", since = \"1.1.0\")]\n \n-#[doc(include = \"os/raw/char.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/char.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"char.md\"))]\n #[cfg(any(all(target_os = \"linux\", any(target_arch = \"aarch64\",\n                                        target_arch = \"arm\",\n                                        target_arch = \"powerpc\",\n@@ -31,7 +32,8 @@\n                                          target_arch = \"powerpc\")),\n           all(target_os = \"fuchsia\", target_arch = \"aarch64\")))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_char = u8;\n-#[doc(include = \"os/raw/char.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/char.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"char.md\"))]\n #[cfg(not(any(all(target_os = \"linux\", any(target_arch = \"aarch64\",\n                                            target_arch = \"arm\",\n                                            target_arch = \"powerpc\",\n@@ -54,37 +56,51 @@\n                                              target_arch = \"powerpc\")),\n               all(target_os = \"fuchsia\", target_arch = \"aarch64\"))))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_char = i8;\n-#[doc(include = \"os/raw/schar.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/schar.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"schar.md\"))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_schar = i8;\n-#[doc(include = \"os/raw/uchar.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/uchar.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"uchar.md\"))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_uchar = u8;\n-#[doc(include = \"os/raw/short.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/short.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"short.md\"))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_short = i16;\n-#[doc(include = \"os/raw/ushort.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/ushort.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"ushort.md\"))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_ushort = u16;\n-#[doc(include = \"os/raw/int.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/int.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"int.md\"))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_int = i32;\n-#[doc(include = \"os/raw/uint.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/uint.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"uint.md\"))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_uint = u32;\n-#[doc(include = \"os/raw/long.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/long.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"long.md\"))]\n #[cfg(any(target_pointer_width = \"32\", windows))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_long = i32;\n-#[doc(include = \"os/raw/ulong.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/ulong.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"ulong.md\"))]\n #[cfg(any(target_pointer_width = \"32\", windows))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_ulong = u32;\n-#[doc(include = \"os/raw/long.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/long.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"long.md\"))]\n #[cfg(all(target_pointer_width = \"64\", not(windows)))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_long = i64;\n-#[doc(include = \"os/raw/ulong.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/ulong.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"ulong.md\"))]\n #[cfg(all(target_pointer_width = \"64\", not(windows)))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_ulong = u64;\n-#[doc(include = \"os/raw/longlong.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/longlong.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"longlong.md\"))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_longlong = i64;\n-#[doc(include = \"os/raw/ulonglong.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/ulonglong.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"ulonglong.md\"))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_ulonglong = u64;\n-#[doc(include = \"os/raw/float.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/float.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"float.md\"))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_float = f32;\n-#[doc(include = \"os/raw/double.md\")]\n+#[cfg_attr(stage0, doc(include = \"os/raw/double.md\"))]\n+#[cfg_attr(not(stage0), doc(include = \"double.md\"))]\n #[stable(feature = \"raw_os\", since = \"1.1.0\")] pub type c_double = f64;\n \n #[stable(feature = \"raw_os\", since = \"1.1.0\")]"}, {"sha": "6cfcfdfbf7d85419f8d20e2dfbc8ecf6d7ab3ece", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/138e08ccf6f6c6caf55a135bd0edcba8e6855df5/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/138e08ccf6f6c6caf55a135bd0edcba8e6855df5/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=138e08ccf6f6c6caf55a135bd0edcba8e6855df5", "patch": "@@ -17,6 +17,7 @@ use crate::symbol::{sym, Symbol};\n use crate::tokenstream::{TokenStream, TokenTree};\n use crate::visit::{self, Visitor};\n use crate::util::map_in_place::MapInPlace;\n+use crate::util::path;\n \n use errors::{Applicability, FatalError};\n use smallvec::{smallvec, SmallVec};\n@@ -1253,7 +1254,7 @@ impl<'a, 'b> MutVisitor for InvocationCollector<'a, 'b> {\n                         return noop_visit_attribute(at, self);\n                     }\n \n-                    let filename = self.cx.root_path.join(file.to_string());\n+                    let filename = path::resolve(&*file.as_str(), it.span(), self.cx.source_map());\n                     match fs::read_to_string(&filename) {\n                         Ok(src) => {\n                             let src_interned = Symbol::intern(&src);\n@@ -1302,10 +1303,6 @@ impl<'a, 'b> MutVisitor for InvocationCollector<'a, 'b> {\n                                 );\n                                 err.span_label(lit.span, \"couldn't read file\");\n \n-                                if e.kind() == ErrorKind::NotFound {\n-                                    err.help(\"external doc paths are relative to the crate root\");\n-                                }\n-\n                                 err.emit();\n                             }\n                         }"}]}