{"sha": "9fd744b3e32817db3dcc3210fee67bfd0bcc11fe", "node_id": "C_kwDOAAsO6NoAKDlmZDc0NGIzZTMyODE3ZGIzZGNjMzIxMGZlZTY3YmZkMGJjYzExZmU", "commit": {"author": {"name": "Jacob Kiesel", "email": "kieseljake@gmail.com", "date": "2023-01-07T18:05:33Z"}, "committer": {"name": "Jacob Kiesel", "email": "kieseljake@gmail.com", "date": "2023-01-07T18:05:33Z"}, "message": "add tests for div_duration_* functions", "tree": {"sha": "7c031f1c37b93cc0d928a59e5321b89e08c26ac3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7c031f1c37b93cc0d928a59e5321b89e08c26ac3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9fd744b3e32817db3dcc3210fee67bfd0bcc11fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9fd744b3e32817db3dcc3210fee67bfd0bcc11fe", "html_url": "https://github.com/rust-lang/rust/commit/9fd744b3e32817db3dcc3210fee67bfd0bcc11fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9fd744b3e32817db3dcc3210fee67bfd0bcc11fe/comments", "author": {"login": "Xaeroxe", "id": 6182002, "node_id": "MDQ6VXNlcjYxODIwMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/6182002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xaeroxe", "html_url": "https://github.com/Xaeroxe", "followers_url": "https://api.github.com/users/Xaeroxe/followers", "following_url": "https://api.github.com/users/Xaeroxe/following{/other_user}", "gists_url": "https://api.github.com/users/Xaeroxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xaeroxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xaeroxe/subscriptions", "organizations_url": "https://api.github.com/users/Xaeroxe/orgs", "repos_url": "https://api.github.com/users/Xaeroxe/repos", "events_url": "https://api.github.com/users/Xaeroxe/events{/privacy}", "received_events_url": "https://api.github.com/users/Xaeroxe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xaeroxe", "id": 6182002, "node_id": "MDQ6VXNlcjYxODIwMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/6182002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xaeroxe", "html_url": "https://github.com/Xaeroxe", "followers_url": "https://api.github.com/users/Xaeroxe/followers", "following_url": "https://api.github.com/users/Xaeroxe/following{/other_user}", "gists_url": "https://api.github.com/users/Xaeroxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xaeroxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xaeroxe/subscriptions", "organizations_url": "https://api.github.com/users/Xaeroxe/orgs", "repos_url": "https://api.github.com/users/Xaeroxe/repos", "events_url": "https://api.github.com/users/Xaeroxe/events{/privacy}", "received_events_url": "https://api.github.com/users/Xaeroxe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2112fcb0ad7327b9f1ee618c18567d74fc084b1", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2112fcb0ad7327b9f1ee618c18567d74fc084b1", "html_url": "https://github.com/rust-lang/rust/commit/a2112fcb0ad7327b9f1ee618c18567d74fc084b1"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "2975c81f8fec90e872ab684df3b39d793cbfa025", "filename": "library/core/tests/time.rs", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/9fd744b3e32817db3dcc3210fee67bfd0bcc11fe/library%2Fcore%2Ftests%2Ftime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9fd744b3e32817db3dcc3210fee67bfd0bcc11fe/library%2Fcore%2Ftests%2Ftime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Ftime.rs?ref=9fd744b3e32817db3dcc3210fee67bfd0bcc11fe", "patch": "@@ -173,6 +173,32 @@ fn div() {\n     assert_eq!(Duration::new(99, 999_999_000) / 100, Duration::new(0, 999_999_990));\n }\n \n+#[test]\n+fn div_duration_f32() {\n+    assert_eq!(Duration::ZERO.div_duration_f32(Duration::MAX), 0.0);\n+    assert_eq!(Duration::MAX.div_duration_f32(Duration::ZERO), f32::INFINITY);\n+    assert_eq!((Duration::SECOND * 2).div_duration_f32(Duration::SECOND), 2.0);\n+    assert!(Duration::ZERO.div_duration_f32(Duration::ZERO).is_nan());\n+    // These tests demonstrate it doesn't panic with extreme values.\n+    // Accuracy of the computed value is not a huge concern, we know floats don't work well\n+    // at these extremes.\n+    assert!((Duration::MAX).div_duration_f32(Duration::NANOSECOND) > 10.0f32.powf(28.0));\n+    assert!((Duration::NANOSECOND).div_duration_f32(Duration::MAX) < 0.1);\n+}\n+\n+#[test]\n+fn div_duration_f64() {\n+    assert_eq!(Duration::ZERO.div_duration_f64(Duration::MAX), 0.0);\n+    assert_eq!(Duration::MAX.div_duration_f64(Duration::ZERO), f64::INFINITY);\n+    assert_eq!((Duration::SECOND * 2).div_duration_f64(Duration::SECOND), 2.0);\n+    assert!(Duration::ZERO.div_duration_f64(Duration::ZERO).is_nan());\n+    // These tests demonstrate it doesn't panic with extreme values.\n+    // Accuracy of the computed value is not a huge concern, we know floats don't work well\n+    // at these extremes.\n+    assert!((Duration::MAX).div_duration_f64(Duration::NANOSECOND) > 10.0f64.powf(28.0));\n+    assert!((Duration::NANOSECOND).div_duration_f64(Duration::MAX) < 0.1);\n+}\n+\n #[test]\n fn checked_div() {\n     assert_eq!(Duration::new(2, 0).checked_div(2), Some(Duration::new(1, 0)));"}]}