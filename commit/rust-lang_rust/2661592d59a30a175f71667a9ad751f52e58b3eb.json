{"sha": "2661592d59a30a175f71667a9ad751f52e58b3eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2NjE1OTJkNTlhMzBhMTc1ZjcxNjY3YTlhZDc1MWY1MmU1OGIzZWI=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-11-23T02:22:00Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-11-23T02:22:00Z"}, "message": "Handle multiply-referenced files\n\nFixes #645", "tree": {"sha": "7a02604e924bbbd8d53fba4f7b6015e7140bb5fd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a02604e924bbbd8d53fba4f7b6015e7140bb5fd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2661592d59a30a175f71667a9ad751f52e58b3eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2661592d59a30a175f71667a9ad751f52e58b3eb", "html_url": "https://github.com/rust-lang/rust/commit/2661592d59a30a175f71667a9ad751f52e58b3eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2661592d59a30a175f71667a9ad751f52e58b3eb/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e3f39941de464a4110ccf11b974ed86a53ec2555", "url": "https://api.github.com/repos/rust-lang/rust/commits/e3f39941de464a4110ccf11b974ed86a53ec2555", "html_url": "https://github.com/rust-lang/rust/commit/e3f39941de464a4110ccf11b974ed86a53ec2555"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "dd065a9939c2d655018c1b411aa3892f0212ce9c", "filename": "src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2661592d59a30a175f71667a9ad751f52e58b3eb/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2661592d59a30a175f71667a9ad751f52e58b3eb/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=2661592d59a30a175f71667a9ad751f52e58b3eb", "patch": "@@ -298,7 +298,7 @@ fn fmt_ast(krate: &ast::Crate,\n             println!(\"Formatting {}\", path);\n         }\n         let mut visitor = FmtVisitor::from_codemap(parse_session, config, Some(mode));\n-        visitor.format_separate_mod(module, path);\n+        visitor.format_separate_mod(module);\n         file_map.insert(path.to_owned(), visitor.buffer);\n     }\n     file_map\n@@ -404,7 +404,7 @@ pub fn format_string(input: String, config: &Config, mode: WriteMode) -> FileMap\n \n     // do the actual formatting\n     let mut visitor = FmtVisitor::from_codemap(&parse_session, config, Some(mode));\n-    visitor.format_separate_mod(&krate.module, path);\n+    visitor.format_separate_mod(&krate.module);\n \n     // append final newline\n     visitor.buffer.push_str(\"\\n\");"}, {"sha": "15db08f79421ed708481ab8e4115bdaf02913f1d", "filename": "src/visitor.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2661592d59a30a175f71667a9ad751f52e58b3eb/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2661592d59a30a175f71667a9ad751f52e58b3eb/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=2661592d59a30a175f71667a9ad751f52e58b3eb", "patch": "@@ -463,8 +463,8 @@ impl<'a> FmtVisitor<'a> {\n         }\n     }\n \n-    pub fn format_separate_mod(&mut self, m: &ast::Mod, filename: &str) {\n-        let filemap = self.codemap.get_filemap(filename);\n+    pub fn format_separate_mod(&mut self, m: &ast::Mod) {\n+        let filemap = self.codemap.lookup_char_pos(m.inner.lo).file;\n         self.last_pos = filemap.start_pos;\n         self.block_indent = Indent::empty();\n         self.walk_mod_items(m);"}, {"sha": "1f829b36f3f000d0dab47ab3f3fe735b1c7e427d", "filename": "tests/target/mulit-file.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2661592d59a30a175f71667a9ad751f52e58b3eb/tests%2Ftarget%2Fmulit-file.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2661592d59a30a175f71667a9ad751f52e58b3eb/tests%2Ftarget%2Fmulit-file.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmulit-file.rs?ref=2661592d59a30a175f71667a9ad751f52e58b3eb", "patch": "@@ -0,0 +1,10 @@\n+// Tests that where a single file is referred to in multiple places, we don't\n+// crash.\n+\n+#[cfg(all(foo))]\n+#[path = \"closure.rs\"]\n+pub mod imp;\n+\n+#[cfg(all(bar))]\n+#[path = \"closure.rs\"]\n+pub mod imp;"}]}