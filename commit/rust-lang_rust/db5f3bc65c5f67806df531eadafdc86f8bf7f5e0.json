{"sha": "db5f3bc65c5f67806df531eadafdc86f8bf7f5e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRiNWYzYmM2NWM1ZjY3ODA2ZGY1MzFlYWRhZmRjODZmOGJmN2Y1ZTA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-06-24T14:17:31Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-07-03T23:42:55Z"}, "message": "Fix some merge conflicts", "tree": {"sha": "c3c4cd297366df5eb161f7585ee6706dff752041", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3c4cd297366df5eb161f7585ee6706dff752041"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/db5f3bc65c5f67806df531eadafdc86f8bf7f5e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/db5f3bc65c5f67806df531eadafdc86f8bf7f5e0", "html_url": "https://github.com/rust-lang/rust/commit/db5f3bc65c5f67806df531eadafdc86f8bf7f5e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/db5f3bc65c5f67806df531eadafdc86f8bf7f5e0/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65a456df430260cc4c0a8ef189b764c34153d435", "url": "https://api.github.com/repos/rust-lang/rust/commits/65a456df430260cc4c0a8ef189b764c34153d435", "html_url": "https://github.com/rust-lang/rust/commit/65a456df430260cc4c0a8ef189b764c34153d435"}], "stats": {"total": 23, "additions": 12, "deletions": 11}, "files": [{"sha": "544e594dd21b0f42c8b3c39cebe1def4e3b4fcd9", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db5f3bc65c5f67806df531eadafdc86f8bf7f5e0/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db5f3bc65c5f67806df531eadafdc86f8bf7f5e0/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=db5f3bc65c5f67806df531eadafdc86f8bf7f5e0", "patch": "@@ -7336,7 +7336,7 @@ impl<'tcx> fmt::Debug for ObjectLifetimeDefault {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         match *self {\n             ObjectLifetimeDefault::Ambiguous => write!(f, \"Ambiguous\"),\n-            ObjectLifetimeDefault::BaseDefault => format!(\"BaseDefault\"),\n+            ObjectLifetimeDefault::BaseDefault => write!(f, \"BaseDefault\"),\n             ObjectLifetimeDefault::Specific(ref r) => write!(f, \"{:?}\", r),\n         }\n     }"}, {"sha": "44bea1cb621efc1037476f62eedffed1eab7c1e7", "filename": "src/librustc/util/ppaux.rs", "status": "modified", "additions": 10, "deletions": 9, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/db5f3bc65c5f67806df531eadafdc86f8bf7f5e0/src%2Flibrustc%2Futil%2Fppaux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db5f3bc65c5f67806df531eadafdc86f8bf7f5e0/src%2Flibrustc%2Futil%2Fppaux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fppaux.rs?ref=db5f3bc65c5f67806df531eadafdc86f8bf7f5e0", "patch": "@@ -290,17 +290,18 @@ impl<'tcx> fmt::Display for ty::TraitTy<'tcx> {\n             try!(write!(f, \" + {:?}\", bound));\n         }\n \n-        // Region, if not obviously implied by builtin bounds.\n-        if bounds.region_bound != ty::ReStatic {\n-            // Region bound is implied by builtin bounds:\n-            let bound = bounds.region_bound.to_string();\n-            if !bound.is_empty() {\n-                try!(write!(f, \" + {}\", bound));\n-            }\n+        // FIXME: It'd be nice to compute from context when this bound\n+        // is implied, but that's non-trivial -- we'd perhaps have to\n+        // use thread-local data of some kind? There are also\n+        // advantages to just showing the region, since it makes\n+        // people aware that it's there.\n+        let bound = bounds.region_bound.to_string();\n+        if !bound.is_empty() {\n+            try!(write!(f, \" + {}\", bound));\n         }\n \n-        if bounds.region_bound_will_change && tcx.sess.verbose() {\n-            components.push(format!(\"WILL-CHANGE\"));\n+        if bounds.region_bound_will_change && verbose() {\n+            try!(write!(f, \" [WILL-CHANGE]\"));\n         }\n \n         Ok(())"}, {"sha": "104e10f3207dbd24de32e26d540a778dd2d55912", "filename": "src/test/compile-fail/object-lifetime-default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/db5f3bc65c5f67806df531eadafdc86f8bf7f5e0/src%2Ftest%2Fcompile-fail%2Fobject-lifetime-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/db5f3bc65c5f67806df531eadafdc86f8bf7f5e0/src%2Ftest%2Fcompile-fail%2Fobject-lifetime-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fobject-lifetime-default.rs?ref=db5f3bc65c5f67806df531eadafdc86f8bf7f5e0", "patch": "@@ -29,6 +29,6 @@ struct E<'a,'b:'a,T:'b>(&'a T, &'b T); //~ ERROR 'b\n struct F<'a,'b,T:'a,U:'b>(&'a T, &'b U); //~ ERROR 'a,'b\n \n #[rustc_object_lifetime_default]\n-struct G<'a,'b,T:'a,U:'a+'b>(&'a T, &'b U); //~ ERROR 'a,Some(Ambiguous)\n+struct G<'a,'b,T:'a,U:'a+'b>(&'a T, &'b U); //~ ERROR 'a,Ambiguous\n \n fn main() { }"}]}