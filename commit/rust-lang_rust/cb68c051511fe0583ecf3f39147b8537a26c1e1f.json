{"sha": "cb68c051511fe0583ecf3f39147b8537a26c1e1f", "node_id": "C_kwDOAAsO6NoAKGNiNjhjMDUxNTExZmUwNTgzZWNmM2YzOTE0N2I4NTM3YTI2YzFlMWY", "commit": {"author": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-05-26T07:47:21Z"}, "committer": {"name": "Pietro Albini", "email": "pietro.albini@ferrous-systems.com", "date": "2023-05-26T07:47:21Z"}, "message": "address review feedback", "tree": {"sha": "a3ebbe9f0340d797d20c695a4f57e56f44fa2c35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3ebbe9f0340d797d20c695a4f57e56f44fa2c35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb68c051511fe0583ecf3f39147b8537a26c1e1f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEMycKYjxLY0eb13b7zXazX3c0dp4FAmRwZBIACgkQzXazX3c0\ndp6Brw//buFKems2ETJ55qhiSYy0gN6565/1ybhRY9tM9eKxWElzeeQYSTGOsrZt\nHIXAG9IhOuUbPru5A6973aN6GABkyLYhlMOoTdNbFfOlHJ/m7O8Q49rChirQjQxf\nhlfT3vttIydNtN7M0pz/4VzYFw7+3/PUcnU31cFYexORYSBda3DBjt3bl/aTSnIL\nvlaQfLmWg/kt4CHnx0/nGK/obRzCCTEFU8BdJ/5TYVruDK+jUCx1cXPFMlDZ0igQ\nrceUGFYzO7H1MnuXtV7RmEvD6TiJ3I0ciGFDEAGutU8aEimWhbjzgX3jIxsofT5W\nYs6h7gmQSlc5ULtur/g1EDqNNqc07fwi3/YTGpSy9tqQ82bNteYT2BFHcu4PD03f\n1kgF6jDEMRYe8tijwDJDkQ3vvzs0t8IdRcActEidKyBCjwZ7xOxzrFmE261EXjNc\norNWrZG5qRlNnnLY3EitNs8oergnvpnV+0ps8RO8i/5G5E5hgZW5pD8yP3V1ZhVm\nCwbg/nsmemevR61Ho+dEYiUo0mhOAthZcCAcVNGg03rPkVHkkQKi66J6Yts7kagM\nIq5a0GL00cDSASP8R7JKNW7gw/CeGBkJ3dXsTd1Ien2lO9SPCnvMCo9ZPVbzrSLo\nxWSFcwTsOISAglGDWSmmjxcJpbtpVdCrsRpic7WCYotpDqRyQw8=\n=dfKc\n-----END PGP SIGNATURE-----", "payload": "tree a3ebbe9f0340d797d20c695a4f57e56f44fa2c35\nparent 0553f71b1b27bd75102284711c84aede3001943b\nauthor Pietro Albini <pietro.albini@ferrous-systems.com> 1685087241 +0200\ncommitter Pietro Albini <pietro.albini@ferrous-systems.com> 1685087241 +0200\n\naddress review feedback\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb68c051511fe0583ecf3f39147b8537a26c1e1f", "html_url": "https://github.com/rust-lang/rust/commit/cb68c051511fe0583ecf3f39147b8537a26c1e1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb68c051511fe0583ecf3f39147b8537a26c1e1f/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0553f71b1b27bd75102284711c84aede3001943b", "url": "https://api.github.com/repos/rust-lang/rust/commits/0553f71b1b27bd75102284711c84aede3001943b", "html_url": "https://github.com/rust-lang/rust/commit/0553f71b1b27bd75102284711c84aede3001943b"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "8aa821a3afc075f2b2609d6b86211f5a809bc679", "filename": "src/bootstrap/metrics.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/cb68c051511fe0583ecf3f39147b8537a26c1e1f/src%2Fbootstrap%2Fmetrics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb68c051511fe0583ecf3f39147b8537a26c1e1f/src%2Fbootstrap%2Fmetrics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmetrics.rs?ref=cb68c051511fe0583ecf3f39147b8537a26c1e1f", "patch": "@@ -114,9 +114,7 @@ impl BuildMetrics {\n         if let Some(test_suite) = step.test_suites.last_mut() {\n             test_suite.tests.push(Test { name: name.to_string(), outcome });\n         } else {\n-            panic!(\n-                \"metrics.record_test() called without calling metrics.record_test_suite() first\"\n-            );\n+            panic!(\"metrics.record_test() called without calling metrics.begin_test_suite() first\");\n         }\n     }\n \n@@ -194,7 +192,7 @@ impl BuildMetrics {\n     fn prepare_json_step(&self, step: StepMetrics) -> JsonNode {\n         let mut children = Vec::new();\n         children.extend(step.children.into_iter().map(|child| self.prepare_json_step(child)));\n-        children.extend(step.test_suites.into_iter().map(|suite| JsonNode::TestSuite(suite)));\n+        children.extend(step.test_suites.into_iter().map(JsonNode::TestSuite));\n \n         JsonNode::RustbuildStep {\n             type_: step.type_,\n@@ -277,7 +275,7 @@ struct TestSuite {\n #[derive(Serialize, Deserialize)]\n #[serde(tag = \"kind\", rename_all = \"snake_case\")]\n pub(crate) enum TestSuiteMetadata {\n-    Crate {\n+    CargoPackage {\n         crates: Vec<String>,\n         target: String,\n         host: String,"}, {"sha": "29edbe5ae417c0f6b054fe1d2e81ba528c6c32d6", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cb68c051511fe0583ecf3f39147b8537a26c1e1f/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb68c051511fe0583ecf3f39147b8537a26c1e1f/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=cb68c051511fe0583ecf3f39147b8537a26c1e1f", "patch": "@@ -319,7 +319,7 @@ impl Step for Cargo {\n \n         #[cfg(feature = \"build-metrics\")]\n         builder.metrics.begin_test_suite(\n-            crate::metrics::TestSuiteMetadata::Crate {\n+            crate::metrics::TestSuiteMetadata::CargoPackage {\n                 crates: vec![\"cargo\".into()],\n                 target: self.host.triple.to_string(),\n                 host: self.host.triple.to_string(),\n@@ -2135,7 +2135,7 @@ fn run_cargo_test(\n \n     #[cfg(feature = \"build-metrics\")]\n     builder.metrics.begin_test_suite(\n-        crate::metrics::TestSuiteMetadata::Crate {\n+        crate::metrics::TestSuiteMetadata::CargoPackage {\n             crates: crates.iter().map(|c| c.to_string()).collect(),\n             target: target.triple.to_string(),\n             host: compiler.host.triple.to_string(),"}]}