{"sha": "bd837e899bdb13a6207a0494556380fc4491f2eb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJkODM3ZTg5OWJkYjEzYTYyMDdhMDQ5NDU1NjM4MGZjNDQ5MWYyZWI=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-10-25T16:46:01Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-12-09T08:46:22Z"}, "message": "make sure we do not promote things with interior mutability", "tree": {"sha": "07a2668f96d35e9995effc97e2cdcecbed04e1ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07a2668f96d35e9995effc97e2cdcecbed04e1ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bd837e899bdb13a6207a0494556380fc4491f2eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bd837e899bdb13a6207a0494556380fc4491f2eb", "html_url": "https://github.com/rust-lang/rust/commit/bd837e899bdb13a6207a0494556380fc4491f2eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bd837e899bdb13a6207a0494556380fc4491f2eb/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a68864b68859e5848865bd392ce6d892b16f5cdd", "url": "https://api.github.com/repos/rust-lang/rust/commits/a68864b68859e5848865bd392ce6d892b16f5cdd", "html_url": "https://github.com/rust-lang/rust/commit/a68864b68859e5848865bd392ce6d892b16f5cdd"}], "stats": {"total": 29, "additions": 22, "deletions": 7}, "files": [{"sha": "a7938fabad56f3af2b345fd8185f64a1859cf05d", "filename": "src/test/ui/consts/promote-not.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bd837e899bdb13a6207a0494556380fc4491f2eb/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bd837e899bdb13a6207a0494556380fc4491f2eb/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.rs?ref=bd837e899bdb13a6207a0494556380fc4491f2eb", "patch": "@@ -3,6 +3,8 @@\n #![allow(unconditional_panic, const_err)]\n #![feature(const_fn, const_fn_union)]\n \n+use std::cell::Cell;\n+\n // We do not promote mutable references.\n static mut TEST1: Option<&mut [i32]> = Some(&mut [1, 2, 3]); //~ ERROR temporary value dropped while borrowed\n \n@@ -32,4 +34,7 @@ const TEST_UNION: () = {\n     let _x: &'static i32 = &unsafe { U { x: 0 }.x }; //~ ERROR temporary value dropped while borrowed\n };\n \n-fn main() {}\n+fn main() {\n+    // We must not promote things with interior mutability.\n+    let _val: &'static _ = &(Cell::new(1), 2).0; //~ ERROR temporary value dropped while borrowed\n+}"}, {"sha": "2698424c16526ce40c81f7c2de002f59ee40ebcb", "filename": "src/test/ui/consts/promote-not.stderr", "status": "modified", "additions": 16, "deletions": 6, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/bd837e899bdb13a6207a0494556380fc4491f2eb/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bd837e899bdb13a6207a0494556380fc4491f2eb/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fpromote-not.stderr?ref=bd837e899bdb13a6207a0494556380fc4491f2eb", "patch": "@@ -1,5 +1,5 @@\n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/promote-not.rs:7:50\n+  --> $DIR/promote-not.rs:9:50\n    |\n LL | static mut TEST1: Option<&mut [i32]> = Some(&mut [1, 2, 3]);\n    |                                        ----------^^^^^^^^^-\n@@ -9,7 +9,7 @@ LL | static mut TEST1: Option<&mut [i32]> = Some(&mut [1, 2, 3]);\n    |                                        using this value as a static requires that borrow lasts for `'static`\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/promote-not.rs:10:18\n+  --> $DIR/promote-not.rs:12:18\n    |\n LL |     let x = &mut [1,2,3];\n    |                  ^^^^^^^ creates a temporary which is freed while still in use\n@@ -19,7 +19,7 @@ LL | };\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/promote-not.rs:19:32\n+  --> $DIR/promote-not.rs:21:32\n    |\n LL |         let _x: &'static () = &foo();\n    |                 -----------    ^^^^^ creates a temporary which is freed while still in use\n@@ -29,7 +29,7 @@ LL |     }\n    |     - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/promote-not.rs:27:29\n+  --> $DIR/promote-not.rs:29:29\n    |\n LL |     let _x: &'static i32 = &unsafe { U { x: 0 }.x };\n    |             ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n@@ -39,7 +39,7 @@ LL | }\n    | - temporary value is freed at the end of this statement\n \n error[E0716]: temporary value dropped while borrowed\n-  --> $DIR/promote-not.rs:32:29\n+  --> $DIR/promote-not.rs:34:29\n    |\n LL |     let _x: &'static i32 = &unsafe { U { x: 0 }.x };\n    |             ------------    ^^^^^^^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n@@ -48,6 +48,16 @@ LL |     let _x: &'static i32 = &unsafe { U { x: 0 }.x };\n LL | };\n    | - temporary value is freed at the end of this statement\n \n-error: aborting due to 5 previous errors\n+error[E0716]: temporary value dropped while borrowed\n+  --> $DIR/promote-not.rs:39:29\n+   |\n+LL |     let _val: &'static _ = &(Cell::new(1), 2).0;\n+   |               ----------    ^^^^^^^^^^^^^^^^^ creates a temporary which is freed while still in use\n+   |               |\n+   |               type annotation requires that borrow lasts for `'static`\n+LL | }\n+   | - temporary value is freed at the end of this statement\n+\n+error: aborting due to 6 previous errors\n \n For more information about this error, try `rustc --explain E0716`."}]}