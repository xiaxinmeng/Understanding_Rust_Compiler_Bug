{"sha": "1b9fd0134367be836ff53422175cfcff3eeb06d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFiOWZkMDEzNDM2N2JlODM2ZmY1MzQyMjE3NWNmY2ZmM2VlYjA2ZDY=", "commit": {"author": {"name": "Ingvar Stepanyan", "email": "me@rreverser.com", "date": "2018-01-25T13:28:55Z"}, "committer": {"name": "Ingvar Stepanyan", "email": "me@rreverser.com", "date": "2018-02-04T11:53:10Z"}, "message": "Support compact macros 2.0 representation", "tree": {"sha": "2dd7871459c9cce50a99b6626dc3ebad446ac583", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2dd7871459c9cce50a99b6626dc3ebad446ac583"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1b9fd0134367be836ff53422175cfcff3eeb06d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1b9fd0134367be836ff53422175cfcff3eeb06d6", "html_url": "https://github.com/rust-lang/rust/commit/1b9fd0134367be836ff53422175cfcff3eeb06d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1b9fd0134367be836ff53422175cfcff3eeb06d6/comments", "author": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RReverser", "id": 557590, "node_id": "MDQ6VXNlcjU1NzU5MA==", "avatar_url": "https://avatars.githubusercontent.com/u/557590?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RReverser", "html_url": "https://github.com/RReverser", "followers_url": "https://api.github.com/users/RReverser/followers", "following_url": "https://api.github.com/users/RReverser/following{/other_user}", "gists_url": "https://api.github.com/users/RReverser/gists{/gist_id}", "starred_url": "https://api.github.com/users/RReverser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RReverser/subscriptions", "organizations_url": "https://api.github.com/users/RReverser/orgs", "repos_url": "https://api.github.com/users/RReverser/repos", "events_url": "https://api.github.com/users/RReverser/events{/privacy}", "received_events_url": "https://api.github.com/users/RReverser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9318b4d2cfc3690812a4cad93934d505d1a6f72d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9318b4d2cfc3690812a4cad93934d505d1a6f72d", "html_url": "https://github.com/rust-lang/rust/commit/9318b4d2cfc3690812a4cad93934d505d1a6f72d"}], "stats": {"total": 71, "additions": 40, "deletions": 31}, "files": [{"sha": "a15227fb020bf15a75dbb3280fc5402c63e1643f", "filename": "src/macros.rs", "status": "modified", "additions": 26, "deletions": 10, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/1b9fd0134367be836ff53422175cfcff3eeb06d6/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b9fd0134367be836ff53422175cfcff3eeb06d6/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=1b9fd0134367be836ff53422175cfcff3eeb06d6", "patch": "@@ -305,9 +305,16 @@ pub fn rewrite_macro_def(\n \n     result += \" \";\n     result += &ident.name.as_str();\n-    result += \" {\";\n \n-    let mac_indent = indent.block_indent(context.config);\n+    let multi_branch_style = def.legacy || parsed_def.branches.len() != 1;\n+\n+    let mac_indent = if multi_branch_style {\n+        result += \" {\";\n+        indent.block_indent(context.config)\n+    } else {\n+        indent\n+    };\n+\n     let mac_indent_str = mac_indent.to_string(context.config);\n \n     for branch in parsed_def.branches {\n@@ -317,11 +324,18 @@ pub fn rewrite_macro_def(\n             return snippet;\n         }\n \n-        result += \"\\n\";\n-        result += &mac_indent_str;\n-        result += \"(\";\n-        result += &format_macro_args(branch.args)?;\n-        result += \") => {\\n\";\n+        let args = format!(\"({})\", format_macro_args(branch.args)?);\n+\n+        if multi_branch_style {\n+            result += \"\\n\";\n+            result += &mac_indent_str;\n+            result += &args;\n+            result += \" =>\";\n+        } else {\n+            result += &args;\n+        }\n+\n+        result += \" {\\n\";\n \n         // The macro body is the most interesting part. It might end up as various\n         // AST nodes, but also has special variables (e.g, `$foo`) which can't be\n@@ -380,14 +394,16 @@ pub fn rewrite_macro_def(\n \n         result += &mac_indent_str;\n         result += \"}\";\n-        if def.legacy{\n+        if def.legacy {\n             result += \";\";\n         }\n         result += \"\\n\";\n     }\n \n-    result += &indent.to_string(context.config);\n-    result += \"}\";\n+    if multi_branch_style {\n+        result += &indent.to_string(context.config);\n+        result += \"}\";\n+    }\n \n     Some(result)\n }"}, {"sha": "82cc76554f5b0fbebd5e5330eea5db338a8a3492", "filename": "tests/target/macros.rs", "status": "modified", "additions": 14, "deletions": 21, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/1b9fd0134367be836ff53422175cfcff3eeb06d6/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1b9fd0134367be836ff53422175cfcff3eeb06d6/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=1b9fd0134367be836ff53422175cfcff3eeb06d6", "patch": "@@ -27,9 +27,8 @@ fn main() {\n     );\n \n     kaas!(\n-        // comments\n-        a, // post macro\n-        b  // another\n+        /* comments */ a, /* post macro */\n+        b  /* another */\n     );\n \n     trailingcomma!(a, b, c,);\n@@ -890,29 +889,23 @@ fn macro_in_pattern_position() {\n     };\n }\n \n-macro foo {\n-    () => {\n-    }\n+macro foo() {\n }\n \n-pub macro bar {\n-    ($x: ident + $y: expr;) => {\n-        fn foo($x: Foo) {\n-            long_function(\n-                a_long_argument_to_a_long_function_is_what_this_is(AAAAAAAAAAAAAAAAAAAAAAAAAAAA),\n-                $x.bar($y),\n-            );\n-        }\n+pub macro bar($x: ident + $y: expr;) {\n+    fn foo($x: Foo) {\n+        long_function(\n+            a_long_argument_to_a_long_function_is_what_this_is(AAAAAAAAAAAAAAAAAAAAAAAAAAAA),\n+            $x.bar($y),\n+        );\n     }\n }\n \n-macro foo {\n-    () => {\n-        // a comment\n-        fn foo() {\n-            // another comment\n-            bar();\n-        }\n+macro foo() {\n+    // a comment\n+    fn foo() {\n+        // another comment\n+        bar();\n     }\n }\n "}]}