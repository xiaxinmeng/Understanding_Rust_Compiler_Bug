{"sha": "c1bc5e51d6cb6ea997da1757e16ddb1b9093d25e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxYmM1ZTUxZDZjYjZlYTk5N2RhMTc1N2UxNmRkYjFiOTA5M2QyNWU=", "commit": {"author": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-20T04:41:03Z"}, "committer": {"name": "Mark Simulacrum", "email": "mark.simulacrum@gmail.com", "date": "2016-12-21T03:04:46Z"}, "message": "Improve cache quality for eh_personality.", "tree": {"sha": "f12873346dce9082fb1dde00f77dc0404707d916", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f12873346dce9082fb1dde00f77dc0404707d916"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1bc5e51d6cb6ea997da1757e16ddb1b9093d25e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1bc5e51d6cb6ea997da1757e16ddb1b9093d25e", "html_url": "https://github.com/rust-lang/rust/commit/c1bc5e51d6cb6ea997da1757e16ddb1b9093d25e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1bc5e51d6cb6ea997da1757e16ddb1b9093d25e/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a9b5c63d437c71c5ee11581a75e8fdecf8a1794c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9b5c63d437c71c5ee11581a75e8fdecf8a1794c", "html_url": "https://github.com/rust-lang/rust/commit/a9b5c63d437c71c5ee11581a75e8fdecf8a1794c"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "f292a70965004c0a2c3964b043d1842cc1889e5b", "filename": "src/librustc_trans/context.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c1bc5e51d6cb6ea997da1757e16ddb1b9093d25e/src%2Flibrustc_trans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1bc5e51d6cb6ea997da1757e16ddb1b9093d25e/src%2Flibrustc_trans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fcontext.rs?ref=c1bc5e51d6cb6ea997da1757e16ddb1b9093d25e", "patch": "@@ -927,26 +927,26 @@ impl<'b, 'tcx> CrateContext<'b, 'tcx> {\n         // `rust_eh_personality` function, but rather we wired it up to the\n         // CRT's custom personality function, which forces LLVM to consider\n         // landing pads as \"landing pads for SEH\".\n+        if let Some(llpersonality) = self.local().eh_personality.get() {\n+            return llpersonality\n+        }\n         let tcx = self.tcx();\n-        match tcx.lang_items.eh_personality() {\n+        let llfn = match tcx.lang_items.eh_personality() {\n             Some(def_id) if !base::wants_msvc_seh(self.sess()) => {\n                 Callee::def(self, def_id, tcx.intern_substs(&[])).reify(self)\n             }\n             _ => {\n-                if let Some(llpersonality) = self.local().eh_personality.get() {\n-                    return llpersonality\n-                }\n                 let name = if base::wants_msvc_seh(self.sess()) {\n                     \"__CxxFrameHandler3\"\n                 } else {\n                     \"rust_eh_personality\"\n                 };\n                 let fty = Type::variadic_func(&[], &Type::i32(self));\n-                let f = declare::declare_cfn(self, name, fty);\n-                self.local().eh_personality.set(Some(f));\n-                f\n+                declare::declare_cfn(self, name, fty)\n             }\n-        }\n+        };\n+        self.local().eh_personality.set(Some(llfn));\n+        llfn\n     }\n \n     // Returns a ValueRef of the \"eh_unwind_resume\" lang item if one is defined,"}]}