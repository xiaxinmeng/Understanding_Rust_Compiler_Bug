{"sha": "4f61314fc5ed33b822384f52103214965482e77c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRmNjEzMTRmYzVlZDMzYjgyMjM4NGY1MjEwMzIxNDk2NTQ4MmU3N2M=", "commit": {"author": {"name": "Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-10T12:43:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-12-10T12:43:29Z"}, "message": "Merge pull request #566 from RalfJung/foreign-full-mir\n\nSupport building and running with full MIR on foreign architectures, drop support for missing MIR", "tree": {"sha": "fc87fa1fde1dd0adc767885377cc6a398f98dbf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc87fa1fde1dd0adc767885377cc6a398f98dbf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4f61314fc5ed33b822384f52103214965482e77c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcDl9xCRBK7hj4Ov3rIwAAdHIIAAyAFeJTnJFmpxRGhkQnMDhC\nu3URYjUmOShihCwMOdPpsdxZ/j3U8yIxfvQJfI8QS8azNB4QzwSvPzur4KOrhAzG\nmaQY81vyyPfSHOwGcPkm/Xj+Zg8h+aEeU628QkJOEespFIgDLoYhVd3dhMihjvEa\nIca4Aa7kSP06R97Hq8JSNlUACXfEs0Of0RZTW0hsdZ2PKI17ahW+JJqCPPPqIQLP\nQTO8KC6GMjxZPwYQ8PgdZw6Ftdt1sD19rLWnrZrlgPrHuD1ccJOeJk4KstWz1DQ4\nrKdmB85Jh8uxShtXieRuiYmXRnwvXajrnB923nUWYHQlTLl/NM03cSmwsmRq7kM=\n=1T51\n-----END PGP SIGNATURE-----\n", "payload": "tree fc87fa1fde1dd0adc767885377cc6a398f98dbf9\nparent bccadeb4f7cbeeb14097a365653148afe8bbd159\nparent 5689366a0d47ced0e7ed85abed168493d82555c5\nauthor Oliver S\u0336c\u0336h\u0336n\u0336e\u0336i\u0336d\u0336e\u0336r Scherer <github35764891676564198441@oli-obk.de> 1544445809 +0100\ncommitter GitHub <noreply@github.com> 1544445809 +0100\n\nMerge pull request #566 from RalfJung/foreign-full-mir\n\nSupport building and running with full MIR on foreign architectures, drop support for missing MIR"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4f61314fc5ed33b822384f52103214965482e77c", "html_url": "https://github.com/rust-lang/rust/commit/4f61314fc5ed33b822384f52103214965482e77c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4f61314fc5ed33b822384f52103214965482e77c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bccadeb4f7cbeeb14097a365653148afe8bbd159", "url": "https://api.github.com/repos/rust-lang/rust/commits/bccadeb4f7cbeeb14097a365653148afe8bbd159", "html_url": "https://github.com/rust-lang/rust/commit/bccadeb4f7cbeeb14097a365653148afe8bbd159"}, {"sha": "5689366a0d47ced0e7ed85abed168493d82555c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5689366a0d47ced0e7ed85abed168493d82555c5", "html_url": "https://github.com/rust-lang/rust/commit/5689366a0d47ced0e7ed85abed168493d82555c5"}], "stats": {"total": 379, "additions": 140, "deletions": 239}, "files": [{"sha": "1d49394e29b8ee4d188c5687bc446b4e4d7cf814", "filename": ".travis.yml", "status": "modified", "additions": 19, "deletions": 14, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=4f61314fc5ed33b822384f52103214965482e77c", "patch": "@@ -9,47 +9,52 @@ cache:\n os:\n - linux\n - osx\n+dist: xenial\n \n before_script:\n+# install extra stuff for cross-compilation\n+- if [[ \"$TRAVIS_OS_NAME\" == linux ]]; then sudo apt update && sudo apt install gcc-multilib; fi\n # macOS weirdness (https://github.com/travis-ci/travis-ci/issues/6307, https://github.com/travis-ci/travis-ci/issues/10165)\n - if [[ \"$TRAVIS_OS_NAME\" == osx ]]; then rvm get stable; fi\n # Compute the rust version we use. We do not use \"language: rust\" to have more control here.\n - |\n-  if [ \"$TRAVIS_EVENT_TYPE\" = cron ]; then\n+  if [[ \"$TRAVIS_EVENT_TYPE\" == cron ]]; then\n     RUST_TOOLCHAIN=nightly\n   else\n     RUST_TOOLCHAIN=$(cat rust-version)\n   fi\n+- |\n+  if [ \"$TRAVIS_OS_NAME\" == osx ]; then\n+    export MIRI_SYSROOT_BASE=~/Library/Caches/miri.miri.miri/\n+  else\n+    export MIRI_SYSROOT_BASE=~/.cache/miri/\n+  fi\n # install Rust\n - curl https://build.travis-ci.org/files/rustup-init.sh -sSf | sh -s -- -y --default-toolchain \"$RUST_TOOLCHAIN\"\n - export PATH=$HOME/.cargo/bin:$PATH\n - rustc --version\n-# customize installation\n-- rustup target add i686-unknown-linux-gnu\n-- rustup target add i686-pc-windows-gnu\n-- rustup target add i686-pc-windows-msvc\n \n script:\n - set -e\n - |\n-  # Test and install plain miri\n+  # Build and install miri\n   cargo build --release --all-features --all-targets &&\n-  cargo test --release --all-features &&\n   cargo install --all-features --force --path .\n - |\n-  # Get ourselves a MIR-full libstd, and use it henceforth\n+  # Get ourselves a MIR-full libstd for the host and a foreign architecture\n   cargo miri setup &&\n-  if [ \"$TRAVIS_OS_NAME\" == osx ]; then\n-    export MIRI_SYSROOT=~/Library/Caches/miri.miri.miri/HOST\n+  if [[ \"$TRAVIS_OS_NAME\" == osx ]]; then\n+    cargo miri setup --target i686-apple-darwin\n   else\n-    export MIRI_SYSROOT=~/.cache/miri/HOST\n+    cargo miri setup --target i686-unknown-linux-gnu\n   fi\n - |\n-  # Test miri with full MIR\n-  cargo test --release --all-features\n+  # Test miri with full MIR, on the host and other architectures\n+  MIRI_SYSROOT=$MIRI_SYSROOT_BASE/HOST cargo test --release --all-features &&\n+  MIRI_SYSROOT=$MIRI_SYSROOT_BASE cargo test --release --all-features\n - |\n   # Test cargo integration\n-  (cd cargo-miri-test && ./run-test.py)\n+  (cd test-cargo-miri && MIRI_SYSROOT=$MIRI_SYSROOT_BASE/HOST ./run-test.py)\n \n notifications:\n   email:"}, {"sha": "ca670df0f2034480a238c83a81f90833a4bdc377", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=4f61314fc5ed33b822384f52103214965482e77c", "patch": "@@ -36,6 +36,7 @@ required-features = [\"rustc_tests\"]\n byteorder = { version = \"1.1\", features = [\"i128\"]}\n cargo_metadata = { version = \"0.6\", optional = true }\n directories = { version = \"1.0\", optional = true }\n+rustc_version = { version = \"0.2.3\", optional = true }\n env_logger = \"0.5\"\n log = \"0.4\"\n \n@@ -44,7 +45,7 @@ vergen = \"3\"\n \n [features]\n default = [\"cargo_miri\"]\n-cargo_miri = [\"cargo_metadata\", \"directories\"]\n+cargo_miri = [\"cargo_metadata\", \"directories\", \"rustc_version\"]\n rustc_tests = []\n \n [dev-dependencies]"}, {"sha": "1b9e5304bd0374b3af93d29a43b7d3f9e2ae41bd", "filename": "README.md", "status": "modified", "additions": 0, "deletions": 3, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=4f61314fc5ed33b822384f52103214965482e77c", "patch": "@@ -133,9 +133,6 @@ cp config.toml.example config.toml\n rustup toolchain link custom build/x86_64-unknown-linux-gnu/stage2\n # Now cd to your Miri directory, then configure rustup\n rustup override set custom\n-# We also need to tell Miri where to find its sysroot. Since we set\n-# `test-miri` above, we can just use rustc' sysroot.\n-export MIRI_SYSROOT=$(rustc --print sysroot)\n ```\n \n With this, you should now have a working development setup!  See"}, {"sha": "4f4aebd8079150921c2c58a68ee6d4372c3ae89b", "filename": "appveyor.yml", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=4f61314fc5ed33b822384f52103214965482e77c", "patch": "@@ -27,13 +27,12 @@ build: false\n test_script:\n     - set RUSTFLAGS=-g\n     - set RUST_BACKTRACE=1\n-    # Test plain miri\n+    # Build miri\n     - cargo build --release --all-features --all-targets\n-    - cargo test --release --all-features\n     # Get ourselves a MIR-full libstd, and use it henceforth\n     - cargo run --release --all-features --bin cargo-miri -- miri setup\n     - set MIRI_SYSROOT=%USERPROFILE%\\AppData\\Local\\miri\\miri\\cache\\HOST\n-    # Test miri with full MIR\n+    # Test miri\n     - cargo test --release --all-features\n \n notifications:"}, {"sha": "7e1785fd3b9380a19ebd844aa6b92cc9295084ab", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 46, "deletions": 20, "changes": 66, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "patch": "@@ -53,25 +53,41 @@ fn show_error(msg: String) -> ! {\n     std::process::exit(1)\n }\n \n-fn list_targets(mut args: impl Iterator<Item=String>) -> impl Iterator<Item=cargo_metadata::Target> {\n+fn get_arg_flag_value(name: &str) -> Option<String> {\n+    // stop searching at `--`\n+    let mut args = std::env::args().skip_while(|val| !(val.starts_with(name) || val == \"--\"));\n+\n+    match args.next() {\n+        Some(ref p) if p == \"--\" => None,\n+        Some(ref p) if p == name => args.next(),\n+        Some(p) => {\n+            // Make sure this really starts with `$name=`, we didn't test for the `=` yet.\n+            let v = &p[name.len()..]; // strip leading `$name`\n+            if v.starts_with('=') {\n+                Some(v[1..].to_owned()) // strip leading `=`\n+            } else {\n+                None\n+            }\n+        },\n+        None => None,\n+    }\n+}\n+\n+fn list_targets() -> impl Iterator<Item=cargo_metadata::Target> {\n     // We need to get the manifest, and then the metadata, to enumerate targets.\n-    let manifest_path_arg = args.find(|val| {\n-        val.starts_with(\"--manifest-path=\")\n-    });\n+    let manifest_path = get_arg_flag_value(\"--manifest-path\").map(|m|\n+        Path::new(&m).canonicalize().unwrap()\n+    );\n \n     let mut metadata = if let Ok(metadata) = cargo_metadata::metadata(\n-        manifest_path_arg.as_ref().map(AsRef::as_ref),\n+        manifest_path.as_ref().map(AsRef::as_ref),\n     )\n     {\n         metadata\n     } else {\n         show_error(format!(\"error: Could not obtain cargo metadata.\"));\n     };\n \n-    let manifest_path = manifest_path_arg.map(|arg| {\n-        PathBuf::from(Path::new(&arg[\"--manifest-path=\".len()..]))\n-    });\n-\n     let current_dir = std::env::current_dir();\n \n     let package_index = metadata\n@@ -176,17 +192,28 @@ path = \"lib.rs\"\n         \"#).unwrap();\n     File::create(dir.join(\"lib.rs\")).unwrap();\n     // Run xargo\n-    if !Command::new(\"xargo\").arg(\"build\").arg(\"-q\")\n+    let target = get_arg_flag_value(\"--target\");\n+    let mut command = Command::new(\"xargo\");\n+    command.arg(\"build\").arg(\"-q\")\n         .current_dir(&dir)\n         .env(\"RUSTFLAGS\", miri::miri_default_args().join(\" \"))\n-        .env(\"XARGO_HOME\", dir.to_str().unwrap())\n-        .status().unwrap().success()\n+        .env(\"XARGO_HOME\", dir.to_str().unwrap());\n+    if let Some(ref target) = target {\n+        command.arg(\"--target\").arg(&target);\n+    }\n+    if !command.status().unwrap().success()\n     {\n         show_error(format!(\"Failed to run xargo\"));\n     }\n \n-    // That should be it!\n-    let sysroot = dir.join(\"HOST\");\n+    // That should be it!  But we need to figure out where xargo built stuff.\n+    // Unfortunately, it puts things into a different directory when the\n+    // architecture matches the host.\n+    let is_host = match target {\n+        None => true,\n+        Some(target) => target == rustc_version::version_meta().unwrap().host,\n+    };\n+    let sysroot = if is_host { dir.join(\"HOST\") } else { PathBuf::from(dir) };\n     std::env::set_var(\"MIRI_SYSROOT\", &sysroot);\n     if !ask_user {\n         println!(\"A libstd for miri is now available in `{}`\", sysroot.display());\n@@ -232,7 +259,7 @@ fn main() {\n         }\n \n         // Now run the command.\n-        for target in list_targets(std::env::args().skip(skip)) {\n+        for target in list_targets() {\n             let args = std::env::args().skip(skip);\n             let kind = target.kind.get(0).expect(\n                 \"badly formatted cargo metadata: target::kind is an empty array\",\n@@ -315,22 +342,21 @@ fn main() {\n                 .collect()\n         };\n         args.splice(0..0, miri::miri_default_args().iter().map(ToString::to_string));\n+        args.extend_from_slice(&[\"--cfg\".to_owned(), r#\"feature=\"cargo-miri\"\"#.to_owned()]);\n \n         // this check ensures that dependencies are built but not interpreted and the final crate is\n         // interpreted but not built\n         let miri_enabled = std::env::args().any(|s| s == \"--emit=dep-info,metadata\");\n-\n         let mut command = if miri_enabled {\n             let mut path = std::env::current_exe().expect(\"current executable path invalid\");\n             path.set_file_name(\"miri\");\n             Command::new(path)\n         } else {\n             Command::new(\"rustc\")\n         };\n+        command.args(&args);\n \n-        args.extend_from_slice(&[\"--cfg\".to_owned(), r#\"feature=\"cargo-miri\"\"#.to_owned()]);\n-\n-        match command.args(&args).status() {\n+        match command.status() {\n             Ok(exit) => {\n                 if !exit.success() {\n                     std::process::exit(exit.code().unwrap_or(42));\n@@ -361,7 +387,7 @@ where\n     args.push(r#\"feature=\"cargo-miri\"\"#.to_owned());\n \n     let path = std::env::current_exe().expect(\"current executable path invalid\");\n-    let exit_status = std::process::Command::new(\"cargo\")\n+    let exit_status = Command::new(\"cargo\")\n         .args(&args)\n         .env(\"RUSTC\", path)\n         .spawn()"}, {"sha": "e28497aa256fcce817052ae23fd52e6e6964d473", "filename": "src/fn_call.rs", "status": "modified", "additions": 4, "deletions": 82, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/src%2Ffn_call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/src%2Ffn_call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ffn_call.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "patch": "@@ -17,18 +17,6 @@ pub trait EvalContextExt<'tcx, 'mir> {\n         ret: mir::BasicBlock,\n     ) -> EvalResult<'tcx>;\n \n-    /// Emulate a function that should have MIR but does not.\n-    /// This is solely to support execution without full MIR.\n-    /// Fail if emulating this function is not supported.\n-    /// This function will handle `goto_block` if needed.\n-    fn emulate_missing_fn(\n-        &mut self,\n-        path: String,\n-        args: &[OpTy<'tcx, Borrow>],\n-        dest: Option<PlaceTy<'tcx, Borrow>>,\n-        ret: Option<mir::BasicBlock>,\n-    ) -> EvalResult<'tcx>;\n-\n     fn find_fn(\n         &mut self,\n         instance: ty::Instance<'tcx>,\n@@ -81,24 +69,8 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx, 'mir> for super::MiriEvalCo\n             return Ok(None);\n         }\n \n-        // Otherwise we really want to see the MIR -- but if we do not have it, maybe we can\n-        // emulate something. This is a HACK to support running without a full-MIR libstd.\n-        let mir = match self.load_mir(instance.def) {\n-            Ok(mir) => mir,\n-            Err(EvalError { kind: EvalErrorKind::NoMirFor(path), .. }) => {\n-                self.emulate_missing_fn(\n-                    path,\n-                    args,\n-                    dest,\n-                    ret,\n-                )?;\n-                // `goto_block` already handled\n-                return Ok(None);\n-            }\n-            Err(other) => return Err(other),\n-        };\n-\n-        Ok(Some(mir))\n+        // Otherwise, load the MIR\n+        Ok(Some(self.load_mir(instance.def)?))\n     }\n \n     fn emulate_foreign_item(\n@@ -113,6 +85,8 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx, 'mir> for super::MiriEvalCo\n             Some(name) => name.as_str(),\n             None => self.tcx.item_name(def_id).as_str(),\n         };\n+        // Strip linker suffixes (seen on 32bit macOS)\n+        let link_name = link_name.trim_end_matches(\"$UNIX2003\");\n \n         let tcx = &{self.tcx.tcx};\n \n@@ -655,58 +629,6 @@ impl<'a, 'mir, 'tcx: 'mir + 'a> EvalContextExt<'tcx, 'mir> for super::MiriEvalCo\n         Ok(())\n     }\n \n-    fn emulate_missing_fn(\n-        &mut self,\n-        path: String,\n-        _args: &[OpTy<'tcx, Borrow>],\n-        dest: Option<PlaceTy<'tcx, Borrow>>,\n-        ret: Option<mir::BasicBlock>,\n-    ) -> EvalResult<'tcx> {\n-        // In some cases in non-MIR libstd-mode, not having a destination is legit.  Handle these early.\n-        match &path[..] {\n-            \"std::panicking::rust_panic_with_hook\" |\n-            \"core::panicking::panic_fmt::::panic_impl\" |\n-            \"std::rt::begin_panic_fmt\" =>\n-                return err!(MachineError(\"the evaluated program panicked\".to_string())),\n-            _ => {}\n-        }\n-\n-        let dest = dest.ok_or_else(\n-            // Must be some function we do not support\n-            || EvalErrorKind::NoMirFor(path.clone()),\n-        )?;\n-\n-        match &path[..] {\n-            // A Rust function is missing, which means we are running with MIR missing for libstd (or other dependencies).\n-            // Still, we can make many things mostly work by \"emulating\" or ignoring some functions.\n-            \"std::io::_print\" |\n-            \"std::io::_eprint\" => {\n-                warn!(\n-                    \"Ignoring output.  To run programs that prints, make sure you have a libstd with full MIR.\"\n-                );\n-            }\n-            \"std::thread::Builder::new\" => {\n-                return err!(Unimplemented(\"miri does not support threading\".to_owned()))\n-            }\n-            \"std::env::args\" => {\n-                return err!(Unimplemented(\n-                    \"miri does not support program arguments\".to_owned(),\n-                ))\n-            }\n-            \"std::panicking::panicking\" |\n-            \"std::rt::panicking\" => {\n-                // we abort on panic -> `std::rt::panicking` always returns false\n-                self.write_scalar(Scalar::from_bool(false), dest)?;\n-            }\n-\n-            _ => return err!(NoMirFor(path)),\n-        }\n-\n-        self.goto_block(ret)?;\n-        self.dump_place(*dest);\n-        Ok(())\n-    }\n-\n     fn write_null(&mut self, dest: PlaceTy<'tcx, Borrow>) -> EvalResult<'tcx> {\n         self.write_scalar(Scalar::from_int(0, dest.layout.size), dest)\n     }"}, {"sha": "9641670a2edfb384cc86faa273ef4bfb142ad45d", "filename": "src/lib.rs", "status": "modified", "additions": 54, "deletions": 74, "changes": 128, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "patch": "@@ -80,82 +80,62 @@ pub fn create_ecx<'a, 'mir: 'a, 'tcx: 'mir>(\n         ));\n     }\n \n-    let libstd_has_mir = {\n-        let rustc_panic = ecx.resolve_path(&[\"std\", \"panicking\", \"rust_panic\"])?;\n-        ecx.load_mir(rustc_panic.def).is_ok()\n-    };\n-\n-    if libstd_has_mir {\n-        let start_id = tcx.lang_items().start_fn().unwrap();\n-        let main_ret_ty = tcx.fn_sig(main_id).output();\n-        let main_ret_ty = main_ret_ty.no_bound_vars().unwrap();\n-        let start_instance = ty::Instance::resolve(\n-            ecx.tcx.tcx,\n-            ty::ParamEnv::reveal_all(),\n-            start_id,\n-            ecx.tcx.mk_substs(\n-                ::std::iter::once(ty::subst::Kind::from(main_ret_ty)))\n-            ).unwrap();\n-        let start_mir = ecx.load_mir(start_instance.def)?;\n-\n-        if start_mir.arg_count != 3 {\n-            return err!(AbiViolation(format!(\n-                \"'start' lang item should have three arguments, but has {}\",\n-                start_mir.arg_count\n-            )));\n-        }\n-\n-        // Return value (in static memory so that it does not count as leak)\n-        let ret = ecx.layout_of(start_mir.return_ty())?;\n-        let ret_ptr = ecx.allocate(ret, MiriMemoryKind::MutStatic.into())?;\n-\n-        // Push our stack frame\n-        ecx.push_stack_frame(\n-            start_instance,\n-            DUMMY_SP, // there is no call site, we want no span\n-            start_mir,\n-            Some(ret_ptr.into()),\n-            StackPopCleanup::None { cleanup: true },\n-        )?;\n-\n-        let mut args = ecx.frame().mir.args_iter();\n-\n-        // First argument: pointer to main()\n-        let main_ptr = ecx.memory_mut().create_fn_alloc(main_instance).with_default_tag();\n-        let dest = ecx.eval_place(&mir::Place::Local(args.next().unwrap()))?;\n-        ecx.write_scalar(Scalar::Ptr(main_ptr), dest)?;\n-\n-        // Second argument (argc): 1\n-        let dest = ecx.eval_place(&mir::Place::Local(args.next().unwrap()))?;\n-        ecx.write_scalar(Scalar::from_int(1, dest.layout.size), dest)?;\n-\n-        // FIXME: extract main source file path\n-        // Third argument (argv): &[b\"foo\"]\n-        let dest = ecx.eval_place(&mir::Place::Local(args.next().unwrap()))?;\n-        let foo = ecx.memory_mut().allocate_static_bytes(b\"foo\\0\").with_default_tag();\n-        let foo_ty = ecx.tcx.mk_imm_ptr(ecx.tcx.types.u8);\n-        let foo_layout = ecx.layout_of(foo_ty)?;\n-        let foo_place = ecx.allocate(foo_layout, MiriMemoryKind::Env.into())?;\n-        ecx.write_scalar(Scalar::Ptr(foo), foo_place.into())?;\n-        ecx.memory_mut().mark_immutable(foo_place.to_ptr()?.alloc_id)?;\n-        ecx.write_scalar(foo_place.ptr, dest)?;\n-\n-        assert!(args.next().is_none(), \"start lang item has more arguments than expected\");\n-    } else {\n-        let ret_place = MPlaceTy::dangling(ecx.layout_of(tcx.mk_unit())?, &ecx).into();\n-        ecx.push_stack_frame(\n-            main_instance,\n-            DUMMY_SP, // there is no call site, we want no span\n-            main_mir,\n-            Some(ret_place),\n-            StackPopCleanup::None { cleanup: true },\n-        )?;\n-\n-        // No arguments\n-        let mut args = ecx.frame().mir.args_iter();\n-        assert!(args.next().is_none(), \"main function must not have arguments\");\n+    let start_id = tcx.lang_items().start_fn().unwrap();\n+    let main_ret_ty = tcx.fn_sig(main_id).output();\n+    let main_ret_ty = main_ret_ty.no_bound_vars().unwrap();\n+    let start_instance = ty::Instance::resolve(\n+        ecx.tcx.tcx,\n+        ty::ParamEnv::reveal_all(),\n+        start_id,\n+        ecx.tcx.mk_substs(\n+            ::std::iter::once(ty::subst::Kind::from(main_ret_ty)))\n+        ).unwrap();\n+    let start_mir = ecx.load_mir(start_instance.def)?;\n+\n+    if start_mir.arg_count != 3 {\n+        return err!(AbiViolation(format!(\n+            \"'start' lang item should have three arguments, but has {}\",\n+            start_mir.arg_count\n+        )));\n     }\n \n+    // Return value (in static memory so that it does not count as leak)\n+    let ret = ecx.layout_of(start_mir.return_ty())?;\n+    let ret_ptr = ecx.allocate(ret, MiriMemoryKind::MutStatic.into())?;\n+\n+    // Push our stack frame\n+    ecx.push_stack_frame(\n+        start_instance,\n+        DUMMY_SP, // there is no call site, we want no span\n+        start_mir,\n+        Some(ret_ptr.into()),\n+        StackPopCleanup::None { cleanup: true },\n+    )?;\n+\n+    let mut args = ecx.frame().mir.args_iter();\n+\n+    // First argument: pointer to main()\n+    let main_ptr = ecx.memory_mut().create_fn_alloc(main_instance).with_default_tag();\n+    let dest = ecx.eval_place(&mir::Place::Local(args.next().unwrap()))?;\n+    ecx.write_scalar(Scalar::Ptr(main_ptr), dest)?;\n+\n+    // Second argument (argc): 1\n+    let dest = ecx.eval_place(&mir::Place::Local(args.next().unwrap()))?;\n+    ecx.write_scalar(Scalar::from_int(1, dest.layout.size), dest)?;\n+\n+    // FIXME: extract main source file path\n+    // Third argument (argv): &[b\"foo\"]\n+    let dest = ecx.eval_place(&mir::Place::Local(args.next().unwrap()))?;\n+    let foo = ecx.memory_mut().allocate_static_bytes(b\"foo\\0\").with_default_tag();\n+    let foo_ty = ecx.tcx.mk_imm_ptr(ecx.tcx.types.u8);\n+    let foo_layout = ecx.layout_of(foo_ty)?;\n+    let foo_place = ecx.allocate(foo_layout, MiriMemoryKind::Env.into())?;\n+    ecx.write_scalar(Scalar::Ptr(foo), foo_place.into())?;\n+    ecx.memory_mut().mark_immutable(foo_place.to_ptr()?.alloc_id)?;\n+    ecx.write_scalar(foo_place.ptr, dest)?;\n+\n+    assert!(args.next().is_none(), \"start lang item has more arguments than expected\");\n+\n     Ok(ecx)\n }\n "}, {"sha": "56f307a7fb1331742bd7b9536eea235af055f636", "filename": "test-cargo-miri/.gitignore", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2F.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2F.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2F.gitignore?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "cargo-miri-test/.gitignore"}, {"sha": "85c3c08dba019c44e772bc92cd594b984d341dd8", "filename": "test-cargo-miri/Cargo.lock", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2FCargo.lock?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "cargo-miri-test/Cargo.lock"}, {"sha": "4fe009e025e137c75abe602b2e0d25e965186c56", "filename": "test-cargo-miri/Cargo.toml", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2FCargo.toml?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "cargo-miri-test/Cargo.toml"}, {"sha": "42745535e0ef4f01589767293d01343fa4176257", "filename": "test-cargo-miri/run-test.py", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2Frun-test.py", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2Frun-test.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Frun-test.py?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "cargo-miri-test/run-test.py"}, {"sha": "1ae88a7db5940884ac1e1cf487fdb28cbaca835d", "filename": "test-cargo-miri/src/main.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Fsrc%2Fmain.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "cargo-miri-test/src/main.rs"}, {"sha": "aa7d1a2bdec7dcd036b35446c26da4ed483f080c", "filename": "test-cargo-miri/stderr.ref", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2Fstderr.ref", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2Fstderr.ref", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Fstderr.ref?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "cargo-miri-test/stderr.ref"}, {"sha": "6710f307cb26daf260543237456b7d44fa2998ab", "filename": "test-cargo-miri/stdout.ref", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2Fstdout.ref", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2Fstdout.ref", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Fstdout.ref?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "cargo-miri-test/stdout.ref"}, {"sha": "fb7fad21c9db8fbdb017af27d962f5a7bde824d9", "filename": "test-cargo-miri/tests/foo.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2Ftests%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/test-cargo-miri%2Ftests%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Ftests%2Ffoo.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "cargo-miri-test/tests/foo.rs"}, {"sha": "8e8912c81fe902de72389ff88349ea44c9f9e536", "filename": "tests/compile-fail/copy_nonoverlapping.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fcopy_nonoverlapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fcopy_nonoverlapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fcopy_nonoverlapping.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/copy_nonoverlapping.rs"}, {"sha": "4b89f0ac70c79a6b7cc793c410280758a48257e5", "filename": "tests/compile-fail/deallocate-bad-alignment.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fdeallocate-bad-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fdeallocate-bad-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdeallocate-bad-alignment.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/deallocate-bad-alignment.rs"}, {"sha": "3a74245816c469afdee9f172fd699e23a5934fd3", "filename": "tests/compile-fail/deallocate-bad-size.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fdeallocate-bad-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fdeallocate-bad-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdeallocate-bad-size.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/deallocate-bad-size.rs"}, {"sha": "613edf3c6af95d81768c7e9ee0d269a5ee464e4e", "filename": "tests/compile-fail/deallocate-twice.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fdeallocate-twice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fdeallocate-twice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdeallocate-twice.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/deallocate-twice.rs"}, {"sha": "14a85ecd8947cd2c051013fe7678547f4c5dc448", "filename": "tests/compile-fail/memleak_rc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fmemleak_rc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fmemleak_rc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmemleak_rc.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/memleak_rc.rs"}, {"sha": "ce1c89a2a008181bb63c96a5cfaf46efe9291fca", "filename": "tests/compile-fail/out_of_bounds_ptr_1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fout_of_bounds_ptr_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fout_of_bounds_ptr_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fout_of_bounds_ptr_1.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/out_of_bounds_ptr_1.rs"}, {"sha": "e19a616a191651db51acc1fabce20565261fb500", "filename": "tests/compile-fail/out_of_bounds_ptr_2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fout_of_bounds_ptr_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fout_of_bounds_ptr_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fout_of_bounds_ptr_2.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/out_of_bounds_ptr_2.rs"}, {"sha": "babd0246e7e1afcd0f2a1ed0ac540bfcc45443dc", "filename": "tests/compile-fail/ptr_offset_overflow.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fptr_offset_overflow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fptr_offset_overflow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fptr_offset_overflow.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/ptr_offset_overflow.rs"}, {"sha": "489b7bebcdc8f7fb24f30d526e332e03844ebd34", "filename": "tests/compile-fail/reallocate-bad-size.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Freallocate-bad-size.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Freallocate-bad-size.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Freallocate-bad-size.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/reallocate-bad-size.rs"}, {"sha": "1e2178811ea3ab5babedceeb0b7b7f4ad63adc84", "filename": "tests/compile-fail/reallocate-change-alloc.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Freallocate-change-alloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Freallocate-change-alloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Freallocate-change-alloc.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/reallocate-change-alloc.rs"}, {"sha": "6dfb7fe2b9663b6cc637e58514ff8a079d06c37c", "filename": "tests/compile-fail/reallocate-dangling.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Freallocate-dangling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Freallocate-dangling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Freallocate-dangling.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/reallocate-dangling.rs"}, {"sha": "a33bca1267595cb67538c8a7e6f9009c20ae0e9c", "filename": "tests/compile-fail/stack_free.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstack_free.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstack_free.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstack_free.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stack_free.rs"}, {"sha": "db9ac93279f15983d29c00112c1812d24af88cee", "filename": "tests/compile-fail/stacked_borrows/alias_through_mutation.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Falias_through_mutation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Falias_through_mutation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Falias_through_mutation.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/alias_through_mutation.rs"}, {"sha": "9bced43f6e8568325acf7c87bd04b7e3fda7fac8", "filename": "tests/compile-fail/stacked_borrows/aliasing_mut1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Faliasing_mut1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Faliasing_mut1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Faliasing_mut1.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/aliasing_mut1.rs"}, {"sha": "ea24f1bd274881233f8a6298efd8d024a4a20ff0", "filename": "tests/compile-fail/stacked_borrows/aliasing_mut2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Faliasing_mut2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Faliasing_mut2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Faliasing_mut2.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/aliasing_mut2.rs"}, {"sha": "e564e878ddb19f7857da287901cd518e01aca368", "filename": "tests/compile-fail/stacked_borrows/aliasing_mut3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Faliasing_mut3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Faliasing_mut3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Faliasing_mut3.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/aliasing_mut3.rs"}, {"sha": "15f67d0f8728bee20420cca6f4e1b016a5ede4d0", "filename": "tests/compile-fail/stacked_borrows/aliasing_mut4.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Faliasing_mut4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Faliasing_mut4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Faliasing_mut4.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/aliasing_mut4.rs"}, {"sha": "bd0fec859d8f7c424a677f8f1120fd635b8a97bf", "filename": "tests/compile-fail/stacked_borrows/box_exclusive_violation1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fbox_exclusive_violation1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fbox_exclusive_violation1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fbox_exclusive_violation1.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/box_exclusive_violation1.rs"}, {"sha": "e08e3bba6840de4de73cd2787d42fd9ed7567206", "filename": "tests/compile-fail/stacked_borrows/buggy_as_mut_slice.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fbuggy_as_mut_slice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fbuggy_as_mut_slice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fbuggy_as_mut_slice.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/buggy_as_mut_slice.rs"}, {"sha": "959c6314690d277474a5a000dec4cbdaf8ff6f36", "filename": "tests/compile-fail/stacked_borrows/buggy_split_at_mut.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fbuggy_split_at_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fbuggy_split_at_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fbuggy_split_at_mut.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/buggy_split_at_mut.rs"}, {"sha": "eb988a5899593f5371a6562a014b26ae9fa6047c", "filename": "tests/compile-fail/stacked_borrows/deallocate_against_barrier.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fdeallocate_against_barrier.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fdeallocate_against_barrier.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fdeallocate_against_barrier.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/deallocate_against_barrier.rs"}, {"sha": "dbaccae8827211b0599a09fcf258c103183a1c36", "filename": "tests/compile-fail/stacked_borrows/illegal_read1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read1.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/illegal_read1.rs"}, {"sha": "2da755d9aabc137206a1cc8eedc4d50a91dbb2e4", "filename": "tests/compile-fail/stacked_borrows/illegal_read2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read2.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/illegal_read2.rs"}, {"sha": "b0da0511dee3fb52a748b76b39cbd616ae2a5c32", "filename": "tests/compile-fail/stacked_borrows/illegal_read3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read3.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/illegal_read3.rs"}, {"sha": "c86ec1286daad8121b41b45e1672521e69e91f53", "filename": "tests/compile-fail/stacked_borrows/illegal_read4.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read4.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/illegal_read4.rs"}, {"sha": "863649a47b5ef374d74d4fc21fb2f672d70694c9", "filename": "tests/compile-fail/stacked_borrows/illegal_read5.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_read5.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/illegal_read5.rs"}, {"sha": "d0a23cb44489ae8ec4511c5f709cdc49371dd791", "filename": "tests/compile-fail/stacked_borrows/illegal_write1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write1.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/illegal_write1.rs"}, {"sha": "ba3b6686b84cb2be541f1ef1f50e99ee785b4b01", "filename": "tests/compile-fail/stacked_borrows/illegal_write2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write2.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/illegal_write2.rs"}, {"sha": "a653aa5003f6d4da712027e3f1abe154941ccffe", "filename": "tests/compile-fail/stacked_borrows/illegal_write3.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write3.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/illegal_write3.rs"}, {"sha": "37ae0f055f0ee52ca6f4951d1e4ab226f3b775bb", "filename": "tests/compile-fail/stacked_borrows/illegal_write4.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write4.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/illegal_write4.rs"}, {"sha": "57b2ca87d810236ad8c75fb77bd79dd4ef63af90", "filename": "tests/compile-fail/stacked_borrows/illegal_write5.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write5.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write5.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fillegal_write5.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/illegal_write5.rs"}, {"sha": "fc0dbb9e13133e8d299af04ae672d24e26ec2e96", "filename": "tests/compile-fail/stacked_borrows/invalidate_against_barrier1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Finvalidate_against_barrier1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Finvalidate_against_barrier1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Finvalidate_against_barrier1.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/invalidate_against_barrier1.rs"}, {"sha": "a080c0958e4006dd382d9b47fdaab155ccb49ff0", "filename": "tests/compile-fail/stacked_borrows/invalidate_against_barrier2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Finvalidate_against_barrier2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Finvalidate_against_barrier2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Finvalidate_against_barrier2.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/invalidate_against_barrier2.rs"}, {"sha": "98b9451eda87e77a2217ad9d043f9f7cb13ef5ee", "filename": "tests/compile-fail/stacked_borrows/load_invalid_mut.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fload_invalid_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fload_invalid_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fload_invalid_mut.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/load_invalid_mut.rs"}, {"sha": "6599924f0f4c49e92c9fa0e36dbfbbdda8cb1179", "filename": "tests/compile-fail/stacked_borrows/load_invalid_shr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fload_invalid_shr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fload_invalid_shr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fload_invalid_shr.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/load_invalid_shr.rs"}, {"sha": "3fe6b6567423c80f9fd706c11f4469660c67254f", "filename": "tests/compile-fail/stacked_borrows/mut_exclusive_violation1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fmut_exclusive_violation1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fmut_exclusive_violation1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fmut_exclusive_violation1.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/mut_exclusive_violation1.rs"}, {"sha": "64a8ff69108ec06f75140bb68a00325eebd66bc1", "filename": "tests/compile-fail/stacked_borrows/outdated_local.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Foutdated_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Foutdated_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Foutdated_local.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/outdated_local.rs"}, {"sha": "28288c6c63623154d91d8915f6900c665ea86325", "filename": "tests/compile-fail/stacked_borrows/pass_invalid_mut.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fpass_invalid_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fpass_invalid_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fpass_invalid_mut.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/pass_invalid_mut.rs"}, {"sha": "22a80e27103e1ec126c86de0664ca8c89fde6f07", "filename": "tests/compile-fail/stacked_borrows/pass_invalid_shr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fpass_invalid_shr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fpass_invalid_shr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fpass_invalid_shr.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/pass_invalid_shr.rs"}, {"sha": "bd5e28b47e8673a94f48cf26144be28900e49f8d", "filename": "tests/compile-fail/stacked_borrows/pointer_smuggling.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fpointer_smuggling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fpointer_smuggling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fpointer_smuggling.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/pointer_smuggling.rs"}, {"sha": "e7f0b9bc9ddd0e127715a1e03373fca2b0b430f9", "filename": "tests/compile-fail/stacked_borrows/return_invalid_mut.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_mut.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/return_invalid_mut.rs"}, {"sha": "28a1f74c6ac20e5edd698a2ac70508962806f5a5", "filename": "tests/compile-fail/stacked_borrows/return_invalid_mut_option.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_mut_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_mut_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_mut_option.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/return_invalid_mut_option.rs"}, {"sha": "3357af68a8411c1591eeaeddb6016ed072e28ef6", "filename": "tests/compile-fail/stacked_borrows/return_invalid_mut_tuple.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_mut_tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_mut_tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_mut_tuple.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/return_invalid_mut_tuple.rs"}, {"sha": "986dd18b2e0b4e1c1467c1bf68e1f9c69d4b2574", "filename": "tests/compile-fail/stacked_borrows/return_invalid_shr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_shr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_shr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_shr.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/return_invalid_shr.rs"}, {"sha": "9d220991c330210cdeb66174c1217e782f7002d9", "filename": "tests/compile-fail/stacked_borrows/return_invalid_shr_option.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_shr_option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_shr_option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_shr_option.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/return_invalid_shr_option.rs"}, {"sha": "060fa25c2307e9f6e468a99fd20714f83a943ec2", "filename": "tests/compile-fail/stacked_borrows/return_invalid_shr_tuple.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_shr_tuple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_shr_tuple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Freturn_invalid_shr_tuple.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/return_invalid_shr_tuple.rs"}, {"sha": "560c9dfb665dd518d2474531f54d1a1d80f1a25e", "filename": "tests/compile-fail/stacked_borrows/shr_frozen_violation1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fshr_frozen_violation1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fshr_frozen_violation1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fshr_frozen_violation1.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/shr_frozen_violation1.rs"}, {"sha": "c092cbfe5098594ea79af8b5da8019842b270410", "filename": "tests/compile-fail/stacked_borrows/static_memory_modification.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fstatic_memory_modification.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Fstatic_memory_modification.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Fstatic_memory_modification.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/static_memory_modification.rs"}, {"sha": "75abce3111f884bbb5a9c05c12fd5952c19102df", "filename": "tests/compile-fail/stacked_borrows/transmute-is-no-escape.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Ftransmute-is-no-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Ftransmute-is-no-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Ftransmute-is-no-escape.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/transmute-is-no-escape.rs"}, {"sha": "054697b04a09d8ea45b3db3b233f4c3efa480351", "filename": "tests/compile-fail/stacked_borrows/unescaped_local.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Funescaped_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Fstacked_borrows%2Funescaped_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fstacked_borrows%2Funescaped_local.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/stacked_borrows/unescaped_local.rs"}, {"sha": "acc6098af7ee04a2c638d71b23fab120e9e91d78", "filename": "tests/compile-fail/transmute-pair-undef.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Ftransmute-pair-undef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompile-fail%2Ftransmute-pair-undef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Ftransmute-pair-undef.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/compile-fail-fullmir/transmute-pair-undef.rs"}, {"sha": "7187a3caee25cd79cf8210bad05e0305ae1d4fbf", "filename": "tests/compiletest.rs", "status": "modified", "additions": 13, "deletions": 42, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "patch": "@@ -1,4 +1,5 @@\n #![feature(slice_concat_ext, custom_test_frameworks)]\n+// Custom test runner, to avoid libtest being wrapped around compiletest which wraps libtest.\n #![test_runner(test_runner)]\n \n use std::slice::SliceConcatExt;\n@@ -24,11 +25,6 @@ fn rustc_lib_path() -> PathBuf {\n     option_env!(\"RUSTC_LIB_PATH\").unwrap().into()\n }\n \n-fn have_fullmir() -> bool {\n-    // We assume we have full MIR when MIRI_SYSROOT is set or when we are in rustc\n-    std::env::var(\"MIRI_SYSROOT\").is_ok() || rustc_test_suite().is_some()\n-}\n-\n fn mk_config(mode: &str) -> compiletest::common::ConfigWithTemp {\n     let mut config = compiletest::Config::default().tempdir();\n     config.mode = mode.parse().expect(\"Invalid mode\");\n@@ -41,16 +37,7 @@ fn mk_config(mode: &str) -> compiletest::common::ConfigWithTemp {\n     config\n }\n \n-fn compile_fail(sysroot: &Path, path: &str, target: &str, host: &str, need_fullmir: bool, opt: bool) {\n-    if need_fullmir && !have_fullmir() {\n-        eprintln!(\"{}\\n\", format!(\n-            \"## Skipping compile-fail tests in {} against miri for target {} due to missing mir\",\n-            path,\n-            target\n-        ).yellow().bold());\n-        return;\n-    }\n-\n+fn compile_fail(sysroot: &Path, path: &str, target: &str, host: &str, opt: bool) {\n     let opt_str = if opt { \" with optimizations\" } else { \"\" };\n     eprintln!(\"{}\", format!(\n         \"## Running compile-fail tests in {} against miri for target {}{}\",\n@@ -78,16 +65,7 @@ fn compile_fail(sysroot: &Path, path: &str, target: &str, host: &str, need_fullm\n     compiletest::run_tests(&config);\n }\n \n-fn miri_pass(sysroot: &Path, path: &str, target: &str, host: &str, need_fullmir: bool, opt: bool) {\n-    if need_fullmir && !have_fullmir() {\n-        eprintln!(\"{}\\n\", format!(\n-            \"## Skipping run-pass tests in {} against miri for target {} due to missing mir\",\n-            path,\n-            target\n-        ).yellow().bold());\n-        return;\n-    }\n-\n+fn miri_pass(sysroot: &Path, path: &str, target: &str, host: &str, opt: bool) {\n     let opt_str = if opt { \" with optimizations\" } else { \"\" };\n     eprintln!(\"{}\", format!(\n         \"## Running run-pass tests in {} against miri for target {}{}\",\n@@ -105,10 +83,6 @@ fn miri_pass(sysroot: &Path, path: &str, target: &str, host: &str, need_fullmir:\n         // whitelist.\n         flags.push(\"-Zmir-opt-level=1\".to_owned());\n     }\n-    if !have_fullmir() {\n-        // FIXME: Validation relies on the EscapeToRaw statements being emitted\n-        flags.push(\"-Zmiri-disable-validation\".to_owned());\n-    }\n \n     let mut config = mk_config(\"ui\");\n     config.src_base = PathBuf::from(path);\n@@ -132,7 +106,7 @@ fn target_has_std<P: Into<PathBuf>>(path: P) -> bool {\n         .map(|entry| entry.unwrap())\n         .filter(|entry| entry.file_type().unwrap().is_file())\n         .filter_map(|entry| entry.file_name().into_string().ok())\n-        .any(|file_name| file_name.starts_with(\"libstd\") && file_name.ends_with(\".rlib\"))\n+        .any(|file_name| file_name == \"libstd.rlib\")\n }\n \n \n@@ -168,36 +142,33 @@ fn get_sysroot() -> PathBuf {\n \n fn get_host() -> String {\n     let rustc = rustc_test_suite().unwrap_or(PathBuf::from(\"rustc\"));\n-    let host = std::process::Command::new(rustc)\n+    let rustc_version = std::process::Command::new(rustc)\n         .arg(\"-vV\")\n         .output()\n         .expect(\"rustc not found for -vV\")\n         .stdout;\n-    let host = std::str::from_utf8(&host).expect(\"sysroot is not utf8\");\n-    let host = host.split(\"\\nhost: \").nth(1).expect(\n-        \"no host: part in rustc -vV\",\n-    );\n-    let host = host.split('\\n').next().expect(\"no \\n after host\");\n-    String::from(host)\n+    let rustc_version = std::str::from_utf8(&rustc_version).expect(\"rustc -vV is not utf8\");\n+    let version_meta = rustc_version::version_meta_for(&rustc_version)\n+        .expect(\"failed to parse rustc version info\");\n+    version_meta.host\n }\n \n fn run_pass_miri(opt: bool) {\n     let sysroot = get_sysroot();\n     let host = get_host();\n \n     for_all_targets(&sysroot, |target| {\n-        miri_pass(&sysroot, \"tests/run-pass\", &target, &host, false, opt);\n+        miri_pass(&sysroot, \"tests/run-pass\", &target, &host, opt);\n     });\n-    miri_pass(&sysroot, \"tests/run-pass-fullmir\", &host, &host, true, opt);\n }\n \n fn compile_fail_miri(opt: bool) {\n     let sysroot = get_sysroot();\n     let host = get_host();\n \n-    // FIXME: run tests for other targets, too\n-    compile_fail(&sysroot, \"tests/compile-fail\", &host, &host, false, opt);\n-    compile_fail(&sysroot, \"tests/compile-fail-fullmir\", &host, &host, true, opt);\n+    for_all_targets(&sysroot, |target| {\n+        compile_fail(&sysroot, \"tests/compile-fail\", &target, &host, opt);\n+    });\n }\n \n fn test_runner(_tests: &[&()]) {"}, {"sha": "7c32b026df67b200871087eb4e6170726b1276fb", "filename": "tests/run-pass/async-fn.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fasync-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fasync-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fasync-fn.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/async-fn.rs"}, {"sha": "3b829d0f1294fb878abba664f40e61d674be5a37", "filename": "tests/run-pass/box-pair-to-vec.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fbox-pair-to-vec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fbox-pair-to-vec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbox-pair-to-vec.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/box-pair-to-vec.rs"}, {"sha": "230ef368da64494e27dc048cf97e96fa24b00da9", "filename": "tests/run-pass/box-pair-to-vec.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fbox-pair-to-vec.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fbox-pair-to-vec.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fbox-pair-to-vec.stdout?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/box-pair-to-vec.stdout"}, {"sha": "aa7bccaa5ff3acfe7099b7da53f91158d2347c05", "filename": "tests/run-pass/catch.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fcatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fcatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fcatch.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/catch.rs"}, {"sha": "d00491fd7e5bb6fa28c517a0bb32b8b506539d4d", "filename": "tests/run-pass/catch.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fcatch.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fcatch.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fcatch.stdout?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/catch.stdout"}, {"sha": "0ca63e148fdbb056d7cf155d3307f57a9d6e89b2", "filename": "tests/run-pass/env.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fenv.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/env.rs"}, {"sha": "3dd30fd676fd1011aa3c0834d8b4f3cf1bd0272a", "filename": "tests/run-pass/foreign-fn-linkname.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fforeign-fn-linkname.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fforeign-fn-linkname.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fforeign-fn-linkname.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/foreign-fn-linkname.rs"}, {"sha": "b1b05abd29655bcfe769d11f72c4cadb866b40bd", "filename": "tests/run-pass/format.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fformat.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/format.rs"}, {"sha": "e193b8ae89f8f1b03bf59f94b5198d7c7508cc67", "filename": "tests/run-pass/format.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fformat.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fformat.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fformat.stdout?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/format.stdout"}, {"sha": "ce59e60a932d5cd005ccfd3d4c8fcb643299a0c1", "filename": "tests/run-pass/from_utf8.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Ffrom_utf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Ffrom_utf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Ffrom_utf8.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/from_utf8.rs"}, {"sha": "f4a358174f555bce8e38d0a3f9427d52fe0e93b9", "filename": "tests/run-pass/hashmap.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fhashmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fhashmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fhashmap.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/hashmap.rs"}, {"sha": "c92c1567f5ae204eb9d0f906789abed84f19272c", "filename": "tests/run-pass/hello.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fhello.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fhello.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fhello.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/hello.rs"}, {"sha": "af5626b4a114abcb82d63db7c8082c3c4756e51b", "filename": "tests/run-pass/hello.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fhello.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fhello.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fhello.stdout?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/hello.stdout"}, {"sha": "0264099eb68dc338a95acba2c16bb75cabf3aff8", "filename": "tests/run-pass/integer-ops.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Finteger-ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Finteger-ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Finteger-ops.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/integer-ops.rs"}, {"sha": "32b4d27f11f5a077a84c407569dc64ccca24cac8", "filename": "tests/run-pass/issue-3794.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fissue-3794.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fissue-3794.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-3794.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/issue-3794.rs"}, {"sha": "e4afe6fa55f15d1365fed3357bd886e509688029", "filename": "tests/run-pass/issue-3794.stdout", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fissue-3794.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fissue-3794.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fissue-3794.stdout?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/issue-3794.stdout"}, {"sha": "ab79a64b56e2aa409accb767863eab6ba4e5ce9e", "filename": "tests/run-pass/loop-break-value.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Floop-break-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Floop-break-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Floop-break-value.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/loop-break-value.rs"}, {"sha": "2f5e2c4bb739ed1c814f33f7c115a62f283d7675", "filename": "tests/run-pass/memchr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fmemchr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fmemchr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fmemchr.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/memchr.rs"}, {"sha": "1b913aed4c89e1317dbe2fe4ad47e087c61b2a3b", "filename": "tests/run-pass/send-is-not-static-par-for.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fsend-is-not-static-par-for.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fsend-is-not-static-par-for.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fsend-is-not-static-par-for.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/send-is-not-static-par-for.rs"}, {"sha": "dad47d85a24663e68abbf8fdb2f246d851e4c323", "filename": "tests/run-pass/threads.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fthreads.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fthreads.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fthreads.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/threads.rs"}, {"sha": "ca33bd5f9e3d8e11845ea1ac71fbb5c4f9e00473", "filename": "tests/run-pass/u128.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fu128.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fu128.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fu128.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/u128.rs"}, {"sha": "ccb6883e8733a5b8d660c2b6e8f3fac2ceb22238", "filename": "tests/run-pass/unsized-tuple-impls.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Funsized-tuple-impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Funsized-tuple-impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Funsized-tuple-impls.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/unsized-tuple-impls.rs"}, {"sha": "d92cff0b084e6b726f55ebedd4767163353a418a", "filename": "tests/run-pass/vecdeque.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fvecdeque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4f61314fc5ed33b822384f52103214965482e77c/tests%2Frun-pass%2Fvecdeque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fvecdeque.rs?ref=4f61314fc5ed33b822384f52103214965482e77c", "previous_filename": "tests/run-pass-fullmir/vecdeque.rs"}]}