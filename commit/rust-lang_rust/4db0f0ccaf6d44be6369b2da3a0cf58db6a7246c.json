{"sha": "4db0f0ccaf6d44be6369b2da3a0cf58db6a7246c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYjBmMGNjYWY2ZDQ0YmU2MzY5YjJkYTNhMGNmNThkYjZhNzI0NmM=", "commit": {"author": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-06-09T16:09:19Z"}, "committer": {"name": "Edwin Cheng", "email": "edwin0cheng@gmail.com", "date": "2019-06-09T16:09:19Z"}, "message": "Rename description funcs", "tree": {"sha": "ebfab2c57ad7143f4f9b4fb0bdf241cfd44ebd65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ebfab2c57ad7143f4f9b4fb0bdf241cfd44ebd65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4db0f0ccaf6d44be6369b2da3a0cf58db6a7246c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4db0f0ccaf6d44be6369b2da3a0cf58db6a7246c", "html_url": "https://github.com/rust-lang/rust/commit/4db0f0ccaf6d44be6369b2da3a0cf58db6a7246c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4db0f0ccaf6d44be6369b2da3a0cf58db6a7246c/comments", "author": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "committer": {"login": "edwin0cheng", "id": 11014119, "node_id": "MDQ6VXNlcjExMDE0MTE5", "avatar_url": "https://avatars.githubusercontent.com/u/11014119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/edwin0cheng", "html_url": "https://github.com/edwin0cheng", "followers_url": "https://api.github.com/users/edwin0cheng/followers", "following_url": "https://api.github.com/users/edwin0cheng/following{/other_user}", "gists_url": "https://api.github.com/users/edwin0cheng/gists{/gist_id}", "starred_url": "https://api.github.com/users/edwin0cheng/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/edwin0cheng/subscriptions", "organizations_url": "https://api.github.com/users/edwin0cheng/orgs", "repos_url": "https://api.github.com/users/edwin0cheng/repos", "events_url": "https://api.github.com/users/edwin0cheng/events{/privacy}", "received_events_url": "https://api.github.com/users/edwin0cheng/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9848b2e6ce96a52252c8797c6f467e8e6e951a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9848b2e6ce96a52252c8797c6f467e8e6e951a4", "html_url": "https://github.com/rust-lang/rust/commit/e9848b2e6ce96a52252c8797c6f467e8e6e951a4"}], "stats": {"total": 22, "additions": 11, "deletions": 11}, "files": [{"sha": "4f6b0a8588829c8db335c2a279d0ce8283ebba90", "filename": "crates/ra_ide_api/src/display/description.rs", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4db0f0ccaf6d44be6369b2da3a0cf58db6a7246c/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fdescription.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4db0f0ccaf6d44be6369b2da3a0cf58db6a7246c/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fdescription.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fdescription.rs?ref=4db0f0ccaf6d44be6369b2da3a0cf58db6a7246c", "patch": "@@ -14,49 +14,49 @@ impl Description for ast::FnDef {\n \n impl Description for ast::StructDef {\n     fn description(&self) -> Option<String> {\n-        visit_node(self, \"struct \")\n+        description_from_node(self, \"struct \")\n     }\n }\n \n impl Description for ast::EnumDef {\n     fn description(&self) -> Option<String> {\n-        visit_node(self, \"enum \")\n+        description_from_node(self, \"enum \")\n     }\n }\n \n impl Description for ast::TraitDef {\n     fn description(&self) -> Option<String> {\n-        visit_node(self, \"trait \")\n+        description_from_node(self, \"trait \")\n     }\n }\n \n impl Description for ast::Module {\n     fn description(&self) -> Option<String> {\n-        visit_node(self, \"mod \")\n+        description_from_node(self, \"mod \")\n     }\n }\n \n impl Description for ast::TypeAliasDef {\n     fn description(&self) -> Option<String> {\n-        visit_node(self, \"type \")\n+        description_from_node(self, \"type \")\n     }\n }\n \n impl Description for ast::ConstDef {\n     fn description(&self) -> Option<String> {\n-        visit_ascribed_node(self, \"const \")\n+        description_from_ascribed_node(self, \"const \")\n     }\n }\n \n impl Description for ast::StaticDef {\n     fn description(&self) -> Option<String> {\n-        visit_ascribed_node(self, \"static \")\n+        description_from_ascribed_node(self, \"static \")\n     }\n }\n \n impl Description for ast::NamedFieldDef {\n     fn description(&self) -> Option<String> {\n-        visit_ascribed_node(self, \"\")\n+        description_from_ascribed_node(self, \"\")\n     }\n }\n \n@@ -66,11 +66,11 @@ impl Description for ast::EnumVariant {\n     }\n }\n \n-fn visit_ascribed_node<T>(node: &T, prefix: &str) -> Option<String>\n+fn description_from_ascribed_node<T>(node: &T, prefix: &str) -> Option<String>\n where\n     T: NameOwner + VisibilityOwner + TypeAscriptionOwner,\n {\n-    let mut string = visit_node(node, prefix)?;\n+    let mut string = description_from_node(node, prefix)?;\n \n     if let Some(type_ref) = node.ascribed_type() {\n         string.push_str(\": \");\n@@ -80,7 +80,7 @@ where\n     Some(string)\n }\n \n-fn visit_node<T>(node: &T, label: &str) -> Option<String>\n+fn description_from_node<T>(node: &T, label: &str) -> Option<String>\n where\n     T: NameOwner + VisibilityOwner,\n {"}]}