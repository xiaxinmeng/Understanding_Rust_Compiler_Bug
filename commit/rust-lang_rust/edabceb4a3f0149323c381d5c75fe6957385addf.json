{"sha": "edabceb4a3f0149323c381d5c75fe6957385addf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmVkYWJjZWI0YTNmMDE0OTMyM2MzODFkNWM3NWZlNjk1NzM4NWFkZGY=", "commit": {"author": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2020-04-03T20:53:55Z"}, "committer": {"name": "Yoshua Wuyts", "email": "yoshuawuyts@gmail.com", "date": "2020-04-04T23:44:02Z"}, "message": "Add slice::fill", "tree": {"sha": "fe55ccdb31156f20638959d71caddf3e77267513", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fe55ccdb31156f20638959d71caddf3e77267513"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/edabceb4a3f0149323c381d5c75fe6957385addf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/edabceb4a3f0149323c381d5c75fe6957385addf", "html_url": "https://github.com/rust-lang/rust/commit/edabceb4a3f0149323c381d5c75fe6957385addf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/edabceb4a3f0149323c381d5c75fe6957385addf/comments", "author": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yoshuawuyts", "id": 2467194, "node_id": "MDQ6VXNlcjI0NjcxOTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2467194?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yoshuawuyts", "html_url": "https://github.com/yoshuawuyts", "followers_url": "https://api.github.com/users/yoshuawuyts/followers", "following_url": "https://api.github.com/users/yoshuawuyts/following{/other_user}", "gists_url": "https://api.github.com/users/yoshuawuyts/gists{/gist_id}", "starred_url": "https://api.github.com/users/yoshuawuyts/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yoshuawuyts/subscriptions", "organizations_url": "https://api.github.com/users/yoshuawuyts/orgs", "repos_url": "https://api.github.com/users/yoshuawuyts/repos", "events_url": "https://api.github.com/users/yoshuawuyts/events{/privacy}", "received_events_url": "https://api.github.com/users/yoshuawuyts/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6fe99c798cb65280a9a56f442b371adcb7b8aa2", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6fe99c798cb65280a9a56f442b371adcb7b8aa2", "html_url": "https://github.com/rust-lang/rust/commit/f6fe99c798cb65280a9a56f442b371adcb7b8aa2"}], "stats": {"total": 24, "additions": 24, "deletions": 0}, "files": [{"sha": "a257d73c0cca3a4b9f04a7be6a17e74f85860679", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/edabceb4a3f0149323c381d5c75fe6957385addf/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/edabceb4a3f0149323c381d5c75fe6957385addf/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=edabceb4a3f0149323c381d5c75fe6957385addf", "patch": "@@ -23,6 +23,7 @@\n // * The `raw` and `bytes` submodules.\n // * Boilerplate trait implementations.\n \n+use crate::borrow::Borrow;\n use crate::cmp;\n use crate::cmp::Ordering::{self, Equal, Greater, Less};\n use crate::fmt;\n@@ -2145,6 +2146,29 @@ impl<T> [T] {\n         }\n     }\n \n+    /// Fills `self` with elements by cloning `value`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(slice_fill)]\n+    ///\n+    /// let mut buf = vec![0; 10];\n+    /// buf.fill(1);\n+    /// assert_eq!(buf, vec![1; 10]);\n+    /// ```\n+    #[unstable(feature = \"slice_fill\", issue = \"70758\")]\n+    pub fn fill<V>(&mut self, value: V)\n+    where\n+        V: Borrow<T>,\n+        T: Clone,\n+    {\n+        let value = value.borrow();\n+        for el in self {\n+            el.clone_from(value)\n+        }\n+    }\n+\n     /// Copies the elements from `src` into `self`.\n     ///\n     /// The length of `src` must be the same as `self`."}]}