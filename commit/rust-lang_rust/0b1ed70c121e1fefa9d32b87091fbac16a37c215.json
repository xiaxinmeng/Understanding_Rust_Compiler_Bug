{"sha": "0b1ed70c121e1fefa9d32b87091fbac16a37c215", "node_id": "C_kwDOAAsO6NoAKDBiMWVkNzBjMTIxZTFmZWZhOWQzMmI4NzA5MWZiYWMxNmEzN2MyMTU", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-25T12:58:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-25T12:58:58Z"}, "message": "Auto merge of #12871 - fasterthanlime:sync-from-rust-2, r=Veykril\n\nSync from `rust-lang/rust`\n\nThis is the first subtree sync PR from `rust-lang/rust` to `rust-lang/rust-analyzer`, made by following the instructions at: https://doc.rust-lang.org/nightly/clippy/development/infrastructure/sync.html#performing-the-sync-from-rust-langrust-to-clippy\n\nIt includes all the commits that were made in:\n\n  * https://github.com/rust-lang/rust/pull/99603\n\n(And that were reviewed ahead of time by `@Veykril` + `@lnicola)`", "tree": {"sha": "9c60f21b184b22d52de223a07cbbb7bc2945f624", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c60f21b184b22d52de223a07cbbb7bc2945f624"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b1ed70c121e1fefa9d32b87091fbac16a37c215", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b1ed70c121e1fefa9d32b87091fbac16a37c215", "html_url": "https://github.com/rust-lang/rust/commit/0b1ed70c121e1fefa9d32b87091fbac16a37c215", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b1ed70c121e1fefa9d32b87091fbac16a37c215/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac86b8edffcfd8076436c4154ec0236a91cc3c62", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac86b8edffcfd8076436c4154ec0236a91cc3c62", "html_url": "https://github.com/rust-lang/rust/commit/ac86b8edffcfd8076436c4154ec0236a91cc3c62"}, {"sha": "dc9405081531d0f3e68d984290b4d752bee3b9bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc9405081531d0f3e68d984290b4d752bee3b9bd", "html_url": "https://github.com/rust-lang/rust/commit/dc9405081531d0f3e68d984290b4d752bee3b9bd"}], "stats": {"total": 666, "additions": 357, "deletions": 309}, "files": [{"sha": "cb87b5d01385ad82c7a1658208d0a2605c7f4306", "filename": ".gitattributes", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/.gitattributes", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/.gitattributes", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitattributes?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -1,7 +1,8 @@\n * text=auto eol=lf\n+\n # git grep shouldn't match entries in this benchmark data\n bench_data/** binary\n-crates/syntax/test_data/** -text eof=LF\n+\n # Older git versions try to fix line endings on images, this prevents it.\n *.png binary\n *.jpg binary"}, {"sha": "05e0ceb05a9a307a5dfa037fe71935534d906c37", "filename": "crates/hir-def/src/import_map.rs", "status": "modified", "additions": 42, "deletions": 38, "changes": 80, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fhir-def%2Fsrc%2Fimport_map.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fhir-def%2Fsrc%2Fimport_map.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fimport_map.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -516,6 +516,9 @@ mod tests {\n                     mark\n                 ))\n             })\n+            // HashSet iteration order isn't defined - it's different on\n+            // x86_64 and i686 at the very least\n+            .sorted()\n             .collect::<String>();\n         expect.assert_eq(&actual)\n     }\n@@ -588,6 +591,7 @@ mod tests {\n \n                 Some(format!(\"{}:\\n{:?}\\n\", name, map))\n             })\n+            .sorted()\n             .collect::<String>();\n \n         expect.assert_eq(&actual)\n@@ -621,15 +625,15 @@ mod tests {\n             struct Priv;\n         \",\n             expect![[r#\"\n+                lib:\n+                - Pub (t)\n+                - Pub2 (t)\n+                - Pub2 (v)\n                 main:\n                 - publ1 (t)\n                 - real_pu2 (t)\n                 - real_pub (t)\n                 - real_pub::Pub (t)\n-                lib:\n-                - Pub (t)\n-                - Pub2 (t)\n-                - Pub2 (v)\n             \"#]],\n         );\n     }\n@@ -671,13 +675,13 @@ mod tests {\n             pub struct S;\n         \",\n             expect![[r#\"\n+                lib:\n+                - S (t)\n+                - S (v)\n                 main:\n                 - m (t)\n                 - m::S (t)\n                 - m::S (v)\n-                lib:\n-                - S (t)\n-                - S (v)\n             \"#]],\n         );\n     }\n@@ -697,11 +701,11 @@ mod tests {\n             }\n         \",\n             expect![[r#\"\n+                lib:\n+                - pub_macro (m)\n                 main:\n                 - m (t)\n                 - m::pub_macro (m)\n-                lib:\n-                - pub_macro (m)\n             \"#]],\n         );\n     }\n@@ -719,14 +723,14 @@ mod tests {\n             }\n         \",\n             expect![[r#\"\n-                main:\n-                - reexported_module (t)\n-                - reexported_module::S (t)\n-                - reexported_module::S (v)\n                 lib:\n                 - module (t)\n                 - module::S (t)\n                 - module::S (v)\n+                main:\n+                - reexported_module (t)\n+                - reexported_module::S (t)\n+                - reexported_module::S (v)\n             \"#]],\n         );\n     }\n@@ -831,10 +835,10 @@ mod tests {\n             Query::new(\"fmt\".to_string()).search_mode(SearchMode::Fuzzy),\n             expect![[r#\"\n                 dep::fmt (t)\n-                dep::fmt::Display::format_method (a)\n                 dep::fmt::Display (t)\n                 dep::fmt::Display::FMT_CONST (a)\n                 dep::fmt::Display::format_function (a)\n+                dep::fmt::Display::format_method (a)\n             \"#]],\n         );\n     }\n@@ -860,10 +864,10 @@ mod tests {\n             \"main\",\n             Query::new(\"fmt\".to_string()).search_mode(SearchMode::Fuzzy).assoc_items_only(),\n             expect![[r#\"\n-            dep::fmt::Display::format_method (a)\n-            dep::fmt::Display::FMT_CONST (a)\n-            dep::fmt::Display::format_function (a)\n-        \"#]],\n+                dep::fmt::Display::FMT_CONST (a)\n+                dep::fmt::Display::format_function (a)\n+                dep::fmt::Display::format_method (a)\n+            \"#]],\n         );\n \n         check_search(\n@@ -920,13 +924,13 @@ mod tests {\n             \"main\",\n             Query::new(\"fmt\".to_string()).search_mode(SearchMode::Fuzzy),\n             expect![[r#\"\n-                dep::fmt (t)\n-                dep::format (f)\n-                dep::Fmt (v)\n                 dep::Fmt (m)\n                 dep::Fmt (t)\n-                dep::fmt::Display::fmt (a)\n+                dep::Fmt (v)\n+                dep::fmt (t)\n                 dep::fmt::Display (t)\n+                dep::fmt::Display::fmt (a)\n+                dep::format (f)\n             \"#]],\n         );\n \n@@ -935,10 +939,10 @@ mod tests {\n             \"main\",\n             Query::new(\"fmt\".to_string()).search_mode(SearchMode::Equals),\n             expect![[r#\"\n-                dep::fmt (t)\n-                dep::Fmt (v)\n                 dep::Fmt (m)\n                 dep::Fmt (t)\n+                dep::Fmt (v)\n+                dep::fmt (t)\n                 dep::fmt::Display::fmt (a)\n             \"#]],\n         );\n@@ -948,12 +952,12 @@ mod tests {\n             \"main\",\n             Query::new(\"fmt\".to_string()).search_mode(SearchMode::Contains),\n             expect![[r#\"\n-                dep::fmt (t)\n-                dep::Fmt (v)\n                 dep::Fmt (m)\n                 dep::Fmt (t)\n-                dep::fmt::Display::fmt (a)\n+                dep::Fmt (v)\n+                dep::fmt (t)\n                 dep::fmt::Display (t)\n+                dep::fmt::Display::fmt (a)\n             \"#]],\n         );\n     }\n@@ -989,12 +993,12 @@ mod tests {\n             \"main\",\n             Query::new(\"fmt\".to_string()),\n             expect![[r#\"\n-                dep::fmt (t)\n-                dep::Fmt (v)\n                 dep::Fmt (m)\n                 dep::Fmt (t)\n-                dep::fmt::Display::fmt (a)\n+                dep::Fmt (v)\n+                dep::fmt (t)\n                 dep::fmt::Display (t)\n+                dep::fmt::Display::fmt (a)\n             \"#]],\n         );\n \n@@ -1003,10 +1007,10 @@ mod tests {\n             \"main\",\n             Query::new(\"fmt\".to_string()).name_only(),\n             expect![[r#\"\n-                dep::fmt (t)\n-                dep::Fmt (v)\n                 dep::Fmt (m)\n                 dep::Fmt (t)\n+                dep::Fmt (v)\n+                dep::fmt (t)\n                 dep::fmt::Display::fmt (a)\n             \"#]],\n         );\n@@ -1027,10 +1031,10 @@ mod tests {\n             \"main\",\n             Query::new(\"FMT\".to_string()),\n             expect![[r#\"\n-                dep::fmt (t)\n+                dep::FMT (t)\n                 dep::FMT (v)\n+                dep::fmt (t)\n                 dep::fmt (v)\n-                dep::FMT (t)\n             \"#]],\n         );\n \n@@ -1068,10 +1072,10 @@ mod tests {\n             \"main\",\n             Query::new(\"\".to_string()).limit(2),\n             expect![[r#\"\n-                dep::fmt (t)\n+                dep::Fmt (m)\n                 dep::Fmt (t)\n                 dep::Fmt (v)\n-                dep::Fmt (m)\n+                dep::fmt (t)\n             \"#]],\n         );\n     }\n@@ -1091,10 +1095,10 @@ mod tests {\n             \"main\",\n             Query::new(\"FMT\".to_string()),\n             expect![[r#\"\n-                dep::fmt (t)\n+                dep::FMT (t)\n                 dep::FMT (v)\n+                dep::fmt (t)\n                 dep::fmt (v)\n-                dep::FMT (t)\n             \"#]],\n         );\n "}, {"sha": "3949fbb6e7b034c7022d153295e8b2a2007fb162", "filename": "crates/hir-def/src/nameres.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fhir-def%2Fsrc%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fhir-def%2Fsrc%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fnameres.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -48,19 +48,20 @@\n //! the result\n \n pub mod attr_resolution;\n-pub mod diagnostics;\n mod collector;\n+pub mod diagnostics;\n mod mod_resolution;\n mod path_resolution;\n mod proc_macro;\n \n #[cfg(test)]\n mod tests;\n \n-use std::sync::Arc;\n+use std::{cmp::Ord, sync::Arc};\n \n use base_db::{CrateId, Edition, FileId};\n use hir_expand::{name::Name, InFile, MacroDefId};\n+use itertools::Itertools;\n use la_arena::Arena;\n use profile::Count;\n use rustc_hash::FxHashMap;\n@@ -431,7 +432,9 @@ impl DefMap {\n \n             map.modules[module].scope.dump(buf);\n \n-            for (name, child) in map.modules[module].children.iter() {\n+            for (name, child) in\n+                map.modules[module].children.iter().sorted_by(|a, b| Ord::cmp(&a.0, &b.0))\n+            {\n                 let path = format!(\"{}::{}\", path, name);\n                 buf.push('\\n');\n                 go(buf, map, &path, *child);"}, {"sha": "70dd2eb3ade69d2a07ecb6550748abe45744bc82", "filename": "crates/hir-def/src/nameres/tests.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -648,11 +648,11 @@ mod b {\n             a: t\n             b: t\n \n-            crate::b\n-            T: v\n-\n             crate::a\n             T: t v\n+\n+            crate::b\n+            T: v\n         \"#]],\n     );\n }\n@@ -704,13 +704,13 @@ use crate::reex::*;\n             reex: t\n             tr: t\n \n-            crate::tr\n-            PrivTr: t\n-            PubTr: t\n-\n             crate::reex\n             _: t\n             _: t\n+\n+            crate::tr\n+            PrivTr: t\n+            PubTr: t\n         \"#]],\n     );\n }\n@@ -920,14 +920,14 @@ use some_module::unknown_func;\n             some_module: t\n             unknown_func: v\n \n-            crate::some_module\n-            unknown_func: v\n-\n             crate::other_module\n             some_submodule: t\n \n             crate::other_module::some_submodule\n             unknown_func: v\n+\n+            crate::some_module\n+            unknown_func: v\n         \"#]],\n     )\n }"}, {"sha": "b2a6a592cf38b4b756b7fedbdcc812bb2e6c8097", "filename": "crates/hir-def/src/nameres/tests/globs.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests%2Fglobs.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -315,8 +315,13 @@ mod d {\n             c: t\n             d: t\n \n-            crate::d\n-            Y: t v\n+            crate::a\n+            foo: t\n+\n+            crate::a::foo\n+            X: t v\n+\n+            crate::b\n             foo: t\n \n             crate::c\n@@ -325,14 +330,9 @@ mod d {\n             crate::c::foo\n             Y: t v\n \n-            crate::b\n-            foo: t\n-\n-            crate::a\n+            crate::d\n+            Y: t v\n             foo: t\n-\n-            crate::a::foo\n-            X: t v\n         \"#]],\n     );\n }"}, {"sha": "3ece1379ad774b495c0b8e2d568cdc8efa8bf23b", "filename": "crates/hir-def/src/nameres/tests/macros.rs", "status": "modified", "additions": 14, "deletions": 9, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fnameres%2Ftests%2Fmacros.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -1,4 +1,5 @@\n use super::*;\n+use itertools::Itertools;\n \n #[test]\n fn macro_rules_are_globally_visible() {\n@@ -439,15 +440,8 @@ macro_rules! baz {\n             m7: t\n             ok_double_macro_use_shadow: v\n \n-            crate::m7\n-\n             crate::m1\n \n-            crate::m5\n-            m6: t\n-\n-            crate::m5::m6\n-\n             crate::m2\n \n             crate::m3\n@@ -462,6 +456,13 @@ macro_rules! baz {\n             ok_shadow_deep: v\n \n             crate::m3::m5\n+\n+            crate::m5\n+            m6: t\n+\n+            crate::m5::m6\n+\n+            crate::m7\n         \"#]],\n     );\n     // FIXME: should not see `NotFoundBefore`\n@@ -1171,11 +1172,15 @@ fn proc_attr(a: TokenStream, b: TokenStream) -> TokenStream { a }\n     );\n \n     let root = &def_map[def_map.root()].scope;\n-    let actual = root.legacy_macros().map(|(name, _)| format!(\"{name}\\n\")).collect::<String>();\n+    let actual = root\n+        .legacy_macros()\n+        .sorted_by(|a, b| std::cmp::Ord::cmp(&a.0, &b.0))\n+        .map(|(name, _)| format!(\"{name}\\n\"))\n+        .collect::<String>();\n \n     expect![[r#\"\n-        macro20\n         legacy\n+        macro20\n         proc_attr\n     \"#]]\n     .assert_eq(&actual);"}, {"sha": "fca09d384c6efcea3a1ea987629bd6a8c7b319f7", "filename": "crates/ide-assists/Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fide-assists%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fide-assists%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2FCargo.toml?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -26,3 +26,6 @@ hir = { path = \"../hir\", version = \"0.0.0\" }\n test-utils = { path = \"../test-utils\" }\n sourcegen = { path = \"../sourcegen\" }\n expect-test = \"1.4.0\"\n+\n+[features]\n+in-rust-tree = []"}, {"sha": "9cd66c6b3b07bdb9c1cd8550dac2e58f3fd5cc43", "filename": "crates/ide-assists/src/tests.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fide-assists%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fide-assists%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Ftests.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -1,5 +1,6 @@\n-mod sourcegen;\n mod generated;\n+#[cfg(not(feature = \"in-rust-tree\"))]\n+mod sourcegen;\n \n use expect_test::expect;\n use hir::{db::DefDatabase, Semantics};"}, {"sha": "070b83d3c16b17f36aad45ddd055fefb0bc49927", "filename": "crates/ide-assists/src/tests/sourcegen.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fide-assists%2Fsrc%2Ftests%2Fsourcegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fide-assists%2Fsrc%2Ftests%2Fsourcegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Ftests%2Fsourcegen.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -59,6 +59,7 @@ r#####\"\n         fs::write(dst, contents).unwrap();\n     }\n }\n+\n #[derive(Debug)]\n struct Section {\n     doc: String,\n@@ -104,9 +105,11 @@ impl Assist {\n                 while lines.peek().is_some() {\n                     let doc = take_until(lines.by_ref(), \"```\").trim().to_string();\n                     assert!(\n-                        (doc.chars().next().unwrap().is_ascii_uppercase() && doc.ends_with('.')) || assist.sections.len() > 0,\n+                        (doc.chars().next().unwrap().is_ascii_uppercase() && doc.ends_with('.'))\n+                            || assist.sections.len() > 0,\n                         \"\\n\\n{}: assist docs should be proper sentences, with capitalization and a full stop at the end.\\n\\n{}\\n\\n\",\n-                        &assist.id, doc,\n+                        &assist.id,\n+                        doc,\n                     );\n \n                     let before = take_until(lines.by_ref(), \"```\");"}, {"sha": "e221425edd5bfbf07cbcb1c89bf0c6dc8ce52a1a", "filename": "crates/ide-diagnostics/Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fide-diagnostics%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fide-diagnostics%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-diagnostics%2FCargo.toml?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -29,3 +29,6 @@ expect-test = \"1.4.0\"\n \n test-utils = { path = \"../test-utils\" }\n sourcegen = { path = \"../sourcegen\" }\n+\n+[features]\n+in-rust-tree = []"}, {"sha": "7312bca32fed99151c7fe9711a1437f3ba5b4aa4", "filename": "crates/ide-diagnostics/src/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fide-diagnostics%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fide-diagnostics%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-diagnostics%2Fsrc%2Ftests.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -1,3 +1,4 @@\n+#[cfg(not(feature = \"in-rust-tree\"))]\n mod sourcegen;\n \n use expect_test::Expect;"}, {"sha": "0e9771cd2ebafbc6f7df68c5cba6b3d5ad2d87b6", "filename": "crates/ide/Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2FCargo.toml?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -42,3 +42,6 @@ toolchain = { path = \"../toolchain\", version = \"0.0.0\" }\n [dev-dependencies]\n test-utils = { path = \"../test-utils\" }\n expect-test = \"1.4.0\"\n+\n+[features]\n+in-rust-tree = [\"ide-assists/in-rust-tree\", \"ide-diagnostics/in-rust-tree\"]"}, {"sha": "a80c962617bb3611a746e0d4482a3143621e4e65", "filename": "crates/proc-macro-test/build.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fproc-macro-test%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fproc-macro-test%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc-macro-test%2Fbuild.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -62,17 +62,18 @@ fn main() {\n         Command::new(toolchain::cargo())\n     };\n \n-    let output = cmd\n-        .current_dir(&staging_dir)\n+    cmd.current_dir(&staging_dir)\n         .args(&[\"build\", \"-p\", \"proc-macro-test-impl\", \"--message-format\", \"json\"])\n         // Explicit override the target directory to avoid using the same one which the parent\n         // cargo is using, or we'll deadlock.\n         // This can happen when `CARGO_TARGET_DIR` is set or global config forces all cargo\n         // instance to use the same target directory.\n         .arg(\"--target-dir\")\n-        .arg(&target_dir)\n-        .output()\n-        .unwrap();\n+        .arg(&target_dir);\n+\n+    println!(\"Running {:?}\", cmd);\n+\n+    let output = cmd.output().unwrap();\n     if !output.status.success() {\n         println!(\"proc-macro-test-impl failed to build\");\n         println!(\"============ stdout ============\");"}, {"sha": "07771d1b392ce1a2481d08f2c156078ca20f07f6", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -84,4 +84,9 @@ mbe = { path = \"../mbe\" }\n [features]\n jemalloc = [\"jemallocator\", \"profile/jemalloc\"]\n force-always-assert = [\"always-assert/force\"]\n-in-rust-tree = [\"proc-macro-srv/sysroot-abi\"]\n+in-rust-tree = [\n+    \"proc-macro-srv/sysroot-abi\",\n+    \"sourcegen/in-rust-tree\",\n+    \"ide/in-rust-tree\",\n+    \"syntax/in-rust-tree\"\n+]"}, {"sha": "4cc46af1b17c577debd33b38f218f7c55151b4e8", "filename": "crates/rust-analyzer/tests/slow-tests/main.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Fmain.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -10,10 +10,11 @@\n \n #![warn(rust_2018_idioms, unused_lifetimes, semicolon_in_expressions_from_macros)]\n \n+#[cfg(not(feature = \"in-rust-tree\"))]\n mod sourcegen;\n-mod tidy;\n-mod testdir;\n mod support;\n+mod testdir;\n+mod tidy;\n \n use std::{collections::HashMap, path::PathBuf, time::Instant};\n "}, {"sha": "18f95925d9a49e71c34b0545680a35dbb4a0181b", "filename": "crates/rust-analyzer/tests/slow-tests/tidy.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Ftests%2Fslow-tests%2Ftidy.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -3,8 +3,12 @@ use std::{\n     path::{Path, PathBuf},\n };\n \n-use xshell::{cmd, Shell};\n+use xshell::Shell;\n \n+#[cfg(not(feature = \"in-rust-tree\"))]\n+use xshell::cmd;\n+\n+#[cfg(not(feature = \"in-rust-tree\"))]\n #[test]\n fn check_code_formatting() {\n     let sh = &Shell::new().unwrap();\n@@ -168,6 +172,7 @@ See https://github.com/rust-lang/rust-clippy/issues/5537 for discussion.\n     }\n }\n \n+#[cfg(not(feature = \"in-rust-tree\"))]\n #[test]\n fn check_licenses() {\n     let sh = &Shell::new().unwrap();"}, {"sha": "a84110d940bc7a2e4311050519c1860dafe9dce8", "filename": "crates/sourcegen/Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fsourcegen%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fsourcegen%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsourcegen%2FCargo.toml?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -11,3 +11,6 @@ doctest = false\n \n [dependencies]\n xshell = \"0.2.2\"\n+\n+[features]\n+in-rust-tree = []"}, {"sha": "0e2dec386ff77387392162db323a35fd5f11f8bf", "filename": "crates/syntax/Cargo.toml", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fsyntax%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fsyntax%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2FCargo.toml?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -34,3 +34,6 @@ ungrammar = \"1.16.1\"\n \n test-utils = { path = \"../test-utils\" }\n sourcegen = { path = \"../sourcegen\" }\n+\n+[features]\n+in-rust-tree = []"}, {"sha": "58fba8cfa8f05ccda4c4e063cdcda733806b4848", "filename": "crates/syntax/src/tests.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fsyntax%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fsyntax%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Ftests.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -1,5 +1,7 @@\n-mod sourcegen_ast;\n+#[cfg(not(feature = \"in-rust-tree\"))]\n mod ast_src;\n+#[cfg(not(feature = \"in-rust-tree\"))]\n+mod sourcegen_ast;\n \n use std::{\n     fs,"}, {"sha": "0a5958f25f7ab99df4d04f74bb0027fa29d8c322", "filename": "crates/syntax/test_data/parser/validation/0045_ambiguous_trait_object.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2F0045_ambiguous_trait_object.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2F0045_ambiguous_trait_object.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2F0045_ambiguous_trait_object.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -1,6 +1,6 @@\n-type Foo<'a> = &'a dyn Send + Sync;\r\n-type Foo = *const dyn Send + Sync;\r\n-type Foo = fn() -> dyn Send + 'static;\r\n-fn main() {\r\n-    let b = (&a) as &dyn Add<Other, Output = Addable> + Other;\r\n-}\r\n+type Foo<'a> = &'a dyn Send + Sync;\n+type Foo = *const dyn Send + Sync;\n+type Foo = fn() -> dyn Send + 'static;\n+fn main() {\n+    let b = (&a) as &dyn Add<Other, Output = Addable> + Other;\n+}"}, {"sha": "ccab6bccfaa1278674691f975c23f940082fb3f2", "filename": "crates/syntax/test_data/parser/validation/0046_mutable_const_item.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2F0046_mutable_const_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2F0046_mutable_const_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2F0046_mutable_const_item.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -1 +1 @@\n-const mut FOO: () = ();\r\n+const mut FOO: () = ();"}, {"sha": "9e1e4886401a1c32d9a218ac372d1a2b5ccc6142", "filename": "crates/syntax/test_data/parser/validation/invalid_let_expr.rast", "status": "modified", "additions": 216, "deletions": 216, "changes": 432, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2Finvalid_let_expr.rast", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2Finvalid_let_expr.rast", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Ftest_data%2Fparser%2Fvalidation%2Finvalid_let_expr.rast?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -1,216 +1,216 @@\n-SOURCE_FILE@0..282\r\n-  FN@0..281\r\n-    FN_KW@0..2 \"fn\"\r\n-    WHITESPACE@2..3 \" \"\r\n-    NAME@3..6\r\n-      IDENT@3..6 \"foo\"\r\n-    PARAM_LIST@6..8\r\n-      L_PAREN@6..7 \"(\"\r\n-      R_PAREN@7..8 \")\"\r\n-    WHITESPACE@8..9 \" \"\r\n-    BLOCK_EXPR@9..281\r\n-      STMT_LIST@9..281\r\n-        L_CURLY@9..10 \"{\"\r\n-        WHITESPACE@10..15 \"\\n    \"\r\n-        CONST@15..42\r\n-          CONST_KW@15..20 \"const\"\r\n-          WHITESPACE@20..21 \" \"\r\n-          UNDERSCORE@21..22 \"_\"\r\n-          COLON@22..23 \":\"\r\n-          WHITESPACE@23..24 \" \"\r\n-          TUPLE_TYPE@24..26\r\n-            L_PAREN@24..25 \"(\"\r\n-            R_PAREN@25..26 \")\"\r\n-          WHITESPACE@26..27 \" \"\r\n-          EQ@27..28 \"=\"\r\n-          WHITESPACE@28..29 \" \"\r\n-          LET_EXPR@29..41\r\n-            LET_KW@29..32 \"let\"\r\n-            WHITESPACE@32..33 \" \"\r\n-            WILDCARD_PAT@33..34\r\n-              UNDERSCORE@33..34 \"_\"\r\n-            WHITESPACE@34..35 \" \"\r\n-            EQ@35..36 \"=\"\r\n-            WHITESPACE@36..37 \" \"\r\n-            PATH_EXPR@37..41\r\n-              PATH@37..41\r\n-                PATH_SEGMENT@37..41\r\n-                  NAME_REF@37..41\r\n-                    IDENT@37..41 \"None\"\r\n-          SEMICOLON@41..42 \";\"\r\n-        WHITESPACE@42..48 \"\\n\\n    \"\r\n-        LET_STMT@48..83\r\n-          LET_KW@48..51 \"let\"\r\n-          WHITESPACE@51..52 \" \"\r\n-          WILDCARD_PAT@52..53\r\n-            UNDERSCORE@52..53 \"_\"\r\n-          WHITESPACE@53..54 \" \"\r\n-          EQ@54..55 \"=\"\r\n-          WHITESPACE@55..56 \" \"\r\n-          IF_EXPR@56..82\r\n-            IF_KW@56..58 \"if\"\r\n-            WHITESPACE@58..59 \" \"\r\n-            LITERAL@59..63\r\n-              TRUE_KW@59..63 \"true\"\r\n-            WHITESPACE@63..64 \" \"\r\n-            BLOCK_EXPR@64..82\r\n-              STMT_LIST@64..82\r\n-                L_CURLY@64..65 \"{\"\r\n-                WHITESPACE@65..66 \" \"\r\n-                PAREN_EXPR@66..80\r\n-                  L_PAREN@66..67 \"(\"\r\n-                  LET_EXPR@67..79\r\n-                    LET_KW@67..70 \"let\"\r\n-                    WHITESPACE@70..71 \" \"\r\n-                    WILDCARD_PAT@71..72\r\n-                      UNDERSCORE@71..72 \"_\"\r\n-                    WHITESPACE@72..73 \" \"\r\n-                    EQ@73..74 \"=\"\r\n-                    WHITESPACE@74..75 \" \"\r\n-                    PATH_EXPR@75..79\r\n-                      PATH@75..79\r\n-                        PATH_SEGMENT@75..79\r\n-                          NAME_REF@75..79\r\n-                            IDENT@75..79 \"None\"\r\n-                  R_PAREN@79..80 \")\"\r\n-                WHITESPACE@80..81 \" \"\r\n-                R_CURLY@81..82 \"}\"\r\n-          SEMICOLON@82..83 \";\"\r\n-        WHITESPACE@83..89 \"\\n\\n    \"\r\n-        IF_EXPR@89..279\r\n-          IF_KW@89..91 \"if\"\r\n-          WHITESPACE@91..92 \" \"\r\n-          BIN_EXPR@92..114\r\n-            LITERAL@92..96\r\n-              TRUE_KW@92..96 \"true\"\r\n-            WHITESPACE@96..97 \" \"\r\n-            AMP2@97..99 \"&&\"\r\n-            WHITESPACE@99..100 \" \"\r\n-            PAREN_EXPR@100..114\r\n-              L_PAREN@100..101 \"(\"\r\n-              LET_EXPR@101..113\r\n-                LET_KW@101..104 \"let\"\r\n-                WHITESPACE@104..105 \" \"\r\n-                WILDCARD_PAT@105..106\r\n-                  UNDERSCORE@105..106 \"_\"\r\n-                WHITESPACE@106..107 \" \"\r\n-                EQ@107..108 \"=\"\r\n-                WHITESPACE@108..109 \" \"\r\n-                PATH_EXPR@109..113\r\n-                  PATH@109..113\r\n-                    PATH_SEGMENT@109..113\r\n-                      NAME_REF@109..113\r\n-                        IDENT@109..113 \"None\"\r\n-              R_PAREN@113..114 \")\"\r\n-          WHITESPACE@114..115 \" \"\r\n-          BLOCK_EXPR@115..279\r\n-            STMT_LIST@115..279\r\n-              L_CURLY@115..116 \"{\"\r\n-              WHITESPACE@116..125 \"\\n        \"\r\n-              EXPR_STMT@125..140\r\n-                PAREN_EXPR@125..139\r\n-                  L_PAREN@125..126 \"(\"\r\n-                  LET_EXPR@126..138\r\n-                    LET_KW@126..129 \"let\"\r\n-                    WHITESPACE@129..130 \" \"\r\n-                    WILDCARD_PAT@130..131\r\n-                      UNDERSCORE@130..131 \"_\"\r\n-                    WHITESPACE@131..132 \" \"\r\n-                    EQ@132..133 \"=\"\r\n-                    WHITESPACE@133..134 \" \"\r\n-                    PATH_EXPR@134..138\r\n-                      PATH@134..138\r\n-                        PATH_SEGMENT@134..138\r\n-                          NAME_REF@134..138\r\n-                            IDENT@134..138 \"None\"\r\n-                  R_PAREN@138..139 \")\"\r\n-                SEMICOLON@139..140 \";\"\r\n-              WHITESPACE@140..149 \"\\n        \"\r\n-              WHILE_EXPR@149..273\r\n-                WHILE_KW@149..154 \"while\"\r\n-                WHITESPACE@154..155 \" \"\r\n-                LET_EXPR@155..167\r\n-                  LET_KW@155..158 \"let\"\r\n-                  WHITESPACE@158..159 \" \"\r\n-                  WILDCARD_PAT@159..160\r\n-                    UNDERSCORE@159..160 \"_\"\r\n-                  WHITESPACE@160..161 \" \"\r\n-                  EQ@161..162 \"=\"\r\n-                  WHITESPACE@162..163 \" \"\r\n-                  PATH_EXPR@163..167\r\n-                    PATH@163..167\r\n-                      PATH_SEGMENT@163..167\r\n-                        NAME_REF@163..167\r\n-                          IDENT@163..167 \"None\"\r\n-                WHITESPACE@167..168 \" \"\r\n-                BLOCK_EXPR@168..273\r\n-                  STMT_LIST@168..273\r\n-                    L_CURLY@168..169 \"{\"\r\n-                    WHITESPACE@169..182 \"\\n            \"\r\n-                    MATCH_EXPR@182..263\r\n-                      MATCH_KW@182..187 \"match\"\r\n-                      WHITESPACE@187..188 \" \"\r\n-                      PATH_EXPR@188..192\r\n-                        PATH@188..192\r\n-                          PATH_SEGMENT@188..192\r\n-                            NAME_REF@188..192\r\n-                              IDENT@188..192 \"None\"\r\n-                      WHITESPACE@192..193 \" \"\r\n-                      MATCH_ARM_LIST@193..263\r\n-                        L_CURLY@193..194 \"{\"\r\n-                        WHITESPACE@194..211 \"\\n                \"\r\n-                        MATCH_ARM@211..249\r\n-                          WILDCARD_PAT@211..212\r\n-                            UNDERSCORE@211..212 \"_\"\r\n-                          WHITESPACE@212..213 \" \"\r\n-                          MATCH_GUARD@213..228\r\n-                            IF_KW@213..215 \"if\"\r\n-                            WHITESPACE@215..216 \" \"\r\n-                            LET_EXPR@216..228\r\n-                              LET_KW@216..219 \"let\"\r\n-                              WHITESPACE@219..220 \" \"\r\n-                              WILDCARD_PAT@220..221\r\n-                                UNDERSCORE@220..221 \"_\"\r\n-                              WHITESPACE@221..222 \" \"\r\n-                              EQ@222..223 \"=\"\r\n-                              WHITESPACE@223..224 \" \"\r\n-                              PATH_EXPR@224..228\r\n-                                PATH@224..228\r\n-                                  PATH_SEGMENT@224..228\r\n-                                    NAME_REF@224..228\r\n-                                      IDENT@224..228 \"None\"\r\n-                          WHITESPACE@228..229 \" \"\r\n-                          FAT_ARROW@229..231 \"=>\"\r\n-                          WHITESPACE@231..232 \" \"\r\n-                          BLOCK_EXPR@232..249\r\n-                            STMT_LIST@232..249\r\n-                              L_CURLY@232..233 \"{\"\r\n-                              WHITESPACE@233..234 \" \"\r\n-                              LET_STMT@234..247\r\n-                                LET_KW@234..237 \"let\"\r\n-                                WHITESPACE@237..238 \" \"\r\n-                                WILDCARD_PAT@238..239\r\n-                                  UNDERSCORE@238..239 \"_\"\r\n-                                WHITESPACE@239..240 \" \"\r\n-                                EQ@240..241 \"=\"\r\n-                                WHITESPACE@241..242 \" \"\r\n-                                PATH_EXPR@242..246\r\n-                                  PATH@242..246\r\n-                                    PATH_SEGMENT@242..246\r\n-                                      NAME_REF@242..246\r\n-                                        IDENT@242..246 \"None\"\r\n-                                SEMICOLON@246..247 \";\"\r\n-                              WHITESPACE@247..248 \" \"\r\n-                              R_CURLY@248..249 \"}\"\r\n-                        WHITESPACE@249..262 \"\\n            \"\r\n-                        R_CURLY@262..263 \"}\"\r\n-                    WHITESPACE@263..272 \"\\n        \"\r\n-                    R_CURLY@272..273 \"}\"\r\n-              WHITESPACE@273..278 \"\\n    \"\r\n-              R_CURLY@278..279 \"}\"\r\n-        WHITESPACE@279..280 \"\\n\"\r\n-        R_CURLY@280..281 \"}\"\r\n-  WHITESPACE@281..282 \"\\n\"\r\n-error 29..41: `let` expressions are not supported here\r\n-error 67..79: `let` expressions are not supported here\r\n-error 126..138: `let` expressions are not supported here\r\n+SOURCE_FILE@0..282\n+  FN@0..281\n+    FN_KW@0..2 \"fn\"\n+    WHITESPACE@2..3 \" \"\n+    NAME@3..6\n+      IDENT@3..6 \"foo\"\n+    PARAM_LIST@6..8\n+      L_PAREN@6..7 \"(\"\n+      R_PAREN@7..8 \")\"\n+    WHITESPACE@8..9 \" \"\n+    BLOCK_EXPR@9..281\n+      STMT_LIST@9..281\n+        L_CURLY@9..10 \"{\"\n+        WHITESPACE@10..15 \"\\n    \"\n+        CONST@15..42\n+          CONST_KW@15..20 \"const\"\n+          WHITESPACE@20..21 \" \"\n+          UNDERSCORE@21..22 \"_\"\n+          COLON@22..23 \":\"\n+          WHITESPACE@23..24 \" \"\n+          TUPLE_TYPE@24..26\n+            L_PAREN@24..25 \"(\"\n+            R_PAREN@25..26 \")\"\n+          WHITESPACE@26..27 \" \"\n+          EQ@27..28 \"=\"\n+          WHITESPACE@28..29 \" \"\n+          LET_EXPR@29..41\n+            LET_KW@29..32 \"let\"\n+            WHITESPACE@32..33 \" \"\n+            WILDCARD_PAT@33..34\n+              UNDERSCORE@33..34 \"_\"\n+            WHITESPACE@34..35 \" \"\n+            EQ@35..36 \"=\"\n+            WHITESPACE@36..37 \" \"\n+            PATH_EXPR@37..41\n+              PATH@37..41\n+                PATH_SEGMENT@37..41\n+                  NAME_REF@37..41\n+                    IDENT@37..41 \"None\"\n+          SEMICOLON@41..42 \";\"\n+        WHITESPACE@42..48 \"\\n\\n    \"\n+        LET_STMT@48..83\n+          LET_KW@48..51 \"let\"\n+          WHITESPACE@51..52 \" \"\n+          WILDCARD_PAT@52..53\n+            UNDERSCORE@52..53 \"_\"\n+          WHITESPACE@53..54 \" \"\n+          EQ@54..55 \"=\"\n+          WHITESPACE@55..56 \" \"\n+          IF_EXPR@56..82\n+            IF_KW@56..58 \"if\"\n+            WHITESPACE@58..59 \" \"\n+            LITERAL@59..63\n+              TRUE_KW@59..63 \"true\"\n+            WHITESPACE@63..64 \" \"\n+            BLOCK_EXPR@64..82\n+              STMT_LIST@64..82\n+                L_CURLY@64..65 \"{\"\n+                WHITESPACE@65..66 \" \"\n+                PAREN_EXPR@66..80\n+                  L_PAREN@66..67 \"(\"\n+                  LET_EXPR@67..79\n+                    LET_KW@67..70 \"let\"\n+                    WHITESPACE@70..71 \" \"\n+                    WILDCARD_PAT@71..72\n+                      UNDERSCORE@71..72 \"_\"\n+                    WHITESPACE@72..73 \" \"\n+                    EQ@73..74 \"=\"\n+                    WHITESPACE@74..75 \" \"\n+                    PATH_EXPR@75..79\n+                      PATH@75..79\n+                        PATH_SEGMENT@75..79\n+                          NAME_REF@75..79\n+                            IDENT@75..79 \"None\"\n+                  R_PAREN@79..80 \")\"\n+                WHITESPACE@80..81 \" \"\n+                R_CURLY@81..82 \"}\"\n+          SEMICOLON@82..83 \";\"\n+        WHITESPACE@83..89 \"\\n\\n    \"\n+        IF_EXPR@89..279\n+          IF_KW@89..91 \"if\"\n+          WHITESPACE@91..92 \" \"\n+          BIN_EXPR@92..114\n+            LITERAL@92..96\n+              TRUE_KW@92..96 \"true\"\n+            WHITESPACE@96..97 \" \"\n+            AMP2@97..99 \"&&\"\n+            WHITESPACE@99..100 \" \"\n+            PAREN_EXPR@100..114\n+              L_PAREN@100..101 \"(\"\n+              LET_EXPR@101..113\n+                LET_KW@101..104 \"let\"\n+                WHITESPACE@104..105 \" \"\n+                WILDCARD_PAT@105..106\n+                  UNDERSCORE@105..106 \"_\"\n+                WHITESPACE@106..107 \" \"\n+                EQ@107..108 \"=\"\n+                WHITESPACE@108..109 \" \"\n+                PATH_EXPR@109..113\n+                  PATH@109..113\n+                    PATH_SEGMENT@109..113\n+                      NAME_REF@109..113\n+                        IDENT@109..113 \"None\"\n+              R_PAREN@113..114 \")\"\n+          WHITESPACE@114..115 \" \"\n+          BLOCK_EXPR@115..279\n+            STMT_LIST@115..279\n+              L_CURLY@115..116 \"{\"\n+              WHITESPACE@116..125 \"\\n        \"\n+              EXPR_STMT@125..140\n+                PAREN_EXPR@125..139\n+                  L_PAREN@125..126 \"(\"\n+                  LET_EXPR@126..138\n+                    LET_KW@126..129 \"let\"\n+                    WHITESPACE@129..130 \" \"\n+                    WILDCARD_PAT@130..131\n+                      UNDERSCORE@130..131 \"_\"\n+                    WHITESPACE@131..132 \" \"\n+                    EQ@132..133 \"=\"\n+                    WHITESPACE@133..134 \" \"\n+                    PATH_EXPR@134..138\n+                      PATH@134..138\n+                        PATH_SEGMENT@134..138\n+                          NAME_REF@134..138\n+                            IDENT@134..138 \"None\"\n+                  R_PAREN@138..139 \")\"\n+                SEMICOLON@139..140 \";\"\n+              WHITESPACE@140..149 \"\\n        \"\n+              WHILE_EXPR@149..273\n+                WHILE_KW@149..154 \"while\"\n+                WHITESPACE@154..155 \" \"\n+                LET_EXPR@155..167\n+                  LET_KW@155..158 \"let\"\n+                  WHITESPACE@158..159 \" \"\n+                  WILDCARD_PAT@159..160\n+                    UNDERSCORE@159..160 \"_\"\n+                  WHITESPACE@160..161 \" \"\n+                  EQ@161..162 \"=\"\n+                  WHITESPACE@162..163 \" \"\n+                  PATH_EXPR@163..167\n+                    PATH@163..167\n+                      PATH_SEGMENT@163..167\n+                        NAME_REF@163..167\n+                          IDENT@163..167 \"None\"\n+                WHITESPACE@167..168 \" \"\n+                BLOCK_EXPR@168..273\n+                  STMT_LIST@168..273\n+                    L_CURLY@168..169 \"{\"\n+                    WHITESPACE@169..182 \"\\n            \"\n+                    MATCH_EXPR@182..263\n+                      MATCH_KW@182..187 \"match\"\n+                      WHITESPACE@187..188 \" \"\n+                      PATH_EXPR@188..192\n+                        PATH@188..192\n+                          PATH_SEGMENT@188..192\n+                            NAME_REF@188..192\n+                              IDENT@188..192 \"None\"\n+                      WHITESPACE@192..193 \" \"\n+                      MATCH_ARM_LIST@193..263\n+                        L_CURLY@193..194 \"{\"\n+                        WHITESPACE@194..211 \"\\n                \"\n+                        MATCH_ARM@211..249\n+                          WILDCARD_PAT@211..212\n+                            UNDERSCORE@211..212 \"_\"\n+                          WHITESPACE@212..213 \" \"\n+                          MATCH_GUARD@213..228\n+                            IF_KW@213..215 \"if\"\n+                            WHITESPACE@215..216 \" \"\n+                            LET_EXPR@216..228\n+                              LET_KW@216..219 \"let\"\n+                              WHITESPACE@219..220 \" \"\n+                              WILDCARD_PAT@220..221\n+                                UNDERSCORE@220..221 \"_\"\n+                              WHITESPACE@221..222 \" \"\n+                              EQ@222..223 \"=\"\n+                              WHITESPACE@223..224 \" \"\n+                              PATH_EXPR@224..228\n+                                PATH@224..228\n+                                  PATH_SEGMENT@224..228\n+                                    NAME_REF@224..228\n+                                      IDENT@224..228 \"None\"\n+                          WHITESPACE@228..229 \" \"\n+                          FAT_ARROW@229..231 \"=>\"\n+                          WHITESPACE@231..232 \" \"\n+                          BLOCK_EXPR@232..249\n+                            STMT_LIST@232..249\n+                              L_CURLY@232..233 \"{\"\n+                              WHITESPACE@233..234 \" \"\n+                              LET_STMT@234..247\n+                                LET_KW@234..237 \"let\"\n+                                WHITESPACE@237..238 \" \"\n+                                WILDCARD_PAT@238..239\n+                                  UNDERSCORE@238..239 \"_\"\n+                                WHITESPACE@239..240 \" \"\n+                                EQ@240..241 \"=\"\n+                                WHITESPACE@241..242 \" \"\n+                                PATH_EXPR@242..246\n+                                  PATH@242..246\n+                                    PATH_SEGMENT@242..246\n+                                      NAME_REF@242..246\n+                                        IDENT@242..246 \"None\"\n+                                SEMICOLON@246..247 \";\"\n+                              WHITESPACE@247..248 \" \"\n+                              R_CURLY@248..249 \"}\"\n+                        WHITESPACE@249..262 \"\\n            \"\n+                        R_CURLY@262..263 \"}\"\n+                    WHITESPACE@263..272 \"\\n        \"\n+                    R_CURLY@272..273 \"}\"\n+              WHITESPACE@273..278 \"\\n    \"\n+              R_CURLY@278..279 \"}\"\n+        WHITESPACE@279..280 \"\\n\"\n+        R_CURLY@280..281 \"}\"\n+  WHITESPACE@281..282 \"\\n\"\n+error 29..41: `let` expressions are not supported here\n+error 67..79: `let` expressions are not supported here\n+error 126..138: `let` expressions are not supported here"}, {"sha": "8a9cfb6c22e45e5dd8af957ea16a4bb1245c64aa", "filename": "crates/test-utils/src/lib.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Ftest-utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1ed70c121e1fefa9d32b87091fbac16a37c215/crates%2Ftest-utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest-utils%2Fsrc%2Flib.rs?ref=0b1ed70c121e1fefa9d32b87091fbac16a37c215", "patch": "@@ -8,9 +8,9 @@\n \n #![warn(rust_2018_idioms, unused_lifetimes, semicolon_in_expressions_from_macros)]\n \n+mod assert_linear;\n pub mod bench_fixture;\n mod fixture;\n-mod assert_linear;\n \n use std::{\n     collections::BTreeMap,\n@@ -391,7 +391,8 @@ fn main() {\n /// also creates a file at `./target/.slow_tests_cookie` which serves as a flag\n /// that slow tests did run.\n pub fn skip_slow_tests() -> bool {\n-    let should_skip = std::env::var(\"CI\").is_err() && std::env::var(\"RUN_SLOW_TESTS\").is_err();\n+    let should_skip = (std::env::var(\"CI\").is_err() && std::env::var(\"RUN_SLOW_TESTS\").is_err())\n+        || std::env::var(\"SKIP_SLOW_TESTS\").is_ok();\n     if should_skip {\n         eprintln!(\"ignoring slow test\");\n     } else {\n@@ -475,7 +476,7 @@ pub fn ensure_file_contents(file: &Path, contents: &str) {\n pub fn try_ensure_file_contents(file: &Path, contents: &str) -> Result<(), ()> {\n     match std::fs::read_to_string(file) {\n         Ok(old_contents) if normalize_newlines(&old_contents) == normalize_newlines(contents) => {\n-            return Ok(())\n+            return Ok(());\n         }\n         _ => (),\n     }"}]}