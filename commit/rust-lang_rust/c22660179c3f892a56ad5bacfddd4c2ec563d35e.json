{"sha": "c22660179c3f892a56ad5bacfddd4c2ec563d35e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyMjY2MDE3OWMzZjg5MmE1NmFkNWJhY2ZkZGQ0YzJlYzU2M2QzNWU=", "commit": {"author": {"name": "guigui64", "email": "guillaume.comte10@gmail.com", "date": "2020-05-05T20:44:39Z"}, "committer": {"name": "guigui64", "email": "guillaume.comte10@gmail.com", "date": "2020-05-05T20:46:42Z"}, "message": "add the allFeatures flag (true by default)", "tree": {"sha": "00cbf8593507a297aca9338233f55e42d3f4bf92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/00cbf8593507a297aca9338233f55e42d3f4bf92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c22660179c3f892a56ad5bacfddd4c2ec563d35e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEw109Qk+45MYo40yxDZC9jzV+cw8FAl6x0LQACgkQDZC9jzV+\ncw8wCg//QDx+RhMnhBxFHhQz/sqA5vlQOAzvKam72i92yLvFb1UaIBvqMiNz7vIq\nKSes4d+cGIyruzXaVEUSNV3fhKXm17+aZ34jaJKq+nS7RpTyoNbX5PzpvHHOKcHv\nGo8i8eOu/iolrKvkL3tBgzFaI8Oh0C2N62foT94GGqkJe2wE4f9EkkefBXsZ8Kjn\nVElWsL671tKjWwCngt4R3MMIAAfL6gmyVrNaEidvujx7lwTxWW5F6ssh8PoZ713k\nEATAta4kE2P339SAs14YYbzTYw8KgrhK+pkc3/5of8HrFNY/vvFEHHGpuVRQ7Tbf\npVHLj6J9EX3IdNH9nQC5EqimmEK8rjUEPw20aT4B/x51YQhUX3WhjxCa+YVQ9sok\nXgGBSzfNE4cZgVlE3seOCAno0PyEwddblD+7AR4w6CiAEyM367uP5wrJGdWsFRWj\njs2O78rKB+u3oxC63u8R/+1QkRafb+Ccwdwth2er3i3hOO27T9vGVAMv6GzrNovQ\nyriZVP+/Anuf5mXpAA9khRlrC1wzuXjYL6PJOR9fiq1A93QeKzTy4KbqJpHo73Yb\nLa3ygPvw9WTh9TAN7l0SuS3DlfwvF6CfMgsmrlus/7UYBCc7c6sKZvmG9zL/gVhw\nZVil0YCMyyG6MQPR5fhKfZNh3fG5lIzJG55yOmC04ewnb0eRCAA=\n=l7T7\n-----END PGP SIGNATURE-----", "payload": "tree 00cbf8593507a297aca9338233f55e42d3f4bf92\nparent d38741f681c173a96e991dc3c213d4c85dc5a8af\nauthor guigui64 <guillaume.comte10@gmail.com> 1588711479 +0200\ncommitter guigui64 <guillaume.comte10@gmail.com> 1588711602 +0200\n\nadd the allFeatures flag (true by default)\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c22660179c3f892a56ad5bacfddd4c2ec563d35e", "html_url": "https://github.com/rust-lang/rust/commit/c22660179c3f892a56ad5bacfddd4c2ec563d35e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c22660179c3f892a56ad5bacfddd4c2ec563d35e/comments", "author": {"login": "guigui64", "id": 8479441, "node_id": "MDQ6VXNlcjg0Nzk0NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8479441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guigui64", "html_url": "https://github.com/guigui64", "followers_url": "https://api.github.com/users/guigui64/followers", "following_url": "https://api.github.com/users/guigui64/following{/other_user}", "gists_url": "https://api.github.com/users/guigui64/gists{/gist_id}", "starred_url": "https://api.github.com/users/guigui64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guigui64/subscriptions", "organizations_url": "https://api.github.com/users/guigui64/orgs", "repos_url": "https://api.github.com/users/guigui64/repos", "events_url": "https://api.github.com/users/guigui64/events{/privacy}", "received_events_url": "https://api.github.com/users/guigui64/received_events", "type": "User", "site_admin": false}, "committer": {"login": "guigui64", "id": 8479441, "node_id": "MDQ6VXNlcjg0Nzk0NDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8479441?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guigui64", "html_url": "https://github.com/guigui64", "followers_url": "https://api.github.com/users/guigui64/followers", "following_url": "https://api.github.com/users/guigui64/following{/other_user}", "gists_url": "https://api.github.com/users/guigui64/gists{/gist_id}", "starred_url": "https://api.github.com/users/guigui64/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guigui64/subscriptions", "organizations_url": "https://api.github.com/users/guigui64/orgs", "repos_url": "https://api.github.com/users/guigui64/repos", "events_url": "https://api.github.com/users/guigui64/events{/privacy}", "received_events_url": "https://api.github.com/users/guigui64/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d38741f681c173a96e991dc3c213d4c85dc5a8af", "url": "https://api.github.com/repos/rust-lang/rust/commits/d38741f681c173a96e991dc3c213d4c85dc5a8af", "html_url": "https://github.com/rust-lang/rust/commit/d38741f681c173a96e991dc3c213d4c85dc5a8af"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "f27252949bd442dd81937abf56db02854519e5fa", "filename": "crates/ra_flycheck/src/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/c22660179c3f892a56ad5bacfddd4c2ec563d35e/crates%2Fra_flycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22660179c3f892a56ad5bacfddd4c2ec563d35e/crates%2Fra_flycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_flycheck%2Fsrc%2Flib.rs?ref=c22660179c3f892a56ad5bacfddd4c2ec563d35e", "patch": "@@ -24,7 +24,7 @@ pub use crate::conv::url_from_path_with_drive_lowercasing;\n \n #[derive(Clone, Debug, PartialEq, Eq)]\n pub enum FlycheckConfig {\n-    CargoCommand { command: String, all_targets: bool, extra_args: Vec<String> },\n+    CargoCommand { command: String, all_targets: bool, all_features: bool, extra_args: Vec<String> },\n     CustomCommand { command: String, args: Vec<String> },\n }\n \n@@ -215,14 +215,17 @@ impl FlycheckThread {\n         self.check_process = None;\n \n         let mut cmd = match &self.config {\n-            FlycheckConfig::CargoCommand { command, all_targets, extra_args } => {\n+            FlycheckConfig::CargoCommand { command, all_targets, all_features, extra_args } => {\n                 let mut cmd = Command::new(cargo_binary());\n                 cmd.arg(command);\n                 cmd.args(&[\"--workspace\", \"--message-format=json\", \"--manifest-path\"]);\n                 cmd.arg(self.workspace_root.join(\"Cargo.toml\"));\n                 if *all_targets {\n                     cmd.arg(\"--all-targets\");\n                 }\n+                if *all_features {\n+                    cmd.arg(\"--all-features\");\n+                }\n                 cmd.args(extra_args);\n                 cmd\n             }"}, {"sha": "ccc38e3bbac701c71677579c71ab2a3bb6b99c44", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c22660179c3f892a56ad5bacfddd4c2ec563d35e/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c22660179c3f892a56ad5bacfddd4c2ec563d35e/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=c22660179c3f892a56ad5bacfddd4c2ec563d35e", "patch": "@@ -89,6 +89,7 @@ impl Default for Config {\n             check: Some(FlycheckConfig::CargoCommand {\n                 command: \"check\".to_string(),\n                 all_targets: true,\n+                all_features: true,\n                 extra_args: Vec::new(),\n             }),\n \n@@ -173,12 +174,13 @@ impl Config {\n                 }\n                 // otherwise configure command customizations\n                 _ => {\n-                    if let Some(FlycheckConfig::CargoCommand { command, extra_args, all_targets })\n+                    if let Some(FlycheckConfig::CargoCommand { command, extra_args, all_targets, all_features })\n                         = &mut self.check\n                     {\n                         set(value, \"/checkOnSave/extraArgs\", extra_args);\n                         set(value, \"/checkOnSave/command\", command);\n                         set(value, \"/checkOnSave/allTargets\", all_targets);\n+                        set(value, \"/checkOnSave/allFeatures\", all_features);\n                     }\n                 }\n             };"}, {"sha": "97276339f6eba88f4255882e1002899f0418fff9", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/c22660179c3f892a56ad5bacfddd4c2ec563d35e/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/c22660179c3f892a56ad5bacfddd4c2ec563d35e/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=c22660179c3f892a56ad5bacfddd4c2ec563d35e", "patch": "@@ -296,6 +296,11 @@\n                     \"default\": true,\n                     \"markdownDescription\": \"Check all targets and tests (will be passed as `--all-targets`)\"\n                 },\n+                \"rust-analyzer.checkOnSave.allFeatures\": {\n+                    \"type\": \"boolean\",\n+                    \"default\": true,\n+                    \"markdownDescription\": \"Check with all features (will be passed as `--all-features`)\"\n+                },\n                 \"rust-analyzer.inlayHints.typeHints\": {\n                     \"type\": \"boolean\",\n                     \"default\": true,"}]}