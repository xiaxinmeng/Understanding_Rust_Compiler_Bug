{"sha": "202c11bac047c065c13ad78967b334f5f46b4ac4", "node_id": "C_kwDOAAsO6NoAKDIwMmMxMWJhYzA0N2MwNjVjMTNhZDc4OTY3YjMzNGY1ZjQ2YjRhYzQ", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-07-16T08:53:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-16T08:53:05Z"}, "message": "Rollup merge of #99307 - JohnTitor:issue-64401, r=compiler-errors\n\nAdd regression test for #64401\n\nCloses #64401\nr? `@compiler-errors`\n\nSigned-off-by: Yuki Okushi <jtitor@2k36.org>", "tree": {"sha": "8cd1a8490d64e213e1307c822a7212ddcfaea532", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8cd1a8490d64e213e1307c822a7212ddcfaea532"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/202c11bac047c065c13ad78967b334f5f46b4ac4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi0nxxCRBK7hj4Ov3rIwAAHFUIABWI7i6J1MhFwJEnYn0isAM0\nsYg0y83Zj1GXFTGoN+vuw6qJm2puCRaxlX0HZOaYAHKGxk03BpSWk53HmublCjA8\nYmjtt8Wf5BCoOLwQHVh6p+popUgJzuxEevvs8hwf32F3i2wPXugRr+16pEmDqUVq\nXyFpzIgtfSK39YGwyU1mH1nDmYccdfXcg5vJV9GIrC1uBLAeIpJFDyvDfzQ+TPFd\n4IPs+OMHm8jwWzN6G3IpxjETJreSZgSAQOkNyZ/25eyMQFaF4atrUF2/pizFSPpe\nLNfJfYcUxm2XbLpvjOrkLatv2VtVtGdcmTBbY2DrZeze4lu6USQ7bGr8I4qcfUM=\n=yMlF\n-----END PGP SIGNATURE-----\n", "payload": "tree 8cd1a8490d64e213e1307c822a7212ddcfaea532\nparent 083a253e53d0934f1bb5d464367688be59ab1f1d\nparent 64659804fcab73dc75b6582f1d46f8a9715e8542\nauthor Yuki Okushi <jtitor@2k36.org> 1657961585 +0900\ncommitter GitHub <noreply@github.com> 1657961585 +0900\n\nRollup merge of #99307 - JohnTitor:issue-64401, r=compiler-errors\n\nAdd regression test for #64401\n\nCloses #64401\nr? `@compiler-errors`\n\nSigned-off-by: Yuki Okushi <jtitor@2k36.org>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/202c11bac047c065c13ad78967b334f5f46b4ac4", "html_url": "https://github.com/rust-lang/rust/commit/202c11bac047c065c13ad78967b334f5f46b4ac4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/202c11bac047c065c13ad78967b334f5f46b4ac4/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "083a253e53d0934f1bb5d464367688be59ab1f1d", "url": "https://api.github.com/repos/rust-lang/rust/commits/083a253e53d0934f1bb5d464367688be59ab1f1d", "html_url": "https://github.com/rust-lang/rust/commit/083a253e53d0934f1bb5d464367688be59ab1f1d"}, {"sha": "64659804fcab73dc75b6582f1d46f8a9715e8542", "url": "https://api.github.com/repos/rust-lang/rust/commits/64659804fcab73dc75b6582f1d46f8a9715e8542", "html_url": "https://github.com/rust-lang/rust/commit/64659804fcab73dc75b6582f1d46f8a9715e8542"}], "stats": {"total": 51, "additions": 51, "deletions": 0}, "files": [{"sha": "53f85c63b5336a086da3601316e1eb44635debe0", "filename": "src/test/ui/codegen/issue-64401.rs", "status": "added", "additions": 51, "deletions": 0, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/202c11bac047c065c13ad78967b334f5f46b4ac4/src%2Ftest%2Fui%2Fcodegen%2Fissue-64401.rs", "raw_url": "https://github.com/rust-lang/rust/raw/202c11bac047c065c13ad78967b334f5f46b4ac4/src%2Ftest%2Fui%2Fcodegen%2Fissue-64401.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodegen%2Fissue-64401.rs?ref=202c11bac047c065c13ad78967b334f5f46b4ac4", "patch": "@@ -0,0 +1,51 @@\n+// build-pass\n+// The ICE didn't happen with `cargo check` but `cargo build`.\n+\n+use std::marker::PhantomData;\n+\n+trait Owned<'a> {\n+    type Reader;\n+}\n+\n+impl<'a> Owned<'a> for () {\n+    type Reader = ();\n+}\n+\n+trait Handler {\n+    fn handle(&self);\n+}\n+\n+struct CtxHandlerWithoutState<M, F> {\n+    message_type: PhantomData<M>,\n+    _function: F,\n+}\n+\n+impl<M, F> CtxHandlerWithoutState<M, F> {\n+    pub fn new(_function: F) -> Self {\n+        Self {\n+            message_type: PhantomData,\n+            _function,\n+        }\n+    }\n+}\n+\n+impl<'a, M, F> Handler for CtxHandlerWithoutState<M, F>\n+where\n+    F: Fn(<M as Owned<'a>>::Reader),\n+    M: Owned<'a>,\n+{\n+    fn handle(&self) {}\n+}\n+\n+fn e_to_i<M: for<'a> Owned<'a>>(_: <M as Owned<'_>>::Reader) {}\n+\n+fn send_external_to_internal<M>()\n+where\n+    M: for<'a> Owned<'a>,\n+{\n+    let _: Box<dyn Handler> = Box::new(CtxHandlerWithoutState::<M, _>::new(e_to_i::<M>));\n+}\n+\n+fn main() {\n+    send_external_to_internal::<()>()\n+}"}]}