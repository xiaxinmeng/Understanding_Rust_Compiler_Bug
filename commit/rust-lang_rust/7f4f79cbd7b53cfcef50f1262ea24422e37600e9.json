{"sha": "7f4f79cbd7b53cfcef50f1262ea24422e37600e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmNGY3OWNiZDdiNTNjZmNlZjUwZjEyNjJlYTI0NDIyZTM3NjAwZTk=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-06T02:36:25Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-06T02:36:25Z"}, "message": "rollup merge of #20099: P1start/parse-more-macro-ops\n\nCloses #20093.", "tree": {"sha": "ddccbd949a6a17cbee5191a1e0dbac5523e7f214", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddccbd949a6a17cbee5191a1e0dbac5523e7f214"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7f4f79cbd7b53cfcef50f1262ea24422e37600e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7f4f79cbd7b53cfcef50f1262ea24422e37600e9", "html_url": "https://github.com/rust-lang/rust/commit/7f4f79cbd7b53cfcef50f1262ea24422e37600e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7f4f79cbd7b53cfcef50f1262ea24422e37600e9/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e918a589aef6b054d89bac4f8f1ce828d509cb6e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e918a589aef6b054d89bac4f8f1ce828d509cb6e", "html_url": "https://github.com/rust-lang/rust/commit/e918a589aef6b054d89bac4f8f1ce828d509cb6e"}, {"sha": "5cf72ff8988243814aed3f384ea272e2c3d85ee2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cf72ff8988243814aed3f384ea272e2c3d85ee2", "html_url": "https://github.com/rust-lang/rust/commit/5cf72ff8988243814aed3f384ea272e2c3d85ee2"}], "stats": {"total": 58, "additions": 53, "deletions": 5}, "files": [{"sha": "f33b5140186745fe9bee7dd91c15cc843021af2b", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7f4f79cbd7b53cfcef50f1262ea24422e37600e9/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f4f79cbd7b53cfcef50f1262ea24422e37600e9/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=7f4f79cbd7b53cfcef50f1262ea24422e37600e9", "patch": "@@ -2966,14 +2966,17 @@ impl<'a> Parser<'a> {\n     /// actually, this seems to be the main entry point for\n     /// parsing an arbitrary expression.\n     pub fn parse_assign_expr(&mut self) -> P<Expr> {\n-        let lo = self.span.lo;\n         let lhs = self.parse_binops();\n+        self.parse_assign_expr_with(lhs)\n+    }\n+\n+    pub fn parse_assign_expr_with(&mut self, lhs: P<Expr>) -> P<Expr> {\n         let restrictions = self.restrictions & RESTRICTION_NO_STRUCT_LITERAL;\n         match self.token {\n           token::Eq => {\n               self.bump();\n               let rhs = self.parse_expr_res(restrictions);\n-              self.mk_expr(lo, rhs.span.hi, ExprAssign(lhs, rhs))\n+              self.mk_expr(lhs.span.lo, rhs.span.hi, ExprAssign(lhs, rhs))\n           }\n           token::BinOpEq(op) => {\n               self.bump();\n@@ -2991,8 +2994,9 @@ impl<'a> Parser<'a> {\n                   token::Shr =>     BiShr\n               };\n               let rhs_span = rhs.span;\n+              let span = lhs.span;\n               let assign_op = self.mk_assign_op(aop, lhs, rhs);\n-              self.mk_expr(lo, rhs_span.hi, assign_op)\n+              self.mk_expr(span.lo, rhs_span.hi, assign_op)\n           }\n           _ => {\n               lhs\n@@ -3886,8 +3890,9 @@ impl<'a> Parser<'a> {\n                                     let e = self.mk_mac_expr(span.lo,\n                                                              span.hi,\n                                                              macro.and_then(|m| m.node));\n-                                    let e =\n-                                        self.parse_dot_or_call_expr_with(e);\n+                                    let e = self.parse_dot_or_call_expr_with(e);\n+                                    let e = self.parse_more_binops(e, 0);\n+                                    let e = self.parse_assign_expr_with(e);\n                                     self.handle_expression_like_statement(\n                                         e,\n                                         ast::DUMMY_NODE_ID,"}, {"sha": "e9ec624c13edf924425d166cfa3bb8312957e798", "filename": "src/test/run-pass/parse-complex-macro-invoc-op.rs", "status": "added", "additions": 43, "deletions": 0, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/7f4f79cbd7b53cfcef50f1262ea24422e37600e9/src%2Ftest%2Frun-pass%2Fparse-complex-macro-invoc-op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7f4f79cbd7b53cfcef50f1262ea24422e37600e9/src%2Ftest%2Frun-pass%2Fparse-complex-macro-invoc-op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fparse-complex-macro-invoc-op.rs?ref=7f4f79cbd7b53cfcef50f1262ea24422e37600e9", "patch": "@@ -0,0 +1,43 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test parsing binary operators after macro invocations.\n+\n+#![feature(macro_rules)]\n+\n+macro_rules! id {\n+    ($e: expr) => { $e }\n+}\n+\n+fn foo() {\n+    id!(1i) + 1;\n+    id![1i] - 1;\n+    id!(1i) * 1;\n+    id![1i] / 1;\n+    id!(1i) % 1;\n+\n+    id!(1i) & 1;\n+    id![1i] | 1;\n+    id!(1i) ^ 1;\n+\n+    let mut x = 1i;\n+    id![x] = 2;\n+    id!(x) += 1;\n+\n+    id!(1f64).clone();\n+\n+    id!([1i, 2, 3])[1];\n+    id![drop](1i);\n+\n+    id!(true) && true;\n+    id![true] || true;\n+}\n+\n+fn main() {}"}]}