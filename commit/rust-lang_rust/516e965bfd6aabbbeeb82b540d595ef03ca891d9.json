{"sha": "516e965bfd6aabbbeeb82b540d595ef03ca891d9", "node_id": "C_kwDOAAsO6NoAKDUxNmU5NjViZmQ2YWFiYmJlZWI4MmI1NDBkNTk1ZWYwM2NhODkxZDk", "commit": {"author": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-02-22T21:56:37Z"}, "committer": {"name": "pierwill", "email": "pierwill@users.noreply.github.com", "date": "2022-02-23T04:29:13Z"}, "message": "Remove unused ordering derivations and bounds for `SimplifiedTypeGen`", "tree": {"sha": "e393f91d0909a2c025ff28473ea2011dccfbcda1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e393f91d0909a2c025ff28473ea2011dccfbcda1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/516e965bfd6aabbbeeb82b540d595ef03ca891d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/516e965bfd6aabbbeeb82b540d595ef03ca891d9", "html_url": "https://github.com/rust-lang/rust/commit/516e965bfd6aabbbeeb82b540d595ef03ca891d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/516e965bfd6aabbbeeb82b540d595ef03ca891d9/comments", "author": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pierwill", "id": 19642016, "node_id": "MDQ6VXNlcjE5NjQyMDE2", "avatar_url": "https://avatars.githubusercontent.com/u/19642016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pierwill", "html_url": "https://github.com/pierwill", "followers_url": "https://api.github.com/users/pierwill/followers", "following_url": "https://api.github.com/users/pierwill/following{/other_user}", "gists_url": "https://api.github.com/users/pierwill/gists{/gist_id}", "starred_url": "https://api.github.com/users/pierwill/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pierwill/subscriptions", "organizations_url": "https://api.github.com/users/pierwill/orgs", "repos_url": "https://api.github.com/users/pierwill/repos", "events_url": "https://api.github.com/users/pierwill/events{/privacy}", "received_events_url": "https://api.github.com/users/pierwill/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "68369a041cea809a87e5bd80701da90e0e0a4799", "url": "https://api.github.com/repos/rust-lang/rust/commits/68369a041cea809a87e5bd80701da90e0e0a4799", "html_url": "https://github.com/rust-lang/rust/commit/68369a041cea809a87e5bd80701da90e0e0a4799"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "3c1ac66e2d136c7287a6130915042c225572315d", "filename": "compiler/rustc_middle/src/ty/fast_reject.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/516e965bfd6aabbbeeb82b540d595ef03ca891d9/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/516e965bfd6aabbbeeb82b540d595ef03ca891d9/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Ffast_reject.rs?ref=516e965bfd6aabbbeeb82b540d595ef03ca891d9", "patch": "@@ -17,7 +17,7 @@ pub type SimplifiedType = SimplifiedTypeGen<DefId>;\n /// because we sometimes need to use SimplifiedTypeGen values as stable sorting\n /// keys (in which case we use a DefPathHash as id-type) but in the general case\n /// the non-stable but fast to construct DefId-version is the better choice.\n-#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, TyEncodable, TyDecodable)]\n+#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, TyEncodable, TyDecodable)]\n pub enum SimplifiedTypeGen<D>\n where\n     D: Copy + Debug + Eq,\n@@ -124,7 +124,7 @@ pub fn simplify_type(\n     }\n }\n \n-impl<D: Copy + Debug + Ord + Eq> SimplifiedTypeGen<D> {\n+impl<D: Copy + Debug + Eq> SimplifiedTypeGen<D> {\n     pub fn def(self) -> Option<D> {\n         match self {\n             AdtSimplifiedType(d)\n@@ -140,7 +140,7 @@ impl<D: Copy + Debug + Ord + Eq> SimplifiedTypeGen<D> {\n     pub fn map_def<U, F>(self, map: F) -> SimplifiedTypeGen<U>\n     where\n         F: Fn(D) -> U,\n-        U: Copy + Debug + Ord + Eq,\n+        U: Copy + Debug + Eq,\n     {\n         match self {\n             BoolSimplifiedType => BoolSimplifiedType,\n@@ -171,7 +171,7 @@ impl<D: Copy + Debug + Ord + Eq> SimplifiedTypeGen<D> {\n \n impl<'a, D> HashStable<StableHashingContext<'a>> for SimplifiedTypeGen<D>\n where\n-    D: Copy + Debug + Ord + Eq + HashStable<StableHashingContext<'a>>,\n+    D: Copy + Debug + Eq + HashStable<StableHashingContext<'a>>,\n {\n     fn hash_stable(&self, hcx: &mut StableHashingContext<'a>, hasher: &mut StableHasher) {\n         mem::discriminant(self).hash_stable(hcx, hasher);"}]}