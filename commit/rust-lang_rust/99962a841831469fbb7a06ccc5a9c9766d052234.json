{"sha": "99962a841831469fbb7a06ccc5a9c9766d052234", "node_id": "C_kwDOAAsO6NoAKDk5OTYyYTg0MTgzMTQ2OWZiYjdhMDZjY2M1YTljOTc2NmQwNTIyMzQ", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-18T17:54:34Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-18T18:00:21Z"}, "message": "Refactor `SyntaxContext::ctxt` logic.", "tree": {"sha": "3875d617d40da41e9d41cb637a6cbb42fe56bdaa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3875d617d40da41e9d41cb637a6cbb42fe56bdaa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99962a841831469fbb7a06ccc5a9c9766d052234", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99962a841831469fbb7a06ccc5a9c9766d052234", "html_url": "https://github.com/rust-lang/rust/commit/99962a841831469fbb7a06ccc5a9c9766d052234", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99962a841831469fbb7a06ccc5a9c9766d052234/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "url": "https://api.github.com/repos/rust-lang/rust/commits/de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "html_url": "https://github.com/rust-lang/rust/commit/de96f3d8735b70d5dc1ca178aaee198b329b8f3d"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "1eea0f63ca0cc4e1bcdcf48addf3d468dbe01ff2", "filename": "compiler/rustc_span/src/span_encoding.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/99962a841831469fbb7a06ccc5a9c9766d052234/compiler%2Frustc_span%2Fsrc%2Fspan_encoding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99962a841831469fbb7a06ccc5a9c9766d052234/compiler%2Frustc_span%2Fsrc%2Fspan_encoding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fspan_encoding.rs?ref=99962a841831469fbb7a06ccc5a9c9766d052234", "patch": "@@ -181,19 +181,23 @@ impl Span {\n     #[inline]\n     pub fn ctxt(self) -> SyntaxContext {\n         let ctxt_or_tag = self.ctxt_or_tag as u32;\n-        if ctxt_or_tag <= MAX_CTXT {\n-            if self.len_or_tag == LEN_TAG || self.len_or_tag & PARENT_MASK == 0 {\n-                // Inline format or interned format with inline ctxt.\n-                SyntaxContext::from_u32(ctxt_or_tag)\n+        // Check for interned format.\n+        if self.len_or_tag == LEN_TAG {\n+            if ctxt_or_tag == CTXT_TAG {\n+                // Fully interned format.\n+                let index = self.base_or_index;\n+                with_span_interner(|interner| interner.spans[index as usize].ctxt)\n             } else {\n-                // Inline format or interned format with inline parent.\n-                // We know that the SyntaxContext is root.\n-                SyntaxContext::root()\n+                // Interned format with inline ctxt.\n+                SyntaxContext::from_u32(ctxt_or_tag)\n             }\n+        } else if self.len_or_tag & PARENT_MASK == 0 {\n+            // Inline format with inline ctxt.\n+            SyntaxContext::from_u32(ctxt_or_tag)\n         } else {\n-            // Interned format.\n-            let index = self.base_or_index;\n-            with_span_interner(|interner| interner.spans[index as usize].ctxt)\n+            // Inline format with inline parent.\n+            // We know that the SyntaxContext is root.\n+            SyntaxContext::root()\n         }\n     }\n }"}]}