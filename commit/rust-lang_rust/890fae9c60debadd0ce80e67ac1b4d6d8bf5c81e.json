{"sha": "890fae9c60debadd0ce80e67ac1b4d6d8bf5c81e", "node_id": "C_kwDOAAsO6NoAKDg5MGZhZTljNjBkZWJhZGQwY2U4MGU2N2FjMWI0ZDZkOGJmNWM4MWU", "commit": {"author": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-10-12T23:02:18Z"}, "committer": {"name": "Jannis Christopher K\u00f6hl", "email": "mail@koehl.dev", "date": "2022-11-07T09:35:22Z"}, "message": "Fix rebased CastKind", "tree": {"sha": "6880653373a62668a98f338b0c4d989fc9314654", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6880653373a62668a98f338b0c4d989fc9314654"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/890fae9c60debadd0ce80e67ac1b4d6d8bf5c81e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/890fae9c60debadd0ce80e67ac1b4d6d8bf5c81e", "html_url": "https://github.com/rust-lang/rust/commit/890fae9c60debadd0ce80e67ac1b4d6d8bf5c81e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/890fae9c60debadd0ce80e67ac1b4d6d8bf5c81e/comments", "author": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jachris", "id": 30163784, "node_id": "MDQ6VXNlcjMwMTYzNzg0", "avatar_url": "https://avatars.githubusercontent.com/u/30163784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jachris", "html_url": "https://github.com/jachris", "followers_url": "https://api.github.com/users/jachris/followers", "following_url": "https://api.github.com/users/jachris/following{/other_user}", "gists_url": "https://api.github.com/users/jachris/gists{/gist_id}", "starred_url": "https://api.github.com/users/jachris/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jachris/subscriptions", "organizations_url": "https://api.github.com/users/jachris/orgs", "repos_url": "https://api.github.com/users/jachris/repos", "events_url": "https://api.github.com/users/jachris/events{/privacy}", "received_events_url": "https://api.github.com/users/jachris/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aaa35b3e48b768315a5f53b8523435f27b708d25", "url": "https://api.github.com/repos/rust-lang/rust/commits/aaa35b3e48b768315a5f53b8523435f27b708d25", "html_url": "https://github.com/rust-lang/rust/commit/aaa35b3e48b768315a5f53b8523435f27b708d25"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "f30dc741abbb1d91874f1af7eca2723e19b7dc4a", "filename": "compiler/rustc_mir_transform/src/dataflow_const_prop.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/890fae9c60debadd0ce80e67ac1b4d6d8bf5c81e/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/890fae9c60debadd0ce80e67ac1b4d6d8bf5c81e/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fdataflow_const_prop.rs?ref=890fae9c60debadd0ce80e67ac1b4d6d8bf5c81e", "patch": "@@ -96,7 +96,14 @@ impl<'tcx> ValueAnalysis<'tcx> for ConstAnalysis<'tcx> {\n         state: &mut State<Self::Value>,\n     ) -> ValueOrPlaceOrRef<Self::Value> {\n         match rvalue {\n-            Rvalue::Cast(CastKind::Misc, operand, ty) => {\n+            Rvalue::Cast(\n+                CastKind::IntToInt\n+                | CastKind::FloatToInt\n+                | CastKind::FloatToFloat\n+                | CastKind::IntToFloat,\n+                operand,\n+                ty,\n+            ) => {\n                 let operand = self.eval_operand(operand, state);\n                 match operand {\n                     FlatSet::Elem(operand) => self"}]}