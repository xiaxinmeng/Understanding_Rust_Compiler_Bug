{"sha": "0a7a0ff4d95cad91313ef53238ac28cc48a2a6b4", "node_id": "C_kwDOAAsO6NoAKDBhN2EwZmY0ZDk1Y2FkOTEzMTNlZjUzMjM4YWMyOGNjNDhhMmE2YjQ", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-05-30T14:11:53Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2022-05-30T14:11:53Z"}, "message": "Add `#[inline]` to `Vec`'s `Deref/DerefMut`", "tree": {"sha": "76f647edd5afe69f48c58eec30cdfdfdf4f2631e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/76f647edd5afe69f48c58eec30cdfdfdf4f2631e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a7a0ff4d95cad91313ef53238ac28cc48a2a6b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a7a0ff4d95cad91313ef53238ac28cc48a2a6b4", "html_url": "https://github.com/rust-lang/rust/commit/0a7a0ff4d95cad91313ef53238ac28cc48a2a6b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a7a0ff4d95cad91313ef53238ac28cc48a2a6b4/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa70b89d19a52be0dea03022d807a3e615763727", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa70b89d19a52be0dea03022d807a3e615763727", "html_url": "https://github.com/rust-lang/rust/commit/fa70b89d19a52be0dea03022d807a3e615763727"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "7c0d9fe288a1a4dd24c6daa99c9b404e6ace3917", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0a7a0ff4d95cad91313ef53238ac28cc48a2a6b4/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a7a0ff4d95cad91313ef53238ac28cc48a2a6b4/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=0a7a0ff4d95cad91313ef53238ac28cc48a2a6b4", "patch": "@@ -2493,13 +2493,15 @@ impl<T: Copy, A: Allocator> ExtendFromWithinSpec for Vec<T, A> {\n impl<T, A: Allocator> ops::Deref for Vec<T, A> {\n     type Target = [T];\n \n+    #[inline]\n     fn deref(&self) -> &[T] {\n         unsafe { slice::from_raw_parts(self.as_ptr(), self.len) }\n     }\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T, A: Allocator> ops::DerefMut for Vec<T, A> {\n+    #[inline]\n     fn deref_mut(&mut self) -> &mut [T] {\n         unsafe { slice::from_raw_parts_mut(self.as_mut_ptr(), self.len) }\n     }"}]}