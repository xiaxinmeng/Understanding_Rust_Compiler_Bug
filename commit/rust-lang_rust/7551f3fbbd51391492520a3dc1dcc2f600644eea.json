{"sha": "7551f3fbbd51391492520a3dc1dcc2f600644eea", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1NTFmM2ZiYmQ1MTM5MTQ5MjUyMGEzZGMxZGNjMmY2MDA2NDRlZWE=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-08-18T18:45:40Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-08-18T18:45:40Z"}, "message": "Don't panic in Vec::shrink_to_fit", "tree": {"sha": "9388625cf0bda6afc6d52452117274919a30c731", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9388625cf0bda6afc6d52452117274919a30c731"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7551f3fbbd51391492520a3dc1dcc2f600644eea", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7551f3fbbd51391492520a3dc1dcc2f600644eea", "html_url": "https://github.com/rust-lang/rust/commit/7551f3fbbd51391492520a3dc1dcc2f600644eea", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7551f3fbbd51391492520a3dc1dcc2f600644eea/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a45dedf3d07dd2c088d89b5e5b7f4c7912b0812f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a45dedf3d07dd2c088d89b5e5b7f4c7912b0812f", "html_url": "https://github.com/rust-lang/rust/commit/a45dedf3d07dd2c088d89b5e5b7f4c7912b0812f"}], "stats": {"total": 41, "additions": 40, "deletions": 1}, "files": [{"sha": "80f7ff4893e215bfde127fe56a61bfe1765587ef", "filename": "library/alloc/src/vec.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/7551f3fbbd51391492520a3dc1dcc2f600644eea/library%2Falloc%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7551f3fbbd51391492520a3dc1dcc2f600644eea/library%2Falloc%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec.rs?ref=7551f3fbbd51391492520a3dc1dcc2f600644eea", "patch": "@@ -622,7 +622,10 @@ impl<T> Vec<T> {\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn shrink_to_fit(&mut self) {\n-        if self.capacity() != self.len {\n+        // The capacity is never less than the length, and there's nothing to do when\n+        // they are equal, so we can avoid the panic case in `RawVec::shrink_to_fit`\n+        // by only calling it with a greater capacity.\n+        if self.capacity() > self.len {\n             self.buf.shrink_to_fit(self.len);\n         }\n     }"}, {"sha": "690c7e6d6ced238373016f1bf0c2a72effdb9aab", "filename": "src/test/codegen/vec-shrink-panic.rs", "status": "added", "additions": 36, "deletions": 0, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/7551f3fbbd51391492520a3dc1dcc2f600644eea/src%2Ftest%2Fcodegen%2Fvec-shrink-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7551f3fbbd51391492520a3dc1dcc2f600644eea/src%2Ftest%2Fcodegen%2Fvec-shrink-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fvec-shrink-panic.rs?ref=7551f3fbbd51391492520a3dc1dcc2f600644eea", "patch": "@@ -0,0 +1,36 @@\n+// compile-flags: -O\n+// ignore-debug: the debug assertions get in the way\n+#![crate_type = \"lib\"]\n+#![feature(shrink_to)]\n+\n+// Make sure that `Vec::shrink_to_fit` never emits panics via `RawVec::shrink_to_fit`,\n+// \"Tried to shrink to a larger capacity\", because the length is *always* <= capacity.\n+\n+// CHECK-LABEL: @shrink_to_fit\n+#[no_mangle]\n+pub fn shrink_to_fit(vec: &mut Vec<u32>) {\n+    // CHECK-NOT: panic\n+    vec.shrink_to_fit();\n+}\n+\n+// CHECK-LABEL: @issue71861\n+#[no_mangle]\n+pub fn issue71861(n: usize) -> Box<[u32]> {\n+    // CHECK-NOT: panic\n+    vec![0; n].into_boxed_slice()\n+}\n+\n+// CHECK-LABEL: @issue75636\n+#[no_mangle]\n+pub fn issue75636<'a>(iter: &[&'a str]) -> Box<[&'a str]> {\n+    // CHECK-NOT: panic\n+    iter.iter().copied().collect()\n+}\n+\n+// Sanity-check that we do see a possible panic for an arbitrary `Vec::shrink_to`.\n+// CHECK-LABEL: @shrink_to\n+#[no_mangle]\n+pub fn shrink_to(vec: &mut Vec<u32>) {\n+    // CHECK: panic\n+    vec.shrink_to(42);\n+}"}]}