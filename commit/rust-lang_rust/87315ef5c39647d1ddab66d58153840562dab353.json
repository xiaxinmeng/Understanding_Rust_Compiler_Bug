{"sha": "87315ef5c39647d1ddab66d58153840562dab353", "node_id": "C_kwDOAAsO6NoAKDg3MzE1ZWY1YzM5NjQ3ZDFkZGFiNjZkNTgxNTM4NDA1NjJkYWIzNTM", "commit": {"author": {"name": "Alex Kladov", "email": "aleksey.kladov@gmail.com", "date": "2023-01-13T11:57:02Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-01-13T11:57:02Z"}, "message": "Apply suggestions from code review\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@users.noreply.github.com>", "tree": {"sha": "faa55fae96e65a5f9f475cb156dd71ba4a3293b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/faa55fae96e65a5f9f475cb156dd71ba4a3293b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87315ef5c39647d1ddab66d58153840562dab353", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjwUcOCRBK7hj4Ov3rIwAA7i4IAKSScTVbKi2D/Wqc5xaGg399\nboJrLMNPamOr2u0DnddvrlbWmUDw6q3px4M6uZBYI2cBGPIa8tqLCe2BZ1MPkdMc\na2v0r1bBITIRRW92aC16f9uQ2MzKG1uYVPcN5Q3F5M01sc5zLeHpp+8wkMwijUCP\ngdgqcjQkgB7DeMoHqTQ2x02YtEhMDCYqREIKJ5lonuU4TXZheTrM1uzstswHNeQV\nXiB3a3On3tO2+QLeFw2Ja9dLB4ljjpI1f+YFca2LpYFvTH8IqivKMa3nd/sehnOi\nHOZ3leBdAmmsuQhq9yr3ktfUFWSGSAjUueYvJoztL/lby+RMtoB5+OyW/M/+FV8=\n=/hK7\n-----END PGP SIGNATURE-----\n", "payload": "tree faa55fae96e65a5f9f475cb156dd71ba4a3293b5\nparent aa73366b0b91e1b99a0e6059e7f8dfbcb41cf929\nauthor Alex Kladov <aleksey.kladov@gmail.com> 1673611022 +0000\ncommitter GitHub <noreply@github.com> 1673611022 +0000\n\nApply suggestions from code review\n\nCo-authored-by: Lauren\u021biu Nicola <lnicola@users.noreply.github.com>"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87315ef5c39647d1ddab66d58153840562dab353", "html_url": "https://github.com/rust-lang/rust/commit/87315ef5c39647d1ddab66d58153840562dab353", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87315ef5c39647d1ddab66d58153840562dab353/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "aa73366b0b91e1b99a0e6059e7f8dfbcb41cf929", "url": "https://api.github.com/repos/rust-lang/rust/commits/aa73366b0b91e1b99a0e6059e7f8dfbcb41cf929", "html_url": "https://github.com/rust-lang/rust/commit/aa73366b0b91e1b99a0e6059e7f8dfbcb41cf929"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "319897890fc506d988c5bee4b2e0bded6c0676ef", "filename": "crates/project-model/src/project_json.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/87315ef5c39647d1ddab66d58153840562dab353/crates%2Fproject-model%2Fsrc%2Fproject_json.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87315ef5c39647d1ddab66d58153840562dab353/crates%2Fproject-model%2Fsrc%2Fproject_json.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproject-model%2Fsrc%2Fproject_json.rs?ref=87315ef5c39647d1ddab66d58153840562dab353", "patch": "@@ -18,10 +18,11 @@\n //! Normally, we get this \"crate graph\" by calling `cargo metadata\n //! --message-format=json` for each cargo workspace and merging results. This\n //! works for your typical cargo project, but breaks down for large folks who\n-//! have a monorepo with an infitine amount of Rust which is build with bazel or\n+//! have a monorepo with an infinite amount of Rust code which is built with bazel or\n //! some such.\n //!\n-//! To support this use-case, we need to make _something_ configurable. To avoid\n+//! To support this use case, we need to make _something_ configurable. To avoid\n+//! a [midlayer mistake](https://lwn.net/Articles/336262/), we allow configuring\n //! [midlayer mistake](https://lwn.net/Articles/336262/), we allow configuring\n //! the lowest possible layer. `ProjectJson` is essentially a hook to just set\n //! that global singleton in-memory data structure. It is optimized for power,"}]}