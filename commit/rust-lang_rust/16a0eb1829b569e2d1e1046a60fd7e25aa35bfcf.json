{"sha": "16a0eb1829b569e2d1e1046a60fd7e25aa35bfcf", "node_id": "C_kwDOAAsO6NoAKDE2YTBlYjE4MjliNTY5ZTJkMWUxMDQ2YTYwZmQ3ZTI1YWEzNWJmY2Y", "commit": {"author": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-08-23T13:45:02Z"}, "committer": {"name": "Jonas Schievink", "email": "jonas.schievink@ferrous-systems.com", "date": "2022-08-23T13:45:02Z"}, "message": "Avoid error popup when using in Live Share", "tree": {"sha": "bfdea20462adb3f71e839ecbe847b1eac5f0a53d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bfdea20462adb3f71e839ecbe847b1eac5f0a53d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16a0eb1829b569e2d1e1046a60fd7e25aa35bfcf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16a0eb1829b569e2d1e1046a60fd7e25aa35bfcf", "html_url": "https://github.com/rust-lang/rust/commit/16a0eb1829b569e2d1e1046a60fd7e25aa35bfcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16a0eb1829b569e2d1e1046a60fd7e25aa35bfcf/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f045f146263b1816f0b3472b528841b5877c020f", "url": "https://api.github.com/repos/rust-lang/rust/commits/f045f146263b1816f0b3472b528841b5877c020f", "html_url": "https://github.com/rust-lang/rust/commit/f045f146263b1816f0b3472b528841b5877c020f"}], "stats": {"total": 36, "additions": 23, "deletions": 13}, "files": [{"sha": "ae145234792c7e62e23c122a37cae96fced407be", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 23, "deletions": 13, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/16a0eb1829b569e2d1e1046a60fd7e25aa35bfcf/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/16a0eb1829b569e2d1e1046a60fd7e25aa35bfcf/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=16a0eb1829b569e2d1e1046a60fd7e25aa35bfcf", "patch": "@@ -33,7 +33,7 @@ export function outputChannel() {\n }\n \n export interface RustAnalyzerExtensionApi {\n-    client: lc.LanguageClient;\n+    client?: lc.LanguageClient;\n }\n \n export async function activate(\n@@ -48,6 +48,23 @@ export async function activate(\n }\n \n async function tryActivate(context: vscode.ExtensionContext): Promise<RustAnalyzerExtensionApi> {\n+    // We only support local folders, not eg. Live Share (`vlsl:` scheme), so don't activate if\n+    // only those are in use.\n+    // (r-a still somewhat works with Live Share, because commands are tunneled to the host)\n+    const folders = (vscode.workspace.workspaceFolders || []).filter((folder) =>\n+        folder.uri.scheme == \"file\"\n+    );\n+    const rustDocuments = vscode.workspace.textDocuments.filter((document) =>\n+        isRustDocument(document)\n+    );\n+\n+    if (folders.length == 0 && rustDocuments.length == 0) {\n+        // FIXME: Ideally we would choose not to activate at all (and avoid registering\n+        // non-functional editor commands), but VS Code doesn't seem to have a good way of doing\n+        // that\n+        return {};\n+    }\n+\n     const config = new Config(context);\n     const state = new PersistentState(context.globalState);\n     const serverPath = await bootstrap(context, config, state).catch((err) => {\n@@ -60,18 +77,11 @@ async function tryActivate(context: vscode.ExtensionContext): Promise<RustAnalyz\n         throw new Error(message);\n     });\n \n-    if ((vscode.workspace.workspaceFolders || []).length === 0) {\n-        const rustDocuments = vscode.workspace.textDocuments.filter((document) =>\n-            isRustDocument(document)\n-        );\n-        if (rustDocuments.length > 0) {\n-            ctx = await Ctx.create(config, context, serverPath, {\n-                kind: \"Detached Files\",\n-                files: rustDocuments,\n-            });\n-        } else {\n-            throw new Error(\"no rust files are opened\");\n-        }\n+    if (folders.length === 0) {\n+        ctx = await Ctx.create(config, context, serverPath, {\n+            kind: \"Detached Files\",\n+            files: rustDocuments,\n+        });\n     } else {\n         // Note: we try to start the server before we activate type hints so that it\n         // registers its `onDidChangeDocument` handler before us."}]}