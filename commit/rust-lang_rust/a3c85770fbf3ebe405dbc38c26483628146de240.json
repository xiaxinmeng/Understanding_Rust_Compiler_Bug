{"sha": "a3c85770fbf3ebe405dbc38c26483628146de240", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzYzg1NzcwZmJmM2ViZTQwNWRiYzM4YzI2NDgzNjI4MTQ2ZGUyNDA=", "commit": {"author": {"name": "Matthew Kraai", "email": "kraai@ftbfs.org", "date": "2019-12-06T15:18:10Z"}, "committer": {"name": "Matthew Kraai", "email": "kraai@ftbfs.org", "date": "2019-12-06T15:35:30Z"}, "message": "Change \"us\" to \"is\" in Layout::for_value comment", "tree": {"sha": "d6cddddfe39a8ea1c7730f87757488fda58b2936", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d6cddddfe39a8ea1c7730f87757488fda58b2936"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3c85770fbf3ebe405dbc38c26483628146de240", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3c85770fbf3ebe405dbc38c26483628146de240", "html_url": "https://github.com/rust-lang/rust/commit/a3c85770fbf3ebe405dbc38c26483628146de240", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3c85770fbf3ebe405dbc38c26483628146de240/comments", "author": {"login": "kraai", "id": 552646, "node_id": "MDQ6VXNlcjU1MjY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/552646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraai", "html_url": "https://github.com/kraai", "followers_url": "https://api.github.com/users/kraai/followers", "following_url": "https://api.github.com/users/kraai/following{/other_user}", "gists_url": "https://api.github.com/users/kraai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraai/subscriptions", "organizations_url": "https://api.github.com/users/kraai/orgs", "repos_url": "https://api.github.com/users/kraai/repos", "events_url": "https://api.github.com/users/kraai/events{/privacy}", "received_events_url": "https://api.github.com/users/kraai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kraai", "id": 552646, "node_id": "MDQ6VXNlcjU1MjY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/552646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraai", "html_url": "https://github.com/kraai", "followers_url": "https://api.github.com/users/kraai/followers", "following_url": "https://api.github.com/users/kraai/following{/other_user}", "gists_url": "https://api.github.com/users/kraai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraai/subscriptions", "organizations_url": "https://api.github.com/users/kraai/orgs", "repos_url": "https://api.github.com/users/kraai/repos", "events_url": "https://api.github.com/users/kraai/events{/privacy}", "received_events_url": "https://api.github.com/users/kraai/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0", "html_url": "https://github.com/rust-lang/rust/commit/d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "d260556a208037bba4c33f9d646f8dda4f2207ca", "filename": "src/libcore/alloc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a3c85770fbf3ebe405dbc38c26483628146de240/src%2Flibcore%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3c85770fbf3ebe405dbc38c26483628146de240/src%2Flibcore%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Falloc.rs?ref=a3c85770fbf3ebe405dbc38c26483628146de240", "patch": "@@ -137,7 +137,7 @@ impl Layout {\n     #[inline]\n     pub fn for_value<T: ?Sized>(t: &T) -> Self {\n         let (size, align) = (mem::size_of_val(t), mem::align_of_val(t));\n-        // See rationale in `new` for why this us using an unsafe variant below\n+        // See rationale in `new` for why this is using an unsafe variant below\n         debug_assert!(Layout::from_size_align(size, align).is_ok());\n         unsafe {\n             Layout::from_size_align_unchecked(size, align)"}]}