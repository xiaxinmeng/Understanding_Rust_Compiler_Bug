{"sha": "a8403e1cda2e0cba4f2c7282ab5adb5392bef473", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4NDAzZTFjZGEyZTBjYmE0ZjJjNzI4MmFiNWFkYjUzOTJiZWY0NzM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-06T00:36:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-07-06T00:36:34Z"}, "message": "Auto merge of #51861 - GuillaumeGomez:prevent-some-markdown-short-doc, r=QuietMisdreavus\n\nPrevent some markdown transformation on short docblocks\n\nBefore:\n\n<img width=\"1440\" alt=\"screen shot 2018-06-28 at 01 46 01\" src=\"https://user-images.githubusercontent.com/3050060/42005762-7d533bbe-7a76-11e8-8361-027886803399.png\">\n\nAfter:\n\n<img width=\"1440\" alt=\"screen shot 2018-06-28 at 01 46 02\" src=\"https://user-images.githubusercontent.com/3050060/42005768-81bd59a0-7a76-11e8-819b-9b4be72579d6.png\">\n\nThis is only performed on short doc blocks, not on plain ones. Not all transformations are prevented (you still have a few like urls, code blocks, etc...).\n\ncc @nical\n\nr? @QuietMisdreavus", "tree": {"sha": "6e50a040eb0509b7cd78e05b708974d4a19c7e52", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e50a040eb0509b7cd78e05b708974d4a19c7e52"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a8403e1cda2e0cba4f2c7282ab5adb5392bef473", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a8403e1cda2e0cba4f2c7282ab5adb5392bef473", "html_url": "https://github.com/rust-lang/rust/commit/a8403e1cda2e0cba4f2c7282ab5adb5392bef473", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a8403e1cda2e0cba4f2c7282ab5adb5392bef473/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "00f49728e03d7bcf419e0d94fa45f3f4285ff7e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/00f49728e03d7bcf419e0d94fa45f3f4285ff7e3", "html_url": "https://github.com/rust-lang/rust/commit/00f49728e03d7bcf419e0d94fa45f3f4285ff7e3"}, {"sha": "6a86ee73285c6a522dce0da5fee3ed4681501b21", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a86ee73285c6a522dce0da5fee3ed4681501b21", "html_url": "https://github.com/rust-lang/rust/commit/6a86ee73285c6a522dce0da5fee3ed4681501b21"}], "stats": {"total": 78, "additions": 71, "deletions": 7}, "files": [{"sha": "8040548ce6bbe68ad315719895ee4b9f943cf70f", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 36, "deletions": 7, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/a8403e1cda2e0cba4f2c7282ab5adb5392bef473/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8403e1cda2e0cba4f2c7282ab5adb5392bef473/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=a8403e1cda2e0cba4f2c7282ab5adb5392bef473", "patch": "@@ -339,6 +339,20 @@ impl<'a, I: Iterator<Item = Event<'a>>> SummaryLine<'a, I> {\n     }\n }\n \n+fn check_if_allowed_tag(t: &Tag) -> bool {\n+    match *t {\n+        Tag::Paragraph\n+        | Tag::CodeBlock(_)\n+        | Tag::Item\n+        | Tag::Emphasis\n+        | Tag::Strong\n+        | Tag::Code\n+        | Tag::Link(_, _)\n+        | Tag::BlockQuote => true,\n+        _ => false,\n+    }\n+}\n+\n impl<'a, I: Iterator<Item = Event<'a>>> Iterator for SummaryLine<'a, I> {\n     type Item = Event<'a>;\n \n@@ -350,12 +364,28 @@ impl<'a, I: Iterator<Item = Event<'a>>> Iterator for SummaryLine<'a, I> {\n             self.started = true;\n         }\n         let event = self.inner.next();\n-        match event {\n-            Some(Event::Start(..)) => self.depth += 1,\n-            Some(Event::End(..)) => self.depth -= 1,\n-            _ => {}\n+        let mut is_start = true;\n+        let is_allowed_tag = match event {\n+            Some(Event::Start(ref c)) => {\n+                self.depth += 1;\n+                check_if_allowed_tag(c)\n+            }\n+            Some(Event::End(ref c)) => {\n+                self.depth -= 1;\n+                is_start = false;\n+                check_if_allowed_tag(c)\n+            }\n+            _ => true,\n+        };\n+        if is_allowed_tag == false {\n+            if is_start {\n+                Some(Event::Start(Tag::Paragraph))\n+            } else {\n+                Some(Event::End(Tag::Paragraph))\n+            }\n+        } else {\n+            event\n         }\n-        event\n     }\n }\n \n@@ -688,8 +718,7 @@ impl<'a> fmt::Display for MarkdownSummaryLine<'a> {\n             }\n         };\n \n-        let p = Parser::new_with_broken_link_callback(md, Options::empty(),\n-                                                      Some(&replacer));\n+        let p = Parser::new_with_broken_link_callback(md, Options::empty(), Some(&replacer));\n \n         let mut s = String::new();\n "}, {"sha": "cb36110b2912a16756062ed3734a4c7620d967ee", "filename": "src/test/rustdoc/short-dockblock.rs", "status": "added", "additions": 35, "deletions": 0, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/a8403e1cda2e0cba4f2c7282ab5adb5392bef473/src%2Ftest%2Frustdoc%2Fshort-dockblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a8403e1cda2e0cba4f2c7282ab5adb5392bef473/src%2Ftest%2Frustdoc%2Fshort-dockblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fshort-dockblock.rs?ref=a8403e1cda2e0cba4f2c7282ab5adb5392bef473", "patch": "@@ -0,0 +1,35 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+// @has foo/index.html '//*[@class=\"docblock-short\"]/p' 'fooo'\n+// @!has foo/index.html '//*[@class=\"docblock-short\"]/p/h1' 'fooo'\n+// @has foo/fn.foo.html '//h1[@id=\"fooo\"]/a[@href=\"#fooo\"]' 'fooo'\n+\n+/// # fooo\n+///\n+/// foo\n+pub fn foo() {}\n+\n+// @has foo/index.html '//*[@class=\"docblock-short\"]/p' 'mooood'\n+// @!has foo/index.html '//*[@class=\"docblock-short\"]/p/h2' 'mooood'\n+// @has foo/foo/index.html '//h2[@id=\"mooood\"]/a[@href=\"#mooood\"]' 'mooood'\n+\n+/// ## mooood\n+///\n+/// foo mod\n+pub mod foo {}\n+\n+// @has foo/index.html '//*[@class=\"docblock-short\"]/p/a[@href=\\\n+//                      \"https://nougat.world\"]/code' 'nougat'\n+\n+/// [`nougat`](https://nougat.world)\n+pub struct Bar;"}]}