{"sha": "e70797b575f4806528e24f7316cbfbacb27c6cf2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU3MDc5N2I1NzVmNDgwNjUyOGUyNGY3MzE2Y2JmYmFjYjI3YzZjZjI=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2019-03-12T20:26:16Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2019-05-01T22:10:57Z"}, "message": "Add `PlaceholderConst`", "tree": {"sha": "e9cd7f3eef1d950b7021b7ee076784156b92cf43", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e9cd7f3eef1d950b7021b7ee076784156b92cf43"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e70797b575f4806528e24f7316cbfbacb27c6cf2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e70797b575f4806528e24f7316cbfbacb27c6cf2", "html_url": "https://github.com/rust-lang/rust/commit/e70797b575f4806528e24f7316cbfbacb27c6cf2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e70797b575f4806528e24f7316cbfbacb27c6cf2/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f5712d2de09e2c35843150b05fdf3672534dff00", "url": "https://api.github.com/repos/rust-lang/rust/commits/f5712d2de09e2c35843150b05fdf3672534dff00", "html_url": "https://github.com/rust-lang/rust/commit/f5712d2de09e2c35843150b05fdf3672534dff00"}], "stats": {"total": 18, "additions": 18, "deletions": 0}, "files": [{"sha": "9fad1f47f13726f8452a53c7e56838cc81a74bf0", "filename": "src/librustc/infer/canonical/mod.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/e70797b575f4806528e24f7316cbfbacb27c6cf2/src%2Flibrustc%2Finfer%2Fcanonical%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e70797b575f4806528e24f7316cbfbacb27c6cf2/src%2Flibrustc%2Finfer%2Fcanonical%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Fcanonical%2Fmod.rs?ref=e70797b575f4806528e24f7316cbfbacb27c6cf2", "patch": "@@ -117,6 +117,7 @@ impl CanonicalVarInfo {\n             CanonicalVarKind::Region(_) => true,\n             CanonicalVarKind::PlaceholderRegion(..) => false,\n             CanonicalVarKind::Const(_) => true,\n+            CanonicalVarKind::PlaceholderConst(_) => false,\n         }\n     }\n }\n@@ -142,6 +143,9 @@ pub enum CanonicalVarKind {\n \n     /// Some kind of const inference variable.\n     Const(ty::UniverseIndex),\n+\n+    /// A \"placeholder\" that represents \"any const\".\n+    PlaceholderConst(ty::PlaceholderConst),\n }\n \n impl CanonicalVarKind {\n@@ -156,6 +160,7 @@ impl CanonicalVarKind {\n             CanonicalVarKind::Region(ui) => ui,\n             CanonicalVarKind::PlaceholderRegion(placeholder) => placeholder.universe,\n             CanonicalVarKind::Const(ui) => ui,\n+            CanonicalVarKind::PlaceholderConst(placeholder) => placeholder.universe,\n         }\n     }\n }\n@@ -405,6 +410,13 @@ impl<'cx, 'gcx, 'tcx> InferCtxt<'cx, 'gcx, 'tcx> {\n                     universe_map(ui),\n                 ).into()\n             }\n+\n+            CanonicalVarKind::PlaceholderConst(\n+                ty::PlaceholderConst { universe, name },\n+            ) => {\n+                let _ = (universe, name);\n+                unimplemented!() // FIXME(const_generics)\n+            }\n         }\n     }\n }"}, {"sha": "7e45568725f3557c67e0c021ee700881a6e14832", "filename": "src/librustc/mir/interpret/value.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/e70797b575f4806528e24f7316cbfbacb27c6cf2/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e70797b575f4806528e24f7316cbfbacb27c6cf2/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Finterpret%2Fvalue.rs?ref=e70797b575f4806528e24f7316cbfbacb27c6cf2", "patch": "@@ -2,6 +2,7 @@ use std::fmt;\n use rustc_macros::HashStable;\n \n use crate::ty::{Ty, InferConst, ParamConst, layout::{HasDataLayout, Size}, subst::SubstsRef};\n+use crate::ty::PlaceholderConst;\n use crate::hir::def_id::DefId;\n \n use super::{EvalResult, Pointer, PointerArithmetic, Allocation, AllocId, sign_extend, truncate};\n@@ -26,6 +27,9 @@ pub enum ConstValue<'tcx> {\n     /// Infer the value of the const.\n     Infer(InferConst<'tcx>),\n \n+    /// A placeholder const - universally quantified higher-ranked const.\n+    Placeholder(PlaceholderConst),\n+\n     /// Used only for types with `layout::abi::Scalar` ABI and ZSTs.\n     ///\n     /// Not using the enum `Value` to encode that this must not be `Undef`."}, {"sha": "2cdf718c3ac578f3116d382c90263b02eb24f7d2", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e70797b575f4806528e24f7316cbfbacb27c6cf2/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e70797b575f4806528e24f7316cbfbacb27c6cf2/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=e70797b575f4806528e24f7316cbfbacb27c6cf2", "patch": "@@ -1632,6 +1632,8 @@ pub type PlaceholderRegion = Placeholder<BoundRegion>;\n \n pub type PlaceholderType = Placeholder<BoundVar>;\n \n+pub type PlaceholderConst = Placeholder<BoundVar>;\n+\n /// When type checking, we use the `ParamEnv` to track\n /// details about the set of where-clauses that are in scope at this\n /// particular point."}]}