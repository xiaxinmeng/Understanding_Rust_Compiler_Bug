{"sha": "44723c5d59ff00daeefbf2a01f67089acd75730d", "node_id": "C_kwDOAAsO6NoAKDQ0NzIzYzVkNTlmZjAwZGFlZWZiZjJhMDFmNjcwODlhY2Q3NTczMGQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-29T07:46:36Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-11-29T07:46:36Z"}, "message": "Auto merge of #91043 - camsteffen:descendant-eq, r=petrochenkov\n\nAdd fast path to `is_descendant_of`", "tree": {"sha": "4c9dcce8146840b8bc2b793055558d707a32ac54", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c9dcce8146840b8bc2b793055558d707a32ac54"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44723c5d59ff00daeefbf2a01f67089acd75730d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44723c5d59ff00daeefbf2a01f67089acd75730d", "html_url": "https://github.com/rust-lang/rust/commit/44723c5d59ff00daeefbf2a01f67089acd75730d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44723c5d59ff00daeefbf2a01f67089acd75730d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9981e56d3b820f429fac62b4ff916f2a871340b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9981e56d3b820f429fac62b4ff916f2a871340b4", "html_url": "https://github.com/rust-lang/rust/commit/9981e56d3b820f429fac62b4ff916f2a871340b4"}, {"sha": "ac8d514376c70cbb78e42354ddddc3f2534961ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac8d514376c70cbb78e42354ddddc3f2534961ae", "html_url": "https://github.com/rust-lang/rust/commit/ac8d514376c70cbb78e42354ddddc3f2534961ae"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "315b706fbc44ddb6583f0a412a6aea9f26385559", "filename": "compiler/rustc_span/src/hygiene.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/44723c5d59ff00daeefbf2a01f67089acd75730d/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/44723c5d59ff00daeefbf2a01f67089acd75730d/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Fhygiene.rs?ref=44723c5d59ff00daeefbf2a01f67089acd75730d", "patch": "@@ -264,7 +264,15 @@ impl ExpnId {\n         HygieneData::with(|data| data.expn_data(self).clone())\n     }\n \n+    #[inline]\n     pub fn is_descendant_of(self, ancestor: ExpnId) -> bool {\n+        // a few \"fast path\" cases to avoid locking HygieneData\n+        if ancestor == ExpnId::root() || ancestor == self {\n+            return true;\n+        }\n+        if ancestor.krate != self.krate {\n+            return false;\n+        }\n         HygieneData::with(|data| data.is_descendant_of(self, ancestor))\n     }\n \n@@ -376,13 +384,22 @@ impl HygieneData {\n     }\n \n     fn is_descendant_of(&self, mut expn_id: ExpnId, ancestor: ExpnId) -> bool {\n-        while expn_id != ancestor {\n+        // a couple \"fast path\" cases to avoid traversing parents in the loop below\n+        if ancestor == ExpnId::root() {\n+            return true;\n+        }\n+        if expn_id.krate != ancestor.krate {\n+            return false;\n+        }\n+        loop {\n+            if expn_id == ancestor {\n+                return true;\n+            }\n             if expn_id == ExpnId::root() {\n                 return false;\n             }\n             expn_id = self.expn_data(expn_id).parent;\n         }\n-        true\n     }\n \n     fn normalize_to_macros_2_0(&self, ctxt: SyntaxContext) -> SyntaxContext {\n@@ -1223,6 +1240,7 @@ pub fn register_expn_id(\n     data: ExpnData,\n     hash: ExpnHash,\n ) -> ExpnId {\n+    debug_assert!(data.parent == ExpnId::root() || krate == data.parent.krate);\n     let expn_id = ExpnId { krate, local_id };\n     HygieneData::with(|hygiene_data| {\n         let _old_data = hygiene_data.foreign_expn_data.insert(expn_id, data);"}]}