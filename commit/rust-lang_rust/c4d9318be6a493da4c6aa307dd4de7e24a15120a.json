{"sha": "c4d9318be6a493da4c6aa307dd4de7e24a15120a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0ZDkzMThiZTZhNDkzZGE0YzZhYTMwN2RkNGRlN2UyNGExNTEyMGE=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-05-07T19:42:41Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2020-05-14T09:36:02Z"}, "message": "Make current crate aliases go first", "tree": {"sha": "95704b40751231b26bbd57d5376ba3a3a05d120a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/95704b40751231b26bbd57d5376ba3a3a05d120a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4d9318be6a493da4c6aa307dd4de7e24a15120a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4d9318be6a493da4c6aa307dd4de7e24a15120a", "html_url": "https://github.com/rust-lang/rust/commit/c4d9318be6a493da4c6aa307dd4de7e24a15120a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4d9318be6a493da4c6aa307dd4de7e24a15120a/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "883c177abb216fcef5b2d2369970394b0967f302", "url": "https://api.github.com/repos/rust-lang/rust/commits/883c177abb216fcef5b2d2369970394b0967f302", "html_url": "https://github.com/rust-lang/rust/commit/883c177abb216fcef5b2d2369970394b0967f302"}], "stats": {"total": 101, "additions": 67, "deletions": 34}, "files": [{"sha": "7592331dd656d5197a4221aa88f213601820b455", "filename": "src/librustdoc/html/static/main.js", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c4d9318be6a493da4c6aa307dd4de7e24a15120a/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/c4d9318be6a493da4c6aa307dd4de7e24a15120a/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fmain.js?ref=c4d9318be6a493da4c6aa307dd4de7e24a15120a", "patch": "@@ -978,7 +978,10 @@ function getSearchElement() {\n             }\n \n             function handleAliases(ret, query, filterCrates) {\n+                // We separate aliases and crate aliases because we want to have current crate\n+                // aliases to be before the others in the displayed results.\n                 var aliases = [];\n+                var crateAliases = [];\n                 var i;\n                 if (filterCrates !== undefined &&\n                         ALIASES[filterCrates] &&\n@@ -990,25 +993,28 @@ function getSearchElement() {\n                 } else {\n                     Object.keys(ALIASES).forEach(function(crate) {\n                         if (ALIASES[crate][query.search]) {\n+                            var pushTo = crate === window.currentCrate ? crateAliases : aliases;\n                             for (i = 0; i < ALIASES[crate][query.search].length; ++i) {\n-                                aliases.push(\n+                                pushTo.push(\n                                     createAliasFromItem(\n                                         searchIndex[ALIASES[crate][query.search][i]]));\n                             }\n                         }\n                     });\n                 }\n-                aliases.sort(function(aaa, bbb) {\n+\n+                var sortFunc = function(aaa, bbb) {\n                     if (aaa.path < bbb.path) {\n                         return 1;\n                     } else if (aaa.path === bbb.path) {\n                         return 0;\n                     }\n                     return -1;\n-                });\n-                for (i = 0; i < aliases.length; ++i) {\n-                    var alias = aliases[i];\n+                };\n+                crateAliases.sort(sortFunc);\n+                aliases.sort(sortFunc);\n \n+                var pushFunc = function(alias) {\n                     alias.alias = query.raw;\n                     var res = buildHrefAndPath(alias);\n                     alias.displayPath = pathSplitter(res[0]);\n@@ -1019,7 +1025,9 @@ function getSearchElement() {\n                     if (ret.others.length > MAX_RESULTS) {\n                         ret.others.pop();\n                     }\n-                }\n+                };\n+                onEach(aliases, pushFunc);\n+                onEach(crateAliases, pushFunc);\n             }\n \n             // quoted values mean literal search"}, {"sha": "798fa29efbd2d2c1af3c63143c95bbbfa975e6c1", "filename": "src/test/rustdoc-js-std/alias-2.js", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c4d9318be6a493da4c6aa307dd4de7e24a15120a/src%2Ftest%2Frustdoc-js-std%2Falias-2.js", "raw_url": "https://github.com/rust-lang/rust/raw/c4d9318be6a493da4c6aa307dd4de7e24a15120a/src%2Ftest%2Frustdoc-js-std%2Falias-2.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js-std%2Falias-2.js?ref=c4d9318be6a493da4c6aa307dd4de7e24a15120a", "patch": "@@ -1,12 +1,10 @@\n-// ignore-order\n-\n const QUERY = '+';\n \n const EXPECTED = {\n     'others': [\n-        { 'path': 'core::ops', 'name': 'AddAssign' },\n-        { 'path': 'core::ops', 'name': 'Add' },\n         { 'path': 'std::ops', 'name': 'AddAssign' },\n         { 'path': 'std::ops', 'name': 'Add' },\n+        { 'path': 'core::ops', 'name': 'AddAssign' },\n+        { 'path': 'core::ops', 'name': 'Add' },\n     ],\n };"}, {"sha": "896808d4157808e1b0f682bd2c02d4440d0fb85c", "filename": "src/test/rustdoc-js/doc-alias.js", "status": "modified", "additions": 47, "deletions": 21, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/c4d9318be6a493da4c6aa307dd4de7e24a15120a/src%2Ftest%2Frustdoc-js%2Fdoc-alias.js", "raw_url": "https://github.com/rust-lang/rust/raw/c4d9318be6a493da4c6aa307dd4de7e24a15120a/src%2Ftest%2Frustdoc-js%2Fdoc-alias.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fdoc-alias.js?ref=c4d9318be6a493da4c6aa307dd4de7e24a15120a", "patch": "@@ -32,7 +32,8 @@ const EXPECTED = [\n                 'path': 'doc_alias',\n                 'name': 'Struct',\n                 'alias': 'StructItem',\n-                'href': '../doc_alias/struct.Struct.html'\n+                'href': '../doc_alias/struct.Struct.html',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -42,7 +43,8 @@ const EXPECTED = [\n                 'path': 'doc_alias::Struct',\n                 'name': 'field',\n                 'alias': 'StructFieldItem',\n-                'href': '../doc_alias/struct.Struct.html#structfield.field'\n+                'href': '../doc_alias/struct.Struct.html#structfield.field',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -52,7 +54,8 @@ const EXPECTED = [\n                 'path': 'doc_alias::Struct',\n                 'name': 'method',\n                 'alias': 'StructMethodItem',\n-                'href': '../doc_alias/struct.Struct.html#method.method'\n+                'href': '../doc_alias/struct.Struct.html#method.method',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -65,16 +68,24 @@ const EXPECTED = [\n         'others': [],\n     },\n     {\n-        // ImplTraitFunction\n-        'others': [],\n+        'others': [\n+            {\n+                'path': 'doc_alias::Struct',\n+                'name': 'function',\n+                'alias': 'ImplTraitFunction',\n+                'href': '../doc_alias/struct.Struct.html#method.function',\n+                'is_alias': true\n+            },\n+        ],\n     },\n     {\n         'others': [\n             {\n                 'path': 'doc_alias',\n                 'name': 'Enum',\n                 'alias': 'EnumItem',\n-                'href': '../doc_alias/enum.Enum.html'\n+                'href': '../doc_alias/enum.Enum.html',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -84,7 +95,8 @@ const EXPECTED = [\n                 'path': 'doc_alias::Enum',\n                 'name': 'Variant',\n                 'alias': 'VariantItem',\n-                'href': '../doc_alias/enum.Enum.html#variant.Variant'\n+                'href': '../doc_alias/enum.Enum.html#variant.Variant',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -94,7 +106,8 @@ const EXPECTED = [\n                 'path': 'doc_alias::Enum',\n                 'name': 'method',\n                 'alias': 'EnumMethodItem',\n-                'href': '../doc_alias/enum.Enum.html#method.method'\n+                'href': '../doc_alias/enum.Enum.html#method.method',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -104,7 +117,8 @@ const EXPECTED = [\n                 'path': 'doc_alias',\n                 'name': 'Typedef',\n                 'alias': 'TypedefItem',\n-                'href': '../doc_alias/type.Typedef.html'\n+                'href': '../doc_alias/type.Typedef.html',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -114,7 +128,8 @@ const EXPECTED = [\n                 'path': 'doc_alias',\n                 'name': 'Trait',\n                 'alias': 'TraitItem',\n-                'href': '../doc_alias/trait.Trait.html'\n+                'href': '../doc_alias/trait.Trait.html',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -124,7 +139,8 @@ const EXPECTED = [\n                 'path': 'doc_alias::Trait',\n                 'name': 'Target',\n                 'alias': 'TraitTypeItem',\n-                'href': '../doc_alias/trait.Trait.html#associatedtype.Target'\n+                'href': '../doc_alias/trait.Trait.html#associatedtype.Target',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -134,7 +150,8 @@ const EXPECTED = [\n                 'path': 'doc_alias::Trait',\n                 'name': 'AssociatedConst',\n                 'alias': 'AssociatedConstItem',\n-                'href': '../doc_alias/trait.Trait.html#associatedconstant.AssociatedConst'\n+                'href': '../doc_alias/trait.Trait.html#associatedconstant.AssociatedConst',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -144,7 +161,8 @@ const EXPECTED = [\n                 'path': 'doc_alias::Trait',\n                 'name': 'function',\n                 'alias': 'TraitFunctionItem',\n-                'href': '../doc_alias/trait.Trait.html#tymethod.function'\n+                'href': '../doc_alias/trait.Trait.html#tymethod.function',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -154,7 +172,8 @@ const EXPECTED = [\n                 'path': 'doc_alias',\n                 'name': 'function',\n                 'alias': 'FunctionItem',\n-                'href': '../doc_alias/fn.function.html'\n+                'href': '../doc_alias/fn.function.html',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -164,7 +183,8 @@ const EXPECTED = [\n                 'path': 'doc_alias',\n                 'name': 'Module',\n                 'alias': 'ModuleItem',\n-                'href': '../doc_alias/Module/index.html'\n+                'href': '../doc_alias/Module/index.html',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -174,7 +194,8 @@ const EXPECTED = [\n                 'path': 'doc_alias',\n                 'name': 'Const',\n                 'alias': 'ConstItem',\n-                'href': '../doc_alias/constant.Const.html'\n+                'href': '../doc_alias/constant.Const.html',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -184,7 +205,8 @@ const EXPECTED = [\n                 'path': 'doc_alias',\n                 'name': 'Static',\n                 'alias': 'StaticItem',\n-                'href': '../doc_alias/static.Static.html'\n+                'href': '../doc_alias/static.Static.html',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -194,7 +216,8 @@ const EXPECTED = [\n                 'path': 'doc_alias',\n                 'name': 'Union',\n                 'alias': 'UnionItem',\n-                'href': '../doc_alias/union.Union.html'\n+                'href': '../doc_alias/union.Union.html',\n+                'is_alias': true\n             },\n             // Not an alias!\n             {\n@@ -210,7 +233,8 @@ const EXPECTED = [\n                 'path': 'doc_alias::Union',\n                 'name': 'union_item',\n                 'alias': 'UnionFieldItem',\n-                'href': '../doc_alias/union.Union.html#structfield.union_item'\n+                'href': '../doc_alias/union.Union.html#structfield.union_item',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -220,7 +244,8 @@ const EXPECTED = [\n                 'path': 'doc_alias::Union',\n                 'name': 'method',\n                 'alias': 'UnionMethodItem',\n-                'href': '../doc_alias/union.Union.html#method.method'\n+                'href': '../doc_alias/union.Union.html#method.method',\n+                'is_alias': true\n             },\n         ],\n     },\n@@ -230,7 +255,8 @@ const EXPECTED = [\n                 'path': 'doc_alias',\n                 'name': 'Macro',\n                 'alias': 'MacroItem',\n-                'href': '../doc_alias/macro.Macro.html'\n+                'href': '../doc_alias/macro.Macro.html',\n+                'is_alias': true\n             },\n         ],\n     },"}, {"sha": "84c638a199507f25aecbe9823b434d3d0f288b4f", "filename": "src/test/rustdoc-js/doc-alias.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c4d9318be6a493da4c6aa307dd4de7e24a15120a/src%2Ftest%2Frustdoc-js%2Fdoc-alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4d9318be6a493da4c6aa307dd4de7e24a15120a/src%2Ftest%2Frustdoc-js%2Fdoc-alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-js%2Fdoc-alias.rs?ref=c4d9318be6a493da4c6aa307dd4de7e24a15120a", "patch": "@@ -19,7 +19,6 @@ impl Trait for Struct {\n     #[doc(alias = \"ImplAssociatedConstItem\")]\n     const AssociatedConst: i32 = 12;\n \n-    // Shouldn't be listed in aliases!\n     #[doc(alias = \"ImplTraitFunction\")]\n     fn function() -> Self::Target { 0 }\n }"}, {"sha": "1fa46ce99f5e66794e88b5bccb9a14046892787a", "filename": "src/tools/rustdoc-js/tester.js", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c4d9318be6a493da4c6aa307dd4de7e24a15120a/src%2Ftools%2Frustdoc-js%2Ftester.js", "raw_url": "https://github.com/rust-lang/rust/raw/c4d9318be6a493da4c6aa307dd4de7e24a15120a/src%2Ftools%2Frustdoc-js%2Ftester.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Frustdoc-js%2Ftester.js?ref=c4d9318be6a493da4c6aa307dd4de7e24a15120a", "patch": "@@ -218,7 +218,7 @@ function lookForEntry(entry, data) {\n     return null;\n }\n \n-function loadMainJsAndIndex(mainJs, searchIndex, crate) {\n+function loadMainJsAndIndex(mainJs, searchIndex, storageJs, crate) {\n     if (searchIndex[searchIndex.length - 1].length === 0) {\n         searchIndex.pop();\n     }\n@@ -241,6 +241,7 @@ function loadMainJsAndIndex(mainJs, searchIndex, crate) {\n     ALIASES = {};\n     finalJS += 'window = { \"currentCrate\": \"' + crate + '\" };\\n';\n     finalJS += 'var rootPath = \"../\";\\n';\n+    finalJS += loadThings([\"onEach\"], 'function', extractFunction, storageJs);\n     finalJS += loadThings(arraysToLoad, 'array', extractArrayVariable, mainJs);\n     finalJS += loadThings(variablesToLoad, 'variable', extractVariable, mainJs);\n     finalJS += loadThings(functionsToLoad, 'function', extractFunction, mainJs);\n@@ -338,10 +339,11 @@ function runChecks(testFile, loaded, index) {\n \n function load_files(doc_folder, resource_suffix, crate) {\n     var mainJs = readFile(path.join(doc_folder, \"main\" + resource_suffix + \".js\"));\n+    var storageJs = readFile(path.join(doc_folder, \"storage\" + resource_suffix + \".js\"));\n     var searchIndex = readFile(\n         path.join(doc_folder, \"search-index\" + resource_suffix + \".js\")).split(\"\\n\");\n \n-    return loadMainJsAndIndex(mainJs, searchIndex, crate);\n+    return loadMainJsAndIndex(mainJs, searchIndex, storageJs, crate);\n }\n \n function showHelp() {"}]}