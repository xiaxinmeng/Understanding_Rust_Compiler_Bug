{"sha": "ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051", "node_id": "C_kwDOAAsO6NoAKGFkMGE2YmYxYTNlZGEyNTY5OGU5Y2U1Y2VhMDc0M2MyY2RmOWYwNTE", "commit": {"author": {"name": "OleStrohm", "email": "strohm99@gmail.com", "date": "2022-08-07T16:22:18Z"}, "committer": {"name": "OleStrohm", "email": "strohm99@gmail.com", "date": "2022-09-12T19:20:43Z"}, "message": "Added consteval tests", "tree": {"sha": "71247a5fbc779afd8614a8908e4dd7737dbdd69f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71247a5fbc779afd8614a8908e4dd7737dbdd69f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051", "html_url": "https://github.com/rust-lang/rust/commit/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051/comments", "author": {"login": "OleStrohm", "id": 6892524, "node_id": "MDQ6VXNlcjY4OTI1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6892524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OleStrohm", "html_url": "https://github.com/OleStrohm", "followers_url": "https://api.github.com/users/OleStrohm/followers", "following_url": "https://api.github.com/users/OleStrohm/following{/other_user}", "gists_url": "https://api.github.com/users/OleStrohm/gists{/gist_id}", "starred_url": "https://api.github.com/users/OleStrohm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OleStrohm/subscriptions", "organizations_url": "https://api.github.com/users/OleStrohm/orgs", "repos_url": "https://api.github.com/users/OleStrohm/repos", "events_url": "https://api.github.com/users/OleStrohm/events{/privacy}", "received_events_url": "https://api.github.com/users/OleStrohm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "OleStrohm", "id": 6892524, "node_id": "MDQ6VXNlcjY4OTI1MjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/6892524?v=4", "gravatar_id": "", "url": "https://api.github.com/users/OleStrohm", "html_url": "https://github.com/OleStrohm", "followers_url": "https://api.github.com/users/OleStrohm/followers", "following_url": "https://api.github.com/users/OleStrohm/following{/other_user}", "gists_url": "https://api.github.com/users/OleStrohm/gists{/gist_id}", "starred_url": "https://api.github.com/users/OleStrohm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/OleStrohm/subscriptions", "organizations_url": "https://api.github.com/users/OleStrohm/orgs", "repos_url": "https://api.github.com/users/OleStrohm/repos", "events_url": "https://api.github.com/users/OleStrohm/events{/privacy}", "received_events_url": "https://api.github.com/users/OleStrohm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f84b6e2e51442755dfd9c8ae5cc5eb9020e52cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f84b6e2e51442755dfd9c8ae5cc5eb9020e52cb", "html_url": "https://github.com/rust-lang/rust/commit/2f84b6e2e51442755dfd9c8ae5cc5eb9020e52cb"}], "stats": {"total": 57, "additions": 46, "deletions": 11}, "files": [{"sha": "2dc7714bbb540597c2cbcf881b9acdf2fba8dc74", "filename": "crates/hir-def/src/body.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051/crates%2Fhir-def%2Fsrc%2Fbody.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051/crates%2Fhir-def%2Fsrc%2Fbody.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-def%2Fsrc%2Fbody.rs?ref=ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051", "patch": "@@ -28,8 +28,8 @@ use crate::{\n     nameres::DefMap,\n     path::{ModPath, Path},\n     src::{HasChildSource, HasSource},\n-    AsMacroCall, BlockId, DefWithBodyId, HasModule, LocalModuleId, Lookup, MacroId,\n-    ModuleId, UnresolvedMacro,\n+    AsMacroCall, BlockId, DefWithBodyId, HasModule, LocalModuleId, Lookup, MacroId, ModuleId,\n+    UnresolvedMacro,\n };\n \n pub use lower::LowerCtx;\n@@ -328,7 +328,6 @@ impl Body {\n                 let e = v.parent.lookup(db);\n                 let src = v.parent.child_source(db);\n                 let variant = &src.value[v.local_id];\n-                // TODO(ole): Handle missing exprs (+1 to the prev)\n                 (src.file_id, e.container, variant.expr())\n             }\n         };"}, {"sha": "141652db73a7e8d8a6aa15477236fba560cd883e", "filename": "crates/hir-ty/src/consteval.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051/crates%2Fhir-ty%2Fsrc%2Fconsteval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051/crates%2Fhir-ty%2Fsrc%2Fconsteval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fconsteval.rs?ref=ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051", "patch": "@@ -203,7 +203,7 @@ pub fn eval_const(\n                 Ok(ComputedExpr::Enum(\n                     get_name(variant, ctx),\n                     variant,\n-                    Literal::Int(value + 1, Some(BuiltinInt::I128)),\n+                    Literal::Int(value, Some(BuiltinInt::I128)),\n                 ))\n             }\n             _ => Err(ConstEvalError::IncompleteExpr),"}, {"sha": "357d43d225317cd108c74fb64e07fcadbf33cc95", "filename": "crates/hir-ty/src/consteval/tests.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051/crates%2Fhir-ty%2Fsrc%2Fconsteval%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051/crates%2Fhir-ty%2Fsrc%2Fconsteval%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir-ty%2Fsrc%2Fconsteval%2Ftests.rs?ref=ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051", "patch": "@@ -87,6 +87,35 @@ fn consts() {\n     );\n }\n \n+#[test]\n+fn enums() {\n+    check_number(\n+        r#\"\n+    enum E {\n+        F1 = 1,\n+        F2 = 2 * E::F1 as u8,\n+        F3 = 3 * E::F2 as u8,\n+    }\n+    const GOAL: i32 = E::F3 as u8;\n+    \"#,\n+        6,\n+    );\n+    let r = eval_goal(\n+        r#\"\n+        enum E { A = 1, }\n+        const GOAL: E = E::A;\n+        \"#,\n+    )\n+    .unwrap();\n+    match r {\n+        ComputedExpr::Enum(name, _, Literal::Uint(val, _)) => {\n+            assert_eq!(name, \"E::A\");\n+            assert_eq!(val, 1);\n+        }\n+        x => panic!(\"Expected enum but found {:?}\", x),\n+    }\n+}\n+\n #[test]\n fn const_loop() {\n     check_fail("}, {"sha": "b656eaa74cad75c0f15b3bdb453e62f5d81b70b4", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051", "patch": "@@ -952,6 +952,10 @@ impl Enum {\n     pub fn ty(self, db: &dyn HirDatabase) -> Type {\n         Type::from_def(db, self.id)\n     }\n+\n+    pub fn is_data_carrying(self, db: &dyn HirDatabase) -> bool {\n+        self.variants(db).iter().all(|v| matches!(v.kind(db), StructKind::Unit))\n+    }\n }\n \n impl HasVisibility for Enum {\n@@ -996,7 +1000,6 @@ impl Variant {\n     }\n \n     pub fn value(self, db: &dyn HirDatabase) -> Option<Expr> {\n-        // TODO(ole): Handle missing exprs (+1 to the prev)\n         self.source(db)?.value.expr()\n     }\n "}, {"sha": "486739628f2aca6fc913916d36626838143e5ef9", "filename": "crates/ide/src/hover/render.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051/crates%2Fide%2Fsrc%2Fhover%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Frender.rs?ref=ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051", "patch": "@@ -348,12 +348,15 @@ pub(super) fn definition(\n         Definition::Module(it) => label_and_docs(db, it),\n         Definition::Function(it) => label_and_docs(db, it),\n         Definition::Adt(it) => label_and_docs(db, it),\n-        Definition::Variant(it) => label_value_and_docs(db, it, |&it| match it.kind(db) {\n-            StructKind::Unit => match it.eval(db) {\n-                Ok(x) => Some(format!(\"{}\", x.enum_value().unwrap_or(x))),\n-                Err(_) => it.value(db).map(|x| format!(\"{:?}\", x)),\n-            },\n-            _ => None,\n+        Definition::Variant(it) => label_value_and_docs(db, it, |&it| {\n+            if it.parent.is_data_carrying(db) {\n+                match it.eval(db) {\n+                    Ok(x) => Some(format!(\"{}\", x.enum_value().unwrap_or(x))),\n+                    Err(_) => it.value(db).map(|x| format!(\"{:?}\", x)),\n+                }\n+            } else {\n+                None\n+            }\n         }),\n         Definition::Const(it) => label_value_and_docs(db, it, |it| {\n             let body = it.eval(db);"}, {"sha": "362b9fa815d37965863806d0ff2e49467f1adffe", "filename": "crates/ide/src/hover/tests.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhover%2Ftests.rs?ref=ad0a6bf1a3eda25698e9ce5cea0743c2cdf9f051", "patch": "@@ -698,6 +698,7 @@ fn hover_enum_variant() {\n     check(\n         r#\"\n enum Option<T> {\n+    Some(T)\n     /// The None variant\n     Non$0e\n }"}]}