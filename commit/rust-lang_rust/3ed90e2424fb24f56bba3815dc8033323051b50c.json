{"sha": "3ed90e2424fb24f56bba3815dc8033323051b50c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZDkwZTI0MjRmYjI0ZjU2YmJhMzgxNWRjODAzMzMyMzA1MWI1MGM=", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2021-05-25T14:44:20Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2021-05-25T14:44:20Z"}, "message": "fix matches! and assert_matches! on edition 2021", "tree": {"sha": "5d7fe3c31465b98c013649c53778ff9dd7e5e8a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d7fe3c31465b98c013649c53778ff9dd7e5e8a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ed90e2424fb24f56bba3815dc8033323051b50c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ed90e2424fb24f56bba3815dc8033323051b50c", "html_url": "https://github.com/rust-lang/rust/commit/3ed90e2424fb24f56bba3815dc8033323051b50c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ed90e2424fb24f56bba3815dc8033323051b50c/comments", "author": null, "committer": null, "parents": [{"sha": "fbf1b1a7193cda17008ab590e06ad28d9924023b", "url": "https://api.github.com/repos/rust-lang/rust/commits/fbf1b1a7193cda17008ab590e06ad28d9924023b", "html_url": "https://github.com/rust-lang/rust/commit/fbf1b1a7193cda17008ab590e06ad28d9924023b"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "a023edaca9e940563911eb1117989b774e4182f6", "filename": "library/core/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3ed90e2424fb24f56bba3815dc8033323051b50c/library%2Fcore%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ed90e2424fb24f56bba3815dc8033323051b50c/library%2Fcore%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Flib.rs?ref=3ed90e2424fb24f56bba3815dc8033323051b50c", "patch": "@@ -168,6 +168,7 @@\n #![feature(no_coverage)] // rust-lang/rust#84605\n #![feature(int_error_matching)]\n #![deny(unsafe_op_in_unsafe_fn)]\n+#![deny(or_patterns_back_compat)]\n \n // allow using `core::` in intra-doc links\n #[allow(unused_extern_crates)]"}, {"sha": "7eb65483b99e77e09ea5825062c6e5828a110d94", "filename": "library/core/src/macros/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3ed90e2424fb24f56bba3815dc8033323051b50c/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ed90e2424fb24f56bba3815dc8033323051b50c/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmacros%2Fmod.rs?ref=3ed90e2424fb24f56bba3815dc8033323051b50c", "patch": "@@ -138,7 +138,7 @@ macro_rules! assert_ne {\n #[unstable(feature = \"assert_matches\", issue = \"82775\")]\n #[allow_internal_unstable(core_panic)]\n macro_rules! assert_matches {\n-    ($left:expr, $( $pattern:pat )|+ $( if $guard: expr )? $(,)?) => ({\n+    ($left:expr, $( $pattern:pat_param )|+ $( if $guard: expr )? $(,)?) => ({\n         match $left {\n             $( $pattern )|+ $( if $guard )? => {}\n             ref left_val => {\n@@ -150,7 +150,7 @@ macro_rules! assert_matches {\n             }\n         }\n     });\n-    ($left:expr, $( $pattern:pat )|+ $( if $guard: expr )?, $($arg:tt)+) => ({\n+    ($left:expr, $( $pattern:pat_param )|+ $( if $guard: expr )?, $($arg:tt)+) => ({\n         match $left {\n             $( $pattern )|+ $( if $guard )? => {}\n             ref left_val => {\n@@ -315,7 +315,7 @@ macro_rules! debug_assert_matches {\n #[macro_export]\n #[stable(feature = \"matches_macro\", since = \"1.42.0\")]\n macro_rules! matches {\n-    ($expression:expr, $( $pattern:pat )|+ $( if $guard: expr )? $(,)?) => {\n+    ($expression:expr, $( $pattern:pat_param )|+ $( if $guard: expr )? $(,)?) => {\n         match $expression {\n             $( $pattern )|+ $( if $guard )? => true,\n             _ => false"}]}