{"sha": "204e2bf5a4828b044a78019a118e12d09bde772d", "node_id": "C_kwDOAAsO6NoAKDIwNGUyYmY1YTQ4MjhiMDQ0YTc4MDE5YTExOGUxMmQwOWJkZTc3MmQ", "commit": {"author": {"name": "Andrew Xie", "email": "ndrew.xie@gmail.com", "date": "2023-04-07T19:56:33Z"}, "committer": {"name": "Andrew Xie", "email": "ndrew.xie@gmail.com", "date": "2023-06-05T01:54:38Z"}, "message": "Updated cranelift codegen to reflect modified trait signature", "tree": {"sha": "ba1cc2d0fb4b8d4f3e945b2e1f24954725fead06", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba1cc2d0fb4b8d4f3e945b2e1f24954725fead06"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/204e2bf5a4828b044a78019a118e12d09bde772d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/204e2bf5a4828b044a78019a118e12d09bde772d", "html_url": "https://github.com/rust-lang/rust/commit/204e2bf5a4828b044a78019a118e12d09bde772d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/204e2bf5a4828b044a78019a118e12d09bde772d/comments", "author": {"login": "ndrewxie", "id": 32971598, "node_id": "MDQ6VXNlcjMyOTcxNTk4", "avatar_url": "https://avatars.githubusercontent.com/u/32971598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ndrewxie", "html_url": "https://github.com/ndrewxie", "followers_url": "https://api.github.com/users/ndrewxie/followers", "following_url": "https://api.github.com/users/ndrewxie/following{/other_user}", "gists_url": "https://api.github.com/users/ndrewxie/gists{/gist_id}", "starred_url": "https://api.github.com/users/ndrewxie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ndrewxie/subscriptions", "organizations_url": "https://api.github.com/users/ndrewxie/orgs", "repos_url": "https://api.github.com/users/ndrewxie/repos", "events_url": "https://api.github.com/users/ndrewxie/events{/privacy}", "received_events_url": "https://api.github.com/users/ndrewxie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ndrewxie", "id": 32971598, "node_id": "MDQ6VXNlcjMyOTcxNTk4", "avatar_url": "https://avatars.githubusercontent.com/u/32971598?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ndrewxie", "html_url": "https://github.com/ndrewxie", "followers_url": "https://api.github.com/users/ndrewxie/followers", "following_url": "https://api.github.com/users/ndrewxie/following{/other_user}", "gists_url": "https://api.github.com/users/ndrewxie/gists{/gist_id}", "starred_url": "https://api.github.com/users/ndrewxie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ndrewxie/subscriptions", "organizations_url": "https://api.github.com/users/ndrewxie/orgs", "repos_url": "https://api.github.com/users/ndrewxie/repos", "events_url": "https://api.github.com/users/ndrewxie/events{/privacy}", "received_events_url": "https://api.github.com/users/ndrewxie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17412bae30db7f8f72218387925b8931f42eb08a", "url": "https://api.github.com/repos/rust-lang/rust/commits/17412bae30db7f8f72218387925b8931f42eb08a", "html_url": "https://github.com/rust-lang/rust/commit/17412bae30db7f8f72218387925b8931f42eb08a"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "d143bcc96ef937f9ccad87daf131cb1d7a0ccce4", "filename": "compiler/rustc_codegen_cranelift/src/driver/aot.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/204e2bf5a4828b044a78019a118e12d09bde772d/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fdriver%2Faot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/204e2bf5a4828b044a78019a118e12d09bde772d/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fdriver%2Faot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Fdriver%2Faot.rs?ref=204e2bf5a4828b044a78019a118e12d09bde772d", "patch": "@@ -54,8 +54,8 @@ impl OngoingCodegen {\n         self,\n         sess: &Session,\n         backend_config: &BackendConfig,\n-    ) -> (CodegenResults, FxHashMap<WorkProductId, WorkProduct>) {\n-        let mut work_products = FxHashMap::default();\n+    ) -> (CodegenResults, FxIndexMap<WorkProductId, WorkProduct>) {\n+        let mut work_products = FxIndexMap::default();\n         let mut modules = vec![];\n \n         for module_codegen in self.modules {"}, {"sha": "095fbe62c1902b1e2a3ca041963a103033b3380c", "filename": "compiler/rustc_codegen_cranelift/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/204e2bf5a4828b044a78019a118e12d09bde772d/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/204e2bf5a4828b044a78019a118e12d09bde772d/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_cranelift%2Fsrc%2Flib.rs?ref=204e2bf5a4828b044a78019a118e12d09bde772d", "patch": "@@ -88,7 +88,7 @@ mod prelude {\n     };\n     pub(crate) use rustc_target::abi::{Abi, FieldIdx, Scalar, Size, VariantIdx, FIRST_VARIANT};\n \n-    pub(crate) use rustc_data_structures::fx::FxHashMap;\n+    pub(crate) use rustc_data_structures::fx::{FxHashMap, FxIndexMap};\n \n     pub(crate) use rustc_index::Idx;\n \n@@ -223,7 +223,7 @@ impl CodegenBackend for CraneliftCodegenBackend {\n         ongoing_codegen: Box<dyn Any>,\n         sess: &Session,\n         _outputs: &OutputFilenames,\n-    ) -> Result<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>), ErrorGuaranteed> {\n+    ) -> Result<(CodegenResults, FxIndexMap<WorkProductId, WorkProduct>), ErrorGuaranteed> {\n         Ok(ongoing_codegen\n             .downcast::<driver::aot::OngoingCodegen>()\n             .unwrap()"}, {"sha": "ea013c4428cce63c1e6fa3631b44ef3d1e9d233e", "filename": "compiler/rustc_codegen_gcc/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/204e2bf5a4828b044a78019a118e12d09bde772d/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/204e2bf5a4828b044a78019a118e12d09bde772d/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Flib.rs?ref=204e2bf5a4828b044a78019a118e12d09bde772d", "patch": "@@ -75,7 +75,7 @@ use rustc_codegen_ssa::back::write::{CodegenContext, FatLTOInput, ModuleConfig,\n use rustc_codegen_ssa::back::lto::{LtoModuleCodegen, SerializedModule, ThinModule};\n use rustc_codegen_ssa::target_features::supported_target_features;\n use rustc_codegen_ssa::traits::{CodegenBackend, ExtraBackendMethods, ModuleBufferMethods, ThinBufferMethods, WriteBackendMethods};\n-use rustc_data_structures::fx::FxHashMap;\n+use rustc_data_structures::fx::FxIndexMap;\n use rustc_errors::{DiagnosticMessage, ErrorGuaranteed, Handler, SubdiagnosticMessage};\n use rustc_fluent_macro::fluent_messages;\n use rustc_metadata::EncodedMetadata;\n@@ -137,7 +137,7 @@ impl CodegenBackend for GccCodegenBackend {\n         Box::new(res)\n     }\n \n-    fn join_codegen(&self, ongoing_codegen: Box<dyn Any>, sess: &Session, _outputs: &OutputFilenames) -> Result<(CodegenResults, FxHashMap<WorkProductId, WorkProduct>), ErrorGuaranteed> {\n+    fn join_codegen(&self, ongoing_codegen: Box<dyn Any>, sess: &Session, _outputs: &OutputFilenames) -> Result<(CodegenResults, FxIndexMap<WorkProductId, WorkProduct>), ErrorGuaranteed> {\n         let (codegen_results, work_products) = ongoing_codegen\n             .downcast::<rustc_codegen_ssa::back::write::OngoingCodegen<GccCodegenBackend>>()\n             .expect(\"Expected GccCodegenBackend's OngoingCodegen, found Box<Any>\")"}]}