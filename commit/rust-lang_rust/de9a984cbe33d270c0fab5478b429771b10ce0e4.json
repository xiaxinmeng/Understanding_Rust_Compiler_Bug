{"sha": "de9a984cbe33d270c0fab5478b429771b10ce0e4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlOWE5ODRjYmUzM2QyNzBjMGZhYjU0NzhiNDI5NzcxYjEwY2UwZTQ=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-02T19:19:19Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-02T19:19:19Z"}, "message": "Merge #6701\n\n6701: Don't prime caches when just opening a file r=jonas-schievink a=jonas-schievink\n\nFixes occasional \"progress handler already registered\" errors.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "399803bc9b52eea44a4353fed4b10f705d150ed8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/399803bc9b52eea44a4353fed4b10f705d150ed8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de9a984cbe33d270c0fab5478b429771b10ce0e4", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfx+i3CRBK7hj4Ov3rIwAAdHIIAKtpBC96YoUJ2ZoB2Md/EunI\ni0lfsec9XF1LRwW6mfcce9R7U2wMh1ufj8RY4aW2vM4wW57M6m1mgboUTnrYZtdV\ntQEWggU3n5vGsXDckhU9JNB/kmoo2WtnzvM2VElZ6t4a8pcGTBV/oZFafC+Js5ie\nklqwSBkIDxxKtcG6cxk2UVwl4X9wjSqws0J2iuHNSIa4oVXBC6leb/PUAVuy2FVE\n8PB+h77f+opmn2T5xNGF5UduCuAgI46l/d3YDCWP3GQdzBRGSBfj4m1YWLKzMKsT\n8ixPbYxmHBmJ1ULlI0Dz0xNWZMU74QsXQcx0S9w6khCCtMzRZtMCaNOqMAx9ouA=\n=dR/v\n-----END PGP SIGNATURE-----\n", "payload": "tree 399803bc9b52eea44a4353fed4b10f705d150ed8\nparent a3043cf53feffef3f69f25c2617801d2fc66ce75\nparent 6da651f5dae29234516453b10f806cc4c8a319f1\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1606936759 +0000\ncommitter GitHub <noreply@github.com> 1606936759 +0000\n\nMerge #6701\n\n6701: Don't prime caches when just opening a file r=jonas-schievink a=jonas-schievink\n\nFixes occasional \"progress handler already registered\" errors.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de9a984cbe33d270c0fab5478b429771b10ce0e4", "html_url": "https://github.com/rust-lang/rust/commit/de9a984cbe33d270c0fab5478b429771b10ce0e4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de9a984cbe33d270c0fab5478b429771b10ce0e4/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3043cf53feffef3f69f25c2617801d2fc66ce75", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3043cf53feffef3f69f25c2617801d2fc66ce75", "html_url": "https://github.com/rust-lang/rust/commit/a3043cf53feffef3f69f25c2617801d2fc66ce75"}, {"sha": "6da651f5dae29234516453b10f806cc4c8a319f1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6da651f5dae29234516453b10f806cc4c8a319f1", "html_url": "https://github.com/rust-lang/rust/commit/6da651f5dae29234516453b10f806cc4c8a319f1"}], "stats": {"total": 33, "additions": 18, "deletions": 15}, "files": [{"sha": "55d46b09e78c7ffedc96b27a7321bc40ddec28ae", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 18, "deletions": 15, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/de9a984cbe33d270c0fab5478b429771b10ce0e4/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de9a984cbe33d270c0fab5478b429771b10ce0e4/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=de9a984cbe33d270c0fab5478b429771b10ce0e4", "patch": "@@ -506,7 +506,7 @@ impl GlobalState {\n                         .write()\n                         .0\n                         .set_file_contents(path, Some(params.text_document.text.into_bytes()));\n-                    this.update_file_notifications_on_threadpool();\n+                    this.maybe_update_diagnostics();\n                 }\n                 Ok(())\n             })?\n@@ -616,6 +616,23 @@ impl GlobalState {\n         Ok(())\n     }\n     fn update_file_notifications_on_threadpool(&mut self) {\n+        self.maybe_update_diagnostics();\n+        self.task_pool.handle.spawn_with_sender({\n+            let snap = self.snapshot();\n+            move |sender| {\n+                snap.analysis\n+                    .prime_caches(|progress| {\n+                        sender.send(Task::PrimeCaches(progress)).unwrap();\n+                    })\n+                    .unwrap_or_else(|_: Canceled| {\n+                        // Pretend that we're done, so that the progress bar is removed. Otherwise\n+                        // the editor may complain about it already existing.\n+                        sender.send(Task::PrimeCaches(PrimeCachesProgress::Finished)).unwrap()\n+                    });\n+            }\n+        });\n+    }\n+    fn maybe_update_diagnostics(&mut self) {\n         let subscriptions = self\n             .mem_docs\n             .keys()\n@@ -644,19 +661,5 @@ impl GlobalState {\n                 Task::Diagnostics(diagnostics)\n             })\n         }\n-        self.task_pool.handle.spawn_with_sender({\n-            let snap = self.snapshot();\n-            move |sender| {\n-                snap.analysis\n-                    .prime_caches(|progress| {\n-                        sender.send(Task::PrimeCaches(progress)).unwrap();\n-                    })\n-                    .unwrap_or_else(|_: Canceled| {\n-                        // Pretend that we're done, so that the progress bar is removed. Otherwise\n-                        // the editor may complain about it already existing.\n-                        sender.send(Task::PrimeCaches(PrimeCachesProgress::Finished)).unwrap()\n-                    });\n-            }\n-        });\n     }\n }"}]}