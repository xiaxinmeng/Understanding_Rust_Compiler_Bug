{"sha": "947e3350e045aab1db9b232542425a3faa856907", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0N2UzMzUwZTA0NWFhYjFkYjliMjMyNTQyNDI1YTNmYWE4NTY5MDc=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-04T20:01:53Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-04T20:01:53Z"}, "message": "module-scoped defloc", "tree": {"sha": "c2e047aa204c2a1177b85b9736e9be572ae778a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2e047aa204c2a1177b85b9736e9be572ae778a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/947e3350e045aab1db9b232542425a3faa856907", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/947e3350e045aab1db9b232542425a3faa856907", "html_url": "https://github.com/rust-lang/rust/commit/947e3350e045aab1db9b232542425a3faa856907", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/947e3350e045aab1db9b232542425a3faa856907/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45fce9034909f2f0c5f6ac70eca7cf87ec3db856", "url": "https://api.github.com/repos/rust-lang/rust/commits/45fce9034909f2f0c5f6ac70eca7cf87ec3db856", "html_url": "https://github.com/rust-lang/rust/commit/45fce9034909f2f0c5f6ac70eca7cf87ec3db856"}], "stats": {"total": 67, "additions": 43, "deletions": 24}, "files": [{"sha": "ffc99fd5f3d8ddf00a325139cffabd0a99787ebf", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/947e3350e045aab1db9b232542425a3faa856907/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/947e3350e045aab1db9b232542425a3faa856907/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=947e3350e045aab1db9b232542425a3faa856907", "patch": "@@ -61,15 +61,18 @@ impl FnId {\n pub struct DefId(u32);\n ra_db::impl_numeric_id!(DefId);\n \n+#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash)]\n+pub(crate) enum DefKind {\n+    Module,\n+    Item,\n+}\n+\n #[derive(Clone, Debug, PartialEq, Eq, Hash)]\n-pub enum DefLoc {\n-    Module {\n-        id: ModuleId,\n-        source_root: SourceRootId,\n-    },\n-    Item {\n-        source_item_id: SourceItemId,\n-    },\n+pub struct DefLoc {\n+    pub(crate) kind: DefKind,\n+    source_root_id: SourceRootId,\n+    module_id: ModuleId,\n+    source_item_id: SourceItemId,\n }\n \n impl DefId {\n@@ -92,12 +95,12 @@ pub enum Def {\n impl DefId {\n     pub fn resolve(self, db: &impl HirDatabase) -> Cancelable<Def> {\n         let loc = self.loc(db);\n-        let res = match loc {\n-            DefLoc::Module { id, source_root } => {\n-                let descr = Module::new(db, source_root, id)?;\n+        let res = match loc.kind {\n+            DefKind::Module => {\n+                let descr = Module::new(db, loc.source_root_id, loc.module_id)?;\n                 Def::Module(descr)\n             }\n-            DefLoc::Item { .. } => Def::Item,\n+            DefKind::Item => Def::Item,\n         };\n         Ok(res)\n     }"}, {"sha": "08ce7c8d1f496e5f3a7dc66f00ac6be0d9d97ecf", "filename": "crates/ra_hir/src/module/mod.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/947e3350e045aab1db9b232542425a3faa856907/crates%2Fra_hir%2Fsrc%2Fmodule%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/947e3350e045aab1db9b232542425a3faa856907/crates%2Fra_hir%2Fsrc%2Fmodule%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule%2Fmod.rs?ref=947e3350e045aab1db9b232542425a3faa856907", "patch": "@@ -14,7 +14,7 @@ use ra_db::{SourceRootId, FileId, FilePosition, Cancelable};\n use relative_path::RelativePathBuf;\n \n use crate::{\n-    DefLoc, DefId, Path, PathKind, HirDatabase, SourceItemId, SourceFileItemId,\n+    DefKind, DefLoc, DefId, Path, PathKind, HirDatabase, SourceItemId, SourceFileItemId,\n     arena::{Arena, Id},\n };\n \n@@ -127,9 +127,11 @@ impl Module {\n     }\n \n     pub fn def_id(&self, db: &impl HirDatabase) -> DefId {\n-        let def_loc = DefLoc::Module {\n-            id: self.module_id,\n-            source_root: self.source_root_id,\n+        let def_loc = DefLoc {\n+            kind: DefKind::Module,\n+            source_root_id: self.source_root_id,\n+            module_id: self.module_id,\n+            source_item_id: self.module_id.source(&self.tree).0,\n         };\n         def_loc.id(db)\n     }\n@@ -161,7 +163,12 @@ impl Module {\n         let segments = path.segments;\n         for name in segments.iter() {\n             let module = match curr.loc(db) {\n-                DefLoc::Module { id, source_root } => Module::new(db, source_root, id)?,\n+                DefLoc {\n+                    kind: DefKind::Module,\n+                    source_root_id,\n+                    module_id,\n+                    ..\n+                } => Module::new(db, source_root_id, module_id)?,\n                 _ => return Ok(None),\n             };\n             let scope = module.scope(db)?;"}, {"sha": "c2b380a8067ec493340349c1f9fd349b6e543a4e", "filename": "crates/ra_hir/src/module/nameres.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/947e3350e045aab1db9b232542425a3faa856907/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/947e3350e045aab1db9b232542425a3faa856907/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmodule%2Fnameres.rs?ref=947e3350e045aab1db9b232542425a3faa856907", "patch": "@@ -28,7 +28,7 @@ use ra_db::SourceRootId;\n \n use crate::{\n     Cancelable, FileId,\n-    DefId, DefLoc,\n+    DefId, DefLoc, DefKind,\n     SourceItemId, SourceFileItemId, SourceFileItems,\n     Path, PathKind,\n     HirDatabase,\n@@ -247,7 +247,10 @@ where\n                 // handle submodules separatelly\n                 continue;\n             }\n-            let def_loc = DefLoc::Item {\n+            let def_loc = DefLoc {\n+                kind: DefKind::Item,\n+                source_root_id: self.source_root,\n+                module_id,\n                 source_item_id: SourceItemId {\n                     file_id,\n                     item_id: item.id,\n@@ -261,10 +264,12 @@ where\n             module_items.items.insert(item.name.clone(), resolution);\n         }\n \n-        for (name, mod_id) in module_id.children(&self.module_tree) {\n-            let def_loc = DefLoc::Module {\n-                id: mod_id,\n-                source_root: self.source_root,\n+        for (name, module_id) in module_id.children(&self.module_tree) {\n+            let def_loc = DefLoc {\n+                kind: DefKind::Module,\n+                source_root_id: self.source_root,\n+                module_id,\n+                source_item_id: module_id.source(&self.module_tree).0,\n             };\n             let def_id = def_loc.id(self.db);\n             let resolution = Resolution {\n@@ -316,7 +321,11 @@ where\n \n             if !is_last {\n                 curr = match def_id.loc(self.db) {\n-                    DefLoc::Module { id, .. } => id,\n+                    DefLoc {\n+                        kind: DefKind::Module,\n+                        module_id,\n+                        ..\n+                    } => module_id,\n                     _ => return,\n                 }\n             } else {"}]}