{"sha": "2bcb0182532ba42dde98dfb0262b52f34acd384f", "node_id": "C_kwDOAAsO6NoAKDJiY2IwMTgyNTMyYmE0MmRkZTk4ZGZiMDI2MmI1MmYzNGFjZDM4NGY", "commit": {"author": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2023-04-16T21:44:09Z"}, "committer": {"name": "DrMeepster", "email": "19316085+DrMeepster@users.noreply.github.com", "date": "2023-04-21T09:14:03Z"}, "message": "fmt", "tree": {"sha": "a383b2f5f934ddae0e8a44f38dda03605a495d0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a383b2f5f934ddae0e8a44f38dda03605a495d0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2bcb0182532ba42dde98dfb0262b52f34acd384f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2bcb0182532ba42dde98dfb0262b52f34acd384f", "html_url": "https://github.com/rust-lang/rust/commit/2bcb0182532ba42dde98dfb0262b52f34acd384f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2bcb0182532ba42dde98dfb0262b52f34acd384f/comments", "author": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "committer": {"login": "DrMeepster", "id": 19316085, "node_id": "MDQ6VXNlcjE5MzE2MDg1", "avatar_url": "https://avatars.githubusercontent.com/u/19316085?v=4", "gravatar_id": "", "url": "https://api.github.com/users/DrMeepster", "html_url": "https://github.com/DrMeepster", "followers_url": "https://api.github.com/users/DrMeepster/followers", "following_url": "https://api.github.com/users/DrMeepster/following{/other_user}", "gists_url": "https://api.github.com/users/DrMeepster/gists{/gist_id}", "starred_url": "https://api.github.com/users/DrMeepster/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/DrMeepster/subscriptions", "organizations_url": "https://api.github.com/users/DrMeepster/orgs", "repos_url": "https://api.github.com/users/DrMeepster/repos", "events_url": "https://api.github.com/users/DrMeepster/events{/privacy}", "received_events_url": "https://api.github.com/users/DrMeepster/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "631ea7cc1510c4559ff6a4108b8a3f7b9e615908", "url": "https://api.github.com/repos/rust-lang/rust/commits/631ea7cc1510c4559ff6a4108b8a3f7b9e615908", "html_url": "https://github.com/rust-lang/rust/commit/631ea7cc1510c4559ff6a4108b8a3f7b9e615908"}], "stats": {"total": 25, "additions": 12, "deletions": 13}, "files": [{"sha": "3ae5b45d330249ced651f4933bb4688349124563", "filename": "compiler/rustc_passes/src/dead.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2bcb0182532ba42dde98dfb0262b52f34acd384f/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bcb0182532ba42dde98dfb0262b52f34acd384f/compiler%2Frustc_passes%2Fsrc%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fdead.rs?ref=2bcb0182532ba42dde98dfb0262b52f34acd384f", "patch": "@@ -255,16 +255,13 @@ impl<'tcx> MarkSymbolVisitor<'tcx> {\n                     self.insert_def_id(field.did);\n                     let field_ty = field.ty(self.tcx, subst);\n \n-                    current_ty =\n-                        self.tcx.normalize_erasing_regions(param_env, field_ty);\n+                    current_ty = self.tcx.normalize_erasing_regions(param_env, field_ty);\n                 }\n                 // we don't need to mark tuple fields as live,\n                 // but we may need to mark subfields\n                 ty::Tuple(tys) => {\n-                    current_ty = self.tcx.normalize_erasing_regions(\n-                        param_env,\n-                        tys[index.as_usize()],\n-                    );\n+                    current_ty =\n+                        self.tcx.normalize_erasing_regions(param_env, tys[index.as_usize()]);\n                 }\n                 _ => span_bug!(expr.span, \"named field access on non-ADT\"),\n             }"}, {"sha": "2351406ddd252fe9e9a9f46ea1d55e7773a0d78f", "filename": "library/core/tests/mem.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2bcb0182532ba42dde98dfb0262b52f34acd384f/library%2Fcore%2Ftests%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bcb0182532ba42dde98dfb0262b52f34acd384f/library%2Fcore%2Ftests%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fmem.rs?ref=2bcb0182532ba42dde98dfb0262b52f34acd384f", "patch": "@@ -458,4 +458,4 @@ fn offset_of_addr() {\n     assert_eq!(ptr::addr_of!(base).addr() + offset_of!(Foo, y), ptr::addr_of!(base.y).addr());\n     assert_eq!(ptr::addr_of!(base).addr() + offset_of!(Foo, z.0), ptr::addr_of!(base.z.0).addr());\n     assert_eq!(ptr::addr_of!(base).addr() + offset_of!(Foo, z.1), ptr::addr_of!(base.z.1).addr());\n-}\n\\ No newline at end of file\n+}"}, {"sha": "ae5d5a68e6a6189dd0d232768f64b15e03bb500f", "filename": "tests/ui/lint/dead-code/offset-of-correct-param-env.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2bcb0182532ba42dde98dfb0262b52f34acd384f/tests%2Fui%2Flint%2Fdead-code%2Foffset-of-correct-param-env.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2bcb0182532ba42dde98dfb0262b52f34acd384f/tests%2Fui%2Flint%2Fdead-code%2Foffset-of-correct-param-env.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Fdead-code%2Foffset-of-correct-param-env.rs?ref=2bcb0182532ba42dde98dfb0262b52f34acd384f", "patch": "@@ -27,14 +27,16 @@ fn test<T>() -> usize\n where\n     GenericIsEqual<T>: Project<EquateParamTo = MyFieldIsNotDead>,\n {\n-\t// The first field of the A that we construct here is `<GenericIsEqual<T>> as Project>::EquateParamTo`.\n-\t// Typeck normalizes this and figures that the not_dead field is totally fine and accessible.\n-\t// But importantly, the normalization ends up with T, which, as we've declared in our param env is MyFieldDead.\n-\t// When we're in the param env of the `a` field, the where bound above is not in scope, so we don't know what T is - it's generic.\n-\t// We cannot access a field on T. Boom!\n+    // The first field of the A that we construct here is\n+    // `<GenericIsEqual<T>> as Project>::EquateParamTo`.\n+    // Typeck normalizes this and figures that the not_dead field is totally fine and accessible.\n+    // But importantly, the normalization ends up with T, which, as we've declared in our param\n+    // env is MyFieldDead. When we're in the param env of the `a` field, the where bound above\n+    // is not in scope, so we don't know what T is - it's generic.\n+    // We cannot access a field on T. Boom!\n     std::mem::offset_of!(A<GenericIsEqual<T>>, a.not_dead)\n }\n \n fn main() {\n     test::<MyFieldIsNotDead>();\n-}\n\\ No newline at end of file\n+}"}]}