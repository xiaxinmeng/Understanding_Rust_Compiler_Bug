{"sha": "8cfc69ecea9874ad28253ecc47d50099f9e7001e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjZmM2OWVjZWE5ODc0YWQyODI1M2VjYzQ3ZDUwMDk5ZjllNzAwMWU=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-09-07T02:49:02Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2016-09-07T02:49:02Z"}, "message": "add utility musl_root method, update config.toml.example", "tree": {"sha": "9f7a4a5a0b08ebed9ec5290adb03e320edb6442e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f7a4a5a0b08ebed9ec5290adb03e320edb6442e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8cfc69ecea9874ad28253ecc47d50099f9e7001e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8cfc69ecea9874ad28253ecc47d50099f9e7001e", "html_url": "https://github.com/rust-lang/rust/commit/8cfc69ecea9874ad28253ecc47d50099f9e7001e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8cfc69ecea9874ad28253ecc47d50099f9e7001e/comments", "author": null, "committer": null, "parents": [{"sha": "8df4a768a7e98a594bd7a2d70a7bdcec14bc0518", "url": "https://api.github.com/repos/rust-lang/rust/commits/8df4a768a7e98a594bd7a2d70a7bdcec14bc0518", "html_url": "https://github.com/rust-lang/rust/commit/8df4a768a7e98a594bd7a2d70a7bdcec14bc0518"}], "stats": {"total": 23, "additions": 15, "deletions": 8}, "files": [{"sha": "dbb356c82e6fbdc7714f0fef7f7ea49dd6751aa0", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8cfc69ecea9874ad28253ecc47d50099f9e7001e/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cfc69ecea9874ad28253ecc47d50099f9e7001e/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=8cfc69ecea9874ad28253ecc47d50099f9e7001e", "patch": "@@ -60,8 +60,7 @@ pub fn std<'a>(build: &'a Build, target: &str, compiler: &Compiler<'a>) {\n         }\n     }\n     if target.contains(\"musl\") {\n-        if let Some(p) = build.config.target_config[target].musl_root.as_ref()\n-            .or(build.config.musl_root.as_ref()) {\n+        if let Some(p) = build.musl_root(target) {\n             cargo.env(\"MUSL_ROOT\", p);\n         }\n     }"}, {"sha": "1b453baa29846d56002c03ddf0ac57e116415489", "filename": "src/bootstrap/config.toml.example", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8cfc69ecea9874ad28253ecc47d50099f9e7001e/src%2Fbootstrap%2Fconfig.toml.example", "raw_url": "https://github.com/rust-lang/rust/raw/8cfc69ecea9874ad28253ecc47d50099f9e7001e/src%2Fbootstrap%2Fconfig.toml.example", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.toml.example?ref=8cfc69ecea9874ad28253ecc47d50099f9e7001e", "patch": "@@ -115,10 +115,6 @@\n # nightly features\n #channel = \"dev\"\n \n-# The root location of the MUSL installation directory. The library directory\n-# will also need to contain libunwind.a for an unwinding implementation.\n-#musl-root = \"...\"\n-\n # By default the `rustc` executable is built with `-Wl,-rpath` flags on Unix\n # platforms to ensure that the compiler is usable by default from the build\n # directory (as it links to a number of dynamic libraries). This may not be\n@@ -160,3 +156,9 @@\n # the NDK for the target lives. This is used to find the C compiler to link and\n # build native code.\n #android-ndk = \"/path/to/ndk\"\n+\n+# The root location of the MUSL installation directory. The library directory\n+# will also need to contain libunwind.a for an unwinding implementation. Note\n+# that this option only makes sense for MUSL targets that produce statically\n+# linked binaries\n+#musl-root = \"...\""}, {"sha": "94c14f7ea254664902d390557a0bb0dda87bbcc8", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8cfc69ecea9874ad28253ecc47d50099f9e7001e/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cfc69ecea9874ad28253ecc47d50099f9e7001e/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=8cfc69ecea9874ad28253ecc47d50099f9e7001e", "patch": "@@ -977,6 +977,13 @@ impl Build {\n         }\n         return base\n     }\n+\n+    /// Returns the \"musl root\" for this `target`, if defined\n+    fn musl_root(&self, target: &str) -> Option<&Path> {\n+        self.config.target_config[target].musl_root.as_ref()\n+            .or(self.config.musl_root.as_ref())\n+            .map(|p| &**p)\n+    }\n }\n \n impl<'a> Compiler<'a> {"}, {"sha": "c69f9489c306d5dd2e63942cabbd25467c782f4b", "filename": "src/bootstrap/sanity.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8cfc69ecea9874ad28253ecc47d50099f9e7001e/src%2Fbootstrap%2Fsanity.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8cfc69ecea9874ad28253ecc47d50099f9e7001e/src%2Fbootstrap%2Fsanity.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fsanity.rs?ref=8cfc69ecea9874ad28253ecc47d50099f9e7001e", "patch": "@@ -111,8 +111,7 @@ pub fn check(build: &mut Build) {\n \n         // Make sure musl-root is valid if specified\n         if target.contains(\"musl\") && !target.contains(\"mips\") {\n-            match build.config.target_config[target].musl_root.as_ref()\n-                .or(build.config.musl_root.as_ref()) {\n+            match build.musl_root(target) {\n                 Some(root) => {\n                     if fs::metadata(root.join(\"lib/libc.a\")).is_err() {\n                         panic!(\"couldn't find libc.a in musl dir: {}\","}]}