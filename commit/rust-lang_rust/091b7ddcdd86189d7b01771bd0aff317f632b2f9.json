{"sha": "091b7ddcdd86189d7b01771bd0aff317f632b2f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MWI3ZGRjZGQ4NjE4OWQ3YjAxNzcxYmQwYWZmMzE3ZjYzMmIyZjk=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-05-01T21:55:19Z"}, "committer": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-05-01T21:55:19Z"}, "message": "Add regression test", "tree": {"sha": "dc866eba091f8792574db3bb9227d02865a10757", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc866eba091f8792574db3bb9227d02865a10757"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/091b7ddcdd86189d7b01771bd0aff317f632b2f9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE7J9Gc3TfBwj2K399tAh+UQ6YsWQFAmCNzkcACgkQtAh+UQ6Y\nsWSgwRAAmLLCK0jYkhkpkR0niSQEmk1On4jP5SV4YDc9C9/5MFh929QX6pAlMnzW\nHY94XKO/cJIWBS/FDpGU9a+bb693nV/wigwxqfY2hafXLWB54n8dddHfBnMEpqnv\nxyaDPcBdJtxMVIMyKI7xyCake6QoKOfoJjUpK5fPMyhmKBeo1X/flZN1+3HVJEBo\nGceyXNbOMUVyc+f6bqEuIm+oEhzEd8hVF02ytktB8RkGhykGoB0u0uf+XXkNoFx5\n/bG3APAAqQ5spfvAmUMsFACYMuuSTPKKmltXDdA8+5qoEJwZr1vbMlrOEBGGmMmK\n1KwfEvxaOzbjWBtI9AhoDwJZy9lsjgSo9hTAip+v8p6odh7LWJsB6+U0wx7OhW2Q\nTBGjLcRALEMNeKUfgW9pW/DroLqoycysyTQHQKcMwSnpcKXIgn+c0bKQB/6lH0XE\n/9BNZdFwKuD7TKm7r36YP4l4grjmiN/57kqTad0syO4VJeJQ8IHR2pwgTSruNi/S\n96N0ESTIXifJfrUuiGX8tjIT6h0ycFNQnfPD242+esdjRryOCegceAyfOZewHdNo\no9k0isGtFXFtzucIKiJqNNcUQ46cQPkjJ1ljQiAC2m4rX1d5WSfA9vqDHdrvHAV+\nKCmVyXbj9InPzxsNXgwbqPQhpcqYWL7TwiFg8EIJkpsxaIGQfbM=\n=q3UE\n-----END PGP SIGNATURE-----", "payload": "tree dc866eba091f8792574db3bb9227d02865a10757\nparent 91daf705b442c8200985eb7f2e99784898844263\nauthor Aaron Hill <aa1ronham@gmail.com> 1619906119 -0400\ncommitter Aaron Hill <aa1ronham@gmail.com> 1619906119 -0400\n\nAdd regression test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/091b7ddcdd86189d7b01771bd0aff317f632b2f9", "html_url": "https://github.com/rust-lang/rust/commit/091b7ddcdd86189d7b01771bd0aff317f632b2f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/091b7ddcdd86189d7b01771bd0aff317f632b2f9/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "91daf705b442c8200985eb7f2e99784898844263", "url": "https://api.github.com/repos/rust-lang/rust/commits/91daf705b442c8200985eb7f2e99784898844263", "html_url": "https://github.com/rust-lang/rust/commit/91daf705b442c8200985eb7f2e99784898844263"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "1494001564fe717f76c5cebbe905144184543cca", "filename": "src/test/ui/traits/issue-84399-bad-fresh-caching.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/091b7ddcdd86189d7b01771bd0aff317f632b2f9/src%2Ftest%2Fui%2Ftraits%2Fissue-84399-bad-fresh-caching.rs", "raw_url": "https://github.com/rust-lang/rust/raw/091b7ddcdd86189d7b01771bd0aff317f632b2f9/src%2Ftest%2Fui%2Ftraits%2Fissue-84399-bad-fresh-caching.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-84399-bad-fresh-caching.rs?ref=091b7ddcdd86189d7b01771bd0aff317f632b2f9", "patch": "@@ -0,0 +1,55 @@\n+// compile-flags: --crate-type lib\n+// check-pass\n+//\n+// Regression test for issue #84399\n+// Tests that we keep the full `ParamEnv` when\n+// caching predicates with freshened types in the global cache\n+\n+use std::marker::PhantomData;\n+pub trait Allocator<R> {\n+    type Buffer;\n+}\n+pub struct DefaultAllocator;\n+impl <R> Allocator<R> for DefaultAllocator {\n+    type Buffer = ();\n+}\n+pub type Owned<R> = <DefaultAllocator as Allocator<R>>::Buffer;\n+pub type MatrixMN<R> = Matrix<R, Owned<R>>;\n+pub type Matrix4<N> = Matrix<N, ()>;\n+pub struct Matrix<R, S> {\n+    pub data: S,\n+    _phantoms: PhantomData<R>,\n+}\n+pub fn set_object_transform(matrix: &Matrix4<()>) {\n+    matrix.js_buffer_view();\n+}\n+pub trait Storable {\n+    type Cell;\n+    fn slice_to_items(_buffer: &()) -> &[Self::Cell] {\n+        unimplemented!()\n+    }\n+}\n+pub type Cell<T> = <T as Storable>::Cell;\n+impl<R> Storable for MatrixMN<R>\n+where\n+    DefaultAllocator: Allocator<R>,\n+{\n+    type Cell = ();\n+}\n+pub trait JsBufferView {\n+    fn js_buffer_view(&self) -> usize {\n+        unimplemented!()\n+    }\n+}\n+impl<R> JsBufferView for [MatrixMN<R>]\n+where\n+    DefaultAllocator: Allocator<R>,\n+    MatrixMN<R>: Storable,\n+    [Cell<MatrixMN<R>>]: JsBufferView,\n+{\n+    fn js_buffer_view(&self) -> usize {\n+        <MatrixMN<R> as Storable>::slice_to_items(&()).js_buffer_view()\n+    }\n+}\n+impl JsBufferView for [()] {}\n+impl<R> JsBufferView for MatrixMN<R> where DefaultAllocator: Allocator<R> {}"}]}