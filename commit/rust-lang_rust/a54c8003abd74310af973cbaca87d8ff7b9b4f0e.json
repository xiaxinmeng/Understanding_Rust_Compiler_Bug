{"sha": "a54c8003abd74310af973cbaca87d8ff7b9b4f0e", "node_id": "C_kwDOAAsO6NoAKGE1NGM4MDAzYWJkNzQzMTBhZjk3M2NiYWNhODdkOGZmN2I5YjRmMGU", "commit": {"author": {"name": "SLASHLogin", "email": "loginmlgxd@gmail.com", "date": "2022-08-25T13:42:20Z"}, "committer": {"name": "SLASHLogin", "email": "loginmlgxd@gmail.com", "date": "2022-11-09T13:56:20Z"}, "message": "Formatting", "tree": {"sha": "912efe323d4da517f8e1c1c02249825c27bdca30", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/912efe323d4da517f8e1c1c02249825c27bdca30"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a54c8003abd74310af973cbaca87d8ff7b9b4f0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a54c8003abd74310af973cbaca87d8ff7b9b4f0e", "html_url": "https://github.com/rust-lang/rust/commit/a54c8003abd74310af973cbaca87d8ff7b9b4f0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a54c8003abd74310af973cbaca87d8ff7b9b4f0e/comments", "author": {"login": "SLASHLogin", "id": 24846525, "node_id": "MDQ6VXNlcjI0ODQ2NTI1", "avatar_url": "https://avatars.githubusercontent.com/u/24846525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SLASHLogin", "html_url": "https://github.com/SLASHLogin", "followers_url": "https://api.github.com/users/SLASHLogin/followers", "following_url": "https://api.github.com/users/SLASHLogin/following{/other_user}", "gists_url": "https://api.github.com/users/SLASHLogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SLASHLogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SLASHLogin/subscriptions", "organizations_url": "https://api.github.com/users/SLASHLogin/orgs", "repos_url": "https://api.github.com/users/SLASHLogin/repos", "events_url": "https://api.github.com/users/SLASHLogin/events{/privacy}", "received_events_url": "https://api.github.com/users/SLASHLogin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SLASHLogin", "id": 24846525, "node_id": "MDQ6VXNlcjI0ODQ2NTI1", "avatar_url": "https://avatars.githubusercontent.com/u/24846525?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SLASHLogin", "html_url": "https://github.com/SLASHLogin", "followers_url": "https://api.github.com/users/SLASHLogin/followers", "following_url": "https://api.github.com/users/SLASHLogin/following{/other_user}", "gists_url": "https://api.github.com/users/SLASHLogin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SLASHLogin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SLASHLogin/subscriptions", "organizations_url": "https://api.github.com/users/SLASHLogin/orgs", "repos_url": "https://api.github.com/users/SLASHLogin/repos", "events_url": "https://api.github.com/users/SLASHLogin/events{/privacy}", "received_events_url": "https://api.github.com/users/SLASHLogin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "575f6098da83cef33676ef67e39b73b2b910a042", "url": "https://api.github.com/repos/rust-lang/rust/commits/575f6098da83cef33676ef67e39b73b2b910a042", "html_url": "https://github.com/rust-lang/rust/commit/575f6098da83cef33676ef67e39b73b2b910a042"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "c9af545a81823bfd3145afe0a41eabb3ab263c95", "filename": "compiler/rustc_codegen_llvm/src/errors.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/a54c8003abd74310af973cbaca87d8ff7b9b4f0e/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a54c8003abd74310af973cbaca87d8ff7b9b4f0e/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Ferrors.rs?ref=a54c8003abd74310af973cbaca87d8ff7b9b4f0e", "patch": "@@ -1,14 +1,17 @@\n+use rustc_errors::fluent;\n use rustc_errors::DiagnosticBuilder;\n use rustc_session::SessionDiagnostic;\n-use rustc_errors::fluent;\n \n pub(crate) enum UnknownCTargetFeature {\n     UnknownFeaturePrefix { feature: String },\n     UnknownFeature { feature: String, rust_feature: Option<String> },\n }\n \n impl SessionDiagnostic<'_, ()> for UnknownCTargetFeature {\n-    fn into_diagnostic(self, sess: &'_ rustc_session::parse::ParseSess) -> DiagnosticBuilder<'_, ()> {\n+    fn into_diagnostic(\n+        self,\n+        sess: &'_ rustc_session::parse::ParseSess,\n+    ) -> DiagnosticBuilder<'_, ()> {\n         match self {\n             UnknownCTargetFeature::UnknownFeaturePrefix { feature } => {\n                 let mut diag = sess.struct_warn(fluent::codegen_llvm::unknown_ctarget_feature);\n@@ -30,4 +33,4 @@ impl SessionDiagnostic<'_, ()> for UnknownCTargetFeature {\n             }\n         }\n     }\n-}\n\\ No newline at end of file\n+}"}, {"sha": "81b325fee2d73b9b7aa6536836e77768271418d1", "filename": "compiler/rustc_codegen_llvm/src/llvm_util.rs", "status": "modified", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a54c8003abd74310af973cbaca87d8ff7b9b4f0e/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a54c8003abd74310af973cbaca87d8ff7b9b4f0e/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm_util.rs?ref=a54c8003abd74310af973cbaca87d8ff7b9b4f0e", "patch": "@@ -1,6 +1,6 @@\n use crate::back::write::create_informational_target_machine;\n-use crate::llvm;\n use crate::errors::UnknownCTargetFeature;\n+use crate::llvm;\n use libc::c_int;\n use rustc_codegen_ssa::target_features::{\n     supported_target_features, tied_target_features, RUSTC_SPECIFIC_FEATURES,\n@@ -435,7 +435,9 @@ pub(crate) fn global_llvm_features(sess: &Session, diagnostics: bool) -> Vec<Str\n                 Some(c @ '+' | c @ '-') => c,\n                 Some(_) => {\n                     if diagnostics {\n-                        sess.emit_warning(UnknownCTargetFeature::UnknownFeaturePrefix { feature: s.to_string() });\n+                        sess.emit_warning(UnknownCTargetFeature::UnknownFeaturePrefix {\n+                            feature: s.to_string(),\n+                        });\n                     }\n                     return None;\n                 }\n@@ -452,7 +454,10 @@ pub(crate) fn global_llvm_features(sess: &Session, diagnostics: bool) -> Vec<Str\n                         None\n                     }\n                 });\n-                sess.emit_warning(UnknownCTargetFeature::UnknownFeature { feature: feature.to_string(), rust_feature: rust_feature.map(|f| f.to_string()) });\n+                sess.emit_warning(UnknownCTargetFeature::UnknownFeature {\n+                    feature: feature.to_string(),\n+                    rust_feature: rust_feature.map(|f| f.to_string()),\n+                });\n             }\n \n             if diagnostics {"}]}