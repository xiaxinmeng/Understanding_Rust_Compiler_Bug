{"sha": "8c6c15a0965e01807a3d7915487c6915c9048edc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjNmMxNWEwOTY1ZTAxODA3YTNkNzkxNTQ4N2M2OTE1YzkwNDhlZGM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-05T05:29:40Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-11-06T04:52:25Z"}, "message": "Remove unused args from format_generics()", "tree": {"sha": "d505bc155cdfefc9d313a732fb9a21ca77ae1cc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d505bc155cdfefc9d313a732fb9a21ca77ae1cc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c6c15a0965e01807a3d7915487c6915c9048edc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c6c15a0965e01807a3d7915487c6915c9048edc", "html_url": "https://github.com/rust-lang/rust/commit/8c6c15a0965e01807a3d7915487c6915c9048edc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c6c15a0965e01807a3d7915487c6915c9048edc/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3f286a0dc68be3cd1775f50d9240001a3869e7c", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3f286a0dc68be3cd1775f50d9240001a3869e7c", "html_url": "https://github.com/rust-lang/rust/commit/a3f286a0dc68be3cd1775f50d9240001a3869e7c"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "3314154e4a40a94e17e9eb25c5e74e2c6b563d6d", "filename": "src/items.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8c6c15a0965e01807a3d7915487c6915c9048edc/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c6c15a0965e01807a3d7915487c6915c9048edc/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=8c6c15a0965e01807a3d7915487c6915c9048edc", "patch": "@@ -428,8 +428,6 @@ impl<'a> FmtVisitor<'a> {\n         let generics_str = format_generics(\n             &self.get_context(),\n             generics,\n-            \"{\",\n-            \"{\",\n             self.config.item_brace_style(),\n             enum_def.variants.is_empty(),\n             self.block_indent,\n@@ -1079,8 +1077,6 @@ pub fn format_struct_struct(\n         Some(g) => format_generics(\n             context,\n             g,\n-            \"{\",\n-            \"{\",\n             context.config.item_brace_style(),\n             fields.is_empty(),\n             offset,\n@@ -2693,8 +2689,6 @@ fn format_header(item_name: &str, ident: ast::Ident, vis: &ast::Visibility) -> S\n fn format_generics(\n     context: &RewriteContext,\n     generics: &ast::Generics,\n-    opener: &str,\n-    terminator: &str,\n     brace_style: BraceStyle,\n     force_same_line_brace: bool,\n     offset: Indent,\n@@ -2720,7 +2714,7 @@ fn format_generics(\n             brace_style,\n             Shape::legacy(budget, offset.block_only()),\n             Density::Tall,\n-            terminator,\n+            \"{\",\n             Some(span.hi()),\n             span_end_before_where,\n             option,\n@@ -2740,9 +2734,11 @@ fn format_generics(\n     // and hence we take the closer into account as well for one line budget.\n     // We assume that the closer has the same length as the opener.\n     let overhead = if force_same_line_brace {\n-        1 + opener.len() + opener.len()\n+        // 3 = ` {}`\n+        3\n     } else {\n-        1 + opener.len()\n+        // 2 = ` {`\n+        2\n     };\n     let forbid_same_line_brace = overhead > remaining_budget;\n     if !forbid_same_line_brace && same_line_brace {\n@@ -2751,7 +2747,7 @@ fn format_generics(\n         result.push('\\n');\n         result.push_str(&offset.block_only().to_string(context.config));\n     }\n-    result.push_str(opener);\n+    result.push('{');\n \n     Some(result)\n }"}]}