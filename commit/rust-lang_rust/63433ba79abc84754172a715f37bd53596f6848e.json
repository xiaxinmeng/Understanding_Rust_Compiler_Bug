{"sha": "63433ba79abc84754172a715f37bd53596f6848e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzNDMzYmE3OWFiYzg0NzU0MTcyYTcxNWYzN2JkNTM1OTZmNjg0OGU=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2019-09-25T08:55:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-25T08:55:32Z"}, "message": "Merge #1906\n\n1906: Add missing lang-items to `def_crates` r=matklad a=sinkuu\n\n\n\nCo-authored-by: Shotaro Yamada <sinkuu@sinkuu.xyz>", "tree": {"sha": "867d5cda3e0befea6cc700a53c21663bb1fa9838", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/867d5cda3e0befea6cc700a53c21663bb1fa9838"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63433ba79abc84754172a715f37bd53596f6848e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdiyuECRBK7hj4Ov3rIwAAdHIIAJvzIgDyipyqEprtt/6pRtza\nfmHPKZgBk6RY+6D9bb8cvLgy5i2ZFL/bduL+0TfTQs3NxnNLYFtGth6j9I3EH0Fw\n3oCICSl0JktJWb7Rdb7uepH36oCok7HB6ZFbS6jcLPwWBz6/o2xMLahQoc3vm+X7\nVNPLp3ZKw4IFL8s1oddcyuFNe1VsbvWXKO6Rz6P1E+R28Wz+iCDV4gx/0Kmd1qhG\nlBY9JnXO98VGBWsMd9K2xHsLmtHg/dZP8rBeTjlB8WUWK3btKT185tJe/LILc6yb\npygSSjnVTTuocmBFqKryR41IUz3JhXVfaf7hEKdIEqaOVa/6x+uUpCQXxTot6LU=\n=cpNP\n-----END PGP SIGNATURE-----\n", "payload": "tree 867d5cda3e0befea6cc700a53c21663bb1fa9838\nparent 6bac2d0a637a6d0b3922a6f8fe05fa32d6d43b15\nparent 89d0ff16230a082dd6c8f3eb4330481e6db68b44\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1569401732 +0000\ncommitter GitHub <noreply@github.com> 1569401732 +0000\n\nMerge #1906\n\n1906: Add missing lang-items to `def_crates` r=matklad a=sinkuu\n\n\n\nCo-authored-by: Shotaro Yamada <sinkuu@sinkuu.xyz>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63433ba79abc84754172a715f37bd53596f6848e", "html_url": "https://github.com/rust-lang/rust/commit/63433ba79abc84754172a715f37bd53596f6848e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63433ba79abc84754172a715f37bd53596f6848e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bac2d0a637a6d0b3922a6f8fe05fa32d6d43b15", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bac2d0a637a6d0b3922a6f8fe05fa32d6d43b15", "html_url": "https://github.com/rust-lang/rust/commit/6bac2d0a637a6d0b3922a6f8fe05fa32d6d43b15"}, {"sha": "89d0ff16230a082dd6c8f3eb4330481e6db68b44", "url": "https://api.github.com/repos/rust-lang/rust/commits/89d0ff16230a082dd6c8f3eb4330481e6db68b44", "html_url": "https://github.com/rust-lang/rust/commit/89d0ff16230a082dd6c8f3eb4330481e6db68b44"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "4b71b376fdc937bef038fe3af7e1c7d5fa5b3908", "filename": "crates/ra_hir/src/ty/method_resolution.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/63433ba79abc84754172a715f37bd53596f6848e/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63433ba79abc84754172a715f37bd53596f6848e/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fty%2Fmethod_resolution.rs?ref=63433ba79abc84754172a715f37bd53596f6848e", "patch": "@@ -16,6 +16,7 @@ use crate::{\n     resolve::Resolver,\n     ty::primitive::{FloatBitness, UncertainFloatTy, UncertainIntTy},\n     ty::{Ty, TypeCtor},\n+    type_ref::Mutability,\n     AssocItem, Crate, Function, Module, Name, Trait,\n };\n \n@@ -130,7 +131,7 @@ fn def_crates(db: &impl HirDatabase, cur_crate: Crate, ty: &Ty) -> Option<ArrayV\n         ($db:expr, $cur_crate:expr, $($name:expr),+ $(,)?) => {{\n             let mut v = ArrayVec::<[Crate; 2]>::new();\n             $(\n-                v.push($db.lang_item($cur_crate, $name.into())?.krate($db)?);\n+                v.extend($db.lang_item($cur_crate, $name.into()).and_then(|item| item.krate($db)));\n             )+\n             Some(v)\n         }};\n@@ -149,8 +150,10 @@ fn def_crates(db: &impl HirDatabase, cur_crate: Crate, ty: &Ty) -> Option<ArrayV\n             TypeCtor::Int(UncertainIntTy::Known(i)) => {\n                 lang_item_crate!(db, cur_crate, i.ty_to_string())\n             }\n-            TypeCtor::Str => lang_item_crate!(db, cur_crate, \"str\"),\n+            TypeCtor::Str => lang_item_crate!(db, cur_crate, \"str_alloc\", \"str\"),\n             TypeCtor::Slice => lang_item_crate!(db, cur_crate, \"slice_alloc\", \"slice\"),\n+            TypeCtor::RawPtr(Mutability::Shared) => lang_item_crate!(db, cur_crate, \"const_ptr\"),\n+            TypeCtor::RawPtr(Mutability::Mut) => lang_item_crate!(db, cur_crate, \"mut_ptr\"),\n             _ => None,\n         },\n         _ => None,"}]}