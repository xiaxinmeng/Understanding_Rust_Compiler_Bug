{"sha": "c440a7ae654fb641e68a9ee53b03bf3f7133c2fe", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0NDBhN2FlNjU0ZmI2NDFlNjhhOWVlNTNiMDNiZjNmNzEzM2MyZmU=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2016-10-21T10:51:15Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2016-10-25T01:20:14Z"}, "message": "Don't use `Rc` in `TokenTreeOrTokenTreeVec`.\n\nThis avoids 800,000 allocations when compiling html5ever.", "tree": {"sha": "41ad7d49638601952cc091f49381055a55721017", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41ad7d49638601952cc091f49381055a55721017"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c440a7ae654fb641e68a9ee53b03bf3f7133c2fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c440a7ae654fb641e68a9ee53b03bf3f7133c2fe", "html_url": "https://github.com/rust-lang/rust/commit/c440a7ae654fb641e68a9ee53b03bf3f7133c2fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c440a7ae654fb641e68a9ee53b03bf3f7133c2fe/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3fd90d8aa53d73456b5df476a2bd6cc2caf473c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/3fd90d8aa53d73456b5df476a2bd6cc2caf473c6", "html_url": "https://github.com/rust-lang/rust/commit/3fd90d8aa53d73456b5df476a2bd6cc2caf473c6"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "91675065eb86e5240116ff6fbde3266ab7745100", "filename": "src/libsyntax/ext/tt/macro_parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c440a7ae654fb641e68a9ee53b03bf3f7133c2fe/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c440a7ae654fb641e68a9ee53b03bf3f7133c2fe/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Ftt%2Fmacro_parser.rs?ref=c440a7ae654fb641e68a9ee53b03bf3f7133c2fe", "patch": "@@ -105,7 +105,7 @@ use std::collections::hash_map::Entry::{Vacant, Occupied};\n #[derive(Clone)]\n enum TokenTreeOrTokenTreeVec {\n     Tt(tokenstream::TokenTree),\n-    TtSeq(Rc<Vec<tokenstream::TokenTree>>),\n+    TtSeq(Vec<tokenstream::TokenTree>),\n }\n \n impl TokenTreeOrTokenTreeVec {\n@@ -162,7 +162,7 @@ pub fn count_names(ms: &[TokenTree]) -> usize {\n     })\n }\n \n-pub fn initial_matcher_pos(ms: Rc<Vec<TokenTree>>, sep: Option<Token>, lo: BytePos)\n+pub fn initial_matcher_pos(ms: Vec<TokenTree>, sep: Option<Token>, lo: BytePos)\n                            -> Box<MatcherPos> {\n     let match_idx_hi = count_names(&ms[..]);\n     let matches: Vec<_> = (0..match_idx_hi).map(|_| Vec::new()).collect();\n@@ -285,7 +285,7 @@ pub fn parse(sess: &ParseSess,\n              mut rdr: TtReader,\n              ms: &[TokenTree])\n              -> NamedParseResult {\n-    let mut cur_eis = SmallVector::one(initial_matcher_pos(Rc::new(ms.to_owned()),\n+    let mut cur_eis = SmallVector::one(initial_matcher_pos(ms.to_owned(),\n                                                            None,\n                                                            rdr.peek().sp.lo));\n "}]}