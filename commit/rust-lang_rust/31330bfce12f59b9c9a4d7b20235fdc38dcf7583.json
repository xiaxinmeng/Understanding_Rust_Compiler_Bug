{"sha": "31330bfce12f59b9c9a4d7b20235fdc38dcf7583", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxMzMwYmZjZTEyZjU5YjljOWE0ZDdiMjAyMzVmZGMzOGRjZjc1ODM=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-05-12T09:21:12Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2021-08-22T18:23:32Z"}, "message": "Use variable.", "tree": {"sha": "dca597f29f17873e9a6fbce9c8210d44fe7c94eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dca597f29f17873e9a6fbce9c8210d44fe7c94eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/31330bfce12f59b9c9a4d7b20235fdc38dcf7583", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/31330bfce12f59b9c9a4d7b20235fdc38dcf7583", "html_url": "https://github.com/rust-lang/rust/commit/31330bfce12f59b9c9a4d7b20235fdc38dcf7583", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/31330bfce12f59b9c9a4d7b20235fdc38dcf7583/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eeb3c8f4b786cd97028b9f1e134cb628c8879569", "url": "https://api.github.com/repos/rust-lang/rust/commits/eeb3c8f4b786cd97028b9f1e134cb628c8879569", "html_url": "https://github.com/rust-lang/rust/commit/eeb3c8f4b786cd97028b9f1e134cb628c8879569"}], "stats": {"total": 17, "additions": 5, "deletions": 12}, "files": [{"sha": "95d9406248f7200a4939b6a9140fc2324b426136", "filename": "compiler/rustc_query_system/src/query/plumbing.rs", "status": "modified", "additions": 5, "deletions": 12, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/31330bfce12f59b9c9a4d7b20235fdc38dcf7583/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/31330bfce12f59b9c9a4d7b20235fdc38dcf7583/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_system%2Fsrc%2Fquery%2Fplumbing.rs?ref=31330bfce12f59b9c9a4d7b20235fdc38dcf7583", "patch": "@@ -491,13 +491,7 @@ where\n         // `to_dep_node` is expensive for some `DepKind`s.\n         let dep_node = dep_node_opt.unwrap_or_else(|| query.to_dep_node(*tcx.dep_context(), &key));\n \n-        tcx.dep_context().dep_graph().with_task(\n-            dep_node,\n-            *tcx.dep_context(),\n-            key,\n-            compute,\n-            query.hash_result,\n-        )\n+        dep_graph.with_task(dep_node, *tcx.dep_context(), key, compute, query.hash_result)\n     });\n \n     prof_timer.finish_with_query_invocation_id(dep_node_index.into());\n@@ -531,10 +525,10 @@ where\n     // Note this function can be called concurrently from the same query\n     // We must ensure that this is handled correctly.\n \n-    let (prev_dep_node_index, dep_node_index) =\n-        tcx.dep_context().dep_graph().try_mark_green(tcx, &dep_node)?;\n+    let dep_graph = tcx.dep_context().dep_graph();\n+    let (prev_dep_node_index, dep_node_index) = dep_graph.try_mark_green(tcx, &dep_node)?;\n \n-    debug_assert!(tcx.dep_context().dep_graph().is_green(dep_node));\n+    debug_assert!(dep_graph.is_green(dep_node));\n \n     // First we try to load the result from the on-disk cache.\n     // Some things are never cached on disk.\n@@ -567,8 +561,7 @@ where\n     let prof_timer = tcx.dep_context().profiler().query_provider();\n \n     // The dep-graph for this computation is already in-place.\n-    let result =\n-        tcx.dep_context().dep_graph().with_ignore(|| compute(*tcx.dep_context(), key.clone()));\n+    let result = dep_graph.with_ignore(|| compute(*tcx.dep_context(), key.clone()));\n \n     prof_timer.finish_with_query_invocation_id(dep_node_index.into());\n "}]}