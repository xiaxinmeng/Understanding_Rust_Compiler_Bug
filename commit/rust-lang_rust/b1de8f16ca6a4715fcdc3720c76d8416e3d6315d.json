{"sha": "b1de8f16ca6a4715fcdc3720c76d8416e3d6315d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIxZGU4ZjE2Y2E2YTQ3MTVmY2RjMzcyMGM3NmQ4NDE2ZTNkNjMxNWQ=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-25T04:46:58Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-25T04:46:58Z"}, "message": "check_pat_tuple: use pattern_cause", "tree": {"sha": "72049ed749d96f4ee5fded5a368b9b7ccb4ff7cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72049ed749d96f4ee5fded5a368b9b7ccb4ff7cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d", "html_url": "https://github.com/rust-lang/rust/commit/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46", "html_url": "https://github.com/rust-lang/rust/commit/e9f6bb7f79ef68859cc5c7641dcc8a399e9e9c46"}], "stats": {"total": 21, "additions": 18, "deletions": 3}, "files": [{"sha": "da78667160e10c5f0ae226263b97d7d3803770fb", "filename": "src/librustc_typeck/check/pat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fpat.rs?ref=b1de8f16ca6a4715fcdc3720c76d8416e3d6315d", "patch": "@@ -918,7 +918,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         });\n         let element_tys = tcx.mk_substs(element_tys_iter);\n         let pat_ty = tcx.mk_ty(ty::Tuple(element_tys));\n-        if let Some(mut err) = self.demand_eqtype_diag(span, expected, pat_ty) {\n+        if let Some(mut err) = self.demand_eqtype_pat_diag(span, expected, pat_ty, ti) {\n             err.emit();\n             // Walk subpatterns with an expected type of `err` in this case to silence\n             // further errors being emitted when using the bindings. #50333"}, {"sha": "e0537ff6faaf82e9463c18129d346d87aacdeaf4", "filename": "src/test/ui/elide-errors-on-mismatched-tuple.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d/src%2Ftest%2Fui%2Felide-errors-on-mismatched-tuple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d/src%2Ftest%2Fui%2Felide-errors-on-mismatched-tuple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Felide-errors-on-mismatched-tuple.stderr?ref=b1de8f16ca6a4715fcdc3720c76d8416e3d6315d", "patch": "@@ -2,7 +2,9 @@ error[E0308]: mismatched types\n   --> $DIR/elide-errors-on-mismatched-tuple.rs:14:9\n    |\n LL |     let (a, b, c) = (A::new(), A::new()); // This tuple is 2 elements, should be three\n-   |         ^^^^^^^^^ expected a tuple with 2 elements, found one with 3 elements\n+   |         ^^^^^^^^^   -------------------- this expression has type `(A, A)`\n+   |         |\n+   |         expected a tuple with 2 elements, found one with 3 elements\n    |\n    = note: expected tuple `(A, A)`\n               found tuple `(_, _, _)`"}, {"sha": "070c09d745b9ce61e77da48c30a2f2d71a13216a", "filename": "src/test/ui/issues/issue-5100.stderr", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-5100.stderr?ref=b1de8f16ca6a4715fcdc3720c76d8416e3d6315d", "patch": "@@ -12,6 +12,8 @@ LL |         A::B => (),\n error[E0308]: mismatched types\n   --> $DIR/issue-5100.rs:17:9\n    |\n+LL |     match (true, false) {\n+   |           ------------- this expression has type `(bool, bool)`\n LL |         (true, false, false) => ()\n    |         ^^^^^^^^^^^^^^^^^^^^ expected a tuple with 2 elements, found one with 3 elements\n    |\n@@ -21,6 +23,8 @@ LL |         (true, false, false) => ()\n error[E0308]: mismatched types\n   --> $DIR/issue-5100.rs:25:9\n    |\n+LL |     match (true, false) {\n+   |           ------------- this expression has type `(bool, bool)`\n LL |         (true, false, false) => ()\n    |         ^^^^^^^^^^^^^^^^^^^^ expected a tuple with 2 elements, found one with 3 elements\n    |"}, {"sha": "598b6a3794ef72a18d9144547447fbee7fcfe634", "filename": "src/test/ui/pattern/pat-tuple-bad-type.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-bad-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-bad-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-bad-type.stderr?ref=b1de8f16ca6a4715fcdc3720c76d8416e3d6315d", "patch": "@@ -12,6 +12,8 @@ LL |         (..) => {}\n error[E0308]: mismatched types\n   --> $DIR/pat-tuple-bad-type.rs:10:9\n    |\n+LL |     match 0u8 {\n+   |           --- this expression has type `u8`\n LL |         (..) => {}\n    |         ^^^^ expected `u8`, found `()`\n "}, {"sha": "45b6fd1b4d445e97c662ab9ac0a01ed49072bd25", "filename": "src/test/ui/pattern/pat-tuple-overfield.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpattern%2Fpat-tuple-overfield.stderr?ref=b1de8f16ca6a4715fcdc3720c76d8416e3d6315d", "patch": "@@ -1,6 +1,8 @@\n error[E0308]: mismatched types\n   --> $DIR/pat-tuple-overfield.rs:5:9\n    |\n+LL |     match (1, 2, 3) {\n+   |           --------- this expression has type `({integer}, {integer}, {integer})`\n LL |         (1, 2, 3, 4) => {}\n    |         ^^^^^^^^^^^^ expected a tuple with 3 elements, found one with 4 elements\n    |\n@@ -10,6 +12,9 @@ LL |         (1, 2, 3, 4) => {}\n error[E0308]: mismatched types\n   --> $DIR/pat-tuple-overfield.rs:6:9\n    |\n+LL |     match (1, 2, 3) {\n+   |           --------- this expression has type `({integer}, {integer}, {integer})`\n+LL |         (1, 2, 3, 4) => {}\n LL |         (1, 2, .., 3, 4) => {}\n    |         ^^^^^^^^^^^^^^^^ expected a tuple with 3 elements, found one with 4 elements\n    |"}, {"sha": "c2874ae9a14b857508c5a494d8e4b605a803127c", "filename": "src/test/ui/suppressed-error.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d/src%2Ftest%2Fui%2Fsuppressed-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b1de8f16ca6a4715fcdc3720c76d8416e3d6315d/src%2Ftest%2Fui%2Fsuppressed-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuppressed-error.stderr?ref=b1de8f16ca6a4715fcdc3720c76d8416e3d6315d", "patch": "@@ -2,7 +2,9 @@ error[E0308]: mismatched types\n   --> $DIR/suppressed-error.rs:2:9\n    |\n LL |     let (x, y) = ();\n-   |         ^^^^^^ expected `()`, found tuple\n+   |         ^^^^^^   -- this expression has type `()`\n+   |         |\n+   |         expected `()`, found tuple\n    |\n    = note: expected unit type `()`\n                   found tuple `(_, _)`"}]}