{"sha": "98a2292919147d775ec196f42fe821b600180019", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4YTIyOTI5MTkxNDdkNzc1ZWMxOTZmNDJmZTgyMWI2MDAxODAwMTk=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-10-03T21:38:01Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-10-03T21:38:01Z"}, "message": "Allow `Abort` terminators in a const-context\n\nThese appear along the cleanup path inside functions with\n`#[unwind(aborts)]`. We don't const-check the cleanup path anyways,\nsince const-eval already has \"abort-on-panic\" semantics and there's\noften drops that would otherwise be forbidden, so the check wasn't\nreally preventing anything anyways.", "tree": {"sha": "ba687c1515ddd64c9c78e9c3fe6246ab0a7fee0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba687c1515ddd64c9c78e9c3fe6246ab0a7fee0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98a2292919147d775ec196f42fe821b600180019", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98a2292919147d775ec196f42fe821b600180019", "html_url": "https://github.com/rust-lang/rust/commit/98a2292919147d775ec196f42fe821b600180019", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98a2292919147d775ec196f42fe821b600180019/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8876ffc9235dade728e1fbc4be4c85415fdd0bcd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8876ffc9235dade728e1fbc4be4c85415fdd0bcd", "html_url": "https://github.com/rust-lang/rust/commit/8876ffc9235dade728e1fbc4be4c85415fdd0bcd"}], "stats": {"total": 16, "additions": 2, "deletions": 14}, "files": [{"sha": "9a1b77e994d1350d66b89fe561d28d5a1ab13ac0", "filename": "compiler/rustc_mir/src/transform/check_consts/ops.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/98a2292919147d775ec196f42fe821b600180019/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98a2292919147d775ec196f42fe821b600180019/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fops.rs?ref=98a2292919147d775ec196f42fe821b600180019", "patch": "@@ -41,18 +41,6 @@ pub trait NonConstOp: std::fmt::Debug {\n     fn build_error(&self, ccx: &ConstCx<'_, 'tcx>, span: Span) -> DiagnosticBuilder<'tcx>;\n }\n \n-#[derive(Debug)]\n-pub struct Abort;\n-impl NonConstOp for Abort {\n-    fn status_in_item(&self, ccx: &ConstCx<'_, '_>) -> Status {\n-        mcf_status_in_item(ccx)\n-    }\n-\n-    fn build_error(&self, ccx: &ConstCx<'_, 'tcx>, span: Span) -> DiagnosticBuilder<'tcx> {\n-        mcf_build_error(ccx, span, \"abort is not stable in const fn\")\n-    }\n-}\n-\n #[derive(Debug)]\n pub struct FloatingPointOp;\n impl NonConstOp for FloatingPointOp {"}, {"sha": "ab78e3d541c3604abcabacb57efee91d408c7696", "filename": "compiler/rustc_mir/src/transform/check_consts/validation.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98a2292919147d775ec196f42fe821b600180019/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98a2292919147d775ec196f42fe821b600180019/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=98a2292919147d775ec196f42fe821b600180019", "patch": "@@ -874,13 +874,13 @@ impl Visitor<'tcx> for Validator<'mir, 'tcx> {\n             }\n \n             TerminatorKind::InlineAsm { .. } => self.check_op(ops::InlineAsm),\n-            TerminatorKind::Abort => self.check_op(ops::Abort),\n \n             TerminatorKind::GeneratorDrop | TerminatorKind::Yield { .. } => {\n                 self.check_op(ops::Generator(hir::GeneratorKind::Gen))\n             }\n \n-            TerminatorKind::Assert { .. }\n+            TerminatorKind::Abort\n+            | TerminatorKind::Assert { .. }\n             | TerminatorKind::FalseEdge { .. }\n             | TerminatorKind::FalseUnwind { .. }\n             | TerminatorKind::Goto { .. }"}]}