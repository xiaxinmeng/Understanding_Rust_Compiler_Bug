{"sha": "71c6346aa1afa5a0d246649d4919e11311e635f2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcxYzYzNDZhYTFhZmE1YTBkMjQ2NjQ5ZDQ5MTllMTEzMTFlNjM1ZjI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-17T12:25:07Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-01-17T12:25:07Z"}, "message": "Auto merge of #68285 - oli-obk:specialization_regression, r=davidtwco\n\nArray repeat expression lengths must be monomorphic at MIR building time\n\nfixes #67743", "tree": {"sha": "4bd895b28b641ba41f8b0e52ab9100f39000e565", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4bd895b28b641ba41f8b0e52ab9100f39000e565"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/71c6346aa1afa5a0d246649d4919e11311e635f2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/71c6346aa1afa5a0d246649d4919e11311e635f2", "html_url": "https://github.com/rust-lang/rust/commit/71c6346aa1afa5a0d246649d4919e11311e635f2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/71c6346aa1afa5a0d246649d4919e11311e635f2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2480c9eac15608591f58730aed27caac9c30b4c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/2480c9eac15608591f58730aed27caac9c30b4c2", "html_url": "https://github.com/rust-lang/rust/commit/2480c9eac15608591f58730aed27caac9c30b4c2"}, {"sha": "eed0d33a65bd3f315bdf2d26511676f61e95120e", "url": "https://api.github.com/repos/rust-lang/rust/commits/eed0d33a65bd3f315bdf2d26511676f61e95120e", "html_url": "https://github.com/rust-lang/rust/commit/eed0d33a65bd3f315bdf2d26511676f61e95120e"}], "stats": {"total": 52, "additions": 40, "deletions": 12}, "files": [{"sha": "d6786ea24797340d6ffcdc7416910b834a65c9a9", "filename": "src/librustc_mir_build/hair/cx/expr.rs", "status": "modified", "additions": 15, "deletions": 12, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/71c6346aa1afa5a0d246649d4919e11311e635f2/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71c6346aa1afa5a0d246649d4919e11311e635f2/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir_build%2Fhair%2Fcx%2Fexpr.rs?ref=71c6346aa1afa5a0d246649d4919e11311e635f2", "patch": "@@ -411,18 +411,21 @@ fn make_mirror_unadjusted<'a, 'tcx>(\n             let def_id = cx.tcx.hir().local_def_id(count.hir_id);\n             let substs = InternalSubsts::identity_for_item(cx.tcx, def_id);\n             let span = cx.tcx.def_span(def_id);\n-            let count =\n-                match cx.tcx.const_eval_resolve(cx.param_env, def_id, substs, None, Some(span)) {\n-                    Ok(cv) => cv.eval_usize(cx.tcx, cx.param_env),\n-                    Err(ErrorHandled::Reported) => 0,\n-                    Err(ErrorHandled::TooGeneric) => {\n-                        let span = cx.tcx.def_span(def_id);\n-                        cx.tcx\n-                            .sess\n-                            .span_err(span, \"array lengths can't depend on generic parameters\");\n-                        0\n-                    }\n-                };\n+            let count = match cx.tcx.const_eval_resolve(\n+                ty::ParamEnv::reveal_all(),\n+                def_id,\n+                substs,\n+                None,\n+                Some(span),\n+            ) {\n+                Ok(cv) => cv.eval_usize(cx.tcx, ty::ParamEnv::reveal_all()),\n+                Err(ErrorHandled::Reported) => 0,\n+                Err(ErrorHandled::TooGeneric) => {\n+                    let span = cx.tcx.def_span(def_id);\n+                    cx.tcx.sess.span_err(span, \"array lengths can't depend on generic parameters\");\n+                    0\n+                }\n+            };\n \n             ExprKind::Repeat { value: v.to_ref(), count }\n         }"}, {"sha": "dee376cc17b40b8156861c8a5e1a1b8eb7fb4c12", "filename": "src/test/ui/consts/associated_const_generic.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/71c6346aa1afa5a0d246649d4919e11311e635f2/src%2Ftest%2Fui%2Fconsts%2Fassociated_const_generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/71c6346aa1afa5a0d246649d4919e11311e635f2/src%2Ftest%2Fui%2Fconsts%2Fassociated_const_generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fassociated_const_generic.rs?ref=71c6346aa1afa5a0d246649d4919e11311e635f2", "patch": "@@ -0,0 +1,25 @@\n+// check-pass\n+\n+trait TraitA {\n+    const VALUE: usize;\n+}\n+\n+struct A;\n+impl TraitA for A {\n+    const VALUE: usize = 1;\n+}\n+\n+trait TraitB {\n+    type MyA: TraitA;\n+    const VALUE: usize = Self::MyA::VALUE;\n+}\n+\n+struct B;\n+impl TraitB for B {\n+    type MyA = A;\n+}\n+\n+fn main() {\n+    let _ = [0; A::VALUE];\n+    let _ = [0; B::VALUE]; // Indirectly refers to `A::VALUE`\n+}"}]}