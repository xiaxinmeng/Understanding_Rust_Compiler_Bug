{"sha": "6687edcbef063cb2a6ff414cfa3754139905b79e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2ODdlZGNiZWYwNjNjYjJhNmZmNDE0Y2ZhMzc1NDEzOTkwNWI3OWU=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-10-11T22:09:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-11T22:09:47Z"}, "message": "Rollup merge of #65200 - xfix:patch-20, r=GuillaumeGomez\n\nAdd ?Sized bound to a supertrait listing in E0038 error documentation\n\nThis example failed to compile because of implicit `Sized` bound for `A` parameter that wasn't required by `Trait`.", "tree": {"sha": "4a3a954f145e41f4c6ee93d468682c08ab91799a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4a3a954f145e41f4c6ee93d468682c08ab91799a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6687edcbef063cb2a6ff414cfa3754139905b79e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdoP2rCRBK7hj4Ov3rIwAAdHIIADE3FQ91/0oA7W8OT6D9Bbsq\nY/UcTbI7avL+uFFHfttTOxrV2yISHg7ep5vGxIAzWu970Dow51L5YKAmaI4wQKwz\nnknz7ZOWIxvYuFHrKwL8qqTBr4XPteysxKh+rgdNEZlkO5CeYPTbjsRfJzKVdO6/\nArKOVS1xCseDczabYJAJ8kIHFB7xEoDi4DEq+VrbXrCZDlKB+3DKL+QzMlMr04Fm\nkzzBDIO7JGRzSvWBa4LBTHktI+u5WBF2U9bfz8LmoDlkvdVEnbgg7dx1wi8RFiII\nOzovsGPMC4BqFgqma4GqG/XZY0+yfeq7CvVknn68ustPUhR9gvZS1N5+yvwjrxw=\n=cR0b\n-----END PGP SIGNATURE-----\n", "payload": "tree 4a3a954f145e41f4c6ee93d468682c08ab91799a\nparent 728adc446ce55571ac100dac5e8184b692218b8b\nparent 3f9d834fb3c32b67a5f368c8265a9ca6d83de7c3\nauthor Tyler Mandry <tmandry@gmail.com> 1570831787 -0700\ncommitter GitHub <noreply@github.com> 1570831787 -0700\n\nRollup merge of #65200 - xfix:patch-20, r=GuillaumeGomez\n\nAdd ?Sized bound to a supertrait listing in E0038 error documentation\n\nThis example failed to compile because of implicit `Sized` bound for `A` parameter that wasn't required by `Trait`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6687edcbef063cb2a6ff414cfa3754139905b79e", "html_url": "https://github.com/rust-lang/rust/commit/6687edcbef063cb2a6ff414cfa3754139905b79e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6687edcbef063cb2a6ff414cfa3754139905b79e/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "728adc446ce55571ac100dac5e8184b692218b8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/728adc446ce55571ac100dac5e8184b692218b8b", "html_url": "https://github.com/rust-lang/rust/commit/728adc446ce55571ac100dac5e8184b692218b8b"}, {"sha": "3f9d834fb3c32b67a5f368c8265a9ca6d83de7c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f9d834fb3c32b67a5f368c8265a9ca6d83de7c3", "html_url": "https://github.com/rust-lang/rust/commit/3f9d834fb3c32b67a5f368c8265a9ca6d83de7c3"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "50b6ef57b550cf1f1b0a0a2f3c55f3e0d9eb51f3", "filename": "src/librustc/error_codes.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6687edcbef063cb2a6ff414cfa3754139905b79e/src%2Flibrustc%2Ferror_codes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6687edcbef063cb2a6ff414cfa3754139905b79e/src%2Flibrustc%2Ferror_codes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ferror_codes.rs?ref=6687edcbef063cb2a6ff414cfa3754139905b79e", "patch": "@@ -259,8 +259,8 @@ trait Foo {\n This is similar to the second sub-error, but subtler. It happens in situations\n like the following:\n \n-```compile_fail\n-trait Super<A> {}\n+```compile_fail,E0038\n+trait Super<A: ?Sized> {}\n \n trait Trait: Super<Self> {\n }\n@@ -270,17 +270,21 @@ struct Foo;\n impl Super<Foo> for Foo{}\n \n impl Trait for Foo {}\n+\n+fn main() {\n+    let x: Box<dyn Trait>;\n+}\n ```\n \n Here, the supertrait might have methods as follows:\n \n ```\n-trait Super<A> {\n-    fn get_a(&self) -> A; // note that this is object safe!\n+trait Super<A: ?Sized> {\n+    fn get_a(&self) -> &A; // note that this is object safe!\n }\n ```\n \n-If the trait `Foo` was deriving from something like `Super<String>` or\n+If the trait `Trait` was deriving from something like `Super<String>` or\n `Super<T>` (where `Foo` itself is `Foo<T>`), this is okay, because given a type\n `get_a()` will definitely return an object of that type.\n "}]}