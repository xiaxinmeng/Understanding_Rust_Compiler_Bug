{"sha": "07637db8836b2354241df91470886e228a7af87e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3NjM3ZGI4ODM2YjIzNTQyNDFkZjkxNDcwODg2ZTIyOGE3YWY4N2U=", "commit": {"author": {"name": "Kornel", "email": "kornel@geekhood.net", "date": "2020-10-12T12:36:19Z"}, "committer": {"name": "Kornel", "email": "kornel@geekhood.net", "date": "2020-10-12T12:36:19Z"}, "message": "Remove deprecated unstable Vec::resize_default", "tree": {"sha": "8fcc01f282372ac229fc9895dcd110325f882ee6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fcc01f282372ac229fc9895dcd110325f882ee6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07637db8836b2354241df91470886e228a7af87e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07637db8836b2354241df91470886e228a7af87e", "html_url": "https://github.com/rust-lang/rust/commit/07637db8836b2354241df91470886e228a7af87e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07637db8836b2354241df91470886e228a7af87e/comments", "author": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kornelski", "id": 72159, "node_id": "MDQ6VXNlcjcyMTU5", "avatar_url": "https://avatars.githubusercontent.com/u/72159?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kornelski", "html_url": "https://github.com/kornelski", "followers_url": "https://api.github.com/users/kornelski/followers", "following_url": "https://api.github.com/users/kornelski/following{/other_user}", "gists_url": "https://api.github.com/users/kornelski/gists{/gist_id}", "starred_url": "https://api.github.com/users/kornelski/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kornelski/subscriptions", "organizations_url": "https://api.github.com/users/kornelski/orgs", "repos_url": "https://api.github.com/users/kornelski/repos", "events_url": "https://api.github.com/users/kornelski/events{/privacy}", "received_events_url": "https://api.github.com/users/kornelski/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d9b931669b9c480b60f0abcaa7834758ba8761a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/d9b931669b9c480b60f0abcaa7834758ba8761a2", "html_url": "https://github.com/rust-lang/rust/commit/d9b931669b9c480b60f0abcaa7834758ba8761a2"}], "stats": {"total": 44, "additions": 0, "deletions": 44}, "files": [{"sha": "805e1085cf3196e1b6989b6a4a0a20c30f79c673", "filename": "library/alloc/src/vec.rs", "status": "modified", "additions": 0, "deletions": 44, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/07637db8836b2354241df91470886e228a7af87e/library%2Falloc%2Fsrc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07637db8836b2354241df91470886e228a7af87e/library%2Falloc%2Fsrc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec.rs?ref=07637db8836b2354241df91470886e228a7af87e", "patch": "@@ -1603,50 +1603,6 @@ impl<T: Clone> Vec<T> {\n     }\n }\n \n-impl<T: Default> Vec<T> {\n-    /// Resizes the `Vec` in-place so that `len` is equal to `new_len`.\n-    ///\n-    /// If `new_len` is greater than `len`, the `Vec` is extended by the\n-    /// difference, with each additional slot filled with [`Default::default()`].\n-    /// If `new_len` is less than `len`, the `Vec` is simply truncated.\n-    ///\n-    /// This method uses [`Default`] to create new values on every push. If\n-    /// you'd rather [`Clone`] a given value, use [`resize`].\n-    ///\n-    /// # Examples\n-    ///\n-    /// ```\n-    /// # #![allow(deprecated)]\n-    /// #![feature(vec_resize_default)]\n-    ///\n-    /// let mut vec = vec![1, 2, 3];\n-    /// vec.resize_default(5);\n-    /// assert_eq!(vec, [1, 2, 3, 0, 0]);\n-    ///\n-    /// let mut vec = vec![1, 2, 3, 4];\n-    /// vec.resize_default(2);\n-    /// assert_eq!(vec, [1, 2]);\n-    /// ```\n-    ///\n-    /// [`resize`]: Vec::resize\n-    #[unstable(feature = \"vec_resize_default\", issue = \"41758\")]\n-    #[rustc_deprecated(\n-        reason = \"This is moving towards being removed in favor \\\n-                  of `.resize_with(Default::default)`.  If you disagree, please comment \\\n-                  in the tracking issue.\",\n-        since = \"1.33.0\"\n-    )]\n-    pub fn resize_default(&mut self, new_len: usize) {\n-        let len = self.len();\n-\n-        if new_len > len {\n-            self.extend_with(new_len - len, ExtendDefault);\n-        } else {\n-            self.truncate(new_len);\n-        }\n-    }\n-}\n-\n // This code generalizes `extend_with_{element,default}`.\n trait ExtendWith<T> {\n     fn next(&mut self) -> T;"}]}