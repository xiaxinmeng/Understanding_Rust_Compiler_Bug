{"sha": "b0e5c78ad2c4e0b7fba996e77972268c5a33a011", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIwZTVjNzhhZDJjNGUwYjdmYmE5OTZlNzc5NzIyNjhjNWEzM2EwMTE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-08-31T14:00:46Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-09-07T09:01:22Z"}, "message": "Disable inline assembly in core::hint::black_box", "tree": {"sha": "432722c87176bf458c6f9e3622490ee36c2c178a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/432722c87176bf458c6f9e3622490ee36c2c178a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b0e5c78ad2c4e0b7fba996e77972268c5a33a011", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b0e5c78ad2c4e0b7fba996e77972268c5a33a011", "html_url": "https://github.com/rust-lang/rust/commit/b0e5c78ad2c4e0b7fba996e77972268c5a33a011", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b0e5c78ad2c4e0b7fba996e77972268c5a33a011/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "629f7ab4a32e6afea7563698ad7278bbd1e67ee4", "url": "https://api.github.com/repos/rust-lang/rust/commits/629f7ab4a32e6afea7563698ad7278bbd1e67ee4", "html_url": "https://github.com/rust-lang/rust/commit/629f7ab4a32e6afea7563698ad7278bbd1e67ee4"}], "stats": {"total": 79, "additions": 49, "deletions": 30}, "files": [{"sha": "a96ac09f971e0521af03304ec0060432dc974171", "filename": "patches/0003-Disable-inline-assembly-in-hint-spin_loop.patch", "status": "removed", "additions": 0, "deletions": 30, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/629f7ab4a32e6afea7563698ad7278bbd1e67ee4/patches%2F0003-Disable-inline-assembly-in-hint-spin_loop.patch", "raw_url": "https://github.com/rust-lang/rust/raw/629f7ab4a32e6afea7563698ad7278bbd1e67ee4/patches%2F0003-Disable-inline-assembly-in-hint-spin_loop.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0003-Disable-inline-assembly-in-hint-spin_loop.patch?ref=629f7ab4a32e6afea7563698ad7278bbd1e67ee4", "patch": "@@ -1,30 +0,0 @@\n-From 50ce3e454d5721cb534a9e9bb73c82246b930bab Mon Sep 17 00:00:00 2001\n-From: bjorn3 <bjorn3@users.noreply.github.com>\n-Date: Sat, 19 Jan 2019 11:46:43 +0100\n-Subject: [PATCH] Disable inline assembly in hint::spin_loop\n-\n----\n- src/libcore/hint.rs | 2 ++\n- 1 file changed, 2 insertions(+)\n-\n-diff --git a/src/libcore/hint.rs b/src/libcore/hint.rs\n-index ad5a207..04712b8 100644\n---- a/src/libcore/hint.rs\n-+++ b/src/libcore/hint.rs\n-@@ -62,6 +62,7 @@ pub unsafe fn unreachable_unchecked() -> ! {\n- #[inline]\n- #[unstable(feature = \"renamed_spin_loop\", issue = \"55002\")]\n- pub fn spin_loop() {\n-+    /*\n-     #[cfg(\n-         all(\n-             any(target_arch = \"x86\", target_arch = \"x86_64\"),\n-@@ -71,4 +72,5 @@ pub fn spin_loop() {\n-             unsafe { crate::arch::arm::__yield() };\n-         }\n-     }\n-+    */\n- }\n--- \n-2.17.2 (Apple Git-113)\n-"}, {"sha": "527dbda821c94c4ce242107360fd05c8ed6fbe6d", "filename": "patches/0003-Disable-inline-assembly-in-libcore.patch", "status": "added", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/b0e5c78ad2c4e0b7fba996e77972268c5a33a011/patches%2F0003-Disable-inline-assembly-in-libcore.patch", "raw_url": "https://github.com/rust-lang/rust/raw/b0e5c78ad2c4e0b7fba996e77972268c5a33a011/patches%2F0003-Disable-inline-assembly-in-libcore.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/patches%2F0003-Disable-inline-assembly-in-libcore.patch?ref=b0e5c78ad2c4e0b7fba996e77972268c5a33a011", "patch": "@@ -0,0 +1,49 @@\n+From 50ce3e454d5721cb534a9e9bb73c82246b930bab Mon Sep 17 00:00:00 2001\n+From: bjorn3 <bjorn3@users.noreply.github.com>\n+Date: Sat, 19 Jan 2019 11:46:43 +0100\n+Subject: [PATCH] Disable inline assembly in libcore\n+\n+---\n+ src/libcore/hint.rs | 2 ++\n+ 1 file changed, 2 insertions(+)\n+\n+diff --git a/src/libcore/hint.rs b/src/libcore/hint.rs\n+index ad5a207..04712b8 100644\n+--- a/src/libcore/hint.rs\n++++ b/src/libcore/hint.rs\n+@@ -62,6 +62,7 @@ pub unsafe fn unreachable_unchecked() -> ! {\n+ #[inline]\n+ #[unstable(feature = \"renamed_spin_loop\", issue = \"55002\")]\n+ pub fn spin_loop() {\n++    /*\n+     #[cfg(\n+         all(\n+             any(target_arch = \"x86\", target_arch = \"x86_64\"),\n+@@ -71,4 +72,5 @@ pub fn spin_loop() {\n+             unsafe { crate::arch::arm::__yield() };\n+         }\n+     }\n++    */\n+ }\n+diff --git a/src/libcore/hint.rs b/src/libcore/hint.rs\n+index ce35181..7d3f6a5 100644\n+--- a/src/libcore/hint.rs\n++++ b/src/libcore/hint.rs\n+@@ -128,6 +128,7 @@ pub fn black_box<T>(dummy: T) -> T {\n+     // this. LLVM's intepretation of inline assembly is that it's, well, a black\n+     // box. This isn't the greatest implementation since it probably deoptimizes\n+     // more than we want, but it's so far good enough.\n++/*\n+     #[cfg(not(any(\n+         target_arch = \"asmjs\",\n+         all(\n+@@ -139,6 +140,7 @@ pub fn black_box<T>(dummy: T) -> T {\n+         asm!(\"\" : : \"r\"(&dummy));\n+         return dummy;\n+     }\n++*/\n+ \n+     // Not all platforms support inline assembly so try to do something without\n+     // inline assembly which in theory still hinders at least some optimizations\n+-- \n+2.17.2 (Apple Git-113)"}]}