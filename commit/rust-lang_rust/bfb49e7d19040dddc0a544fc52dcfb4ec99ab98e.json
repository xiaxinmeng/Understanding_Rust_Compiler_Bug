{"sha": "bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmYjQ5ZTdkMTkwNDBkZGRjMGE1NDRmYzUyZGNmYjRlYzk5YWI5OGU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-09-07T08:51:00Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-09-07T08:51:00Z"}, "message": "Rustup to rustc 1.39.0-nightly (6e19f3f38 2019-09-06)", "tree": {"sha": "0226d110c80756020b0a268a66131d78ac805c7b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0226d110c80756020b0a268a66131d78ac805c7b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e", "html_url": "https://github.com/rust-lang/rust/commit/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2e905f22d52780ae9b8f54ffafb166b28326648", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2e905f22d52780ae9b8f54ffafb166b28326648", "html_url": "https://github.com/rust-lang/rust/commit/a2e905f22d52780ae9b8f54ffafb166b28326648"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "f4bb31e126ae2cfc8147e476ef75d03aaa31f1e8", "filename": "src/abi/mod.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e/src%2Fabi%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e/src%2Fabi%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Fmod.rs?ref=bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e", "patch": "@@ -103,7 +103,7 @@ pub fn get_function_name_and_sig<'tcx>(\n         unimpl!(\"Variadic function definitions are not yet supported\");\n     }\n     let sig = clif_sig_from_fn_sig(tcx, fn_sig, false);\n-    (tcx.symbol_name(inst).as_str().to_string(), sig)\n+    (tcx.symbol_name(inst).name.as_str().to_string(), sig)\n }\n \n /// Instance must be monomorphized\n@@ -371,10 +371,10 @@ pub fn codegen_terminator_call<'tcx>(\n         let instance =\n             ty::Instance::resolve(fx.tcx, ty::ParamEnv::reveal_all(), def_id, substs).unwrap();\n \n-        if fx.tcx.symbol_name(instance).as_str().starts_with(\"llvm.\") {\n+        if fx.tcx.symbol_name(instance).name.as_str().starts_with(\"llvm.\") {\n             crate::llvm_intrinsics::codegen_llvm_intrinsic_call(\n                 fx,\n-                &fx.tcx.symbol_name(instance).as_str(),\n+                &fx.tcx.symbol_name(instance).name.as_str(),\n                 substs,\n                 args,\n                 destination,"}, {"sha": "48fe920204e7b4110a065bd8d167af97d5c5d66a", "filename": "src/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e/src%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e/src%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbase.rs?ref=bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e", "patch": "@@ -570,7 +570,7 @@ fn trans_stmt<'tcx>(\n \n                     crate::trap::trap_unimplemented(fx, \"_xgetbv arch intrinsic is not supported\");\n                 }\n-                _ if fx.tcx.symbol_name(fx.instance).as_str() == \"__rust_probestack\" => {\n+                _ if fx.tcx.symbol_name(fx.instance).name.as_str() == \"__rust_probestack\" => {\n                     crate::trap::trap_unimplemented(fx, \"__rust_probestack is not supported\");\n                 }\n                 _ => unimpl!(\"Inline assembly is not supported\"),"}, {"sha": "639bb9e5aded50a721ace6682fffe8f389e41df4", "filename": "src/constant.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e", "patch": "@@ -206,7 +206,7 @@ fn data_id_for_static(\n     linkage: Linkage,\n ) -> DataId {\n     let instance = Instance::mono(tcx, def_id);\n-    let symbol_name = tcx.symbol_name(instance).as_str();\n+    let symbol_name = tcx.symbol_name(instance).name.as_str();\n     let ty = instance.ty(tcx);\n     let is_mutable = if tcx.is_mutable_static(def_id) {\n         true\n@@ -318,19 +318,19 @@ fn define_all_allocs(tcx: TyCtxt<'_>, module: &mut Module<impl Backend>, cx: &mu\n \n         let mut data_ctx = DataContext::new();\n \n-        let mut bytes = alloc.bytes.to_vec();\n+        let mut bytes = alloc.inspect_with_undef_and_ptr_outside_interpreter(0..alloc.len()).to_vec();\n         // The machO backend of faerie doesn't align data objects correctly unless we do this.\n         while bytes.len() as u64 % 16 != 0 {\n             bytes.push(0xde);\n         }\n         data_ctx.define(bytes.into_boxed_slice());\n \n-        for &(offset, (_tag, reloc)) in alloc.relocations.iter() {\n+        for &(offset, (_tag, reloc)) in alloc.relocations().iter() {\n             let addend = {\n                 let endianness = tcx.data_layout.endian;\n                 let offset = offset.bytes() as usize;\n                 let ptr_size = tcx.data_layout.pointer_size;\n-                let bytes = &alloc.bytes[offset..offset + ptr_size.bytes() as usize];\n+                let bytes = &alloc.inspect_with_undef_and_ptr_outside_interpreter(offset..offset + ptr_size.bytes() as usize);\n                 read_target_uint(endianness, bytes).unwrap()\n             };\n "}, {"sha": "7c69b0981562a87bf287ef9ac4f3a2a9b660c9b2", "filename": "src/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e", "patch": "@@ -322,7 +322,7 @@ fn trans_mono_item<'clif, 'tcx, B: Backend + 'static>(\n     match mono_item {\n         MonoItem::Fn(inst) => {\n             let _inst_guard =\n-                PrintOnPanic(|| format!(\"{:?} {}\", inst, tcx.symbol_name(inst).as_str()));\n+                PrintOnPanic(|| format!(\"{:?} {}\", inst, tcx.symbol_name(inst).name.as_str()));\n             debug_assert!(!inst.substs.needs_infer());\n             let _mir_guard = PrintOnPanic(|| {\n                 match inst.def {"}, {"sha": "1dd1157bfaa4ac5492c20073f6858ee723c5e886", "filename": "src/pretty_clif.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e/src%2Fpretty_clif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e/src%2Fpretty_clif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fpretty_clif.rs?ref=bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e", "patch": "@@ -76,7 +76,7 @@ impl CommentWriter {\n     pub fn new<'tcx>(tcx: TyCtxt<'tcx>, instance: Instance<'tcx>) -> Self {\n         CommentWriter {\n             global_comments: vec![\n-                format!(\"symbol {}\", tcx.symbol_name(instance).as_str()),\n+                format!(\"symbol {}\", tcx.symbol_name(instance).name.as_str()),\n                 format!(\"instance {:?}\", instance),\n                 format!(\n                     \"sig {:?}\",\n@@ -205,7 +205,7 @@ pub fn write_clif_file<'tcx>(\n ) {\n     use std::io::Write;\n \n-    let symbol_name = tcx.symbol_name(instance).as_str();\n+    let symbol_name = tcx.symbol_name(instance).name.as_str();\n     let clif_file_name = format!(\n         \"{}/{}__{}.{}.clif\",\n         concat!(env!(\"CARGO_MANIFEST_DIR\"), \"/target/out/clif\"),"}, {"sha": "7309332a1571d39c7de31298c9cb1ea185b15d80", "filename": "src/trap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e/src%2Ftrap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e/src%2Ftrap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftrap.rs?ref=bfb49e7d19040dddc0a544fc52dcfb4ec99ab98e", "patch": "@@ -26,7 +26,7 @@ fn codegen_print(fx: &mut FunctionCx<'_, '_, impl cranelift_module::Backend>, ms\n     let msg_id = fx\n         .module\n         .declare_data(\n-            &(symbol_name.as_str().to_string() + msg),\n+            &(symbol_name.name.as_str().to_string() + msg),\n             Linkage::Local,\n             false,\n             None,"}]}