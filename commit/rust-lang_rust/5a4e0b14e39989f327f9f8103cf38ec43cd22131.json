{"sha": "5a4e0b14e39989f327f9f8103cf38ec43cd22131", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhNGUwYjE0ZTM5OTg5ZjMyN2Y5ZjgxMDNjZjM4ZWM0M2NkMjIxMzE=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-04-25T00:12:12Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-04-29T18:34:40Z"}, "message": "Remove use of `ast_map.span_if_local()` and improve diagnostics", "tree": {"sha": "ff5952b977c7ad7bc180f9069900d62ee61cec9b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ff5952b977c7ad7bc180f9069900d62ee61cec9b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5a4e0b14e39989f327f9f8103cf38ec43cd22131", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5a4e0b14e39989f327f9f8103cf38ec43cd22131", "html_url": "https://github.com/rust-lang/rust/commit/5a4e0b14e39989f327f9f8103cf38ec43cd22131", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5a4e0b14e39989f327f9f8103cf38ec43cd22131/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60c8f7dbf5788f1c9f3a27be2e7be28ecf7817ff", "url": "https://api.github.com/repos/rust-lang/rust/commits/60c8f7dbf5788f1c9f3a27be2e7be28ecf7817ff", "html_url": "https://github.com/rust-lang/rust/commit/60c8f7dbf5788f1c9f3a27be2e7be28ecf7817ff"}], "stats": {"total": 21, "additions": 8, "deletions": 13}, "files": [{"sha": "c0a22151a59b07f867243900baedc80cc48c24a6", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 6, "deletions": 11, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5a4e0b14e39989f327f9f8103cf38ec43cd22131/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4e0b14e39989f327f9f8103cf38ec43cd22131/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=5a4e0b14e39989f327f9f8103cf38ec43cd22131", "patch": "@@ -141,7 +141,7 @@ enum ResolutionError<'a> {\n     /// error E0413: declaration shadows an enum variant or unit-like struct in scope\n     DeclarationShadowsEnumVariantOrUnitLikeStruct(Name),\n     /// error E0414: only irrefutable patterns allowed here\n-    OnlyIrrefutablePatternsAllowedHere(DefId, Name),\n+    OnlyIrrefutablePatternsAllowedHere(Name),\n     /// error E0415: identifier is bound more than once in this parameter list\n     IdentifierBoundMoreThanOnceInParameterList(&'a str),\n     /// error E0416: identifier is bound more than once in the same pattern\n@@ -323,22 +323,18 @@ fn resolve_struct_error<'b, 'a: 'b, 'tcx: 'a>(resolver: &'b Resolver<'a, 'tcx>,\n                               or unit-like struct in scope\",\n                              name)\n         }\n-        ResolutionError::OnlyIrrefutablePatternsAllowedHere(did, name) => {\n+        ResolutionError::OnlyIrrefutablePatternsAllowedHere(name) => {\n             let mut err = struct_span_err!(resolver.session,\n                                            span,\n                                            E0414,\n                                            \"only irrefutable patterns allowed here\");\n             err.span_note(span,\n                           \"there already is a constant in scope sharing the same \\\n                            name as this pattern\");\n-            if let Some(sp) = resolver.ast_map.span_if_local(did) {\n-                err.span_note(sp, \"constant defined here\");\n-            }\n             if let Some(binding) = resolver.current_module\n                                            .resolve_name_in_lexical_scope(name, ValueNS) {\n-                if binding.is_import() {\n-                    err.span_note(binding.span, \"constant imported here\");\n-                }\n+                let participle = if binding.is_import() { \"imported\" } else { \"defined\" };\n+                err.span_note(binding.span, &format!(\"constant {} here\", participle));\n             }\n             err\n         }\n@@ -2248,12 +2244,11 @@ impl<'a, 'tcx> Resolver<'a, 'tcx> {\n                                                 depth: 0,\n                                             });\n                         }\n-                        FoundConst(def, name) => {\n+                        FoundConst(_, name) => {\n                             resolve_error(\n                                 self,\n                                 pattern.span,\n-                                ResolutionError::OnlyIrrefutablePatternsAllowedHere(def.def_id(),\n-                                                                                    name)\n+                                ResolutionError::OnlyIrrefutablePatternsAllowedHere(name)\n                             );\n                             self.record_def(pattern.id, err_path_resolution());\n                         }"}, {"sha": "825c39011fcc182cb714f8ab327bc2e2bad98913", "filename": "src/test/compile-fail/const-pattern-irrefutable.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5a4e0b14e39989f327f9f8103cf38ec43cd22131/src%2Ftest%2Fcompile-fail%2Fconst-pattern-irrefutable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5a4e0b14e39989f327f9f8103cf38ec43cd22131/src%2Ftest%2Fcompile-fail%2Fconst-pattern-irrefutable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fconst-pattern-irrefutable.rs?ref=5a4e0b14e39989f327f9f8103cf38ec43cd22131", "patch": "@@ -9,8 +9,8 @@\n // except according to those terms.\n \n mod foo {\n-    pub const b: u8 = 2; //~ NOTE constant defined here\n-    pub const d: u8 = 2; //~ NOTE constant defined here\n+    pub const b: u8 = 2;\n+    pub const d: u8 = 2;\n }\n \n use foo::b as c; //~ NOTE constant imported here"}]}