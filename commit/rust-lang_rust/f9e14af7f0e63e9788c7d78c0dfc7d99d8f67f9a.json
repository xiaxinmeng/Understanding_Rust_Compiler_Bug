{"sha": "f9e14af7f0e63e9788c7d78c0dfc7d99d8f67f9a", "node_id": "C_kwDOAAsO6NoAKGY5ZTE0YWY3ZjBlNjNlOTc4OGM3ZDc4YzBkZmM3ZDk5ZDhmNjdmOWE", "commit": {"author": {"name": "jackh726", "email": "jack.huey@umassmed.edu", "date": "2021-10-18T13:40:27Z"}, "committer": {"name": "jackh726", "email": "jack.huey@umassmed.edu", "date": "2021-10-18T14:11:57Z"}, "message": "Don't just check params", "tree": {"sha": "e24ae0084f9334205485882b68dcc5295c184688", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e24ae0084f9334205485882b68dcc5295c184688"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9e14af7f0e63e9788c7d78c0dfc7d99d8f67f9a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9e14af7f0e63e9788c7d78c0dfc7d99d8f67f9a", "html_url": "https://github.com/rust-lang/rust/commit/f9e14af7f0e63e9788c7d78c0dfc7d99d8f67f9a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9e14af7f0e63e9788c7d78c0dfc7d99d8f67f9a/comments", "author": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jackh726", "id": 31162821, "node_id": "MDQ6VXNlcjMxMTYyODIx", "avatar_url": "https://avatars.githubusercontent.com/u/31162821?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jackh726", "html_url": "https://github.com/jackh726", "followers_url": "https://api.github.com/users/jackh726/followers", "following_url": "https://api.github.com/users/jackh726/following{/other_user}", "gists_url": "https://api.github.com/users/jackh726/gists{/gist_id}", "starred_url": "https://api.github.com/users/jackh726/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jackh726/subscriptions", "organizations_url": "https://api.github.com/users/jackh726/orgs", "repos_url": "https://api.github.com/users/jackh726/repos", "events_url": "https://api.github.com/users/jackh726/events{/privacy}", "received_events_url": "https://api.github.com/users/jackh726/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2da21063f4a3ae87c51de4182a6bc2f784e327c", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2da21063f4a3ae87c51de4182a6bc2f784e327c", "html_url": "https://github.com/rust-lang/rust/commit/c2da21063f4a3ae87c51de4182a6bc2f784e327c"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "7680f8f9ca09771b2390fd80603477edd7aefdcd", "filename": "compiler/rustc_typeck/src/check/wfcheck.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f9e14af7f0e63e9788c7d78c0dfc7d99d8f67f9a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9e14af7f0e63e9788c7d78c0dfc7d99d8f67f9a/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fwfcheck.rs?ref=f9e14af7f0e63e9788c7d78c0dfc7d99d8f67f9a", "patch": "@@ -301,7 +301,6 @@ fn check_gat_where_clauses(\n         sig.output().visit_with(&mut visitor);\n         let mut wf_tys = FxHashSet::default();\n         wf_tys.extend(sig.inputs());\n-        // FIXME: normalize and add normalized inputs?\n \n         for (region, region_idx) in &visitor.regions {\n             for (ty, ty_idx) in &visitor.types {\n@@ -423,12 +422,9 @@ impl<'tcx> TypeVisitor<'tcx> for GATSubstCollector<'tcx> {\n                         GenericArgKind::Lifetime(lt) => {\n                             self.regions.insert((lt, idx));\n                         }\n-                        GenericArgKind::Type(t) => match t.kind() {\n-                            ty::Param(_) => {\n-                                self.types.insert((t, idx));\n-                            }\n-                            _ => {}\n-                        },\n+                        GenericArgKind::Type(t) => {\n+                            self.types.insert((t, idx));\n+                        }\n                         _ => {}\n                     }\n                 }"}, {"sha": "eb2970522e65270fe02d59be667d5a35fa5f56d6", "filename": "src/test/ui/generic-associated-types/self-outlives-lint.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9e14af7f0e63e9788c7d78c0dfc7d99d8f67f9a/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fself-outlives-lint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9e14af7f0e63e9788c7d78c0dfc7d99d8f67f9a/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fself-outlives-lint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fself-outlives-lint.rs?ref=f9e14af7f0e63e9788c7d78c0dfc7d99d8f67f9a", "patch": "@@ -54,10 +54,10 @@ trait Deserializer4 {\n \n struct Wrap<T>(T);\n \n-// Even though we might theoretically want `D: 'x`, because we pass `Wrap<T>` and\n-// we see `&'z Wrap<T>`, we are conservative and only add bounds for direct params\n+// We pass `Wrap<T>` and we see `&'z Wrap<T>`, so we require `D: 'x`\n trait Des {\n     type Out<'x, D>;\n+    //~^ Missing required bounds\n     fn des<'z, T>(&self, data: &'z Wrap<T>) -> Self::Out<'z, Wrap<T>>;\n }\n /*"}, {"sha": "3dacae65267cfff77355f5c187cc0eb735a73ad0", "filename": "src/test/ui/generic-associated-types/self-outlives-lint.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f9e14af7f0e63e9788c7d78c0dfc7d99d8f67f9a/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fself-outlives-lint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f9e14af7f0e63e9788c7d78c0dfc7d99d8f67f9a/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fself-outlives-lint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fgeneric-associated-types%2Fself-outlives-lint.stderr?ref=f9e14af7f0e63e9788c7d78c0dfc7d99d8f67f9a", "patch": "@@ -30,6 +30,14 @@ LL |     type Out<'x, 'y>;\n    |                     |\n    |                     help: add the required where clauses: `where U: 'y, T: 'x`\n \n+error: Missing required bounds on Out\n+  --> $DIR/self-outlives-lint.rs:59:5\n+   |\n+LL |     type Out<'x, D>;\n+   |     ^^^^^^^^^^^^^^^-\n+   |                    |\n+   |                    help: add the required where clauses: `where D: 'x`\n+\n error: Missing required bounds on Out\n   --> $DIR/self-outlives-lint.rs:75:5\n    |\n@@ -46,5 +54,5 @@ LL |     type Out<'x, D>;\n    |                    |\n    |                    help: add the required where clauses: `where D: 'x`\n \n-error: aborting due to 6 previous errors\n+error: aborting due to 7 previous errors\n "}]}