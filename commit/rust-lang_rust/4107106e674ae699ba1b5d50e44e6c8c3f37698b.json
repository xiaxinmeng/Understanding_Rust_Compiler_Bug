{"sha": "4107106e674ae699ba1b5d50e44e6c8c3f37698b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxMDcxMDZlNjc0YWU2OTliYTFiNWQ1MGU0NGU2YzhjM2YzNzY5OGI=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-07-23T13:56:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-23T13:56:57Z"}, "message": "Merge #9678\n\n9678: Add Configuration for Highlight Related Feature r=kdelorey a=kdelorey\n\n# Summary\r\nAdds basic configuration that allows you to control when the highlight related feature is activated. You can control this for references, break points, exit points, and yield points.\r\n\r\nResolves #9618 \r\n\r\n![config](https://user-images.githubusercontent.com/2295721/126728849-a38b560c-b687-42c1-9c41-7584ad718469.gif)\r\n\n\nCo-authored-by: Kevin DeLorey <kdelorey.dev@gmail.com>", "tree": {"sha": "439521a28abce2d96fa490fffce9e248ec3c71ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/439521a28abce2d96fa490fffce9e248ec3c71ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4107106e674ae699ba1b5d50e44e6c8c3f37698b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg+sqpCRBK7hj4Ov3rIwAAy2EIAAi7p6tdMcTpvtaI5TsB76sc\nYpWn0/hcL06EdWjQPK3AX5U0Vfh04gu4S43o/JjjgmwTsMWJfBXrDqvs5nTZ+nal\n54Mckdk087843fXPbT/W/RpGd73Km43QcBoYUlfOmOxUlmOx12tohB9Se9DEW2xZ\nlNquWrfAzgK/hmWMydh3R6k6rmbuZXC7yQa436yLOzEw1HbCaWZQNaF5tDQMnV1q\nswwbo1bmDIypsiklcCe91RGhwuVZtOkx/UNIGOSK2eE2V41H0UktwEnYDX3YRFOF\ndHv0wc9aGSXCAnnAmEyQv57ga3192EhAfIMAQMz71hrZiBzWr4wWVy1ZeGGUSh4=\n=j4Uz\n-----END PGP SIGNATURE-----\n", "payload": "tree 439521a28abce2d96fa490fffce9e248ec3c71ce\nparent 1dd1814100b3b2bdc5cc1d1994b16caa613784b5\nparent 5b9f1732540fa273af84769080a18f484f67c79c\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1627048617 +0000\ncommitter GitHub <noreply@github.com> 1627048617 +0000\n\nMerge #9678\n\n9678: Add Configuration for Highlight Related Feature r=kdelorey a=kdelorey\n\n# Summary\r\nAdds basic configuration that allows you to control when the highlight related feature is activated. You can control this for references, break points, exit points, and yield points.\r\n\r\nResolves #9618 \r\n\r\n![config](https://user-images.githubusercontent.com/2295721/126728849-a38b560c-b687-42c1-9c41-7584ad718469.gif)\r\n\n\nCo-authored-by: Kevin DeLorey <kdelorey.dev@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4107106e674ae699ba1b5d50e44e6c8c3f37698b", "html_url": "https://github.com/rust-lang/rust/commit/4107106e674ae699ba1b5d50e44e6c8c3f37698b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4107106e674ae699ba1b5d50e44e6c8c3f37698b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1dd1814100b3b2bdc5cc1d1994b16caa613784b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1dd1814100b3b2bdc5cc1d1994b16caa613784b5", "html_url": "https://github.com/rust-lang/rust/commit/1dd1814100b3b2bdc5cc1d1994b16caa613784b5"}, {"sha": "5b9f1732540fa273af84769080a18f484f67c79c", "url": "https://api.github.com/repos/rust-lang/rust/commits/5b9f1732540fa273af84769080a18f484f67c79c", "html_url": "https://github.com/rust-lang/rust/commit/5b9f1732540fa273af84769080a18f484f67c79c"}], "stats": {"total": 305, "additions": 278, "deletions": 27}, "files": [{"sha": "c7f2dd95f5e4016e932e3f99ee1449c86311dc86", "filename": "crates/ide/src/highlight_related.rs", "status": "modified", "additions": 212, "deletions": 5, "changes": 217, "blob_url": "https://github.com/rust-lang/rust/blob/4107106e674ae699ba1b5d50e44e6c8c3f37698b/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4107106e674ae699ba1b5d50e44e6c8c3f37698b/crates%2Fide%2Fsrc%2Fhighlight_related.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fhighlight_related.rs?ref=4107106e674ae699ba1b5d50e44e6c8c3f37698b", "patch": "@@ -18,6 +18,14 @@ pub struct HighlightedRange {\n     pub access: Option<ReferenceAccess>,\n }\n \n+#[derive(Default, Clone)]\n+pub struct HighlightRelatedConfig {\n+    pub references: bool,\n+    pub exit_points: bool,\n+    pub break_points: bool,\n+    pub yield_points: bool,\n+}\n+\n // Feature: Highlight Related\n //\n // Highlights constructs related to the thing under the cursor:\n@@ -27,6 +35,7 @@ pub struct HighlightedRange {\n // - if on a `break`, `loop`, `while` or `for` token, highlights all break points for that loop or block context\n pub(crate) fn highlight_related(\n     sema: &Semantics<RootDatabase>,\n+    config: HighlightRelatedConfig,\n     position: FilePosition,\n ) -> Option<Vec<HighlightedRange>> {\n     let _p = profile::span(\"highlight_related\");\n@@ -46,10 +55,13 @@ pub(crate) fn highlight_related(\n     })?;\n \n     match token.kind() {\n-        T![return] | T![?] | T![->] => highlight_exit_points(sema, token),\n-        T![await] | T![async] => highlight_yield_points(token),\n-        T![break] | T![loop] | T![for] | T![while] => highlight_break_points(token),\n-        _ => highlight_references(sema, &syntax, position),\n+        T![return] | T![?] | T![->] if config.exit_points => highlight_exit_points(sema, token),\n+        T![await] | T![async] if config.yield_points => highlight_yield_points(token),\n+        T![break] | T![loop] | T![for] | T![while] if config.break_points => {\n+            highlight_break_points(token)\n+        }\n+        _ if config.references => highlight_references(sema, &syntax, position),\n+        _ => None,\n     }\n }\n \n@@ -260,8 +272,20 @@ mod tests {\n     use super::*;\n \n     fn check(ra_fixture: &str) {\n+        let config = HighlightRelatedConfig {\n+            break_points: true,\n+            exit_points: true,\n+            references: true,\n+            yield_points: true,\n+        };\n+\n+        check_with_config(ra_fixture, config);\n+    }\n+\n+    fn check_with_config(ra_fixture: &str, config: HighlightRelatedConfig) {\n         let (analysis, pos, annotations) = fixture::annotations(ra_fixture);\n-        let hls = analysis.highlight_related(pos).unwrap().unwrap();\n+\n+        let hls = analysis.highlight_related(config, pos).unwrap().unwrap_or(Vec::default());\n \n         let mut expected = annotations\n             .into_iter()\n@@ -726,4 +750,187 @@ fn foo() {\n \"#,\n         );\n     }\n+\n+    #[test]\n+    fn test_hl_disabled_ref_local() {\n+        let config = HighlightRelatedConfig {\n+            references: false,\n+            break_points: true,\n+            exit_points: true,\n+            yield_points: true,\n+        };\n+\n+        let ra_fixture = r#\"\n+fn foo() {\n+    let x$0 = 5;\n+    let y = x * 2;\n+}\"#;\n+\n+        check_with_config(ra_fixture, config);\n+    }\n+\n+    #[test]\n+    fn test_hl_disabled_ref_local_preserved_break() {\n+        let config = HighlightRelatedConfig {\n+            references: false,\n+            break_points: true,\n+            exit_points: true,\n+            yield_points: true,\n+        };\n+\n+        let ra_fixture = r#\"\n+fn foo() {\n+    let x$0 = 5;\n+    let y = x * 2;\n+\n+    loop {\n+        break;\n+    }\n+}\"#;\n+\n+        check_with_config(ra_fixture, config.clone());\n+\n+        let ra_fixture = r#\"\n+fn foo() {\n+    let x = 5;\n+    let y = x * 2;\n+\n+    loop$0 {\n+//  ^^^^\n+        break;\n+//      ^^^^^\n+    }\n+}\"#;\n+\n+        check_with_config(ra_fixture, config);\n+    }\n+\n+    #[test]\n+    fn test_hl_disabled_ref_local_preserved_yield() {\n+        let config = HighlightRelatedConfig {\n+            references: false,\n+            break_points: true,\n+            exit_points: true,\n+            yield_points: true,\n+        };\n+\n+        let ra_fixture = r#\"\n+async fn foo() {\n+    let x$0 = 5;\n+    let y = x * 2;\n+\n+    0.await;\n+}\"#;\n+\n+        check_with_config(ra_fixture, config.clone());\n+\n+        let ra_fixture = r#\"\n+    async fn foo() {\n+//  ^^^^^\n+        let x = 5;\n+        let y = x * 2;\n+\n+        0.await$0;\n+//        ^^^^^\n+}\"#;\n+\n+        check_with_config(ra_fixture, config);\n+    }\n+\n+    #[test]\n+    fn test_hl_disabled_ref_local_preserved_exit() {\n+        let config = HighlightRelatedConfig {\n+            references: false,\n+            break_points: true,\n+            exit_points: true,\n+            yield_points: true,\n+        };\n+\n+        let ra_fixture = r#\"\n+fn foo() -> i32 {\n+    let x$0 = 5;\n+    let y = x * 2;\n+\n+    if true {\n+        return y;\n+    }\n+\n+    0?\n+}\"#;\n+\n+        check_with_config(ra_fixture, config.clone());\n+\n+        let ra_fixture = r#\"\n+fn foo() ->$0 i32 {\n+    let x = 5;\n+    let y = x * 2;\n+\n+    if true {\n+        return y;\n+//      ^^^^^^\n+    }\n+\n+    0?\n+//   ^\n+\"#;\n+\n+        check_with_config(ra_fixture, config);\n+    }\n+\n+    #[test]\n+    fn test_hl_disabled_break() {\n+        let config = HighlightRelatedConfig {\n+            references: true,\n+            break_points: false,\n+            exit_points: true,\n+            yield_points: true,\n+        };\n+\n+        let ra_fixture = r#\"\n+fn foo() {\n+    loop {\n+        break$0;\n+    }\n+}\"#;\n+\n+        check_with_config(ra_fixture, config);\n+    }\n+\n+    #[test]\n+    fn test_hl_disabled_yield() {\n+        let config = HighlightRelatedConfig {\n+            references: true,\n+            break_points: true,\n+            exit_points: true,\n+            yield_points: false,\n+        };\n+\n+        let ra_fixture = r#\"\n+async$0 fn foo() {\n+    0.await;\n+}\"#;\n+\n+        check_with_config(ra_fixture, config);\n+    }\n+\n+    #[test]\n+    fn test_hl_disabled_exit() {\n+        let config = HighlightRelatedConfig {\n+            references: true,\n+            break_points: true,\n+            exit_points: false,\n+            yield_points: true,\n+        };\n+\n+        let ra_fixture = r#\"\n+fn foo() ->$0 i32 {\n+    if true {\n+        return -1;\n+    }\n+\n+    42\n+}\"#;\n+\n+        check_with_config(ra_fixture, config);\n+    }\n }"}, {"sha": "83173e1c6b8afc8f3ba768663d731b3ebfcd5714", "filename": "crates/ide/src/lib.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4107106e674ae699ba1b5d50e44e6c8c3f37698b/crates%2Fide%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4107106e674ae699ba1b5d50e44e6c8c3f37698b/crates%2Fide%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flib.rs?ref=4107106e674ae699ba1b5d50e44e6c8c3f37698b", "patch": "@@ -76,7 +76,7 @@ pub use crate::{\n     expand_macro::ExpandedMacro,\n     file_structure::{StructureNode, StructureNodeKind},\n     folding_ranges::{Fold, FoldKind},\n-    highlight_related::HighlightedRange,\n+    highlight_related::{HighlightRelatedConfig, HighlightedRange},\n     hover::{HoverAction, HoverConfig, HoverDocFormat, HoverGotoTypeData, HoverResult},\n     inlay_hints::{InlayHint, InlayHintsConfig, InlayKind},\n     join_lines::JoinLinesConfig,\n@@ -496,9 +496,12 @@ impl Analysis {\n     /// Computes all ranges to highlight for a given item in a file.\n     pub fn highlight_related(\n         &self,\n+        config: HighlightRelatedConfig,\n         position: FilePosition,\n     ) -> Cancellable<Option<Vec<HighlightedRange>>> {\n-        self.with_db(|db| highlight_related::highlight_related(&Semantics::new(db), position))\n+        self.with_db(|db| {\n+            highlight_related::highlight_related(&Semantics::new(db), config, position)\n+        })\n     }\n \n     /// Computes syntax highlighting for the given file range."}, {"sha": "a4caccbe63c6e7266224a0bf33196e5a7c784beb", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/4107106e674ae699ba1b5d50e44e6c8c3f37698b/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4107106e674ae699ba1b5d50e44e6c8c3f37698b/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=4107106e674ae699ba1b5d50e44e6c8c3f37698b", "patch": "@@ -11,8 +11,8 @@ use std::{ffi::OsString, iter, path::PathBuf};\n \n use flycheck::FlycheckConfig;\n use ide::{\n-    AssistConfig, CompletionConfig, DiagnosticsConfig, HoverConfig, HoverDocFormat,\n-    InlayHintsConfig, JoinLinesConfig,\n+    AssistConfig, CompletionConfig, DiagnosticsConfig, HighlightRelatedConfig, HoverConfig,\n+    HoverDocFormat, InlayHintsConfig, JoinLinesConfig,\n };\n use ide_db::helpers::{\n     insert_use::{ImportGranularity, InsertUseConfig, PrefixKind},\n@@ -147,6 +147,15 @@ config_data! {\n         /// also need to add the folders to Code's `files.watcherExclude`.\n         files_excludeDirs: Vec<PathBuf> = \"[]\",\n \n+        /// Enables highlighting of related references while hovering your mouse above any identifier.\n+        highlightRelated_references: bool = \"true\",\n+        /// Enables highlighting of all exit points while hovering your mouse above any `return`, `?`, or return type arrow (`->`).\n+        highlightRelated_exitPoints: bool = \"true\",\n+        /// Enables highlighting of related references while hovering your mouse `break`, `loop`, `while`, or `for` keywords.\n+        highlightRelated_breakPoints: bool = \"true\",\n+        /// Enables highlighting of all break points for a loop or block context while hovering your mouse above any `async` or `await` keywords.\n+        highlightRelated_yieldPoints: bool = \"true\",\n+\n         /// Use semantic tokens for strings.\n         ///\n         /// In some editors (e.g. vscode) semantic tokens override other highlighting grammars.\n@@ -852,6 +861,15 @@ impl Config {\n             false\n         )\n     }\n+\n+    pub fn highlight_related(&self) -> HighlightRelatedConfig {\n+        HighlightRelatedConfig {\n+            references: self.data.highlightRelated_references,\n+            break_points: self.data.highlightRelated_breakPoints,\n+            exit_points: self.data.highlightRelated_exitPoints,\n+            yield_points: self.data.highlightRelated_yieldPoints,\n+        }\n+    }\n }\n \n #[derive(Deserialize, Debug, Clone)]"}, {"sha": "52b557f156886c2b3cfd7883ca6b67269fa35d11", "filename": "crates/rust-analyzer/src/handlers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/4107106e674ae699ba1b5d50e44e6c8c3f37698b/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4107106e674ae699ba1b5d50e44e6c8c3f37698b/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fhandlers.rs?ref=4107106e674ae699ba1b5d50e44e6c8c3f37698b", "patch": "@@ -1188,7 +1188,7 @@ pub(crate) fn handle_document_highlight(\n     let position = from_proto::file_position(&snap, params.text_document_position_params)?;\n     let line_index = snap.file_line_index(position.file_id)?;\n \n-    let refs = match snap.analysis.highlight_related(position)? {\n+    let refs = match snap.analysis.highlight_related(snap.config.highlight_related(), position)? {\n         None => return Ok(None),\n         Some(refs) => refs,\n     };"}, {"sha": "54328f5135dea878ff3e1e82ee1d0faf7f3283e7", "filename": "docs/user/generated_config.adoc", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4107106e674ae699ba1b5d50e44e6c8c3f37698b/docs%2Fuser%2Fgenerated_config.adoc", "raw_url": "https://github.com/rust-lang/rust/raw/4107106e674ae699ba1b5d50e44e6c8c3f37698b/docs%2Fuser%2Fgenerated_config.adoc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2Fgenerated_config.adoc?ref=4107106e674ae699ba1b5d50e44e6c8c3f37698b", "patch": "@@ -208,6 +208,26 @@ These directories will be ignored by rust-analyzer. They are\n relative to the workspace root, and globs are not supported. You may\n also need to add the folders to Code's `files.watcherExclude`.\n --\n+[[rust-analyzer.highlightRelated.references]]rust-analyzer.highlightRelated.references (default: `true`)::\n++\n+--\n+Enables highlighting of related references while hovering your mouse above any identifier.\n+--\n+[[rust-analyzer.highlightRelated.exitPoints]]rust-analyzer.highlightRelated.exitPoints (default: `true`)::\n++\n+--\n+Enables highlighting of all exit points while hovering your mouse above any `return`, `?`, or return type arrow (`->`).\n+--\n+[[rust-analyzer.highlightRelated.breakPoints]]rust-analyzer.highlightRelated.breakPoints (default: `true`)::\n++\n+--\n+Enables highlighting of related references while hovering your mouse `break`, `loop`, `while`, or `for` keywords.\n+--\n+[[rust-analyzer.highlightRelated.yieldPoints]]rust-analyzer.highlightRelated.yieldPoints (default: `true`)::\n++\n+--\n+Enables highlighting of all break points for a loop or block context while hovering your mouse above any `async` or `await` keywords.\n+--\n [[rust-analyzer.highlighting.strings]]rust-analyzer.highlighting.strings (default: `true`)::\n +\n --"}, {"sha": "3a6f2c5fe9ef1b56beeb58775148d19e6ec58403", "filename": "editors/code/package.json", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/4107106e674ae699ba1b5d50e44e6c8c3f37698b/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/4107106e674ae699ba1b5d50e44e6c8c3f37698b/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=4107106e674ae699ba1b5d50e44e6c8c3f37698b", "patch": "@@ -655,6 +655,26 @@\n                         \"type\": \"string\"\n                     }\n                 },\n+                \"rust-analyzer.highlightRelated.references\": {\n+                    \"markdownDescription\": \"Enables highlighting of related references while hovering your mouse above any identifier.\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n+                \"rust-analyzer.highlightRelated.exitPoints\": {\n+                    \"markdownDescription\": \"Enables highlighting of all exit points while hovering your mouse above any `return`, `?`, or return type arrow (`->`).\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n+                \"rust-analyzer.highlightRelated.breakPoints\": {\n+                    \"markdownDescription\": \"Enables highlighting of related references while hovering your mouse `break`, `loop`, `while`, or `for` keywords.\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n+                \"rust-analyzer.highlightRelated.yieldPoints\": {\n+                    \"markdownDescription\": \"Enables highlighting of all break points for a loop or block context while hovering your mouse above any `async` or `await` keywords.\",\n+                    \"default\": true,\n+                    \"type\": \"boolean\"\n+                },\n                 \"rust-analyzer.highlighting.strings\": {\n                     \"markdownDescription\": \"Use semantic tokens for strings.\\n\\nIn some editors (e.g. vscode) semantic tokens override other highlighting grammars.\\nBy disabling semantic tokens for strings, other grammars can be used to highlight\\ntheir contents.\",\n                     \"default\": true,"}, {"sha": "0987070b940c19ae6942dd0efc460f3acc914bb4", "filename": "editors/code/src/config.ts", "status": "modified", "additions": 0, "deletions": 17, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/4107106e674ae699ba1b5d50e44e6c8c3f37698b/editors%2Fcode%2Fsrc%2Fconfig.ts", "raw_url": "https://github.com/rust-lang/rust/raw/4107106e674ae699ba1b5d50e44e6c8c3f37698b/editors%2Fcode%2Fsrc%2Fconfig.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fconfig.ts?ref=4107106e674ae699ba1b5d50e44e6c8c3f37698b", "patch": "@@ -120,12 +120,6 @@ export class Config {\n         };\n     }\n \n-    get checkOnSave() {\n-        return {\n-            command: this.get<string>(\"checkOnSave.command\"),\n-        };\n-    }\n-\n     get cargoRunner() {\n         return this.get<string | undefined>(\"cargoRunner\");\n     }\n@@ -150,17 +144,6 @@ export class Config {\n         };\n     }\n \n-    get lens() {\n-        return {\n-            enable: this.get<boolean>(\"lens.enable\"),\n-            run: this.get<boolean>(\"lens.run\"),\n-            debug: this.get<boolean>(\"lens.debug\"),\n-            implementations: this.get<boolean>(\"lens.implementations\"),\n-            methodReferences: this.get<boolean>(\"lens.methodReferences\"),\n-            references: this.get<boolean>(\"lens.references\"),\n-        };\n-    }\n-\n     get hoverActions() {\n         return {\n             enable: this.get<boolean>(\"hoverActions.enable\"),"}]}