{"sha": "08b49a5d8fe975bcd8a0526526eb9692f3f3be4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4YjQ5YTVkOGZlOTc1YmNkOGEwNTI2NTI2ZWI5NjkyZjNmM2JlNGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-27T01:02:47Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-06-27T01:02:47Z"}, "message": "Reformulate an assert in ty::tag_variants\n\nThis was doing a redundant hashmap lookup. Removing the redundancy trims 5%\n(2.8s) off rustc's compile time", "tree": {"sha": "7b8d1a3a5679e1f6a276ccb209e11bff4a20eb6c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b8d1a3a5679e1f6a276ccb209e11bff4a20eb6c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08b49a5d8fe975bcd8a0526526eb9692f3f3be4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08b49a5d8fe975bcd8a0526526eb9692f3f3be4c", "html_url": "https://github.com/rust-lang/rust/commit/08b49a5d8fe975bcd8a0526526eb9692f3f3be4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08b49a5d8fe975bcd8a0526526eb9692f3f3be4c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cfaa0f4b91b27abfb3b4fba4d0bb31a5e3da7c89", "url": "https://api.github.com/repos/rust-lang/rust/commits/cfaa0f4b91b27abfb3b4fba4d0bb31a5e3da7c89", "html_url": "https://github.com/rust-lang/rust/commit/cfaa0f4b91b27abfb3b4fba4d0bb31a5e3da7c89"}], "stats": {"total": 9, "additions": 7, "deletions": 2}, "files": [{"sha": "f9397a05adf765ca0920cfee6291a0b72c1c340d", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/08b49a5d8fe975bcd8a0526526eb9692f3f3be4c/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08b49a5d8fe975bcd8a0526526eb9692f3f3be4c/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=08b49a5d8fe975bcd8a0526526eb9692f3f3be4c", "patch": "@@ -2702,8 +2702,13 @@ fn tag_variants(&ctxt cx, &ast::def_id id) -> vec[variant_info] {\n     if (cx.sess.get_targ_crate_num() != id._0) {\n         ret creader::get_tag_variants(cx, id);\n     }\n-    assert (cx.items.contains_key(id._1));\n-    alt (cx.items.get(id._1)) {\n+    auto item = alt (cx.items.find(id._1)) {\n+        case (some(?i)) { i }\n+        case (none) {\n+            cx.sess.bug(\"expected to find cached node_item\")\n+        }\n+    };\n+    alt (item) {\n         case (ast_map::node_item(?item)) {\n             alt (item.node) {\n                 case (ast::item_tag(?variants, _)) {"}]}