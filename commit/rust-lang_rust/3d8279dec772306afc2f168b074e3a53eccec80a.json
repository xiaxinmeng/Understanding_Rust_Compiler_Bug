{"sha": "3d8279dec772306afc2f168b074e3a53eccec80a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkODI3OWRlYzc3MjMwNmFmYzJmMTY4YjA3NGUzYTUzZWNjZWM4MGE=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-01-31T08:36:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-31T08:36:17Z"}, "message": "Rollup merge of #47890 - pftbest:no_trap, r=alexcrichton\n\n[MSP430] Don't enable trap_unreachable option by default on msp.\n\nSince MSP430 doesn't meaningfully support faulting on illegal\ninstructions, LLVM generates a call to abort() function instead\nof a trap instruction. Such calls are 4 bytes long, and that is\ntoo much overhead for such small target.\n\nr? @alexcrichton", "tree": {"sha": "c6609e83f05b4e8eb56f9eaf85c635804d94c922", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c6609e83f05b4e8eb56f9eaf85c635804d94c922"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3d8279dec772306afc2f168b074e3a53eccec80a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3d8279dec772306afc2f168b074e3a53eccec80a", "html_url": "https://github.com/rust-lang/rust/commit/3d8279dec772306afc2f168b074e3a53eccec80a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3d8279dec772306afc2f168b074e3a53eccec80a/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fde67b6ae3baa7063224d5efd7fccbfbdfca383b", "url": "https://api.github.com/repos/rust-lang/rust/commits/fde67b6ae3baa7063224d5efd7fccbfbdfca383b", "html_url": "https://github.com/rust-lang/rust/commit/fde67b6ae3baa7063224d5efd7fccbfbdfca383b"}, {"sha": "1e380cbfdd96365ef0eb6dfec341e85b68fa64b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/1e380cbfdd96365ef0eb6dfec341e85b68fa64b5", "html_url": "https://github.com/rust-lang/rust/commit/1e380cbfdd96365ef0eb6dfec341e85b68fa64b5"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "966df897f01f1e09295b609d7c3530fbb5e4378a", "filename": "src/librustc_back/target/msp430_none_elf.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3d8279dec772306afc2f168b074e3a53eccec80a/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3d8279dec772306afc2f168b074e3a53eccec80a/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Ftarget%2Fmsp430_none_elf.rs?ref=3d8279dec772306afc2f168b074e3a53eccec80a", "patch": "@@ -53,6 +53,12 @@ pub fn target() -> TargetResult {\n             // don't want to invoke that many gcc instances.\n             default_codegen_units: Some(1),\n \n+            // Since MSP430 doesn't meaningfully support faulting on illegal\n+            // instructions, LLVM generates a call to abort() function instead\n+            // of a trap instruction. Such calls are 4 bytes long, and that is\n+            // too much overhead for such small target.\n+            trap_unreachable: false,\n+\n             .. Default::default( )\n         }\n     })"}]}