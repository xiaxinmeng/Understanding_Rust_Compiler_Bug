{"sha": "f7cd789ebc135cb165f00e64a7e5edaf821c0c62", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3Y2Q3ODllYmMxMzVjYjE2NWYwMGU2NGE3ZTVlZGFmODIxYzBjNjI=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-05-27T15:03:50Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-05-27T15:03:50Z"}, "message": "Catch panics from the parser while rewriting macro calls", "tree": {"sha": "84c3243b38bb0355485b7cc6594b5dd52293cb9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84c3243b38bb0355485b7cc6594b5dd52293cb9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7cd789ebc135cb165f00e64a7e5edaf821c0c62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7cd789ebc135cb165f00e64a7e5edaf821c0c62", "html_url": "https://github.com/rust-lang/rust/commit/f7cd789ebc135cb165f00e64a7e5edaf821c0c62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7cd789ebc135cb165f00e64a7e5edaf821c0c62/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c1b4f76bd2a6ef5cb64eaec4b4d56f76c88c292", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c1b4f76bd2a6ef5cb64eaec4b4d56f76c88c292", "html_url": "https://github.com/rust-lang/rust/commit/1c1b4f76bd2a6ef5cb64eaec4b4d56f76c88c292"}], "stats": {"total": 32, "additions": 18, "deletions": 14}, "files": [{"sha": "d25106c49616eae6501da6a3e92821482fd1d11e", "filename": "src/macros.rs", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f7cd789ebc135cb165f00e64a7e5edaf821c0c62/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7cd789ebc135cb165f00e64a7e5edaf821c0c62/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=f7cd789ebc135cb165f00e64a7e5edaf821c0c62", "patch": "@@ -10,6 +10,7 @@\n // and those with brackets will be formatted as array literals.\n \n use std::collections::HashMap;\n+use std::panic::{catch_unwind, AssertUnwindSafe};\n \n use syntax::parse::new_parser_from_tts;\n use syntax::parse::parser::Parser;\n@@ -208,21 +209,24 @@ pub(crate) fn rewrite_macro(\n     shape: Shape,\n     position: MacroPosition,\n ) -> Option<String> {\n-    let should_skip = context\n-        .skip_macro_names\n-        .borrow()\n-        .contains(&context.snippet(mac.node.path.span).to_owned());\n-    if should_skip {\n-        None\n-    } else {\n-        let guard = InsideMacroGuard::inside_macro_context(context);\n-        let result =\n-            rewrite_macro_inner(mac, extra_ident, context, shape, position, guard.is_nested);\n-        if result.is_none() {\n-            context.macro_rewrite_failure.replace(true);\n+    catch_unwind(AssertUnwindSafe(|| {\n+        let should_skip = context\n+            .skip_macro_names\n+            .borrow()\n+            .contains(&context.snippet(mac.node.path.span).to_owned());\n+        if should_skip {\n+            None\n+        } else {\n+            let guard = InsideMacroGuard::inside_macro_context(context);\n+            let result =\n+                rewrite_macro_inner(mac, extra_ident, context, shape, position, guard.is_nested);\n+            if result.is_none() {\n+                context.macro_rewrite_failure.replace(true);\n+            }\n+            result\n         }\n-        result\n-    }\n+    }))\n+    .ok()?\n }\n \n fn check_keyword<'a, 'b: 'a>(parser: &'a mut Parser<'b>) -> Option<MacroArg> {"}]}