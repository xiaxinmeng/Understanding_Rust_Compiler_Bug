{"sha": "5c23d21e83606611988e5b218d48e2ed0549a6d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjMjNkMjFlODM2MDY2MTE5ODhlNWIyMThkNDhlMmVkMDU0OWE2ZDM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-13T23:11:44Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-03-13T23:12:38Z"}, "message": "rt: Remove an incorrect assert in lock_and_signal\n\nThis assert doesn't hold because it isn't made while holding the lock", "tree": {"sha": "66273dc38bea522049d198e98e2fa17f7c65960c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66273dc38bea522049d198e98e2fa17f7c65960c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c23d21e83606611988e5b218d48e2ed0549a6d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c23d21e83606611988e5b218d48e2ed0549a6d3", "html_url": "https://github.com/rust-lang/rust/commit/5c23d21e83606611988e5b218d48e2ed0549a6d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c23d21e83606611988e5b218d48e2ed0549a6d3/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8cbaebbb49a875728f95d413d7352f77cc97d04c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8cbaebbb49a875728f95d413d7352f77cc97d04c", "html_url": "https://github.com/rust-lang/rust/commit/8cbaebbb49a875728f95d413d7352f77cc97d04c"}], "stats": {"total": 1, "additions": 0, "deletions": 1}, "files": [{"sha": "98ec502a45241dfb255d079940106ce41c58fa88", "filename": "src/rt/sync/lock_and_signal.cpp", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c23d21e83606611988e5b218d48e2ed0549a6d3/src%2Frt%2Fsync%2Flock_and_signal.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/5c23d21e83606611988e5b218d48e2ed0549a6d3/src%2Frt%2Fsync%2Flock_and_signal.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Fsync%2Flock_and_signal.cpp?ref=5c23d21e83606611988e5b218d48e2ed0549a6d3", "patch": "@@ -43,7 +43,6 @@ lock_and_signal::lock_and_signal()\n #endif\n \n lock_and_signal::~lock_and_signal() {\n-    assert(_holding_thread == INVALID_THREAD);\n #if defined(__WIN32__)\n     CloseHandle(_event);\n     DeleteCriticalSection(&_cs);"}]}