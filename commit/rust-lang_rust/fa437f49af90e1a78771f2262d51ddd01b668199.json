{"sha": "fa437f49af90e1a78771f2262d51ddd01b668199", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNDM3ZjQ5YWY5MGUxYTc4NzcxZjIyNjJkNTFkZGQwMWI2NjgxOTk=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-04-12T16:36:43Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2017-04-12T16:36:43Z"}, "message": "do not consult union-find during `fudge_regions_if_ok`", "tree": {"sha": "86e550aacd5942451da8a97bc1ce819cbcd91078", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/86e550aacd5942451da8a97bc1ce819cbcd91078"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa437f49af90e1a78771f2262d51ddd01b668199", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa437f49af90e1a78771f2262d51ddd01b668199", "html_url": "https://github.com/rust-lang/rust/commit/fa437f49af90e1a78771f2262d51ddd01b668199", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa437f49af90e1a78771f2262d51ddd01b668199/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7832db8031a9051d377e1da92bbcd56e366354c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/7832db8031a9051d377e1da92bbcd56e366354c1", "html_url": "https://github.com/rust-lang/rust/commit/7832db8031a9051d377e1da92bbcd56e366354c1"}], "stats": {"total": 30, "additions": 7, "deletions": 23}, "files": [{"sha": "72b23a3bc181cc0f1ed060dc7d12c4c9fcc49ef6", "filename": "src/librustc/infer/fudge.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/fa437f49af90e1a78771f2262d51ddd01b668199/src%2Flibrustc%2Finfer%2Ffudge.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa437f49af90e1a78771f2262d51ddd01b668199/src%2Flibrustc%2Finfer%2Ffudge.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ffudge.rs?ref=fa437f49af90e1a78771f2262d51ddd01b668199", "patch": "@@ -135,19 +135,11 @@ impl<'a, 'gcx, 'tcx> TypeFolder<'gcx, 'tcx> for RegionFudger<'a, 'gcx, 'tcx> {\n                         ty\n                     }\n \n-                    Some(info) => {\n+                    Some(&origin) => {\n                         // This variable was created during the\n-                        // fudging; it was mapped the root\n-                        // `root_vid`. There are now two\n-                        // possibilities: either the root was creating\n-                        // during the fudging too, in which case we\n-                        // want a fresh variable, or it was not, in\n-                        // which case we can return it.\n-                        if self.type_variables.contains_key(&info.root_vid) {\n-                            self.infcx.next_ty_var(info.root_origin)\n-                        } else {\n-                            self.infcx.tcx.mk_var(info.root_vid)\n-                        }\n+                        // fudging. Recreate it with a fresh variable\n+                        // here.\n+                        self.infcx.next_ty_var(origin)\n                     }\n                 }\n             }"}, {"sha": "34bb9feb5c921850955739ed5666d6144698ea18", "filename": "src/librustc/infer/type_variable.rs", "status": "modified", "additions": 3, "deletions": 11, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/fa437f49af90e1a78771f2262d51ddd01b668199/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa437f49af90e1a78771f2262d51ddd01b668199/src%2Flibrustc%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ftype_variable.rs?ref=fa437f49af90e1a78771f2262d51ddd01b668199", "patch": "@@ -67,12 +67,7 @@ pub enum TypeVariableOrigin {\n     Generalized(ty::TyVid),\n }\n \n-pub type TypeVariableMap = FxHashMap<ty::TyVid, TypeVariableInfo>;\n-\n-pub struct TypeVariableInfo {\n-    pub root_vid: ty::TyVid,\n-    pub root_origin: TypeVariableOrigin,\n-}\n+pub type TypeVariableMap = FxHashMap<ty::TyVid, TypeVariableOrigin>;\n \n struct TypeVariableData<'tcx> {\n     value: TypeVariableValue<'tcx>,\n@@ -294,8 +289,6 @@ impl<'tcx> TypeVariableTable<'tcx> {\n     /// along with their origin.\n     pub fn types_created_since_snapshot(&mut self, s: &Snapshot) -> TypeVariableMap {\n         let actions_since_snapshot = self.values.actions_since_snapshot(&s.snapshot);\n-        let eq_relations = &mut self.eq_relations;\n-        let values = &self.values;\n \n         actions_since_snapshot\n             .iter()\n@@ -304,9 +297,8 @@ impl<'tcx> TypeVariableTable<'tcx> {\n                 _ => None,\n             })\n             .map(|vid| {\n-                let root_vid = eq_relations.find(vid);\n-                let root_origin = values.get(vid.index as usize).origin.clone();\n-                (vid, TypeVariableInfo { root_vid, root_origin })\n+                let origin = self.values.get(vid.index as usize).origin.clone();\n+                (vid, origin)\n             })\n             .collect()\n     }"}]}