{"sha": "ac773718522d12b897c1e927bfcb5b083e35d19e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFjNzczNzE4NTIyZDEyYjg5N2MxZTkyN2JmY2I1YjA4M2UzNWQxOWU=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-07-09T12:23:00Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-07-09T12:23:00Z"}, "message": "Add a feature flag for the JIT", "tree": {"sha": "b833cbe176e6351b650799476a506d49060df6d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b833cbe176e6351b650799476a506d49060df6d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ac773718522d12b897c1e927bfcb5b083e35d19e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ac773718522d12b897c1e927bfcb5b083e35d19e", "html_url": "https://github.com/rust-lang/rust/commit/ac773718522d12b897c1e927bfcb5b083e35d19e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ac773718522d12b897c1e927bfcb5b083e35d19e/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b6150be206b22954455a4f7c258ac195f79e84ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/b6150be206b22954455a4f7c258ac195f79e84ae", "html_url": "https://github.com/rust-lang/rust/commit/b6150be206b22954455a4f7c258ac195f79e84ae"}], "stats": {"total": 24, "additions": 15, "deletions": 9}, "files": [{"sha": "6c455c51dad04344abfd91755bbd30d6d2df3739", "filename": "Cargo.toml", "status": "modified", "additions": 5, "deletions": 3, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ac773718522d12b897c1e927bfcb5b083e35d19e/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/ac773718522d12b897c1e927bfcb5b083e35d19e/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=ac773718522d12b897c1e927bfcb5b083e35d19e", "patch": "@@ -12,13 +12,15 @@ crate-type = [\"dylib\"]\n cranelift-codegen = { git = \"https://github.com/bytecodealliance/wasmtime/\", branch = \"main\", features = [\"unwind\"] }\n cranelift-frontend = { git = \"https://github.com/bytecodealliance/wasmtime/\", branch = \"main\" }\n cranelift-module = { git = \"https://github.com/bytecodealliance/wasmtime/\", branch = \"main\" }\n+cranelift-simplejit = { git = \"https://github.com/bytecodealliance/wasmtime/\", branch = \"main\", optional = true }\n cranelift-object = { git = \"https://github.com/bytecodealliance/wasmtime/\", branch = \"main\" }\n target-lexicon = \"0.10.0\"\n \n ar = \"0.8.0\"\n byteorder = \"1.2.7\"\n indexmap = \"1.0.2\"\n cfg-if = \"0.1.10\"\n+libloading = { version = \"0.6.0\", optional = true }\n \n [dependencies.object]\n version = \"0.20.0\"\n@@ -41,9 +43,9 @@ features = [\"write\"] # We don't need read support\n #[patch.crates-io]\n #gimli = { path = \"../\" }\n \n-[target.'cfg(not(target_arch = \"wasm32\"))'.dependencies]\n-cranelift-simplejit = { git = \"https://github.com/bytecodealliance/wasmtime/\", branch = \"main\" }\n-libloading = \"0.6.0\"\n+[features]\n+default = [\"jit\"]\n+jit = [\"cranelift-simplejit\", \"libloading\"]\n \n [profile.dev]\n # By compiling dependencies with optimizations, performing tests gets much faster."}, {"sha": "b317f31ff9009abdfb343576a37e39cdf4e35b3b", "filename": "src/atomic_shim.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ac773718522d12b897c1e927bfcb5b083e35d19e/src%2Fatomic_shim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac773718522d12b897c1e927bfcb5b083e35d19e/src%2Fatomic_shim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fatomic_shim.rs?ref=ac773718522d12b897c1e927bfcb5b083e35d19e", "patch": "@@ -5,6 +5,7 @@\n \n use crate::prelude::*;\n \n+#[cfg(feature = \"jit\")]\n #[no_mangle]\n pub static mut __cg_clif_global_atomic_mutex: libc::pthread_mutex_t = libc::PTHREAD_MUTEX_INITIALIZER;\n "}, {"sha": "219fa183051448d88c3667f5e84cf937a09cf7ef", "filename": "src/debuginfo/emit.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ac773718522d12b897c1e927bfcb5b083e35d19e/src%2Fdebuginfo%2Femit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac773718522d12b897c1e927bfcb5b083e35d19e/src%2Fdebuginfo%2Femit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Femit.rs?ref=ac773718522d12b897c1e927bfcb5b083e35d19e", "patch": "@@ -1,5 +1,3 @@\n-use std::convert::TryInto;\n-\n use rustc_data_structures::fx::FxHashMap;\n \n use gimli::write::{Address, AttributeValue, EndianVec, Result, Sections, Writer};\n@@ -70,10 +68,13 @@ impl WriterRelocate {\n         }\n     }\n \n+    #[cfg(feature = \"jit\")]\n     pub(super) fn relocate_for_jit(\n         mut self,\n         jit_module: &mut cranelift_module::Module<cranelift_simplejit::SimpleJITBackend>,\n     ) -> Vec<u8> {\n+        use std::convert::TryInto;\n+\n         for reloc in self.relocs.drain(..) {\n             match reloc.name {\n                 super::DebugRelocName::Section(_) => unreachable!(),"}, {"sha": "4bc3859652db23b584a6305bd3fe8a6b01f51602", "filename": "src/debuginfo/unwind.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ac773718522d12b897c1e927bfcb5b083e35d19e/src%2Fdebuginfo%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac773718522d12b897c1e927bfcb5b083e35d19e/src%2Fdebuginfo%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdebuginfo%2Funwind.rs?ref=ac773718522d12b897c1e927bfcb5b083e35d19e", "patch": "@@ -69,6 +69,7 @@ impl<'tcx> UnwindContext<'tcx> {\n         }\n     }\n \n+    #[cfg(feature = \"jit\")]\n     pub(crate) unsafe fn register_jit(\n         self,\n         jit_module: &mut Module<cranelift_simplejit::SimpleJITBackend>,"}, {"sha": "112741b619115ad7299e91667ea55d15899ce2e8", "filename": "src/driver/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ac773718522d12b897c1e927bfcb5b083e35d19e/src%2Fdriver%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac773718522d12b897c1e927bfcb5b083e35d19e/src%2Fdriver%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver%2Fmod.rs?ref=ac773718522d12b897c1e927bfcb5b083e35d19e", "patch": "@@ -6,7 +6,7 @@ use rustc_middle::mir::mono::{Linkage as RLinkage, MonoItem, Visibility};\n use crate::prelude::*;\n \n mod aot;\n-#[cfg(not(target_arch = \"wasm32\"))]\n+#[cfg(feature = \"jit\")]\n mod jit;\n \n pub(crate) fn codegen_crate(\n@@ -19,11 +19,11 @@ pub(crate) fn codegen_crate(\n     if std::env::var(\"CG_CLIF_JIT\").is_ok()\n         && tcx.sess.crate_types().contains(&rustc_session::config::CrateType::Executable)\n     {\n-        #[cfg(not(target_arch = \"wasm32\"))]\n+        #[cfg(feature = \"jit\")]\n         let _: ! = jit::run_jit(tcx);\n \n-        #[cfg(target_arch = \"wasm32\")]\n-        panic!(\"jit not supported on wasm\");\n+        #[cfg(not(feature = \"jit\"))]\n+        tcx.sess.fatal(\"jit support was disabled when compiling rustc_codegen_cranelift\");\n     }\n \n     aot::run_aot(tcx, metadata, need_metadata_module)"}, {"sha": "93144ae09a0486358507bee5e7b1dd533a0b98ac", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ac773718522d12b897c1e927bfcb5b083e35d19e/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ac773718522d12b897c1e927bfcb5b083e35d19e/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=ac773718522d12b897c1e927bfcb5b083e35d19e", "patch": "@@ -4,6 +4,7 @@\n #![warn(unused_lifetimes)]\n \n extern crate flate2;\n+#[cfg(feature = \"jit\")]\n extern crate libc;\n extern crate rustc_middle;\n extern crate rustc_codegen_ssa;"}]}