{"sha": "225f50ea9626b9a2813820cf1e03bb82f337f959", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNWY1MGVhOTYyNmI5YTI4MTM4MjBjZjFlMDNiYjgyZjMzN2Y5NTk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-02T21:07:32Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-05T20:23:11Z"}, "message": "Begin remove old LLVM configuration code", "tree": {"sha": "894e383bd06fc252246659e040e0942f6cd85cdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/894e383bd06fc252246659e040e0942f6cd85cdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/225f50ea9626b9a2813820cf1e03bb82f337f959", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/225f50ea9626b9a2813820cf1e03bb82f337f959", "html_url": "https://github.com/rust-lang/rust/commit/225f50ea9626b9a2813820cf1e03bb82f337f959", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/225f50ea9626b9a2813820cf1e03bb82f337f959/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0ff3db258dee4aa6017d1bb1bd8b6f52394a5c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0ff3db258dee4aa6017d1bb1bd8b6f52394a5c0", "html_url": "https://github.com/rust-lang/rust/commit/a0ff3db258dee4aa6017d1bb1bd8b6f52394a5c0"}], "stats": {"total": 166, "additions": 61, "deletions": 105}, "files": [{"sha": "ebdea8c89bef65a5cd44e85c02f15a0fbf70ef8c", "filename": "configure", "status": "modified", "additions": 61, "deletions": 105, "changes": 166, "blob_url": "https://github.com/rust-lang/rust/blob/225f50ea9626b9a2813820cf1e03bb82f337f959/configure", "raw_url": "https://github.com/rust-lang/rust/raw/225f50ea9626b9a2813820cf1e03bb82f337f959/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=225f50ea9626b9a2813820cf1e03bb82f337f959", "patch": "@@ -306,51 +306,21 @@ fi\n \n if [ ! -z \"$CFG_LLVM_ROOT\" -a -e \"$CFG_LLVM_ROOT/bin/llvm-config\" ]\n then\n-    CFG_LLVM_CONFIG=\"$CFG_LLVM_ROOT/bin/llvm-config\"\n-fi\n-\n-if [ ! -z \"$CFG_LLVM_ROOT\" -a -z \"$CFG_LLVM_CONFIG\" ]\n-then\n-    CFG_LLVM_INCDIR=\"$CFG_LLVM_ROOT/include\"\n-    CFG_LLVM_BINDIR=\"$CFG_LLVM_ROOT/bin\"\n-    CFG_LLVM_LIBDIR=\"$CFG_LLVM_ROOT/lib\"\n-    CFG_LLVM_CXXFLAGS=\"-I$CFG_LLVM_INCDIR\"\n-    CFG_LLVM_LDFLAGS=\"\"\n-    CFG_LLVM_LIBS=$(find \"$CFG_LLVM_LIBDIR\" \\\n-                    -name '*.lib' \\\n-                    -exec echo '\\\"{}\\\"' ';' \\\n-                    | xargs echo)\n-    CFG_LLVM_VERSION=$(\"$CFG_LLVM_BINDIR/llc\" \\\n-                       --version \\\n-                       | grep version \\\n-                       | cut -d ' ' -f 5-)\n-    CFG_LLVM_TRIPLE=$(\"$CFG_LLVM_BINDIR/llc\" \\\n-                      --version \\\n-                      | grep Host: \\\n-                      | cut -d ' ' -f 4-)\n-elif [ ! -z \"$CFG_LLVM_CONFIG\" ]\n-then\n-    CFG_LLVM_VERSION=$($CFG_LLVM_CONFIG --version)\n-    CFG_LLVM_INCDIR=$($CFG_LLVM_CONFIG --includedir)\n-    CFG_LLVM_BINDIR=$($CFG_LLVM_CONFIG --bindir)\n-    CFG_LLVM_LIBDIR=$($CFG_LLVM_CONFIG --libdir)\n-    CFG_LLVM_CXXFLAGS=$($CFG_LLVM_CONFIG --cxxflags)\n-    CFG_LLVM_LDFLAGS=$($CFG_LLVM_CONFIG --ldflags)\n-    CFG_LLVM_LIBS=$($CFG_LLVM_CONFIG --libs)\n-    CFG_LLVM_TRIPLE=$($CFG_LLVM_CONFIG --host-target)\n-else\n-    err \"no llvm-config found and no --llvm-root specified\"\n+    step_msg \"using custom LLVM\"\n+\n+    LLVM_CONFIG=\"$CFG_LLVM_ROOT/bin/llvm-config\"\n+    LLVM_VERSION=$($CFG_LLVM_CONFIG --version)\n+\n+    case $LLVM_VERSION in\n+\t(3.0svn | 3.0 | 3.1svn)\n+\t    step_msg \"found ok version of LLVM: $CFG_LLVM_VERSION\"\n+\t    ;;\n+\t(*)\n+\t    err \"bad LLVM version: $CFG_LLVM_VERSION, need >=3.0svn\"\n+\t    ;;\n+    esac\n fi\n \n-case $CFG_LLVM_VERSION in\n-    (3.0svn | 3.0 | 3.1svn)\n-    step_msg \"found ok version of LLVM: $CFG_LLVM_VERSION\"\n-    ;;\n-    (*)\n-    err \"bad LLVM version: $CFG_LLVM_VERSION, need >=3.0svn\"\n-    ;;\n-esac\n-\n if [ ! -z \"$CFG_ENABLE_CLANG\" ]\n then\n     if [ -z \"$CFG_CLANG\" ]\n@@ -381,18 +351,6 @@ then\n     CFG_PREFIX=/usr/local\n fi\n \n-if [ ! -z \"$CFG_LLVM_TRIPLE\" ]\n-then\n-    if [ $CFG_HOST_TRIPLE != $CFG_LLVM_TRIPLE ]\n-    then\n-        warn \"LLVM host-triple $CFG_LLVM_TRIPLE differs from\"\n-        warn \"detected host triple $CFG_HOST_TRIPLE\"\n-        warn \"choosing LLVM host-triple instead\"\n-        msg \"\"\n-        CFG_HOST_TRIPLE=$CFG_LLVM_TRIPLE\n-    fi\n-fi\n-\n if [ -z \"$CFG_TARGET_TRIPLES\" ]\n then\n     CFG_TARGET_TRIPLES=\"${CFG_HOST_TRIPLE}\"\n@@ -405,14 +363,6 @@ putvar CFG_C_COMPILER\n putvar CFG_PREFIX\n \n putvar CFG_LLVM_ROOT\n-putvar CFG_LLVM_CONFIG\n-putvar CFG_LLVM_INCDIR\n-putvar CFG_LLVM_BINDIR\n-putvar CFG_LLVM_LIBDIR\n-putvar CFG_LLVM_CXXFLAGS\n-putvar CFG_LLVM_LDFLAGS\n-putvar CFG_LLVM_LIBS\n-putvar CFG_LLVM_TRIPLE\n \n step_msg \"making directories\"\n \n@@ -494,53 +444,59 @@ msg\n \n \n # Configure llvm. Here we go...\n-step_msg \"configuring LLVM\"\n-\n CFG_LLVM_SRC_DIR=${CFG_SRC_DIR}src/llvm\n CFG_LLVM_BUILD_DIR=${CFG_BUILD_DIR}/llvm\n # Just use LLVM straight from its build directory to avoid 'make install' time\n CFG_LLVM_INST_DIR=${CFG_LLVM_BUILD_DIR}/Release+Asserts\n \n-LLVM_TARGETS=\"--enable-targets=x86,x86_64\"\n-LLVM_BUILD=\"--build=${CFG_HOST_TRIPLE}\"\n-LLVM_HOST=\"--host=${CFG_HOST_TRIPLE}\"\n-LLVM_TARGET=\"--target=${CFG_HOST_TRIPLE}\"\n-LLVM_OPTS=\"--enable-optimized --disable-docs\"\n-\n-LLVM_CXX_32=\"g++ -m32\"\n-LLVM_CC_32=\"gcc -m32\"\n-LLVM_CFLAGS_32=\"-m32\"\n-LLVM_CXXFLAGS_32=\"-m32\"\n-LLVM_LDFLAGS_32=\"-m32\"\n-\n-# FIXME: Need to change flags for x64\n-LLVM_CXX=$LLVM_CXX_32\n-LLVM_CC=$LLVM_CC_32\n-LLVM_CFLAGS=$LLVM_CFLAGS_32\n-LLVM_CXXFLAGS=$LLVM_CXXFLAGS_32\n-LLVM_LDFLAGS=$LLVM_LDFLAGS_32\n-\n-CXX=$LLVM_CXX\n-CC=$LLVM_CC\n-CFLAGS=$LLVM_CFLAGS\n-CXXFLAGS=$LLVM_CXXFLAGS\n-LDFLAGS=$LLVM_LDFLAGS\n-\n-LLVM_FLAGS=\"$LLVM_TARGETS $LLVM_OPTS $LLVM_BUILD $LLVM_HOST $LLVM_TARGET\"\n-\n-msg \"configuring LLVM with:\"\n-msg \"$LLVM_FLAGS\"\n-\n-export CXX\n-export CC\n-export CFLAGS\n-export CXXFLAGS\n-export LDFLAGS\n-\n-cd $CFG_LLVM_BUILD_DIR\n-# FIXME: This won't work if CFG_SRC_DIR is absolute\n-${CFG_BUILD_DIR}/${CFG_LLVM_SRC_DIR}/configure $LLVM_FLAGS\n-cd $CFG_BUILD_DIR\n+if [ -z $CFG_LLVM_ROOT ]\n+then\n+    step_msg \"configuring LLVM\"\n+\n+    LLVM_TARGETS=\"--enable-targets=x86,x86_64\"\n+    LLVM_BUILD=\"--build=${CFG_HOST_TRIPLE}\"\n+    LLVM_HOST=\"--host=${CFG_HOST_TRIPLE}\"\n+    LLVM_TARGET=\"--target=${CFG_HOST_TRIPLE}\"\n+    LLVM_OPTS=\"--enable-optimized --disable-docs\"\n+\n+    LLVM_CXX_32=\"g++ -m32\"\n+    LLVM_CC_32=\"gcc -m32\"\n+    LLVM_CFLAGS_32=\"-m32\"\n+    LLVM_CXXFLAGS_32=\"-m32\"\n+    LLVM_LDFLAGS_32=\"-m32\"\n+\n+    # FIXME: Need to change flags for x64\n+    LLVM_CXX=$LLVM_CXX_32\n+    LLVM_CC=$LLVM_CC_32\n+    LLVM_CFLAGS=$LLVM_CFLAGS_32\n+    LLVM_CXXFLAGS=$LLVM_CXXFLAGS_32\n+    LLVM_LDFLAGS=$LLVM_LDFLAGS_32\n+\n+    CXX=$LLVM_CXX\n+    CC=$LLVM_CC\n+    CFLAGS=$LLVM_CFLAGS\n+    CXXFLAGS=$LLVM_CXXFLAGS\n+    LDFLAGS=$LLVM_LDFLAGS\n+\n+    LLVM_FLAGS=\"$LLVM_TARGETS $LLVM_OPTS $LLVM_BUILD $LLVM_HOST $LLVM_TARGET\"\n+\n+    msg \"configuring LLVM with:\"\n+    msg \"$LLVM_FLAGS\"\n+\n+    export CXX\n+    export CC\n+    export CFLAGS\n+    export CXXFLAGS\n+    export LDFLAGS\n+\n+    cd $CFG_LLVM_BUILD_DIR\n+    # FIXME: This won't work if CFG_SRC_DIR is absolute\n+    ${CFG_BUILD_DIR}/${CFG_LLVM_SRC_DIR}/configure $LLVM_FLAGS\n+    cd $CFG_BUILD_DIR\n+else\n+    # The user is using their own LLVM\n+    CFG_LLVM_INST_DIR=$CFG_LLVM_ROOT\n+fi\n \n putvar CFG_LLVM_SRC_DIR\n putvar CFG_LLVM_BUILD_DIR"}]}