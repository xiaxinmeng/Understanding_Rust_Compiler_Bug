{"sha": "bfa0358d2a7d0f0989b3a4374df9077fece170f9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmYTAzNThkMmE3ZDBmMDk4OWIzYTQzNzRkZjkwNzdmZWNlMTcwZjk=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2021-07-24T16:51:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-24T16:51:57Z"}, "message": "Rollup merge of #87359 - jyn514:bless-rustup, r=estebank\n\nRemove detection of rustup and cargo in 'missing extern crate' diagnostics\n\nPreviously, this would change the test output when RUSTUP_HOME was set:\n\n```\n---- [ui] ui/issues/issue-49851/compiler-builtins-error.rs stdout ----\ndiff of stderr:\n\n1       error[E0463]: can't find crate for `core`\n2          |\n3          = note: the `thumbv7em-none-eabihf` target may not be installed\n+          = help: consider downloading the target with `rustup target add thumbv7em-none-eabihf`\n4\n5       error: aborting due to previous error\n6\n```\n\nOriginally, I fixed it by explicitly unsetting RUSTUP_HOME in\ncompiletest. Then I realized that almost no one has RUSTUP_HOME set,\nsince rustup doesn't set it itself. It does set RUST_RECURSION_COUNT\nwhenever it launches a proxy, though - use that instead.\n\nr? ```@estebank``` cc ```@petrochenkov``` ```@kinnison```", "tree": {"sha": "555a5f7f48ee9878addb457d29e7118773f54498", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/555a5f7f48ee9878addb457d29e7118773f54498"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfa0358d2a7d0f0989b3a4374df9077fece170f9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJg/EUtCRBK7hj4Ov3rIwAA9kMIAJnrLnYAPo7zOOZlo5FgzMoD\n4yMkq9o2uFDdkiB91Mi/eww6WHxZS1YuusMl+gBRZiT6E+lXBhaV1oFWqWJ0fVfQ\nnLUKueKEPpK+yA6yFzVLmQ8Ste0ZoA/iIbncCEddS7e1hjT1jtn+1NTGn4HfBTNF\ndV4zy09JRFgWpU8He0QKXJSPib/VgFb97lbju1rbrC47k6pmlsIbEo4FduKfTW89\nIqAE/rJ5Nd/H3YOm4PtjHDTxHJxJm/eQ5wwE3ud1oBPRJ3xIS66hpB7f4y7F7/Py\nEnwvLvOlMX9OPshaz/thlxsmmcIqtWc3Bh2xlldwUZ+5mWGnlteVuio+mXjSZAo=\n=/BVB\n-----END PGP SIGNATURE-----\n", "payload": "tree 555a5f7f48ee9878addb457d29e7118773f54498\nparent e4d8f0e3493d65f8d8d4121dd868402a1365d951\nparent 17f7536fb220fc53cd0af2de46528070cfab012c\nauthor Manish Goregaokar <manishsmail@gmail.com> 1627145517 -0700\ncommitter GitHub <noreply@github.com> 1627145517 -0700\n\nRollup merge of #87359 - jyn514:bless-rustup, r=estebank\n\nRemove detection of rustup and cargo in 'missing extern crate' diagnostics\n\nPreviously, this would change the test output when RUSTUP_HOME was set:\n\n```\n---- [ui] ui/issues/issue-49851/compiler-builtins-error.rs stdout ----\ndiff of stderr:\n\n1       error[E0463]: can't find crate for `core`\n2          |\n3          = note: the `thumbv7em-none-eabihf` target may not be installed\n+          = help: consider downloading the target with `rustup target add thumbv7em-none-eabihf`\n4\n5       error: aborting due to previous error\n6\n```\n\nOriginally, I fixed it by explicitly unsetting RUSTUP_HOME in\ncompiletest. Then I realized that almost no one has RUSTUP_HOME set,\nsince rustup doesn't set it itself. It does set RUST_RECURSION_COUNT\nwhenever it launches a proxy, though - use that instead.\n\nr? ```@estebank``` cc ```@petrochenkov``` ```@kinnison```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfa0358d2a7d0f0989b3a4374df9077fece170f9", "html_url": "https://github.com/rust-lang/rust/commit/bfa0358d2a7d0f0989b3a4374df9077fece170f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfa0358d2a7d0f0989b3a4374df9077fece170f9/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4d8f0e3493d65f8d8d4121dd868402a1365d951", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4d8f0e3493d65f8d8d4121dd868402a1365d951", "html_url": "https://github.com/rust-lang/rust/commit/e4d8f0e3493d65f8d8d4121dd868402a1365d951"}, {"sha": "17f7536fb220fc53cd0af2de46528070cfab012c", "url": "https://api.github.com/repos/rust-lang/rust/commits/17f7536fb220fc53cd0af2de46528070cfab012c", "html_url": "https://github.com/rust-lang/rust/commit/17f7536fb220fc53cd0af2de46528070cfab012c"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "4936b22c7b983010e15e699bda1f5ed370ba793e", "filename": "compiler/rustc_metadata/src/locator.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/bfa0358d2a7d0f0989b3a4374df9077fece170f9/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa0358d2a7d0f0989b3a4374df9077fece170f9/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Flocator.rs?ref=bfa0358d2a7d0f0989b3a4374df9077fece170f9", "patch": "@@ -1080,7 +1080,10 @@ impl CrateError {\n                                 locator.triple\n                             ));\n                         }\n-                        if missing_core && std::env::var(\"RUSTUP_HOME\").is_ok() {\n+                        // NOTE: this suggests using rustup, even though the user may not have it installed.\n+                        // That's because they could choose to install it; or this may give them a hint which\n+                        // target they need to install from their distro.\n+                        if missing_core {\n                             err.help(&format!(\n                                 \"consider downloading the target with `rustup target add {}`\",\n                                 locator.triple\n@@ -1097,7 +1100,7 @@ impl CrateError {\n                                 current_crate\n                             ));\n                         }\n-                        if sess.is_nightly_build() && std::env::var(\"CARGO\").is_ok() {\n+                        if sess.is_nightly_build() {\n                             err.help(\"consider building the standard library from source with `cargo build -Zbuild-std`\");\n                         }\n                     } else if Some(crate_name)"}, {"sha": "1a34c21ba541370129ee2d367550506a06ec9f14", "filename": "src/test/ui/crate-loading/missing-std.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/bfa0358d2a7d0f0989b3a4374df9077fece170f9/src%2Ftest%2Fui%2Fcrate-loading%2Fmissing-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfa0358d2a7d0f0989b3a4374df9077fece170f9/src%2Ftest%2Fui%2Fcrate-loading%2Fmissing-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-loading%2Fmissing-std.rs?ref=bfa0358d2a7d0f0989b3a4374df9077fece170f9", "patch": "@@ -1,7 +1,6 @@\n // compile-flags: --target x86_64-unknown-uefi\n // needs-llvm-components: x86\n // rustc-env:CARGO=/usr/bin/cargo\n-// rustc-env:RUSTUP_HOME=/home/bors/.rustup\n #![no_core]\n extern crate core;\n //~^ ERROR can't find crate for `core`"}, {"sha": "25808efdfa6993e94c45af96bfd0878e1598f4ad", "filename": "src/test/ui/crate-loading/missing-std.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfa0358d2a7d0f0989b3a4374df9077fece170f9/src%2Ftest%2Fui%2Fcrate-loading%2Fmissing-std.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bfa0358d2a7d0f0989b3a4374df9077fece170f9/src%2Ftest%2Fui%2Fcrate-loading%2Fmissing-std.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcrate-loading%2Fmissing-std.stderr?ref=bfa0358d2a7d0f0989b3a4374df9077fece170f9", "patch": "@@ -1,5 +1,5 @@\n error[E0463]: can't find crate for `core`\n-  --> $DIR/missing-std.rs:6:1\n+  --> $DIR/missing-std.rs:5:1\n    |\n LL | extern crate core;\n    | ^^^^^^^^^^^^^^^^^^ can't find crate"}, {"sha": "b45574f0c49af80d563b5a5404b2a12f6728939f", "filename": "src/test/ui/issues/issue-37131.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfa0358d2a7d0f0989b3a4374df9077fece170f9/src%2Ftest%2Fui%2Fissues%2Fissue-37131.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bfa0358d2a7d0f0989b3a4374df9077fece170f9/src%2Ftest%2Fui%2Fissues%2Fissue-37131.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37131.stderr?ref=bfa0358d2a7d0f0989b3a4374df9077fece170f9", "patch": "@@ -1,6 +1,8 @@\n error[E0463]: can't find crate for `std`\n    |\n    = note: the `thumbv6m-none-eabi` target may not be installed\n+   = help: consider downloading the target with `rustup target add thumbv6m-none-eabi`\n+   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n \n error: aborting due to previous error\n "}, {"sha": "d963c07ea91750ac12704dc65c4af389233d6d91", "filename": "src/test/ui/issues/issue-49851/compiler-builtins-error.stderr", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bfa0358d2a7d0f0989b3a4374df9077fece170f9/src%2Ftest%2Fui%2Fissues%2Fissue-49851%2Fcompiler-builtins-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/bfa0358d2a7d0f0989b3a4374df9077fece170f9/src%2Ftest%2Fui%2Fissues%2Fissue-49851%2Fcompiler-builtins-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-49851%2Fcompiler-builtins-error.stderr?ref=bfa0358d2a7d0f0989b3a4374df9077fece170f9", "patch": "@@ -1,6 +1,8 @@\n error[E0463]: can't find crate for `core`\n    |\n    = note: the `thumbv7em-none-eabihf` target may not be installed\n+   = help: consider downloading the target with `rustup target add thumbv7em-none-eabihf`\n+   = help: consider building the standard library from source with `cargo build -Zbuild-std`\n \n error: aborting due to previous error\n "}]}