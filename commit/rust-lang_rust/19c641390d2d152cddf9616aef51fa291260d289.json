{"sha": "19c641390d2d152cddf9616aef51fa291260d289", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5YzY0MTM5MGQyZDE1MmNkZGY5NjE2YWVmNTFmYTI5MTI2MGQyODk=", "commit": {"author": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-01-05T03:06:36Z"}, "committer": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2019-01-05T03:06:36Z"}, "message": "Fix join_lines use_items right w/ and w/o comma", "tree": {"sha": "2db0bab5138a94d4c4d798b0a08c0003ad2891a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2db0bab5138a94d4c4d798b0a08c0003ad2891a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/19c641390d2d152cddf9616aef51fa291260d289", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/19c641390d2d152cddf9616aef51fa291260d289", "html_url": "https://github.com/rust-lang/rust/commit/19c641390d2d152cddf9616aef51fa291260d289", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/19c641390d2d152cddf9616aef51fa291260d289/comments", "author": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "182ec76f135d0b213d6abea486521e81796bca46", "url": "https://api.github.com/repos/rust-lang/rust/commits/182ec76f135d0b213d6abea486521e81796bca46", "html_url": "https://github.com/rust-lang/rust/commit/182ec76f135d0b213d6abea486521e81796bca46"}], "stats": {"total": 25, "additions": 22, "deletions": 3}, "files": [{"sha": "1b568e96cdddee4971e1ab849ebaecc4e6f8f9ea", "filename": "crates/ra_editor/src/typing.rs", "status": "modified", "additions": 22, "deletions": 3, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/19c641390d2d152cddf9616aef51fa291260d289/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/19c641390d2d152cddf9616aef51fa291260d289/crates%2Fra_editor%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Ftyping.rs?ref=19c641390d2d152cddf9616aef51fa291260d289", "patch": "@@ -188,8 +188,8 @@ fn remove_newline(\n         edit.delete(TextRange::from_to(prev.range().start(), node.range().end()));\n     } else if prev.kind() == COMMA && next.kind() == R_CURLY {\n         // Removes: comma, newline (incl. surrounding whitespace)\n-        let space = if let Some(USE_TREE) = prev.prev_sibling().map(|p| p.kind()) {\n-            \"\"\n+        let space = if let Some(left) = prev.prev_sibling() {\n+            compute_ws(left, next)\n         } else {\n             \" \"\n         };\n@@ -269,6 +269,11 @@ fn compute_ws(left: SyntaxNodeRef, right: SyntaxNodeRef) -> &'static str {\n     }\n     match right.kind() {\n         R_PAREN | R_BRACK => return \"\",\n+        R_CURLY => {\n+            if let USE_TREE = left.kind() {\n+                return \"\";\n+            }\n+        }\n         DOT => return \"\",\n         _ => (),\n     }\n@@ -355,7 +360,21 @@ fn foo() {\n \n     #[test]\n     fn test_join_lines_use_items_right() {\n-        // No space after the '{'\n+        // No space after the '}'\n+        check_join_lines(\n+            r\"\n+use ra_syntax::{\n+<|>    TextUnit, TextRange\n+};\",\n+            r\"\n+use ra_syntax::{\n+<|>    TextUnit, TextRange};\",\n+        );\n+    }\n+\n+    #[test]\n+    fn test_join_lines_use_items_right_comma() {\n+        // No space after the '}'\n         check_join_lines(\n             r\"\n use ra_syntax::{"}]}