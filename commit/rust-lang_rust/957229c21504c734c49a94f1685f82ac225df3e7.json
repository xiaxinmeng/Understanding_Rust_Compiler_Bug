{"sha": "957229c21504c734c49a94f1685f82ac225df3e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1NzIyOWMyMTUwNGM3MzRjNDlhOTRmMTY4NWY4MmFjMjI1ZGYzZTc=", "commit": {"author": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-09-12T05:50:40Z"}, "committer": {"name": "Brian Koropoff", "email": "bkoropoff@gmail.com", "date": "2014-09-12T06:10:44Z"}, "message": "Fix check for existing crate when using --extern\n\nWhen checking for an existing crate, compare against the\n`crate_metadata::name` field, which is the crate name which\nwas requested during resolution, rather than the result of the\n`crate_metadata::name()` method, which is the crate name within\nthe crate metadata, as these may not match when using the --extern\noption to `rustc`.\n\nThis fixes spurious \"multiple crate version\" warnings under the\nfollowing scenario:\n\n- The crate `foo`, is referenced multiple times\n- `--extern foo=./path/to/libbar.rlib` is specified to rustc\n- The internal crate name of `libbar.rlib` is not `foo`\n\nThe behavior surrounding `Context::should_match_name` and the\ncomments in `loader.rs` both lead me to believe that this scenario\nis intended to work.\n\nFixes #17186", "tree": {"sha": "bcfe6fa933fcc7fdc5bf2a6b1efc55ea9d286b62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bcfe6fa933fcc7fdc5bf2a6b1efc55ea9d286b62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/957229c21504c734c49a94f1685f82ac225df3e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/957229c21504c734c49a94f1685f82ac225df3e7", "html_url": "https://github.com/rust-lang/rust/commit/957229c21504c734c49a94f1685f82ac225df3e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/957229c21504c734c49a94f1685f82ac225df3e7/comments", "author": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bkoropoff", "id": 2101303, "node_id": "MDQ6VXNlcjIxMDEzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/2101303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bkoropoff", "html_url": "https://github.com/bkoropoff", "followers_url": "https://api.github.com/users/bkoropoff/followers", "following_url": "https://api.github.com/users/bkoropoff/following{/other_user}", "gists_url": "https://api.github.com/users/bkoropoff/gists{/gist_id}", "starred_url": "https://api.github.com/users/bkoropoff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bkoropoff/subscriptions", "organizations_url": "https://api.github.com/users/bkoropoff/orgs", "repos_url": "https://api.github.com/users/bkoropoff/repos", "events_url": "https://api.github.com/users/bkoropoff/events{/privacy}", "received_events_url": "https://api.github.com/users/bkoropoff/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9888ac33980aeb866fe2f904f2da436099136e5", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9888ac33980aeb866fe2f904f2da436099136e5", "html_url": "https://github.com/rust-lang/rust/commit/f9888ac33980aeb866fe2f904f2da436099136e5"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "b551e9ce34fc5886674984174df2d2fc2d844e2c", "filename": "src/librustc/metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/957229c21504c734c49a94f1685f82ac225df3e7/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/957229c21504c734c49a94f1685f82ac225df3e7/src%2Flibrustc%2Fmetadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fcreader.rs?ref=957229c21504c734c49a94f1685f82ac225df3e7", "patch": "@@ -281,7 +281,7 @@ fn existing_match(e: &Env, name: &str,\n                   hash: Option<&Svh>) -> Option<ast::CrateNum> {\n     let mut ret = None;\n     e.sess.cstore.iter_crate_data(|cnum, data| {\n-        if data.name().as_slice() != name { return }\n+        if data.name.as_slice() != name { return }\n \n         match hash {\n             Some(hash) if *hash == data.hash() => { ret = Some(cnum); return }"}]}