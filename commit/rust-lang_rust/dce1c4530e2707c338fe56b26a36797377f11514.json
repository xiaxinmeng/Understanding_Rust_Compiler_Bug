{"sha": "dce1c4530e2707c338fe56b26a36797377f11514", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjZTFjNDUzMGUyNzA3YzMzOGZlNTZiMjZhMzY3OTczNzdmMTE1MTQ=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-11-22T18:05:25Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2018-11-25T02:38:35Z"}, "message": "[Windows] Work around non-monotonic clocks in the self-profiler\n\nOn Windows, the high-resolution timestamp api doesn't seem to always be\nmonotonic. This can cause panics when the self-profiler uses the\n`Instant` api to find elapsed time.\n\nWork around this by detecting the case where now is less than the start\ntime and just use 0 elapsed ticks as the measurement.\n\nFixes #51648", "tree": {"sha": "2184726a4691138c85765766cc07a851575fef62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2184726a4691138c85765766cc07a851575fef62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dce1c4530e2707c338fe56b26a36797377f11514", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dce1c4530e2707c338fe56b26a36797377f11514", "html_url": "https://github.com/rust-lang/rust/commit/dce1c4530e2707c338fe56b26a36797377f11514", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dce1c4530e2707c338fe56b26a36797377f11514/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b319715456c08097f2cd936da309ed6e8aec2843", "url": "https://api.github.com/repos/rust-lang/rust/commits/b319715456c08097f2cd936da309ed6e8aec2843", "html_url": "https://github.com/rust-lang/rust/commit/b319715456c08097f2cd936da309ed6e8aec2843"}], "stats": {"total": 17, "additions": 15, "deletions": 2}, "files": [{"sha": "1f050439764914adf3ac737816d0dd957bb599de", "filename": "src/librustc/util/profiling.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/dce1c4530e2707c338fe56b26a36797377f11514/src%2Flibrustc%2Futil%2Fprofiling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dce1c4530e2707c338fe56b26a36797377f11514/src%2Flibrustc%2Futil%2Fprofiling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fprofiling.rs?ref=dce1c4530e2707c338fe56b26a36797377f11514", "patch": "@@ -12,7 +12,7 @@ use session::config::Options;\n \n use std::fs;\n use std::io::{self, StdoutLock, Write};\n-use std::time::Instant;\n+use std::time::{Duration, Instant};\n \n macro_rules! define_categories {\n     ($($name:ident,)*) => {\n@@ -197,7 +197,20 @@ impl SelfProfiler {\n     }\n \n     fn stop_timer(&mut self) -> u64 {\n-        let elapsed = self.current_timer.elapsed();\n+        let elapsed = if cfg!(windows) {\n+            // On Windows, timers don't always appear to be monotonic (see #51648)\n+            // which can lead to panics when calculating elapsed time.\n+            // Work around this by testing to see if the current time is less than\n+            // our recorded time, and if it is, just returning 0.\n+            let now = Instant::now();\n+            if self.current_timer >= now {\n+                Duration::new(0, 0)\n+            } else {\n+                self.current_timer.elapsed()\n+            }\n+        } else {\n+            self.current_timer.elapsed()\n+        };\n \n         self.current_timer = Instant::now();\n "}]}