{"sha": "98e16884b10630e6e6ef5f4a076af3409122401d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZTE2ODg0YjEwNjMwZTZlNmVmNWY0YTA3NmFmMzQwOTEyMjQwMWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-18T11:19:14Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-10-18T11:19:14Z"}, "message": "Auto merge of #78058 - bugadani:arena2, r=lcnr\n\nMake sure arenas don't allocate bigger than HUGE_PAGE\n\nRight now, arenas allocate based on the size of the last chunk. It is possible for a `grow` call to allocate a chunk that is not a multiple of `PAGE`, and this size is doubled for each subsequent allocation. This means, instead of `HUGE_PAGE`, the biggest page possible is actually unknown.\n\nThis change fixes this, and also removes an unnecessary checked multiplication. It is still possible to allocate bigger than `HUGE_PAGE` pages, but this will only happen as many times as absolutely necessary.", "tree": {"sha": "ccf0c7111e954380200358f8394553cb63a8165c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ccf0c7111e954380200358f8394553cb63a8165c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98e16884b10630e6e6ef5f4a076af3409122401d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98e16884b10630e6e6ef5f4a076af3409122401d", "html_url": "https://github.com/rust-lang/rust/commit/98e16884b10630e6e6ef5f4a076af3409122401d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98e16884b10630e6e6ef5f4a076af3409122401d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad268bd63894953ab7038f082aa744d6a832639b", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad268bd63894953ab7038f082aa744d6a832639b", "html_url": "https://github.com/rust-lang/rust/commit/ad268bd63894953ab7038f082aa744d6a832639b"}, {"sha": "396561bdb7a5038c9a277b4bb318305b71a7b8d0", "url": "https://api.github.com/repos/rust-lang/rust/commits/396561bdb7a5038c9a277b4bb318305b71a7b8d0", "html_url": "https://github.com/rust-lang/rust/commit/396561bdb7a5038c9a277b4bb318305b71a7b8d0"}], "stats": {"total": 12, "additions": 4, "deletions": 8}, "files": [{"sha": "34736b820e9635ea13ae1acf74c84b5542d4aa1b", "filename": "compiler/rustc_arena/src/lib.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/98e16884b10630e6e6ef5f4a076af3409122401d/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98e16884b10630e6e6ef5f4a076af3409122401d/compiler%2Frustc_arena%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_arena%2Fsrc%2Flib.rs?ref=98e16884b10630e6e6ef5f4a076af3409122401d", "patch": "@@ -223,10 +223,8 @@ impl<T> TypedArena<T> {\n                 // If the previous chunk's len is less than HUGE_PAGE\n                 // bytes, then this chunk will be least double the previous\n                 // chunk's size.\n-                new_cap = last_chunk.storage.len();\n-                if new_cap < HUGE_PAGE / elem_size {\n-                    new_cap = new_cap.checked_mul(2).unwrap();\n-                }\n+                new_cap = last_chunk.storage.len().min(HUGE_PAGE / elem_size / 2);\n+                new_cap = new_cap * 2;\n             } else {\n                 new_cap = PAGE / elem_size;\n             }\n@@ -343,10 +341,8 @@ impl DroplessArena {\n                 // If the previous chunk's len is less than HUGE_PAGE\n                 // bytes, then this chunk will be least double the previous\n                 // chunk's size.\n-                new_cap = last_chunk.storage.len();\n-                if new_cap < HUGE_PAGE {\n-                    new_cap = new_cap.checked_mul(2).unwrap();\n-                }\n+                new_cap = last_chunk.storage.len().min(HUGE_PAGE / 2);\n+                new_cap = new_cap * 2;\n             } else {\n                 new_cap = PAGE;\n             }"}]}