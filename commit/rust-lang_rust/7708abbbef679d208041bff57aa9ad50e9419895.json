{"sha": "7708abbbef679d208041bff57aa9ad50e9419895", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MDhhYmJiZWY2NzlkMjA4MDQxYmZmNTdhYTlhZDUwZTk0MTk4OTU=", "commit": {"author": {"name": "jumbatm", "email": "fungjys@gmail.com", "date": "2020-08-16T07:14:09Z"}, "committer": {"name": "jumbatm", "email": "30644300+jumbatm@users.noreply.github.com", "date": "2020-08-17T16:01:04Z"}, "message": "Avoid double hashset lookup.\n\nCo-authored-by: Bastian Kauschke <bastian_kauschke@hotmail.de>", "tree": {"sha": "efa5553b7f12930772e0862a27a08aedbfbb1b70", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efa5553b7f12930772e0862a27a08aedbfbb1b70"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7708abbbef679d208041bff57aa9ad50e9419895", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7708abbbef679d208041bff57aa9ad50e9419895", "html_url": "https://github.com/rust-lang/rust/commit/7708abbbef679d208041bff57aa9ad50e9419895", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7708abbbef679d208041bff57aa9ad50e9419895/comments", "author": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jumbatm", "id": 30644300, "node_id": "MDQ6VXNlcjMwNjQ0MzAw", "avatar_url": "https://avatars.githubusercontent.com/u/30644300?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jumbatm", "html_url": "https://github.com/jumbatm", "followers_url": "https://api.github.com/users/jumbatm/followers", "following_url": "https://api.github.com/users/jumbatm/following{/other_user}", "gists_url": "https://api.github.com/users/jumbatm/gists{/gist_id}", "starred_url": "https://api.github.com/users/jumbatm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jumbatm/subscriptions", "organizations_url": "https://api.github.com/users/jumbatm/orgs", "repos_url": "https://api.github.com/users/jumbatm/repos", "events_url": "https://api.github.com/users/jumbatm/events{/privacy}", "received_events_url": "https://api.github.com/users/jumbatm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c57de1166d36725a689cef17e0dab8b9abcd00b", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c57de1166d36725a689cef17e0dab8b9abcd00b", "html_url": "https://github.com/rust-lang/rust/commit/6c57de1166d36725a689cef17e0dab8b9abcd00b"}], "stats": {"total": 3, "additions": 1, "deletions": 2}, "files": [{"sha": "8625dc096d500674e36ecf768bd62b38da069122", "filename": "src/librustc_lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7708abbbef679d208041bff57aa9ad50e9419895/src%2Flibrustc_lint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7708abbbef679d208041bff57aa9ad50e9419895/src%2Flibrustc_lint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lint%2Fbuiltin.rs?ref=7708abbbef679d208041bff57aa9ad50e9419895", "patch": "@@ -2161,12 +2161,11 @@ impl ClashingExternDeclarations {\n             ckind: CItemKind,\n         ) -> bool {\n             debug!(\"structurally_same_type_impl(cx, a = {:?}, b = {:?})\", a, b);\n-            if seen_types.contains(&(a, b)) {\n+            if !seen_types.insert((a, b)) {\n                 // We've encountered a cycle. There's no point going any further -- the types are\n                 // structurally the same.\n                 return true;\n             }\n-            seen_types.insert((a, b));\n             let tcx = cx.tcx;\n             if a == b || rustc_middle::ty::TyS::same_type(a, b) {\n                 // All nominally-same types are structurally same, too."}]}