{"sha": "5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNzNkMjFlYWE0OGI3Yzk0YmVkY2M1MzUyZmNiYzdkNzQ5ZWQ0OGI=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-01-23T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-01-23T00:00:00Z"}, "message": "Use check-pass mode for nll tests", "tree": {"sha": "e949c40594bfce5a13b6508cd314f3cb4e503136", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e949c40594bfce5a13b6508cd314f3cb4e503136"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "html_url": "https://github.com/rust-lang/rust/commit/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0bbe7915e2b663ac84244918d6d06e0747ed33e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0bbe7915e2b663ac84244918d6d06e0747ed33e", "html_url": "https://github.com/rust-lang/rust/commit/e0bbe7915e2b663ac84244918d6d06e0747ed33e"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "ac182be15560785ebf68b81618176a00c9cb4393", "filename": "src/test/ui/nll/closure-requirements/propagate-despite-same-free-region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fclosure-requirements%2Fpropagate-despite-same-free-region.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -4,7 +4,7 @@\n // regions is erased.\n \n // compile-flags:-Zborrowck=mir -Zverbose\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![feature(rustc_attrs)]\n "}, {"sha": "039b6aaaf0a70e09c60dc7667025e0864183aa98", "filename": "src/test/ui/nll/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fconstant.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -2,7 +2,7 @@\n // arbitrary types without ICEs.\n \n // compile-flags:-Zborrowck=mir\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n const HI: &str = \"hi\";\n "}, {"sha": "1897589bd588572c6a5b689d16c9d5d305e1c0e3", "filename": "src/test/ui/nll/drop-may-dangle.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fdrop-may-dangle.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -3,7 +3,7 @@\n // including) the call to `use_x`. The `else` branch is not included.\n \n // compile-flags:-Zborrowck=mir\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![allow(warnings)]\n #![feature(dropck_eyepatch)]"}, {"sha": "db056a22855092a4da6341094f7278ba1e746366", "filename": "src/test/ui/nll/extra-unused-mut.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fextra-unused-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fextra-unused-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fextra-unused-mut.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -1,6 +1,6 @@\n // extra unused mut lint tests for #51918\n \n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![feature(generators, nll)]\n #![deny(unused_mut)]"}, {"sha": "3102562cd0ab2bd19908e3b0498ab20df6602a7e", "filename": "src/test/ui/nll/generator-distinct-lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fgenerator-distinct-lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fgenerator-distinct-lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fgenerator-distinct-lifetime.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -6,7 +6,7 @@\n // over a yield -- because the data that is borrowed (`*x`) is not\n // stored on the stack.\n \n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n fn foo(x: &mut u32) {\n     move || {"}, {"sha": "e81479495c4d7ec857aa09eae9a7772bf9042a04", "filename": "src/test/ui/nll/maybe-initialized-drop-uninitialized.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fmaybe-initialized-drop-uninitialized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fmaybe-initialized-drop-uninitialized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fmaybe-initialized-drop-uninitialized.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -1,5 +1,5 @@\n // compile-flags: -Zborrowck=mir\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![allow(warnings)]\n "}, {"sha": "017f53d1457d828e3f6de0ed04a03d578f7f05e8", "filename": "src/test/ui/nll/projection-return.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fprojection-return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fprojection-return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fprojection-return.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -1,5 +1,5 @@\n // compile-flags:-Zborrowck=mir\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![feature(rustc_attrs)]\n "}, {"sha": "527cca133956c39e09d31a02374c7e7c491bdc75", "filename": "src/test/ui/nll/relate_tys/hr-fn-aau-eq-abu.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aau-eq-abu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aau-eq-abu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aau-eq-abu.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -6,7 +6,7 @@\n // another -- effectively, the single lifetime `'a` is just inferred\n // to be the intersection of the two distinct lifetimes.\n //\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n // compile-flags:-Zno-leak-check\n \n #![feature(nll)]"}, {"sha": "3a46188d119116e20837316000feedb32bc2b639", "filename": "src/test/ui/nll/relate_tys/hr-fn-aba-as-aaa.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aba-as-aaa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aba-as-aaa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Frelate_tys%2Fhr-fn-aba-as-aaa.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -2,7 +2,7 @@\n // function returning always its first argument can be upcast to one\n // that returns either first or second argument.\n //\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n // compile-flags:-Zno-leak-check\n \n #![feature(nll)]"}, {"sha": "b03a539ebdbe9c562f35c2a4fe135d04f633697c", "filename": "src/test/ui/nll/ty-outlives/projection-body.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-body.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-body.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-body.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -1,7 +1,7 @@\n // Test that when we infer the lifetime to a subset of the fn body, it\n // works out.\n //\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n trait MyTrait<'a> {\n     type Output;"}, {"sha": "be1b653c384b78eff6a1d434787d461e3b87629e", "filename": "src/test/ui/nll/ty-outlives/projection-one-region-trait-bound-static-closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-static-closure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-static-closure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-one-region-trait-bound-static-closure.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -3,7 +3,7 @@\n // we don't even propagate constraints from the closures to the callers.\n \n // compile-flags:-Zborrowck=mir -Zverbose\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n #![allow(warnings)]\n #![feature(rustc_attrs)]"}, {"sha": "a411162325dc4a8b9f6f6b9480bd06b791c58ab5", "filename": "src/test/ui/nll/ty-outlives/projection-where-clause-env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-where-clause-env.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-where-clause-env.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-where-clause-env.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -4,7 +4,7 @@\n //\n // Regression test for #53121.\n //\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n trait MyTrait<'a> {\n     type Output;"}, {"sha": "8d0c10a639ee5d9a32d327efab6c16819dd4f47d", "filename": "src/test/ui/nll/ty-outlives/projection-where-clause-trait.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-where-clause-trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-where-clause-trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fprojection-where-clause-trait.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -4,7 +4,7 @@\n // MyTrait<'a>>::Output: 'a` outlives `'a` (because the trait says\n // so).\n //\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n trait MyTrait<'a> {\n     type Output: 'a;"}, {"sha": "6547ae39817734f68789cc1c9a35acc4a604f15e", "filename": "src/test/ui/nll/ty-outlives/ty-param-implied-bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-implied-bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-implied-bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fty-outlives%2Fty-param-implied-bounds.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -1,5 +1,5 @@\n // compile-flags:-Zborrowck=mir -Zverbose\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n // Test that we assume that universal types like `T` outlive the\n // function body."}, {"sha": "b27429f4d190f3fe2f63e1baff4110b27c5533da", "filename": "src/test/ui/nll/user-annotations/downcast-infer.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdowncast-infer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdowncast-infer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fuser-annotations%2Fdowncast-infer.rs?ref=5c73d21eaa48b7c94bedcc5352fcbc7d749ed48b", "patch": "@@ -1,4 +1,4 @@\n-// build-pass (FIXME(62277): could be check-pass?)\n+// check-pass\n \n // Check that we don't try to downcast `_` when type-checking the annotation.\n fn main() {"}]}