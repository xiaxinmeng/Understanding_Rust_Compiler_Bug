{"sha": "87cd1ce6c149c002e158e29cee9ff863073c5412", "node_id": "C_kwDOAAsO6NoAKDg3Y2QxY2U2YzE0OWMwMDJlMTU4ZTI5Y2VlOWZmODYzMDczYzU0MTI", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-11-29T14:21:38Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-11-29T14:21:38Z"}, "message": "`ParamEnv` should be const when `ImplItem` is within a const impl.", "tree": {"sha": "054ead12baa9fb12db3be76128e301fafa81d3c1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/054ead12baa9fb12db3be76128e301fafa81d3c1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87cd1ce6c149c002e158e29cee9ff863073c5412", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE3RQPHNISvvEnSKtjbQF6ltjmwvkFAmGk4fIACgkQbQF6ltjm\nwvldQA//XDs5wYHZfWSIxGtrDPl2tGcfUVdrsMAMWJlZcWXXgP76d4F+6hbQX71i\n4PnOAKlsnctL2iVLJWBRdYhPqoCum2Y3uRer53jKHOikAYdnu1YrfHECEk4wBMMX\nJrWPfA57D0YoaZiJ/GCceLgU8qKBxD4QR2E0zL3PdD/TwBQnkGOOJWeCi+PiMstW\net6otlRVh3sCi7cy3Cm3tCMnRe4x3yuaKkvFhl+FsyPSlX0hoSVcNLwsoQrdhfd2\nBA3uRV3iGh60IcEVLSy5OJ3F9EM/cz0vSpGYknkKU0cB2mRYCVy89R6pL0rSog+/\nIwsN6WjpfbPcguq2NK7vMb5k24h68mpO6VxdqUa0T+ihWgcfgJTUbnmS7vy40RZj\nnHIKCCZKoWdy3vdqZk5HFBASmpj1U5hhrAOYroV1IbIbjzBxb39LYHV8g0WNdGqW\nweKVegek8gERfS2qWN49WEOqgTJl+TATPZcd3ssZWJ4aVSSTQuCTABzqA5xvQxg9\nVWaAOQDygWYjySAe6PJmltQy9fnAg7vZVWzZt15dgfogc+CUN8gzUOKl5qJOxuA4\n8vWg3mWQKUrZgCq+EZK3jszLWzw+WVI2pkmJVQbmqX/6wP+kVdgaedpOxmcz1PwT\nYlkrijYqIfEbvK0A1QZzvz0CalnG742NH/Z9NATmhwQCnnxy5gI=\n=mImq\n-----END PGP SIGNATURE-----", "payload": "tree 054ead12baa9fb12db3be76128e301fafa81d3c1\nparent 8710a2e169a6b008734b75f3f86f79d93319fbfd\nauthor Deadbeef <ent3rm4n@gmail.com> 1638195698 +0800\ncommitter Deadbeef <ent3rm4n@gmail.com> 1638195698 +0800\n\n`ParamEnv` should be const when `ImplItem` is within a const impl.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87cd1ce6c149c002e158e29cee9ff863073c5412", "html_url": "https://github.com/rust-lang/rust/commit/87cd1ce6c149c002e158e29cee9ff863073c5412", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87cd1ce6c149c002e158e29cee9ff863073c5412/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8710a2e169a6b008734b75f3f86f79d93319fbfd", "url": "https://api.github.com/repos/rust-lang/rust/commits/8710a2e169a6b008734b75f3f86f79d93319fbfd", "html_url": "https://github.com/rust-lang/rust/commit/8710a2e169a6b008734b75f3f86f79d93319fbfd"}], "stats": {"total": 88, "additions": 58, "deletions": 30}, "files": [{"sha": "ca60b91fae0d79fa8f54eebe846627b14c24c166", "filename": "compiler/rustc_hir/src/hir.rs", "status": "modified", "additions": 0, "deletions": 27, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/87cd1ce6c149c002e158e29cee9ff863073c5412/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87cd1ce6c149c002e158e29cee9ff863073c5412/compiler%2Frustc_hir%2Fsrc%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir%2Fsrc%2Fhir.rs?ref=87cd1ce6c149c002e158e29cee9ff863073c5412", "patch": "@@ -3228,33 +3228,6 @@ impl<'hir> Node<'hir> {\n         }\n     }\n \n-    /// Returns `Constness::Const` when this node is a const fn/impl/item.\n-    pub fn constness_for_typeck(&self) -> Constness {\n-        match self {\n-            Node::Item(Item {\n-                kind: ItemKind::Fn(FnSig { header: FnHeader { constness, .. }, .. }, ..),\n-                ..\n-            })\n-            | Node::TraitItem(TraitItem {\n-                kind: TraitItemKind::Fn(FnSig { header: FnHeader { constness, .. }, .. }, ..),\n-                ..\n-            })\n-            | Node::ImplItem(ImplItem {\n-                kind: ImplItemKind::Fn(FnSig { header: FnHeader { constness, .. }, .. }, ..),\n-                ..\n-            })\n-            | Node::Item(Item { kind: ItemKind::Impl(Impl { constness, .. }), .. }) => *constness,\n-\n-            Node::Item(Item { kind: ItemKind::Const(..), .. })\n-            | Node::Item(Item { kind: ItemKind::Static(..), .. })\n-            | Node::TraitItem(TraitItem { kind: TraitItemKind::Const(..), .. })\n-            | Node::AnonConst(_)\n-            | Node::ImplItem(ImplItem { kind: ImplItemKind::Const(..), .. }) => Constness::Const,\n-\n-            _ => Constness::NotConst,\n-        }\n-    }\n-\n     pub fn as_owner(self) -> Option<OwnerNode<'hir>> {\n         match self {\n             Node::Item(i) => Some(OwnerNode::Item(i)),"}, {"sha": "f47f8a562ddf862ece0bb07f35b3f62e6d3cabf7", "filename": "compiler/rustc_ty_utils/src/ty.rs", "status": "modified", "additions": 37, "deletions": 1, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/87cd1ce6c149c002e158e29cee9ff863073c5412/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87cd1ce6c149c002e158e29cee9ff863073c5412/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ty_utils%2Fsrc%2Fty.rs?ref=87cd1ce6c149c002e158e29cee9ff863073c5412", "patch": "@@ -287,7 +287,43 @@ fn param_env(tcx: TyCtxt<'_>, def_id: DefId) -> ty::ParamEnv<'_> {\n     let hir_id = local_did.map(|def_id| tcx.hir().local_def_id_to_hir_id(def_id));\n \n     let constness = match hir_id {\n-        Some(hir_id) => tcx.hir().get(hir_id).constness_for_typeck(),\n+        Some(hir_id) => match tcx.hir().get(hir_id) {\n+            hir::Node::Item(hir::Item { kind: hir::ItemKind::Const(..), .. })\n+            | hir::Node::Item(hir::Item { kind: hir::ItemKind::Static(..), .. })\n+            | hir::Node::TraitItem(hir::TraitItem { kind: hir::TraitItemKind::Const(..), .. })\n+            | hir::Node::AnonConst(_)\n+            | hir::Node::ImplItem(hir::ImplItem { kind: hir::ImplItemKind::Const(..), .. })\n+            | hir::Node::ImplItem(hir::ImplItem {\n+                kind: hir::ImplItemKind::Fn(hir::FnSig { header: hir::FnHeader { constness: hir::Constness::Const, .. }, .. }, ..),\n+                ..\n+            }) => hir::Constness::Const,\n+\n+            hir::Node::ImplItem(hir::ImplItem {\n+                kind: hir::ImplItemKind::TyAlias(..) | hir::ImplItemKind::Fn(..),\n+                ..\n+            }) => {\n+                let parent_hir_id = tcx.hir().get_parent_node(hir_id);\n+                match tcx.hir().get(parent_hir_id) {\n+                    hir::Node::Item(hir::Item { kind: hir::ItemKind::Impl(hir::Impl { constness, .. }), .. }) => *constness,\n+                    _ => span_bug!(\n+                        tcx.def_span(parent_hir_id.owner),\n+                        \"impl item's parent node is not an impl\",\n+                    ),\n+                }\n+            }\n+\n+            hir::Node::Item(hir::Item {\n+                kind: hir::ItemKind::Fn(hir::FnSig { header: hir::FnHeader { constness, .. }, .. }, ..),\n+                ..\n+            })\n+            | hir::Node::TraitItem(hir::TraitItem {\n+                kind: hir::TraitItemKind::Fn(hir::FnSig { header: hir::FnHeader { constness, .. }, .. }, ..),\n+                ..\n+            })\n+            | hir::Node::Item(hir::Item { kind: hir::ItemKind::Impl(hir::Impl { constness, .. }), .. }) => *constness,\n+\n+            _ => hir::Constness::NotConst,\n+        },\n         None => hir::Constness::NotConst,\n     };\n "}, {"sha": "7b012083c5a3d2843807f61eec7fb7b00e64354e", "filename": "src/test/ui/rfc-2632-const-trait-impl/assoc-type.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/87cd1ce6c149c002e158e29cee9ff863073c5412/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fassoc-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87cd1ce6c149c002e158e29cee9ff863073c5412/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fassoc-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fassoc-type.rs?ref=87cd1ce6c149c002e158e29cee9ff863073c5412", "patch": "@@ -1,6 +1,5 @@\n // FIXME(fee1-dead): this should have a better error message\n #![feature(const_trait_impl)]\n-// check-pass\n struct NonConstAdd(i32);\n \n impl std::ops::Add for NonConstAdd {\n@@ -17,7 +16,7 @@ trait Foo {\n \n impl const Foo for NonConstAdd {\n     type Bar = NonConstAdd;\n-    //TODO: ~^ ERROR\n+    //~^ ERROR\n }\n \n trait Baz {"}, {"sha": "d1e55e12d6f504f5b6fbb18726b3283cb7872ebc", "filename": "src/test/ui/rfc-2632-const-trait-impl/assoc-type.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/87cd1ce6c149c002e158e29cee9ff863073c5412/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fassoc-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/87cd1ce6c149c002e158e29cee9ff863073c5412/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fassoc-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fassoc-type.stderr?ref=87cd1ce6c149c002e158e29cee9ff863073c5412", "patch": "@@ -0,0 +1,20 @@\n+error[E0277]: cannot add `NonConstAdd` to `NonConstAdd`\n+  --> $DIR/assoc-type.rs:18:5\n+   |\n+LL |     type Bar = NonConstAdd;\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^ no implementation for `NonConstAdd + NonConstAdd`\n+   |\n+   = help: the trait `Add` is not implemented for `NonConstAdd`\n+note: required by a bound in `Foo::Bar`\n+  --> $DIR/assoc-type.rs:14:15\n+   |\n+LL |     type Bar: ~const std::ops::Add;\n+   |               ^^^^^^^^^^^^^^^^^^^^ required by this bound in `Foo::Bar`\n+help: consider introducing a `where` bound, but there might be an alternative better way to express this requirement\n+   |\n+LL | impl const Foo for NonConstAdd where NonConstAdd: Add {\n+   |                                ++++++++++++++++++++++\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}