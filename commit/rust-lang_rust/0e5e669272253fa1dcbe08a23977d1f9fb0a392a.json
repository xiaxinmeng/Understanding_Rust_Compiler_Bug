{"sha": "0e5e669272253fa1dcbe08a23977d1f9fb0a392a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlNWU2NjkyNzIyNTNmYTFkY2JlMDhhMjM5NzdkMWY5ZmIwYTM5MmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-09T04:56:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-09T04:56:23Z"}, "message": "Auto merge of #24168 - kballard:clone-for-extern-c-unsafe-fns, r=alexcrichton\n\nWe only implemented Clone on `extern \"Rust\" fn`s (for up to 8\r\nparameters). This didn't cover `extern \"C\"` or `unsafe` (or\r\n`unsafe extern \"C\"`) `fn`s, but there's no reason why they shouldn't be\r\ncloneable as well.\r\n\r\nThe new impls are marked unstable because the existing impl for `extern\r\n\"Rust\" fn`s is.\r\n\r\nFixes #24161.", "tree": {"sha": "886d0125a7b3e008ae3c9d0e90557247d49be0e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/886d0125a7b3e008ae3c9d0e90557247d49be0e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0e5e669272253fa1dcbe08a23977d1f9fb0a392a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0e5e669272253fa1dcbe08a23977d1f9fb0a392a", "html_url": "https://github.com/rust-lang/rust/commit/0e5e669272253fa1dcbe08a23977d1f9fb0a392a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0e5e669272253fa1dcbe08a23977d1f9fb0a392a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "287a544a309b840fd715fe1d5b651b5116bf08fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/287a544a309b840fd715fe1d5b651b5116bf08fa", "html_url": "https://github.com/rust-lang/rust/commit/287a544a309b840fd715fe1d5b651b5116bf08fa"}, {"sha": "df95719391b2ee94c09162060052755e75f431dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/df95719391b2ee94c09162060052755e75f431dc", "html_url": "https://github.com/rust-lang/rust/commit/df95719391b2ee94c09162060052755e75f431dc"}], "stats": {"total": 40, "additions": 40, "deletions": 0}, "files": [{"sha": "91747d7405ff6fe12cd9f31f758c5d616e60e0a1", "filename": "src/libcore/clone.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0e5e669272253fa1dcbe08a23977d1f9fb0a392a/src%2Flibcore%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5e669272253fa1dcbe08a23977d1f9fb0a392a/src%2Flibcore%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fclone.rs?ref=0e5e669272253fa1dcbe08a23977d1f9fb0a392a", "patch": "@@ -97,6 +97,27 @@ macro_rules! extern_fn_clone {\n             #[inline]\n             fn clone(&self) -> extern \"Rust\" fn($($A),*) -> ReturnType { *self }\n         }\n+\n+        #[unstable(feature = \"core\", reason = \"brand new\")]\n+        impl<$($A,)* ReturnType> Clone for extern \"C\" fn($($A),*) -> ReturnType {\n+            /// Return a copy of a function pointer\n+            #[inline]\n+            fn clone(&self) -> extern \"C\" fn($($A),*) -> ReturnType { *self }\n+        }\n+\n+        #[unstable(feature = \"core\", reason = \"brand new\")]\n+        impl<$($A,)* ReturnType> Clone for unsafe extern \"Rust\" fn($($A),*) -> ReturnType {\n+            /// Return a copy of a function pointer\n+            #[inline]\n+            fn clone(&self) -> unsafe extern \"Rust\" fn($($A),*) -> ReturnType { *self }\n+        }\n+\n+        #[unstable(feature = \"core\", reason = \"brand new\")]\n+        impl<$($A,)* ReturnType> Clone for unsafe extern \"C\" fn($($A),*) -> ReturnType {\n+            /// Return a copy of a function pointer\n+            #[inline]\n+            fn clone(&self) -> unsafe extern \"C\" fn($($A),*) -> ReturnType { *self }\n+        }\n     )\n }\n "}, {"sha": "2445ef17ecf3bcab7b2798f3011d80b9e290fcb3", "filename": "src/test/run-pass/issue-24161.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0e5e669272253fa1dcbe08a23977d1f9fb0a392a/src%2Ftest%2Frun-pass%2Fissue-24161.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0e5e669272253fa1dcbe08a23977d1f9fb0a392a/src%2Ftest%2Frun-pass%2Fissue-24161.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-24161.rs?ref=0e5e669272253fa1dcbe08a23977d1f9fb0a392a", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[derive(Copy,Clone)]\n+struct Functions {\n+    a: fn(u32) -> u32,\n+    b: extern \"C\" fn(u32) -> u32,\n+    c: unsafe fn(u32) -> u32,\n+    d: unsafe extern \"C\" fn(u32) -> u32\n+}\n+\n+pub fn main() {}"}]}