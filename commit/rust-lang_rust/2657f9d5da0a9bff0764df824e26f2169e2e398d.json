{"sha": "2657f9d5da0a9bff0764df824e26f2169e2e398d", "node_id": "C_kwDOAAsO6NoAKDI2NTdmOWQ1ZGEwYTliZmYwNzY0ZGY4MjRlMjZmMjE2OWUyZTM5OGQ", "commit": {"author": {"name": "stoozy", "email": "stoozy@proton.me", "date": "2022-10-01T17:55:26Z"}, "committer": {"name": "stoozy", "email": "stoozy@proton.me", "date": "2022-10-01T17:55:26Z"}, "message": "Removed unnecessary for loop", "tree": {"sha": "b1a9de7c677798f07bb20d0527acb62050c5da04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b1a9de7c677798f07bb20d0527acb62050c5da04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2657f9d5da0a9bff0764df824e26f2169e2e398d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2657f9d5da0a9bff0764df824e26f2169e2e398d", "html_url": "https://github.com/rust-lang/rust/commit/2657f9d5da0a9bff0764df824e26f2169e2e398d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2657f9d5da0a9bff0764df824e26f2169e2e398d/comments", "author": {"login": "Stoozy", "id": 16365016, "node_id": "MDQ6VXNlcjE2MzY1MDE2", "avatar_url": "https://avatars.githubusercontent.com/u/16365016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stoozy", "html_url": "https://github.com/Stoozy", "followers_url": "https://api.github.com/users/Stoozy/followers", "following_url": "https://api.github.com/users/Stoozy/following{/other_user}", "gists_url": "https://api.github.com/users/Stoozy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stoozy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stoozy/subscriptions", "organizations_url": "https://api.github.com/users/Stoozy/orgs", "repos_url": "https://api.github.com/users/Stoozy/repos", "events_url": "https://api.github.com/users/Stoozy/events{/privacy}", "received_events_url": "https://api.github.com/users/Stoozy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Stoozy", "id": 16365016, "node_id": "MDQ6VXNlcjE2MzY1MDE2", "avatar_url": "https://avatars.githubusercontent.com/u/16365016?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Stoozy", "html_url": "https://github.com/Stoozy", "followers_url": "https://api.github.com/users/Stoozy/followers", "following_url": "https://api.github.com/users/Stoozy/following{/other_user}", "gists_url": "https://api.github.com/users/Stoozy/gists{/gist_id}", "starred_url": "https://api.github.com/users/Stoozy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Stoozy/subscriptions", "organizations_url": "https://api.github.com/users/Stoozy/orgs", "repos_url": "https://api.github.com/users/Stoozy/repos", "events_url": "https://api.github.com/users/Stoozy/events{/privacy}", "received_events_url": "https://api.github.com/users/Stoozy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef930a220042e63910f33f7d10da317635fb21cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef930a220042e63910f33f7d10da317635fb21cb", "html_url": "https://github.com/rust-lang/rust/commit/ef930a220042e63910f33f7d10da317635fb21cb"}], "stats": {"total": 25, "additions": 9, "deletions": 16}, "files": [{"sha": "cdb8797b4ffe8e57838e006c5aa062b4169d9606", "filename": "compiler/rustc_resolve/src/late/lifetimes.rs", "status": "modified", "additions": 9, "deletions": 16, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2657f9d5da0a9bff0764df824e26f2169e2e398d/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2657f9d5da0a9bff0764df824e26f2169e2e398d/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs?ref=2657f9d5da0a9bff0764df824e26f2169e2e398d", "patch": "@@ -1318,8 +1318,6 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                         && let hir::IsAsync::NotAsync = self.tcx.asyncness(lifetime_ref.hir_id.owner.def_id)\n                         && !self.tcx.features().anonymous_lifetime_in_impl_trait\n                     {\n-\n-\n                         let mut diag =  rustc_session::parse::feature_err(\n                             &self.tcx.sess.parse_sess,\n                             sym::anonymous_lifetime_in_impl_trait,\n@@ -1330,18 +1328,14 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                         match self.tcx.hir().get_generics(lifetime_ref.hir_id.owner.def_id) {\n                             Some(generics) => {\n \n-                                let mut new_param_sugg_tuple = None;\n-\n-                                for i in 0..generics.params.len()  {\n-                                    if !generics.span.contains(generics.params[i].span)  {\n-                                        new_param_sugg_tuple = match generics.span_for_param_suggestion() {\n-                                            Some(_) => {\n-                                                Some((self.tcx.sess.source_map().span_through_char(generics.span, '<').shrink_to_hi(), \"'a, \".to_owned()))\n-                                            },\n-                                            None => Some((generics.span, \"<'a>\".to_owned()))\n-                                        }\n-                                    }\n-                                }\n+                                let new_param_sugg_tuple;\n+\n+                                new_param_sugg_tuple = match generics.span_for_param_suggestion() {\n+                                    Some(_) => {\n+                                        Some((self.tcx.sess.source_map().span_through_char(generics.span, '<').shrink_to_hi(), \"'a, \".to_owned()))\n+                                    },\n+                                    None => Some((generics.span, \"<'a>\".to_owned()))\n+                                };\n \n                                 let mut multi_sugg_vec = vec![(lifetime_ref.span.shrink_to_hi(), \"'a \".to_owned())];\n \n@@ -1355,12 +1349,11 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                                 rustc_errors::Applicability::MaybeIncorrect);\n \n                             },\n-                            None => { continue; }\n+                            None => { }\n                         }\n \n                         diag.emit();\n                         return;\n-\n                     }\n                     scope = s;\n                 }"}]}