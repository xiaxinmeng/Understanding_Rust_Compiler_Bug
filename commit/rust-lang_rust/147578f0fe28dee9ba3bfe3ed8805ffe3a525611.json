{"sha": "147578f0fe28dee9ba3bfe3ed8805ffe3a525611", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0NzU3OGYwZmUyOGRlZTliYTNiZmUzZWQ4ODA1ZmZlM2E1MjU2MTE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-22T15:05:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-22T15:05:43Z"}, "message": "add impl initial", "tree": {"sha": "48d4abe5a2743f569e61745828ab35e275de4572", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/48d4abe5a2743f569e61745828ab35e275de4572"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/147578f0fe28dee9ba3bfe3ed8805ffe3a525611", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/147578f0fe28dee9ba3bfe3ed8805ffe3a525611", "html_url": "https://github.com/rust-lang/rust/commit/147578f0fe28dee9ba3bfe3ed8805ffe3a525611", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/147578f0fe28dee9ba3bfe3ed8805ffe3a525611/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69a524fbef067d9ee265fa93606c3ae743656c2a", "url": "https://api.github.com/repos/rust-lang/rust/commits/69a524fbef067d9ee265fa93606c3ae743656c2a", "html_url": "https://github.com/rust-lang/rust/commit/69a524fbef067d9ee265fa93606c3ae743656c2a"}], "stats": {"total": 59, "additions": 54, "deletions": 5}, "files": [{"sha": "1e20c0f48ba640b899b879fc580420272fde0520", "filename": "crates/libeditor/src/code_actions.rs", "status": "modified", "additions": 31, "deletions": 1, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/147578f0fe28dee9ba3bfe3ed8805ffe3a525611/crates%2Flibeditor%2Fsrc%2Fcode_actions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147578f0fe28dee9ba3bfe3ed8805ffe3a525611/crates%2Flibeditor%2Fsrc%2Fcode_actions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fcode_actions.rs?ref=147578f0fe28dee9ba3bfe3ed8805ffe3a525611", "patch": "@@ -1,6 +1,6 @@\n use {TextUnit, EditBuilder, Edit};\n use libsyntax2::{\n-    ast::{self, AstNode, AttrsOwner, ParsedFile},\n+    ast::{self, AstNode, AttrsOwner, TypeParamsOwner, NameOwner, ParsedFile},\n     SyntaxKind::COMMA,\n     SyntaxNodeRef,\n     algo::{\n@@ -58,6 +58,36 @@ pub fn add_derive<'a>(file: &'a ParsedFile, offset: TextUnit) -> Option<impl FnO\n     })\n }\n \n+pub fn add_impl<'a>(file: &'a ParsedFile, offset: TextUnit) -> Option<impl FnOnce() -> ActionResult + 'a> {\n+    let nominal = find_node::<ast::NominalDef>(file.syntax(), offset)?;\n+    let name = nominal.name()?;\n+\n+    Some(move || {\n+        // let type_params = nominal.type_param_list();\n+        // let type_args = match type_params {\n+        //     None => String::new(),\n+        //     Some(params) => {\n+        //         let mut buf = String::new();\n+        //     }\n+        // };\n+        let mut edit = EditBuilder::new();\n+        let start_offset = nominal.syntax().range().end();\n+        edit.insert(\n+            start_offset,\n+            format!(\n+                \"\\n\\nimpl {} {{\\n\\n}}\",\n+                name.text(),\n+            )\n+        );\n+        ActionResult {\n+            edit: edit.finish(),\n+            cursor_position: Some(\n+                start_offset + TextUnit::of_str(\"\\n\\nimpl  {\\n\") + name.syntax().range().len()\n+            ),\n+        }\n+    })\n+}\n+\n fn non_trivia_sibling(node: SyntaxNodeRef, direction: Direction) -> Option<SyntaxNodeRef> {\n     siblings(node, direction)\n         .skip(1)"}, {"sha": "6bae7a3fa17e90d0a90c7a6050091ce2d5decd06", "filename": "crates/libeditor/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/147578f0fe28dee9ba3bfe3ed8805ffe3a525611/crates%2Flibeditor%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147578f0fe28dee9ba3bfe3ed8805ffe3a525611/crates%2Flibeditor%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Flib.rs?ref=147578f0fe28dee9ba3bfe3ed8805ffe3a525611", "patch": "@@ -22,7 +22,7 @@ pub use self::{\n     edit::{EditBuilder, Edit, AtomEdit},\n     code_actions::{\n         ActionResult, find_node,\n-        flip_comma, add_derive,\n+        flip_comma, add_derive, add_impl,\n     },\n };\n "}, {"sha": "3b0ec78eb3218d1347af8175e0376762018a6431", "filename": "crates/libeditor/tests/test.rs", "status": "modified", "additions": 15, "deletions": 1, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/147578f0fe28dee9ba3bfe3ed8805ffe3a525611/crates%2Flibeditor%2Ftests%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147578f0fe28dee9ba3bfe3ed8805ffe3a525611/crates%2Flibeditor%2Ftests%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Ftests%2Ftest.rs?ref=147578f0fe28dee9ba3bfe3ed8805ffe3a525611", "patch": "@@ -7,7 +7,7 @@ use assert_eq_text::{assert_eq_dbg};\n use libeditor::{\n     ParsedFile, TextUnit, TextRange, ActionResult,\n     highlight, runnables, extend_selection, file_structure,\n-    flip_comma, add_derive, matching_brace,\n+    flip_comma, add_derive, add_impl, matching_brace,\n };\n \n #[test]\n@@ -144,6 +144,20 @@ fn test_add_derive() {\n     );\n }\n \n+#[test]\n+fn test_add_impl() {\n+    check_action(\n+        \"struct Foo {<|>}\\n\",\n+        \"struct Foo {}\\n\\nimpl Foo {\\n<|>\\n}\\n\",\n+        |file, off| add_impl(file, off).map(|f| f()),\n+    );\n+    // check_action(\n+    //     \"struct Foo<T: Clone> {<|>}\",\n+    //     \"struct Foo<T: Clone> {}\\nimpl<T: Clone> Foo<T> {\\n<|>\\n}\",\n+    //     |file, off| add_impl(file, off).map(|f| f()),\n+    // );\n+}\n+\n #[test]\n fn test_matching_brace() {\n     fn do_check(before: &str, after: &str) {"}, {"sha": "6df1d2311e771910fce1511d7b1054fdee6fc4b1", "filename": "crates/libsyntax2/src/ast/generated.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/147578f0fe28dee9ba3bfe3ed8805ffe3a525611/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/147578f0fe28dee9ba3bfe3ed8805ffe3a525611/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fast%2Fgenerated.rs?ref=147578f0fe28dee9ba3bfe3ed8805ffe3a525611", "patch": "@@ -344,8 +344,9 @@ impl<'a> AstNode<'a> for NominalDef<'a> {\n     }\n }\n \n-impl<'a> ast::AttrsOwner<'a> for NominalDef<'a> {}\n+impl<'a> ast::NameOwner<'a> for NominalDef<'a> {}\n impl<'a> ast::TypeParamsOwner<'a> for NominalDef<'a> {}\n+impl<'a> ast::AttrsOwner<'a> for NominalDef<'a> {}\n impl<'a> NominalDef<'a> {}\n \n // ParenType"}, {"sha": "e56496be10fc5be9601b4f1f915f30e06c69a6cf", "filename": "crates/libsyntax2/src/grammar.ron", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/147578f0fe28dee9ba3bfe3ed8805ffe3a525611/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/147578f0fe28dee9ba3bfe3ed8805ffe3a525611/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fgrammar.ron?ref=147578f0fe28dee9ba3bfe3ed8805ffe3a525611", "patch": "@@ -299,7 +299,11 @@ Grammar(\n \n         \"NominalDef\": (\n             enum: [\"StructDef\", \"EnumDef\"],\n-            traits: [ \"AttrsOwner\", \"TypeParamsOwner\" ],\n+            traits: [\n+                \"NameOwner\",\n+                \"TypeParamsOwner\",\n+                \"AttrsOwner\"\n+            ],\n         ),\n \n         \"Name\": (),"}]}