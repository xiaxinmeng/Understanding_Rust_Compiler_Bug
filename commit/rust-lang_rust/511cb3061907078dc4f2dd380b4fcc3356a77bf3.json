{"sha": "511cb3061907078dc4f2dd380b4fcc3356a77bf3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxMWNiMzA2MTkwNzA3OGRjNGYyZGQzODBiNGZjYzMzNTZhNzdiZjM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-13T14:03:27Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2016-03-13T14:03:27Z"}, "message": "Rollup merge of #32164 - nikomatsakis:fewer-errors, r=eddyb\n\nDo not report errors from regionck if other errors were already reported\n\nDo not report errors from regionck if other errors were already reported during the lifetime of this inferencer. Fixes #30580.\n\nr? @arielb1", "tree": {"sha": "e3093a95dbe0bbef500c3a6412f2ff9cbd24b637", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3093a95dbe0bbef500c3a6412f2ff9cbd24b637"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/511cb3061907078dc4f2dd380b4fcc3356a77bf3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/511cb3061907078dc4f2dd380b4fcc3356a77bf3", "html_url": "https://github.com/rust-lang/rust/commit/511cb3061907078dc4f2dd380b4fcc3356a77bf3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/511cb3061907078dc4f2dd380b4fcc3356a77bf3/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "db6dd8e4fecd365157ecf51fc492c366359d4064", "url": "https://api.github.com/repos/rust-lang/rust/commits/db6dd8e4fecd365157ecf51fc492c366359d4064", "html_url": "https://github.com/rust-lang/rust/commit/db6dd8e4fecd365157ecf51fc492c366359d4064"}, {"sha": "0ddc17d5bb6757dc49136c0de3168d9cdb00f6e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ddc17d5bb6757dc49136c0de3168d9cdb00f6e3", "html_url": "https://github.com/rust-lang/rust/commit/0ddc17d5bb6757dc49136c0de3168d9cdb00f6e3"}], "stats": {"total": 42, "additions": 40, "deletions": 2}, "files": [{"sha": "e671dd73431e6db82bed16a51bc99bc6107ce428", "filename": "src/librustc/middle/infer/mod.rs", "status": "modified", "additions": 13, "deletions": 2, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/511cb3061907078dc4f2dd380b4fcc3356a77bf3/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/511cb3061907078dc4f2dd380b4fcc3356a77bf3/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs?ref=511cb3061907078dc4f2dd380b4fcc3356a77bf3", "patch": "@@ -1120,11 +1120,15 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                                         .map(|method| resolve_ty(method.ty)))\n     }\n \n+    pub fn errors_since_creation(&self) -> bool {\n+        self.tcx.sess.err_count() - self.err_count_on_creation != 0\n+    }\n+\n     pub fn node_type(&self, id: ast::NodeId) -> Ty<'tcx> {\n         match self.tables.borrow().node_types.get(&id) {\n             Some(&t) => t,\n             // FIXME\n-            None if self.tcx.sess.err_count() - self.err_count_on_creation != 0 =>\n+            None if self.errors_since_creation() =>\n                 self.tcx.types.err,\n             None => {\n                 self.tcx.sess.bug(\n@@ -1147,7 +1151,14 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n                                              free_regions: &FreeRegionMap,\n                                              subject_node_id: ast::NodeId) {\n         let errors = self.region_vars.resolve_regions(free_regions, subject_node_id);\n-        self.report_region_errors(&errors); // see error_reporting.rs\n+        if !self.errors_since_creation() {\n+            // As a heuristic, just skip reporting region errors\n+            // altogether if other errors have been reported while\n+            // this infcx was in use.  This is totally hokey but\n+            // otherwise we have a hard time separating legit region\n+            // errors from silly ones.\n+            self.report_region_errors(&errors); // see error_reporting.rs\n+        }\n     }\n \n     pub fn ty_to_string(&self, t: Ty<'tcx>) -> String {"}, {"sha": "88d4aef6d9ddc0a873310ff8503125657763c55c", "filename": "src/test/compile-fail/issue-30580.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/511cb3061907078dc4f2dd380b4fcc3356a77bf3/src%2Ftest%2Fcompile-fail%2Fissue-30580.rs", "raw_url": "https://github.com/rust-lang/rust/raw/511cb3061907078dc4f2dd380b4fcc3356a77bf3/src%2Ftest%2Fcompile-fail%2Fissue-30580.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-30580.rs?ref=511cb3061907078dc4f2dd380b4fcc3356a77bf3", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that we do not see uninformative region-related errors\n+// when we get some basic type-checking failure. See #30580.\n+\n+pub struct Foo { a: u32 }\n+pub struct Pass<'a, 'tcx: 'a>(&'a mut &'a (), &'a &'tcx ());\n+\n+impl<'a, 'tcx> Pass<'a, 'tcx>\n+{\n+    pub fn tcx(&self) -> &'a &'tcx () { self.1 }\n+    fn lol(&mut self, b: &Foo)\n+    {\n+        b.c; //~ ERROR no field with that name was found\n+        self.tcx();\n+    }\n+}\n+\n+fn main() {}"}]}