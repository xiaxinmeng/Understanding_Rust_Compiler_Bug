{"sha": "f479e262d68271c1190dba6560923aff026d32fe", "node_id": "C_kwDOAAsO6NoAKGY0NzllMjYyZDY4MjcxYzExOTBkYmE2NTYwOTIzYWZmMDI2ZDMyZmU", "commit": {"author": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2022-03-27T02:40:07Z"}, "committer": {"name": "Esteban Kuber", "email": "esteban@kuber.com.ar", "date": "2022-03-27T02:40:07Z"}, "message": "review comments and rebase", "tree": {"sha": "065bc4148a47f4709e59efd32aa48496ea89eec3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/065bc4148a47f4709e59efd32aa48496ea89eec3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f479e262d68271c1190dba6560923aff026d32fe", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f479e262d68271c1190dba6560923aff026d32fe", "html_url": "https://github.com/rust-lang/rust/commit/f479e262d68271c1190dba6560923aff026d32fe", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f479e262d68271c1190dba6560923aff026d32fe/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1db02b8a438aa3b0d6dcbf3628a5142eda0a8589", "url": "https://api.github.com/repos/rust-lang/rust/commits/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589", "html_url": "https://github.com/rust-lang/rust/commit/1db02b8a438aa3b0d6dcbf3628a5142eda0a8589"}], "stats": {"total": 22, "additions": 10, "deletions": 12}, "files": [{"sha": "238145c5c6ee4ad3bb55b343d5baed012bb52153", "filename": "compiler/rustc_infer/src/infer/error_reporting/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f479e262d68271c1190dba6560923aff026d32fe/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f479e262d68271c1190dba6560923aff026d32fe/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=f479e262d68271c1190dba6560923aff026d32fe", "patch": "@@ -334,7 +334,7 @@ pub fn same_type_modulo_infer<'tcx>(a: Ty<'tcx>, b: Ty<'tcx>) -> bool {\n         | (&ty::Infer(ty::InferTy::TyVar(_)), _)\n         | (_, &ty::Infer(ty::InferTy::TyVar(_))) => true,\n         (&ty::Ref(reg_a, ty_a, mut_a), &ty::Ref(reg_b, ty_b, mut_b)) => {\n-            reg_a == reg_b && mut_a == mut_b && same_type_modulo_infer(ty_a, ty_b)\n+            reg_a == reg_b && mut_a == mut_b && same_type_modulo_infer(*ty_a, *ty_b)\n         }\n         _ => a == b,\n     }"}, {"sha": "83ba9c96978d0e7b154310e815cfbd551cfdc20c", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f479e262d68271c1190dba6560923aff026d32fe/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f479e262d68271c1190dba6560923aff026d32fe/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=f479e262d68271c1190dba6560923aff026d32fe", "patch": "@@ -1441,7 +1441,7 @@ impl<'a, 'tcx> InferCtxt<'a, 'tcx> {\n         if !value.needs_infer() {\n             return value; // Avoid duplicated subst-folding.\n         }\n-        let mut r = InferenceLiteralEraser { infcx: self };\n+        let mut r = InferenceLiteralEraser { tcx: self.tcx };\n         value.fold_with(&mut r)\n     }\n \n@@ -1798,19 +1798,19 @@ impl<'tcx> TyOrConstInferVar<'tcx> {\n \n /// Replace `{integer}` with `i32` and `{float}` with `f64`.\n /// Used only for diagnostics.\n-struct InferenceLiteralEraser<'a, 'tcx> {\n-    infcx: &'a InferCtxt<'a, 'tcx>,\n+struct InferenceLiteralEraser<'tcx> {\n+    tcx: TyCtxt<'tcx>,\n }\n \n-impl<'a, 'tcx> TypeFolder<'tcx> for InferenceLiteralEraser<'a, 'tcx> {\n-    fn tcx<'b>(&'b self) -> TyCtxt<'tcx> {\n-        self.infcx.tcx\n+impl<'tcx> TypeFolder<'tcx> for InferenceLiteralEraser<'tcx> {\n+    fn tcx(&self) -> TyCtxt<'tcx> {\n+        self.tcx\n     }\n \n     fn fold_ty(&mut self, ty: Ty<'tcx>) -> Ty<'tcx> {\n         match ty.kind() {\n-            ty::Infer(ty::IntVar(_) | ty::FreshIntTy(_)) => self.tcx().types.i32,\n-            ty::Infer(ty::FloatVar(_) | ty::FreshFloatTy(_)) => self.tcx().types.f64,\n+            ty::Infer(ty::IntVar(_) | ty::FreshIntTy(_)) => self.tcx.types.i32,\n+            ty::Infer(ty::FloatVar(_) | ty::FreshFloatTy(_)) => self.tcx.types.f64,\n             _ => ty.super_fold_with(self),\n         }\n     }"}, {"sha": "a07700aa9f5b9e85b4198bde98c9c5f13184361e", "filename": "compiler/rustc_typeck/src/astconv/generics.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f479e262d68271c1190dba6560923aff026d32fe/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f479e262d68271c1190dba6560923aff026d32fe/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fgenerics.rs?ref=f479e262d68271c1190dba6560923aff026d32fe", "patch": "@@ -85,9 +85,7 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n                         let param_hir_id = tcx.hir().local_def_id_to_hir_id(param_local_id);\n                         let param_name = tcx.hir().ty_param_name(param_hir_id);\n                         let param_type = tcx.infer_ctxt().enter(|infcx| {\n-                            infcx.resolve_numeric_literals_with_default(\n-                                infcx.resolve_vars_if_possible(tcx.type_of(param.def_id)),\n-                            )\n+                            infcx.resolve_numeric_literals_with_default(tcx.type_of(param.def_id))\n                         });\n                         if param_type.is_suggestable() {\n                             err.span_suggestion("}]}