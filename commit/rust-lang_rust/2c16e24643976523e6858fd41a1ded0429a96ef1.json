{"sha": "2c16e24643976523e6858fd41a1ded0429a96ef1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjMTZlMjQ2NDM5NzY1MjNlNjg1OGZkNDFhMWRlZDA0MjlhOTZlZjE=", "commit": {"author": {"name": "Jan-Erik Rediger", "email": "janerik@fnordig.de", "date": "2016-07-24T20:31:16Z"}, "committer": {"name": "Jan-Erik Rediger", "email": "janerik@fnordig.de", "date": "2016-07-29T08:29:44Z"}, "message": "Use C type when passing value to LLVM pass\n\nPreviously the C type LLVMRelocMode (available as RelocMode in Rust)\nwas passed as is to the function.\nHowever createTargetMachine expects a Reloc::Model, which is an enum\njust one value short.\nAdditionally, the function was marked as requiring Reloc::Model in the\nC code, but RelocMode on the Rust-side.\n\nWe now use the correct C type LLVMRelocMode and convert it to an\nOptional<Reloc::Model> as expected by the createTargetMachine call the\nsame the original LLVMCreateTargetMachine function does.\nSee\nhttps://github.com/llvm-mirror/llvm/blob/c9b262bfbd5b9fb6f10749dba1465569f39bd625/lib/Target/TargetMachineC.cpp#L104-L121\n\nThis was found by @eddyb.", "tree": {"sha": "e588f386e05215903493156ee918951f31dcf211", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e588f386e05215903493156ee918951f31dcf211"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c16e24643976523e6858fd41a1ded0429a96ef1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c16e24643976523e6858fd41a1ded0429a96ef1", "html_url": "https://github.com/rust-lang/rust/commit/2c16e24643976523e6858fd41a1ded0429a96ef1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c16e24643976523e6858fd41a1ded0429a96ef1/comments", "author": {"login": "badboy", "id": 2129, "node_id": "MDQ6VXNlcjIxMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/2129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badboy", "html_url": "https://github.com/badboy", "followers_url": "https://api.github.com/users/badboy/followers", "following_url": "https://api.github.com/users/badboy/following{/other_user}", "gists_url": "https://api.github.com/users/badboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/badboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badboy/subscriptions", "organizations_url": "https://api.github.com/users/badboy/orgs", "repos_url": "https://api.github.com/users/badboy/repos", "events_url": "https://api.github.com/users/badboy/events{/privacy}", "received_events_url": "https://api.github.com/users/badboy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "badboy", "id": 2129, "node_id": "MDQ6VXNlcjIxMjk=", "avatar_url": "https://avatars.githubusercontent.com/u/2129?v=4", "gravatar_id": "", "url": "https://api.github.com/users/badboy", "html_url": "https://github.com/badboy", "followers_url": "https://api.github.com/users/badboy/followers", "following_url": "https://api.github.com/users/badboy/following{/other_user}", "gists_url": "https://api.github.com/users/badboy/gists{/gist_id}", "starred_url": "https://api.github.com/users/badboy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/badboy/subscriptions", "organizations_url": "https://api.github.com/users/badboy/orgs", "repos_url": "https://api.github.com/users/badboy/repos", "events_url": "https://api.github.com/users/badboy/events{/privacy}", "received_events_url": "https://api.github.com/users/badboy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "079db4f9715ab5c495115b11adcca5f5bd4ed260", "url": "https://api.github.com/repos/rust-lang/rust/commits/079db4f9715ab5c495115b11adcca5f5bd4ed260", "html_url": "https://github.com/rust-lang/rust/commit/079db4f9715ab5c495115b11adcca5f5bd4ed260"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "a1276060271bbb09f2b409417fd814477a51c206", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2c16e24643976523e6858fd41a1ded0429a96ef1/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/2c16e24643976523e6858fd41a1ded0429a96ef1/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=2c16e24643976523e6858fd41a1ded0429a96ef1", "patch": "@@ -167,12 +167,35 @@ LLVMRustCreateTargetMachine(const char *triple,\n                             const char *cpu,\n                             const char *feature,\n                             CodeModel::Model CM,\n-                            Reloc::Model RM,\n+                            LLVMRelocMode Reloc,\n                             CodeGenOpt::Level OptLevel,\n                             bool UseSoftFloat,\n                             bool PositionIndependentExecutable,\n                             bool FunctionSections,\n                             bool DataSections) {\n+\n+#if LLVM_VERSION_MINOR <= 8\n+    Reloc::Model RM;\n+#else\n+    Optional<Reloc::Model> RM;\n+#endif\n+    switch (Reloc){\n+        case LLVMRelocStatic:\n+            RM = Reloc::Static;\n+            break;\n+        case LLVMRelocPIC:\n+            RM = Reloc::PIC_;\n+            break;\n+        case LLVMRelocDynamicNoPic:\n+            RM = Reloc::DynamicNoPIC;\n+            break;\n+        default:\n+#if LLVM_VERSION_MINOR <= 8\n+            RM = Reloc::Default;\n+#endif\n+            break;\n+    }\n+\n     std::string Error;\n     Triple Trip(Triple::normalize(triple));\n     const llvm::Target *TheTarget = TargetRegistry::lookupTarget(Trip.getTriple(),"}]}