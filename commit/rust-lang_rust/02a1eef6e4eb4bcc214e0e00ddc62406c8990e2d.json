{"sha": "02a1eef6e4eb4bcc214e0e00ddc62406c8990e2d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyYTFlZWY2ZTRlYjRiY2MyMTRlMGUwMGRkYzYyNDA2Yzg5OTBlMmQ=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-03-06T12:54:44Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-05-16T20:12:18Z"}, "message": "Fix rebase", "tree": {"sha": "a0edfd2c9a7c09622d4db3adf96a21de47851901", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0edfd2c9a7c09622d4db3adf96a21de47851901"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02a1eef6e4eb4bcc214e0e00ddc62406c8990e2d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02a1eef6e4eb4bcc214e0e00ddc62406c8990e2d", "html_url": "https://github.com/rust-lang/rust/commit/02a1eef6e4eb4bcc214e0e00ddc62406c8990e2d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02a1eef6e4eb4bcc214e0e00ddc62406c8990e2d/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79b343d87c64e786c79f640675beefa4064100ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/79b343d87c64e786c79f640675beefa4064100ec", "html_url": "https://github.com/rust-lang/rust/commit/79b343d87c64e786c79f640675beefa4064100ec"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "39a6ec9f3af270ed26329079b3a0e9c235ad2211", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/02a1eef6e4eb4bcc214e0e00ddc62406c8990e2d/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02a1eef6e4eb4bcc214e0e00ddc62406c8990e2d/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=02a1eef6e4eb4bcc214e0e00ddc62406c8990e2d", "patch": "@@ -1142,8 +1142,8 @@ pub type ExplicitSelf = Spanned<SelfKind>;\n \n impl Arg {\n     pub fn to_self(&self) -> Option<ExplicitSelf> {\n-        if let PatKind::Ident(BindByValue(mutbl), ident, _) = self.pat.node {\n-            if ident.node.unhygienic_name == keywords::SelfValue.name() {\n+        if let PatKind::Ident(BindByValue(mutbl), name, _) = self.pat.node {\n+            if name.node.unhygienize() == keywords::SelfValue.name() {\n                 return match self.ty.node {\n                     TyInfer => Some(respan(self.pat.span, SelfKind::Value(mutbl))),\n                     TyRptr(lt, MutTy{ref ty, mutbl}) if ty.node == TyInfer => {\n@@ -1158,8 +1158,8 @@ impl Arg {\n     }\n \n     pub fn is_self(&self) -> bool {\n-        if let PatKind::Ident(_, ident, _) = self.pat.node {\n-            ident.node.unhygienic_name == keywords::SelfValue.name()\n+        if let PatKind::Ident(_, name, _) = self.pat.node {\n+            name.node.unhygienize() == keywords::SelfValue.name()\n         } else {\n             false\n         }"}]}