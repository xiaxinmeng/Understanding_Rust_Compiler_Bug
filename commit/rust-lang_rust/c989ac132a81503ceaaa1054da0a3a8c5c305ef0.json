{"sha": "c989ac132a81503ceaaa1054da0a3a8c5c305ef0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5ODlhYzEzMmE4MTUwM2NlYWFhMTA1NGRhMGEzYThjNWMzMDVlZjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-08T11:34:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-08-08T11:34:18Z"}, "message": "Auto merge of #74289 - lzutao:unroll, r=LukasKalbertodt\n\nRemove some redundant parts from `unrolled_find_u16s`\n\nSee each commit message for details.\n\nr? @wesleywiser from old PR #67705 .", "tree": {"sha": "10dce6faef307c841dffe61928c4fd4fac3eb4b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/10dce6faef307c841dffe61928c4fd4fac3eb4b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c989ac132a81503ceaaa1054da0a3a8c5c305ef0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c989ac132a81503ceaaa1054da0a3a8c5c305ef0", "html_url": "https://github.com/rust-lang/rust/commit/c989ac132a81503ceaaa1054da0a3a8c5c305ef0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c989ac132a81503ceaaa1054da0a3a8c5c305ef0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c92fc8db8b009b7661cff31fa59a7c0348653bd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/c92fc8db8b009b7661cff31fa59a7c0348653bd0", "html_url": "https://github.com/rust-lang/rust/commit/c92fc8db8b009b7661cff31fa59a7c0348653bd0"}, {"sha": "f55e4d036c10f5b887b4ed8c12b7b31f3bb75d23", "url": "https://api.github.com/repos/rust-lang/rust/commits/f55e4d036c10f5b887b4ed8c12b7b31f3bb75d23", "html_url": "https://github.com/rust-lang/rust/commit/f55e4d036c10f5b887b4ed8c12b7b31f3bb75d23"}], "stats": {"total": 41, "additions": 13, "deletions": 28}, "files": [{"sha": "982ec912c44b710eebdb7d78559e9ea314e6f95b", "filename": "library/std/src/sys/windows/mod.rs", "status": "modified", "additions": 13, "deletions": 28, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/c989ac132a81503ceaaa1054da0a3a8c5c305ef0/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c989ac132a81503ceaaa1054da0a3a8c5c305ef0/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fmod.rs?ref=c989ac132a81503ceaaa1054da0a3a8c5c305ef0", "patch": "@@ -99,43 +99,28 @@ pub fn decode_error_kind(errno: i32) -> ErrorKind {\n \n pub fn unrolled_find_u16s(needle: u16, haystack: &[u16]) -> Option<usize> {\n     let ptr = haystack.as_ptr();\n-    let mut len = haystack.len();\n     let mut start = &haystack[..];\n \n     // For performance reasons unfold the loop eight times.\n-    while len >= 8 {\n-        if start[0] == needle {\n-            return Some((start.as_ptr() as usize - ptr as usize) / 2);\n-        }\n-        if start[1] == needle {\n-            return Some((start[1..].as_ptr() as usize - ptr as usize) / 2);\n-        }\n-        if start[2] == needle {\n-            return Some((start[2..].as_ptr() as usize - ptr as usize) / 2);\n-        }\n-        if start[3] == needle {\n-            return Some((start[3..].as_ptr() as usize - ptr as usize) / 2);\n-        }\n-        if start[4] == needle {\n-            return Some((start[4..].as_ptr() as usize - ptr as usize) / 2);\n-        }\n-        if start[5] == needle {\n-            return Some((start[5..].as_ptr() as usize - ptr as usize) / 2);\n-        }\n-        if start[6] == needle {\n-            return Some((start[6..].as_ptr() as usize - ptr as usize) / 2);\n-        }\n-        if start[7] == needle {\n-            return Some((start[7..].as_ptr() as usize - ptr as usize) / 2);\n+    while start.len() >= 8 {\n+        macro_rules! if_return {\n+            ($($n:literal,)+) => {\n+                $(\n+                    if start[$n] == needle {\n+                        return Some((&start[$n] as *const u16 as usize - ptr as usize) / 2);\n+                    }\n+                )+\n+            }\n         }\n \n+        if_return!(0, 1, 2, 3, 4, 5, 6, 7,);\n+\n         start = &start[8..];\n-        len -= 8;\n     }\n \n-    for (i, c) in start.iter().enumerate() {\n+    for c in start {\n         if *c == needle {\n-            return Some((start.as_ptr() as usize - ptr as usize) / 2 + i);\n+            return Some((c as *const u16 as usize - ptr as usize) / 2);\n         }\n     }\n     None"}]}