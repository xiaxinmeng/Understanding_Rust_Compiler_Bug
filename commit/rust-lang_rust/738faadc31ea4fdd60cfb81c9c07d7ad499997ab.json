{"sha": "738faadc31ea4fdd60cfb81c9c07d7ad499997ab", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczOGZhYWRjMzFlYTRmZGQ2MGNmYjgxYzljMDdkN2FkNDk5OTk3YWI=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-09T17:28:03Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-10T11:37:12Z"}, "message": "Merge hir::IsAuto into ast::IsAuto.", "tree": {"sha": "2bbc293689627cf5ba8204bea0c55ad54cfe6004", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2bbc293689627cf5ba8204bea0c55ad54cfe6004"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/738faadc31ea4fdd60cfb81c9c07d7ad499997ab", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/738faadc31ea4fdd60cfb81c9c07d7ad499997ab", "html_url": "https://github.com/rust-lang/rust/commit/738faadc31ea4fdd60cfb81c9c07d7ad499997ab", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/738faadc31ea4fdd60cfb81c9c07d7ad499997ab/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb233f54204261798aae645c70c34116b22ada4e", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb233f54204261798aae645c70c34116b22ada4e", "html_url": "https://github.com/rust-lang/rust/commit/cb233f54204261798aae645c70c34116b22ada4e"}], "stats": {"total": 19, "additions": 3, "deletions": 16}, "files": [{"sha": "c40834d12de15b8a1e3f446d93e724f9fa9861c2", "filename": "src/librustc/hir/lowering/item.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/738faadc31ea4fdd60cfb81c9c07d7ad499997ab/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/738faadc31ea4fdd60cfb81c9c07d7ad499997ab/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs?ref=738faadc31ea4fdd60cfb81c9c07d7ad499997ab", "patch": "@@ -449,7 +449,7 @@ impl LoweringContext<'_> {\n                     .map(|item| self.lower_trait_item_ref(item))\n                     .collect();\n                 hir::ItemKind::Trait(\n-                    self.lower_is_auto(is_auto),\n+                    is_auto,\n                     unsafety,\n                     self.lower_generics(generics, ImplTraitContext::disallowed()),\n                     bounds,\n@@ -1275,13 +1275,6 @@ impl LoweringContext<'_> {\n         (generics, hir::FnSig { header, decl })\n     }\n \n-    fn lower_is_auto(&mut self, a: IsAuto) -> hir::IsAuto {\n-        match a {\n-            IsAuto::Yes => hir::IsAuto::Yes,\n-            IsAuto::No => hir::IsAuto::No,\n-        }\n-    }\n-\n     fn lower_fn_header(&mut self, h: FnHeader) -> hir::FnHeader {\n         hir::FnHeader {\n             unsafety: h.unsafety,"}, {"sha": "6f60f7ffdcfc784d46347e3d92f845df96a9c126", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 8, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/738faadc31ea4fdd60cfb81c9c07d7ad499997ab/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/738faadc31ea4fdd60cfb81c9c07d7ad499997ab/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=738faadc31ea4fdd60cfb81c9c07d7ad499997ab", "patch": "@@ -21,7 +21,7 @@ use syntax_pos::{Span, DUMMY_SP, MultiSpan};\n use syntax::source_map::Spanned;\n use syntax::ast::{self, CrateSugar, Ident, Name, NodeId, AsmDialect};\n use syntax::ast::{Attribute, Label, LitKind, StrStyle, FloatTy, IntTy, UintTy};\n-pub use syntax::ast::{Mutability, Constness, Unsafety, Movability, CaptureBy};\n+pub use syntax::ast::{Mutability, Constness, Unsafety, Movability, CaptureBy, IsAuto};\n use syntax::attr::{InlineAttr, OptimizeAttr};\n use syntax::symbol::{Symbol, kw};\n use syntax::tokenstream::TokenStream;\n@@ -2122,13 +2122,6 @@ impl ImplicitSelfKind {\n     }\n }\n \n-/// Is the trait definition an auto trait?\n-#[derive(Copy, Clone, PartialEq, RustcEncodable, RustcDecodable, Debug, HashStable)]\n-pub enum IsAuto {\n-    Yes,\n-    No\n-}\n-\n #[derive(Copy, Clone, PartialEq, Eq, PartialOrd, HashStable,\n          Ord, RustcEncodable, RustcDecodable, Debug)]\n pub enum IsAsync {"}, {"sha": "075b7409f4f6f6d62c2d912ec7d2b35c205fe8f7", "filename": "src/librustc/ich/impls_syntax.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/738faadc31ea4fdd60cfb81c9c07d7ad499997ab/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/738faadc31ea4fdd60cfb81c9c07d7ad499997ab/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_syntax.rs?ref=738faadc31ea4fdd60cfb81c9c07d7ad499997ab", "patch": "@@ -170,6 +170,7 @@ impl_stable_hash_for!(enum ::syntax::ast::StrStyle { Cooked, Raw(pounds) });\n impl_stable_hash_for!(enum ::syntax::ast::AttrStyle { Outer, Inner });\n impl_stable_hash_for!(enum ::syntax::ast::Movability { Static, Movable });\n impl_stable_hash_for!(enum ::syntax::ast::CaptureBy { Value, Ref });\n+impl_stable_hash_for!(enum ::syntax::ast::IsAuto { Yes, No });\n \n impl<'a> HashStable<StableHashingContext<'a>> for [ast::Attribute] {\n     fn hash_stable(&self, hcx: &mut StableHashingContext<'a>, hasher: &mut StableHasher) {"}]}