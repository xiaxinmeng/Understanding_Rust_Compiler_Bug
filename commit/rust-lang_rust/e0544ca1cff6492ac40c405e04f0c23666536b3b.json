{"sha": "e0544ca1cff6492ac40c405e04f0c23666536b3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUwNTQ0Y2ExY2ZmNjQ5MmFjNDBjNDA1ZTA0ZjBjMjM2NjY1MzZiM2I=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-02-12T17:56:09Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2019-02-12T17:56:09Z"}, "message": "[CI] Update crosstool-ng builders to GCC 5.2", "tree": {"sha": "b5cbc5d2e0e1615a3cfa12e586423b5003f1ee57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5cbc5d2e0e1615a3cfa12e586423b5003f1ee57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e0544ca1cff6492ac40c405e04f0c23666536b3b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e0544ca1cff6492ac40c405e04f0c23666536b3b", "html_url": "https://github.com/rust-lang/rust/commit/e0544ca1cff6492ac40c405e04f0c23666536b3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e0544ca1cff6492ac40c405e04f0c23666536b3b/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57d7cfc3cf50f0c427ad3043ff09eaef20671320", "url": "https://api.github.com/repos/rust-lang/rust/commits/57d7cfc3cf50f0c427ad3043ff09eaef20671320", "html_url": "https://github.com/rust-lang/rust/commit/57d7cfc3cf50f0c427ad3043ff09eaef20671320"}], "stats": {"total": 389, "additions": 300, "deletions": 89}, "files": [{"sha": "34320ab4411e2d70640efd7e55f2e62011f230a7", "filename": "src/ci/docker/README.md", "status": "modified", "additions": 16, "deletions": 10, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2FREADME.md?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -131,36 +131,42 @@ $category > $option = $value -- $comment\n For targets: `arm-unknown-linux-gnueabi`\n \n - Path and misc options > Prefix directory = /x-tools/${CT\\_TARGET}\n+- Path and misc options > Patches origin = Bundled, then local\n+- Path and misc options > Local patch directory = /tmp/patches\n - Target options > Target Architecture = arm\n - Target options > Architecture level = armv6 -- (+)\n - Target options > Floating point = software (no FPU) -- (\\*)\n - Operating System > Target OS = linux\n - Operating System > Linux kernel version = 3.2.72 -- Precise kernel\n-- C-library > glibc version = 2.14.1\n-- C compiler > gcc version = 4.9.3\n+- C-library > glibc version = 2.16.0\n+- C compiler > gcc version = 5.2.0\n - C compiler > C++ = ENABLE -- to cross compile LLVM\n \n ### `arm-linux-gnueabihf.config`\n \n For targets: `arm-unknown-linux-gnueabihf`\n \n - Path and misc options > Prefix directory = /x-tools/${CT\\_TARGET}\n+- Path and misc options > Patches origin = Bundled, then local\n+- Path and misc options > Local patch directory = /tmp/patches\n - Target options > Target Architecture = arm\n - Target options > Architecture level = armv6 -- (+)\n - Target options > Use specific FPU = vfp -- (+)\n - Target options > Floating point = hardware (FPU) -- (\\*)\n - Target options > Default instruction set mode = arm -- (+)\n - Operating System > Target OS = linux\n - Operating System > Linux kernel version = 3.2.72 -- Precise kernel\n-- C-library > glibc version = 2.14.1\n-- C compiler > gcc version = 4.9.3\n+- C-library > glibc version = 2.16.0\n+- C compiler > gcc version = 5.2.0\n - C compiler > C++ = ENABLE -- to cross compile LLVM\n \n ### `armv7-linux-gnueabihf.config`\n \n For targets: `armv7-unknown-linux-gnueabihf`\n \n - Path and misc options > Prefix directory = /x-tools/${CT\\_TARGET}\n+- Path and misc options > Patches origin = Bundled, then local\n+- Path and misc options > Local patch directory = /tmp/patches\n - Target options > Target Architecture = arm\n - Target options > Suffix to the arch-part = v7\n - Target options > Architecture level = armv7-a -- (+)\n@@ -169,8 +175,8 @@ For targets: `armv7-unknown-linux-gnueabihf`\n - Target options > Default instruction set mode = thumb -- (\\*)\n - Operating System > Target OS = linux\n - Operating System > Linux kernel version = 3.2.72 -- Precise kernel\n-- C-library > glibc version = 2.14.1\n-- C compiler > gcc version = 4.9.3\n+- C-library > glibc version = 2.16.0\n+- C compiler > gcc version = 5.2.0\n - C compiler > C++ = ENABLE -- to cross compile LLVM\n \n (\\*) These options have been selected to match the configuration of the arm\n@@ -204,7 +210,7 @@ For targets: `powerpc-unknown-linux-gnu`\n - Operating System > Target OS = linux\n - Operating System > Linux kernel version = 2.6.32.68 -- ~RHEL6 kernel\n - C-library > glibc version = 2.12.2 -- ~RHEL6 glibc\n-- C compiler > gcc version = 4.9.3\n+- C compiler > gcc version = 5.2.0\n - C compiler > C++ = ENABLE -- to cross compile LLVM\n \n ### `powerpc64-linux-gnu.config`\n@@ -221,7 +227,7 @@ For targets: `powerpc64-unknown-linux-gnu`\n - Operating System > Target OS = linux\n - Operating System > Linux kernel version = 2.6.32.68 -- ~RHEL6 kernel\n - C-library > glibc version = 2.12.2 -- ~RHEL6 glibc\n-- C compiler > gcc version = 4.9.3\n+- C compiler > gcc version = 5.2.0\n - C compiler > C++ = ENABLE -- to cross compile LLVM\n \n (+) These CPU options match the configuration of the toolchains in RHEL6.\n@@ -232,12 +238,12 @@ For targets: `s390x-unknown-linux-gnu`\n \n - Path and misc options > Prefix directory = /x-tools/${CT\\_TARGET}\n - Path and misc options > Patches origin = Bundled, then local\n-- Path and misc options > Local patch directory = /build/patches\n+- Path and misc options > Local patch directory = /tmp/patches\n - Target options > Target Architecture = s390\n - Target options > Bitness = 64-bit\n - Operating System > Target OS = linux\n - Operating System > Linux kernel version = 2.6.32.68 -- ~RHEL6 kernel\n - C-library > glibc version = 2.12.2 -- ~RHEL6 glibc\n-- C compiler > gcc version = 4.9.3\n+- C compiler > gcc version = 5.2.0\n - C compiler > gcc extra config = --with-arch=z10 -- LLVM's minimum support\n - C compiler > C++ = ENABLE -- to cross compile LLVM"}, {"sha": "48851ae232c99c481ba7482e5758b17e98bab6c9", "filename": "src/ci/docker/dist-arm-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2FDockerfile?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -16,6 +16,7 @@ RUN sh /scripts/rustbuild-setup.sh\n USER rustbuild\n WORKDIR /tmp\n \n+COPY dist-arm-linux/patches/ /tmp/patches/\n COPY dist-arm-linux/arm-linux-gnueabi.config dist-arm-linux/build-toolchains.sh /tmp/\n RUN ./build-toolchains.sh\n "}, {"sha": "4185112d8be90f28c34da0d0242fe36f1452f989", "filename": "src/ci/docker/dist-arm-linux/arm-linux-gnueabi.config", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-arm-linux%2Farm-linux-gnueabi.config", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-arm-linux%2Farm-linux-gnueabi.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2Farm-linux-gnueabi.config?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -3,6 +3,7 @@\n # Crosstool-NG Configuration\n #\n CT_CONFIGURE_has_make381=y\n+CT_CONFIGURE_has_xz=y\n CT_MODULES=y\n \n #\n@@ -44,14 +45,16 @@ CT_CONNECT_TIMEOUT=10\n # CT_FORCE_EXTRACT is not set\n CT_OVERIDE_CONFIG_GUESS_SUB=y\n # CT_ONLY_EXTRACT is not set\n-CT_PATCH_BUNDLED=y\n+# CT_PATCH_BUNDLED is not set\n # CT_PATCH_LOCAL is not set\n-# CT_PATCH_BUNDLED_LOCAL is not set\n+CT_PATCH_BUNDLED_LOCAL=y\n # CT_PATCH_LOCAL_BUNDLED is not set\n # CT_PATCH_BUNDLED_FALLBACK_LOCAL is not set\n # CT_PATCH_LOCAL_FALLBACK_BUNDLED is not set\n # CT_PATCH_NONE is not set\n-CT_PATCH_ORDER=\"bundled\"\n+CT_PATCH_ORDER=\"bundled,local\"\n+CT_PATCH_USE_LOCAL=y\n+CT_LOCAL_PATCH_DIR=\"/tmp/patches\"\n \n #\n # Build behavior\n@@ -391,8 +394,8 @@ CT_CC_CORE_PASS_1_NEEDED=y\n CT_CC_CORE_PASS_2_NEEDED=y\n CT_CC_gcc=y\n # CT_CC_GCC_SHOW_LINARO is not set\n-# CT_CC_GCC_V_5_2_0 is not set\n-CT_CC_GCC_V_4_9_3=y\n+CT_CC_GCC_V_5_2_0=y\n+# CT_CC_GCC_V_4_9_3 is not set\n # CT_CC_GCC_V_4_8_5 is not set\n # CT_CC_GCC_V_4_7_4 is not set\n # CT_CC_GCC_V_4_6_4 is not set\n@@ -407,8 +410,9 @@ CT_CC_GCC_4_5_or_later=y\n CT_CC_GCC_4_6_or_later=y\n CT_CC_GCC_4_7_or_later=y\n CT_CC_GCC_4_8_or_later=y\n-CT_CC_GCC_4_9=y\n CT_CC_GCC_4_9_or_later=y\n+CT_CC_GCC_5=y\n+CT_CC_GCC_5_or_later=y\n CT_CC_GCC_HAS_GRAPHITE=y\n CT_CC_GCC_USE_GRAPHITE=y\n CT_CC_GCC_HAS_LTO=y\n@@ -420,7 +424,7 @@ CT_CC_GCC_USE_GMP_MPFR=y\n CT_CC_GCC_USE_MPC=y\n CT_CC_GCC_HAS_LIBQUADMATH=y\n CT_CC_GCC_HAS_LIBSANITIZER=y\n-CT_CC_GCC_VERSION=\"4.9.3\"\n+CT_CC_GCC_VERSION=\"5.2.0\"\n # CT_CC_LANG_FORTRAN is not set\n CT_CC_GCC_ENABLE_CXX_FLAGS=\"\"\n CT_CC_GCC_CORE_EXTRA_CONFIG_ARRAY=\"\"\n@@ -492,15 +496,13 @@ CT_GETTEXT_NEEDED=y\n CT_GMP_NEEDED=y\n CT_MPFR_NEEDED=y\n CT_ISL_NEEDED=y\n-CT_CLOOG_NEEDED=y\n CT_MPC_NEEDED=y\n CT_COMPLIBS=y\n CT_LIBICONV=y\n CT_GETTEXT=y\n CT_GMP=y\n CT_MPFR=y\n CT_ISL=y\n-CT_CLOOG=y\n CT_MPC=y\n CT_LIBICONV_V_1_14=y\n CT_LIBICONV_VERSION=\"1.14\"\n@@ -526,15 +528,13 @@ CT_MPFR_V_3_1_3=y\n # CT_MPFR_V_2_4_0 is not set\n CT_MPFR_VERSION=\"3.1.3\"\n CT_ISL_V_0_14=y\n+# CT_ISL_V_0_12_2 is not set\n CT_ISL_V_0_14_or_later=y\n CT_ISL_V_0_12_or_later=y\n CT_ISL_VERSION=\"0.14\"\n-CT_CLOOG_V_0_18_4=y\n+# CT_CLOOG_V_0_18_4 is not set\n # CT_CLOOG_V_0_18_1 is not set\n # CT_CLOOG_V_0_18_0 is not set\n-CT_CLOOG_VERSION=\"0.18.4\"\n-CT_CLOOG_0_18_4_or_later=y\n-CT_CLOOG_0_18_or_later=y\n CT_MPC_V_1_0_3=y\n # CT_MPC_V_1_0_2 is not set\n # CT_MPC_V_1_0_1 is not set"}, {"sha": "871d5225c0f714e035a0d97c7c2d841acfa09431", "filename": "src/ci/docker/dist-arm-linux/patches/glibc/ports-2.16.0/001-arm-libgcc_s_resume-used.patch", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-arm-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -0,0 +1,48 @@\n+commit bdb24c2851fd5f0ad9b82d7ea1db911d334b02d2\n+Author: Joseph Myers <joseph@codesourcery.com>\n+Date:   Tue May 20 21:27:13 2014 +0000\n+\n+    Fix ARM build with GCC trunk.\n+    \n+    sysdeps/unix/sysv/linux/arm/unwind-resume.c and\n+    sysdeps/unix/sysv/linux/arm/unwind-forcedunwind.c have static\n+    variables that are written in C code but only read from toplevel asms.\n+    Current GCC trunk now optimizes away such apparently write-only static\n+    variables, so causing a build failure.  This patch marks those\n+    variables with __attribute_used__ to avoid that optimization.\n+    \n+    Tested that this fixes the build for ARM.\n+    \n+            * sysdeps/unix/sysv/linux/arm/unwind-forcedunwind.c\n+            (libgcc_s_resume): Use __attribute_used__.\n+            * sysdeps/unix/sysv/linux/arm/unwind-resume.c (libgcc_s_resume):\n+            Likewise.\n+\n+diff --git a/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c b/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n+index 29e2c2b00b04..e848bfeffdcb 100644\n+--- a/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n++++ b/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n+@@ -22,7 +22,8 @@\n+ #include <pthreadP.h>\n+ \n+ static void *libgcc_s_handle;\n+-static void (*libgcc_s_resume) (struct _Unwind_Exception *exc);\n++static void (*libgcc_s_resume) (struct _Unwind_Exception *exc)\n++  __attribute_used__;\n+ static _Unwind_Reason_Code (*libgcc_s_personality)\n+   (_Unwind_State, struct _Unwind_Exception *, struct _Unwind_Context *);\n+ static _Unwind_Reason_Code (*libgcc_s_forcedunwind)\n+diff --git a/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c b/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n+index 285b99b5ed0d..48d00fc83641 100644\n+--- a/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n++++ b/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n+@@ -20,7 +20,8 @@\n+ #include <stdio.h>\n+ #include <unwind.h>\n+ \n+-static void (*libgcc_s_resume) (struct _Unwind_Exception *exc);\n++static void (*libgcc_s_resume) (struct _Unwind_Exception *exc)\n++  __attribute_used__;\n+ static _Unwind_Reason_Code (*libgcc_s_personality)\n+   (_Unwind_State, struct _Unwind_Exception *, struct _Unwind_Context *);\n+ "}, {"sha": "d1dd9faaa103526b51cc3d2f99756d8eb745524f", "filename": "src/ci/docker/dist-armhf-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armhf-linux%2FDockerfile?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -16,6 +16,7 @@ RUN sh /scripts/rustbuild-setup.sh\n USER rustbuild\n WORKDIR /tmp\n \n+COPY dist-armhf-linux/patches/ /tmp/patches/\n COPY dist-armhf-linux/arm-linux-gnueabihf.config dist-armhf-linux/build-toolchains.sh /tmp/\n RUN ./build-toolchains.sh\n "}, {"sha": "bebbcd1670a5e154bb5674a67af6054ac3ee7d2f", "filename": "src/ci/docker/dist-armhf-linux/arm-linux-gnueabihf.config", "status": "modified", "additions": 13, "deletions": 13, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Farm-linux-gnueabihf.config", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Farm-linux-gnueabihf.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Farm-linux-gnueabihf.config?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -3,6 +3,7 @@\n # Crosstool-NG Configuration\n #\n CT_CONFIGURE_has_make381=y\n+CT_CONFIGURE_has_xz=y\n CT_MODULES=y\n \n #\n@@ -44,14 +45,16 @@ CT_CONNECT_TIMEOUT=10\n # CT_FORCE_EXTRACT is not set\n CT_OVERIDE_CONFIG_GUESS_SUB=y\n # CT_ONLY_EXTRACT is not set\n-CT_PATCH_BUNDLED=y\n+# CT_PATCH_BUNDLED is not set\n # CT_PATCH_LOCAL is not set\n-# CT_PATCH_BUNDLED_LOCAL is not set\n+CT_PATCH_BUNDLED_LOCAL=y\n # CT_PATCH_LOCAL_BUNDLED is not set\n # CT_PATCH_BUNDLED_FALLBACK_LOCAL is not set\n # CT_PATCH_LOCAL_FALLBACK_BUNDLED is not set\n # CT_PATCH_NONE is not set\n-CT_PATCH_ORDER=\"bundled\"\n+CT_PATCH_ORDER=\"bundled,local\"\n+CT_PATCH_USE_LOCAL=y\n+CT_LOCAL_PATCH_DIR=\"/tmp/patches\"\n \n #\n # Build behavior\n@@ -392,8 +395,8 @@ CT_CC_CORE_PASS_1_NEEDED=y\n CT_CC_CORE_PASS_2_NEEDED=y\n CT_CC_gcc=y\n # CT_CC_GCC_SHOW_LINARO is not set\n-# CT_CC_GCC_V_5_2_0 is not set\n-CT_CC_GCC_V_4_9_3=y\n+CT_CC_GCC_V_5_2_0=y\n+# CT_CC_GCC_V_4_9_3 is not set\n # CT_CC_GCC_V_4_8_5 is not set\n # CT_CC_GCC_V_4_7_4 is not set\n # CT_CC_GCC_V_4_6_4 is not set\n@@ -408,8 +411,9 @@ CT_CC_GCC_4_5_or_later=y\n CT_CC_GCC_4_6_or_later=y\n CT_CC_GCC_4_7_or_later=y\n CT_CC_GCC_4_8_or_later=y\n-CT_CC_GCC_4_9=y\n CT_CC_GCC_4_9_or_later=y\n+CT_CC_GCC_5=y\n+CT_CC_GCC_5_or_later=y\n CT_CC_GCC_HAS_GRAPHITE=y\n CT_CC_GCC_USE_GRAPHITE=y\n CT_CC_GCC_HAS_LTO=y\n@@ -421,7 +425,7 @@ CT_CC_GCC_USE_GMP_MPFR=y\n CT_CC_GCC_USE_MPC=y\n CT_CC_GCC_HAS_LIBQUADMATH=y\n CT_CC_GCC_HAS_LIBSANITIZER=y\n-CT_CC_GCC_VERSION=\"4.9.3\"\n+CT_CC_GCC_VERSION=\"5.2.0\"\n # CT_CC_LANG_FORTRAN is not set\n CT_CC_GCC_ENABLE_CXX_FLAGS=\"\"\n CT_CC_GCC_CORE_EXTRA_CONFIG_ARRAY=\"\"\n@@ -493,15 +497,13 @@ CT_GETTEXT_NEEDED=y\n CT_GMP_NEEDED=y\n CT_MPFR_NEEDED=y\n CT_ISL_NEEDED=y\n-CT_CLOOG_NEEDED=y\n CT_MPC_NEEDED=y\n CT_COMPLIBS=y\n CT_LIBICONV=y\n CT_GETTEXT=y\n CT_GMP=y\n CT_MPFR=y\n CT_ISL=y\n-CT_CLOOG=y\n CT_MPC=y\n CT_LIBICONV_V_1_14=y\n CT_LIBICONV_VERSION=\"1.14\"\n@@ -527,15 +529,13 @@ CT_MPFR_V_3_1_3=y\n # CT_MPFR_V_2_4_0 is not set\n CT_MPFR_VERSION=\"3.1.3\"\n CT_ISL_V_0_14=y\n+# CT_ISL_V_0_12_2 is not set\n CT_ISL_V_0_14_or_later=y\n CT_ISL_V_0_12_or_later=y\n CT_ISL_VERSION=\"0.14\"\n-CT_CLOOG_V_0_18_4=y\n+# CT_CLOOG_V_0_18_4 is not set\n # CT_CLOOG_V_0_18_1 is not set\n # CT_CLOOG_V_0_18_0 is not set\n-CT_CLOOG_VERSION=\"0.18.4\"\n-CT_CLOOG_0_18_4_or_later=y\n-CT_CLOOG_0_18_or_later=y\n CT_MPC_V_1_0_3=y\n # CT_MPC_V_1_0_2 is not set\n # CT_MPC_V_1_0_1 is not set"}, {"sha": "871d5225c0f714e035a0d97c7c2d841acfa09431", "filename": "src/ci/docker/dist-armhf-linux/patches/glibc/ports-2.16.0/001-arm-libgcc_s_resume-used.patch", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armhf-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -0,0 +1,48 @@\n+commit bdb24c2851fd5f0ad9b82d7ea1db911d334b02d2\n+Author: Joseph Myers <joseph@codesourcery.com>\n+Date:   Tue May 20 21:27:13 2014 +0000\n+\n+    Fix ARM build with GCC trunk.\n+    \n+    sysdeps/unix/sysv/linux/arm/unwind-resume.c and\n+    sysdeps/unix/sysv/linux/arm/unwind-forcedunwind.c have static\n+    variables that are written in C code but only read from toplevel asms.\n+    Current GCC trunk now optimizes away such apparently write-only static\n+    variables, so causing a build failure.  This patch marks those\n+    variables with __attribute_used__ to avoid that optimization.\n+    \n+    Tested that this fixes the build for ARM.\n+    \n+            * sysdeps/unix/sysv/linux/arm/unwind-forcedunwind.c\n+            (libgcc_s_resume): Use __attribute_used__.\n+            * sysdeps/unix/sysv/linux/arm/unwind-resume.c (libgcc_s_resume):\n+            Likewise.\n+\n+diff --git a/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c b/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n+index 29e2c2b00b04..e848bfeffdcb 100644\n+--- a/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n++++ b/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n+@@ -22,7 +22,8 @@\n+ #include <pthreadP.h>\n+ \n+ static void *libgcc_s_handle;\n+-static void (*libgcc_s_resume) (struct _Unwind_Exception *exc);\n++static void (*libgcc_s_resume) (struct _Unwind_Exception *exc)\n++  __attribute_used__;\n+ static _Unwind_Reason_Code (*libgcc_s_personality)\n+   (_Unwind_State, struct _Unwind_Exception *, struct _Unwind_Context *);\n+ static _Unwind_Reason_Code (*libgcc_s_forcedunwind)\n+diff --git a/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c b/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n+index 285b99b5ed0d..48d00fc83641 100644\n+--- a/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n++++ b/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n+@@ -20,7 +20,8 @@\n+ #include <stdio.h>\n+ #include <unwind.h>\n+ \n+-static void (*libgcc_s_resume) (struct _Unwind_Exception *exc);\n++static void (*libgcc_s_resume) (struct _Unwind_Exception *exc)\n++  __attribute_used__;\n+ static _Unwind_Reason_Code (*libgcc_s_personality)\n+   (_Unwind_State, struct _Unwind_Exception *, struct _Unwind_Context *);\n+ "}, {"sha": "170b8134d3edcd8ac32931c06416e472f5f0253e", "filename": "src/ci/docker/dist-armv7-linux/Dockerfile", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2FDockerfile?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -16,6 +16,7 @@ RUN sh /scripts/rustbuild-setup.sh\n USER rustbuild\n WORKDIR /tmp\n \n+COPY dist-armv7-linux/patches/ /tmp/patches/\n COPY dist-armv7-linux/build-toolchains.sh dist-armv7-linux/armv7-linux-gnueabihf.config /tmp/\n RUN ./build-toolchains.sh\n "}, {"sha": "5cccfd8444d3536a8c501e48f8782a958e795fd9", "filename": "src/ci/docker/dist-armv7-linux/armv7-linux-gnueabihf.config", "status": "modified", "additions": 13, "deletions": 21, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Farmv7-linux-gnueabihf.config", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Farmv7-linux-gnueabihf.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Farmv7-linux-gnueabihf.config?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -3,6 +3,7 @@\n # Crosstool-NG Configuration\n #\n CT_CONFIGURE_has_make381=y\n+CT_CONFIGURE_has_xz=y\n CT_MODULES=y\n \n #\n@@ -44,14 +45,16 @@ CT_CONNECT_TIMEOUT=10\n # CT_FORCE_EXTRACT is not set\n CT_OVERIDE_CONFIG_GUESS_SUB=y\n # CT_ONLY_EXTRACT is not set\n-CT_PATCH_BUNDLED=y\n+# CT_PATCH_BUNDLED is not set\n # CT_PATCH_LOCAL is not set\n-# CT_PATCH_BUNDLED_LOCAL is not set\n+CT_PATCH_BUNDLED_LOCAL=y\n # CT_PATCH_LOCAL_BUNDLED is not set\n # CT_PATCH_BUNDLED_FALLBACK_LOCAL is not set\n # CT_PATCH_LOCAL_FALLBACK_BUNDLED is not set\n # CT_PATCH_NONE is not set\n-CT_PATCH_ORDER=\"bundled\"\n+CT_PATCH_ORDER=\"bundled,local\"\n+CT_PATCH_USE_LOCAL=y\n+CT_LOCAL_PATCH_DIR=\"/tmp/patches\"\n \n #\n # Build behavior\n@@ -155,12 +158,6 @@ CT_ARCH_EXCLUSIVE_WITH_CPU=y\n # CT_ARCH_FLOAT_AUTO is not set\n # CT_ARCH_FLOAT_SOFTFP is not set\n CT_ARCH_FLOAT=\"hard\"\n-# CT_ARCH_ALPHA_EV4 is not set\n-# CT_ARCH_ALPHA_EV45 is not set\n-# CT_ARCH_ALPHA_EV5 is not set\n-# CT_ARCH_ALPHA_EV56 is not set\n-# CT_ARCH_ALPHA_EV6 is not set\n-# CT_ARCH_ALPHA_EV67 is not set\n \n #\n # arm other options\n@@ -311,8 +308,6 @@ CT_LIBC=\"glibc\"\n CT_LIBC_VERSION=\"2.16.0\"\n CT_LIBC_glibc=y\n # CT_LIBC_musl is not set\n-# CT_LIBC_newlib is not set\n-# CT_LIBC_none is not set\n # CT_LIBC_uClibc is not set\n CT_LIBC_avr_libc_AVAILABLE=y\n CT_LIBC_glibc_AVAILABLE=y\n@@ -400,8 +395,8 @@ CT_CC_CORE_PASS_1_NEEDED=y\n CT_CC_CORE_PASS_2_NEEDED=y\n CT_CC_gcc=y\n # CT_CC_GCC_SHOW_LINARO is not set\n-# CT_CC_GCC_V_5_2_0 is not set\n-CT_CC_GCC_V_4_9_3=y\n+CT_CC_GCC_V_5_2_0=y\n+# CT_CC_GCC_V_4_9_3 is not set\n # CT_CC_GCC_V_4_8_5 is not set\n # CT_CC_GCC_V_4_7_4 is not set\n # CT_CC_GCC_V_4_6_4 is not set\n@@ -416,8 +411,9 @@ CT_CC_GCC_4_5_or_later=y\n CT_CC_GCC_4_6_or_later=y\n CT_CC_GCC_4_7_or_later=y\n CT_CC_GCC_4_8_or_later=y\n-CT_CC_GCC_4_9=y\n CT_CC_GCC_4_9_or_later=y\n+CT_CC_GCC_5=y\n+CT_CC_GCC_5_or_later=y\n CT_CC_GCC_HAS_GRAPHITE=y\n CT_CC_GCC_USE_GRAPHITE=y\n CT_CC_GCC_HAS_LTO=y\n@@ -429,7 +425,7 @@ CT_CC_GCC_USE_GMP_MPFR=y\n CT_CC_GCC_USE_MPC=y\n CT_CC_GCC_HAS_LIBQUADMATH=y\n CT_CC_GCC_HAS_LIBSANITIZER=y\n-CT_CC_GCC_VERSION=\"4.9.3\"\n+CT_CC_GCC_VERSION=\"5.2.0\"\n # CT_CC_LANG_FORTRAN is not set\n CT_CC_GCC_ENABLE_CXX_FLAGS=\"\"\n CT_CC_GCC_CORE_EXTRA_CONFIG_ARRAY=\"\"\n@@ -501,15 +497,13 @@ CT_GETTEXT_NEEDED=y\n CT_GMP_NEEDED=y\n CT_MPFR_NEEDED=y\n CT_ISL_NEEDED=y\n-CT_CLOOG_NEEDED=y\n CT_MPC_NEEDED=y\n CT_COMPLIBS=y\n CT_LIBICONV=y\n CT_GETTEXT=y\n CT_GMP=y\n CT_MPFR=y\n CT_ISL=y\n-CT_CLOOG=y\n CT_MPC=y\n CT_LIBICONV_V_1_14=y\n CT_LIBICONV_VERSION=\"1.14\"\n@@ -535,15 +529,13 @@ CT_MPFR_V_3_1_3=y\n # CT_MPFR_V_2_4_0 is not set\n CT_MPFR_VERSION=\"3.1.3\"\n CT_ISL_V_0_14=y\n+# CT_ISL_V_0_12_2 is not set\n CT_ISL_V_0_14_or_later=y\n CT_ISL_V_0_12_or_later=y\n CT_ISL_VERSION=\"0.14\"\n-CT_CLOOG_V_0_18_4=y\n+# CT_CLOOG_V_0_18_4 is not set\n # CT_CLOOG_V_0_18_1 is not set\n # CT_CLOOG_V_0_18_0 is not set\n-CT_CLOOG_VERSION=\"0.18.4\"\n-CT_CLOOG_0_18_4_or_later=y\n-CT_CLOOG_0_18_or_later=y\n CT_MPC_V_1_0_3=y\n # CT_MPC_V_1_0_2 is not set\n # CT_MPC_V_1_0_1 is not set"}, {"sha": "871d5225c0f714e035a0d97c7c2d841acfa09431", "filename": "src/ci/docker/dist-armv7-linux/patches/glibc/ports-2.16.0/001-arm-libgcc_s_resume-used.patch", "status": "added", "additions": 48, "deletions": 0, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-armv7-linux%2Fpatches%2Fglibc%2Fports-2.16.0%2F001-arm-libgcc_s_resume-used.patch?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -0,0 +1,48 @@\n+commit bdb24c2851fd5f0ad9b82d7ea1db911d334b02d2\n+Author: Joseph Myers <joseph@codesourcery.com>\n+Date:   Tue May 20 21:27:13 2014 +0000\n+\n+    Fix ARM build with GCC trunk.\n+    \n+    sysdeps/unix/sysv/linux/arm/unwind-resume.c and\n+    sysdeps/unix/sysv/linux/arm/unwind-forcedunwind.c have static\n+    variables that are written in C code but only read from toplevel asms.\n+    Current GCC trunk now optimizes away such apparently write-only static\n+    variables, so causing a build failure.  This patch marks those\n+    variables with __attribute_used__ to avoid that optimization.\n+    \n+    Tested that this fixes the build for ARM.\n+    \n+            * sysdeps/unix/sysv/linux/arm/unwind-forcedunwind.c\n+            (libgcc_s_resume): Use __attribute_used__.\n+            * sysdeps/unix/sysv/linux/arm/unwind-resume.c (libgcc_s_resume):\n+            Likewise.\n+\n+diff --git a/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c b/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n+index 29e2c2b00b04..e848bfeffdcb 100644\n+--- a/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n++++ b/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-forcedunwind.c\n+@@ -22,7 +22,8 @@\n+ #include <pthreadP.h>\n+ \n+ static void *libgcc_s_handle;\n+-static void (*libgcc_s_resume) (struct _Unwind_Exception *exc);\n++static void (*libgcc_s_resume) (struct _Unwind_Exception *exc)\n++  __attribute_used__;\n+ static _Unwind_Reason_Code (*libgcc_s_personality)\n+   (_Unwind_State, struct _Unwind_Exception *, struct _Unwind_Context *);\n+ static _Unwind_Reason_Code (*libgcc_s_forcedunwind)\n+diff --git a/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c b/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n+index 285b99b5ed0d..48d00fc83641 100644\n+--- a/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n++++ b/ports/sysdeps/unix/sysv/linux/arm/nptl/unwind-resume.c\n+@@ -20,7 +20,8 @@\n+ #include <stdio.h>\n+ #include <unwind.h>\n+ \n+-static void (*libgcc_s_resume) (struct _Unwind_Exception *exc);\n++static void (*libgcc_s_resume) (struct _Unwind_Exception *exc)\n++  __attribute_used__;\n+ static _Unwind_Reason_Code (*libgcc_s_personality)\n+   (_Unwind_State, struct _Unwind_Exception *, struct _Unwind_Context *);\n+ "}, {"sha": "a96b4882c2d5765e3a600e77ebbef747f6e4d9ff", "filename": "src/ci/docker/dist-powerpc-linux/patches/glibc/2.12.2/002-newer-gcc.patch", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fpatches%2Fglibc%2F2.12.2%2F002-newer-gcc.patch", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fpatches%2Fglibc%2F2.12.2%2F002-newer-gcc.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fpatches%2Fglibc%2F2.12.2%2F002-newer-gcc.patch?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -0,0 +1,26 @@\n+diff --git a/configure b/configure\n+index b6752d147c6b..6089a3403410 100755\n+--- a/configure\n++++ b/configure\n+@@ -5079,7 +5079,7 @@ $as_echo_n \"checking version of $CC... \" >&6; }\n+   ac_prog_version=`$CC -v 2>&1 | sed -n 's/^.*version \\([egcygnustpi-]*[0-9.]*\\).*$/\\1/p'`\n+   case $ac_prog_version in\n+     '') ac_prog_version=\"v. ?.??, bad\"; ac_verc_fail=yes;;\n+-    3.4* | 4.[0-9]* )\n++    3.4* | [4-9].* )\n+        ac_prog_version=\"$ac_prog_version, ok\"; ac_verc_fail=no;;\n+     *) ac_prog_version=\"$ac_prog_version, bad\"; ac_verc_fail=yes;;\n+ \n+diff --git a/configure.in b/configure.in\n+index 56849dfc489a..09677eb3d0c1 100644\n+--- a/configure.in\n++++ b/configure.in\n+@@ -960,7 +960,7 @@ fi\n+ # These programs are version sensitive.\n+ AC_CHECK_TOOL_PREFIX\n+ AC_CHECK_PROG_VER(CC, ${ac_tool_prefix}gcc ${ac_tool_prefix}cc, -v,\n+-  [version \\([egcygnustpi-]*[0-9.]*\\)], [3.4* | 4.[0-9]* ],\n++  [version \\([egcygnustpi-]*[0-9.]*\\)], [3.4* | [4-9].* ],\n+   critic_missing=\"$critic_missing gcc\")\n+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,\n+   [GNU Make[^0-9]*\\([0-9][0-9.]*\\)],"}, {"sha": "7df41da2bf76e87cc5f3fe670b252b6850318578", "filename": "src/ci/docker/dist-powerpc-linux/powerpc-linux-gnu.config", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fpowerpc-linux-gnu.config", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fpowerpc-linux-gnu.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc-linux%2Fpowerpc-linux-gnu.config?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -359,8 +359,8 @@ CT_CC_CORE_PASS_1_NEEDED=y\n CT_CC_CORE_PASS_2_NEEDED=y\n CT_CC_gcc=y\n # CT_CC_GCC_SHOW_LINARO is not set\n-# CT_CC_GCC_V_5_2_0 is not set\n-CT_CC_GCC_V_4_9_3=y\n+CT_CC_GCC_V_5_2_0=y\n+# CT_CC_GCC_V_4_9_3 is not set\n # CT_CC_GCC_V_4_8_5 is not set\n # CT_CC_GCC_V_4_7_4 is not set\n # CT_CC_GCC_V_4_6_4 is not set\n@@ -375,8 +375,9 @@ CT_CC_GCC_4_5_or_later=y\n CT_CC_GCC_4_6_or_later=y\n CT_CC_GCC_4_7_or_later=y\n CT_CC_GCC_4_8_or_later=y\n-CT_CC_GCC_4_9=y\n CT_CC_GCC_4_9_or_later=y\n+CT_CC_GCC_5=y\n+CT_CC_GCC_5_or_later=y\n CT_CC_GCC_HAS_GRAPHITE=y\n CT_CC_GCC_USE_GRAPHITE=y\n CT_CC_GCC_HAS_LTO=y\n@@ -388,7 +389,7 @@ CT_CC_GCC_USE_GMP_MPFR=y\n CT_CC_GCC_USE_MPC=y\n CT_CC_GCC_HAS_LIBQUADMATH=y\n CT_CC_GCC_HAS_LIBSANITIZER=y\n-CT_CC_GCC_VERSION=\"4.9.3\"\n+CT_CC_GCC_VERSION=\"5.2.0\"\n # CT_CC_LANG_FORTRAN is not set\n CT_CC_GCC_ENABLE_CXX_FLAGS=\"\"\n CT_CC_GCC_CORE_EXTRA_CONFIG_ARRAY=\"\"\n@@ -460,15 +461,13 @@ CT_GETTEXT_NEEDED=y\n CT_GMP_NEEDED=y\n CT_MPFR_NEEDED=y\n CT_ISL_NEEDED=y\n-CT_CLOOG_NEEDED=y\n CT_MPC_NEEDED=y\n CT_COMPLIBS=y\n CT_LIBICONV=y\n CT_GETTEXT=y\n CT_GMP=y\n CT_MPFR=y\n CT_ISL=y\n-CT_CLOOG=y\n CT_MPC=y\n CT_LIBICONV_V_1_14=y\n CT_LIBICONV_VERSION=\"1.14\"\n@@ -494,15 +493,13 @@ CT_MPFR_V_3_1_3=y\n # CT_MPFR_V_2_4_0 is not set\n CT_MPFR_VERSION=\"3.1.3\"\n CT_ISL_V_0_14=y\n+# CT_ISL_V_0_12_2 is not set\n CT_ISL_V_0_14_or_later=y\n CT_ISL_V_0_12_or_later=y\n CT_ISL_VERSION=\"0.14\"\n-CT_CLOOG_V_0_18_4=y\n+# CT_CLOOG_V_0_18_4 is not set\n # CT_CLOOG_V_0_18_1 is not set\n # CT_CLOOG_V_0_18_0 is not set\n-CT_CLOOG_VERSION=\"0.18.4\"\n-CT_CLOOG_0_18_4_or_later=y\n-CT_CLOOG_0_18_or_later=y\n CT_MPC_V_1_0_3=y\n # CT_MPC_V_1_0_2 is not set\n # CT_MPC_V_1_0_1 is not set"}, {"sha": "a96b4882c2d5765e3a600e77ebbef747f6e4d9ff", "filename": "src/ci/docker/dist-powerpc64-linux/patches/glibc/2.12.2/003-newer-gcc.patch", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fpatches%2Fglibc%2F2.12.2%2F003-newer-gcc.patch", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fpatches%2Fglibc%2F2.12.2%2F003-newer-gcc.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fpatches%2Fglibc%2F2.12.2%2F003-newer-gcc.patch?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -0,0 +1,26 @@\n+diff --git a/configure b/configure\n+index b6752d147c6b..6089a3403410 100755\n+--- a/configure\n++++ b/configure\n+@@ -5079,7 +5079,7 @@ $as_echo_n \"checking version of $CC... \" >&6; }\n+   ac_prog_version=`$CC -v 2>&1 | sed -n 's/^.*version \\([egcygnustpi-]*[0-9.]*\\).*$/\\1/p'`\n+   case $ac_prog_version in\n+     '') ac_prog_version=\"v. ?.??, bad\"; ac_verc_fail=yes;;\n+-    3.4* | 4.[0-9]* )\n++    3.4* | [4-9].* )\n+        ac_prog_version=\"$ac_prog_version, ok\"; ac_verc_fail=no;;\n+     *) ac_prog_version=\"$ac_prog_version, bad\"; ac_verc_fail=yes;;\n+ \n+diff --git a/configure.in b/configure.in\n+index 56849dfc489a..09677eb3d0c1 100644\n+--- a/configure.in\n++++ b/configure.in\n+@@ -960,7 +960,7 @@ fi\n+ # These programs are version sensitive.\n+ AC_CHECK_TOOL_PREFIX\n+ AC_CHECK_PROG_VER(CC, ${ac_tool_prefix}gcc ${ac_tool_prefix}cc, -v,\n+-  [version \\([egcygnustpi-]*[0-9.]*\\)], [3.4* | 4.[0-9]* ],\n++  [version \\([egcygnustpi-]*[0-9.]*\\)], [3.4* | [4-9].* ],\n+   critic_missing=\"$critic_missing gcc\")\n+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,\n+   [GNU Make[^0-9]*\\([0-9][0-9.]*\\)],"}, {"sha": "4aab4f4fd44457eccf86ed90e8290bdd59f1e6e1", "filename": "src/ci/docker/dist-powerpc64-linux/powerpc64-linux-gnu.config", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fpowerpc64-linux-gnu.config", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fpowerpc64-linux-gnu.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-powerpc64-linux%2Fpowerpc64-linux-gnu.config?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -359,8 +359,8 @@ CT_CC_CORE_PASS_1_NEEDED=y\n CT_CC_CORE_PASS_2_NEEDED=y\n CT_CC_gcc=y\n # CT_CC_GCC_SHOW_LINARO is not set\n-# CT_CC_GCC_V_5_2_0 is not set\n-CT_CC_GCC_V_4_9_3=y\n+CT_CC_GCC_V_5_2_0=y\n+# CT_CC_GCC_V_4_9_3 is not set\n # CT_CC_GCC_V_4_8_5 is not set\n # CT_CC_GCC_V_4_7_4 is not set\n # CT_CC_GCC_V_4_6_4 is not set\n@@ -375,8 +375,9 @@ CT_CC_GCC_4_5_or_later=y\n CT_CC_GCC_4_6_or_later=y\n CT_CC_GCC_4_7_or_later=y\n CT_CC_GCC_4_8_or_later=y\n-CT_CC_GCC_4_9=y\n CT_CC_GCC_4_9_or_later=y\n+CT_CC_GCC_5=y\n+CT_CC_GCC_5_or_later=y\n CT_CC_GCC_HAS_GRAPHITE=y\n CT_CC_GCC_USE_GRAPHITE=y\n CT_CC_GCC_HAS_LTO=y\n@@ -388,7 +389,7 @@ CT_CC_GCC_USE_GMP_MPFR=y\n CT_CC_GCC_USE_MPC=y\n CT_CC_GCC_HAS_LIBQUADMATH=y\n CT_CC_GCC_HAS_LIBSANITIZER=y\n-CT_CC_GCC_VERSION=\"4.9.3\"\n+CT_CC_GCC_VERSION=\"5.2.0\"\n # CT_CC_LANG_FORTRAN is not set\n CT_CC_GCC_ENABLE_CXX_FLAGS=\"\"\n CT_CC_GCC_CORE_EXTRA_CONFIG_ARRAY=\"\"\n@@ -460,15 +461,13 @@ CT_GETTEXT_NEEDED=y\n CT_GMP_NEEDED=y\n CT_MPFR_NEEDED=y\n CT_ISL_NEEDED=y\n-CT_CLOOG_NEEDED=y\n CT_MPC_NEEDED=y\n CT_COMPLIBS=y\n CT_LIBICONV=y\n CT_GETTEXT=y\n CT_GMP=y\n CT_MPFR=y\n CT_ISL=y\n-CT_CLOOG=y\n CT_MPC=y\n CT_LIBICONV_V_1_14=y\n CT_LIBICONV_VERSION=\"1.14\"\n@@ -494,15 +493,10 @@ CT_MPFR_V_3_1_3=y\n # CT_MPFR_V_2_4_0 is not set\n CT_MPFR_VERSION=\"3.1.3\"\n CT_ISL_V_0_14=y\n+# CT_ISL_V_0_12_2 is not set\n CT_ISL_V_0_14_or_later=y\n CT_ISL_V_0_12_or_later=y\n CT_ISL_VERSION=\"0.14\"\n-CT_CLOOG_V_0_18_4=y\n-# CT_CLOOG_V_0_18_1 is not set\n-# CT_CLOOG_V_0_18_0 is not set\n-CT_CLOOG_VERSION=\"0.18.4\"\n-CT_CLOOG_0_18_4_or_later=y\n-CT_CLOOG_0_18_or_later=y\n CT_MPC_V_1_0_3=y\n # CT_MPC_V_1_0_2 is not set\n # CT_MPC_V_1_0_1 is not set"}, {"sha": "a96b4882c2d5765e3a600e77ebbef747f6e4d9ff", "filename": "src/ci/docker/dist-s390x-linux/patches/glibc/2.12.2/002-newer-gcc.patch", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fpatches%2Fglibc%2F2.12.2%2F002-newer-gcc.patch", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fpatches%2Fglibc%2F2.12.2%2F002-newer-gcc.patch", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fpatches%2Fglibc%2F2.12.2%2F002-newer-gcc.patch?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -0,0 +1,26 @@\n+diff --git a/configure b/configure\n+index b6752d147c6b..6089a3403410 100755\n+--- a/configure\n++++ b/configure\n+@@ -5079,7 +5079,7 @@ $as_echo_n \"checking version of $CC... \" >&6; }\n+   ac_prog_version=`$CC -v 2>&1 | sed -n 's/^.*version \\([egcygnustpi-]*[0-9.]*\\).*$/\\1/p'`\n+   case $ac_prog_version in\n+     '') ac_prog_version=\"v. ?.??, bad\"; ac_verc_fail=yes;;\n+-    3.4* | 4.[0-9]* )\n++    3.4* | [4-9].* )\n+        ac_prog_version=\"$ac_prog_version, ok\"; ac_verc_fail=no;;\n+     *) ac_prog_version=\"$ac_prog_version, bad\"; ac_verc_fail=yes;;\n+ \n+diff --git a/configure.in b/configure.in\n+index 56849dfc489a..09677eb3d0c1 100644\n+--- a/configure.in\n++++ b/configure.in\n+@@ -960,7 +960,7 @@ fi\n+ # These programs are version sensitive.\n+ AC_CHECK_TOOL_PREFIX\n+ AC_CHECK_PROG_VER(CC, ${ac_tool_prefix}gcc ${ac_tool_prefix}cc, -v,\n+-  [version \\([egcygnustpi-]*[0-9.]*\\)], [3.4* | 4.[0-9]* ],\n++  [version \\([egcygnustpi-]*[0-9.]*\\)], [3.4* | [4-9].* ],\n+   critic_missing=\"$critic_missing gcc\")\n+ AC_CHECK_PROG_VER(MAKE, gnumake gmake make, --version,\n+   [GNU Make[^0-9]*\\([0-9][0-9.]*\\)],"}, {"sha": "cd1c41b02e3122e53059ac6a9a5565cd8952cb62", "filename": "src/ci/docker/dist-s390x-linux/s390x-linux-gnu.config", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fs390x-linux-gnu.config", "raw_url": "https://github.com/rust-lang/rust/raw/e0544ca1cff6492ac40c405e04f0c23666536b3b/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fs390x-linux-gnu.config", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-s390x-linux%2Fs390x-linux-gnu.config?ref=e0544ca1cff6492ac40c405e04f0c23666536b3b", "patch": "@@ -339,8 +339,8 @@ CT_CC_CORE_PASS_1_NEEDED=y\n CT_CC_CORE_PASS_2_NEEDED=y\n CT_CC_gcc=y\n # CT_CC_GCC_SHOW_LINARO is not set\n-# CT_CC_GCC_V_5_2_0 is not set\n-CT_CC_GCC_V_4_9_3=y\n+CT_CC_GCC_V_5_2_0=y\n+# CT_CC_GCC_V_4_9_3 is not set\n # CT_CC_GCC_V_4_8_5 is not set\n # CT_CC_GCC_V_4_7_4 is not set\n # CT_CC_GCC_V_4_6_4 is not set\n@@ -355,8 +355,9 @@ CT_CC_GCC_4_5_or_later=y\n CT_CC_GCC_4_6_or_later=y\n CT_CC_GCC_4_7_or_later=y\n CT_CC_GCC_4_8_or_later=y\n-CT_CC_GCC_4_9=y\n CT_CC_GCC_4_9_or_later=y\n+CT_CC_GCC_5=y\n+CT_CC_GCC_5_or_later=y\n CT_CC_GCC_HAS_GRAPHITE=y\n CT_CC_GCC_USE_GRAPHITE=y\n CT_CC_GCC_HAS_LTO=y\n@@ -368,7 +369,7 @@ CT_CC_GCC_USE_GMP_MPFR=y\n CT_CC_GCC_USE_MPC=y\n CT_CC_GCC_HAS_LIBQUADMATH=y\n CT_CC_GCC_HAS_LIBSANITIZER=y\n-CT_CC_GCC_VERSION=\"4.9.3\"\n+CT_CC_GCC_VERSION=\"5.2.0\"\n # CT_CC_LANG_FORTRAN is not set\n CT_CC_GCC_ENABLE_CXX_FLAGS=\"\"\n CT_CC_GCC_CORE_EXTRA_CONFIG_ARRAY=\"\"\n@@ -440,15 +441,13 @@ CT_GETTEXT_NEEDED=y\n CT_GMP_NEEDED=y\n CT_MPFR_NEEDED=y\n CT_ISL_NEEDED=y\n-CT_CLOOG_NEEDED=y\n CT_MPC_NEEDED=y\n CT_COMPLIBS=y\n CT_LIBICONV=y\n CT_GETTEXT=y\n CT_GMP=y\n CT_MPFR=y\n CT_ISL=y\n-CT_CLOOG=y\n CT_MPC=y\n CT_LIBICONV_V_1_14=y\n CT_LIBICONV_VERSION=\"1.14\"\n@@ -474,15 +473,13 @@ CT_MPFR_V_3_1_3=y\n # CT_MPFR_V_2_4_0 is not set\n CT_MPFR_VERSION=\"3.1.3\"\n CT_ISL_V_0_14=y\n+# CT_ISL_V_0_12_2 is not set\n CT_ISL_V_0_14_or_later=y\n CT_ISL_V_0_12_or_later=y\n CT_ISL_VERSION=\"0.14\"\n-CT_CLOOG_V_0_18_4=y\n+# CT_CLOOG_V_0_18_4 is not set\n # CT_CLOOG_V_0_18_1 is not set\n # CT_CLOOG_V_0_18_0 is not set\n-CT_CLOOG_VERSION=\"0.18.4\"\n-CT_CLOOG_0_18_4_or_later=y\n-CT_CLOOG_0_18_or_later=y\n CT_MPC_V_1_0_3=y\n # CT_MPC_V_1_0_2 is not set\n # CT_MPC_V_1_0_1 is not set"}]}