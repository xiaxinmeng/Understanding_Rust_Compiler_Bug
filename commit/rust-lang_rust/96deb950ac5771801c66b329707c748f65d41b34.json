{"sha": "96deb950ac5771801c66b329707c748f65d41b34", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2ZGViOTUwYWM1NzcxODAxYzY2YjMyOTcwN2M3NDhmNjVkNDFiMzQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-31T15:46:26Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-31T15:58:14Z"}, "message": "const backtrace: do not skip first frame", "tree": {"sha": "ee48307971033ed8513b0dd6e0884d4978f3991d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee48307971033ed8513b0dd6e0884d4978f3991d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96deb950ac5771801c66b329707c748f65d41b34", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96deb950ac5771801c66b329707c748f65d41b34", "html_url": "https://github.com/rust-lang/rust/commit/96deb950ac5771801c66b329707c748f65d41b34", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96deb950ac5771801c66b329707c748f65d41b34/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad74480cb209eec4d09b12d5810c221d6b2f2d4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad74480cb209eec4d09b12d5810c221d6b2f2d4c", "html_url": "https://github.com/rust-lang/rust/commit/ad74480cb209eec4d09b12d5810c221d6b2f2d4c"}], "stats": {"total": 22, "additions": 17, "deletions": 5}, "files": [{"sha": "d46f1bc4cc4d82fa2f4db3ecdf3989b9ec260b72", "filename": "src/librustc_middle/mir/interpret/error.rs", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/96deb950ac5771801c66b329707c748f65d41b34/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96deb950ac5771801c66b329707c748f65d41b34/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_middle%2Fmir%2Finterpret%2Ferror.rs?ref=96deb950ac5771801c66b329707c748f65d41b34", "patch": "@@ -167,10 +167,11 @@ impl<'tcx> ConstEvalErr<'tcx> {\n             if let Some(span_msg) = span_msg {\n                 err.span_label(self.span, span_msg);\n             }\n-            // Add spans for the stacktrace.\n-            // Skip the first, which is the place of the error.\n-            for frame_info in self.stacktrace.iter().skip(1) {\n-                err.span_label(frame_info.span, frame_info.to_string());\n+            // Add spans for the stacktrace. Don't print a single-line backtrace though.\n+            if self.stacktrace.len() > 1 {\n+                for frame_info in &self.stacktrace {\n+                    err.span_label(frame_info.span, frame_info.to_string());\n+                }\n             }\n             // Let the caller finish the job.\n             emit(err)"}, {"sha": "f1e91920f17f7b98a9a50db5b0a5b16312cb055d", "filename": "src/test/ui/consts/const-eval/validate_uninhabited_zsts.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/96deb950ac5771801c66b329707c748f65d41b34/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fvalidate_uninhabited_zsts.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/96deb950ac5771801c66b329707c748f65d41b34/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fvalidate_uninhabited_zsts.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-eval%2Fvalidate_uninhabited_zsts.stderr?ref=96deb950ac5771801c66b329707c748f65d41b34", "patch": "@@ -5,6 +5,7 @@ LL |     unsafe { std::mem::transmute(()) }\n    |              ^^^^^^^^^^^^^^^^^^^^^^^\n    |              |\n    |              transmuting to uninhabited type\n+   |              inside `foo` at $DIR/validate_uninhabited_zsts.rs:5:14\n    |              inside `FOO` at $DIR/validate_uninhabited_zsts.rs:14:26\n ...\n LL | const FOO: [Empty; 3] = [foo(); 3];"}, {"sha": "8ed1431dd31c089a98a5f75ed5e7d17a60859b2f", "filename": "src/test/ui/consts/miri_unleashed/abi-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/96deb950ac5771801c66b329707c748f65d41b34/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fabi-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/96deb950ac5771801c66b329707c748f65d41b34/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fabi-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fabi-mismatch.stderr?ref=96deb950ac5771801c66b329707c748f65d41b34", "patch": "@@ -17,6 +17,7 @@ LL |     my_fn();\n    |     ^^^^^^^\n    |     |\n    |     calling a function with ABI C using caller ABI Rust\n+   |     inside `call_rust_fn` at $DIR/abi-mismatch.rs:9:5\n    |     inside `VAL` at $DIR/abi-mismatch.rs:13:17\n ...\n LL | const VAL: () = call_rust_fn(unsafe { std::mem::transmute(c_fn as extern \"C\" fn()) });"}, {"sha": "5d560fab8351a8cedd03c69ac4c61e26e75e0861", "filename": "src/test/ui/consts/miri_unleashed/drop.stderr", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/96deb950ac5771801c66b329707c748f65d41b34/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/96deb950ac5771801c66b329707c748f65d41b34/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.stderr?ref=96deb950ac5771801c66b329707c748f65d41b34", "patch": "@@ -12,7 +12,10 @@ LL | |     // Code here does not matter - this is replaced by the\n LL | |     // real drop glue by the compiler.\n LL | |     drop_in_place(to_drop)\n LL | | }\n-   | |_^ calling non-const function `<std::vec::Vec<i32> as std::ops::Drop>::drop`\n+   | | ^\n+   | | |\n+   | |_calling non-const function `<std::vec::Vec<i32> as std::ops::Drop>::drop`\n+   |   inside `std::intrinsics::drop_in_place::<std::vec::Vec<i32>> - shim(Some(std::vec::Vec<i32>))` at $SRC_DIR/libcore/ptr/mod.rs:LL:COL\n    | \n   ::: $DIR/drop.rs:23:1\n    |"}, {"sha": "f1a183b229dd46ee6ae712a8abd20d08a6611aa8", "filename": "src/test/ui/consts/offset_from_ub.stderr", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/96deb950ac5771801c66b329707c748f65d41b34/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/96deb950ac5771801c66b329707c748f65d41b34/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr?ref=96deb950ac5771801c66b329707c748f65d41b34", "patch": "@@ -5,6 +5,7 @@ LL |           intrinsics::ptr_offset_from(self, origin)\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |           |\n    |           ptr_offset_from cannot compute offset of pointers into different allocations.\n+   |           inside `std::ptr::const_ptr::<impl *const Struct>::offset_from` at $SRC_DIR/libcore/ptr/const_ptr.rs:LL:COL\n    |           inside `DIFFERENT_ALLOC` at $DIR/offset_from_ub.rs:22:27\n    | \n   ::: $DIR/offset_from_ub.rs:16:1\n@@ -27,6 +28,7 @@ LL |           intrinsics::ptr_offset_from(self, origin)\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |           |\n    |           unable to turn bytes into a pointer\n+   |           inside `std::ptr::const_ptr::<impl *const u8>::offset_from` at $SRC_DIR/libcore/ptr/const_ptr.rs:LL:COL\n    |           inside `NOT_PTR` at $DIR/offset_from_ub.rs:28:14\n    | \n   ::: $DIR/offset_from_ub.rs:26:1\n@@ -44,6 +46,7 @@ LL |           intrinsics::ptr_offset_from(self, origin)\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |           |\n    |           exact_div: 1isize cannot be divided by 2isize without remainder\n+   |           inside `std::ptr::const_ptr::<impl *const u16>::offset_from` at $SRC_DIR/libcore/ptr/const_ptr.rs:LL:COL\n    |           inside `NOT_MULTIPLE_OF_SIZE` at $DIR/offset_from_ub.rs:36:14\n    | \n   ::: $DIR/offset_from_ub.rs:31:1\n@@ -64,6 +67,7 @@ LL |           intrinsics::ptr_offset_from(self, origin)\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |           |\n    |           invalid use of NULL pointer\n+   |           inside `std::ptr::const_ptr::<impl *const u8>::offset_from` at $SRC_DIR/libcore/ptr/const_ptr.rs:LL:COL\n    |           inside `OFFSET_FROM_NULL` at $DIR/offset_from_ub.rs:42:14\n    | \n   ::: $DIR/offset_from_ub.rs:39:1\n@@ -82,6 +86,7 @@ LL |           intrinsics::ptr_offset_from(self, origin)\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |           |\n    |           unable to turn bytes into a pointer\n+   |           inside `std::ptr::const_ptr::<impl *const u8>::offset_from` at $SRC_DIR/libcore/ptr/const_ptr.rs:LL:COL\n    |           inside `DIFFERENT_INT` at $DIR/offset_from_ub.rs:49:14\n    | \n   ::: $DIR/offset_from_ub.rs:45:1"}, {"sha": "ca232380897e3baa9e3e4fe2393c2c70665ab566", "filename": "src/test/ui/consts/uninhabited-const-issue-61744.stderr", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/96deb950ac5771801c66b329707c748f65d41b34/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/96deb950ac5771801c66b329707c748f65d41b34/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Funinhabited-const-issue-61744.stderr?ref=96deb950ac5771801c66b329707c748f65d41b34", "patch": "@@ -67,6 +67,7 @@ LL |     hint_unreachable()\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n    |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n+   |     inside `fake_type::<!>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n    |     inside `fake_type::<i32>` at $DIR/uninhabited-const-issue-61744.rs:4:5\n ...\n LL |     fake_type()"}]}