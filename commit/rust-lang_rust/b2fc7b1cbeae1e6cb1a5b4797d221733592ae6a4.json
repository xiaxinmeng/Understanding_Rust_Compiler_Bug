{"sha": "b2fc7b1cbeae1e6cb1a5b4797d221733592ae6a4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyZmM3YjFjYmVhZTFlNmNiMWE1YjQ3OTdkMjIxNzMzNTkyYWU2YTQ=", "commit": {"author": {"name": "Michael Kohl", "email": "citizen428@gmail.com", "date": "2017-05-11T15:49:16Z"}, "committer": {"name": "Michael Kohl", "email": "citizen428@gmail.com", "date": "2017-05-18T09:58:40Z"}, "message": "Add documentation for `ExitStatus`\n\nAs requested in #29370.", "tree": {"sha": "a44d27fe237aff4f0600c21fadc5a21234ff1d96", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a44d27fe237aff4f0600c21fadc5a21234ff1d96"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2fc7b1cbeae1e6cb1a5b4797d221733592ae6a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2fc7b1cbeae1e6cb1a5b4797d221733592ae6a4", "html_url": "https://github.com/rust-lang/rust/commit/b2fc7b1cbeae1e6cb1a5b4797d221733592ae6a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2fc7b1cbeae1e6cb1a5b4797d221733592ae6a4/comments", "author": {"login": "citizen428", "id": 47985, "node_id": "MDQ6VXNlcjQ3OTg1", "avatar_url": "https://avatars.githubusercontent.com/u/47985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/citizen428", "html_url": "https://github.com/citizen428", "followers_url": "https://api.github.com/users/citizen428/followers", "following_url": "https://api.github.com/users/citizen428/following{/other_user}", "gists_url": "https://api.github.com/users/citizen428/gists{/gist_id}", "starred_url": "https://api.github.com/users/citizen428/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/citizen428/subscriptions", "organizations_url": "https://api.github.com/users/citizen428/orgs", "repos_url": "https://api.github.com/users/citizen428/repos", "events_url": "https://api.github.com/users/citizen428/events{/privacy}", "received_events_url": "https://api.github.com/users/citizen428/received_events", "type": "User", "site_admin": false}, "committer": {"login": "citizen428", "id": 47985, "node_id": "MDQ6VXNlcjQ3OTg1", "avatar_url": "https://avatars.githubusercontent.com/u/47985?v=4", "gravatar_id": "", "url": "https://api.github.com/users/citizen428", "html_url": "https://github.com/citizen428", "followers_url": "https://api.github.com/users/citizen428/followers", "following_url": "https://api.github.com/users/citizen428/following{/other_user}", "gists_url": "https://api.github.com/users/citizen428/gists{/gist_id}", "starred_url": "https://api.github.com/users/citizen428/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/citizen428/subscriptions", "organizations_url": "https://api.github.com/users/citizen428/orgs", "repos_url": "https://api.github.com/users/citizen428/repos", "events_url": "https://api.github.com/users/citizen428/events{/privacy}", "received_events_url": "https://api.github.com/users/citizen428/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fb6f845f33d9ddbca34c7ae26e3a24cadf3c1123", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb6f845f33d9ddbca34c7ae26e3a24cadf3c1123", "html_url": "https://github.com/rust-lang/rust/commit/fb6f845f33d9ddbca34c7ae26e3a24cadf3c1123"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "d0e7defbbbb9a15f0b9af79925d319c8d8e22d59", "filename": "src/libstd/process.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/b2fc7b1cbeae1e6cb1a5b4797d221733592ae6a4/src%2Flibstd%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2fc7b1cbeae1e6cb1a5b4797d221733592ae6a4/src%2Flibstd%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprocess.rs?ref=b2fc7b1cbeae1e6cb1a5b4797d221733592ae6a4", "patch": "@@ -754,6 +754,13 @@ impl fmt::Debug for Stdio {\n }\n \n /// Describes the result of a process after it has terminated.\n+///\n+/// This `struct` is used to represent the exit status of a child process.\n+/// Child processes are created via the [`Command`] struct and their exit\n+/// status is exposed through the [`status`] method.\n+///\n+/// [`Command`]: struct.Command.html\n+/// [`status`]: struct.Command.html#method.status\n #[derive(PartialEq, Eq, Clone, Copy, Debug)]\n #[stable(feature = \"process\", since = \"1.0.0\")]\n pub struct ExitStatus(imp::ExitStatus);\n@@ -788,6 +795,22 @@ impl ExitStatus {\n     /// On Unix, this will return `None` if the process was terminated\n     /// by a signal; `std::os::unix` provides an extension trait for\n     /// extracting the signal and other details from the `ExitStatus`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```no_run\n+    /// use std::process::Command;\n+    ///\n+    /// let status = Command::new(\"mkdir\")\n+    ///                      .arg(\"projects\")\n+    ///                      .status()\n+    ///                      .expect(\"failed to execute mkdir\");\n+    ///\n+    /// match status.code() {\n+    ///     Some(code) => println!(\"Exited with status code: {}\", code),\n+    ///     None       => println!(\"Process terminated by signal\")\n+    /// }\n+    /// ```\n     #[stable(feature = \"process\", since = \"1.0.0\")]\n     pub fn code(&self) -> Option<i32> {\n         self.0.code()"}]}