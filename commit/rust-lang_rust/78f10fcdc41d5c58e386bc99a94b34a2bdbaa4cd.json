{"sha": "78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZjEwZmNkYzQxZDVjNThlMzg2YmM5OWE5NGIzNGEyYmRiYWE0Y2Q=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-25T10:38:52Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-25T10:49:32Z"}, "message": "rename type to type_alias in the AST as well", "tree": {"sha": "d813eb7be81dadbeced5ea0cf056d974cfd0fea5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d813eb7be81dadbeced5ea0cf056d974cfd0fea5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "html_url": "https://github.com/rust-lang/rust/commit/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ffff9c74caae108db53366e3b90857b7c405c6c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ffff9c74caae108db53366e3b90857b7c405c6c", "html_url": "https://github.com/rust-lang/rust/commit/7ffff9c74caae108db53366e3b90857b7c405c6c"}], "stats": {"total": 401, "additions": 293, "deletions": 108}, "files": [{"sha": "9a44aaa4306e2df9a33acedba4527961a4386f19", "filename": "crates/ra_hir/src/code_model_api.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model_api.rs?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -619,7 +619,10 @@ pub struct TypeAlias {\n }\n \n impl TypeAlias {\n-    pub fn source(&self, db: &impl PersistentHirDatabase) -> (HirFileId, TreeArc<ast::TypeDef>) {\n+    pub fn source(\n+        &self,\n+        db: &impl PersistentHirDatabase,\n+    ) -> (HirFileId, TreeArc<ast::TypeAliasDef>) {\n         self.id.source(db)\n     }\n "}, {"sha": "5b00330c684ddad0d8d9c623bce061dbe9aba3bc", "filename": "crates/ra_hir/src/ids.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_hir%2Fsrc%2Fids.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_hir%2Fsrc%2Fids.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fids.rs?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -22,7 +22,7 @@ pub struct HirInterner {\n     consts: LocationIntener<ItemLoc<ast::ConstDef>, ConstId>,\n     statics: LocationIntener<ItemLoc<ast::StaticDef>, StaticId>,\n     traits: LocationIntener<ItemLoc<ast::TraitDef>, TraitId>,\n-    types: LocationIntener<ItemLoc<ast::TypeDef>, TypeId>,\n+    types: LocationIntener<ItemLoc<ast::TypeAliasDef>, TypeId>,\n }\n \n impl HirInterner {\n@@ -278,8 +278,8 @@ impl AstItemDef<ast::TraitDef> for TraitId {\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n pub struct TypeId(RawId);\n impl_arena_id!(TypeId);\n-impl AstItemDef<ast::TypeDef> for TypeId {\n-    fn interner(interner: &HirInterner) -> &LocationIntener<ItemLoc<ast::TypeDef>, Self> {\n+impl AstItemDef<ast::TypeAliasDef> for TypeId {\n+    fn interner(interner: &HirInterner) -> &LocationIntener<ItemLoc<ast::TypeAliasDef>, Self> {\n         &interner.types\n     }\n }"}, {"sha": "eb2d4ed8d09c021676851e7ecb73a74d90545a90", "filename": "crates/ra_hir/src/impl_block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fimpl_block.rs?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -137,7 +137,7 @@ impl ImplData {\n                 .map(|item_node| match item_node.kind() {\n                     ast::ImplItemKind::FnDef(it) => Function { id: ctx.to_def(it) }.into(),\n                     ast::ImplItemKind::ConstDef(it) => Const { id: ctx.to_def(it) }.into(),\n-                    ast::ImplItemKind::TypeDef(it) => TypeAlias { id: ctx.to_def(it) }.into(),\n+                    ast::ImplItemKind::TypeAliasDef(it) => TypeAlias { id: ctx.to_def(it) }.into(),\n                 })\n                 .collect()\n         } else {"}, {"sha": "2bc3eb60c2b2c268647992dbc20529e014a97dcc", "filename": "crates/ra_hir/src/nameres/lower.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_hir%2Fsrc%2Fnameres%2Flower.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_hir%2Fsrc%2Fnameres%2Flower.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fnameres%2Flower.rs?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -167,7 +167,7 @@ impl LoweredModule {\n                     self.declarations.insert(name.as_name(), PerNs::types(t.into()));\n                 }\n             }\n-            ast::ModuleItemKind::TypeDef(it) => {\n+            ast::ModuleItemKind::TypeAliasDef(it) => {\n                 if let Some(name) = it.name() {\n                     let t = TypeAlias { id: ctx.to_def(it) };\n                     self.declarations.insert(name.as_name(), PerNs::types(t.into()));"}, {"sha": "639942f7bb0d219c69c62bda2aa48e3c0ea3ef3a", "filename": "crates/ra_ide_api/src/completion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion.rs?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -102,7 +102,7 @@ pub fn const_label(node: &ast::ConstDef) -> String {\n     label.trim().to_owned()\n }\n \n-pub fn type_label(node: &ast::TypeDef) -> String {\n+pub fn type_label(node: &ast::TypeAliasDef) -> String {\n     let label: String = node\n         .syntax()\n         .children()"}, {"sha": "1833e57d59966228051c5308df3e316fdc543b7d", "filename": "crates/ra_ide_api/src/goto_definition.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -141,7 +141,7 @@ fn named_target(file_id: FileId, node: &SyntaxNode) -> Option<NavigationTarget>\n         .visit(|node: &ast::EnumDef| NavigationTarget::from_named(file_id, node))\n         .visit(|node: &ast::EnumVariant| NavigationTarget::from_named(file_id, node))\n         .visit(|node: &ast::FnDef| NavigationTarget::from_named(file_id, node))\n-        .visit(|node: &ast::TypeDef| NavigationTarget::from_named(file_id, node))\n+        .visit(|node: &ast::TypeAliasDef| NavigationTarget::from_named(file_id, node))\n         .visit(|node: &ast::ConstDef| NavigationTarget::from_named(file_id, node))\n         .visit(|node: &ast::StaticDef| NavigationTarget::from_named(file_id, node))\n         .visit(|node: &ast::TraitDef| NavigationTarget::from_named(file_id, node))\n@@ -327,7 +327,7 @@ mod tests {\n             //- /lib.rs\n             type Thing<|> = Option<()>;\n             \"#,\n-            \"Thing TYPE_DEF FileId(1) [0; 24) [5; 10)\",\n+            \"Thing TYPE_ALIAS_DEF FileId(1) [0; 24) [5; 10)\",\n         );\n \n         check_goto("}, {"sha": "364bf9f741baf2f1e6dfd1c9d67f6181bc52c6cf", "filename": "crates/ra_ide_api/src/hover.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -105,7 +105,7 @@ impl NavigationTarget {\n             .visit(doc_comments::<ast::EnumDef>)\n             .visit(doc_comments::<ast::TraitDef>)\n             .visit(doc_comments::<ast::Module>)\n-            .visit(doc_comments::<ast::TypeDef>)\n+            .visit(doc_comments::<ast::TypeAliasDef>)\n             .visit(doc_comments::<ast::ConstDef>)\n             .visit(doc_comments::<ast::StaticDef>)\n             .accept(&node)?\n@@ -135,7 +135,7 @@ impl NavigationTarget {\n             .visit(|node: &ast::EnumDef| visit_node(node, \"enum \"))\n             .visit(|node: &ast::TraitDef| visit_node(node, \"trait \"))\n             .visit(|node: &ast::Module| visit_node(node, \"mod \"))\n-            .visit(|node: &ast::TypeDef| visit_node(node, \"type \"))\n+            .visit(|node: &ast::TypeAliasDef| visit_node(node, \"type \"))\n             .visit(|node: &ast::ConstDef| visit_node(node, \"const \"))\n             .visit(|node: &ast::StaticDef| visit_node(node, \"static \"))\n             .accept(&node)?"}, {"sha": "414327ac22708f77d8c29814c0a0d3d17e65e6e4", "filename": "crates/ra_ide_api/src/symbol_index.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -196,7 +196,7 @@ impl Query {\n \n fn is_type(kind: SyntaxKind) -> bool {\n     match kind {\n-        STRUCT_DEF | ENUM_DEF | TRAIT_DEF | TYPE_DEF => true,\n+        STRUCT_DEF | ENUM_DEF | TRAIT_DEF | TYPE_ALIAS_DEF => true,\n         _ => false,\n     }\n }\n@@ -253,7 +253,7 @@ fn to_symbol(node: &SyntaxNode) -> Option<(SmolStr, SyntaxNodePtr, TextRange)> {\n         .visit(decl::<ast::EnumDef>)\n         .visit(decl::<ast::TraitDef>)\n         .visit(decl::<ast::Module>)\n-        .visit(decl::<ast::TypeDef>)\n+        .visit(decl::<ast::TypeAliasDef>)\n         .visit(decl::<ast::ConstDef>)\n         .visit(decl::<ast::StaticDef>)\n         .accept(node)?"}, {"sha": "8e4184b31c29997efb741a762b1b7ab805fe8362", "filename": "crates/ra_ide_api_light/src/snapshots/tests__file_structure.snap", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -111,7 +111,7 @@ expression: structure\n         label: \"T\",\n         navigation_range: [186; 187),\n         node_range: [181; 193),\n-        kind: TYPE_DEF,\n+        kind: TYPE_ALIAS_DEF,\n         detail: Some(\n             \"()\"\n         ),"}, {"sha": "a3c6cd9ce779602692b11747695b0a5a491e982f", "filename": "crates/ra_ide_api_light/src/snapshots/tests__file_structure.snap.new", "status": "added", "additions": 182, "deletions": 0, "changes": 182, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap.new", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap.new", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fsnapshots%2Ftests__file_structure.snap.new?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -0,0 +1,182 @@\n+---\n+created: \"2019-02-25T10:38:16.909647631Z\"\n+creator: insta@0.6.3\n+source: crates/ra_ide_api_light/src/structure.rs\n+expression: structure\n+---\n+[\n+    StructureNode {\n+        parent: None,\n+        label: \"Foo\",\n+        navigation_range: [8; 11),\n+        node_range: [1; 26),\n+        kind: STRUCT_DEF,\n+        detail: None,\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: Some(\n+            0\n+        ),\n+        label: \"x\",\n+        navigation_range: [18; 19),\n+        node_range: [18; 24),\n+        kind: NAMED_FIELD_DEF,\n+        detail: Some(\n+            \"i32\"\n+        ),\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"m\",\n+        navigation_range: [32; 33),\n+        node_range: [28; 158),\n+        kind: MODULE,\n+        detail: None,\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: Some(\n+            2\n+        ),\n+        label: \"bar1\",\n+        navigation_range: [43; 47),\n+        node_range: [40; 52),\n+        kind: FN_DEF,\n+        detail: Some(\n+            \"fn()\"\n+        ),\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: Some(\n+            2\n+        ),\n+        label: \"bar2\",\n+        navigation_range: [60; 64),\n+        node_range: [57; 81),\n+        kind: FN_DEF,\n+        detail: Some(\n+            \"fn<T>(t: T) -> T\"\n+        ),\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: Some(\n+            2\n+        ),\n+        label: \"bar3\",\n+        navigation_range: [89; 93),\n+        node_range: [86; 156),\n+        kind: FN_DEF,\n+        detail: Some(\n+            \"fn<A, B>(a: A, b: B) -> Vec< u32 >\"\n+        ),\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"E\",\n+        navigation_range: [165; 166),\n+        node_range: [160; 180),\n+        kind: ENUM_DEF,\n+        detail: None,\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: Some(\n+            6\n+        ),\n+        label: \"X\",\n+        navigation_range: [169; 170),\n+        node_range: [169; 170),\n+        kind: ENUM_VARIANT,\n+        detail: None,\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: Some(\n+            6\n+        ),\n+        label: \"Y\",\n+        navigation_range: [172; 173),\n+        node_range: [172; 178),\n+        kind: ENUM_VARIANT,\n+        detail: None,\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"T\",\n+        navigation_range: [186; 187),\n+        node_range: [181; 193),\n+        kind: TYPE_ALIAS_DEF,\n+        detail: Some(\n+            \"()\"\n+        ),\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"S\",\n+        navigation_range: [201; 202),\n+        node_range: [194; 213),\n+        kind: STATIC_DEF,\n+        detail: Some(\n+            \"i32\"\n+        ),\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"C\",\n+        navigation_range: [220; 221),\n+        node_range: [214; 232),\n+        kind: CONST_DEF,\n+        detail: Some(\n+            \"i32\"\n+        ),\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"impl E\",\n+        navigation_range: [239; 240),\n+        node_range: [234; 243),\n+        kind: IMPL_BLOCK,\n+        detail: None,\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"impl fmt::Debug for E\",\n+        navigation_range: [265; 266),\n+        node_range: [245; 269),\n+        kind: IMPL_BLOCK,\n+        detail: None,\n+        deprecated: false\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"obsolete\",\n+        navigation_range: [288; 296),\n+        node_range: [271; 301),\n+        kind: FN_DEF,\n+        detail: Some(\n+            \"fn()\"\n+        ),\n+        deprecated: true\n+    },\n+    StructureNode {\n+        parent: None,\n+        label: \"very_obsolete\",\n+        navigation_range: [341; 354),\n+        node_range: [303; 359),\n+        kind: FN_DEF,\n+        detail: Some(\n+            \"fn()\"\n+        ),\n+        deprecated: true\n+    }\n+]"}, {"sha": "dea494daa5a67a5c26b1f919cdeba0c1cae04303", "filename": "crates/ra_ide_api_light/src/structure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_ide_api_light%2Fsrc%2Fstructure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_ide_api_light%2Fsrc%2Fstructure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api_light%2Fsrc%2Fstructure.rs?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -112,7 +112,7 @@ fn structure_node(node: &SyntaxNode) -> Option<StructureNode> {\n         .visit(decl::<ast::EnumVariant>)\n         .visit(decl::<ast::TraitDef>)\n         .visit(decl::<ast::Module>)\n-        .visit(|td: &ast::TypeDef| decl_with_type_ref(td, td.type_ref()))\n+        .visit(|td: &ast::TypeAliasDef| decl_with_type_ref(td, td.type_ref()))\n         .visit(|cd: &ast::ConstDef| decl_with_type_ref(cd, cd.type_ref()))\n         .visit(|sd: &ast::StaticDef| decl_with_type_ref(sd, sd.type_ref()))\n         .visit(|im: &ast::ImplBlock| {"}, {"sha": "41f78e58dc509e1248c4541eeb709ef78068ced3", "filename": "crates/ra_lsp_server/src/conv.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fconv.rs?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -41,7 +41,7 @@ impl Conv for SyntaxKind {\n             SyntaxKind::ENUM_DEF => SymbolKind::Enum,\n             SyntaxKind::TRAIT_DEF => SymbolKind::Interface,\n             SyntaxKind::MODULE => SymbolKind::Module,\n-            SyntaxKind::TYPE_DEF => SymbolKind::TypeParameter,\n+            SyntaxKind::TYPE_ALIAS_DEF => SymbolKind::TypeParameter,\n             SyntaxKind::STATIC_DEF => SymbolKind::Constant,\n             SyntaxKind::CONST_DEF => SymbolKind::Constant,\n             SyntaxKind::IMPL_BLOCK => SymbolKind::Object,"}, {"sha": "ab9d2de9064dc0c73c63ba88f9935aa79d862304", "filename": "crates/ra_parser/src/grammar/items.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fgrammar%2Fitems.rs?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -173,7 +173,7 @@ fn items_without_modifiers(p: &mut Parser) -> Option<SyntaxKind> {\n         }\n         TYPE_KW => {\n             type_def(p);\n-            TYPE_DEF\n+            TYPE_ALIAS_DEF\n         }\n         MOD_KW => {\n             mod_item(p);"}, {"sha": "0eed44ecfdead37c4a6f8c20476de57d78a73c7a", "filename": "crates/ra_parser/src/syntax_kind/generated.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_parser%2Fsrc%2Fsyntax_kind%2Fgenerated.rs?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -130,7 +130,7 @@ pub enum SyntaxKind {\n     CONST_DEF,\n     TRAIT_DEF,\n     IMPL_BLOCK,\n-    TYPE_DEF,\n+    TYPE_ALIAS_DEF,\n     MACRO_CALL,\n     TOKEN_TREE,\n     PAREN_TYPE,\n@@ -467,7 +467,7 @@ impl SyntaxKind {\n             CONST_DEF => &SyntaxInfo { name: \"CONST_DEF\" },\n             TRAIT_DEF => &SyntaxInfo { name: \"TRAIT_DEF\" },\n             IMPL_BLOCK => &SyntaxInfo { name: \"IMPL_BLOCK\" },\n-            TYPE_DEF => &SyntaxInfo { name: \"TYPE_DEF\" },\n+            TYPE_ALIAS_DEF => &SyntaxInfo { name: \"TYPE_ALIAS_DEF\" },\n             MACRO_CALL => &SyntaxInfo { name: \"MACRO_CALL\" },\n             TOKEN_TREE => &SyntaxInfo { name: \"TOKEN_TREE\" },\n             PAREN_TYPE => &SyntaxInfo { name: \"PAREN_TYPE\" },"}, {"sha": "4e2705d098fdb152cd01e7fb8c2efbea0c3331c3", "filename": "crates/ra_syntax/src/ast/generated.rs", "status": "modified", "additions": 47, "deletions": 47, "changes": 94, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fast%2Fgenerated.rs?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1508,16 +1508,16 @@ unsafe impl TransparentNewType for ImplItem {\n #[derive(Debug, Clone, Copy, PartialEq, Eq)]\n pub enum ImplItemKind<'a> {\n     FnDef(&'a FnDef),\n-    TypeDef(&'a TypeDef),\n+    TypeAliasDef(&'a TypeAliasDef),\n     ConstDef(&'a ConstDef),\n }\n impl<'a> From<&'a FnDef> for &'a ImplItem {\n     fn from(n: &'a FnDef) -> &'a ImplItem {\n         ImplItem::cast(&n.syntax).unwrap()\n     }\n }\n-impl<'a> From<&'a TypeDef> for &'a ImplItem {\n-    fn from(n: &'a TypeDef) -> &'a ImplItem {\n+impl<'a> From<&'a TypeAliasDef> for &'a ImplItem {\n+    fn from(n: &'a TypeAliasDef) -> &'a ImplItem {\n         ImplItem::cast(&n.syntax).unwrap()\n     }\n }\n@@ -1532,7 +1532,7 @@ impl AstNode for ImplItem {\n     fn cast(syntax: &SyntaxNode) -> Option<&Self> {\n         match syntax.kind() {\n             | FN_DEF\n-            | TYPE_DEF\n+            | TYPE_ALIAS_DEF\n             | CONST_DEF => Some(ImplItem::from_repr(syntax.into_repr())),\n             _ => None,\n         }\n@@ -1549,7 +1549,7 @@ impl ImplItem {\n     pub fn kind(&self) -> ImplItemKind {\n         match self.syntax.kind() {\n             FN_DEF => ImplItemKind::FnDef(FnDef::cast(&self.syntax).unwrap()),\n-            TYPE_DEF => ImplItemKind::TypeDef(TypeDef::cast(&self.syntax).unwrap()),\n+            TYPE_ALIAS_DEF => ImplItemKind::TypeAliasDef(TypeAliasDef::cast(&self.syntax).unwrap()),\n             CONST_DEF => ImplItemKind::ConstDef(ConstDef::cast(&self.syntax).unwrap()),\n             _ => unreachable!(),\n         }\n@@ -2359,7 +2359,7 @@ pub enum ModuleItemKind<'a> {\n     EnumDef(&'a EnumDef),\n     FnDef(&'a FnDef),\n     TraitDef(&'a TraitDef),\n-    TypeDef(&'a TypeDef),\n+    TypeAliasDef(&'a TypeAliasDef),\n     ImplBlock(&'a ImplBlock),\n     UseItem(&'a UseItem),\n     ExternCrateItem(&'a ExternCrateItem),\n@@ -2387,8 +2387,8 @@ impl<'a> From<&'a TraitDef> for &'a ModuleItem {\n         ModuleItem::cast(&n.syntax).unwrap()\n     }\n }\n-impl<'a> From<&'a TypeDef> for &'a ModuleItem {\n-    fn from(n: &'a TypeDef) -> &'a ModuleItem {\n+impl<'a> From<&'a TypeAliasDef> for &'a ModuleItem {\n+    fn from(n: &'a TypeAliasDef) -> &'a ModuleItem {\n         ModuleItem::cast(&n.syntax).unwrap()\n     }\n }\n@@ -2431,7 +2431,7 @@ impl AstNode for ModuleItem {\n             | ENUM_DEF\n             | FN_DEF\n             | TRAIT_DEF\n-            | TYPE_DEF\n+            | TYPE_ALIAS_DEF\n             | IMPL_BLOCK\n             | USE_ITEM\n             | EXTERN_CRATE_ITEM\n@@ -2456,7 +2456,7 @@ impl ModuleItem {\n             ENUM_DEF => ModuleItemKind::EnumDef(EnumDef::cast(&self.syntax).unwrap()),\n             FN_DEF => ModuleItemKind::FnDef(FnDef::cast(&self.syntax).unwrap()),\n             TRAIT_DEF => ModuleItemKind::TraitDef(TraitDef::cast(&self.syntax).unwrap()),\n-            TYPE_DEF => ModuleItemKind::TypeDef(TypeDef::cast(&self.syntax).unwrap()),\n+            TYPE_ALIAS_DEF => ModuleItemKind::TypeAliasDef(TypeAliasDef::cast(&self.syntax).unwrap()),\n             IMPL_BLOCK => ModuleItemKind::ImplBlock(ImplBlock::cast(&self.syntax).unwrap()),\n             USE_ITEM => ModuleItemKind::UseItem(UseItem::cast(&self.syntax).unwrap()),\n             EXTERN_CRATE_ITEM => ModuleItemKind::ExternCrateItem(ExternCrateItem::cast(&self.syntax).unwrap()),\n@@ -4273,6 +4273,43 @@ impl TupleType {\n     }\n }\n \n+// TypeAliasDef\n+#[derive(Debug, PartialEq, Eq, Hash)]\n+#[repr(transparent)]\n+pub struct TypeAliasDef {\n+    pub(crate) syntax: SyntaxNode,\n+}\n+unsafe impl TransparentNewType for TypeAliasDef {\n+    type Repr = rowan::SyntaxNode<RaTypes>;\n+}\n+\n+impl AstNode for TypeAliasDef {\n+    fn cast(syntax: &SyntaxNode) -> Option<&Self> {\n+        match syntax.kind() {\n+            TYPE_ALIAS_DEF => Some(TypeAliasDef::from_repr(syntax.into_repr())),\n+            _ => None,\n+        }\n+    }\n+    fn syntax(&self) -> &SyntaxNode { &self.syntax }\n+}\n+\n+impl ToOwned for TypeAliasDef {\n+    type Owned = TreeArc<TypeAliasDef>;\n+    fn to_owned(&self) -> TreeArc<TypeAliasDef> { TreeArc::cast(self.syntax.to_owned()) }\n+}\n+\n+\n+impl ast::VisibilityOwner for TypeAliasDef {}\n+impl ast::NameOwner for TypeAliasDef {}\n+impl ast::TypeParamsOwner for TypeAliasDef {}\n+impl ast::AttrsOwner for TypeAliasDef {}\n+impl ast::DocCommentsOwner for TypeAliasDef {}\n+impl TypeAliasDef {\n+    pub fn type_ref(&self) -> Option<&TypeRef> {\n+        super::child_opt(self)\n+    }\n+}\n+\n // TypeArg\n #[derive(Debug, PartialEq, Eq, Hash)]\n #[repr(transparent)]\n@@ -4345,43 +4382,6 @@ impl TypeArgList {\n     }\n }\n \n-// TypeDef\n-#[derive(Debug, PartialEq, Eq, Hash)]\n-#[repr(transparent)]\n-pub struct TypeDef {\n-    pub(crate) syntax: SyntaxNode,\n-}\n-unsafe impl TransparentNewType for TypeDef {\n-    type Repr = rowan::SyntaxNode<RaTypes>;\n-}\n-\n-impl AstNode for TypeDef {\n-    fn cast(syntax: &SyntaxNode) -> Option<&Self> {\n-        match syntax.kind() {\n-            TYPE_DEF => Some(TypeDef::from_repr(syntax.into_repr())),\n-            _ => None,\n-        }\n-    }\n-    fn syntax(&self) -> &SyntaxNode { &self.syntax }\n-}\n-\n-impl ToOwned for TypeDef {\n-    type Owned = TreeArc<TypeDef>;\n-    fn to_owned(&self) -> TreeArc<TypeDef> { TreeArc::cast(self.syntax.to_owned()) }\n-}\n-\n-\n-impl ast::VisibilityOwner for TypeDef {}\n-impl ast::NameOwner for TypeDef {}\n-impl ast::TypeParamsOwner for TypeDef {}\n-impl ast::AttrsOwner for TypeDef {}\n-impl ast::DocCommentsOwner for TypeDef {}\n-impl TypeDef {\n-    pub fn type_ref(&self) -> Option<&TypeRef> {\n-        super::child_opt(self)\n-    }\n-}\n-\n // TypeParam\n #[derive(Debug, PartialEq, Eq, Hash)]\n #[repr(transparent)]"}, {"sha": "c7acbbd6c73fa31ed25fe245e6d42cdf69cbdbbd", "filename": "crates/ra_syntax/src/grammar.ron", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fgrammar.ron?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -132,7 +132,7 @@ Grammar(\n         \"CONST_DEF\",\n         \"TRAIT_DEF\",\n         \"IMPL_BLOCK\",\n-        \"TYPE_DEF\",\n+        \"TYPE_ALIAS_DEF\",\n         \"MACRO_CALL\",\n         \"TOKEN_TREE\",\n \n@@ -312,7 +312,7 @@ Grammar(\n             ],\n             options: [\"TypeRef\"]\n         ),\n-        \"TypeDef\": (\n+        \"TypeAliasDef\": (\n             traits: [\n                 \"VisibilityOwner\",\n                 \"NameOwner\",\n@@ -363,11 +363,11 @@ Grammar(\n             ],\n         ),\n         \"ModuleItem\": (\n-            enum: [\"StructDef\", \"EnumDef\", \"FnDef\", \"TraitDef\", \"TypeDef\", \"ImplBlock\",\n+            enum: [\"StructDef\", \"EnumDef\", \"FnDef\", \"TraitDef\", \"TypeAliasDef\", \"ImplBlock\",\n                    \"UseItem\", \"ExternCrateItem\", \"ConstDef\", \"StaticDef\", \"Module\" ]\n         ),\n         \"ImplItem\": (\n-            enum: [\"FnDef\", \"TypeDef\", \"ConstDef\"]\n+            enum: [\"FnDef\", \"TypeAliasDef\", \"ConstDef\"]\n         ),\n \n         \"TupleExpr\": ("}, {"sha": "b17d06c6111fa58aed8a065d029a52d741faea15", "filename": "crates/ra_syntax/src/parsing/text_tree_sink.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Ftext_tree_sink.rs?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -143,7 +143,7 @@ fn n_attached_trivias<'a>(\n     trivias: impl Iterator<Item = (SyntaxKind, &'a str)>,\n ) -> usize {\n     match kind {\n-        CONST_DEF | TYPE_DEF | STRUCT_DEF | ENUM_DEF | ENUM_VARIANT | FN_DEF | TRAIT_DEF\n+        CONST_DEF | TYPE_ALIAS_DEF | STRUCT_DEF | ENUM_DEF | ENUM_VARIANT | FN_DEF | TRAIT_DEF\n         | MODULE | NAMED_FIELD_DEF => {\n             let mut res = 0;\n             for (i, (kind, text)) in trivias.enumerate() {"}, {"sha": "f02027972f87ef8e500af3188f5222965cd58d83", "filename": "crates/ra_syntax/tests/data/parser/inline/err/0001_array_type_missing_semi.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0001_array_type_missing_semi.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0001_array_type_missing_semi.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0001_array_type_missing_semi.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 18)\n-  TYPE_DEF@[0; 12)\n+  TYPE_ALIAS_DEF@[0; 12)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "b11171fd0b72dd49c3b520158cf7f92802763e9f", "filename": "crates/ra_syntax/tests/data/parser/inline/err/0003_pointer_type_no_mutability.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0003_pointer_type_no_mutability.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 14)\n-  TYPE_DEF@[0; 13)\n+  TYPE_ALIAS_DEF@[0; 13)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "ab879db036224de799efec152bec7f5eff61e02b", "filename": "crates/ra_syntax/tests/data/parser/inline/err/0005_fn_pointer_type_missing_fn.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0005_fn_pointer_type_missing_fn.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0005_fn_pointer_type_missing_fn.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Ferr%2F0005_fn_pointer_type_missing_fn.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 20)\n-  TYPE_DEF@[0; 15)\n+  TYPE_ALIAS_DEF@[0; 15)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "7c9e1e62174e46557e5e38fabde58db2310f0c63", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0001_trait_item_list.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0001_trait_item_list.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0001_trait_item_list.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0001_trait_item_list.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -11,7 +11,7 @@ SOURCE_FILE@[0; 83)\n     ITEM_LIST@[7; 82)\n       L_CURLY@[7; 8)\n       WHITESPACE@[8; 13)\n-      TYPE_DEF@[13; 27)\n+      TYPE_ALIAS_DEF@[13; 27)\n         TYPE_KW@[13; 17)\n         WHITESPACE@[17; 18)\n         NAME@[18; 19)"}, {"sha": "90284a2aaa5fa0ec8a2da63b6497fd7354be13ec", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0004_value_parameters_no_patterns.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0004_value_parameters_no_patterns.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 54)\n-  TYPE_DEF@[0; 53)\n+  TYPE_ALIAS_DEF@[0; 53)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "9a5f46bab09484804990c9615b66958facc6432a", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0012_type_item_where_clause.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0012_type_item_where_clause.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0012_type_item_where_clause.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0012_type_item_where_clause.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 31)\n-  TYPE_DEF@[0; 30)\n+  TYPE_ALIAS_DEF@[0; 30)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 8)"}, {"sha": "8f1d9ca98b3246a00c3afabd6159a92601f6b97b", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0013_pointer_type_mut.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0013_pointer_type_mut.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 36)\n-  TYPE_DEF@[0; 17)\n+  TYPE_ALIAS_DEF@[0; 17)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)\n@@ -16,7 +16,7 @@ SOURCE_FILE@[0; 36)\n         R_PAREN@[15; 16)\n     SEMI@[16; 17)\n   WHITESPACE@[17; 18)\n-  TYPE_DEF@[18; 35)\n+  TYPE_ALIAS_DEF@[18; 35)\n     TYPE_KW@[18; 22)\n     WHITESPACE@[22; 23)\n     NAME@[23; 24)"}, {"sha": "eaa6eb1c0d8621d8e34fc682373ba38dca82b7f8", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0014_never_type.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0014_never_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0014_never_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0014_never_type.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 16)\n-  TYPE_DEF@[0; 15)\n+  TYPE_ALIAS_DEF@[0; 15)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 10)"}, {"sha": "de09902bb54204fac0e4d36fbf947d7b00ec8bcf", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0017_array_type.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0017_array_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0017_array_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0017_array_type.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 19)\n-  TYPE_DEF@[0; 18)\n+  TYPE_ALIAS_DEF@[0; 18)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "08a0b786d8b1fed17f541c4d54cb820ac92b9eda", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0021_impl_item_list.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0021_impl_item_list.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0021_impl_item_list.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0021_impl_item_list.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -11,7 +11,7 @@ SOURCE_FILE@[0; 89)\n     ITEM_LIST@[7; 88)\n       L_CURLY@[7; 8)\n       WHITESPACE@[8; 13)\n-      TYPE_DEF@[13; 26)\n+      TYPE_ALIAS_DEF@[13; 26)\n         TYPE_KW@[13; 17)\n         WHITESPACE@[17; 18)\n         NAME@[18; 19)"}, {"sha": "bb9bb57ea9813371ae7b5aec97d3be91a8beed81", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0023_placeholder_type.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0023_placeholder_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0023_placeholder_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0023_placeholder_type.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 22)\n-  TYPE_DEF@[0; 21)\n+  TYPE_ALIAS_DEF@[0; 21)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 16)"}, {"sha": "c5f70ca3a8eaf5202c2b1ca90e3734915c21281a", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0025_slice_type.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0025_slice_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0025_slice_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0025_slice_type.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 15)\n-  TYPE_DEF@[0; 14)\n+  TYPE_ALIAS_DEF@[0; 14)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "3b676fb4ca7dea237aad82f34d38ec182452152f", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0028_impl_trait_type.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0028_impl_trait_type.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 43)\n-  TYPE_DEF@[0; 42)\n+  TYPE_ALIAS_DEF@[0; 42)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "d0aa429fd32eb8eb72e56a85f54e29b7c2fd8cd2", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0032_fn_pointer_type.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0032_fn_pointer_type.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 70)\n-  TYPE_DEF@[0; 14)\n+  TYPE_ALIAS_DEF@[0; 14)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)\n@@ -14,7 +14,7 @@ SOURCE_FILE@[0; 70)\n         R_PAREN@[12; 13)\n     SEMI@[13; 14)\n   WHITESPACE@[14; 15)\n-  TYPE_DEF@[15; 36)\n+  TYPE_ALIAS_DEF@[15; 36)\n     TYPE_KW@[15; 19)\n     WHITESPACE@[19; 20)\n     NAME@[20; 21)\n@@ -31,7 +31,7 @@ SOURCE_FILE@[0; 70)\n         R_PAREN@[34; 35)\n     SEMI@[35; 36)\n   WHITESPACE@[36; 37)\n-  TYPE_DEF@[37; 69)\n+  TYPE_ALIAS_DEF@[37; 69)\n     TYPE_KW@[37; 41)\n     WHITESPACE@[41; 42)\n     NAME@[42; 43)"}, {"sha": "c015dddebb6b9df864d28017ad6cc1fc0660c833", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0033_reference_type;.txt", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0033_reference_type%3B.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 54)\n-  TYPE_DEF@[0; 13)\n+  TYPE_ALIAS_DEF@[0; 13)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)\n@@ -14,7 +14,7 @@ SOURCE_FILE@[0; 54)\n         R_PAREN@[11; 12)\n     SEMI@[12; 13)\n   WHITESPACE@[13; 14)\n-  TYPE_DEF@[14; 35)\n+  TYPE_ALIAS_DEF@[14; 35)\n     TYPE_KW@[14; 18)\n     WHITESPACE@[18; 19)\n     NAME@[19; 20)\n@@ -31,7 +31,7 @@ SOURCE_FILE@[0; 54)\n         R_PAREN@[33; 34)\n     SEMI@[34; 35)\n   WHITESPACE@[35; 36)\n-  TYPE_DEF@[36; 53)\n+  TYPE_ALIAS_DEF@[36; 53)\n     TYPE_KW@[36; 40)\n     WHITESPACE@[40; 41)\n     NAME@[41; 42)"}, {"sha": "fbc548695072de3602787ef5518e44e88e15f38a", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0037_qual_paths.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0037_qual_paths.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0037_qual_paths.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0037_qual_paths.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 71)\n-  TYPE_DEF@[0; 26)\n+  TYPE_ALIAS_DEF@[0; 26)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "cef13b6aa327e6fefac83e004f1f4bed4600ea34", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0039_type_arg.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0039_type_arg.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0039_type_arg.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0039_type_arg.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 36)\n-  TYPE_DEF@[0; 35)\n+  TYPE_ALIAS_DEF@[0; 35)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "33549028ba2e0d0d645d0bfc5ad0965776878711", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0046_singleton_tuple_type.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0046_singleton_tuple_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0046_singleton_tuple_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0046_singleton_tuple_type.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 17)\n-  TYPE_DEF@[0; 16)\n+  TYPE_ALIAS_DEF@[0; 16)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "5a6a2a829bc5779e52d43ae25ba95c6a0be36cfb", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0051_unit_type.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0051_unit_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0051_unit_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0051_unit_type.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 13)\n-  TYPE_DEF@[0; 12)\n+  TYPE_ALIAS_DEF@[0; 12)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "0531b8fba840a9369da24486af52a1279b7c8bfd", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0052_path_type.txt", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0052_path_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0052_path_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0052_path_type.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 71)\n-  TYPE_DEF@[0; 13)\n+  TYPE_ALIAS_DEF@[0; 13)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)\n@@ -14,7 +14,7 @@ SOURCE_FILE@[0; 71)\n             IDENT@[9; 12) \"Foo\"\n     SEMI@[12; 13)\n   WHITESPACE@[13; 14)\n-  TYPE_DEF@[14; 29)\n+  TYPE_ALIAS_DEF@[14; 29)\n     TYPE_KW@[14; 18)\n     WHITESPACE@[18; 19)\n     NAME@[19; 20)\n@@ -30,7 +30,7 @@ SOURCE_FILE@[0; 71)\n             IDENT@[25; 28) \"Foo\"\n     SEMI@[28; 29)\n   WHITESPACE@[29; 30)\n-  TYPE_DEF@[30; 49)\n+  TYPE_ALIAS_DEF@[30; 49)\n     TYPE_KW@[30; 34)\n     WHITESPACE@[34; 35)\n     NAME@[35; 36)\n@@ -49,7 +49,7 @@ SOURCE_FILE@[0; 71)\n             IDENT@[45; 48) \"Foo\"\n     SEMI@[48; 49)\n   WHITESPACE@[49; 50)\n-  TYPE_DEF@[50; 70)\n+  TYPE_ALIAS_DEF@[50; 70)\n     TYPE_KW@[50; 54)\n     WHITESPACE@[54; 55)\n     NAME@[55; 56)"}, {"sha": "f6a0967f247b52c421ce36e3d8ca820aad4b53c6", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0065_dyn_trait_type.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0065_dyn_trait_type.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 42)\n-  TYPE_DEF@[0; 41)\n+  TYPE_ALIAS_DEF@[0; 41)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "49ce9ad5ebf4efc717f93c81417336f4480adbad", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0073_type_item_type_params.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0073_type_item_type_params.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 21)\n-  TYPE_DEF@[0; 20)\n+  TYPE_ALIAS_DEF@[0; 20)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 11)"}, {"sha": "a62a9d1e7a62e9ec448f6b98f28c9c4b54489aa2", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0078_type_item.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0078_type_item.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0078_type_item.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0078_type_item.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 16)\n-  TYPE_DEF@[0; 15)\n+  TYPE_ALIAS_DEF@[0; 15)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 8)"}, {"sha": "6e7e6bda1cfc115697b4348123c5c2af9db2c26e", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0081_for_type.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0081_for_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0081_for_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0081_for_type.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 29)\n-  TYPE_DEF@[0; 28)\n+  TYPE_ALIAS_DEF@[0; 28)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "76b52bf89941209320e233dcc5042fd7473be151", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0084_paren_type.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0084_paren_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0084_paren_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0084_paren_type.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 16)\n-  TYPE_DEF@[0; 15)\n+  TYPE_ALIAS_DEF@[0; 15)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "dc42a5c00fcb837cb85eb70d9fa7a7c29f433808", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0092_fn_pointer_type_with_ret.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0092_fn_pointer_type_with_ret.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 21)\n-  TYPE_DEF@[0; 20)\n+  TYPE_ALIAS_DEF@[0; 20)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "0254c998dd30d112e83f9c297db64dac2dce1424", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0104_path_fn_trait_args.txt", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0104_path_fn_trait_args.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 32)\n-  TYPE_DEF@[0; 31)\n+  TYPE_ALIAS_DEF@[0; 31)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)"}, {"sha": "608b4a5f0e0f9fa3591b3070995b6bb9b3ab812d", "filename": "crates/ra_syntax/tests/data/parser/inline/ok/0117_macro_call_type.txt", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0117_macro_call_type.txt", "raw_url": "https://github.com/rust-lang/rust/raw/78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0117_macro_call_type.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Ftests%2Fdata%2Fparser%2Finline%2Fok%2F0117_macro_call_type.txt?ref=78f10fcdc41d5c58e386bc99a94b34a2bdbaa4cd", "patch": "@@ -1,5 +1,5 @@\n SOURCE_FILE@[0; 41)\n-  TYPE_DEF@[0; 16)\n+  TYPE_ALIAS_DEF@[0; 16)\n     TYPE_KW@[0; 4)\n     WHITESPACE@[4; 5)\n     NAME@[5; 6)\n@@ -18,7 +18,7 @@ SOURCE_FILE@[0; 41)\n         R_PAREN@[14; 15)\n     SEMI@[15; 16)\n   WHITESPACE@[16; 17)\n-  TYPE_DEF@[17; 40)\n+  TYPE_ALIAS_DEF@[17; 40)\n     TYPE_KW@[17; 21)\n     WHITESPACE@[21; 22)\n     NAME@[22; 23)"}]}