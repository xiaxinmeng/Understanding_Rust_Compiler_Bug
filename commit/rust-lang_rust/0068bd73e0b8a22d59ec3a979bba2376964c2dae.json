{"sha": "0068bd73e0b8a22d59ec3a979bba2376964c2dae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwNjhiZDczZTBiOGEyMmQ1OWVjM2E5NzliYmEyMzc2OTY0YzJkYWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-30T17:28:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-07-30T17:28:18Z"}, "message": "auto merge of #8131 : Seldaek/rust/getopt_usage_newline, r=brson\n\nIt makes things ugly when the last thing you print is the usage() output, resulting in something like:\r\n\r\n```\r\n$ rust run foo.rs -h\r\nLala\r\n\r\nOptions:\r\n    -h --help           display this help and exit\r\n    -V --version        output version information and exit\r\n\r\n$ prompt\r\n```", "tree": {"sha": "ab922d85833acce719d2c05d2d59d865a570bf53", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab922d85833acce719d2c05d2d59d865a570bf53"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0068bd73e0b8a22d59ec3a979bba2376964c2dae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0068bd73e0b8a22d59ec3a979bba2376964c2dae", "html_url": "https://github.com/rust-lang/rust/commit/0068bd73e0b8a22d59ec3a979bba2376964c2dae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0068bd73e0b8a22d59ec3a979bba2376964c2dae/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "576f395ddfe3a47859df0419a0366abf7a8c185b", "url": "https://api.github.com/repos/rust-lang/rust/commits/576f395ddfe3a47859df0419a0366abf7a8c185b", "html_url": "https://github.com/rust-lang/rust/commit/576f395ddfe3a47859df0419a0366abf7a8c185b"}, {"sha": "f7ebab440322d9c2a20cd8c1e23db789ffdc8685", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7ebab440322d9c2a20cd8c1e23db789ffdc8685", "html_url": "https://github.com/rust-lang/rust/commit/f7ebab440322d9c2a20cd8c1e23db789ffdc8685"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "894a372ac649358ff458d09b2133a7d06912a3ec", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0068bd73e0b8a22d59ec3a979bba2376964c2dae/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0068bd73e0b8a22d59ec3a979bba2376964c2dae/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=0068bd73e0b8a22d59ec3a979bba2376964c2dae", "patch": "@@ -85,6 +85,7 @@ pub fn parse_config(args: ~[~str]) -> config {\n     if args[1] == ~\"-h\" || args[1] == ~\"--help\" {\n         let message = fmt!(\"Usage: %s [OPTIONS] [TESTNAME...]\", argv0);\n         println(getopts::groups::usage(message, groups));\n+        println(\"\");\n         fail!()\n     }\n \n@@ -97,6 +98,7 @@ pub fn parse_config(args: ~[~str]) -> config {\n     if getopts::opt_present(matches, \"h\") || getopts::opt_present(matches, \"help\") {\n         let message = fmt!(\"Usage: %s [OPTIONS]  [TESTNAME...]\", argv0);\n         println(getopts::groups::usage(message, groups));\n+        println(\"\");\n         fail!()\n     }\n "}, {"sha": "45c9078a90ffc0afe9e3e1377c114586d2e709d0", "filename": "src/libextra/getopts.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0068bd73e0b8a22d59ec3a979bba2376964c2dae/src%2Flibextra%2Fgetopts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0068bd73e0b8a22d59ec3a979bba2376964c2dae/src%2Flibextra%2Fgetopts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fgetopts.rs?ref=0068bd73e0b8a22d59ec3a979bba2376964c2dae", "patch": "@@ -680,7 +680,7 @@ pub mod groups {\n         return brief.to_owned() +\n                \"\\n\\nOptions:\\n\" +\n                rows.collect::<~[~str]>().connect(\"\\n\") +\n-               \"\\n\\n\";\n+               \"\\n\";\n     }\n \n     /** Splits a string into substrings with possibly internal whitespace,\n@@ -1463,7 +1463,6 @@ Options:\n     -k --kiwi           Desc\n     -p [VAL]            Desc\n     -l VAL              Desc\n-\n \";\n \n         let generated_usage = groups::usage(\"Usage: fruits\", optgroups);\n@@ -1492,7 +1491,6 @@ Options:\n     -k --kiwi           This is a long description which won't be wrapped..+..\n     -a --apple          This is a long description which _will_ be\n                         wrapped..+..\n-\n \";\n \n         let usage = groups::usage(\"Usage: fruits\", optgroups);"}, {"sha": "984a4d3a543521dd4eb30cc39991b0f2aac90792", "filename": "src/libextra/test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0068bd73e0b8a22d59ec3a979bba2376964c2dae/src%2Flibextra%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0068bd73e0b8a22d59ec3a979bba2376964c2dae/src%2Flibextra%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Ftest.rs?ref=0068bd73e0b8a22d59ec3a979bba2376964c2dae", "patch": "@@ -191,6 +191,7 @@ fn optgroups() -> ~[getopts::groups::OptGroup] {\n fn usage(binary: &str, helpstr: &str) -> ! {\n     let message = fmt!(\"Usage: %s [OPTIONS] [FILTER]\", binary);\n     println(groups::usage(message, optgroups()));\n+    println(\"\");\n     if helpstr == \"help\" {\n         println(\"\\\n The FILTER is matched against the name of all tests to run, and if any tests"}]}