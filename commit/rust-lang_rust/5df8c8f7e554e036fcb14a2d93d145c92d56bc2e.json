{"sha": "5df8c8f7e554e036fcb14a2d93d145c92d56bc2e", "node_id": "C_kwDOAAsO6NoAKDVkZjhjOGY3ZTU1NGUwMzZmY2IxNGEyZDkzZDE0NWM5MmQ1NmJjMmU", "commit": {"author": {"name": "Frank King", "email": "frankking1729@gmail.com", "date": "2022-02-07T02:57:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-02-07T02:57:39Z"}, "message": "Fix doc of generic items formmating error (#5124)\n\n* Fix doc of generic items formmating error\r\n\r\n* Remove tracked `attrs_end_with_doc_comment` flag in `RewriteContext`\r\n\r\n* Fix duplicated doc comments of const generic params\r\n\r\n* Fix `<ast::GenericParam as Spanned>::span()`\r\n\r\n* Remove duplicated source file of `doc-of-generic-item.rs`", "tree": {"sha": "df42d71743e48fd9778d6c8d80d7dd8e153288b6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df42d71743e48fd9778d6c8d80d7dd8e153288b6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5df8c8f7e554e036fcb14a2d93d145c92d56bc2e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiAIqjCRBK7hj4Ov3rIwAA698IAE/t/PAkvRCGr9Ktak1TagqD\n8+lE1NIYCrafIZvU5MJ6ujubOMT6y12em3rXqs7g0PfeFcGhOmZoMXjB2qIpmlfl\nLCkqu9m61fKgV0kOO95yklP8k8KwlDvFe3yI2D0+fNdSZoXiJrUJlKPQIOqDClgh\nOarGljEC2JY+o88lLd+gRVLMGW5KiWxh8wZNw+XvurSMngVD8BK81Ka5ZRZBxxvv\nfM+kuF9e6InhYDINlcUKBgIPLNLzgmoWpsqbAbRuLNT12Yj8YQr1nvh/hO6MUsOv\njoz95KQ68AjLts760tpjZoiSEERRbY+bsN+yoy46kx/Ol6wF7Q8e63BPGMM1a1c=\n=XkVg\n-----END PGP SIGNATURE-----\n", "payload": "tree df42d71743e48fd9778d6c8d80d7dd8e153288b6\nparent fd6e11cc57da5728a9a52c0a515fd80e811a43d5\nauthor Frank King <frankking1729@gmail.com> 1644202659 +0800\ncommitter GitHub <noreply@github.com> 1644202659 -0600\n\nFix doc of generic items formmating error (#5124)\n\n* Fix doc of generic items formmating error\r\n\r\n* Remove tracked `attrs_end_with_doc_comment` flag in `RewriteContext`\r\n\r\n* Fix duplicated doc comments of const generic params\r\n\r\n* Fix `<ast::GenericParam as Spanned>::span()`\r\n\r\n* Remove duplicated source file of `doc-of-generic-item.rs`"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5df8c8f7e554e036fcb14a2d93d145c92d56bc2e", "html_url": "https://github.com/rust-lang/rust/commit/5df8c8f7e554e036fcb14a2d93d145c92d56bc2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5df8c8f7e554e036fcb14a2d93d145c92d56bc2e/comments", "author": {"login": "frank-king", "id": 16741972, "node_id": "MDQ6VXNlcjE2NzQxOTcy", "avatar_url": "https://avatars.githubusercontent.com/u/16741972?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frank-king", "html_url": "https://github.com/frank-king", "followers_url": "https://api.github.com/users/frank-king/followers", "following_url": "https://api.github.com/users/frank-king/following{/other_user}", "gists_url": "https://api.github.com/users/frank-king/gists{/gist_id}", "starred_url": "https://api.github.com/users/frank-king/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frank-king/subscriptions", "organizations_url": "https://api.github.com/users/frank-king/orgs", "repos_url": "https://api.github.com/users/frank-king/repos", "events_url": "https://api.github.com/users/frank-king/events{/privacy}", "received_events_url": "https://api.github.com/users/frank-king/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd6e11cc57da5728a9a52c0a515fd80e811a43d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd6e11cc57da5728a9a52c0a515fd80e811a43d5", "html_url": "https://github.com/rust-lang/rust/commit/fd6e11cc57da5728a9a52c0a515fd80e811a43d5"}], "stats": {"total": 40, "additions": 28, "deletions": 12}, "files": [{"sha": "2136cfeae1af107592aabbdf92d4aef98d104835", "filename": "src/spanned.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/5df8c8f7e554e036fcb14a2d93d145c92d56bc2e/src%2Fspanned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df8c8f7e554e036fcb14a2d93d145c92d56bc2e/src%2Fspanned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fspanned.rs?ref=5df8c8f7e554e036fcb14a2d93d145c92d56bc2e", "patch": "@@ -113,17 +113,10 @@ impl Spanned for ast::Param {\n \n impl Spanned for ast::GenericParam {\n     fn span(&self) -> Span {\n-        let lo = if let ast::GenericParamKind::Const {\n-            ty: _,\n-            kw_span,\n-            default: _,\n-        } = self.kind\n-        {\n-            kw_span.lo()\n-        } else if self.attrs.is_empty() {\n-            self.ident.span.lo()\n-        } else {\n-            self.attrs[0].span.lo()\n+        let lo = match self.kind {\n+            _ if !self.attrs.is_empty() => self.attrs[0].span.lo(),\n+            ast::GenericParamKind::Const { kw_span, .. } => kw_span.lo(),\n+            _ => self.ident.span.lo(),\n         };\n         let hi = if self.bounds.is_empty() {\n             self.ident.span.hi()"}, {"sha": "b13e75a93b355afcf023a42e224799d886f385f9", "filename": "src/types.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5df8c8f7e554e036fcb14a2d93d145c92d56bc2e/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df8c8f7e554e036fcb14a2d93d145c92d56bc2e/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=5df8c8f7e554e036fcb14a2d93d145c92d56bc2e", "patch": "@@ -575,7 +575,16 @@ impl Rewrite for ast::GenericParam {\n         let mut result = String::with_capacity(128);\n         // FIXME: If there are more than one attributes, this will force multiline.\n         match self.attrs.rewrite(context, shape) {\n-            Some(ref rw) if !rw.is_empty() => result.push_str(&format!(\"{} \", rw)),\n+            Some(ref rw) if !rw.is_empty() => {\n+                result.push_str(rw);\n+                // When rewriting generic params, an extra newline should be put\n+                // if the attributes end with a doc comment\n+                if let Some(true) = self.attrs.last().map(|a| a.is_doc_comment()) {\n+                    result.push_str(&shape.indent.to_string_with_newline(context.config));\n+                } else {\n+                    result.push(' ');\n+                }\n+            }\n             _ => (),\n         }\n "}, {"sha": "2efc5e09a3d34e684604f5b4994a382cce1cea8a", "filename": "tests/target/doc-of-generic-item.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5df8c8f7e554e036fcb14a2d93d145c92d56bc2e/tests%2Ftarget%2Fdoc-of-generic-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5df8c8f7e554e036fcb14a2d93d145c92d56bc2e/tests%2Ftarget%2Fdoc-of-generic-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fdoc-of-generic-item.rs?ref=5df8c8f7e554e036fcb14a2d93d145c92d56bc2e", "patch": "@@ -0,0 +1,14 @@\n+// Non-doc pre-comment of Foo\n+/// doc of Foo\n+// Non-doc post-comment of Foo\n+struct Foo<\n+    // Non-doc pre-comment of 'a\n+    /// doc of 'a\n+    'a,\n+    // Non-doc pre-comment of T\n+    /// doc of T\n+    T,\n+    // Non-doc pre-comment of N\n+    /// doc of N\n+    const N: item,\n+>;"}]}