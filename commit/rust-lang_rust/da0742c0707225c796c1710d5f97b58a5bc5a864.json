{"sha": "da0742c0707225c796c1710d5f97b58a5bc5a864", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhMDc0MmMwNzA3MjI1Yzc5NmMxNzEwZDVmOTdiNThhNWJjNWE4NjQ=", "commit": {"author": {"name": "A.J. Gardner", "email": "aaron.j.gardner@gmail.com", "date": "2017-03-22T04:47:25Z"}, "committer": {"name": "A.J. Gardner", "email": "aaron.j.gardner@gmail.com", "date": "2017-04-13T00:12:50Z"}, "message": "Add global_asm tests", "tree": {"sha": "30e124ce471cfc4c54808561c8a7cbfe083cce92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/30e124ce471cfc4c54808561c8a7cbfe083cce92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da0742c0707225c796c1710d5f97b58a5bc5a864", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da0742c0707225c796c1710d5f97b58a5bc5a864", "html_url": "https://github.com/rust-lang/rust/commit/da0742c0707225c796c1710d5f97b58a5bc5a864", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da0742c0707225c796c1710d5f97b58a5bc5a864/comments", "author": {"login": "mrhota", "id": 403641, "node_id": "MDQ6VXNlcjQwMzY0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/403641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrhota", "html_url": "https://github.com/mrhota", "followers_url": "https://api.github.com/users/mrhota/followers", "following_url": "https://api.github.com/users/mrhota/following{/other_user}", "gists_url": "https://api.github.com/users/mrhota/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrhota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrhota/subscriptions", "organizations_url": "https://api.github.com/users/mrhota/orgs", "repos_url": "https://api.github.com/users/mrhota/repos", "events_url": "https://api.github.com/users/mrhota/events{/privacy}", "received_events_url": "https://api.github.com/users/mrhota/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mrhota", "id": 403641, "node_id": "MDQ6VXNlcjQwMzY0MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/403641?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mrhota", "html_url": "https://github.com/mrhota", "followers_url": "https://api.github.com/users/mrhota/followers", "following_url": "https://api.github.com/users/mrhota/following{/other_user}", "gists_url": "https://api.github.com/users/mrhota/gists{/gist_id}", "starred_url": "https://api.github.com/users/mrhota/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mrhota/subscriptions", "organizations_url": "https://api.github.com/users/mrhota/orgs", "repos_url": "https://api.github.com/users/mrhota/repos", "events_url": "https://api.github.com/users/mrhota/events{/privacy}", "received_events_url": "https://api.github.com/users/mrhota/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4b9de4cc6327b8c72716b1102a7db4f0858a76db", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b9de4cc6327b8c72716b1102a7db4f0858a76db", "html_url": "https://github.com/rust-lang/rust/commit/4b9de4cc6327b8c72716b1102a7db4f0858a76db"}], "stats": {"total": 309, "additions": 307, "deletions": 2}, "files": [{"sha": "44921aa309f8444218554757121cc1b2a9b5967e", "filename": "src/doc/unstable-book/src/global_asm.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Fdoc%2Funstable-book%2Fsrc%2Fglobal_asm.md", "raw_url": "https://github.com/rust-lang/rust/raw/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Fdoc%2Funstable-book%2Fsrc%2Fglobal_asm.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Fglobal_asm.md?ref=da0742c0707225c796c1710d5f97b58a5bc5a864", "patch": "@@ -27,7 +27,7 @@ A simple usage looks like this:\n ```rust,ignore\n # #![feature(global_asm)]\n # you also need relevant target_arch cfgs\n-global_asm!(include_str(\"something_neato.s\"));\n+global_asm!(include_str!(\"something_neato.s\"));\n ```\n \n And a more complicated usage looks like this:"}, {"sha": "44e291a44c7779e4ba1ae72b27514ee610647bfb", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=da0742c0707225c796c1710d5f97b58a5bc5a864", "patch": "@@ -233,6 +233,7 @@ impl<'a, 'gcx, 'tcx> Env<'a, 'gcx, 'tcx> {\n                 hir::ItemStatic(..) |\n                 hir::ItemFn(..) |\n                 hir::ItemForeignMod(..) |\n+                hir::ItemGlobalAsm(..) |\n                 hir::ItemTy(..) => None,\n \n                 hir::ItemEnum(..) |"}, {"sha": "8b62416dcbdbd6e541f68b055ac8f8933dfc3a95", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=da0742c0707225c796c1710d5f97b58a5bc5a864", "patch": "@@ -986,7 +986,7 @@ pub const EXPLAIN_ASM: &'static str =\n     \"inline assembly is not stable enough for use and is subject to change\";\n \n pub const EXPLAIN_GLOBAL_ASM: &'static str =\n-    \"module-level inline assembly is experimental and subject to change\";\n+    \"`global_asm!` is not stable enough for use and is subject to change\";\n \n pub const EXPLAIN_LOG_SYNTAX: &'static str =\n     \"`log_syntax!` is not stable enough for use and is subject to change\";"}, {"sha": "304d82aa0c653d6a55a87d04463fb9c74694a345", "filename": "src/test/codegen/foo.s", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Ftest%2Fcodegen%2Ffoo.s", "raw_url": "https://github.com/rust-lang/rust/raw/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Ftest%2Fcodegen%2Ffoo.s", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Ffoo.s?ref=da0742c0707225c796c1710d5f97b58a5bc5a864", "patch": "@@ -0,0 +1,3 @@\n+.global foo\n+foo:\n+    jmp baz"}, {"sha": "5bd0c1b4076ee22a852b7aedba92d9345770430a", "filename": "src/test/codegen/global_asm.rs", "status": "added", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Ftest%2Fcodegen%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Ftest%2Fcodegen%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fglobal_asm.rs?ref=da0742c0707225c796c1710d5f97b58a5bc5a864", "patch": "@@ -0,0 +1,73 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-aarch64\n+// ignore-aarch64_be\n+// ignore-arm\n+// ignore-armeb\n+// ignore-avr\n+// ignore-bpfel\n+// ignore-bpfeb\n+// ignore-hexagon\n+// ignore-mips\n+// ignore-mipsel\n+// ignore-mips64\n+// ignore-mips64el\n+// ignore-msp430\n+// ignore-powerpc64\n+// ignore-powerpc64le\n+// ignore-powerpc\n+// ignore-r600\n+// ignore-amdgcn\n+// ignore-sparc\n+// ignore-sparcv9\n+// ignore-sparcel\n+// ignore-s390x\n+// ignore-tce\n+// ignore-thumb\n+// ignore-thumbeb\n+// ignore-xcore\n+// ignore-nvptx\n+// ignore-nvptx64\n+// ignore-le32\n+// ignore-le64\n+// ignore-amdil\n+// ignore-amdil64\n+// ignore-hsail\n+// ignore-hsail64\n+// ignore-spir\n+// ignore-spir64\n+// ignore-kalimba\n+// ignore-shave\n+// ignore-wasm32\n+// ignore-wasm64\n+// ignore-emscripten\n+// compile-flags: -C no-prepopulate-passes\n+\n+#![feature(global_asm)]\n+#![crate_type = \"lib\"]\n+\n+// CHECK-LABEL: foo\n+// CHECK: module asm\n+// this regex will capture the correct unconditional branch inst.\n+// CHECK: module asm \"{{[[:space:]]+}}jmp baz\"\n+global_asm!(r#\"\n+    .global foo\n+foo:\n+    jmp baz\n+\"#);\n+\n+extern \"C\" {\n+    fn foo();\n+}\n+\n+// CHECK-LABEL: @baz\n+#[no_mangle]\n+pub unsafe extern \"C\" fn baz() {}"}, {"sha": "401b1fad566d5c81c2621860a5089be83b3668ac", "filename": "src/test/codegen/global_asm_include.rs", "status": "added", "additions": 68, "deletions": 0, "changes": 68, "blob_url": "https://github.com/rust-lang/rust/blob/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Ftest%2Fcodegen%2Fglobal_asm_include.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Ftest%2Fcodegen%2Fglobal_asm_include.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fglobal_asm_include.rs?ref=da0742c0707225c796c1710d5f97b58a5bc5a864", "patch": "@@ -0,0 +1,68 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-aarch64\n+// ignore-aarch64_be\n+// ignore-arm\n+// ignore-armeb\n+// ignore-avr\n+// ignore-bpfel\n+// ignore-bpfeb\n+// ignore-hexagon\n+// ignore-mips\n+// ignore-mipsel\n+// ignore-mips64\n+// ignore-mips64el\n+// ignore-msp430\n+// ignore-powerpc64\n+// ignore-powerpc64le\n+// ignore-powerpc\n+// ignore-r600\n+// ignore-amdgcn\n+// ignore-sparc\n+// ignore-sparcv9\n+// ignore-sparcel\n+// ignore-s390x\n+// ignore-tce\n+// ignore-thumb\n+// ignore-thumbeb\n+// ignore-xcore\n+// ignore-nvptx\n+// ignore-nvptx64\n+// ignore-le32\n+// ignore-le64\n+// ignore-amdil\n+// ignore-amdil64\n+// ignore-hsail\n+// ignore-hsail64\n+// ignore-spir\n+// ignore-spir64\n+// ignore-kalimba\n+// ignore-shave\n+// ignore-wasm32\n+// ignore-wasm64\n+// ignore-emscripten\n+// compile-flags: -C no-prepopulate-passes\n+\n+#![feature(global_asm)]\n+#![crate_type = \"lib\"]\n+\n+// CHECK-LABEL: foo\n+// CHECK: module asm\n+// CHECK: module asm \"{{[[:space:]]+}}jmp baz\"\n+global_asm!(include_str!(\"foo.s\"));\n+\n+extern \"C\" {\n+    fn foo();\n+}\n+\n+// CHECK-LABEL: @baz\n+#[no_mangle]\n+pub unsafe extern \"C\" fn baz() {}"}, {"sha": "8b59165e9e61bb61881eb45bc6df01909185566d", "filename": "src/test/codegen/global_asm_x2.rs", "status": "added", "additions": 90, "deletions": 0, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Ftest%2Fcodegen%2Fglobal_asm_x2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Ftest%2Fcodegen%2Fglobal_asm_x2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fglobal_asm_x2.rs?ref=da0742c0707225c796c1710d5f97b58a5bc5a864", "patch": "@@ -0,0 +1,90 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-aarch64\n+// ignore-aarch64_be\n+// ignore-arm\n+// ignore-armeb\n+// ignore-avr\n+// ignore-bpfel\n+// ignore-bpfeb\n+// ignore-hexagon\n+// ignore-mips\n+// ignore-mipsel\n+// ignore-mips64\n+// ignore-mips64el\n+// ignore-msp430\n+// ignore-powerpc64\n+// ignore-powerpc64le\n+// ignore-powerpc\n+// ignore-r600\n+// ignore-amdgcn\n+// ignore-sparc\n+// ignore-sparcv9\n+// ignore-sparcel\n+// ignore-s390x\n+// ignore-tce\n+// ignore-thumb\n+// ignore-thumbeb\n+// ignore-xcore\n+// ignore-nvptx\n+// ignore-nvptx64\n+// ignore-le32\n+// ignore-le64\n+// ignore-amdil\n+// ignore-amdil64\n+// ignore-hsail\n+// ignore-hsail64\n+// ignore-spir\n+// ignore-spir64\n+// ignore-kalimba\n+// ignore-shave\n+// ignore-wasm32\n+// ignore-wasm64\n+// ignore-emscripten\n+// compile-flags: -C no-prepopulate-passes\n+\n+#![feature(global_asm)]\n+#![crate_type = \"lib\"]\n+#[no_std]\n+\n+// CHECK-LABEL: foo\n+// CHECK: module asm\n+// CHECK: module asm \"{{[[:space:]]+}}jmp baz\"\n+// any other global_asm will be appended to this first block, so:\n+// CHECK-LABEL: bar\n+// CHECK: module asm \"{{[[:space:]]+}}jmp quux\"\n+global_asm!(r#\"\n+    .global foo\n+foo:\n+    jmp baz\n+\"#);\n+\n+extern \"C\" {\n+    fn foo();\n+}\n+\n+// CHECK-LABEL: @baz\n+#[no_mangle]\n+pub unsafe extern \"C\" fn baz() {}\n+\n+// no checks here; this has been appended to the first occurrence\n+global_asm!(r#\"\n+    .global bar\n+bar:\n+    jmp quux\n+\"#);\n+\n+extern \"C\" {\n+    fn bar();\n+}\n+\n+#[no_mangle]\n+pub unsafe extern \"C\" fn quux() {}"}, {"sha": "0560abb6af498fb1e8e6b6d76af34f156dae70b9", "filename": "src/test/compile-fail/feature-gate-global_asm.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Ftest%2Fcompile-fail%2Ffeature-gate-global_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Ftest%2Fcompile-fail%2Ffeature-gate-global_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Ffeature-gate-global_asm.rs?ref=da0742c0707225c796c1710d5f97b58a5bc5a864", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// gate-test-global_asm\n+\n+global_asm!(\"\"); //~ ERROR `global_asm!` is not stable\n+\n+fn main() {}"}, {"sha": "db73da2747f9c1725d23a39ffd5dc7811422cd2b", "filename": "src/test/run-pass/empty_global_asm.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Ftest%2Frun-pass%2Fempty_global_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Ftest%2Frun-pass%2Fempty_global_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fempty_global_asm.rs?ref=da0742c0707225c796c1710d5f97b58a5bc5a864", "patch": "@@ -0,0 +1,28 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(global_asm)]\n+\n+#[cfg(target_arch = \"x86\")]\n+global_asm!(\"\");\n+\n+#[cfg(target_arch = \"x86_64\")]\n+global_asm!(\"\");\n+\n+#[cfg(target_arch = \"arm\")]\n+global_asm!(\"\");\n+\n+#[cfg(target_arch = \"aarch64\")]\n+global_asm!(\"\");\n+\n+#[cfg(target_arch = \"mips\")]\n+global_asm!(\"\");\n+\n+fn main() {}"}, {"sha": "a5ffe607fdf84c592232f8fe5593392c842de5fd", "filename": "src/test/run-pass/simple_global_asm.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Ftest%2Frun-pass%2Fsimple_global_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da0742c0707225c796c1710d5f97b58a5bc5a864/src%2Ftest%2Frun-pass%2Fsimple_global_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsimple_global_asm.rs?ref=da0742c0707225c796c1710d5f97b58a5bc5a864", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(global_asm)]\n+\n+#[cfg(any(target_arch = \"x86_64\", target_arch = \"x86\"))]\n+global_asm!(r#\"\n+    .global foo\n+foo:\n+    jmp baz\n+\"#);\n+\n+extern {\n+    fn foo();\n+}\n+\n+#[no_mangle]\n+pub extern fn baz() {}\n+\n+fn main() {}"}]}