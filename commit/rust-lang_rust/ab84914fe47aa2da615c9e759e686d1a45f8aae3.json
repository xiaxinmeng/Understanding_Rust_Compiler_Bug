{"sha": "ab84914fe47aa2da615c9e759e686d1a45f8aae3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiODQ5MTRmZTQ3YWEyZGE2MTVjOWU3NTllNjg2ZDFhNDVmOGFhZTM=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-23T03:49:26Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-23T23:59:38Z"}, "message": "parser: tweak unmatched wording", "tree": {"sha": "408412e26a58c1b2da1da200a4202b6f19e7e25d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/408412e26a58c1b2da1da200a4202b6f19e7e25d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab84914fe47aa2da615c9e759e686d1a45f8aae3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab84914fe47aa2da615c9e759e686d1a45f8aae3", "html_url": "https://github.com/rust-lang/rust/commit/ab84914fe47aa2da615c9e759e686d1a45f8aae3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab84914fe47aa2da615c9e759e686d1a45f8aae3/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d446c73e6ab94fe37f7d7b8f2abf633ed6344c8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/d446c73e6ab94fe37f7d7b8f2abf633ed6344c8a", "html_url": "https://github.com/rust-lang/rust/commit/d446c73e6ab94fe37f7d7b8f2abf633ed6344c8a"}], "stats": {"total": 77, "additions": 45, "deletions": 32}, "files": [{"sha": "d2073a5473ae1aca5dc54f99ec62ec20c2baa919", "filename": "src/librustc_parse/parser/item.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Flibrustc_parse%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fitem.rs?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -119,17 +119,18 @@ impl<'a> Parser<'a> {\n         }\n         let vs = pprust::vis_to_string(&vis);\n         let vs = vs.trim_end();\n-        self.struct_span_err(vis.span, &format!(\"unmatched visibility `{}`\", vs))\n-            .span_label(vis.span, \"the unmatched visibility\")\n+        self.struct_span_err(vis.span, &format!(\"visibility `{}` not followed by an item\", vs))\n+            .span_label(vis.span, \"the visibility\")\n             .help(&format!(\"you likely meant to define an item, e.g., `{} fn foo() {{}}`\", vs))\n             .emit();\n     }\n \n     /// Error in-case a `default` was parsed but no item followed.\n     fn error_on_unmatched_defaultness(&self, def: Defaultness) {\n-        if let Defaultness::Default(span) = def {\n-            self.struct_span_err(span, \"unmatched `default`\")\n-                .span_label(span, \"the unmatched `default`\")\n+        if let Defaultness::Default(sp) = def {\n+            self.struct_span_err(sp, \"`default` not followed by an item\")\n+                .span_label(sp, \"the `default` qualifier\")\n+                .note(\"only `fn`, `const`, `type`, or `impl` items may be prefixed by `default`\")\n                 .emit();\n         }\n     }"}, {"sha": "0c8ee0f7800d8c2948ca0c5779310b5fe2df497d", "filename": "src/test/ui/parser/default-unmatched-assoc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched-assoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched-assoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched-assoc.rs?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -3,14 +3,14 @@ fn main() {}\n trait Foo {\n     default!(); //~ ERROR cannot find macro `default` in this scope\n     default do\n-    //~^ ERROR unmatched `default`\n+    //~^ ERROR `default` not followed by an item\n     //~| ERROR non-item in item list\n }\n \n struct S;\n impl S {\n     default!(); //~ ERROR cannot find macro `default` in this scope\n     default do\n-    //~^ ERROR unmatched `default`\n+    //~^ ERROR `default` not followed by an item\n     //~| ERROR non-item in item list\n }"}, {"sha": "22db46d63dffb07821e1fbd0200c6b0c2cd270d5", "filename": "src/test/ui/parser/default-unmatched-assoc.stderr", "status": "modified", "additions": 8, "deletions": 4, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched-assoc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched-assoc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched-assoc.stderr?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -1,8 +1,10 @@\n-error: unmatched `default`\n+error: `default` not followed by an item\n   --> $DIR/default-unmatched-assoc.rs:5:5\n    |\n LL |     default do\n-   |     ^^^^^^^ the unmatched `default`\n+   |     ^^^^^^^ the `default` qualifier\n+   |\n+   = note: only `fn`, `const`, `type`, or `impl` items may be prefixed by `default`\n \n error: non-item in item list\n   --> $DIR/default-unmatched-assoc.rs:5:13\n@@ -16,11 +18,13 @@ LL |     default do\n LL | }\n    | - item list ends here\n \n-error: unmatched `default`\n+error: `default` not followed by an item\n   --> $DIR/default-unmatched-assoc.rs:13:5\n    |\n LL |     default do\n-   |     ^^^^^^^ the unmatched `default`\n+   |     ^^^^^^^ the `default` qualifier\n+   |\n+   = note: only `fn`, `const`, `type`, or `impl` items may be prefixed by `default`\n \n error: non-item in item list\n   --> $DIR/default-unmatched-assoc.rs:13:13"}, {"sha": "784df9bc77e572628ff1819e2dfe2cc72c2bf7ef", "filename": "src/test/ui/parser/default-unmatched-extern.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched-extern.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched-extern.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched-extern.rs?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -3,6 +3,6 @@ fn main() {}\n extern \"C\" {\n     default!(); //~ ERROR cannot find macro `default` in this scope\n     default do\n-    //~^ ERROR unmatched `default`\n+    //~^ ERROR `default` not followed by an item\n     //~| ERROR non-item in item list\n }"}, {"sha": "ffbfbc73c18d4d2cb340c231d348e8eb99008b67", "filename": "src/test/ui/parser/default-unmatched-extern.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched-extern.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched-extern.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched-extern.stderr?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -1,8 +1,10 @@\n-error: unmatched `default`\n+error: `default` not followed by an item\n   --> $DIR/default-unmatched-extern.rs:5:5\n    |\n LL |     default do\n-   |     ^^^^^^^ the unmatched `default`\n+   |     ^^^^^^^ the `default` qualifier\n+   |\n+   = note: only `fn`, `const`, `type`, or `impl` items may be prefixed by `default`\n \n error: non-item in item list\n   --> $DIR/default-unmatched-extern.rs:5:13"}, {"sha": "796e184a0d815954d6d4a0f0f63bdaba6915a00f", "filename": "src/test/ui/parser/default-unmatched.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched.rs?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -1,6 +1,6 @@\n mod foo {\n     default!(); // OK.\n     default do\n-    //~^ ERROR unmatched `default`\n+    //~^ ERROR `default` not followed by an item\n     //~| ERROR expected item, found reserved keyword `do`\n }"}, {"sha": "2601255776108dab3e6d72d6be5ee8f53878b874", "filename": "src/test/ui/parser/default-unmatched.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdefault-unmatched.stderr?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -1,8 +1,10 @@\n-error: unmatched `default`\n+error: `default` not followed by an item\n   --> $DIR/default-unmatched.rs:3:5\n    |\n LL |     default do\n-   |     ^^^^^^^ the unmatched `default`\n+   |     ^^^^^^^ the `default` qualifier\n+   |\n+   = note: only `fn`, `const`, `type`, or `impl` items may be prefixed by `default`\n \n error: expected item, found reserved keyword `do`\n   --> $DIR/default-unmatched.rs:3:13"}, {"sha": "6cfa141478e4af493139482a6604f31f5d30f584", "filename": "src/test/ui/parser/default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdefault.rs?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -20,7 +20,7 @@ impl Foo for u16 {\n \n impl Foo for u32 { //~ ERROR not all trait items implemented, missing: `foo`\n     default pub fn foo<T: Default>() -> T { T::default() }\n-    //~^ ERROR unmatched `default`\n+    //~^ ERROR `default` not followed by an item\n     //~| ERROR non-item in item list\n }\n "}, {"sha": "96b14b42767a37f9a797860694b461ae936db8d4", "filename": "src/test/ui/parser/default.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fdefault.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fdefault.stderr?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -1,8 +1,10 @@\n-error: unmatched `default`\n+error: `default` not followed by an item\n   --> $DIR/default.rs:22:5\n    |\n LL |     default pub fn foo<T: Default>() -> T { T::default() }\n-   |     ^^^^^^^ the unmatched `default`\n+   |     ^^^^^^^ the `default` qualifier\n+   |\n+   = note: only `fn`, `const`, `type`, or `impl` items may be prefixed by `default`\n \n error: non-item in item list\n   --> $DIR/default.rs:22:13"}, {"sha": "edea2d1e5e2f34aa438c61467b39099815060b93", "filename": "src/test/ui/parser/duplicate-visibility.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.rs?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -2,6 +2,6 @@ fn main() {}\n \n extern {\n     pub pub fn foo();\n-    //~^ ERROR unmatched visibility `pub`\n+    //~^ ERROR visibility `pub` not followed by an item\n     //~| ERROR non-item in item list\n }"}, {"sha": "d8e38046a6c15c33028a624af307e17bf17a50bf", "filename": "src/test/ui/parser/duplicate-visibility.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fduplicate-visibility.stderr?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -1,8 +1,8 @@\n-error: unmatched visibility `pub`\n+error: visibility `pub` not followed by an item\n   --> $DIR/duplicate-visibility.rs:4:5\n    |\n LL |     pub pub fn foo();\n-   |     ^^^ the unmatched visibility\n+   |     ^^^ the visibility\n    |\n    = help: you likely meant to define an item, e.g., `pub fn foo() {}`\n "}, {"sha": "c2ed7531a94323025bc47e1edd1b1dc67fee87c2", "filename": "src/test/ui/parser/impl-parsing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fimpl-parsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fimpl-parsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimpl-parsing.rs?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -7,4 +7,4 @@ impl ?Sized for Type {} //~ ERROR expected a trait, found type\n impl ?Sized for .. {} //~ ERROR expected a trait, found type\n \n default unsafe FAIL //~ ERROR expected item, found keyword `unsafe`\n-//~^ ERROR unmatched `default`\n+//~^ ERROR `default` not followed by an item"}, {"sha": "ce673765aba1dcf696ea62595171cbc3fffad8bf", "filename": "src/test/ui/parser/impl-parsing.stderr", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fimpl-parsing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fimpl-parsing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fimpl-parsing.stderr?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -22,11 +22,13 @@ error: expected a trait, found type\n LL | impl ?Sized for .. {}\n    |      ^^^^^^\n \n-error: unmatched `default`\n+error: `default` not followed by an item\n   --> $DIR/impl-parsing.rs:9:1\n    |\n LL | default unsafe FAIL\n-   | ^^^^^^^ the unmatched `default`\n+   | ^^^^^^^ the `default` qualifier\n+   |\n+   = note: only `fn`, `const`, `type`, or `impl` items may be prefixed by `default`\n \n error: expected item, found keyword `unsafe`\n   --> $DIR/impl-parsing.rs:9:9"}, {"sha": "5bfbe0c5e689071298f7a27149bacc74103681a3", "filename": "src/test/ui/parser/issue-41155.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fissue-41155.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fissue-41155.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-41155.rs?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -1,7 +1,7 @@\n struct S;\n \n impl S {\n-    pub //~ ERROR unmatched visibility `pub`\n+    pub //~ ERROR visibility `pub` not followed by an item\n } //~ ERROR non-item in item list\n \n fn main() {}"}, {"sha": "09bbee51800d9c090e1896c989d837e5459c33e0", "filename": "src/test/ui/parser/issue-41155.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fissue-41155.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fparser%2Fissue-41155.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissue-41155.stderr?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -1,8 +1,8 @@\n-error: unmatched visibility `pub`\n+error: visibility `pub` not followed by an item\n   --> $DIR/issue-41155.rs:4:5\n    |\n LL |     pub\n-   |     ^^^ the unmatched visibility\n+   |     ^^^ the visibility\n    |\n    = help: you likely meant to define an item, e.g., `pub fn foo() {}`\n "}, {"sha": "73806fdfe72b92c88e4c5d93fd93b7e7355a680e", "filename": "src/test/ui/pub/pub-restricted-error-fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error-fn.rs?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -1,2 +1,2 @@\n-pub(crate) () fn foo() {} //~ unmatched visibility\n+pub(crate) () fn foo() {} //~ ERROR visibility `pub(crate)` not followed by an item\n //~^ ERROR expected item, found `(`"}, {"sha": "42d03941e411fe22466f1a29b212340d4d16451e", "filename": "src/test/ui/pub/pub-restricted-error-fn.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab84914fe47aa2da615c9e759e686d1a45f8aae3/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error-fn.stderr?ref=ab84914fe47aa2da615c9e759e686d1a45f8aae3", "patch": "@@ -1,8 +1,8 @@\n-error: unmatched visibility `pub(crate)`\n+error: visibility `pub(crate)` not followed by an item\n   --> $DIR/pub-restricted-error-fn.rs:1:1\n    |\n LL | pub(crate) () fn foo() {}\n-   | ^^^^^^^^^^ the unmatched visibility\n+   | ^^^^^^^^^^ the visibility\n    |\n    = help: you likely meant to define an item, e.g., `pub(crate) fn foo() {}`\n "}]}