{"sha": "5347411a2deb9a34a5b680c8186fb7eec8e9c02e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzNDc0MTFhMmRlYjlhMzRhNWI2ODBjODE4NmZiN2VlYzhlOWMwMmU=", "commit": {"author": {"name": "Andrew Poelstra", "email": "apoelstra@wpsoftware.net", "date": "2018-10-23T15:21:19Z"}, "committer": {"name": "Andrew Poelstra", "email": "apoelstra@wpsoftware.net", "date": "2018-10-23T15:22:14Z"}, "message": "README: remove \"specific nightly\" instructions and use +nightly throughout\n\nAlso replace `cargo miri test` with `cargo miri` in general examples.", "tree": {"sha": "d40e633931d56d3d230350ae9a02aad096e96035", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d40e633931d56d3d230350ae9a02aad096e96035"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5347411a2deb9a34a5b680c8186fb7eec8e9c02e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5347411a2deb9a34a5b680c8186fb7eec8e9c02e", "html_url": "https://github.com/rust-lang/rust/commit/5347411a2deb9a34a5b680c8186fb7eec8e9c02e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5347411a2deb9a34a5b680c8186fb7eec8e9c02e/comments", "author": {"login": "apoelstra", "id": 1351933, "node_id": "MDQ6VXNlcjEzNTE5MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apoelstra", "html_url": "https://github.com/apoelstra", "followers_url": "https://api.github.com/users/apoelstra/followers", "following_url": "https://api.github.com/users/apoelstra/following{/other_user}", "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}", "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions", "organizations_url": "https://api.github.com/users/apoelstra/orgs", "repos_url": "https://api.github.com/users/apoelstra/repos", "events_url": "https://api.github.com/users/apoelstra/events{/privacy}", "received_events_url": "https://api.github.com/users/apoelstra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "apoelstra", "id": 1351933, "node_id": "MDQ6VXNlcjEzNTE5MzM=", "avatar_url": "https://avatars.githubusercontent.com/u/1351933?v=4", "gravatar_id": "", "url": "https://api.github.com/users/apoelstra", "html_url": "https://github.com/apoelstra", "followers_url": "https://api.github.com/users/apoelstra/followers", "following_url": "https://api.github.com/users/apoelstra/following{/other_user}", "gists_url": "https://api.github.com/users/apoelstra/gists{/gist_id}", "starred_url": "https://api.github.com/users/apoelstra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/apoelstra/subscriptions", "organizations_url": "https://api.github.com/users/apoelstra/orgs", "repos_url": "https://api.github.com/users/apoelstra/repos", "events_url": "https://api.github.com/users/apoelstra/events{/privacy}", "received_events_url": "https://api.github.com/users/apoelstra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "abda1a8ebb4f38929a6f62e73b81ce6deb95ef61", "url": "https://api.github.com/repos/rust-lang/rust/commits/abda1a8ebb4f38929a6f62e73b81ce6deb95ef61", "html_url": "https://github.com/rust-lang/rust/commit/abda1a8ebb4f38929a6f62e73b81ce6deb95ef61"}], "stats": {"total": 40, "additions": 15, "deletions": 25}, "files": [{"sha": "7597c9a0e11bd7716d9327593c8a0351f367036a", "filename": "README.md", "status": "modified", "additions": 15, "deletions": 25, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/5347411a2deb9a34a5b680c8186fb7eec8e9c02e/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/5347411a2deb9a34a5b680c8186fb7eec8e9c02e/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=5347411a2deb9a34a5b680c8186fb7eec8e9c02e", "patch": "@@ -8,17 +8,19 @@ undergraduate research course at the [University of Saskatchewan][usask].\n ## Building Miri\n \n I recommend that you install [rustup][rustup] to obtain Rust.  Miri comes with a\n-`rust-toolchain` file so rustup will automatically pick a suitable nightly\n-version.  Then all you have to do is:\n+`rust-version` file describing the latest supported nightly version of the Rust\n+compiler toolchain. Then all you have to do is:\n \n ```sh\n-cargo build\n+cargo +nightly build\n ```\n \n+with `+nightly` replaced with the appropriate nightly version of Rust.\n+\n ## Running Miri\n \n ```sh\n-cargo run tests/run-pass/vecs.rs # Or whatever test you like.\n+cargo +nightly run tests/run-pass/vecs.rs # Or whatever test you like.\n ```\n \n ## Running Miri with full libstd\n@@ -28,15 +30,15 @@ Miri hits a call to such a function, execution terminates. To fix this, it is\n possible to compile libstd with full MIR:\n \n ```sh\n-rustup component add rust-src\n-cargo install xargo\n-xargo/build.sh\n+rustup component add --toolchain nightly rust-src\n+cargo +nightly install xargo\n+rustup run nightly xargo/build.sh\n ```\n \n Now you can run Miri against the libstd compiled by xargo:\n \n ```sh\n-MIRI_SYSROOT=~/.xargo/HOST cargo run tests/run-pass-fullmir/hashmap.rs\n+MIRI_SYSROOT=~/.xargo/HOST cargo +nightly run tests/run-pass-fullmir/hashmap.rs\n ```\n \n Notice that you will have to re-run the last step of the preparations above when\n@@ -47,7 +49,7 @@ You can also set `-Zmiri-start-fn` to make Miri start evaluation with the\n \n ## Running Miri on your own project('s test suite)\n \n-Install Miri as a cargo subcommand with `cargo install --all-features --path .`.\n+Install Miri as a cargo subcommand with `cargo install +nightly --all-features --path .`.\n \n Compile your project and its dependencies against a MIR-enabled libstd as described\n above:\n@@ -61,12 +63,12 @@ the non-MIR `libstd`.\n \n ### Common Problems\n \n-When modifying the above instructions, you may encounter a number of confusing compiler\n+When using the above instructions, you may encounter a number of confusing compiler\n errors.\n \n #### \"constant evaluation error: no mir for `<function>`\"\n \n-You may have forgotten to set `MIRI_SYSROOT` when calling `cargo miri test`, and\n+You may have forgotten to set `MIRI_SYSROOT` when calling `cargo miri`, and\n your program called into `std` or `core`. Be sure to set `MIRI_SYSROOT=~/.xargo/HOST`.\n \n #### \"found possibly newer version of crate `std` which `<dependency>` depends on\"\n@@ -77,21 +79,9 @@ builds and vice-versa.\n \n #### \"found crate `std` compiled by an incompatible version of rustc\"\n \n-You may be running `cargo miri test` with a different compiler version than the one\n+You may be running `cargo miri` with a different compiler version than the one\n used to build the MIR-enabled `std`. Be sure to consistently use the same toolchain,\n-perhaps by following the below instructions to specify a specific nightly for use\n-with Miri.\n-\n-## Using Rustup To Specify a Specific Nightly\n-\n-To target a specific nightly, modify the above instructions as follows. It is recommended\n-to use the nightly specified in the `rust-version` file in this repo, since that is the\n-most recent nightly supported by Miri.\n-\n-1. Install Miri using `cargo +nightly-2018-10-15 install --all-features --path .`,\n-with the date replaced as appropriate.\n-2. Run `xargo/build.sh` as `rustup run nightly-2018-10-15 xargo/build.sh`.\n-3. When running tests, use `MIRI_SYSROOT=~/.xargo/HOST cargo +nightly-2018-10-15 miri test`.\n+which should be the toolchain specified in the `rust-version` file.\n \n ## Miri `-Z` flags\n "}]}