{"sha": "51edf7ede68cee0777778d6bbe2d64dad3099d24", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxZWRmN2VkZTY4Y2VlMDc3Nzc3OGQ2YmJlMmQ2NGRhZDMwOTlkMjQ=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-06-18T01:55:24Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-06-18T01:55:24Z"}, "message": "Rename max indentation constant for clarity.", "tree": {"sha": "15415c941699332e95088c885271f226ef7563c4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15415c941699332e95088c885271f226ef7563c4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51edf7ede68cee0777778d6bbe2d64dad3099d24", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51edf7ede68cee0777778d6bbe2d64dad3099d24", "html_url": "https://github.com/rust-lang/rust/commit/51edf7ede68cee0777778d6bbe2d64dad3099d24", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51edf7ede68cee0777778d6bbe2d64dad3099d24/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ae4a0f2a9175bbd339795623214aaa89db1f5a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ae4a0f2a9175bbd339795623214aaa89db1f5a5", "html_url": "https://github.com/rust-lang/rust/commit/5ae4a0f2a9175bbd339795623214aaa89db1f5a5"}], "stats": {"total": 7, "additions": 4, "deletions": 3}, "files": [{"sha": "82b1da3ce6e35d01b7029d2a53ddfe8dce833c31", "filename": "src/bin/miri.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/51edf7ede68cee0777778d6bbe2d64dad3099d24/src%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51edf7ede68cee0777778d6bbe2d64dad3099d24/src%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fmiri.rs?ref=51edf7ede68cee0777778d6bbe2d64dad3099d24", "patch": "@@ -104,16 +104,17 @@ fn report(tcx: TyCtxt, ecx: &EvalContext, e: EvalError) {\n }\n \n fn init_logger() {\n-    const NSPACES: usize = 40;\n+    const MAX_INDENT: usize = 40;\n+\n     let format = |record: &log::LogRecord| {\n         if record.level() == log::LogLevel::Trace {\n             // prepend spaces to indent the final string\n             let indentation = log_settings::settings().indentation;\n             format!(\"{lvl}:{module}{depth:2}{indent:<indentation$} {text}\",\n                 lvl = record.level(),\n                 module = record.location().module_path(),\n-                depth = indentation / NSPACES,\n-                indentation = indentation % NSPACES,\n+                depth = indentation / MAX_INDENT,\n+                indentation = indentation % MAX_INDENT,\n                 indent = \"\",\n                 text = record.args())\n         } else {"}]}