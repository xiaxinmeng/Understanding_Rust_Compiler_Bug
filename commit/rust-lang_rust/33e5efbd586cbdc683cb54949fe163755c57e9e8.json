{"sha": "33e5efbd586cbdc683cb54949fe163755c57e9e8", "node_id": "C_kwDOAAsO6NoAKDMzZTVlZmJkNTg2Y2JkYzY4M2NiNTQ5NDlmZTE2Mzc1NWM1N2U5ZTg", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-01-18T09:42:35Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-01-18T09:46:17Z"}, "message": "adjust tests", "tree": {"sha": "9a9cf8d012fa0eb379937f0ca436c8db8b06d48d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9a9cf8d012fa0eb379937f0ca436c8db8b06d48d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/33e5efbd586cbdc683cb54949fe163755c57e9e8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/33e5efbd586cbdc683cb54949fe163755c57e9e8", "html_url": "https://github.com/rust-lang/rust/commit/33e5efbd586cbdc683cb54949fe163755c57e9e8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/33e5efbd586cbdc683cb54949fe163755c57e9e8/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6ed42a7ca48f11c6d2e381af033ccbf0f9523a64", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ed42a7ca48f11c6d2e381af033ccbf0f9523a64", "html_url": "https://github.com/rust-lang/rust/commit/6ed42a7ca48f11c6d2e381af033ccbf0f9523a64"}], "stats": {"total": 134, "additions": 67, "deletions": 67}, "files": [{"sha": "721636e074371e3d2c1798ba0ab2820ff5e0ff84", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-drop-fail.precise.stderr", "status": "modified", "additions": 25, "deletions": 32, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/33e5efbd586cbdc683cb54949fe163755c57e9e8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.precise.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33e5efbd586cbdc683cb54949fe163755c57e9e8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.precise.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.precise.stderr?ref=33e5efbd586cbdc683cb54949fe163755c57e9e8", "patch": "@@ -1,13 +1,5 @@\n-error: `~const` is not allowed here\n-  --> $DIR/const-drop-fail.rs:27:35\n-   |\n-LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n-   |                                   ^^^^^^^^\n-   |\n-   = note: only allowed on bounds on traits' associated types and functions, const fns, const impls and its associated functions\n-\n error[E0277]: the trait bound `NonTrivialDrop: Drop` is not satisfied\n-  --> $DIR/const-drop-fail.rs:45:5\n+  --> $DIR/const-drop-fail.rs:44:5\n    |\n LL |         const _: () = check($exp);\n    |                       ----- required by a bound introduced by this call\n@@ -16,50 +8,51 @@ LL |     NonTrivialDrop,\n    |     ^^^^^^^^^^^^^^ the trait `Drop` is not implemented for `NonTrivialDrop`\n    |\n note: required by a bound in `check`\n-  --> $DIR/const-drop-fail.rs:36:19\n+  --> $DIR/const-drop-fail.rs:35:19\n    |\n LL | const fn check<T: ~const Drop>(_: T) {}\n    |                   ^^^^^^^^^^^ required by this bound in `check`\n \n-error[E0277]: the trait bound `ConstImplWithDropGlue: Drop` is not satisfied\n-  --> $DIR/const-drop-fail.rs:47:5\n+error[E0277]: the trait bound `NonTrivialDrop: Drop` is not satisfied in `ConstImplWithDropGlue`\n+  --> $DIR/const-drop-fail.rs:46:5\n    |\n LL |         const _: () = check($exp);\n    |                       ----- required by a bound introduced by this call\n ...\n LL |     ConstImplWithDropGlue(NonTrivialDrop),\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Drop` is not implemented for `ConstImplWithDropGlue`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `ConstImplWithDropGlue`, the trait `Drop` is not implemented for `NonTrivialDrop`\n    |\n+note: required because it appears within the type `ConstImplWithDropGlue`\n+  --> $DIR/const-drop-fail.rs:17:8\n+   |\n+LL | struct ConstImplWithDropGlue(NonTrivialDrop);\n+   |        ^^^^^^^^^^^^^^^^^^^^^\n note: required by a bound in `check`\n-  --> $DIR/const-drop-fail.rs:36:19\n+  --> $DIR/const-drop-fail.rs:35:19\n    |\n LL | const fn check<T: ~const Drop>(_: T) {}\n    |                   ^^^^^^^^^^^ required by this bound in `check`\n \n error[E0277]: the trait bound `NonTrivialDrop: A` is not satisfied\n-  --> $DIR/const-drop-fail.rs:49:5\n-   |\n-LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `A` is not implemented for `NonTrivialDrop`\n-   |\n-note: required by a bound in `ConstDropImplWithBounds`\n-  --> $DIR/const-drop-fail.rs:27:35\n-   |\n-LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n-   |                                   ^^^^^^^^ required by this bound in `ConstDropImplWithBounds`\n-\n-error[E0277]: the trait bound `NonTrivialDrop: A` is not satisfied\n-  --> $DIR/const-drop-fail.rs:49:5\n+  --> $DIR/const-drop-fail.rs:48:5\n    |\n+LL |         const _: () = check($exp);\n+   |                       ----- required by a bound introduced by this call\n+...\n LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `A` is not implemented for `NonTrivialDrop`\n    |\n-note: required by a bound in `ConstDropImplWithBounds`\n-  --> $DIR/const-drop-fail.rs:27:35\n+note: required because of the requirements on the impl of `Drop` for `ConstDropImplWithBounds<NonTrivialDrop>`\n+  --> $DIR/const-drop-fail.rs:29:25\n    |\n-LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n-   |                                   ^^^^^^^^ required by this bound in `ConstDropImplWithBounds`\n+LL | impl<T: ~const A> const Drop for ConstDropImplWithBounds<T> {\n+   |                         ^^^^     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: required by a bound in `check`\n+  --> $DIR/const-drop-fail.rs:35:19\n+   |\n+LL | const fn check<T: ~const Drop>(_: T) {}\n+   |                   ^^^^^^^^^^^ required by this bound in `check`\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "4622723c1891e7da872d12cb091b82ce4f82b612", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-drop-fail.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/33e5efbd586cbdc683cb54949fe163755c57e9e8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33e5efbd586cbdc683cb54949fe163755c57e9e8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.rs?ref=33e5efbd586cbdc683cb54949fe163755c57e9e8", "patch": "@@ -24,8 +24,7 @@ trait A { fn a() { println!(\"A\"); } }\n \n impl A for NonTrivialDrop {}\n \n-struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n-//~^ ERROR `~const` is not allowed\n+struct ConstDropImplWithBounds<T: A>(PhantomData<T>);\n \n impl<T: ~const A> const Drop for ConstDropImplWithBounds<T> {\n     fn drop(&mut self) {\n@@ -48,7 +47,6 @@ check_all! {\n     //~^ ERROR the trait bound\n     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n     //~^ ERROR the trait bound\n-    //~| ERROR the trait bound\n }\n \n fn main() {}"}, {"sha": "721636e074371e3d2c1798ba0ab2820ff5e0ff84", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-drop-fail.stock.stderr", "status": "modified", "additions": 25, "deletions": 32, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/33e5efbd586cbdc683cb54949fe163755c57e9e8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.stock.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/33e5efbd586cbdc683cb54949fe163755c57e9e8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.stock.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop-fail.stock.stderr?ref=33e5efbd586cbdc683cb54949fe163755c57e9e8", "patch": "@@ -1,13 +1,5 @@\n-error: `~const` is not allowed here\n-  --> $DIR/const-drop-fail.rs:27:35\n-   |\n-LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n-   |                                   ^^^^^^^^\n-   |\n-   = note: only allowed on bounds on traits' associated types and functions, const fns, const impls and its associated functions\n-\n error[E0277]: the trait bound `NonTrivialDrop: Drop` is not satisfied\n-  --> $DIR/const-drop-fail.rs:45:5\n+  --> $DIR/const-drop-fail.rs:44:5\n    |\n LL |         const _: () = check($exp);\n    |                       ----- required by a bound introduced by this call\n@@ -16,50 +8,51 @@ LL |     NonTrivialDrop,\n    |     ^^^^^^^^^^^^^^ the trait `Drop` is not implemented for `NonTrivialDrop`\n    |\n note: required by a bound in `check`\n-  --> $DIR/const-drop-fail.rs:36:19\n+  --> $DIR/const-drop-fail.rs:35:19\n    |\n LL | const fn check<T: ~const Drop>(_: T) {}\n    |                   ^^^^^^^^^^^ required by this bound in `check`\n \n-error[E0277]: the trait bound `ConstImplWithDropGlue: Drop` is not satisfied\n-  --> $DIR/const-drop-fail.rs:47:5\n+error[E0277]: the trait bound `NonTrivialDrop: Drop` is not satisfied in `ConstImplWithDropGlue`\n+  --> $DIR/const-drop-fail.rs:46:5\n    |\n LL |         const _: () = check($exp);\n    |                       ----- required by a bound introduced by this call\n ...\n LL |     ConstImplWithDropGlue(NonTrivialDrop),\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `Drop` is not implemented for `ConstImplWithDropGlue`\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ within `ConstImplWithDropGlue`, the trait `Drop` is not implemented for `NonTrivialDrop`\n    |\n+note: required because it appears within the type `ConstImplWithDropGlue`\n+  --> $DIR/const-drop-fail.rs:17:8\n+   |\n+LL | struct ConstImplWithDropGlue(NonTrivialDrop);\n+   |        ^^^^^^^^^^^^^^^^^^^^^\n note: required by a bound in `check`\n-  --> $DIR/const-drop-fail.rs:36:19\n+  --> $DIR/const-drop-fail.rs:35:19\n    |\n LL | const fn check<T: ~const Drop>(_: T) {}\n    |                   ^^^^^^^^^^^ required by this bound in `check`\n \n error[E0277]: the trait bound `NonTrivialDrop: A` is not satisfied\n-  --> $DIR/const-drop-fail.rs:49:5\n-   |\n-LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `A` is not implemented for `NonTrivialDrop`\n-   |\n-note: required by a bound in `ConstDropImplWithBounds`\n-  --> $DIR/const-drop-fail.rs:27:35\n-   |\n-LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n-   |                                   ^^^^^^^^ required by this bound in `ConstDropImplWithBounds`\n-\n-error[E0277]: the trait bound `NonTrivialDrop: A` is not satisfied\n-  --> $DIR/const-drop-fail.rs:49:5\n+  --> $DIR/const-drop-fail.rs:48:5\n    |\n+LL |         const _: () = check($exp);\n+   |                       ----- required by a bound introduced by this call\n+...\n LL |     ConstDropImplWithBounds::<NonTrivialDrop>(PhantomData),\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `A` is not implemented for `NonTrivialDrop`\n    |\n-note: required by a bound in `ConstDropImplWithBounds`\n-  --> $DIR/const-drop-fail.rs:27:35\n+note: required because of the requirements on the impl of `Drop` for `ConstDropImplWithBounds<NonTrivialDrop>`\n+  --> $DIR/const-drop-fail.rs:29:25\n    |\n-LL | struct ConstDropImplWithBounds<T: ~const A>(PhantomData<T>);\n-   |                                   ^^^^^^^^ required by this bound in `ConstDropImplWithBounds`\n+LL | impl<T: ~const A> const Drop for ConstDropImplWithBounds<T> {\n+   |                         ^^^^     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n+note: required by a bound in `check`\n+  --> $DIR/const-drop-fail.rs:35:19\n+   |\n+LL | const fn check<T: ~const Drop>(_: T) {}\n+   |                   ^^^^^^^^^^^ required by this bound in `check`\n \n-error: aborting due to 5 previous errors\n+error: aborting due to 3 previous errors\n \n For more information about this error, try `rustc --explain E0277`."}, {"sha": "d244f75ed36e2b42ea53642782676742822a10f1", "filename": "src/test/ui/rfc-2632-const-trait-impl/const-drop.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/33e5efbd586cbdc683cb54949fe163755c57e9e8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/33e5efbd586cbdc683cb54949fe163755c57e9e8/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fconst-drop.rs?ref=33e5efbd586cbdc683cb54949fe163755c57e9e8", "patch": "@@ -45,6 +45,21 @@ mod t {\n \n     pub struct HasConstDrop(pub ConstDrop);\n     pub struct TrivialFields(pub u8, pub i8, pub usize, pub isize);\n+\n+    pub trait SomeTrait {\n+        fn foo();\n+    }\n+    impl const SomeTrait for () {\n+        fn foo() {}\n+    }\n+\n+    pub struct ConstDropWithBound<T: SomeTrait>(pub core::marker::PhantomData<T>);\n+\n+    impl<T: ~const SomeTrait> const Drop for ConstDropWithBound<T> {\n+        fn drop(&mut self) {\n+            T::foo();\n+        }\n+    }\n }\n \n use t::*;\n@@ -61,6 +76,7 @@ implements_const_drop! {\n     TrivialFields(1, 2, 3, 4),\n     &1,\n     &1 as *const i32,\n+    ConstDropWithBound::<()>,\n }\n \n fn main() {"}]}