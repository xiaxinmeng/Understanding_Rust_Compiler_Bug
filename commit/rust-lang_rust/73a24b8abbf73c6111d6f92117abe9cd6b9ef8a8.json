{"sha": "73a24b8abbf73c6111d6f92117abe9cd6b9ef8a8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczYTI0YjhhYmJmNzNjNjExMWQ2ZjkyMTE3YWJlOWNkNmI5ZWY4YTg=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-18T00:45:24Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-07-18T00:46:32Z"}, "message": "Fixing coherence error in bitv", "tree": {"sha": "7ab910a6a6e2b27fe2707c4cce8db2971ee3fd7c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7ab910a6a6e2b27fe2707c4cce8db2971ee3fd7c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73a24b8abbf73c6111d6f92117abe9cd6b9ef8a8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73a24b8abbf73c6111d6f92117abe9cd6b9ef8a8", "html_url": "https://github.com/rust-lang/rust/commit/73a24b8abbf73c6111d6f92117abe9cd6b9ef8a8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73a24b8abbf73c6111d6f92117abe9cd6b9ef8a8/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b8171ef2d03e4a2235b4bf0af255dab1b53bc25", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b8171ef2d03e4a2235b4bf0af255dab1b53bc25", "html_url": "https://github.com/rust-lang/rust/commit/7b8171ef2d03e4a2235b4bf0af255dab1b53bc25"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "adb7f56ef3b5d5856d48e2b8a0a861a03ac33c48", "filename": "src/libstd/bitv.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/73a24b8abbf73c6111d6f92117abe9cd6b9ef8a8/src%2Flibstd%2Fbitv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73a24b8abbf73c6111d6f92117abe9cd6b9ef8a8/src%2Flibstd%2Fbitv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fbitv.rs?ref=73a24b8abbf73c6111d6f92117abe9cd6b9ef8a8", "patch": "@@ -235,7 +235,29 @@ fn eq_vec(v0: bitv, v1: ~[uint]) -> bool {\n     ret true;\n }\n \n-impl methods for bitv {\n+trait methods {\n+    fn union(rhs: bitv) -> bool;\n+    fn intersect(rhs: bitv) -> bool;\n+    fn assign(rhs: bitv) -> bool;\n+    fn get(i: uint) -> bool;\n+    fn [](i: uint) -> bool;\n+    fn eq(rhs: bitv) -> bool;\n+    fn clear();\n+    fn set_all();\n+    fn invert();\n+    fn difference(rhs: bitv) -> bool;\n+    fn set(i: uint, x: bool);\n+    fn is_true() -> bool;\n+    fn is_false() -> bool;\n+    fn to_vec() -> ~[uint];\n+    fn each(f: fn(bool) -> bool);\n+    fn each_storage(f: fn(&uint) -> bool);\n+    fn eq_vec(v: ~[uint]) -> bool;\n+\n+    fn ones(f: fn(uint) -> bool);\n+}\n+\n+impl of methods for bitv {\n     fn union(rhs: bitv) -> bool { union(self, rhs) }\n     fn intersect(rhs: bitv) -> bool { intersect(self, rhs) }\n     fn assign(rhs: bitv) -> bool { assign(self, rhs) }"}]}