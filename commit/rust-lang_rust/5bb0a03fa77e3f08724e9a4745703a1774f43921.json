{"sha": "5bb0a03fa77e3f08724e9a4745703a1774f43921", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViYjBhMDNmYTc3ZTNmMDg3MjRlOWE0NzQ1NzAzYTE3NzRmNDM5MjE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-11T02:34:56Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2019-10-11T02:34:56Z"}, "message": "Move diagnostics code out of the critical path", "tree": {"sha": "5e3dbe7f60017816d6cc5aa57c9eba1288398113", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e3dbe7f60017816d6cc5aa57c9eba1288398113"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5bb0a03fa77e3f08724e9a4745703a1774f43921", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5bb0a03fa77e3f08724e9a4745703a1774f43921", "html_url": "https://github.com/rust-lang/rust/commit/5bb0a03fa77e3f08724e9a4745703a1774f43921", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5bb0a03fa77e3f08724e9a4745703a1774f43921/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "898f36c83cc28d7921a1d7b3605323dc5cfcf533", "url": "https://api.github.com/repos/rust-lang/rust/commits/898f36c83cc28d7921a1d7b3605323dc5cfcf533", "html_url": "https://github.com/rust-lang/rust/commit/898f36c83cc28d7921a1d7b3605323dc5cfcf533"}], "stats": {"total": 37, "additions": 19, "deletions": 18}, "files": [{"sha": "e57cc809c347989488f7ba5e150ec4b05782141c", "filename": "src/librustc_typeck/check/method/mod.rs", "status": "modified", "additions": 19, "deletions": 18, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/5bb0a03fa77e3f08724e9a4745703a1774f43921/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5bb0a03fa77e3f08724e9a4745703a1774f43921/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs?ref=5bb0a03fa77e3f08724e9a4745703a1774f43921", "patch": "@@ -213,27 +213,28 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             segment,\n         );\n \n-        let mut needs_mut = false;\n-        if let ty::Ref(region, t_type, mutability) = self_ty.kind {\n-            let trait_type = self.tcx.mk_ref(region, ty::TypeAndMut {\n-                ty: t_type,\n-                mutbl: mutability.invert(),\n-            });\n-            match self.lookup_probe(\n-                span,\n-                segment.ident,\n-                trait_type,\n-                call_expr,\n-                ProbeScope::TraitsInScope\n-            ) {\n-                Ok(ref new_pick) if *new_pick != pick => {\n-                    needs_mut = true;\n+        if result.illegal_sized_bound {\n+            let mut needs_mut = false;\n+            if let ty::Ref(region, t_type, mutability) = self_ty.kind {\n+                let trait_type = self.tcx.mk_ref(region, ty::TypeAndMut {\n+                    ty: t_type,\n+                    mutbl: mutability.invert(),\n+                });\n+                // We probe again to see if there might be a borrow mutability discrepancy.\n+                match self.lookup_probe(\n+                    span,\n+                    segment.ident,\n+                    trait_type,\n+                    call_expr,\n+                    ProbeScope::TraitsInScope\n+                ) {\n+                    Ok(ref new_pick) if *new_pick != pick => {\n+                        needs_mut = true;\n+                    }\n+                    _ => {}\n                 }\n-                _ => {}\n             }\n-        }\n \n-        if result.illegal_sized_bound {\n             // We probe again, taking all traits into account (not only those in scope).\n             let candidates = match self.lookup_probe(\n                 span,"}]}