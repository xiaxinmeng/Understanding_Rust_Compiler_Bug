{"sha": "3b5d6b4de54cfce8a1897faa8eadb49a2a1d0688", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNiNWQ2YjRkZTU0Y2ZjZThhMTg5N2ZhYThlYWRiNDlhMmExZDA2ODg=", "commit": {"author": {"name": "Kang Seonghoon", "email": "public+git@mearie.org", "date": "2014-04-28T18:59:48Z"}, "committer": {"name": "Kang Seonghoon", "email": "public+git@mearie.org", "date": "2014-04-28T19:01:55Z"}, "message": "rustdoc: Make strip_hidden use a dedicated hidden item if any.\n\nfixes #13806.", "tree": {"sha": "f611328d542e39758638c15e93baf515469ce819", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f611328d542e39758638c15e93baf515469ce819"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3b5d6b4de54cfce8a1897faa8eadb49a2a1d0688", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3b5d6b4de54cfce8a1897faa8eadb49a2a1d0688", "html_url": "https://github.com/rust-lang/rust/commit/3b5d6b4de54cfce8a1897faa8eadb49a2a1d0688", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3b5d6b4de54cfce8a1897faa8eadb49a2a1d0688/comments", "author": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lifthrasiir", "id": 323836, "node_id": "MDQ6VXNlcjMyMzgzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/323836?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lifthrasiir", "html_url": "https://github.com/lifthrasiir", "followers_url": "https://api.github.com/users/lifthrasiir/followers", "following_url": "https://api.github.com/users/lifthrasiir/following{/other_user}", "gists_url": "https://api.github.com/users/lifthrasiir/gists{/gist_id}", "starred_url": "https://api.github.com/users/lifthrasiir/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lifthrasiir/subscriptions", "organizations_url": "https://api.github.com/users/lifthrasiir/orgs", "repos_url": "https://api.github.com/users/lifthrasiir/repos", "events_url": "https://api.github.com/users/lifthrasiir/events{/privacy}", "received_events_url": "https://api.github.com/users/lifthrasiir/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e284eeb21d8276abecd052b8a72e3146e787e95", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e284eeb21d8276abecd052b8a72e3146e787e95", "html_url": "https://github.com/rust-lang/rust/commit/3e284eeb21d8276abecd052b8a72e3146e787e95"}], "stats": {"total": 48, "additions": 32, "deletions": 16}, "files": [{"sha": "cabfe695df714ab255cd198acfe2e2e031b741b2", "filename": "src/librustdoc/clean.rs", "status": "modified", "additions": 16, "deletions": 1, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/3b5d6b4de54cfce8a1897faa8eadb49a2a1d0688/src%2Flibrustdoc%2Fclean.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b5d6b4de54cfce8a1897faa8eadb49a2a1d0688/src%2Flibrustdoc%2Fclean.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean.rs?ref=3b5d6b4de54cfce8a1897faa8eadb49a2a1d0688", "patch": "@@ -152,6 +152,21 @@ impl Item {\n         return None;\n     }\n \n+    pub fn is_hidden_from_doc(&self) -> bool {\n+        match self.doc_list() {\n+            Some(ref l) => {\n+                for innerattr in l.iter() {\n+                    match *innerattr {\n+                        Word(ref s) if \"hidden\" == *s => return true,\n+                        _ => (),\n+                    }\n+                }\n+            },\n+            None => ()\n+        }\n+        return false;\n+    }\n+\n     pub fn is_mod(&self) -> bool {\n         match self.inner { ModuleItem(..) => true, _ => false }\n     }\n@@ -736,7 +751,7 @@ impl Clean<Type> for ast::Ty {\n \n #[deriving(Clone, Encodable, Decodable)]\n pub enum StructField {\n-    HiddenStructField,\n+    HiddenStructField, // inserted later by strip passes\n     TypedStructField(Type),\n }\n "}, {"sha": "f8a2382c0282625a4424b7bc1dc4db92950434dd", "filename": "src/librustdoc/passes.rs", "status": "modified", "additions": 16, "deletions": 15, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/3b5d6b4de54cfce8a1897faa8eadb49a2a1d0688/src%2Flibrustdoc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3b5d6b4de54cfce8a1897faa8eadb49a2a1d0688/src%2Flibrustdoc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses.rs?ref=3b5d6b4de54cfce8a1897faa8eadb49a2a1d0688", "patch": "@@ -33,23 +33,24 @@ pub fn strip_hidden(krate: clean::Crate) -> plugins::PluginResult {\n         };\n         impl<'a> fold::DocFolder for Stripper<'a> {\n             fn fold_item(&mut self, i: Item) -> Option<Item> {\n-                for attr in i.attrs.iter() {\n-                    match attr {\n-                        &clean::List(ref x, ref l) if \"doc\" == *x => {\n-                            for innerattr in l.iter() {\n-                                match innerattr {\n-                                    &clean::Word(ref s) if \"hidden\" == *s => {\n-                                        debug!(\"found one in strip_hidden; removing\");\n-                                        self.stripped.insert(i.id);\n-                                        return None;\n-                                    },\n-                                    _ => (),\n-                                }\n-                            }\n-                        },\n-                        _ => ()\n+                if i.is_hidden_from_doc() {\n+                    debug!(\"found one in strip_hidden; removing\");\n+                    self.stripped.insert(i.id);\n+\n+                    // use a dedicated hidden item for given item type if any\n+                    match i.inner {\n+                        clean::StructFieldItem(..) => {\n+                            return Some(clean::Item {\n+                                inner: clean::StructFieldItem(clean::HiddenStructField),\n+                                ..i\n+                            });\n+                        }\n+                        _ => {\n+                            return None;\n+                        }\n                     }\n                 }\n+\n                 self.fold_item_recur(i)\n             }\n         }"}]}