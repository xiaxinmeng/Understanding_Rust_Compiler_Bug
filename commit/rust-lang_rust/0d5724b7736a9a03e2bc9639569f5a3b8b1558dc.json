{"sha": "0d5724b7736a9a03e2bc9639569f5a3b8b1558dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBkNTcyNGI3NzM2YTlhMDNlMmJjOTYzOTU2OWY1YTNiOGIxNTU4ZGM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-12T06:39:11Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-12-12T06:40:46Z"}, "message": "rustc: Make return value inference use next_ty_var, now that we have it", "tree": {"sha": "3392075b2a99c3471466f5af7803edc35a90d896", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3392075b2a99c3471466f5af7803edc35a90d896"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0d5724b7736a9a03e2bc9639569f5a3b8b1558dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0d5724b7736a9a03e2bc9639569f5a3b8b1558dc", "html_url": "https://github.com/rust-lang/rust/commit/0d5724b7736a9a03e2bc9639569f5a3b8b1558dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0d5724b7736a9a03e2bc9639569f5a3b8b1558dc/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3ab601a89f10490aa61e55149d8c01cc61941a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3ab601a89f10490aa61e55149d8c01cc61941a1", "html_url": "https://github.com/rust-lang/rust/commit/c3ab601a89f10490aa61e55149d8c01cc61941a1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "cc2abcb05ef26bea3d590b094670bf5813ff003c", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/0d5724b7736a9a03e2bc9639569f5a3b8b1558dc/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0d5724b7736a9a03e2bc9639569f5a3b8b1558dc/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=0d5724b7736a9a03e2bc9639569f5a3b8b1558dc", "patch": "@@ -1483,7 +1483,7 @@ fn check_expr(&fn_ctxt fcx, @ast.expr expr) -> @ast.expr {\n                 // FIXME: this breaks aliases. We need a ty_fn_arg.\n                 append[arg](arg_tys_0, rec(mode=ast.val, ty=expr_ty(a_0)));\n             }\n-            auto rt_0 = plain_ty(ty_var(-2));   // FIXME: broken!\n+            auto rt_0 = next_ty_var(fcx);\n             auto t_0 = plain_ty(ty_fn(arg_tys_0, rt_0));\n \n             // Unify and write back to the function."}]}