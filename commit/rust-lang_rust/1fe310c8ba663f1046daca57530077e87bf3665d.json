{"sha": "1fe310c8ba663f1046daca57530077e87bf3665d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmZTMxMGM4YmE2NjNmMTA0NmRhY2E1NzUzMDA3N2U4N2JmMzY2NWQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-13T02:29:16Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-13T02:30:37Z"}, "message": "Memory::read_ptr has to check for relocations on the edges", "tree": {"sha": "1efecbbc97ba7c9e7b0717206d81a62e1e9bc0df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1efecbbc97ba7c9e7b0717206d81a62e1e9bc0df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fe310c8ba663f1046daca57530077e87bf3665d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fe310c8ba663f1046daca57530077e87bf3665d", "html_url": "https://github.com/rust-lang/rust/commit/1fe310c8ba663f1046daca57530077e87bf3665d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fe310c8ba663f1046daca57530077e87bf3665d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fda18f64cdef25daeeecbd7453cd45c47cfacff3", "url": "https://api.github.com/repos/rust-lang/rust/commits/fda18f64cdef25daeeecbd7453cd45c47cfacff3", "html_url": "https://github.com/rust-lang/rust/commit/fda18f64cdef25daeeecbd7453cd45c47cfacff3"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "710912d64d77563ae91e3db7f7670c4eeca514bc", "filename": "src/memory.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/1fe310c8ba663f1046daca57530077e87bf3665d/src%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fe310c8ba663f1046daca57530077e87bf3665d/src%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmemory.rs?ref=1fe310c8ba663f1046daca57530077e87bf3665d", "patch": "@@ -745,6 +745,7 @@ impl<'a, 'tcx> Memory<'a, 'tcx> {\n         if self.check_defined(ptr, size).is_err() {\n             return Ok(PrimVal::Undef.into());\n         }\n+        self.check_relocation_edges(ptr, size)?; // Make sure we don't read part of a pointer as a pointer\n         let endianess = self.endianess();\n         let bytes = self.get_bytes_unchecked(ptr, size, size)?;\n         let offset = read_target_uint(endianess, bytes).unwrap();"}, {"sha": "cc41b52f33372de36972a1b1dc1898d9bd841738", "filename": "tests/compile-fail/reading_half_a_pointer.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/1fe310c8ba663f1046daca57530077e87bf3665d/tests%2Fcompile-fail%2Freading_half_a_pointer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fe310c8ba663f1046daca57530077e87bf3665d/tests%2Fcompile-fail%2Freading_half_a_pointer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Freading_half_a_pointer.rs?ref=1fe310c8ba663f1046daca57530077e87bf3665d", "patch": "@@ -0,0 +1,29 @@\n+#![allow(dead_code)]\n+\n+// We use packed structs to get around alignment restrictions\n+#[repr(packed)]\n+struct Data {\n+    pad: u8,\n+    ptr: &'static i32,\n+}\n+\n+// But we need to gurantee some alignment\n+struct Wrapper {\n+    align: u64,\n+    data: Data,\n+}\n+\n+static G : i32 = 0;\n+\n+fn main() {\n+    let mut w = Wrapper { align: 0, data: Data { pad: 0, ptr: &G } };\n+\n+    // Get a pointer to the beginning of the Data struct (one u8 byte, then the pointer bytes).\n+    // Thanks to the wrapper, we know this is aligned-enough to perform a load at ptr size.\n+    // We load at pointer type, so having a relocation is okay -- but here, the relocation\n+    // starts 1 byte to the right, so using it would actually be wrong!\n+    let d_alias = &mut w.data as *mut _ as *mut *const u8;\n+    unsafe {\n+        let _x = *d_alias; //~ ERROR: tried to access part of a pointer value as raw bytes\n+    }\n+}"}]}