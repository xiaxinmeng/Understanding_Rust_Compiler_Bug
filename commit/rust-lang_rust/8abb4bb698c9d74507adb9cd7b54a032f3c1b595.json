{"sha": "8abb4bb698c9d74507adb9cd7b54a032f3c1b595", "node_id": "C_kwDOAAsO6NoAKDhhYmI0YmI2OThjOWQ3NDUwN2FkYjljZDdiNTRhMDMyZjNjMWI1OTU", "commit": {"author": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2022-01-02T04:48:34Z"}, "committer": {"name": "Jacob Hoffman-Andrews", "email": "github@hoffman-andrews.com", "date": "2022-01-05T17:57:25Z"}, "message": "Move crate drop-down to search results page\n\nThis reduces clutter on doc pages.", "tree": {"sha": "3892e7e39b76b1534ea88685817a3bf642b15703", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3892e7e39b76b1534ea88685817a3bf642b15703"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8abb4bb698c9d74507adb9cd7b54a032f3c1b595", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8abb4bb698c9d74507adb9cd7b54a032f3c1b595", "html_url": "https://github.com/rust-lang/rust/commit/8abb4bb698c9d74507adb9cd7b54a032f3c1b595", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8abb4bb698c9d74507adb9cd7b54a032f3c1b595/comments", "author": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsha", "id": 220205, "node_id": "MDQ6VXNlcjIyMDIwNQ==", "avatar_url": "https://avatars.githubusercontent.com/u/220205?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsha", "html_url": "https://github.com/jsha", "followers_url": "https://api.github.com/users/jsha/followers", "following_url": "https://api.github.com/users/jsha/following{/other_user}", "gists_url": "https://api.github.com/users/jsha/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsha/subscriptions", "organizations_url": "https://api.github.com/users/jsha/orgs", "repos_url": "https://api.github.com/users/jsha/repos", "events_url": "https://api.github.com/users/jsha/events{/privacy}", "received_events_url": "https://api.github.com/users/jsha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3fe91278c340590b462d9c7097e7e64620225b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3fe91278c340590b462d9c7097e7e64620225b7", "html_url": "https://github.com/rust-lang/rust/commit/f3fe91278c340590b462d9c7097e7e64620225b7"}], "stats": {"total": 75, "additions": 40, "deletions": 35}, "files": [{"sha": "7c92156dec25c732fb641b84b004f7237446570f", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8abb4bb698c9d74507adb9cd7b54a032f3c1b595/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/8abb4bb698c9d74507adb9cd7b54a032f3c1b595/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=8abb4bb698c9d74507adb9cd7b54a032f3c1b595", "patch": "@@ -862,18 +862,24 @@ h2.small-section-header > .anchor {\n \tdisplay: inline-flex;\n \twidth: calc(100% - 63px);\n }\n+.search-results-title {\n+\tdisplay: inline;\n+}\n+#search-settings {\n+\tfont-size: 1.5rem;\n+\tfont-weight: 500;\n+\tmargin-bottom: 20px;\n+}\n #crate-search {\n \tmin-width: 115px;\n \tmargin-top: 5px;\n-\tpadding: 6px;\n-\tpadding-right: 19px;\n-\tflex: none;\n+\tmargin-left: 0.2em;\n+\tpadding-left: 0.3em;\n+\tpadding-right: 23px;\n \tborder: 0;\n-\tborder-right: 0;\n-\tborder-radius: 4px 0 0 4px;\n+\tborder-radius: 4px;\n \toutline: none;\n \tcursor: pointer;\n-\tborder-right: 1px solid;\n \t-moz-appearance: none;\n \t-webkit-appearance: none;\n \t/* Removes default arrow from firefox */"}, {"sha": "e859431e1f189e68a7b761d85374b89df4a929a4", "filename": "src/librustdoc/html/static/js/search.js", "status": "modified", "additions": 22, "deletions": 17, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/8abb4bb698c9d74507adb9cd7b54a032f3c1b595/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "raw_url": "https://github.com/rust-lang/rust/raw/8abb4bb698c9d74507adb9cd7b54a032f3c1b595/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsearch.js?ref=8abb4bb698c9d74507adb9cd7b54a032f3c1b595", "patch": "@@ -1085,7 +1085,7 @@ window.initSearch = function(rawSearchIndex) {\n         return \"<button>\" + text + \" <div class=\\\"count\\\">(\" + nbElems + \")</div></button>\";\n     }\n \n-    function showResults(results, go_to_first) {\n+    function showResults(results, go_to_first, filterCrates) {\n         var search = searchState.outputElement();\n         if (go_to_first || (results.others.length === 1\n             && getSettingValue(\"go-to-only-result\") === \"true\"\n@@ -1126,9 +1126,16 @@ window.initSearch = function(rawSearchIndex) {\n             }\n         }\n \n-        var output = \"<h1>Results for \" + escape(query.query) +\n+        let crates = `<select id=\"crate-search\"><option value=\"All crates\">All crates</option>`;\n+        for (let c of window.ALL_CRATES) {\n+            crates += `<option value=\"${c}\" ${c == filterCrates && \"selected\"}>${c}</option>`;\n+        }\n+        crates += `</select>`;\n+        var output = `<div id=\"search-settings\">\n+            <h1 class=\"search-results-title\">Results for ${escape(query.query)} ` +\n             (query.type ? \" (type: \" + escape(query.type) + \")\" : \"\") + \"</h1>\" +\n-            \"<div id=\\\"titles\\\">\" +\n+            ` in ${crates} ` +\n+            `</div><div id=\"titles\">` +\n             makeTabHeader(0, \"In Names\", ret_others[1]) +\n             makeTabHeader(1, \"In Parameters\", ret_in_args[1]) +\n             makeTabHeader(2, \"In Return Types\", ret_returned[1]) +\n@@ -1141,6 +1148,7 @@ window.initSearch = function(rawSearchIndex) {\n         resultsElem.appendChild(ret_returned[0]);\n \n         search.innerHTML = output;\n+        document.getElementById(\"crate-search\").addEventListener(\"input\", updateCrate);\n         search.appendChild(resultsElem);\n         // Reset focused elements.\n         searchState.focusedByTab = [null, null, null];\n@@ -1316,7 +1324,8 @@ window.initSearch = function(rawSearchIndex) {\n         }\n \n         var filterCrates = getFilterCrates();\n-        showResults(execSearch(query, searchWords, filterCrates), params[\"go_to_first\"]);\n+        showResults(execSearch(query, searchWords, filterCrates),\n+            params[\"go_to_first\"], filterCrates);\n     }\n \n     function buildIndex(rawSearchIndex) {\n@@ -1552,19 +1561,6 @@ window.initSearch = function(rawSearchIndex) {\n             }\n         });\n \n-\n-        var selectCrate = document.getElementById(\"crate-search\");\n-        if (selectCrate) {\n-            selectCrate.onchange = function() {\n-                updateLocalStorage(\"rustdoc-saved-filter-crate\", selectCrate.value);\n-                // In case you \"cut\" the entry from the search input, then change the crate filter\n-                // before paste back the previous search, you get the old search results without\n-                // the filter. To prevent this, we need to remove the previous results.\n-                currentResults = null;\n-                search(undefined, true);\n-            };\n-        }\n-\n         // Push and pop states are used to add search results to the browser\n         // history.\n         if (searchState.browserSupportsHistoryApi()) {\n@@ -1616,6 +1612,15 @@ window.initSearch = function(rawSearchIndex) {\n         };\n     }\n \n+    function updateCrate(ev) {\n+        updateLocalStorage(\"rustdoc-saved-filter-crate\", ev.target.value);\n+        // In case you \"cut\" the entry from the search input, then change the crate filter\n+        // before paste back the previous search, you get the old search results without\n+        // the filter. To prevent this, we need to remove the previous results.\n+        currentResults = null;\n+        search(undefined, true);\n+    }\n+\n     searchWords = buildIndex(rawSearchIndex);\n     registerSearchEvents();\n     // If there's a search term in the URL, execute the search now."}, {"sha": "5cade1b1a4c73d370929ef831f7eb2eeca368913", "filename": "src/librustdoc/html/templates/page.html", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8abb4bb698c9d74507adb9cd7b54a032f3c1b595/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "raw_url": "https://github.com/rust-lang/rust/raw/8abb4bb698c9d74507adb9cd7b54a032f3c1b595/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html?ref=8abb4bb698c9d74507adb9cd7b54a032f3c1b595", "patch": "@@ -105,11 +105,7 @@\n                     </div> {#- -#}\n                     <form class=\"search-form\"> {#- -#}\n                         <div class=\"search-container\"> {#- -#}\n-                            <div>{%- if layout.generate_search_filter -%}\n-                                <select id=\"crate-search\"> {#- -#}\n-                                    <option value=\"All crates\">All crates</option> {#- -#}\n-                                </select> {#- -#}\n-                                {%- endif -%}\n+                            <div>\n                                 <input {# -#}\n                                     class=\"search-input\" {# -#}\n                                     name=\"search\" {# -#}"}, {"sha": "712920b16a91babf02b44faa00719b5ec5bf0b5a", "filename": "src/test/rustdoc-gui/escape-key.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8abb4bb698c9d74507adb9cd7b54a032f3c1b595/src%2Ftest%2Frustdoc-gui%2Fescape-key.goml", "raw_url": "https://github.com/rust-lang/rust/raw/8abb4bb698c9d74507adb9cd7b54a032f3c1b595/src%2Ftest%2Frustdoc-gui%2Fescape-key.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fescape-key.goml?ref=8abb4bb698c9d74507adb9cd7b54a032f3c1b595", "patch": "@@ -1,7 +1,7 @@\n goto: file://|DOC_PATH|/test_docs/index.html\n // First, we check that the search results are hidden when the Escape key is pressed.\n write: (\".search-input\", \"test\")\n-wait-for: \"#search > h1\" // The search element is empty before the first search \n+wait-for: \"#search h1\" // The search element is empty before the first search \n assert-attribute: (\"#search\", {\"class\": \"content\"})\n assert-attribute: (\"#main-content\", {\"class\": \"content hidden\"})\n press-key: \"Escape\""}, {"sha": "e5cdf3ea7a1699c3636e58c675bdb50f93122291", "filename": "src/test/rustdoc-gui/search-filter.goml", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8abb4bb698c9d74507adb9cd7b54a032f3c1b595/src%2Ftest%2Frustdoc-gui%2Fsearch-filter.goml", "raw_url": "https://github.com/rust-lang/rust/raw/8abb4bb698c9d74507adb9cd7b54a032f3c1b595/src%2Ftest%2Frustdoc-gui%2Fsearch-filter.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsearch-filter.goml?ref=8abb4bb698c9d74507adb9cd7b54a032f3c1b595", "patch": "@@ -5,14 +5,12 @@ write: (\".search-input\", \"test\")\n wait-for: \"#titles\"\n assert-text: (\"#results .externcrate\", \"test_docs\")\n \n-goto: file://|DOC_PATH|/test_docs/index.html\n+wait-for: \"#crate-search\"\n // We now want to change the crate filter.\n click: \"#crate-search\"\n // We select \"lib2\" option then press enter to change the filter.\n press-key: \"ArrowDown\"\n press-key: \"Enter\"\n-// We now make the search again.\n-write: (\".search-input\", \"test\")\n // Waiting for the search results to appear...\n wait-for: \"#titles\"\n // We check that there is no more \"test_docs\" appearing."}, {"sha": "6e0ad8e0fa7fbcc48020e4bea2b82ae8ac393137", "filename": "src/test/rustdoc-gui/toggle-docs-mobile.goml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8abb4bb698c9d74507adb9cd7b54a032f3c1b595/src%2Ftest%2Frustdoc-gui%2Ftoggle-docs-mobile.goml", "raw_url": "https://github.com/rust-lang/rust/raw/8abb4bb698c9d74507adb9cd7b54a032f3c1b595/src%2Ftest%2Frustdoc-gui%2Ftoggle-docs-mobile.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Ftoggle-docs-mobile.goml?ref=8abb4bb698c9d74507adb9cd7b54a032f3c1b595", "patch": "@@ -1,12 +1,12 @@\n goto: file://|DOC_PATH|/test_docs/struct.Foo.html\n size: (433, 600)\n assert-attribute: (\".top-doc\", {\"open\": \"\"})\n-click: (4, 280) // This is the position of the top doc comment toggle\n+click: (4, 240) // This is the position of the top doc comment toggle\n assert-attribute-false: (\".top-doc\", {\"open\": \"\"})\n-click: (4, 280)\n+click: (4, 240)\n assert-attribute: (\".top-doc\", {\"open\": \"\"})\n // To ensure that the toggle isn't over the text, we check that the toggle isn't clicked.\n-click: (3, 280)\n+click: (3, 240)\n assert-attribute: (\".top-doc\", {\"open\": \"\"})\n \n // Assert the position of the toggle on the top doc block."}]}