{"sha": "6a1a46e8d721fef8f31402e39c401646b1c35d6f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMWE0NmU4ZDcyMWZlZjhmMzE0MDJlMzljNDAxNjQ2YjFjMzVkNmY=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-02-02T09:33:24Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2015-02-02T09:33:24Z"}, "message": "Avoid an excessive use of iterator chain", "tree": {"sha": "4d589bae9329e63a5c4da0d6ca8b245d609e7b58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4d589bae9329e63a5c4da0d6ca8b245d609e7b58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a1a46e8d721fef8f31402e39c401646b1c35d6f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a1a46e8d721fef8f31402e39c401646b1c35d6f", "html_url": "https://github.com/rust-lang/rust/commit/6a1a46e8d721fef8f31402e39c401646b1c35d6f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a1a46e8d721fef8f31402e39c401646b1c35d6f/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ca4b9674c26c1de07a2042cb68e6a062d7184cef", "url": "https://api.github.com/repos/rust-lang/rust/commits/ca4b9674c26c1de07a2042cb68e6a062d7184cef", "html_url": "https://github.com/rust-lang/rust/commit/ca4b9674c26c1de07a2042cb68e6a062d7184cef"}], "stats": {"total": 30, "additions": 15, "deletions": 15}, "files": [{"sha": "d5c0387943874b7537e16b776c2346658fdfc18f", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/6a1a46e8d721fef8f31402e39c401646b1c35d6f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a1a46e8d721fef8f31402e39c401646b1c35d6f/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=6a1a46e8d721fef8f31402e39c401646b1c35d6f", "patch": "@@ -355,21 +355,21 @@ impl Clean<Item> for doctree::Module {\n         } else {\n             \"\".to_string()\n         };\n-        let items: Vec<Item> =\n-                   self.extern_crates.iter().map(|x| x.clean(cx))\n-            .chain(self.imports.iter().flat_map(|x| x.clean(cx).into_iter()))\n-            .chain(self.structs.iter().map(|x| x.clean(cx)))\n-            .chain(self.enums.iter().map(|x| x.clean(cx)))\n-            .chain(self.fns.iter().map(|x| x.clean(cx)))\n-            .chain(self.foreigns.iter().flat_map(|x| x.clean(cx).into_iter()))\n-            .chain(self.mods.iter().map(|x| x.clean(cx)))\n-            .chain(self.typedefs.iter().map(|x| x.clean(cx)))\n-            .chain(self.statics.iter().map(|x| x.clean(cx)))\n-            .chain(self.constants.iter().map(|x| x.clean(cx)))\n-            .chain(self.traits.iter().map(|x| x.clean(cx)))\n-            .chain(self.impls.iter().map(|x| x.clean(cx)))\n-            .chain(self.macros.iter().map(|x| x.clean(cx)))\n-            .collect();\n+\n+        let mut items: Vec<Item> = vec![];\n+        items.extend(self.extern_crates.iter().map(|x| x.clean(cx)));\n+        items.extend(self.imports.iter().flat_map(|x| x.clean(cx).into_iter()));\n+        items.extend(self.structs.iter().map(|x| x.clean(cx)));\n+        items.extend(self.enums.iter().map(|x| x.clean(cx)));\n+        items.extend(self.fns.iter().map(|x| x.clean(cx)));\n+        items.extend(self.foreigns.iter().flat_map(|x| x.clean(cx).into_iter()));\n+        items.extend(self.mods.iter().map(|x| x.clean(cx)));\n+        items.extend(self.typedefs.iter().map(|x| x.clean(cx)));\n+        items.extend(self.statics.iter().map(|x| x.clean(cx)));\n+        items.extend(self.constants.iter().map(|x| x.clean(cx)));\n+        items.extend(self.traits.iter().map(|x| x.clean(cx)));\n+        items.extend(self.impls.iter().map(|x| x.clean(cx)));\n+        items.extend(self.macros.iter().map(|x| x.clean(cx)));\n \n         // determine if we should display the inner contents or\n         // the outer `mod` item for the source code."}]}