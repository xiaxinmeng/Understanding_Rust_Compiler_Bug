{"sha": "f02643001f84f72962c01a924dd72fe5f2b00cfd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYwMjY0MzAwMWY4NGY3Mjk2MmMwMWE5MjRkZDcyZmU1ZjJiMDBjZmQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-06T08:28:46Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-12-06T08:31:40Z"}, "message": "README: Miri now supports panics and FS access", "tree": {"sha": "a9acc9eecbe76082037f9f680500700e97752d93", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a9acc9eecbe76082037f9f680500700e97752d93"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f02643001f84f72962c01a924dd72fe5f2b00cfd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f02643001f84f72962c01a924dd72fe5f2b00cfd", "html_url": "https://github.com/rust-lang/rust/commit/f02643001f84f72962c01a924dd72fe5f2b00cfd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f02643001f84f72962c01a924dd72fe5f2b00cfd/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a0ba079b6af0f8c07c33dd8af72a51c997e58967", "url": "https://api.github.com/repos/rust-lang/rust/commits/a0ba079b6af0f8c07c33dd8af72a51c997e58967", "html_url": "https://github.com/rust-lang/rust/commit/a0ba079b6af0f8c07c33dd8af72a51c997e58967"}], "stats": {"total": 16, "additions": 7, "deletions": 9}, "files": [{"sha": "7fd94a2811a94b25270a4bf2e503303c3771e795", "filename": "README.md", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f02643001f84f72962c01a924dd72fe5f2b00cfd/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/f02643001f84f72962c01a924dd72fe5f2b00cfd/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=f02643001f84f72962c01a924dd72fe5f2b00cfd", "patch": "@@ -39,10 +39,9 @@ program, and cannot run all programs:\n   addresses or other non-deterministic data, try running Miri with different\n   values for `-Zmiri-seed` to test different executions.\n * Miri runs the program as a platform-independent interpreter, so the program\n-  has no access to any platform-specific APIs or FFI. A few APIs have been\n+  has no access to most platform-specific APIs or FFI. A few APIs have been\n   implemented (such as printing to stdout) but most have not: for example, Miri\n-  currently does not support concurrency, or SIMD, or networking, or file system\n-  access.\n+  currently does not support concurrency, or SIMD, or networking.\n \n [rust]: https://www.rust-lang.org/\n [mir]: https://github.com/rust-lang/rfcs/blob/master/text/1211-mir.md\n@@ -78,9 +77,7 @@ dependencies.  It will ask you for confirmation before installing anything.\n You can pass arguments to Miri after the first `--`, and pass arguments to the\n interpreted program or test suite after the second `--`.  For example, `cargo\n miri run -- -Zmiri-disable-validation` runs the program without validation of\n-basic type invariants and references.  `cargo miri test -- -- -Zunstable-options\n---exclude-should-panic` skips `#[should_panic]` tests, which is a good idea\n-because Miri does not support unwinding or catching panics.\n+basic type invariants and references.\n \n When running code via `cargo miri`, the `miri` config flag is set.  You can\n use this to exclude test cases that will fail under Miri because they do things\n@@ -90,8 +87,9 @@ Miri does not support:\n #[cfg(not(miri))]\n #[test]\n fn does_not_work_on_miri() {\n-    let x = 0u8;\n-    assert!(&x as *const _ as usize % 4 < 4);\n+    std::thread::spawn(|| println!(\"Hello Thread!\"))\n+        .join()\n+        .unwrap();\n }\n ```\n \n@@ -111,7 +109,7 @@ rustup default \"$MIRI_NIGHTLY\"\n rustup component add miri\n cargo miri setup\n \n-cargo miri test -- -- -Zunstable-options --exclude-should-panic\n+cargo miri test\n ```\n \n We use `cargo miri setup` to avoid getting interactive questions about the extra"}]}