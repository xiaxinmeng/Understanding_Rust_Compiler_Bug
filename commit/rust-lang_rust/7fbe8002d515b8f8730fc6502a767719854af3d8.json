{"sha": "7fbe8002d515b8f8730fc6502a767719854af3d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdmYmU4MDAyZDUxNWI4Zjg3MzBmYzY1MDJhNzY3NzE5ODU0YWYzZDg=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2013-07-23T07:37:00Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-07-24T13:45:21Z"}, "message": "Fix a crash when transmuting non-immediate to immediate types\n\nThe code to build the transmute intrinsic currently makes the invalid\nassumption that if the in-type is non-immediate, the out-type is\nnon-immediate as well. But this is wrong, for example when transmuting\n[int, ..1] to int. So we need to handle this fourth case as well.\n\nFixes #7988", "tree": {"sha": "22be28438b500669b8af2c2adbbe8a73da481d08", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/22be28438b500669b8af2c2adbbe8a73da481d08"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7fbe8002d515b8f8730fc6502a767719854af3d8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7fbe8002d515b8f8730fc6502a767719854af3d8", "html_url": "https://github.com/rust-lang/rust/commit/7fbe8002d515b8f8730fc6502a767719854af3d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7fbe8002d515b8f8730fc6502a767719854af3d8/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "254339fd3974417999147ac6c4f23c80e7ad8ab4", "url": "https://api.github.com/repos/rust-lang/rust/commits/254339fd3974417999147ac6c4f23c80e7ad8ab4", "html_url": "https://github.com/rust-lang/rust/commit/254339fd3974417999147ac6c4f23c80e7ad8ab4"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "372d24e664cf87f34beb2a1c0672fecee9306fa8", "filename": "src/librustc/middle/trans/foreign.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7fbe8002d515b8f8730fc6502a767719854af3d8/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fbe8002d515b8f8730fc6502a767719854af3d8/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fforeign.rs?ref=7fbe8002d515b8f8730fc6502a767719854af3d8", "patch": "@@ -805,6 +805,9 @@ pub fn trans_intrinsic(ccx: @mut CrateContext,\n                             _ => Ret(bcx, BitCast(bcx, llsrcval, llouttype))\n                         }\n                     }\n+                } else if ty::type_is_immediate(ccx.tcx, out_type) {\n+                    let llsrcptr = PointerCast(bcx, llsrcval, llouttype.ptr_to());\n+                    Ret(bcx, Load(bcx, llsrcptr));\n                 } else {\n                     // NB: Do not use a Load and Store here. This causes massive\n                     // code bloat when `transmute` is used on large structural"}, {"sha": "57844e7d860c276d5b62e27eb2cb0b3efc8ed0b0", "filename": "src/test/run-pass/transmute-non-immediate-to-immediate.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7fbe8002d515b8f8730fc6502a767719854af3d8/src%2Ftest%2Frun-pass%2Ftransmute-non-immediate-to-immediate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7fbe8002d515b8f8730fc6502a767719854af3d8/src%2Ftest%2Frun-pass%2Ftransmute-non-immediate-to-immediate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftransmute-non-immediate-to-immediate.rs?ref=7fbe8002d515b8f8730fc6502a767719854af3d8", "patch": "@@ -0,0 +1,18 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Issue #7988\n+// Transmuting non-immediate type to immediate type\n+\n+fn main() {\n+    unsafe {\n+        std::cast::transmute::<[int,..1],int>([1])\n+    };\n+}"}]}