{"sha": "6fb314ed7d7b3974cd0d4ba5bc0ca724037cc26a", "node_id": "C_kwDOAAsO6NoAKDZmYjMxNGVkN2Q3YjM5NzRjZDBkNGJhNWJjMGNhNzI0MDM3Y2MyNmE", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-12-24T08:09:34Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-12-24T09:08:27Z"}, "message": "add lib tests for vec::IntoIter alignment issues", "tree": {"sha": "2c73079565868245dcf2ab8bf0467c3c6cc8308f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2c73079565868245dcf2ab8bf0467c3c6cc8308f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6fb314ed7d7b3974cd0d4ba5bc0ca724037cc26a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6fb314ed7d7b3974cd0d4ba5bc0ca724037cc26a", "html_url": "https://github.com/rust-lang/rust/commit/6fb314ed7d7b3974cd0d4ba5bc0ca724037cc26a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6fb314ed7d7b3974cd0d4ba5bc0ca724037cc26a/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f4d0586ad20c66a16d547581ca379beafece93a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f4d0586ad20c66a16d547581ca379beafece93a", "html_url": "https://github.com/rust-lang/rust/commit/4f4d0586ad20c66a16d547581ca379beafece93a"}], "stats": {"total": 29, "additions": 27, "deletions": 2}, "files": [{"sha": "87adcead8f62d69ba7dbcdcb4c5f331aa276b414", "filename": "library/alloc/tests/vec.rs", "status": "modified", "additions": 27, "deletions": 2, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6fb314ed7d7b3974cd0d4ba5bc0ca724037cc26a/library%2Falloc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6fb314ed7d7b3974cd0d4ba5bc0ca724037cc26a/library%2Falloc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec.rs?ref=6fb314ed7d7b3974cd0d4ba5bc0ca724037cc26a", "patch": "@@ -7,7 +7,9 @@ use std::borrow::Cow;\n use std::cell::Cell;\n use std::collections::TryReserveErrorKind::*;\n use std::fmt::Debug;\n+use std::hint;\n use std::iter::InPlaceIterable;\n+use std::mem;\n use std::mem::{size_of, swap};\n use std::ops::Bound::*;\n use std::panic::{catch_unwind, AssertUnwindSafe};\n@@ -1107,8 +1109,31 @@ fn test_into_iter_drop_allocator() {\n \n #[test]\n fn test_into_iter_zst() {\n-    for _ in vec![[0u64; 0]].into_iter() {}\n-    for _ in vec![[0u64; 0]; 5].into_iter().rev() {}\n+    #[derive(Debug, Clone)]\n+    struct AlignedZstWithDrop([u64; 0]);\n+    impl Drop for AlignedZstWithDrop {\n+        fn drop(&mut self) {\n+            let addr = self as *mut _ as usize;\n+            assert!(hint::black_box(addr) % mem::align_of::<u64>() == 0);\n+        }\n+    }\n+\n+    const C: AlignedZstWithDrop = AlignedZstWithDrop([0u64; 0]);\n+\n+    for _ in vec![C].into_iter() {}\n+    for _ in vec![C; 5].into_iter().rev() {}\n+\n+    let mut it = vec![C, C].into_iter();\n+    it.advance_by(1).unwrap();\n+    drop(it);\n+\n+    let mut it = vec![C, C].into_iter();\n+    it.next_chunk::<1>().unwrap();\n+    drop(it);\n+\n+    let mut it = vec![C, C].into_iter();\n+    it.next_chunk::<4>().unwrap_err();\n+    drop(it);\n }\n \n #[test]"}]}