{"sha": "14bc45477085222dcf2b87bef75ca3e7d0b5274a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0YmM0NTQ3NzA4NTIyMmRjZjJiODdiZWY3NWNhM2U3ZDBiNTI3NGE=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-20T22:36:50Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-20T22:36:50Z"}, "message": "remove redundant explanation", "tree": {"sha": "4c98e9f7aa899ae906116e6011ae9217f6af7320", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c98e9f7aa899ae906116e6011ae9217f6af7320"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/14bc45477085222dcf2b87bef75ca3e7d0b5274a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/14bc45477085222dcf2b87bef75ca3e7d0b5274a", "html_url": "https://github.com/rust-lang/rust/commit/14bc45477085222dcf2b87bef75ca3e7d0b5274a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/14bc45477085222dcf2b87bef75ca3e7d0b5274a/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06ded9c04e23ceaa41a4a5d01dd54432aaafd0db", "url": "https://api.github.com/repos/rust-lang/rust/commits/06ded9c04e23ceaa41a4a5d01dd54432aaafd0db", "html_url": "https://github.com/rust-lang/rust/commit/06ded9c04e23ceaa41a4a5d01dd54432aaafd0db"}], "stats": {"total": 17, "additions": 1, "deletions": 16}, "files": [{"sha": "a9c1917feb9c64213ceab007a5311a037452298a", "filename": "src/doc/tarpl/vec-into-iter.md", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/14bc45477085222dcf2b87bef75ca3e7d0b5274a/src%2Fdoc%2Ftarpl%2Fvec-into-iter.md", "raw_url": "https://github.com/rust-lang/rust/raw/14bc45477085222dcf2b87bef75ca3e7d0b5274a/src%2Fdoc%2Ftarpl%2Fvec-into-iter.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftarpl%2Fvec-into-iter.md?ref=14bc45477085222dcf2b87bef75ca3e7d0b5274a", "patch": "@@ -51,22 +51,7 @@ struct IntoIter<T> {\n }\n ```\n \n-One last subtle detail: if our Vec is empty, we want to produce an empty\n-iterator. This will actually technically fall out doing the naive thing of:\n-\n-```text\n-start = ptr\n-end = ptr.offset(len)\n-```\n-\n-However because `offset` is marked as a GEP inbounds instruction, this will tell\n-LLVM that ptr is allocated and won't alias other allocated memory. This is fine\n-for zero-sized types, as they can't alias anything. However if we're using\n-`heap::EMPTY` as a sentinel for a non-allocation for a *non-zero-sized* type,\n-this can cause Undefined Behaviour. Alas, we must therefore special case either\n-cap or len being 0 to not do the offset.\n-\n-So this is what we end up with for initialization:\n+And this is what we end up with for initialization:\n \n ```rust,ignore\n impl<T> Vec<T> {"}]}