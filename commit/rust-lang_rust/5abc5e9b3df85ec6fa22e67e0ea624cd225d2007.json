{"sha": "5abc5e9b3df85ec6fa22e67e0ea624cd225d2007", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhYmM1ZTliM2RmODVlYzZmYTIyZTY3ZTBlYTYyNGNkMjI1ZDIwMDc=", "commit": {"author": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-10-01T07:22:52Z"}, "committer": {"name": "Guanqun Lu", "email": "guanqun.lu@gmail.com", "date": "2019-10-02T01:06:37Z"}, "message": "add FIXME and use 'span_label'", "tree": {"sha": "c3855b0a4f3af1ba73e0f5bb4a3d12aa0f733c2b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c3855b0a4f3af1ba73e0f5bb4a3d12aa0f733c2b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5abc5e9b3df85ec6fa22e67e0ea624cd225d2007", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5abc5e9b3df85ec6fa22e67e0ea624cd225d2007", "html_url": "https://github.com/rust-lang/rust/commit/5abc5e9b3df85ec6fa22e67e0ea624cd225d2007", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5abc5e9b3df85ec6fa22e67e0ea624cd225d2007/comments", "author": null, "committer": null, "parents": [{"sha": "4cb86c908989087dca7d3ad2b5c9029c62aaf852", "url": "https://api.github.com/repos/rust-lang/rust/commits/4cb86c908989087dca7d3ad2b5c9029c62aaf852", "html_url": "https://github.com/rust-lang/rust/commit/4cb86c908989087dca7d3ad2b5c9029c62aaf852"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e9a8a52857ab3a8cecfbfccb372c41783bf2ffde", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5abc5e9b3df85ec6fa22e67e0ea624cd225d2007/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5abc5e9b3df85ec6fa22e67e0ea624cd225d2007/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=5abc5e9b3df85ec6fa22e67e0ea624cd225d2007", "patch": "@@ -519,11 +519,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 }\n \n                 if item_name.as_str() == \"as_str\" && actual.peel_refs().is_str() {\n-                    err.span_suggestion(\n+                    // FIXME: the span is not quite correct, it should point to \".as_str()\" instead\n+                    // of just \"as_str\".\n+                    err.span_label(\n                         span,\n-                        \"try removing `as_str`\",\n-                        String::new(),\n-                        Applicability::MaybeIncorrect,\n+                        \"try removing `as_str`\"\n                     );\n                 } else if let Some(lev_candidate) = lev_candidate {\n                     let def_kind = lev_candidate.def_kind();"}]}