{"sha": "478cf8b3a455db83473d89f8d856ae309974e4ee", "node_id": "C_kwDOAAsO6NoAKDQ3OGNmOGIzYTQ1NWRiODM0NzNkODlmOGQ4NTZhZTMwOTk3NGU0ZWU", "commit": {"author": {"name": "Tavian Barnes", "email": "tavianator@tavianator.com", "date": "2022-02-23T01:41:13Z"}, "committer": {"name": "Tavian Barnes", "email": "tavianator@tavianator.com", "date": "2022-02-23T14:51:02Z"}, "message": "fs: Don't dereference a pointer to a too-small allocation\n\nptr::addr_of!((*ptr).field) still requires ptr to point to an\nappropriate allocation for its type.  Since the pointer returned by\nreaddir() can be smaller than sizeof(struct dirent), we need to entirely\navoid dereferencing it as that type.\n\nLink: https://github.com/rust-lang/miri/pull/1981#issuecomment-1048278492\nLink: https://github.com/rust-lang/rust/pull/93459#discussion_r795089971", "tree": {"sha": "7278228180517e8152233f899aa5b138c01e192d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7278228180517e8152233f899aa5b138c01e192d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/478cf8b3a455db83473d89f8d856ae309974e4ee", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/478cf8b3a455db83473d89f8d856ae309974e4ee", "html_url": "https://github.com/rust-lang/rust/commit/478cf8b3a455db83473d89f8d856ae309974e4ee", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/478cf8b3a455db83473d89f8d856ae309974e4ee/comments", "author": {"login": "tavianator", "id": 1692591, "node_id": "MDQ6VXNlcjE2OTI1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1692591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tavianator", "html_url": "https://github.com/tavianator", "followers_url": "https://api.github.com/users/tavianator/followers", "following_url": "https://api.github.com/users/tavianator/following{/other_user}", "gists_url": "https://api.github.com/users/tavianator/gists{/gist_id}", "starred_url": "https://api.github.com/users/tavianator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tavianator/subscriptions", "organizations_url": "https://api.github.com/users/tavianator/orgs", "repos_url": "https://api.github.com/users/tavianator/repos", "events_url": "https://api.github.com/users/tavianator/events{/privacy}", "received_events_url": "https://api.github.com/users/tavianator/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tavianator", "id": 1692591, "node_id": "MDQ6VXNlcjE2OTI1OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1692591?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tavianator", "html_url": "https://github.com/tavianator", "followers_url": "https://api.github.com/users/tavianator/followers", "following_url": "https://api.github.com/users/tavianator/following{/other_user}", "gists_url": "https://api.github.com/users/tavianator/gists{/gist_id}", "starred_url": "https://api.github.com/users/tavianator/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tavianator/subscriptions", "organizations_url": "https://api.github.com/users/tavianator/orgs", "repos_url": "https://api.github.com/users/tavianator/repos", "events_url": "https://api.github.com/users/tavianator/events{/privacy}", "received_events_url": "https://api.github.com/users/tavianator/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5bd1ec3283874b97b27da4539b2950fbd01c4b0e", "url": "https://api.github.com/repos/rust-lang/rust/commits/5bd1ec3283874b97b27da4539b2950fbd01c4b0e", "html_url": "https://github.com/rust-lang/rust/commit/5bd1ec3283874b97b27da4539b2950fbd01c4b0e"}], "stats": {"total": 14, "additions": 9, "deletions": 5}, "files": [{"sha": "3d0162940a6643d936762ef01a5ebaed2005a839", "filename": "library/std/src/sys/unix/fs.rs", "status": "modified", "additions": 9, "deletions": 5, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/478cf8b3a455db83473d89f8d856ae309974e4ee/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/478cf8b3a455db83473d89f8d856ae309974e4ee/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Funix%2Ffs.rs?ref=478cf8b3a455db83473d89f8d856ae309974e4ee", "patch": "@@ -491,14 +491,18 @@ impl Iterator for ReadDir {\n \n                 // Only d_reclen bytes of *entry_ptr are valid, so we can't just copy the\n                 // whole thing (#93384).  Instead, copy everything except the name.\n+                let mut copy: dirent64 = mem::zeroed();\n+                // Can't dereference entry_ptr, so use the local entry to get\n+                // offsetof(struct dirent, d_name)\n+                let copy_bytes = &mut copy as *mut _ as *mut u8;\n+                let copy_name = &mut copy.d_name as *mut _ as *mut u8;\n+                let name_offset = copy_name.offset_from(copy_bytes) as usize;\n                 let entry_bytes = entry_ptr as *const u8;\n-                let entry_name = ptr::addr_of!((*entry_ptr).d_name) as *const u8;\n-                let name_offset = entry_name.offset_from(entry_bytes) as usize;\n-                let mut entry: dirent64 = mem::zeroed();\n-                ptr::copy_nonoverlapping(entry_bytes, &mut entry as *mut _ as *mut u8, name_offset);\n+                let entry_name = entry_bytes.add(name_offset);\n+                ptr::copy_nonoverlapping(entry_bytes, copy_bytes, name_offset);\n \n                 let ret = DirEntry {\n-                    entry,\n+                    entry: copy,\n                     // d_name is guaranteed to be null-terminated.\n                     name: CStr::from_ptr(entry_name as *const _).to_owned(),\n                     dir: Arc::clone(&self.inner),"}]}