{"sha": "fa12fdbc2974f201fcfd210e8dab74a469b26857", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhMTJmZGJjMjk3NGYyMDFmY2ZkMjEwZThkYWI3NGE0NjliMjY4NTc=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-23T16:55:39Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-01-23T16:55:39Z"}, "message": "Fix review comments", "tree": {"sha": "5e517bcdf4d08a3b423380e8c262f8952f1f516b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e517bcdf4d08a3b423380e8c262f8952f1f516b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa12fdbc2974f201fcfd210e8dab74a469b26857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa12fdbc2974f201fcfd210e8dab74a469b26857", "html_url": "https://github.com/rust-lang/rust/commit/fa12fdbc2974f201fcfd210e8dab74a469b26857", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa12fdbc2974f201fcfd210e8dab74a469b26857/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c3367dbc6fc326871fd6cd10ad48beb610596aac", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3367dbc6fc326871fd6cd10ad48beb610596aac", "html_url": "https://github.com/rust-lang/rust/commit/c3367dbc6fc326871fd6cd10ad48beb610596aac"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "ef467ed6514549a834bf8872ee11ce06c891a478", "filename": "compiler/rustc_middle/src/ty/layout.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fa12fdbc2974f201fcfd210e8dab74a469b26857/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa12fdbc2974f201fcfd210e8dab74a469b26857/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Flayout.rs?ref=fa12fdbc2974f201fcfd210e8dab74a469b26857", "patch": "@@ -2736,13 +2736,14 @@ where\n         let arg_of = |ty: Ty<'tcx>, arg_idx: Option<usize>| {\n             let is_return = arg_idx.is_none();\n \n+            let layout = cx.layout_of(ty);\n             let layout = if force_thin_self_ptr && arg_idx == Some(0) {\n                 // Don't pass the vtable, it's not an argument of the virtual fn.\n                 // Instead, pass just the data pointer, but give it the type `*const/mut dyn Trait`\n                 // or `&/&mut dyn Trait` because this is special-cased elsewhere in codegen\n-                make_thin_self_ptr(cx, cx.layout_of(ty))\n+                make_thin_self_ptr(cx, layout)\n             } else {\n-                cx.layout_of(ty)\n+                layout\n             };\n \n             let mut arg = ArgAbi::new(cx, layout, |layout, scalar, offset| {\n@@ -2842,11 +2843,9 @@ where\n                 let max_by_val_size = Pointer.size(cx) * 2;\n                 let size = arg.layout.size;\n \n-                assert!(\n-                    matches!(arg.mode, PassMode::Indirect { on_stack: false, .. }),\n-                    \"{:?}\",\n-                    arg\n-                );\n+                let is_indirect_not_on_stack =\n+                    matches!(arg.mode, PassMode::Indirect { on_stack: false, .. });\n+                assert!(is_indirect_not_on_stack, \"{:?}\", arg);\n                 if !arg.layout.is_unsized() && size <= max_by_val_size {\n                     // We want to pass small aggregates as immediates, but using\n                     // a LLVM aggregate type for this leads to bad optimizations,"}]}