{"sha": "6f71cab3b0d5c1fb88f5850642bb036677e3484e", "node_id": "C_kwDOAAsO6NoAKDZmNzFjYWIzYjBkNWMxZmI4OGY1ODUwNjQyYmIwMzY2NzdlMzQ4NGU", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2021-09-24T17:32:30Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2021-10-15T17:50:33Z"}, "message": "Normalize regions before comparing them for member constraints", "tree": {"sha": "c9d46864ea058a8db909e8a9c1f8b31998e498aa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c9d46864ea058a8db909e8a9c1f8b31998e498aa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f71cab3b0d5c1fb88f5850642bb036677e3484e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f71cab3b0d5c1fb88f5850642bb036677e3484e", "html_url": "https://github.com/rust-lang/rust/commit/6f71cab3b0d5c1fb88f5850642bb036677e3484e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f71cab3b0d5c1fb88f5850642bb036677e3484e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5115069ccd46e8ce18d177f8181e06f1ae14bb44", "url": "https://api.github.com/repos/rust-lang/rust/commits/5115069ccd46e8ce18d177f8181e06f1ae14bb44", "html_url": "https://github.com/rust-lang/rust/commit/5115069ccd46e8ce18d177f8181e06f1ae14bb44"}], "stats": {"total": 24, "additions": 17, "deletions": 7}, "files": [{"sha": "2fa69083b8da17c7e978929ce0d46137a57a7312", "filename": "compiler/rustc_infer/src/infer/lexical_region_resolve/mod.rs", "status": "modified", "additions": 17, "deletions": 7, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/6f71cab3b0d5c1fb88f5850642bb036677e3484e/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f71cab3b0d5c1fb88f5850642bb036677e3484e/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Flexical_region_resolve%2Fmod.rs?ref=6f71cab3b0d5c1fb88f5850642bb036677e3484e", "patch": "@@ -297,13 +297,23 @@ impl<'cx, 'tcx> LexicalResolver<'cx, 'tcx> {\n         // Get an iterator over the *available choice* -- that is,\n         // each choice region `c` where `lb <= c` and `c <= ub` for all the\n         // upper bounds `ub`.\n-        debug!(\"enforce_member_constraint: upper_bounds={:#?}\", member_upper_bounds);\n-        let mut options = member_constraint.choice_regions.iter().filter(|option| {\n-            self.sub_concrete_regions(member_lower_bound, option)\n-                && member_upper_bounds\n-                    .iter()\n-                    .all(|upper_bound| self.sub_concrete_regions(option, upper_bound.region))\n-        });\n+        debug!(\"upper_bounds={:#?}\", member_upper_bounds);\n+        let mut options = member_constraint\n+            .choice_regions\n+            .iter()\n+            .filter_map(|option| match option {\n+                ty::ReVar(vid) => match var_values.value(*vid) {\n+                    VarValue::ErrorValue => None,\n+                    VarValue::Value(r) => Some(r),\n+                },\n+                r => Some(r),\n+            })\n+            .filter(|option| {\n+                self.sub_concrete_regions(member_lower_bound, option)\n+                    && member_upper_bounds\n+                        .iter()\n+                        .all(|upper_bound| self.sub_concrete_regions(option, upper_bound.region))\n+            });\n \n         // If there is more than one option, we only make a choice if\n         // there is a single *least* choice -- i.e., some available"}]}