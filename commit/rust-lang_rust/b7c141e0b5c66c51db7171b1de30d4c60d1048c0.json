{"sha": "b7c141e0b5c66c51db7171b1de30d4c60d1048c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3YzE0MWUwYjVjNjZjNTFkYjcxNzFiMWRlMzBkNGM2MGQxMDQ4YzA=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-28T19:59:18Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-28T19:59:18Z"}, "message": "Parse enums", "tree": {"sha": "f73695cfca44f775f913391084c9079add4a041e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f73695cfca44f775f913391084c9079add4a041e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7c141e0b5c66c51db7171b1de30d4c60d1048c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7c141e0b5c66c51db7171b1de30d4c60d1048c0", "html_url": "https://github.com/rust-lang/rust/commit/b7c141e0b5c66c51db7171b1de30d4c60d1048c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ab81e4c7b4383a153145752059be59e17571fad3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ab81e4c7b4383a153145752059be59e17571fad3", "html_url": "https://github.com/rust-lang/rust/commit/ab81e4c7b4383a153145752059be59e17571fad3"}], "stats": {"total": 195, "additions": 194, "deletions": 1}, "files": [{"sha": "d7fea44fbe0868a386ab63ab3fa50b70cc78df38", "filename": "grammar.ron", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/grammar.ron", "raw_url": "https://github.com/rust-lang/rust/raw/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/grammar.ron", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/grammar.ron?ref=b7c141e0b5c66c51db7171b1de30d4c60d1048c0", "patch": "@@ -74,6 +74,8 @@ Grammar(\n     nodes: [\n         \"FILE\",\n         \"STRUCT_ITEM\",\n+        \"ENUM_ITEM\",\n+        \"ENUM_VARIANT\",\n         \"NAMED_FIELD\",\n         \"POS_FIELD\",\n         \"FN_ITEM\","}, {"sha": "8caaf35538915da0a62536ac23658fa9638c7ca5", "filename": "src/parser/event_parser/grammar/expressions.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/src%2Fparser%2Fevent_parser%2Fgrammar%2Fexpressions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/src%2Fparser%2Fevent_parser%2Fgrammar%2Fexpressions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fexpressions.rs?ref=b7c141e0b5c66c51db7171b1de30d4c60d1048c0", "patch": "@@ -12,3 +12,9 @@ pub(super) fn literal(p: &mut Parser) -> bool {\n         _ => false,\n     }\n }\n+\n+pub(super) fn expr(p: &mut Parser) {\n+    if !literal(p) {\n+        p.error().message(\"expected expression\").emit();\n+    }\n+}"}, {"sha": "886c02d37118c0e52750f3b8926ef114c2c04ed7", "filename": "src/parser/event_parser/grammar/items/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems%2Fmod.rs?ref=b7c141e0b5c66c51db7171b1de30d4c60d1048c0", "patch": "@@ -10,7 +10,7 @@ pub(super) fn mod_contents(p: &mut Parser, stop_on_r_curly: bool) {\n }\n \n pub(super) const ITEM_FIRST: TokenSet =\n-    token_set![EXTERN_KW, MOD_KW, USE_KW, STRUCT_KW, FN_KW, PUB_KW, POUND,];\n+    token_set![EXTERN_KW, MOD_KW, USE_KW, STRUCT_KW, ENUM_KW, FN_KW, PUB_KW, POUND];\n \n fn item(p: &mut Parser) {\n     let item = p.start();\n@@ -34,6 +34,10 @@ fn item(p: &mut Parser) {\n             structs::struct_item(p);\n             STRUCT_ITEM\n         }\n+        ENUM_KW => {\n+            structs::enum_item(p);\n+            ENUM_ITEM\n+        }\n         FN_KW => {\n             fn_item(p);\n             FN_ITEM"}, {"sha": "670406071a51a147da5c206bb043d4f6eb3163db", "filename": "src/parser/event_parser/grammar/items/structs.rs", "status": "modified", "additions": 34, "deletions": 0, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems%2Fstructs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems%2Fstructs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fparser%2Fevent_parser%2Fgrammar%2Fitems%2Fstructs.rs?ref=b7c141e0b5c66c51db7171b1de30d4c60d1048c0", "patch": "@@ -40,6 +40,40 @@ pub(super) fn struct_item(p: &mut Parser) {\n     }\n }\n \n+pub(super) fn enum_item(p: &mut Parser) {\n+    assert!(p.at(ENUM_KW));\n+    p.bump();\n+    p.expect(IDENT);\n+    type_param_list(p);\n+    where_clause(p);\n+    if p.expect(L_CURLY) {\n+        while !p.at(EOF) && !p.at(R_CURLY) {\n+            let var = p.start();\n+            attributes::outer_attributes(p);\n+            if p.at(IDENT) {\n+                p.bump();\n+                match p.current() {\n+                    L_CURLY => named_fields(p),\n+                    L_PAREN => pos_fields(p),\n+                    EQ => {\n+                        p.bump();\n+                        expressions::expr(p);\n+                    }\n+                    _ => ()\n+                }\n+                var.complete(p, ENUM_VARIANT);\n+            } else {\n+                var.abandon(p);\n+                p.err_and_bump(\"expected enum variant\");\n+            }\n+            if !p.at(R_CURLY) {\n+                p.expect(COMMA);\n+            }\n+        }\n+        p.expect(R_CURLY);\n+    }\n+}\n+\n fn named_fields(p: &mut Parser) {\n     assert!(p.at(L_CURLY));\n     p.bump();"}, {"sha": "519326f48ae8fe6a59915dcf6aa28cd1e0092e2b", "filename": "src/syntax_kinds.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/src%2Fsyntax_kinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/src%2Fsyntax_kinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsyntax_kinds.rs?ref=b7c141e0b5c66c51db7171b1de30d4c60d1048c0", "patch": "@@ -76,6 +76,8 @@ pub enum SyntaxKind {\n     SHEBANG,\n     FILE,\n     STRUCT_ITEM,\n+    ENUM_ITEM,\n+    ENUM_VARIANT,\n     NAMED_FIELD,\n     POS_FIELD,\n     FN_ITEM,\n@@ -176,6 +178,8 @@ impl SyntaxKind {\n             SHEBANG => &SyntaxInfo { name: \"SHEBANG\" },\n             FILE => &SyntaxInfo { name: \"FILE\" },\n             STRUCT_ITEM => &SyntaxInfo { name: \"STRUCT_ITEM\" },\n+            ENUM_ITEM => &SyntaxInfo { name: \"ENUM_ITEM\" },\n+            ENUM_VARIANT => &SyntaxInfo { name: \"ENUM_VARIANT\" },\n             NAMED_FIELD => &SyntaxInfo { name: \"NAMED_FIELD\" },\n             POS_FIELD => &SyntaxInfo { name: \"POS_FIELD\" },\n             FN_ITEM => &SyntaxInfo { name: \"FN_ITEM\" },"}, {"sha": "7a1afa0e62f183bd5ca5ad256984653c310b01de", "filename": "tests/data/parser/ok/0019_enums.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/tests%2Fdata%2Fparser%2Fok%2F0019_enums.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/tests%2Fdata%2Fparser%2Fok%2F0019_enums.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0019_enums.rs?ref=b7c141e0b5c66c51db7171b1de30d4c60d1048c0", "patch": "@@ -0,0 +1,25 @@\n+enum E1 {\n+}\n+\n+enum E2<T> {\n+}\n+\n+enum E3 {\n+    X\n+}\n+\n+enum E4 {\n+    X,\n+}\n+\n+enum E5 {\n+    A,\n+    B = 92,\n+    C {\n+        a: u32,\n+        pub b: f64,\n+    },\n+    F {},\n+    D(u32,),\n+    E(),\n+}"}, {"sha": "a864f72c744a5de9b47e2d503a1b38094ad08c42", "filename": "tests/data/parser/ok/0019_enums.txt", "status": "added", "additions": 118, "deletions": 0, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/tests%2Fdata%2Fparser%2Fok%2F0019_enums.txt", "raw_url": "https://github.com/rust-lang/rust/raw/b7c141e0b5c66c51db7171b1de30d4c60d1048c0/tests%2Fdata%2Fparser%2Fok%2F0019_enums.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdata%2Fparser%2Fok%2F0019_enums.txt?ref=b7c141e0b5c66c51db7171b1de30d4c60d1048c0", "patch": "@@ -0,0 +1,118 @@\n+FILE@[0; 182)\n+  ENUM_ITEM@[0; 13)\n+    ENUM_KW@[0; 4)\n+    WHITESPACE@[4; 5)\n+    IDENT@[5; 7)\n+    WHITESPACE@[7; 8)\n+    L_CURLY@[8; 9)\n+    WHITESPACE@[9; 10)\n+    R_CURLY@[10; 11)\n+    WHITESPACE@[11; 13)\n+  ENUM_ITEM@[13; 29)\n+    ENUM_KW@[13; 17)\n+    WHITESPACE@[17; 18)\n+    IDENT@[18; 20)\n+    TYPE_PARAM_LIST@[20; 24)\n+      L_ANGLE@[20; 21)\n+      TYPE_PARAM@[21; 22)\n+        IDENT@[21; 22)\n+      R_ANGLE@[22; 23)\n+      WHITESPACE@[23; 24)\n+    L_CURLY@[24; 25)\n+    WHITESPACE@[25; 26)\n+    R_CURLY@[26; 27)\n+    WHITESPACE@[27; 29)\n+  ENUM_ITEM@[29; 48)\n+    ENUM_KW@[29; 33)\n+    WHITESPACE@[33; 34)\n+    IDENT@[34; 36)\n+    WHITESPACE@[36; 37)\n+    L_CURLY@[37; 38)\n+    ENUM_VARIANT@[38; 45)\n+      WHITESPACE@[38; 43)\n+      IDENT@[43; 44)\n+      WHITESPACE@[44; 45)\n+    R_CURLY@[45; 46)\n+    WHITESPACE@[46; 48)\n+  ENUM_ITEM@[48; 68)\n+    ENUM_KW@[48; 52)\n+    WHITESPACE@[52; 53)\n+    IDENT@[53; 55)\n+    WHITESPACE@[55; 56)\n+    L_CURLY@[56; 57)\n+    ENUM_VARIANT@[57; 63)\n+      WHITESPACE@[57; 62)\n+      IDENT@[62; 63)\n+    COMMA@[63; 64)\n+    WHITESPACE@[64; 65)\n+    R_CURLY@[65; 66)\n+    WHITESPACE@[66; 68)\n+  ENUM_ITEM@[68; 182)\n+    ENUM_KW@[68; 72)\n+    WHITESPACE@[72; 73)\n+    IDENT@[73; 75)\n+    WHITESPACE@[75; 76)\n+    L_CURLY@[76; 77)\n+    ENUM_VARIANT@[77; 83)\n+      WHITESPACE@[77; 82)\n+      IDENT@[82; 83)\n+    COMMA@[83; 84)\n+    ENUM_VARIANT@[84; 95)\n+      WHITESPACE@[84; 89)\n+      IDENT@[89; 90)\n+      WHITESPACE@[90; 91)\n+      EQ@[91; 92)\n+      LITERAL@[92; 95)\n+        WHITESPACE@[92; 93)\n+        INT_NUMBER@[93; 95)\n+    COMMA@[95; 96)\n+    ENUM_VARIANT@[96; 146)\n+      WHITESPACE@[96; 101)\n+      IDENT@[101; 102)\n+      WHITESPACE@[102; 103)\n+      L_CURLY@[103; 104)\n+      NAMED_FIELD@[104; 119)\n+        WHITESPACE@[104; 113)\n+        IDENT@[113; 114)\n+        COLON@[114; 115)\n+        WHITESPACE@[115; 116)\n+        IDENT@[116; 119)\n+      COMMA@[119; 120)\n+      NAMED_FIELD@[120; 139)\n+        VISIBILITY@[120; 133)\n+          WHITESPACE@[120; 129)\n+          PUB_KW@[129; 132)\n+          WHITESPACE@[132; 133)\n+        IDENT@[133; 134)\n+        COLON@[134; 135)\n+        WHITESPACE@[135; 136)\n+        IDENT@[136; 139)\n+      COMMA@[139; 140)\n+      WHITESPACE@[140; 145)\n+      R_CURLY@[145; 146)\n+    COMMA@[146; 147)\n+    ENUM_VARIANT@[147; 156)\n+      WHITESPACE@[147; 152)\n+      IDENT@[152; 153)\n+      WHITESPACE@[153; 154)\n+      L_CURLY@[154; 155)\n+      R_CURLY@[155; 156)\n+    COMMA@[156; 157)\n+    ENUM_VARIANT@[157; 169)\n+      WHITESPACE@[157; 162)\n+      IDENT@[162; 163)\n+      L_PAREN@[163; 164)\n+      POS_FIELD@[164; 167)\n+        IDENT@[164; 167)\n+      COMMA@[167; 168)\n+      R_PAREN@[168; 169)\n+    COMMA@[169; 170)\n+    ENUM_VARIANT@[170; 178)\n+      WHITESPACE@[170; 175)\n+      IDENT@[175; 176)\n+      L_PAREN@[176; 177)\n+      R_PAREN@[177; 178)\n+    COMMA@[178; 179)\n+    WHITESPACE@[179; 180)\n+    R_CURLY@[180; 181)\n+    WHITESPACE@[181; 182)"}]}