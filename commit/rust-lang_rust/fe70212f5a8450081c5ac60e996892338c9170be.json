{"sha": "fe70212f5a8450081c5ac60e996892338c9170be", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlNzAyMTJmNWE4NDUwMDgxYzVhYzYwZTk5Njg5MjMzOGM5MTcwYmU=", "commit": {"author": {"name": "Grahame Bowland", "email": "grahame@angrygoats.net", "date": "2012-01-24T16:08:58Z"}, "committer": {"name": "Grahame Bowland", "email": "grahame@angrygoats.net", "date": "2012-01-24T16:08:58Z"}, "message": "suggest sync/init to user as appropriate", "tree": {"sha": "e6c396712dc6c7cc132e3af06c650b5e9c77847d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e6c396712dc6c7cc132e3af06c650b5e9c77847d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fe70212f5a8450081c5ac60e996892338c9170be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fe70212f5a8450081c5ac60e996892338c9170be", "html_url": "https://github.com/rust-lang/rust/commit/fe70212f5a8450081c5ac60e996892338c9170be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fe70212f5a8450081c5ac60e996892338c9170be/comments", "author": null, "committer": null, "parents": [{"sha": "2898dcc5d97da9427ac367542382b6239d9c0bbf", "url": "https://api.github.com/repos/rust-lang/rust/commits/2898dcc5d97da9427ac367542382b6239d9c0bbf", "html_url": "https://github.com/rust-lang/rust/commit/2898dcc5d97da9427ac367542382b6239d9c0bbf"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "c2b51c15e0466a9c7b3f4d873bba6ebbf592acdd", "filename": "src/cargo/cargo.rs", "status": "modified", "additions": 22, "deletions": 2, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/fe70212f5a8450081c5ac60e996892338c9170be/src%2Fcargo%2Fcargo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fe70212f5a8450081c5ac60e996892338c9170be/src%2Fcargo%2Fcargo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcargo%2Fcargo.rs?ref=fe70212f5a8450081c5ac60e996892338c9170be", "patch": "@@ -476,6 +476,25 @@ fn install_package(c: cargo, wd: str, pkg: package) {\n     }\n }\n \n+fn cargo_suggestion(c: cargo, syncing: bool, fallback: fn())\n+{\n+    if c.sources.size() == 0u {\n+        error(\"No sources defined. You may wish to run \" +\n+              \"\\\"cargo init\\\" then \\\"cargo sync\\\".\");\n+        ret;\n+    }\n+    if !syncing {\n+        let npkg = 0u;\n+        c.sources.values({ |v| npkg += vec::len(v.packages) });\n+        if npkg == 0u {\n+            error(\"No packages known. You may wish to run \" +\n+                  \"\\\"cargo sync\\\".\");\n+            ret;\n+        }\n+    }\n+    fallback();\n+}\n+\n fn install_uuid(c: cargo, wd: str, uuid: str) {\n     let ps = [];\n     for_each_package(c, { |s, p|\n@@ -489,7 +508,7 @@ fn install_uuid(c: cargo, wd: str, uuid: str) {\n         install_package(c, wd, p);\n         ret;\n     } else if vec::len(ps) == 0u {\n-        error(\"No packages.\");\n+        cargo_suggestion(c, false, { || error(\"No packages match uuid.\"); });\n         ret;\n     }\n     error(\"Found multiple packages:\");\n@@ -510,7 +529,7 @@ fn install_named(c: cargo, wd: str, name: str) {\n         install_package(c, wd, p);\n         ret;\n     } else if vec::len(ps) == 0u {\n-        error(\"No packages.\");\n+        cargo_suggestion(c, false, { || error(\"No packages match name.\"); });\n         ret;\n     }\n     error(\"Found multiple packages:\");\n@@ -651,6 +670,7 @@ fn cmd_sync(c: cargo, argv: [str]) {\n     if vec::len(argv) == 3u {\n         sync_one(c, argv[2], c.sources.get(argv[2]));\n     } else {\n+        cargo_suggestion(c, true, { || } );\n         c.sources.items { |k, v|\n             sync_one(c, k, v);\n         }"}]}