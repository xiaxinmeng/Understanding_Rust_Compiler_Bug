{"sha": "ab99eec15f322eb06ddc0ff235e3c7fbac96e541", "node_id": "C_kwDOAAsO6NoAKGFiOTllZWMxNWYzMjJlYjA2ZGRjMGZmMjM1ZTNjN2ZiYWM5NmU1NDE", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-30T08:19:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-09-30T08:19:58Z"}, "message": "Auto merge of #7684 - surechen:solve_derivable_impls, r=flip1995\n\nfix for issue #7683\n\nFixes #7683.\n\nFor Repeat  [x; y] (x is the type and y is the times to repeat) . When y > 32, the compiler will report an error:\n\nhttps://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=7148558162685e91056e0550797ea74c\n\nBecause https://github.com/rust-lang/rust/blob/6cdd42f9f8dd4e5e5ba0aa816bc4c99ab8b102f9/library/std/src/primitive_docs.rs#L538\n/// Arrays of sizes from 0 to 32 (inclusive) implement [`Default`] trait\n/// if the element type allows it. As a stopgap, trait implementations are\n/// statically generated up to size 32.\n\nSo here to detect this situation.\n\nchangelog: [`derivable_impls`]: No longer lints when arrays bigger than 32 elements are involved", "tree": {"sha": "490006362922b301c4f4a0a7d0713cfec721c64d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/490006362922b301c4f4a0a7d0713cfec721c64d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab99eec15f322eb06ddc0ff235e3c7fbac96e541", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab99eec15f322eb06ddc0ff235e3c7fbac96e541", "html_url": "https://github.com/rust-lang/rust/commit/ab99eec15f322eb06ddc0ff235e3c7fbac96e541", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab99eec15f322eb06ddc0ff235e3c7fbac96e541/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "984d4661c7ea776a6ef7044e69666ef056bd5000", "url": "https://api.github.com/repos/rust-lang/rust/commits/984d4661c7ea776a6ef7044e69666ef056bd5000", "html_url": "https://github.com/rust-lang/rust/commit/984d4661c7ea776a6ef7044e69666ef056bd5000"}, {"sha": "a3d373551551bc1bd5a993d586f42144f0f4542a", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3d373551551bc1bd5a993d586f42144f0f4542a", "html_url": "https://github.com/rust-lang/rust/commit/a3d373551551bc1bd5a993d586f42144f0f4542a"}], "stats": {"total": 46, "additions": 44, "deletions": 2}, "files": [{"sha": "79fbd2550245127a19ec4c9fdcba8a2cf7005d37", "filename": "clippy_utils/src/lib.rs", "status": "modified", "additions": 11, "deletions": 1, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/ab99eec15f322eb06ddc0ff235e3c7fbac96e541/clippy_utils%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab99eec15f322eb06ddc0ff235e3c7fbac96e541/clippy_utils%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Flib.rs?ref=ab99eec15f322eb06ddc0ff235e3c7fbac96e541", "patch": "@@ -684,7 +684,17 @@ pub fn is_default_equivalent(cx: &LateContext<'_>, e: &Expr<'_>) -> bool {\n             _ => false,\n         },\n         ExprKind::Tup(items) | ExprKind::Array(items) => items.iter().all(|x| is_default_equivalent(cx, x)),\n-        ExprKind::Repeat(x, _) => is_default_equivalent(cx, x),\n+        ExprKind::Repeat(x, y) => if_chain! {\n+            if let ExprKind::Lit(ref const_lit) = cx.tcx.hir().body(y.body).value.kind;\n+            if let LitKind::Int(v, _) = const_lit.node;\n+            if v <= 32 && is_default_equivalent(cx, x);\n+            then {\n+                true\n+            }\n+            else {\n+                false\n+            }\n+        },\n         ExprKind::Call(repl_func, _) => if_chain! {\n             if let ExprKind::Path(ref repl_func_qpath) = repl_func.kind;\n             if let Some(repl_def_id) = cx.qpath_res(repl_func_qpath, repl_func.hir_id).opt_def_id();"}, {"sha": "3eeebc117f3b05d956e1fe0b5a323b5fe0769ffa", "filename": "tests/ui/derivable_impls.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ab99eec15f322eb06ddc0ff235e3c7fbac96e541/tests%2Fui%2Fderivable_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab99eec15f322eb06ddc0ff235e3c7fbac96e541/tests%2Fui%2Fderivable_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderivable_impls.rs?ref=ab99eec15f322eb06ddc0ff235e3c7fbac96e541", "patch": "@@ -207,4 +207,24 @@ impl Default for Color2 {\n     }\n }\n \n+pub struct RepeatDefault1 {\n+    a: [i8; 32],\n+}\n+\n+impl Default for RepeatDefault1 {\n+    fn default() -> Self {\n+        RepeatDefault1 { a: [0; 32] }\n+    }\n+}\n+\n+pub struct RepeatDefault2 {\n+    a: [i8; 33],\n+}\n+\n+impl Default for RepeatDefault2 {\n+    fn default() -> Self {\n+        RepeatDefault2 { a: [0; 33] }\n+    }\n+}\n+\n fn main() {}"}, {"sha": "49fb471a21962ce11c69a8b84bccf96a33af3b72", "filename": "tests/ui/derivable_impls.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ab99eec15f322eb06ddc0ff235e3c7fbac96e541/tests%2Fui%2Fderivable_impls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ab99eec15f322eb06ddc0ff235e3c7fbac96e541/tests%2Fui%2Fderivable_impls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderivable_impls.stderr?ref=ab99eec15f322eb06ddc0ff235e3c7fbac96e541", "patch": "@@ -73,5 +73,17 @@ LL | | }\n    |\n    = help: try annotating `WithoutSelfParan` with `#[derive(Default)]`\n \n-error: aborting due to 6 previous errors\n+error: this `impl` can be derived\n+  --> $DIR/derivable_impls.rs:214:1\n+   |\n+LL | / impl Default for RepeatDefault1 {\n+LL | |     fn default() -> Self {\n+LL | |         RepeatDefault1 { a: [0; 32] }\n+LL | |     }\n+LL | | }\n+   | |_^\n+   |\n+   = help: try annotating `RepeatDefault1` with `#[derive(Default)]`\n+\n+error: aborting due to 7 previous errors\n "}]}