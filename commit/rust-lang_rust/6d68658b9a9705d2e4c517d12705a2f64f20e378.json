{"sha": "6d68658b9a9705d2e4c517d12705a2f64f20e378", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkNjg2NThiOWE5NzA1ZDJlNGM1MTdkMTI3MDVhMmY2NGYyMGUzNzg=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-08-08T17:43:44Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2012-08-15T05:13:25Z"}, "message": "Make autoserialize not generate alt checks", "tree": {"sha": "d674f95445aa4156f120166fbef4b834d530282e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d674f95445aa4156f120166fbef4b834d530282e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d68658b9a9705d2e4c517d12705a2f64f20e378", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d68658b9a9705d2e4c517d12705a2f64f20e378", "html_url": "https://github.com/rust-lang/rust/commit/6d68658b9a9705d2e4c517d12705a2f64f20e378", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d68658b9a9705d2e4c517d12705a2f64f20e378/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f01acacf94b119da674e8f70b828cb4a5fa6485", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f01acacf94b119da674e8f70b828cb4a5fa6485", "html_url": "https://github.com/rust-lang/rust/commit/9f01acacf94b119da674e8f70b828cb4a5fa6485"}], "stats": {"total": 13, "additions": 11, "deletions": 2}, "files": [{"sha": "1fc77bae8bfabbc09f3441b9f5e57ebaea10fb5b", "filename": "src/libsyntax/ext/auto_serialize.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6d68658b9a9705d2e4c517d12705a2f64f20e378/src%2Flibsyntax%2Fext%2Fauto_serialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d68658b9a9705d2e4c517d12705a2f64f20e378/src%2Flibsyntax%2Fext%2Fauto_serialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fauto_serialize.rs?ref=6d68658b9a9705d2e4c517d12705a2f64f20e378", "patch": "@@ -885,7 +885,7 @@ fn deser_enum(cx: ext_ctxt, tps: deser_tps_map, e_name: ast::ident,\n               e_span: span, variants: ~[ast::variant],\n               -d: @ast::expr) -> @ast::expr {\n     let ext_cx = cx;\n-    let arms: ~[ast::arm] = do vec::from_fn(vec::len(variants)) |vidx| {\n+    let mut arms: ~[ast::arm] = do vec::from_fn(vec::len(variants)) |vidx| {\n         let variant = variants[vidx];\n         let v_span = variant.span;\n         let v_name = variant.node.name;\n@@ -925,10 +925,19 @@ fn deser_enum(cx: ext_ctxt, tps: deser_tps_map, e_name: ast::ident,\n          body: cx.expr_blk(body)}\n     };\n \n+    let impossible_case = {pats: ~[@{id: cx.next_id(),\n+                                     node: ast::pat_wild,\n+                                     span: e_span}],\n+                        guard: none,\n+                        // FIXME #3198: proper error message\n+                           body: cx.expr_blk(cx.expr(e_span,\n+                                                     ast::expr_fail(none)))};\n+    arms += ~[impossible_case];\n+\n     // Generate code like:\n     let e_name = cx.lit_str(e_span, e_name);\n     let alt_expr = cx.expr(e_span,\n-                           ast::expr_match(#ast{__i}, arms, ast::alt_check));\n+                   ast::expr_match(#ast{__i}, arms, ast::alt_exhaustive));\n     let var_lambda = #ast{ |__i| $(alt_expr) };\n     let read_var = #ast{ $(cx.clone(d)).read_enum_variant($(var_lambda)) };\n     let read_lambda = cx.lambda(cx.expr_blk(read_var));"}]}