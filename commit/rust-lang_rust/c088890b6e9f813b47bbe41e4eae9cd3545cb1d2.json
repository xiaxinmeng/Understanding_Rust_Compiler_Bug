{"sha": "c088890b6e9f813b47bbe41e4eae9cd3545cb1d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwODg4OTBiNmU5ZjgxM2I0N2JiZTQxZTRlYWU5Y2QzNTQ1Y2IxZDI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-07-30T20:43:37Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-07-30T20:43:37Z"}, "message": "Rollup merge of #63123 - TankhouseAle:const-fn-type-name-any, r=oli-obk\n\n`const fn`-ify `std::any::type_name` as laid out in #63084\n\nA test, based on the one I added when I implemented support for the underlying `core::intrinsics::type_name` being allowed in `const fn` contexts, is included.", "tree": {"sha": "fa25e3f6ebbf2bcc42eb526de59765dc9391e54f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fa25e3f6ebbf2bcc42eb526de59765dc9391e54f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c088890b6e9f813b47bbe41e4eae9cd3545cb1d2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdQKv5CRBK7hj4Ov3rIwAAdHIIAGjn98D7themCNS0GuE5IT5P\nNvgQkf7965GIfFmzvbF/0x1YahFHYcm3waZqWcxKk6I7fIcNEiDi4xKkfjAM8UsZ\naC4l9CeR64OTdAJWzS5aYfntjA5UtXYhQ3wSpG15wVcclnEFMBfYvW7gO9Xx6+3n\naq8qyLPSMc9GR0qNAaZIJi09uLxewkrGlKjTQma/LZQZ/FGZVIiN5OmLN4MMIg+L\nTlQ/SH+TLeriDI1YcnaAiEBQGjxWre99O5aSS4Fy8mmwedDHp1PkhYNJskrK/eiv\nXyVD1GvC0n2/kdekab05d9sqB4tsL1jzLQUhZjj4Fkf57k9XM1SX3TqcAG5bHf0=\n=Gx6L\n-----END PGP SIGNATURE-----\n", "payload": "tree fa25e3f6ebbf2bcc42eb526de59765dc9391e54f\nparent cdf97589df2de0d5e877dac43d0ec6089c20fb11\nparent 4a3d41d334860f18a7fc9319167f9e275dd9510b\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1564519417 +0200\ncommitter GitHub <noreply@github.com> 1564519417 +0200\n\nRollup merge of #63123 - TankhouseAle:const-fn-type-name-any, r=oli-obk\n\n`const fn`-ify `std::any::type_name` as laid out in #63084\n\nA test, based on the one I added when I implemented support for the underlying `core::intrinsics::type_name` being allowed in `const fn` contexts, is included.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c088890b6e9f813b47bbe41e4eae9cd3545cb1d2", "html_url": "https://github.com/rust-lang/rust/commit/c088890b6e9f813b47bbe41e4eae9cd3545cb1d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c088890b6e9f813b47bbe41e4eae9cd3545cb1d2/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdf97589df2de0d5e877dac43d0ec6089c20fb11", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdf97589df2de0d5e877dac43d0ec6089c20fb11", "html_url": "https://github.com/rust-lang/rust/commit/cdf97589df2de0d5e877dac43d0ec6089c20fb11"}, {"sha": "4a3d41d334860f18a7fc9319167f9e275dd9510b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4a3d41d334860f18a7fc9319167f9e275dd9510b", "html_url": "https://github.com/rust-lang/rust/commit/4a3d41d334860f18a7fc9319167f9e275dd9510b"}], "stats": {"total": 32, "additions": 31, "deletions": 1}, "files": [{"sha": "078091a9b5475494486fb8a56fcf09a5ca8c60ee", "filename": "src/libcore/any.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c088890b6e9f813b47bbe41e4eae9cd3545cb1d2/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c088890b6e9f813b47bbe41e4eae9cd3545cb1d2/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=c088890b6e9f813b47bbe41e4eae9cd3545cb1d2", "patch": "@@ -468,7 +468,8 @@ impl TypeId {\n /// The current implementation uses the same infrastructure as compiler\n /// diagnostics and debuginfo, but this is not guaranteed.\n #[stable(feature = \"type_name\", since = \"1.38.0\")]\n-pub fn type_name<T: ?Sized>() -> &'static str {\n+#[rustc_const_unstable(feature = \"const_type_name\")]\n+pub const fn type_name<T: ?Sized>() -> &'static str {\n     #[cfg(bootstrap)]\n     unsafe {\n         intrinsics::type_name::<T>()"}, {"sha": "4ccfb42098423b6a5c611af945cfa9269d397bdd", "filename": "src/test/ui/consts/const-fn-type-name-any.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/c088890b6e9f813b47bbe41e4eae9cd3545cb1d2/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-type-name-any.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c088890b6e9f813b47bbe41e4eae9cd3545cb1d2/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-type-name-any.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-fn-type-name-any.rs?ref=c088890b6e9f813b47bbe41e4eae9cd3545cb1d2", "patch": "@@ -0,0 +1,29 @@\n+// run-pass\n+\n+#![feature(const_fn)]\n+#![feature(const_type_name)]\n+#![allow(dead_code)]\n+\n+const fn type_name_wrapper<T>(_: &T) -> &'static str {\n+    std::any::type_name::<T>()\n+}\n+\n+struct Struct<TA, TB, TC> {\n+    a: TA,\n+    b: TB,\n+    c: TC,\n+}\n+\n+type StructInstantiation = Struct<i8, f64, bool>;\n+\n+const CONST_STRUCT: StructInstantiation = StructInstantiation { a: 12, b: 13.7, c: false };\n+\n+const CONST_STRUCT_NAME: &'static str = type_name_wrapper(&CONST_STRUCT);\n+\n+fn main() {\n+    let non_const_struct = StructInstantiation { a: 87, b: 65.99, c: true };\n+\n+    let non_const_struct_name = type_name_wrapper(&non_const_struct);\n+\n+    assert_eq!(CONST_STRUCT_NAME, non_const_struct_name);\n+}"}]}