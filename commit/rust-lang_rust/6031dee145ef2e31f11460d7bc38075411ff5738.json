{"sha": "6031dee145ef2e31f11460d7bc38075411ff5738", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYwMzFkZWUxNDVlZjJlMzFmMTE0NjBkN2JjMzgwNzU0MTFmZjU3Mzg=", "commit": {"author": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2021-08-02T16:58:41Z"}, "committer": {"name": "vsrs", "email": "vit@conrlab.com", "date": "2021-08-02T16:58:41Z"}, "message": "Enable assist only if an item is selected", "tree": {"sha": "155448649cffffcee308c520b745506c13cec28e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/155448649cffffcee308c520b745506c13cec28e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6031dee145ef2e31f11460d7bc38075411ff5738", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6031dee145ef2e31f11460d7bc38075411ff5738", "html_url": "https://github.com/rust-lang/rust/commit/6031dee145ef2e31f11460d7bc38075411ff5738", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6031dee145ef2e31f11460d7bc38075411ff5738/comments", "author": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vsrs", "id": 62505555, "node_id": "MDQ6VXNlcjYyNTA1NTU1", "avatar_url": "https://avatars.githubusercontent.com/u/62505555?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vsrs", "html_url": "https://github.com/vsrs", "followers_url": "https://api.github.com/users/vsrs/followers", "following_url": "https://api.github.com/users/vsrs/following{/other_user}", "gists_url": "https://api.github.com/users/vsrs/gists{/gist_id}", "starred_url": "https://api.github.com/users/vsrs/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vsrs/subscriptions", "organizations_url": "https://api.github.com/users/vsrs/orgs", "repos_url": "https://api.github.com/users/vsrs/repos", "events_url": "https://api.github.com/users/vsrs/events{/privacy}", "received_events_url": "https://api.github.com/users/vsrs/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e71b239d377135bf940c574865f409e40200333c", "url": "https://api.github.com/repos/rust-lang/rust/commits/e71b239d377135bf940c574865f409e40200333c", "html_url": "https://github.com/rust-lang/rust/commit/e71b239d377135bf940c574865f409e40200333c"}], "stats": {"total": 56, "additions": 38, "deletions": 18}, "files": [{"sha": "f35165a0fca6c9e68dd185bd865bb1023c9a8e5e", "filename": "crates/ide_assists/src/handlers/sort_items.rs", "status": "modified", "additions": 38, "deletions": 18, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/6031dee145ef2e31f11460d7bc38075411ff5738/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fsort_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6031dee145ef2e31f11460d7bc38075411ff5738/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fsort_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Fsort_items.rs?ref=6031dee145ef2e31f11460d7bc38075411ff5738", "patch": "@@ -82,6 +82,11 @@ use crate::{utils::get_methods, AssistContext, AssistId, AssistKind, Assists};\n // }\n // ```\n pub(crate) fn sort_items(acc: &mut Assists, ctx: &AssistContext) -> Option<()> {\n+    if ctx.frange.range.is_empty() {\n+        cov_mark::hit!(not_applicable_if_no_selection);\n+        return None;\n+    }\n+\n     if let Some(trait_ast) = ctx.find_node_at_offset::<ast::Trait>() {\n         add_sort_methods_assist(acc, trait_ast.assoc_item_list()?)\n     } else if let Some(impl_ast) = ctx.find_node_at_offset::<ast::Impl>() {\n@@ -205,14 +210,29 @@ mod tests {\n \n     use super::*;\n \n+    #[test]\n+    fn not_applicable_if_no_selection() {\n+        cov_mark::check!(not_applicable_if_no_selection);\n+\n+        check_assist_not_applicable(\n+            sort_items,\n+            r#\"\n+t$0rait Bar {\n+    fn b();\n+    fn a();\n+}\n+        \"#,\n+        )\n+    }\n+\n     #[test]\n     fn not_applicable_if_trait_empty() {\n         cov_mark::check!(not_applicable_if_sorted_or_empty_or_single);\n \n         check_assist_not_applicable(\n             sort_items,\n             r#\"\n-t$0rait Bar {\n+t$0rait Bar$0 {\n }\n         \"#,\n         )\n@@ -226,7 +246,7 @@ t$0rait Bar {\n             sort_items,\n             r#\"\n struct Bar;\n-$0impl Bar {\n+$0impl Bar$0 {\n }\n         \"#,\n         )\n@@ -239,7 +259,7 @@ $0impl Bar {\n         check_assist_not_applicable(\n             sort_items,\n             r#\"\n-$0struct Bar;\n+$0struct Bar$0 ;\n         \"#,\n         )\n     }\n@@ -251,7 +271,7 @@ $0struct Bar;\n         check_assist_not_applicable(\n             sort_items,\n             r#\"\n-$0struct Bar { };\n+$0struct Bar$0 { };\n         \"#,\n         )\n     }\n@@ -263,7 +283,7 @@ $0struct Bar { };\n         check_assist_not_applicable(\n             sort_items,\n             r#\"\n-$0enum ZeroVariants {};\n+$0enum ZeroVariants$0 {};\n         \"#,\n         )\n     }\n@@ -275,7 +295,7 @@ $0enum ZeroVariants {};\n         check_assist_not_applicable(\n             sort_items,\n             r#\"\n-t$0rait Bar {\n+t$0rait Bar$0 {\n     fn a() {}\n     fn b() {}\n     fn c() {}\n@@ -292,7 +312,7 @@ t$0rait Bar {\n             sort_items,\n             r#\"\n struct Bar;\n-$0impl Bar {\n+$0impl Bar$0 {\n     fn a() {}\n     fn b() {}\n     fn c() {}\n@@ -308,7 +328,7 @@ $0impl Bar {\n         check_assist_not_applicable(\n             sort_items,\n             r#\"\n-$0struct Bar {\n+$0struct Bar$0 {\n     a: u32,\n     b: u8,\n     c: u64,\n@@ -324,7 +344,7 @@ $0struct Bar {\n         check_assist_not_applicable(\n             sort_items,\n             r#\"\n-$0union Bar {\n+$0union Bar$0 {\n     a: u32,\n     b: u8,\n     c: u64,\n@@ -340,7 +360,7 @@ $0union Bar {\n         check_assist_not_applicable(\n             sort_items,\n             r#\"\n-$0enum Bar {\n+$0enum Bar$0 {\n     a,\n     b,\n     c,\n@@ -354,7 +374,7 @@ $0enum Bar {\n         check_assist(\n             sort_items,\n             r#\"\n-$0trait Bar {\n+$0trait Bar$0 {\n     fn a() {\n \n     }\n@@ -386,7 +406,7 @@ trait Bar {\n             sort_items,\n             r#\"\n struct Bar;\n-$0impl Bar {\n+$0impl Bar$0 {\n     fn c() {}\n     fn a() {}\n     /// long\n@@ -416,7 +436,7 @@ impl Bar {\n         check_assist(\n             sort_items,\n             r#\"\n-$0struct Bar {\n+$0struct Bar$0 {\n     b: u8,\n     a: u32,\n     c: u64,\n@@ -437,7 +457,7 @@ struct Bar {\n         check_assist(\n             sort_items,\n             r#\"\n-$0struct Bar<'a, T> {\n+$0struct Bar<'a,$0 T> {\n     d: &'a str,\n     b: u8,\n     a: T,\n@@ -460,7 +480,7 @@ struct Bar<'a, T> {\n         check_assist(\n             sort_items,\n             r#\"\n-$0struct Bar {\n+$0struct Bar $0{\n     aaa: u8,\n     a: usize,\n     b: u8,\n@@ -481,7 +501,7 @@ struct Bar {\n         check_assist(\n             sort_items,\n             r#\"\n-$0union Bar {\n+$0union Bar$0 {\n     b: u8,\n     a: u32,\n     c: u64,\n@@ -502,7 +522,7 @@ union Bar {\n         check_assist(\n             sort_items,\n             r#\"\n-$0enum Bar {\n+$0enum Bar $0{\n     d{ first: u32, second: usize},\n     b = 14,\n     a,\n@@ -526,7 +546,7 @@ enum Bar {\n             sort_items,\n             r#\"\n enum Bar {\n-    d$0{ second: usize, first: u32 },\n+    d$0{ second: usize, first: u32 }$0,\n     b = 14,\n     a,\n     c(u32, usize),"}]}