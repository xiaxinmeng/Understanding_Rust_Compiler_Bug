{"sha": "d1e3898bd5d830c29602067ffdb87639f99f0862", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxZTM4OThiZDVkODMwYzI5NjAyMDY3ZmZkYjg3NjM5Zjk5ZjA4NjI=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-05-29T21:41:46Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-05-29T21:41:46Z"}, "message": "Added the documentation for the 'use' keyword", "tree": {"sha": "5acbc162c9777d39dd922e12f7ce7fac8a44b3d0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5acbc162c9777d39dd922e12f7ce7fac8a44b3d0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1e3898bd5d830c29602067ffdb87639f99f0862", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1e3898bd5d830c29602067ffdb87639f99f0862", "html_url": "https://github.com/rust-lang/rust/commit/d1e3898bd5d830c29602067ffdb87639f99f0862", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1e3898bd5d830c29602067ffdb87639f99f0862/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45127211566c53bac386b66909a830649182ab7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/45127211566c53bac386b66909a830649182ab7a", "html_url": "https://github.com/rust-lang/rust/commit/45127211566c53bac386b66909a830649182ab7a"}], "stats": {"total": 58, "additions": 56, "deletions": 2}, "files": [{"sha": "f74ee6a3e9b00b6d97e04bc59cfe77364a1c89cb", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 56, "deletions": 2, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/d1e3898bd5d830c29602067ffdb87639f99f0862/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1e3898bd5d830c29602067ffdb87639f99f0862/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=d1e3898bd5d830c29602067ffdb87639f99f0862", "patch": "@@ -1213,9 +1213,63 @@ mod unsafe_keyword {}\n //\n /// Import or rename items from other crates or modules.\n ///\n-/// The documentation for this keyword is [not yet complete]. Pull requests welcome!\n+/// Usually a `use` keyword is used to shorten the path required to refer to a module item.\n+/// The keyword may appear in modules, blocks and even functions, usually at the top.\n+///\n+/// The most basic usage of the keyword is `use path::to::item;`,\n+/// though a number of convenient shortcuts are supported:\n+///\n+///   * Simultaneously binding a list of paths with a common prefix,\n+///     using the glob-like brace syntax use `a::b::{c, d, e::f, g::h::i};`\n+///   * Simultaneously binding a list of paths with a common prefix and their common parent module,\n+///     using the [`self`] keyword, such as `use a::b::{self, c, d::e};`\n+///   * Rebinding the target name as a new local name, using the syntax `use p::q::r as x;`.\n+///     This can also be used with the last two features: `use a::b::{self as ab, c as abc}`.\n+///   * Binding all paths matching a given prefix,\n+///     using the asterisk wildcard syntax `use a::b::*;`.\n+///   * Nesting groups of the previous features multiple times,\n+///     such as `use a::b::{self as ab, c, d::{*, e::f}};`\n+///   * Reexporting with visibility modifiers such as `pub use a::b;`\n+///   * Importing with `_` to only import the methods of the item without binding it to a name\n+///     (to avoid conflict for example): `use ::std::io::Read as _;`.\n+///\n+/// Using path qualifiers like [`crate`], [`super`] or [`self`] is supported: `use crate::a::b;`.\n+///\n+/// Note that when the wildcard `*` is used on a type, it does not import its methods (though\n+/// for `enum`s it imports the variants, as shown in the example below).\n+///\n+/// ```compile_fail\n+/// # fn main() {\n+/// enum ExampleEnum {\n+///     VariantA,\n+///     VariantB,\n+/// }\n ///\n-/// [not yet complete]: https://github.com/rust-lang/rust/issues/34601\n+/// impl ExampleEnum {\n+///     fn new() -> Self {\n+///         Self::VariantA\n+///     }\n+/// }\n+///\n+/// use ExampleEnum::*;\n+///\n+/// // Compiles.\n+/// let _ = VariantA;\n+///\n+/// // Does not compile !\n+/// let n = new();\n+/// # }\n+/// ```\n+///\n+/// For more information on `use` and paths in general, see the [Reference].\n+///\n+/// The differences about paths and the `use` keyword between the 2015 and 2018 editions\n+/// can also be found in the [Reference].\n+///\n+/// [`crate`]: keyword.crate.html\n+/// [`self`]: keyword.self.html\n+/// [`super`]: keyword.super.html\n+/// [Reference]: ../reference/items/use-declarations.html\n mod use_keyword {}\n \n #[doc(keyword = \"where\")]"}]}