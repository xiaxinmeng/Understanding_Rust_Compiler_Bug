{"sha": "a4f97449b0a3043ecf91cdcc75ee69018cda6176", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0Zjk3NDQ5YjBhMzA0M2VjZjkxY2RjYzc1ZWU2OTAxOGNkYTYxNzY=", "commit": {"author": {"name": "Thomas Lively", "email": "tlively@google.com", "date": "2017-06-23T01:04:20Z"}, "committer": {"name": "Thomas Lively", "email": "tlively@google.com", "date": "2017-06-23T01:34:56Z"}, "message": "Add wasm32-experimental-emscripten to wasm builder\n\nThis modifies the builder to download and use the LLVM tools from the\nlast known good build on the WebAssembly buildbot waterfall, since these\ntools are built with the WebAssembly LLVM backend enabled.", "tree": {"sha": "65b09f44408c072e64c50a87888a4bda3d2a5826", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65b09f44408c072e64c50a87888a4bda3d2a5826"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a4f97449b0a3043ecf91cdcc75ee69018cda6176", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a4f97449b0a3043ecf91cdcc75ee69018cda6176", "html_url": "https://github.com/rust-lang/rust/commit/a4f97449b0a3043ecf91cdcc75ee69018cda6176", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a4f97449b0a3043ecf91cdcc75ee69018cda6176/comments", "author": {"login": "tlively", "id": 7121787, "node_id": "MDQ6VXNlcjcxMjE3ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/7121787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlively", "html_url": "https://github.com/tlively", "followers_url": "https://api.github.com/users/tlively/followers", "following_url": "https://api.github.com/users/tlively/following{/other_user}", "gists_url": "https://api.github.com/users/tlively/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlively/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlively/subscriptions", "organizations_url": "https://api.github.com/users/tlively/orgs", "repos_url": "https://api.github.com/users/tlively/repos", "events_url": "https://api.github.com/users/tlively/events{/privacy}", "received_events_url": "https://api.github.com/users/tlively/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tlively", "id": 7121787, "node_id": "MDQ6VXNlcjcxMjE3ODc=", "avatar_url": "https://avatars.githubusercontent.com/u/7121787?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tlively", "html_url": "https://github.com/tlively", "followers_url": "https://api.github.com/users/tlively/followers", "following_url": "https://api.github.com/users/tlively/following{/other_user}", "gists_url": "https://api.github.com/users/tlively/gists{/gist_id}", "starred_url": "https://api.github.com/users/tlively/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tlively/subscriptions", "organizations_url": "https://api.github.com/users/tlively/orgs", "repos_url": "https://api.github.com/users/tlively/repos", "events_url": "https://api.github.com/users/tlively/events{/privacy}", "received_events_url": "https://api.github.com/users/tlively/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "16da303209dc7d4ec84b10322c9f7d34f72b2985", "url": "https://api.github.com/repos/rust-lang/rust/commits/16da303209dc7d4ec84b10322c9f7d34f72b2985", "html_url": "https://github.com/rust-lang/rust/commit/16da303209dc7d4ec84b10322c9f7d34f72b2985"}], "stats": {"total": 46, "additions": 28, "deletions": 18}, "files": [{"sha": "025029c67456d06f4b43eec6ef54912d3793d3b5", "filename": "src/ci/docker/disabled/wasm32/Dockerfile", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/a4f97449b0a3043ecf91cdcc75ee69018cda6176/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/a4f97449b0a3043ecf91cdcc75ee69018cda6176/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32%2FDockerfile?ref=a4f97449b0a3043ecf91cdcc75ee69018cda6176", "patch": "@@ -11,7 +11,9 @@ RUN apt-get update && apt-get install -y --no-install-recommends \\\n   cmake \\\n   sudo \\\n   gdb \\\n-  xz-utils\n+  xz-utils \\\n+  jq \\\n+  bzip2\n \n # dumb-init\n COPY scripts/dumb-init.sh /scripts/\n@@ -22,6 +24,10 @@ COPY scripts/emscripten.sh /scripts/\n RUN bash /scripts/emscripten.sh\n COPY disabled/wasm32/node.sh /usr/local/bin/node\n \n+# cache\n+COPY scripts/sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n # env\n ENV PATH=$PATH:/emsdk-portable\n ENV PATH=$PATH:/emsdk-portable/clang/e1.37.13_64bit/\n@@ -32,13 +38,9 @@ ENV EM_CONFIG=/emsdk-portable/.emscripten\n \n ENV TARGETS=wasm32-unknown-emscripten,wasm32-experimental-emscripten\n \n-ENV RUST_CONFIGURE_ARGS --target=$TARGETS --experimental-targets=WebAssembly\n+ENV RUST_CONFIGURE_ARGS --target=$TARGETS\n \n ENV SCRIPT python2.7 ../x.py test --target $TARGETS\n \n-# cache\n-COPY scripts/sccache.sh /scripts/\n-RUN sh /scripts/sccache.sh\n-\n # init\n ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]"}, {"sha": "e693f975f69bc374073315ddd796c1b9799f31bc", "filename": "src/ci/docker/scripts/emscripten.sh", "status": "modified", "additions": 20, "deletions": 12, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/a4f97449b0a3043ecf91cdcc75ee69018cda6176/src%2Fci%2Fdocker%2Fscripts%2Femscripten.sh", "raw_url": "https://github.com/rust-lang/rust/raw/a4f97449b0a3043ecf91cdcc75ee69018cda6176/src%2Fci%2Fdocker%2Fscripts%2Femscripten.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Femscripten.sh?ref=a4f97449b0a3043ecf91cdcc75ee69018cda6176", "patch": "@@ -27,30 +27,38 @@ exit 1\n   set -x\n }\n \n+# Download emsdk\n cd /\n curl -L https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz | \\\n     tar -xz\n \n+# Download last known good emscripten from WebAssembly waterfall\n+BUILD=$(curl -L https://storage.googleapis.com/wasm-llvm/builds/linux/lkgr.json | \\\n+    jq '.build | tonumber')\n+curl -L https://storage.googleapis.com/wasm-llvm/builds/linux/$BUILD/wasm-binaries.tbz2 | \\\n+    hide_output tar xvkj\n+\n+# node 8 is required to run wasm\n+cd /\n+curl -L https://nodejs.org/dist/v8.0.0/node-v8.0.0-linux-x64.tar.xz | \\\n+    tar -xJ\n+\n cd /emsdk-portable\n ./emsdk update\n hide_output ./emsdk install sdk-1.37.13-64bit\n ./emsdk activate sdk-1.37.13-64bit\n \n+# Make emscripten use wasm-ready node and LLVM tools\n+echo \"NODE_JS='/node-v8.0.0-linux-x64/bin/node'\" >> /root/.emscripten\n+echo \"LLVM_ROOT='/wasm-install/bin'\" >> /root/.emscripten\n+\n+# Make emsdk usable by any user\n+cp /root/.emscripten /emsdk-portable\n+chmod a+rxw -R /emsdk-portable\n+\n # Compile and cache libc\n source ./emsdk_env.sh\n echo \"main(){}\" > a.c\n HOME=/emsdk-portable/ emcc a.c\n HOME=/emsdk-portable/ emcc -s WASM=1 a.c\n rm -f a.*\n-\n-# Make emscripten use Rust's LLVM\n-echo \"LLVM_ROOT='/checkout/obj/build/x86_64-unknown-linux-gnu/llvm/bin'\" >> /root/.emscripten\n-\n-# Make emsdk usable by any user\n-cp /root/.emscripten /emsdk-portable\n-chmod a+rxw -R /emsdk-portable\n-\n-# node 8 is required to run wasm\n-cd /\n-curl -L https://nodejs.org/dist/v8.0.0/node-v8.0.0-linux-x64.tar.xz | \\\n-    tar -xJ"}]}