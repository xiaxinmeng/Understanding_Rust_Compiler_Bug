{"sha": "f001f7beebb2425ad59a62ef330c78f2d0fb31d1", "node_id": "C_kwDOAAsO6NoAKGYwMDFmN2JlZWJiMjQyNWFkNTlhNjJlZjMzMGM3OGYyZDBmYjMxZDE", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2023-04-09T03:35:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-04-09T03:35:53Z"}, "message": "Rollup merge of #110058 - gimbles:master, r=Nilstrieb\n\nRemove `box_syntax` usage\n\nFixes #109978", "tree": {"sha": "ee1aeefe1c146e8c93efaa2352d644895f2a81be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee1aeefe1c146e8c93efaa2352d644895f2a81be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f001f7beebb2425ad59a62ef330c78f2d0fb31d1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkMjKZCRBK7hj4Ov3rIwAA9RMIAJ9EJefp7eeE9o6L5nQahvHF\nWbQMv12z+dRI3GGA2XCLlv0ktDdUMPICJyE4VlPO2bW9KQX+zkRqXDk0q2gvR8ot\nItxL26c/R/d/uoIgcre6RCczCyhnpJu7GPRG1dGKT7H2I49rhQ9n+NBnSZMpkMq/\ndzq68e4Kwgnk+fvLauuc5prM5udu+j1nEbxEsLwTRISR1TAVLvCeb2X7M8ZXU4h8\n8qCV4sMOuy42b1aD+IHLLM3NqQhSTOGNh98qs81dt8ze2NVSfPsTTWD2ukhCoxFV\n8qV58CrxwkJKwli2OvLpzrUQ13sY13lZKc6navGUH6p/AR/H4T5vUYWm93+aQqY=\n=9tbm\n-----END PGP SIGNATURE-----\n", "payload": "tree ee1aeefe1c146e8c93efaa2352d644895f2a81be\nparent f8ed97ecc11a7d8cd392607ed5a4f6592496c880\nparent f1ded91a48034c3649f72202894811c3e669a65a\nauthor Yuki Okushi <jtitor@2k36.org> 1681011353 +0900\ncommitter GitHub <noreply@github.com> 1681011353 +0900\n\nRollup merge of #110058 - gimbles:master, r=Nilstrieb\n\nRemove `box_syntax` usage\n\nFixes #109978\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f001f7beebb2425ad59a62ef330c78f2d0fb31d1", "html_url": "https://github.com/rust-lang/rust/commit/f001f7beebb2425ad59a62ef330c78f2d0fb31d1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f001f7beebb2425ad59a62ef330c78f2d0fb31d1/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8ed97ecc11a7d8cd392607ed5a4f6592496c880", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8ed97ecc11a7d8cd392607ed5a4f6592496c880", "html_url": "https://github.com/rust-lang/rust/commit/f8ed97ecc11a7d8cd392607ed5a4f6592496c880"}, {"sha": "f1ded91a48034c3649f72202894811c3e669a65a", "url": "https://api.github.com/repos/rust-lang/rust/commits/f1ded91a48034c3649f72202894811c3e669a65a", "html_url": "https://github.com/rust-lang/rust/commit/f1ded91a48034c3649f72202894811c3e669a65a"}], "stats": {"total": 20, "additions": 14, "deletions": 6}, "files": [{"sha": "6adb3506e646a17ceee8e507824966129cdff65e", "filename": "src/doc/unstable-book/src/language-features/lang-items.md", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f001f7beebb2425ad59a62ef330c78f2d0fb31d1/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md", "raw_url": "https://github.com/rust-lang/rust/raw/f001f7beebb2425ad59a62ef330c78f2d0fb31d1/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md?ref=f001f7beebb2425ad59a62ef330c78f2d0fb31d1", "patch": "@@ -16,18 +16,26 @@ and one for deallocation. A freestanding program that uses the `Box`\n sugar for dynamic allocations via `malloc` and `free`:\n \n ```rust,ignore (libc-is-finicky)\n-#![feature(lang_items, box_syntax, start, libc, core_intrinsics, rustc_private)]\n+#![feature(lang_items, start, libc, core_intrinsics, rustc_private, rustc_attrs)]\n #![no_std]\n use core::intrinsics;\n use core::panic::PanicInfo;\n+use core::ptr::NonNull;\n \n extern crate libc;\n \n-struct Unique<T>(*mut T);\n+struct Unique<T>(NonNull<T>);\n \n #[lang = \"owned_box\"]\n pub struct Box<T>(Unique<T>);\n \n+impl<T> Box<T> {\n+    pub fn new(x: T) -> Self {\n+        #[rustc_box]\n+        Box::new(x)\n+    }\n+}\n+\n #[lang = \"exchange_malloc\"]\n unsafe fn allocate(size: usize, _align: usize) -> *mut u8 {\n     let p = libc::malloc(size as libc::size_t) as *mut u8;\n@@ -47,13 +55,13 @@ unsafe fn box_free<T: ?Sized>(ptr: *mut T) {\n \n #[start]\n fn main(_argc: isize, _argv: *const *const u8) -> isize {\n-    let _x = box 1;\n+    let _x = Box::new(1);\n \n     0\n }\n \n #[lang = \"eh_personality\"] extern fn rust_eh_personality() {}\n-#[lang = \"panic_impl\"] extern fn rust_begin_panic(info: &PanicInfo) -> ! { unsafe { intrinsics::abort() } }\n+#[lang = \"panic_impl\"] extern fn rust_begin_panic(_info: &PanicInfo) -> ! { intrinsics::abort() }\n #[no_mangle] pub extern fn rust_eh_register_frames () {}\n #[no_mangle] pub extern fn rust_eh_unregister_frames () {}\n ```"}, {"sha": "1fade6ce95b89516d4b456fda9b5635390e966ce", "filename": "src/doc/unstable-book/src/language-features/plugin.md", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f001f7beebb2425ad59a62ef330c78f2d0fb31d1/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "raw_url": "https://github.com/rust-lang/rust/raw/f001f7beebb2425ad59a62ef330c78f2d0fb31d1/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Fplugin.md?ref=f001f7beebb2425ad59a62ef330c78f2d0fb31d1", "patch": "@@ -37,7 +37,7 @@ additional checks for code style, safety, etc. Now let's write a plugin\n that warns about any item named `lintme`.\n \n ```rust,ignore (requires-stage-2)\n-#![feature(box_syntax, rustc_private)]\n+#![feature(rustc_private)]\n \n extern crate rustc_ast;\n \n@@ -68,7 +68,7 @@ impl EarlyLintPass for Pass {\n #[no_mangle]\n fn __rustc_plugin_registrar(reg: &mut Registry) {\n     reg.lint_store.register_lints(&[&TEST_LINT]);\n-    reg.lint_store.register_early_pass(|| box Pass);\n+    reg.lint_store.register_early_pass(|| Box::new(Pass));\n }\n ```\n "}]}