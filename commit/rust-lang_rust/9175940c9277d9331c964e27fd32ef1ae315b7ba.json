{"sha": "9175940c9277d9331c964e27fd32ef1ae315b7ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkxNzU5NDBjOTI3N2Q5MzMxYzk2NGUyN2ZkMzJlZjFhZTMxNWI3YmE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-22T23:09:42Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2020-03-22T23:09:42Z"}, "message": "Use more targetted span for error label", "tree": {"sha": "843fc17ca8b134a4b24246925edd97f760132d0f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/843fc17ca8b134a4b24246925edd97f760132d0f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9175940c9277d9331c964e27fd32ef1ae315b7ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9175940c9277d9331c964e27fd32ef1ae315b7ba", "html_url": "https://github.com/rust-lang/rust/commit/9175940c9277d9331c964e27fd32ef1ae315b7ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9175940c9277d9331c964e27fd32ef1ae315b7ba/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "854b78fe22af2ed010cc4367c3456eccf427b6dc", "url": "https://api.github.com/repos/rust-lang/rust/commits/854b78fe22af2ed010cc4367c3456eccf427b6dc", "html_url": "https://github.com/rust-lang/rust/commit/854b78fe22af2ed010cc4367c3456eccf427b6dc"}], "stats": {"total": 72, "additions": 36, "deletions": 36}, "files": [{"sha": "68996f5aaf973c68aaa4e6c3c3a3aea357347f3e", "filename": "src/librustc_typeck/check/method/suggest.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fsuggest.rs?ref=9175940c9277d9331c964e27fd32ef1ae315b7ba", "patch": "@@ -758,11 +758,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             MethodError::Ambiguity(sources) => {\n                 let mut err = struct_span_err!(\n                     self.sess(),\n-                    span,\n+                    item_name.span,\n                     E0034,\n                     \"multiple applicable items in scope\"\n                 );\n-                err.span_label(span, format!(\"multiple `{}` found\", item_name));\n+                err.span_label(item_name.span, format!(\"multiple `{}` found\", item_name));\n \n                 report_candidates(span, &mut err, sources, sugg_span);\n                 err.emit();\n@@ -772,13 +772,13 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 let kind = kind.descr(def_id);\n                 let mut err = struct_span_err!(\n                     self.tcx.sess,\n-                    span,\n+                    item_name.span,\n                     E0624,\n                     \"{} `{}` is private\",\n                     kind,\n                     item_name\n                 );\n-                err.span_label(span, &format!(\"private {}\", kind));\n+                err.span_label(item_name.span, &format!(\"private {}\", kind));\n                 self.suggest_valid_traits(&mut err, out_of_scope_traits);\n                 err.emit();\n             }"}, {"sha": "c5e32afbbce400f9bc44a8dc878f1adb902dd83f", "filename": "src/test/ui/associated-const/associated-const-ambiguity-report.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-ambiguity-report.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-ambiguity-report.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-ambiguity-report.stderr?ref=9175940c9277d9331c964e27fd32ef1ae315b7ba", "patch": "@@ -1,8 +1,8 @@\n error[E0034]: multiple applicable items in scope\n-  --> $DIR/associated-const-ambiguity-report.rs:17:16\n+  --> $DIR/associated-const-ambiguity-report.rs:17:23\n    |\n LL | const X: i32 = <i32>::ID;\n-   |                ^^^^^^^^^ multiple `ID` found\n+   |                       ^^ multiple `ID` found\n    |\n note: candidate #1 is defined in an impl of the trait `Foo` for the type `i32`\n   --> $DIR/associated-const-ambiguity-report.rs:10:5"}, {"sha": "1b9d7ac7e6c3f2e0d6e5247ca84e8b7bf09ee7b8", "filename": "src/test/ui/associated-const/associated-const-private-impl.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-private-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-private-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fassociated-const%2Fassociated-const-private-impl.stderr?ref=9175940c9277d9331c964e27fd32ef1ae315b7ba", "patch": "@@ -1,8 +1,8 @@\n error[E0624]: associated constant `ID` is private\n-  --> $DIR/associated-const-private-impl.rs:13:19\n+  --> $DIR/associated-const-private-impl.rs:13:30\n    |\n LL |     assert_eq!(1, bar1::Foo::ID);\n-   |                   ^^^^^^^^^^^^^ private associated constant\n+   |                              ^^ private associated constant\n \n error: aborting due to previous error\n "}, {"sha": "7977e529a11a6c140a94b503899af83ff4003dd3", "filename": "src/test/ui/error-codes/E0034.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0034.stderr?ref=9175940c9277d9331c964e27fd32ef1ae315b7ba", "patch": "@@ -1,8 +1,8 @@\n error[E0034]: multiple applicable items in scope\n-  --> $DIR/E0034.rs:20:5\n+  --> $DIR/E0034.rs:20:11\n    |\n LL |     Test::foo()\n-   |     ^^^^^^^^^ multiple `foo` found\n+   |           ^^^ multiple `foo` found\n    |\n note: candidate #1 is defined in an impl of the trait `Trait1` for the type `Test`\n   --> $DIR/E0034.rs:12:5"}, {"sha": "9b3b7a72e049eb617948574afc1b56569c564a70", "filename": "src/test/ui/issues/issue-21202.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fissues%2Fissue-21202.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fissues%2Fissue-21202.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21202.stderr?ref=9175940c9277d9331c964e27fd32ef1ae315b7ba", "patch": "@@ -1,8 +1,8 @@\n error[E0624]: associated function `foo` is private\n-  --> $DIR/issue-21202.rs:10:9\n+  --> $DIR/issue-21202.rs:10:14\n    |\n LL |         Foo::foo(&f);\n-   |         ^^^^^^^^ private associated function\n+   |              ^^^ private associated function\n \n error: aborting due to previous error\n "}, {"sha": "3c0f7f2b55026e6eda83f5b5be03b040d8e69884", "filename": "src/test/ui/issues/issue-53498.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fissues%2Fissue-53498.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fissues%2Fissue-53498.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-53498.stderr?ref=9175940c9277d9331c964e27fd32ef1ae315b7ba", "patch": "@@ -1,8 +1,8 @@\n error[E0624]: associated function `foo` is private\n-  --> $DIR/issue-53498.rs:16:5\n+  --> $DIR/issue-53498.rs:16:27\n    |\n LL |     test::Foo::<test::B>::foo();\n-   |     ^^^^^^^^^^^^^^^^^^^^^^^^^ private associated function\n+   |                           ^^^ private associated function\n \n error: aborting due to previous error\n "}, {"sha": "249464108875c5b96218435586524d45903fd08d", "filename": "src/test/ui/methods/method-ambig-two-traits-from-impls2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmethods%2Fmethod-ambig-two-traits-from-impls2.stderr?ref=9175940c9277d9331c964e27fd32ef1ae315b7ba", "patch": "@@ -1,8 +1,8 @@\n error[E0034]: multiple applicable items in scope\n-  --> $DIR/method-ambig-two-traits-from-impls2.rs:15:5\n+  --> $DIR/method-ambig-two-traits-from-impls2.rs:15:9\n    |\n LL |     AB::foo();\n-   |     ^^^^^^^ multiple `foo` found\n+   |         ^^^ multiple `foo` found\n    |\n note: candidate #1 is defined in an impl of the trait `A` for the type `AB`\n   --> $DIR/method-ambig-two-traits-from-impls2.rs:7:5"}, {"sha": "65c10a7bca75deba5dc98673354130e2d2d1f361", "filename": "src/test/ui/privacy/privacy1.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Fprivacy1.stderr?ref=9175940c9277d9331c964e27fd32ef1ae315b7ba", "patch": "@@ -155,28 +155,28 @@ LL |     trait B {\n    |     ^^^^^^^\n \n error[E0624]: associated function `bar` is private\n-  --> $DIR/privacy1.rs:77:9\n+  --> $DIR/privacy1.rs:77:23\n    |\n LL |         self::baz::A::bar();\n-   |         ^^^^^^^^^^^^^^^^^ private associated function\n+   |                       ^^^ private associated function\n \n error[E0624]: associated function `bar` is private\n-  --> $DIR/privacy1.rs:95:5\n+  --> $DIR/privacy1.rs:95:13\n    |\n LL |     bar::A::bar();\n-   |     ^^^^^^^^^^^ private associated function\n+   |             ^^^ private associated function\n \n error[E0624]: associated function `bar` is private\n-  --> $DIR/privacy1.rs:102:9\n+  --> $DIR/privacy1.rs:102:19\n    |\n LL |         ::bar::A::bar();\n-   |         ^^^^^^^^^^^^^ private associated function\n+   |                   ^^^ private associated function\n \n error[E0624]: associated function `bar` is private\n-  --> $DIR/privacy1.rs:105:9\n+  --> $DIR/privacy1.rs:105:24\n    |\n LL |         ::bar::baz::A::bar();\n-   |         ^^^^^^^^^^^^^^^^^^ private associated function\n+   |                        ^^^ private associated function\n \n error[E0624]: associated function `bar2` is private\n   --> $DIR/privacy1.rs:108:23"}, {"sha": "40512a34bd95991cc0b5d9e3cdd6e74d63082ca2", "filename": "src/test/ui/privacy/restricted/test.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprivacy%2Frestricted%2Ftest.stderr?ref=9175940c9277d9331c964e27fd32ef1ae315b7ba", "patch": "@@ -59,10 +59,10 @@ LL |     S::default().f();\n    |                  ^ private associated function\n \n error[E0624]: associated function `g` is private\n-  --> $DIR/test.rs:33:5\n+  --> $DIR/test.rs:33:8\n    |\n LL |     S::g();\n-   |     ^^^^ private associated function\n+   |        ^ private associated function\n \n error[E0616]: field `y` of struct `pub_restricted::Universe` is private\n   --> $DIR/test.rs:42:15"}, {"sha": "569608780def99ee4f066f3a31c38009dc97fa1d", "filename": "src/test/ui/static/static-method-privacy.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fstatic%2Fstatic-method-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fstatic%2Fstatic-method-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic%2Fstatic-method-privacy.stderr?ref=9175940c9277d9331c964e27fd32ef1ae315b7ba", "patch": "@@ -1,8 +1,8 @@\n error[E0624]: associated function `new` is private\n-  --> $DIR/static-method-privacy.rs:9:13\n+  --> $DIR/static-method-privacy.rs:9:19\n    |\n LL |     let _ = a::S::new();\n-   |             ^^^^^^^^^ private associated function\n+   |                   ^^^ private associated function\n \n error: aborting due to previous error\n "}, {"sha": "7fd5c11fcf09049992102ec9a4f31d5750ae6175", "filename": "src/test/ui/traits/trait-item-privacy.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-item-privacy.stderr?ref=9175940c9277d9331c964e27fd32ef1ae315b7ba", "patch": "@@ -74,10 +74,10 @@ LL | use method::B;\n    |\n \n error[E0624]: associated function `a` is private\n-  --> $DIR/trait-item-privacy.rs:84:5\n+  --> $DIR/trait-item-privacy.rs:84:8\n    |\n LL |     C::a(&S);\n-   |     ^^^^ private associated function\n+   |        ^ private associated function\n \n error[E0599]: no associated item named `A` found for struct `S` in the current scope\n   --> $DIR/trait-item-privacy.rs:97:8\n@@ -111,10 +111,10 @@ LL | use assoc_const::B;\n    |\n \n error[E0624]: associated constant `A` is private\n-  --> $DIR/trait-item-privacy.rs:101:5\n+  --> $DIR/trait-item-privacy.rs:101:8\n    |\n LL |     C::A;\n-   |     ^^^^ private associated constant\n+   |        ^ private associated constant\n \n error[E0038]: the trait `assoc_const::C` cannot be made into an object\n   --> $DIR/trait-item-privacy.rs:101:5"}, {"sha": "8b7e43ccc04e90e4f566ede7d44dbebd68e9da48", "filename": "src/test/ui/xc-private-method.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fxc-private-method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/9175940c9277d9331c964e27fd32ef1ae315b7ba/src%2Ftest%2Fui%2Fxc-private-method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fxc-private-method.stderr?ref=9175940c9277d9331c964e27fd32ef1ae315b7ba", "patch": "@@ -1,14 +1,14 @@\n error[E0624]: associated function `static_meth_struct` is private\n-  --> $DIR/xc-private-method.rs:6:13\n+  --> $DIR/xc-private-method.rs:6:44\n    |\n LL |     let _ = xc_private_method_lib::Struct::static_meth_struct();\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private associated function\n+   |                                            ^^^^^^^^^^^^^^^^^^ private associated function\n \n error[E0624]: associated function `static_meth_enum` is private\n-  --> $DIR/xc-private-method.rs:9:13\n+  --> $DIR/xc-private-method.rs:9:42\n    |\n LL |     let _ = xc_private_method_lib::Enum::static_meth_enum();\n-   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ private associated function\n+   |                                          ^^^^^^^^^^^^^^^^ private associated function\n \n error: aborting due to 2 previous errors\n "}]}