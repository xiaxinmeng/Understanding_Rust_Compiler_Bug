{"sha": "f6a8ffc625aec7865280e3dfc2d3bd822f072142", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2YThmZmM2MjVhZWM3ODY1MjgwZTNkZmMyZDNiZDgyMmYwNzIxNDI=", "commit": {"author": {"name": "Paul Stansifer", "email": "paul.stansifer@gmail.com", "date": "2012-11-22T15:29:56Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-11-29T20:09:11Z"}, "message": "Test statement macros.", "tree": {"sha": "4896c4ac0948d07cf4fad2cfaa2d6ccb25829e27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4896c4ac0948d07cf4fad2cfaa2d6ccb25829e27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6a8ffc625aec7865280e3dfc2d3bd822f072142", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6a8ffc625aec7865280e3dfc2d3bd822f072142", "html_url": "https://github.com/rust-lang/rust/commit/f6a8ffc625aec7865280e3dfc2d3bd822f072142", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6a8ffc625aec7865280e3dfc2d3bd822f072142/comments", "author": {"login": "paulstansifer", "id": 1431, "node_id": "MDQ6VXNlcjE0MzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1431?v=4", "gravatar_id": "", "url": "https://api.github.com/users/paulstansifer", "html_url": "https://github.com/paulstansifer", "followers_url": "https://api.github.com/users/paulstansifer/followers", "following_url": "https://api.github.com/users/paulstansifer/following{/other_user}", "gists_url": "https://api.github.com/users/paulstansifer/gists{/gist_id}", "starred_url": "https://api.github.com/users/paulstansifer/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/paulstansifer/subscriptions", "organizations_url": "https://api.github.com/users/paulstansifer/orgs", "repos_url": "https://api.github.com/users/paulstansifer/repos", "events_url": "https://api.github.com/users/paulstansifer/events{/privacy}", "received_events_url": "https://api.github.com/users/paulstansifer/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15e03e1e5e7bbde88b15411f9cb529d02ff5d23e", "url": "https://api.github.com/repos/rust-lang/rust/commits/15e03e1e5e7bbde88b15411f9cb529d02ff5d23e", "html_url": "https://github.com/rust-lang/rust/commit/15e03e1e5e7bbde88b15411f9cb529d02ff5d23e"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "e0b88d1c892bc5d779f0045bbfb316c7f433e54e", "filename": "src/test/run-pass/macro-stmt.rs", "status": "added", "additions": 32, "deletions": 0, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f6a8ffc625aec7865280e3dfc2d3bd822f072142/src%2Ftest%2Frun-pass%2Fmacro-stmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6a8ffc625aec7865280e3dfc2d3bd822f072142/src%2Ftest%2Frun-pass%2Fmacro-stmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmacro-stmt.rs?ref=f6a8ffc625aec7865280e3dfc2d3bd822f072142", "patch": "@@ -0,0 +1,32 @@\n+// xfail-pretty - token trees can't pretty print\n+\n+macro_rules! myfn(\n+    ( $f:ident, ( $( $x:ident ),* ), $body:block ) => (\n+        fn $f( $( $x : int),* ) -> int $body\n+    )\n+)\n+\n+myfn!(add, (a,b), { return a+b; } )\n+\n+fn main() {\n+\n+    macro_rules! mylet(\n+        ($x:ident, $val:expr) => (\n+            let $x = $val;\n+        )\n+    );\n+\n+    mylet!(y, 8*2);\n+    assert(y == 16);\n+\n+    myfn!(mult, (a,b), { a*b } );\n+\n+    assert (mult(2, add(4,4)) == 16);\n+\n+    macro_rules! actually_an_expr_macro (\n+        () => ( 16 )\n+    )\n+\n+    assert { actually_an_expr_macro!() } == 16;\n+\n+}"}]}