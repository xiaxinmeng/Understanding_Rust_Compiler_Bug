{"sha": "94c02af8733cf369d21071d23f9bd7b249d4af8f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk0YzAyYWY4NzMzY2YzNjlkMjEwNzFkMjNmOWJkN2IyNDlkNGFmOGY=", "commit": {"author": {"name": "Julia Evans", "email": "julia@jvns.ca", "date": "2013-12-02T19:39:11Z"}, "committer": {"name": "Julia Evans", "email": "julia@jvns.ca", "date": "2013-12-02T19:39:11Z"}, "message": "Add section on closure types to manual", "tree": {"sha": "0098c1c98c63880049818fc2d1d69117cc9a0b64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0098c1c98c63880049818fc2d1d69117cc9a0b64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/94c02af8733cf369d21071d23f9bd7b249d4af8f", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/94c02af8733cf369d21071d23f9bd7b249d4af8f", "html_url": "https://github.com/rust-lang/rust/commit/94c02af8733cf369d21071d23f9bd7b249d4af8f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/94c02af8733cf369d21071d23f9bd7b249d4af8f/comments", "author": {"login": "jvns", "id": 817739, "node_id": "MDQ6VXNlcjgxNzczOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/817739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvns", "html_url": "https://github.com/jvns", "followers_url": "https://api.github.com/users/jvns/followers", "following_url": "https://api.github.com/users/jvns/following{/other_user}", "gists_url": "https://api.github.com/users/jvns/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvns/subscriptions", "organizations_url": "https://api.github.com/users/jvns/orgs", "repos_url": "https://api.github.com/users/jvns/repos", "events_url": "https://api.github.com/users/jvns/events{/privacy}", "received_events_url": "https://api.github.com/users/jvns/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jvns", "id": 817739, "node_id": "MDQ6VXNlcjgxNzczOQ==", "avatar_url": "https://avatars.githubusercontent.com/u/817739?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jvns", "html_url": "https://github.com/jvns", "followers_url": "https://api.github.com/users/jvns/followers", "following_url": "https://api.github.com/users/jvns/following{/other_user}", "gists_url": "https://api.github.com/users/jvns/gists{/gist_id}", "starred_url": "https://api.github.com/users/jvns/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jvns/subscriptions", "organizations_url": "https://api.github.com/users/jvns/orgs", "repos_url": "https://api.github.com/users/jvns/repos", "events_url": "https://api.github.com/users/jvns/events{/privacy}", "received_events_url": "https://api.github.com/users/jvns/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61443dc1f5089df637edba83587b9f3020063266", "url": "https://api.github.com/repos/rust-lang/rust/commits/61443dc1f5089df637edba83587b9f3020063266", "html_url": "https://github.com/rust-lang/rust/commit/61443dc1f5089df637edba83587b9f3020063266"}], "stats": {"total": 26, "additions": 26, "deletions": 0}, "files": [{"sha": "d71fefa2dd79595677eb68d8a485e12bb0948b41", "filename": "doc/rust.md", "status": "modified", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/94c02af8733cf369d21071d23f9bd7b249d4af8f/doc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/94c02af8733cf369d21071d23f9bd7b249d4af8f/doc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.md?ref=94c02af8733cf369d21071d23f9bd7b249d4af8f", "patch": "@@ -3193,6 +3193,32 @@ let bo: Binop = add;\n x = bo(5,7);\n ~~~~\n \n+### Closure types\n+\n+The type of a closure mapping an input of type `A` to an output of type `B` is `|A| -> B`. A closure with no arguments or return values has type `||`.\n+\n+\n+An example of creating and calling a closure:\n+\n+```rust\n+let captured_var = 10; \n+\n+let closure_no_args = || println!(\"captured_var={}\", captured_var); \n+\n+let closure_args = |arg: int| -> int {\n+  println!(\"captured_var={}, arg={}\", captured_var, arg); \n+  arg // Note lack of semicolon after 'arg'\n+};\n+\n+fn call_closure(c1: ||, c2: |int| -> int) {\n+  c1();\n+  c2(2);\n+}\n+\n+call_closure(closure_no_args, closure_args);\n+\n+```\n+\n ### Object types\n \n Every trait item (see [traits](#traits)) defines a type with the same name as the trait."}]}