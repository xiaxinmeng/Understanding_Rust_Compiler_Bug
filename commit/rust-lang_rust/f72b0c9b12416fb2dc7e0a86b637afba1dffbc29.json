{"sha": "f72b0c9b12416fb2dc7e0a86b637afba1dffbc29", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3MmIwYzliMTI0MTZmYjJkYzdlMGE4NmI2MzdhZmJhMWRmZmJjMjk=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-07T13:50:49Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-03-07T13:50:49Z"}, "message": "Make formatting consistent.", "tree": {"sha": "4fd6b7c8bdc0a330c9f71252ba828202029fbf81", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fd6b7c8bdc0a330c9f71252ba828202029fbf81"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f72b0c9b12416fb2dc7e0a86b637afba1dffbc29", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f72b0c9b12416fb2dc7e0a86b637afba1dffbc29", "html_url": "https://github.com/rust-lang/rust/commit/f72b0c9b12416fb2dc7e0a86b637afba1dffbc29", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f72b0c9b12416fb2dc7e0a86b637afba1dffbc29/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "619daf0129027fcbb526cb5beef19f470a43c6ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/619daf0129027fcbb526cb5beef19f470a43c6ae", "html_url": "https://github.com/rust-lang/rust/commit/619daf0129027fcbb526cb5beef19f470a43c6ae"}], "stats": {"total": 7, "additions": 3, "deletions": 4}, "files": [{"sha": "22cbd2397192d11f696b9b418e13216833ef8647", "filename": "src/interpreter.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f72b0c9b12416fb2dc7e0a86b637afba1dffbc29/src%2Finterpreter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f72b0c9b12416fb2dc7e0a86b637afba1dffbc29/src%2Finterpreter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter.rs?ref=f72b0c9b12416fb2dc7e0a86b637afba1dffbc29", "patch": "@@ -236,10 +236,9 @@ impl<'a, 'tcx: 'a> Interpreter<'a, 'tcx> {\n         Ok(())\n     }\n \n-    fn eval_binary_op(\n-        &mut self, bin_op: mir::BinOp, left_operand: &mir::Operand<'tcx>,\n-        right_operand: &mir::Operand<'tcx>, dest: Pointer\n-    ) -> EvalResult<()> {\n+    fn eval_binary_op(&mut self, bin_op: mir::BinOp, left_operand: &mir::Operand<'tcx>,\n+                      right_operand: &mir::Operand<'tcx>, dest: Pointer) -> EvalResult<()>\n+    {\n         // FIXME(tsion): Check for non-integer binary operations.\n         let left = try!(self.operand_to_ptr(left_operand));\n         let right = try!(self.operand_to_ptr(right_operand));"}]}