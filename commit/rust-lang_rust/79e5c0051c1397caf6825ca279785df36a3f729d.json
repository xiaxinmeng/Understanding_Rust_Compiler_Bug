{"sha": "79e5c0051c1397caf6825ca279785df36a3f729d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc5ZTVjMDA1MWMxMzk3Y2FmNjgyNWNhMjc5Nzg1ZGYzNmEzZjcyOWQ=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-15T21:26:07Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-04-15T21:26:07Z"}, "message": "Rollup merge of #24457 - Ms2ger:more-typos, r=alexcrichton", "tree": {"sha": "ca496f30b96a5111115da27383c95275fd229b8d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca496f30b96a5111115da27383c95275fd229b8d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/79e5c0051c1397caf6825ca279785df36a3f729d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/79e5c0051c1397caf6825ca279785df36a3f729d", "html_url": "https://github.com/rust-lang/rust/commit/79e5c0051c1397caf6825ca279785df36a3f729d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/79e5c0051c1397caf6825ca279785df36a3f729d/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b5378f452e301dbcdf49cc6514a98f3367901d18", "url": "https://api.github.com/repos/rust-lang/rust/commits/b5378f452e301dbcdf49cc6514a98f3367901d18", "html_url": "https://github.com/rust-lang/rust/commit/b5378f452e301dbcdf49cc6514a98f3367901d18"}, {"sha": "9a5a47eddc0df36d2d3321552eed7fbb8b05bb3e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a5a47eddc0df36d2d3321552eed7fbb8b05bb3e", "html_url": "https://github.com/rust-lang/rust/commit/9a5a47eddc0df36d2d3321552eed7fbb8b05bb3e"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "0cfdcd2413fd9f8b57bdee9ecb6006b3e050b62b", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79e5c0051c1397caf6825ca279785df36a3f729d/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79e5c0051c1397caf6825ca279785df36a3f729d/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=79e5c0051c1397caf6825ca279785df36a3f729d", "patch": "@@ -274,7 +274,7 @@ pub fn get_mut<T>(this: &mut Arc<T>) -> Option<&mut T> {\n         // reference to the inner data.\n         let inner = unsafe { &mut **this._ptr };\n         Some(&mut inner.data)\n-    }else {\n+    } else {\n         None\n     }\n }"}, {"sha": "04513e9d048bedfd5ec312119a9941c051fc780c", "filename": "src/libstd/ffi/c_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79e5c0051c1397caf6825ca279785df36a3f729d/src%2Flibstd%2Fffi%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79e5c0051c1397caf6825ca279785df36a3f729d/src%2Flibstd%2Fffi%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fffi%2Fc_str.rs?ref=79e5c0051c1397caf6825ca279785df36a3f729d", "patch": "@@ -172,7 +172,7 @@ impl CString {\n     ///\n     /// This method is equivalent to `new` except that no runtime assertion\n     /// is made that `v` contains no 0 bytes, and it requires an actual\n-    /// byte vector, not anyhting that can be converted to one with Into.\n+    /// byte vector, not anything that can be converted to one with Into.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub unsafe fn from_vec_unchecked(mut v: Vec<u8>) -> CString {\n         v.push(0);"}, {"sha": "d30d44a04d336c9091da04f50fd0dc580afb44e5", "filename": "src/libstd/fs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/79e5c0051c1397caf6825ca279785df36a3f729d/src%2Flibstd%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79e5c0051c1397caf6825ca279785df36a3f729d/src%2Flibstd%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ffs.rs?ref=79e5c0051c1397caf6825ca279785df36a3f729d", "patch": "@@ -1099,8 +1099,8 @@ impl PathExt for Path {\n /// Changes the timestamps for a file's last modification and access time.\n ///\n /// The file at the path specified will have its last access time set to\n-/// `atime` and its modification time set to `mtime`. The times specified should\n-/// be in milliseconds.\n+/// `accessed` and its modification time set to `modified`. The times specified\n+/// should be in milliseconds.\n #[unstable(feature = \"fs_time\",\n            reason = \"the argument type of u64 is not quite appropriate for \\\n                      this function and may change if the standard library \\"}, {"sha": "93c6deac6e59ae39ae0506b12658930fd373ba57", "filename": "src/libstd/io/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79e5c0051c1397caf6825ca279785df36a3f729d/src%2Flibstd%2Fio%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79e5c0051c1397caf6825ca279785df36a3f729d/src%2Flibstd%2Fio%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmod.rs?ref=79e5c0051c1397caf6825ca279785df36a3f729d", "patch": "@@ -148,7 +148,7 @@ pub trait Read {\n     ///\n     /// If the return value of this method is `Ok(n)`, then it must be\n     /// guaranteed that `0 <= n <= buf.len()`. A nonzero `n` value indicates\n-    /// that the buffer `buf` has ben filled in with `n` bytes of data from this\n+    /// that the buffer `buf` has been filled in with `n` bytes of data from this\n     /// source. If `n` is `0`, then it can indicate one of two scenarios:\n     ///\n     /// 1. This reader has reached its \"end of file\" and will likely no longer"}, {"sha": "e48d0e6008b87f4ab0837b7c112127c293276a96", "filename": "src/libstd/net/tcp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79e5c0051c1397caf6825ca279785df36a3f729d/src%2Flibstd%2Fnet%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79e5c0051c1397caf6825ca279785df36a3f729d/src%2Flibstd%2Fnet%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnet%2Ftcp.rs?ref=79e5c0051c1397caf6825ca279785df36a3f729d", "patch": "@@ -213,7 +213,7 @@ impl TcpListener {\n     /// Returns an iterator over the connections being received on this\n     /// listener.\n     ///\n-    /// The returned iterator will never returned `None` and will also not yield\n+    /// The returned iterator will never return `None` and will also not yield\n     /// the peer's `SocketAddr` structure.\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn incoming(&self) -> Incoming {"}, {"sha": "cf9bc9bb56a897e7e35cea1cf970a6beef11a2ba", "filename": "src/test/run-pass/method-two-trait-defer-resolution-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/79e5c0051c1397caf6825ca279785df36a3f729d/src%2Ftest%2Frun-pass%2Fmethod-two-trait-defer-resolution-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/79e5c0051c1397caf6825ca279785df36a3f729d/src%2Ftest%2Frun-pass%2Fmethod-two-trait-defer-resolution-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmethod-two-trait-defer-resolution-2.rs?ref=79e5c0051c1397caf6825ca279785df36a3f729d", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// Test that when we write `x.foo()`, we do nothave to know the\n+// Test that when we write `x.foo()`, we do not have to know the\n // complete type of `x` in order to type-check the method call. In\n // this case, we know that `x: Vec<_1>`, but we don't know what type\n // `_1` is (because the call to `push` comes later). To pick between"}]}