{"sha": "65dca115142365af2d7fd765bb5b715e697da4b1", "node_id": "C_kwDOAAsO6NoAKDY1ZGNhMTE1MTQyMzY1YWYyZDdmZDc2NWJiNWI3MTVlNjk3ZGE0YjE", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-10-15T10:15:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-10-15T10:15:33Z"}, "message": "Rollup merge of #103003 - TaKO8Ki:fix-102989, r=compiler-errors\n\nFix `suggest_floating_point_literal` ICE\n\nFixes #102989", "tree": {"sha": "dfe4dc8ea1b921e372a51f49bb81fae3de2ac778", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dfe4dc8ea1b921e372a51f49bb81fae3de2ac778"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/65dca115142365af2d7fd765bb5b715e697da4b1", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjSohFCRBK7hj4Ov3rIwAA16cIAEZ3wdo5rhh6sVxScLuYwFhf\nbedg1qr6TvE91YA1q7kipYcLcwh33RoL63Ivj3CC1IjcimNAXbr8kbW/VWOvpOZx\nLZonZPemM6+vTRnCSj2PElP+QCY5qVlVU3DS0aqA+pO+7mbHC4HU7yBfBlZA1OKW\ngp59DpRdABv490H5+9AyTVNKPAyI7cjiXDOKWYNy0uk+33FHRN7hZmrPLuLvETnh\ndD4B3fNo7iUSikFdY4z3JlpLJNsZiWBjxVBUzjy5RbnFvdMWnZJmECsVxFarse+J\n6FRD9kzg2Py1BO2Jdg0mcteYRW9Bo/mpglo5GbZOX03cLoRvG05ClDtXFVHVplo=\n=a69l\n-----END PGP SIGNATURE-----\n", "payload": "tree dfe4dc8ea1b921e372a51f49bb81fae3de2ac778\nparent b79ad57ad7dae81e27fb37b8c703dc4e4acdb7a7\nparent 062ea9ce4ded4e5a864dfb4109d6533e03d67679\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1665828933 +0530\ncommitter GitHub <noreply@github.com> 1665828933 +0530\n\nRollup merge of #103003 - TaKO8Ki:fix-102989, r=compiler-errors\n\nFix `suggest_floating_point_literal` ICE\n\nFixes #102989\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/65dca115142365af2d7fd765bb5b715e697da4b1", "html_url": "https://github.com/rust-lang/rust/commit/65dca115142365af2d7fd765bb5b715e697da4b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/65dca115142365af2d7fd765bb5b715e697da4b1/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b79ad57ad7dae81e27fb37b8c703dc4e4acdb7a7", "url": "https://api.github.com/repos/rust-lang/rust/commits/b79ad57ad7dae81e27fb37b8c703dc4e4acdb7a7", "html_url": "https://github.com/rust-lang/rust/commit/b79ad57ad7dae81e27fb37b8c703dc4e4acdb7a7"}, {"sha": "062ea9ce4ded4e5a864dfb4109d6533e03d67679", "url": "https://api.github.com/repos/rust-lang/rust/commits/062ea9ce4ded4e5a864dfb4109d6533e03d67679", "html_url": "https://github.com/rust-lang/rust/commit/062ea9ce4ded4e5a864dfb4109d6533e03d67679"}], "stats": {"total": 97, "additions": 84, "deletions": 13}, "files": [{"sha": "4431cf9f4436b3defd70e161fa63b5483d729b09", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 9, "deletions": 13, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/65dca115142365af2d7fd765bb5b715e697da4b1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65dca115142365af2d7fd765bb5b715e697da4b1/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=65dca115142365af2d7fd765bb5b715e697da4b1", "patch": "@@ -2937,19 +2937,15 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n             ObligationCauseCode::BinOp { rhs_span: Some(span), is_lit, .. } if *is_lit => span,\n             _ => return,\n         };\n-        match (\n-            trait_ref.skip_binder().self_ty().kind(),\n-            trait_ref.skip_binder().substs.type_at(1).kind(),\n-        ) {\n-            (ty::Float(_), ty::Infer(InferTy::IntVar(_))) => {\n-                err.span_suggestion_verbose(\n-                    rhs_span.shrink_to_hi(),\n-                    \"consider using a floating-point literal by writing it with `.0`\",\n-                    \".0\",\n-                    Applicability::MaybeIncorrect,\n-                );\n-            }\n-            _ => {}\n+        if let ty::Float(_) = trait_ref.skip_binder().self_ty().kind()\n+            && let ty::Infer(InferTy::IntVar(_)) = trait_ref.skip_binder().substs.type_at(1).kind()\n+        {\n+            err.span_suggestion_verbose(\n+                rhs_span.shrink_to_hi(),\n+                \"consider using a floating-point literal by writing it with `.0`\",\n+                \".0\",\n+                Applicability::MaybeIncorrect,\n+            );\n         }\n     }\n "}, {"sha": "62f95272fbfd26637104a676bead5a2ff712bca0", "filename": "src/test/ui/traits/issue-102989.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/65dca115142365af2d7fd765bb5b715e697da4b1/src%2Ftest%2Fui%2Ftraits%2Fissue-102989.rs", "raw_url": "https://github.com/rust-lang/rust/raw/65dca115142365af2d7fd765bb5b715e697da4b1/src%2Ftest%2Fui%2Ftraits%2Fissue-102989.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-102989.rs?ref=65dca115142365af2d7fd765bb5b715e697da4b1", "patch": "@@ -0,0 +1,16 @@\n+// normalize-stderr-test \"loaded from .*libcore-.*.rlib\" -> \"loaded from SYSROOT/libcore-*.rlib\"\n+\n+#![feature(lang_items)]\n+#[lang=\"sized\"]\n+trait Sized { } //~ ERROR found duplicate lang item `sized`\n+\n+fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n+    //~^ ERROR `self` parameter is only allowed in associated functions\n+    //~| ERROR cannot find type `Struct` in this scope\n+    //~| ERROR mismatched types\n+    let x = x << 1;\n+    //~^ ERROR the size for values of type `{integer}` cannot be known at compilation time\n+    //~| ERROR cannot find value `x` in this scope\n+}\n+\n+fn main() {}"}, {"sha": "efe1a246774576a450cc5c0b25c610f89080c481", "filename": "src/test/ui/traits/issue-102989.stderr", "status": "added", "additions": 59, "deletions": 0, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/65dca115142365af2d7fd765bb5b715e697da4b1/src%2Ftest%2Fui%2Ftraits%2Fissue-102989.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/65dca115142365af2d7fd765bb5b715e697da4b1/src%2Ftest%2Fui%2Ftraits%2Fissue-102989.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-102989.stderr?ref=65dca115142365af2d7fd765bb5b715e697da4b1", "patch": "@@ -0,0 +1,59 @@\n+error: `self` parameter is only allowed in associated functions\n+  --> $DIR/issue-102989.rs:7:15\n+   |\n+LL | fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n+   |               ^^^^ not semantically valid as function parameter\n+   |\n+   = note: associated functions are those in `impl` or `trait` definitions\n+\n+error[E0412]: cannot find type `Struct` in this scope\n+  --> $DIR/issue-102989.rs:7:22\n+   |\n+LL | fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n+   |                      ^^^^^^ not found in this scope\n+\n+error[E0425]: cannot find value `x` in this scope\n+  --> $DIR/issue-102989.rs:11:13\n+   |\n+LL |     let x = x << 1;\n+   |             ^ help: a local variable with a similar name exists: `f`\n+\n+error[E0152]: found duplicate lang item `sized`\n+  --> $DIR/issue-102989.rs:5:1\n+   |\n+LL | trait Sized { }\n+   | ^^^^^^^^^^^\n+   |\n+   = note: the lang item is first defined in crate `core` (which `std` depends on)\n+   = note: first definition in `core` loaded from SYSROOT/libcore-*.rlib\n+   = note: second definition in the local crate (`issue_102989`)\n+\n+error[E0277]: the size for values of type `{integer}` cannot be known at compilation time\n+  --> $DIR/issue-102989.rs:11:15\n+   |\n+LL |     let x = x << 1;\n+   |               ^^ doesn't have a size known at compile-time\n+   |\n+   = help: the trait `std::marker::Sized` is not implemented for `{integer}`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/issue-102989.rs:7:42\n+   |\n+LL | fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n+   |    ----------                            ^^^^ expected `&u32`, found `()`\n+   |    |\n+   |    implicitly returns `()` as its body has no tail or `return` expression\n+   |\n+note: consider returning one of these bindings\n+  --> $DIR/issue-102989.rs:7:30\n+   |\n+LL | fn ref_Struct(self: &Struct, f: &u32) -> &u32 {\n+   |                              ^\n+...\n+LL |     let x = x << 1;\n+   |         ^\n+\n+error: aborting due to 6 previous errors\n+\n+Some errors have detailed explanations: E0152, E0277, E0308, E0412, E0425.\n+For more information about an error, try `rustc --explain E0152`."}]}