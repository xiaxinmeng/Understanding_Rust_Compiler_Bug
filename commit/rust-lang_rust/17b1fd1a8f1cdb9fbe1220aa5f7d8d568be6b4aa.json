{"sha": "17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3YjFmZDFhOGYxY2RiOWZiZTEyMjBhYTVmN2Q4ZDU2OGJlNmI0YWE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-03T02:08:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-03T02:08:12Z"}, "message": "Rollup merge of #64931 - estebank:missing-param-ref, r=matthewjasper,Centril\n\nReword E0392 slightly\n\nMake it clearer that a type or lifetime argument not being used can be\nfixed by referencing it in a struct's fields, not just using `PhathomData`.\n\nCC #53589.", "tree": {"sha": "1acee9560f83e67d614228997bd1fc8068191ce3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1acee9560f83e67d614228997bd1fc8068191ce3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdlVgNCRBK7hj4Ov3rIwAAdHIIAJz+ChQ/7Nzu9nv3aGwhLyEM\nwFyvI9YXOiVWenTcOtsG1s2R8cQGBuHSKkXBb30lQT7YSQpercPT7wD3AZ7k+eIe\n1km6QY93rSHXsttaXUI3LGDQ9msqs7Y3sZXfjFlMv8HpSyxwc1PzD699Z6FOPb4N\nzeALiXohr9TMbJNanTYcJh6B/gtBU/QkXl6tOA76FUtXH4qDch4pRhTjn9Pa+2q7\nTTM+nGCBC1uRPgwt8woz/dwSmr2WAG4NqvDzRAHKz8l+llVO6jLB7FMtsXJnjZDA\nOsT5xR8DyUUtUoyXfhjFOrWU98paMnUSiE7NUzGJrsv7cSIUAnMaFwv32eyDO+k=\n=Jbp+\n-----END PGP SIGNATURE-----\n", "payload": "tree 1acee9560f83e67d614228997bd1fc8068191ce3\nparent 3e15e51acd68c784585469fc07dc12b41931ba2d\nparent a180294f8bb5653c844c9ca4a457a7e4bc47e162\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1570068492 +0200\ncommitter GitHub <noreply@github.com> 1570068492 +0200\n\nRollup merge of #64931 - estebank:missing-param-ref, r=matthewjasper,Centril\n\nReword E0392 slightly\n\nMake it clearer that a type or lifetime argument not being used can be\nfixed by referencing it in a struct's fields, not just using `PhathomData`.\n\nCC #53589.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "html_url": "https://github.com/rust-lang/rust/commit/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3e15e51acd68c784585469fc07dc12b41931ba2d", "url": "https://api.github.com/repos/rust-lang/rust/commits/3e15e51acd68c784585469fc07dc12b41931ba2d", "html_url": "https://github.com/rust-lang/rust/commit/3e15e51acd68c784585469fc07dc12b41931ba2d"}, {"sha": "a180294f8bb5653c844c9ca4a457a7e4bc47e162", "url": "https://api.github.com/repos/rust-lang/rust/commits/a180294f8bb5653c844c9ca4a457a7e4bc47e162", "html_url": "https://github.com/rust-lang/rust/commit/a180294f8bb5653c844c9ca4a457a7e4bc47e162"}], "stats": {"total": 55, "additions": 30, "deletions": 25}, "files": [{"sha": "de1cc12aea37cc02a6580a6897cbefe477ce5c50", "filename": "src/librustc_typeck/check/wfcheck.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwfcheck.rs?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -999,11 +999,16 @@ fn report_bivariance(tcx: TyCtxt<'_>, span: Span, param_name: ast::Name) {\n \n     let suggested_marker_id = tcx.lang_items().phantom_data();\n     // Help is available only in presence of lang items.\n-    if let Some(def_id) = suggested_marker_id {\n-        err.help(&format!(\"consider removing `{}` or using a marker such as `{}`\",\n-                          param_name,\n-                          tcx.def_path_str(def_id)));\n-    }\n+    let msg = if let Some(def_id) = suggested_marker_id {\n+        format!(\n+            \"consider removing `{}`, refering to it in a field, or using a marker such as `{}`\",\n+            param_name,\n+            tcx.def_path_str(def_id),\n+        )\n+    } else {\n+        format!( \"consider removing `{}` or refering to it in a field\", param_name)\n+    };\n+    err.help(&msg);\n     err.emit();\n }\n "}, {"sha": "b50605ce0fe1a2be656cd70ab13735d1ca362a87", "filename": "src/test/ui/const-generics/const-param-type-depends-on-type-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fconst-param-type-depends-on-type-param.stderr?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -18,7 +18,7 @@ error[E0392]: parameter `T` is never used\n LL | pub struct Dependent<T, const X: T>([(); X]);\n    |                      ^ unused parameter\n    |\n-   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "25cd9984052fa6b32deb7571559c5ad0450d500b", "filename": "src/test/ui/error-codes/E0392.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Ferror-codes%2FE0392.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Ferror-codes%2FE0392.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0392.stderr?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -4,7 +4,7 @@ error[E0392]: parameter `T` is never used\n LL | enum Foo<T> { Bar }\n    |          ^ unused parameter\n    |\n-   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to previous error\n "}, {"sha": "e8281b916f6fa236aef88f875e9328c51fdc59b3", "filename": "src/test/ui/inner-static-type-parameter.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Finner-static-type-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Finner-static-type-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finner-static-type-parameter.stderr?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -14,7 +14,7 @@ error[E0392]: parameter `T` is never used\n LL | enum Bar<T> { What }\n    |          ^ unused parameter\n    |\n-   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "9d1d769158687c4b29c18888dce75b33bcbdfe75", "filename": "src/test/ui/issues/issue-17904-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fissues%2Fissue-17904-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fissues%2Fissue-17904-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-17904-2.stderr?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -4,7 +4,7 @@ error[E0392]: parameter `T` is never used\n LL | struct Foo<T> where T: Copy;\n    |            ^ unused parameter\n    |\n-   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to previous error\n "}, {"sha": "675b47a68ad2e96081238334538dc8b8095c8817", "filename": "src/test/ui/issues/issue-20413.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fissues%2Fissue-20413.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fissues%2Fissue-20413.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20413.stderr?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -4,7 +4,7 @@ error[E0392]: parameter `T` is never used\n LL | struct NoData<T>;\n    |               ^ unused parameter\n    |\n-   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error[E0275]: overflow evaluating the requirement `NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<NoData<T>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>: Foo`\n   --> $DIR/issue-20413.rs:8:1"}, {"sha": "a092bab0e81f803526cc09ec3b6562ca36250940", "filename": "src/test/ui/issues/issue-36299.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fissues%2Fissue-36299.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fissues%2Fissue-36299.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-36299.stderr?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -4,15 +4,15 @@ error[E0392]: parameter `'a` is never used\n LL | struct Foo<'a, A> {}\n    |            ^^ unused parameter\n    |\n-   = help: consider removing `'a` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `A` is never used\n   --> $DIR/issue-36299.rs:1:16\n    |\n LL | struct Foo<'a, A> {}\n    |                ^ unused parameter\n    |\n-   = help: consider removing `A` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `A`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "699dba0e3f832c26198f4a7c60fedf1127efdcf6", "filename": "src/test/ui/issues/issue-36638.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fissues%2Fissue-36638.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fissues%2Fissue-36638.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-36638.stderr?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -16,7 +16,7 @@ error[E0392]: parameter `Self` is never used\n LL | struct Foo<Self>(Self);\n    |            ^^^^ unused parameter\n    |\n-   = help: consider removing `Self` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `Self`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "b5ef6ec594a9f6a01e69046a5e6924f80fa7620f", "filename": "src/test/ui/issues/issue-37534.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-37534.stderr?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -20,7 +20,7 @@ error[E0392]: parameter `T` is never used\n LL | struct Foo<T: ?Hash> { }\n    |            ^ unused parameter\n    |\n-   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "57a987f703851011cdbf33f0a0641da9bccac816", "filename": "src/test/ui/regions/region-bounds-on-objects-and-type-parameters.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fregions%2Fregion-bounds-on-objects-and-type-parameters.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fregions%2Fregion-bounds-on-objects-and-type-parameters.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregion-bounds-on-objects-and-type-parameters.stderr?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -27,7 +27,7 @@ error[E0392]: parameter `'c` is never used\n LL | struct Foo<'a,'b,'c> {\n    |                  ^^ unused parameter\n    |\n-   = help: consider removing `'c` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'c`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 3 previous errors\n "}, {"sha": "456077b65b83ee73999bbe7df38170aba9bc628c", "filename": "src/test/ui/self/self_type_keyword.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fself%2Fself_type_keyword.stderr?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -76,7 +76,7 @@ error[E0392]: parameter `'Self` is never used\n LL | struct Bar<'Self>;\n    |            ^^^^^ unused parameter\n    |\n-   = help: consider removing `'Self` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'Self`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 12 previous errors\n "}, {"sha": "95fa841a758880aecedfb10489c0785a16e7bfb1", "filename": "src/test/ui/variance/variance-regions-unused-direct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-direct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-direct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-direct.stderr?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -4,15 +4,15 @@ error[E0392]: parameter `'a` is never used\n LL | struct Bivariant<'a>;\n    |                  ^^ unused parameter\n    |\n-   = help: consider removing `'a` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `'d` is never used\n   --> $DIR/variance-regions-unused-direct.rs:7:19\n    |\n LL | struct Struct<'a, 'd> {\n    |                   ^^ unused parameter\n    |\n-   = help: consider removing `'d` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'d`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "c90bad8edd478b46d285e6f2b4975d8568844b00", "filename": "src/test/ui/variance/variance-regions-unused-indirect.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-indirect.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-indirect.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-regions-unused-indirect.stderr?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -4,15 +4,15 @@ error[E0392]: parameter `'a` is never used\n LL | enum Foo<'a> {\n    |          ^^ unused parameter\n    |\n-   = help: consider removing `'a` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `'a` is never used\n   --> $DIR/variance-regions-unused-indirect.rs:7:10\n    |\n LL | enum Bar<'a> {\n    |          ^^ unused parameter\n    |\n-   = help: consider removing `'a` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "bba301cdbfbcd28499bef21af9ab7309ae52406e", "filename": "src/test/ui/variance/variance-unused-region-param.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-region-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-region-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-region-param.stderr?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -4,15 +4,15 @@ error[E0392]: parameter `'a` is never used\n LL | struct SomeStruct<'a> { x: u32 }\n    |                   ^^ unused parameter\n    |\n-   = help: consider removing `'a` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `'a` is never used\n   --> $DIR/variance-unused-region-param.rs:4:15\n    |\n LL | enum SomeEnum<'a> { Nothing }\n    |               ^^ unused parameter\n    |\n-   = help: consider removing `'a` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `'a`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "d2891015eb7f522af118b7a3709026cb19b94bc8", "filename": "src/test/ui/variance/variance-unused-type-param.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fvariance%2Fvariance-unused-type-param.stderr?ref=17b1fd1a8f1cdb9fbe1220aa5f7d8d568be6b4aa", "patch": "@@ -4,23 +4,23 @@ error[E0392]: parameter `A` is never used\n LL | struct SomeStruct<A> { x: u32 }\n    |                   ^ unused parameter\n    |\n-   = help: consider removing `A` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `A`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `A` is never used\n   --> $DIR/variance-unused-type-param.rs:9:15\n    |\n LL | enum SomeEnum<A> { Nothing }\n    |               ^ unused parameter\n    |\n-   = help: consider removing `A` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `A`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error[E0392]: parameter `T` is never used\n   --> $DIR/variance-unused-type-param.rs:13:15\n    |\n LL | enum ListCell<T> {\n    |               ^ unused parameter\n    |\n-   = help: consider removing `T` or using a marker such as `std::marker::PhantomData`\n+   = help: consider removing `T`, refering to it in a field, or using a marker such as `std::marker::PhantomData`\n \n error: aborting due to 3 previous errors\n "}]}