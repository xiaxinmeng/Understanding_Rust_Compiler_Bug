{"sha": "5226395d6faef77a5f1dadb6235bcd99352e1843", "node_id": "C_kwDOAAsO6NoAKDUyMjYzOTVkNmZhZWY3N2E1ZjFkYWRiNjIzNWJjZDk5MzUyZTE4NDM", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-03-05T16:19:04Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2022-03-09T10:44:24Z"}, "message": "Fix soundness issue in scoped threads.", "tree": {"sha": "e3a120965ad384edaace9adb10ccbb414ef6c3b2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e3a120965ad384edaace9adb10ccbb414ef6c3b2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5226395d6faef77a5f1dadb6235bcd99352e1843", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5226395d6faef77a5f1dadb6235bcd99352e1843", "html_url": "https://github.com/rust-lang/rust/commit/5226395d6faef77a5f1dadb6235bcd99352e1843", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5226395d6faef77a5f1dadb6235bcd99352e1843/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6045c34f15d463c7d51104b968c1eabc5275b9c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/6045c34f15d463c7d51104b968c1eabc5275b9c1", "html_url": "https://github.com/rust-lang/rust/commit/6045c34f15d463c7d51104b968c1eabc5275b9c1"}], "stats": {"total": 17, "additions": 17, "deletions": 0}, "files": [{"sha": "56baa7e44558805315894c7e00fbf77ecd51ea08", "filename": "library/std/src/thread/mod.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/5226395d6faef77a5f1dadb6235bcd99352e1843/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5226395d6faef77a5f1dadb6235bcd99352e1843/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fthread%2Fmod.rs?ref=5226395d6faef77a5f1dadb6235bcd99352e1843", "patch": "@@ -1293,6 +1293,23 @@ impl<'scope, T> Drop for Packet<'scope, T> {\n             // panicked, and nobody consumed the panic payload, we make sure\n             // the scope function will panic.\n             let unhandled_panic = matches!(self.result.get_mut(), Some(Err(_)));\n+            // Drop the result before decrementing the number of running\n+            // threads, because the Drop implementation might still use things\n+            // it borrowed from 'scope.\n+            // This is only relevant for threads that aren't join()ed, as\n+            // join() will take the `result` and set it to None, such that\n+            // there is nothing left to drop here.\n+            // If this drop panics, that just results in an abort, because\n+            // we're outside of the outermost `catch_unwind` of our thread.\n+            // The same happens for detached non-scoped threads when dropping\n+            // their ignored return value (or panic payload) panics, so\n+            // there's no need to try to do anything better.\n+            // (And even if we tried to handle it, we'd also need to handle\n+            // the case where the panic payload we get out of it also panics\n+            // on drop, and so on. See issue #86027.)\n+            *self.result.get_mut() = None;\n+            // Now that there will be no more user code running on this thread\n+            // that can use 'scope, mark the thread as 'finished'.\n             scope.decrement_num_running_threads(unhandled_panic);\n         }\n     }"}]}