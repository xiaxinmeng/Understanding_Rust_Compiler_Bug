{"sha": "937a0aa20a18a749ac3c277536d5c41b0ba433f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkzN2EwYWEyMGExOGE3NDlhYzNjMjc3NTM2ZDVjNDFiMGJhNDMzZjU=", "commit": {"author": {"name": "Matt Kraai", "email": "kraai@ftbfs.org", "date": "2017-07-24T13:37:12Z"}, "committer": {"name": "Jay Hardee", "email": "hardeejj9@gmail.com", "date": "2017-07-31T23:06:23Z"}, "message": "Update from upstream.", "tree": {"sha": "5a01108100691a5345be09f8e109377e373fe057", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a01108100691a5345be09f8e109377e373fe057"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/937a0aa20a18a749ac3c277536d5c41b0ba433f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/937a0aa20a18a749ac3c277536d5c41b0ba433f5", "html_url": "https://github.com/rust-lang/rust/commit/937a0aa20a18a749ac3c277536d5c41b0ba433f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/937a0aa20a18a749ac3c277536d5c41b0ba433f5/comments", "author": {"login": "kraai", "id": 552646, "node_id": "MDQ6VXNlcjU1MjY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/552646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kraai", "html_url": "https://github.com/kraai", "followers_url": "https://api.github.com/users/kraai/followers", "following_url": "https://api.github.com/users/kraai/following{/other_user}", "gists_url": "https://api.github.com/users/kraai/gists{/gist_id}", "starred_url": "https://api.github.com/users/kraai/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kraai/subscriptions", "organizations_url": "https://api.github.com/users/kraai/orgs", "repos_url": "https://api.github.com/users/kraai/repos", "events_url": "https://api.github.com/users/kraai/events{/privacy}", "received_events_url": "https://api.github.com/users/kraai/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jayhardee9", "id": 6964208, "node_id": "MDQ6VXNlcjY5NjQyMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/6964208?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jayhardee9", "html_url": "https://github.com/jayhardee9", "followers_url": "https://api.github.com/users/jayhardee9/followers", "following_url": "https://api.github.com/users/jayhardee9/following{/other_user}", "gists_url": "https://api.github.com/users/jayhardee9/gists{/gist_id}", "starred_url": "https://api.github.com/users/jayhardee9/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jayhardee9/subscriptions", "organizations_url": "https://api.github.com/users/jayhardee9/orgs", "repos_url": "https://api.github.com/users/jayhardee9/repos", "events_url": "https://api.github.com/users/jayhardee9/events{/privacy}", "received_events_url": "https://api.github.com/users/jayhardee9/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f17def58010f207328ddb00437cf7e3f49d2681b", "url": "https://api.github.com/repos/rust-lang/rust/commits/f17def58010f207328ddb00437cf7e3f49d2681b", "html_url": "https://github.com/rust-lang/rust/commit/f17def58010f207328ddb00437cf7e3f49d2681b"}], "stats": {"total": 152, "additions": 78, "deletions": 74}, "files": [{"sha": "d31e46e34738932eb834183f08ee5677fb77f474", "filename": "CHANGELOG.md", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -1,6 +1,9 @@\n # Change Log\n All notable changes to this project will be documented in this file.\n \n+## 0.0.145\n+* Update to *rustc 1.20.0-nightly (afe145d22 2017-07-23)*\n+\n ## 0.0.144\n * Update to *rustc 1.20.0-nightly (086eaa78e 2017-07-15)*\n "}, {"sha": "a2aa6464566fefa83afd0402d71c5ff372c8b227", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.144\"\n+version = \"0.0.145\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\",\n@@ -32,7 +32,7 @@ path = \"src/main.rs\"\n \n [dependencies]\n # begin automatic update\n-clippy_lints = { version = \"0.0.144\", path = \"clippy_lints\" }\n+clippy_lints = { version = \"0.0.145\", path = \"clippy_lints\" }\n # end automatic update\n cargo_metadata = \"0.2\"\n "}, {"sha": "da3187be4aa4b1507bd2503fd62fb97e499e5365", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -1,7 +1,7 @@\n [package]\n name = \"clippy_lints\"\n # begin automatic update\n-version = \"0.0.144\"\n+version = \"0.0.145\"\n # end automatic update\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\","}, {"sha": "7ec528b90f44987b1d6be9e5b7b636793f535843", "filename": "clippy_lints/src/eta_reduction.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2Fsrc%2Feta_reduction.rs", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2Fsrc%2Feta_reduction.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feta_reduction.rs?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -96,7 +96,7 @@ fn check_closure(cx: &LateContext, expr: &Expr) {\n                                expr.span,\n                                \"redundant closure found\",\n                                |db| if let Some(snippet) = snippet_opt(cx, caller.span) {\n-                                   db.span_suggestion(expr.span, \"remove closure as shown:\", snippet);\n+                                   db.span_suggestion(expr.span, \"remove closure as shown\", snippet);\n                                });\n         }\n     }"}, {"sha": "3a88c53d61d8f26817373e130da0f16aaf1cf5a7", "filename": "clippy_lints/src/len_zero.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2Fsrc%2Flen_zero.rs", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2Fsrc%2Flen_zero.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flen_zero.rs?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -173,7 +173,7 @@ fn check_len_zero(cx: &LateContext, span: Span, name: Name, args: &[Expr], lit:\n                                LEN_ZERO,\n                                span,\n                                \"length comparison to zero\",\n-                               \"using `is_empty` is more concise:\",\n+                               \"using `is_empty` is more concise\",\n                                format!(\"{}{}.is_empty()\", op, snippet(cx, args[0].span, \"_\")));\n         }\n     }"}, {"sha": "788e6cda01ae255a511a72d0c4f151d3bb12703d", "filename": "clippy_lints/src/methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2Fsrc%2Fmethods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2Fsrc%2Fmethods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods.rs?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -1233,7 +1233,7 @@ fn lint_single_char_pattern(cx: &LateContext, expr: &hir::Expr, arg: &hir::Expr)\n                                SINGLE_CHAR_PATTERN,\n                                arg.span,\n                                \"single-character string constant used as pattern\",\n-                               |db| { db.span_suggestion(expr.span, \"try using a char instead:\", hint); });\n+                               |db| { db.span_suggestion(expr.span, \"try using a char instead\", hint); });\n         }\n     }\n }"}, {"sha": "c7d459acab019bc3889434a9093829b7cdb03fd1", "filename": "clippy_lints/src/misc_early.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2Fsrc%2Fmisc_early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2Fsrc%2Fmisc_early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc_early.rs?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -366,12 +366,12 @@ impl MiscEarly {\n                                     |db| {\n                     db.span_suggestion(\n                         lit.span,\n-                        \"if you mean to use a decimal constant, remove the `0` to remove confusion:\",\n+                        \"if you mean to use a decimal constant, remove the `0` to remove confusion\",\n                         src.trim_left_matches('0').to_string(),\n                     );\n                     db.span_suggestion(\n                         lit.span,\n-                        \"if you mean to use an octal constant, use `0o`:\",\n+                        \"if you mean to use an octal constant, use `0o`\",\n                         format!(\"0o{}\", src.trim_left_matches('0')),\n                     );\n                 });"}, {"sha": "4456547c7770fe287358d672af72240138f81784", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -126,7 +126,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BoolComparison {\n                                        BOOL_COMPARISON,\n                                        e.span,\n                                        \"equality checks against true are unnecessary\",\n-                                       \"try simplifying it as shown:\",\n+                                       \"try simplifying it as shown\",\n                                        hint);\n                 },\n                 (Other, Bool(true)) => {\n@@ -135,7 +135,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BoolComparison {\n                                        BOOL_COMPARISON,\n                                        e.span,\n                                        \"equality checks against true are unnecessary\",\n-                                       \"try simplifying it as shown:\",\n+                                       \"try simplifying it as shown\",\n                                        hint);\n                 },\n                 (Bool(false), Other) => {\n@@ -144,7 +144,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BoolComparison {\n                                        BOOL_COMPARISON,\n                                        e.span,\n                                        \"equality checks against false can be replaced by a negation\",\n-                                       \"try simplifying it as shown:\",\n+                                       \"try simplifying it as shown\",\n                                        (!hint).to_string());\n                 },\n                 (Other, Bool(false)) => {\n@@ -153,7 +153,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for BoolComparison {\n                                        BOOL_COMPARISON,\n                                        e.span,\n                                        \"equality checks against false can be replaced by a negation\",\n-                                       \"try simplifying it as shown:\",\n+                                       \"try simplifying it as shown\",\n                                        (!hint).to_string());\n                 },\n                 _ => (),"}, {"sha": "acd60ba2f46d106beeadcd28f40ecc5ce320d500", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -97,7 +97,7 @@ impl ReturnPass {\n                            ret_span,\n                            \"unneeded return statement\",\n                            |db| if let Some(snippet) = snippet_opt(cx, inner_span) {\n-                               db.span_suggestion(ret_span, \"remove `return` as shown:\", snippet);\n+                               db.span_suggestion(ret_span, \"remove `return` as shown\", snippet);\n                            });\n     }\n "}, {"sha": "e8e11e37a5cd0a6bae5b08243e4b1b7644f34511", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -584,6 +584,7 @@ pub fn multispan_sugg(db: &mut DiagnosticBuilder, help_msg: String, sugg: Vec<(S\n             })\n             .collect(),\n         msg: help_msg,\n+        show_code_when_inline: true,\n     };\n     db.suggestions.push(sugg);\n }"}, {"sha": "02b80cb965cc53e43ad1a11fb500c4a58bdceea1", "filename": "clippy_tests/examples/bool_comparison.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_tests%2Fexamples%2Fbool_comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_tests%2Fexamples%2Fbool_comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fbool_comparison.stderr?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -2,27 +2,27 @@ error: equality checks against true are unnecessary\n  --> bool_comparison.rs:7:8\n   |\n 7 |     if x == true { \"yes\" } else { \"no\" };\n-  |        ^^^^^^^^^ help: try simplifying it as shown:: `x`\n+  |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n   |\n   = note: `-D bool-comparison` implied by `-D warnings`\n \n error: equality checks against false can be replaced by a negation\n  --> bool_comparison.rs:8:8\n   |\n 8 |     if x == false { \"yes\" } else { \"no\" };\n-  |        ^^^^^^^^^^ help: try simplifying it as shown:: `!x`\n+  |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: equality checks against true are unnecessary\n  --> bool_comparison.rs:9:8\n   |\n 9 |     if true == x { \"yes\" } else { \"no\" };\n-  |        ^^^^^^^^^ help: try simplifying it as shown:: `x`\n+  |        ^^^^^^^^^ help: try simplifying it as shown: `x`\n \n error: equality checks against false can be replaced by a negation\n   --> bool_comparison.rs:10:8\n    |\n 10 |     if false == x { \"yes\" } else { \"no\" };\n-   |        ^^^^^^^^^^ help: try simplifying it as shown:: `!x`\n+   |        ^^^^^^^^^^ help: try simplifying it as shown: `!x`\n \n error: aborting due to 4 previous errors\n "}, {"sha": "e6600be3358dca461dd49ab4fe455e603b6b9117", "filename": "clippy_tests/examples/eta.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_tests%2Fexamples%2Feta.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_tests%2Fexamples%2Feta.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Feta.stderr?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -2,21 +2,21 @@ error: redundant closure found\n  --> eta.rs:7:27\n   |\n 7 |     let a = Some(1u8).map(|a| foo(a));\n-  |                           ^^^^^^^^^^ help: remove closure as shown:: `foo`\n+  |                           ^^^^^^^^^^ help: remove closure as shown: `foo`\n   |\n   = note: `-D redundant-closure` implied by `-D warnings`\n \n error: redundant closure found\n  --> eta.rs:8:10\n   |\n 8 |     meta(|a| foo(a));\n-  |          ^^^^^^^^^^ help: remove closure as shown:: `foo`\n+  |          ^^^^^^^^^^ help: remove closure as shown: `foo`\n \n error: redundant closure found\n  --> eta.rs:9:27\n   |\n 9 |     let c = Some(1u8).map(|a| {1+2; foo}(a));\n-  |                           ^^^^^^^^^^^^^^^^^ help: remove closure as shown:: `{1+2; foo}`\n+  |                           ^^^^^^^^^^^^^^^^^ help: remove closure as shown: `{1+2; foo}`\n \n error: this expression borrows a reference that is immediately dereferenced by the compiler\n   --> eta.rs:11:21\n@@ -30,7 +30,7 @@ error: redundant closure found\n   --> eta.rs:18:27\n    |\n 18 |     let e = Some(1u8).map(|a| generic(a));\n-   |                           ^^^^^^^^^^^^^^ help: remove closure as shown:: `generic`\n+   |                           ^^^^^^^^^^^^^^ help: remove closure as shown: `generic`\n \n error: aborting due to 5 previous errors\n "}, {"sha": "0ab65d468f86738be2e46d5296362dde723b4982", "filename": "clippy_tests/examples/len_zero.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_tests%2Fexamples%2Flen_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_tests%2Fexamples%2Flen_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Flen_zero.stderr?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -46,45 +46,45 @@ error: length comparison to zero\n    --> len_zero.rs:130:8\n     |\n 130 |     if x.len() == 0 {\n-    |        ^^^^^^^^^^^^ help: using `is_empty` is more concise:: `x.is_empty()`\n+    |        ^^^^^^^^^^^^ help: using `is_empty` is more concise: `x.is_empty()`\n     |\n     = note: `-D len-zero` implied by `-D warnings`\n \n error: length comparison to zero\n    --> len_zero.rs:134:8\n     |\n 134 |     if \"\".len() == 0 {\n-    |        ^^^^^^^^^^^^^ help: using `is_empty` is more concise:: `\"\".is_empty()`\n+    |        ^^^^^^^^^^^^^ help: using `is_empty` is more concise: `\"\".is_empty()`\n \n error: length comparison to zero\n    --> len_zero.rs:148:8\n     |\n 148 |     if has_is_empty.len() == 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise:: `has_is_empty.is_empty()`\n+    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `has_is_empty.is_empty()`\n \n error: length comparison to zero\n    --> len_zero.rs:151:8\n     |\n 151 |     if has_is_empty.len() != 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise:: `!has_is_empty.is_empty()`\n+    |        ^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n    --> len_zero.rs:154:8\n     |\n 154 |     if has_is_empty.len() > 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise:: `!has_is_empty.is_empty()`\n+    |        ^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `!has_is_empty.is_empty()`\n \n error: length comparison to zero\n    --> len_zero.rs:160:8\n     |\n 160 |     if with_is_empty.len() == 0 {\n-    |        ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise:: `with_is_empty.is_empty()`\n+    |        ^^^^^^^^^^^^^^^^^^^^^^^^ help: using `is_empty` is more concise: `with_is_empty.is_empty()`\n \n error: length comparison to zero\n    --> len_zero.rs:172:8\n     |\n 172 |     if b.len() != 0 {\n-    |        ^^^^^^^^^^^^ help: using `is_empty` is more concise:: `!b.is_empty()`\n+    |        ^^^^^^^^^^^^ help: using `is_empty` is more concise: `!b.is_empty()`\n \n error: aborting due to 11 previous errors\n "}, {"sha": "4eabb03fe5ad662d4b78df175972f72e2f26a9a0", "filename": "clippy_tests/examples/literals.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_tests%2Fexamples%2Fliterals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_tests%2Fexamples%2Fliterals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fliterals.stderr?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -33,11 +33,11 @@ error: this is a decimal constant\n    |                           ^^^^^^^^^^^^\n    |\n    = note: `-D zero-prefixed-literal` implied by `-D warnings`\n-help: if you mean to use a decimal constant, remove the `0` to remove confusion:\n+help: if you mean to use a decimal constant, remove the `0` to remove confusion\n    |\n-17 |     let fail_multi_zero = _123usize;\n-   |                           ^^^^^^^^^\n-help: if you mean to use an octal constant, use `0o`:\n+17 |     let fail_multi_zero = 123usize;\n+   |                           ^^^^^^^^\n+help: if you mean to use an octal constant, use `0o`\n    |\n 17 |     let fail_multi_zero = 0o_123usize;\n    |                           ^^^^^^^^^^^\n@@ -78,11 +78,11 @@ error: this is a decimal constant\n 30 |     let fail8 = 0123;\n    |                 ^^^^\n    |\n-help: if you mean to use a decimal constant, remove the `0` to remove confusion:\n+help: if you mean to use a decimal constant, remove the `0` to remove confusion\n    |\n 30 |     let fail8 = 123;\n    |                 ^^^\n-help: if you mean to use an octal constant, use `0o`:\n+help: if you mean to use an octal constant, use `0o`\n    |\n 30 |     let fail8 = 0o123;\n    |                 ^^^^^"}, {"sha": "dc0a2f3554ec0cf1773f245a8f2a06265952bcf6", "filename": "clippy_tests/examples/methods.stderr", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_tests%2Fexamples%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_tests%2Fexamples%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fmethods.stderr?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -504,105 +504,105 @@ error: single-character string constant used as pattern\n    --> methods.rs:475:13\n     |\n 475 |     x.split(\"x\");\n-    |     --------^^^- help: try using a char instead:: `x.split('x')`\n+    |     --------^^^- help: try using a char instead: `x.split('x')`\n     |\n     = note: `-D single-char-pattern` implied by `-D warnings`\n \n error: single-character string constant used as pattern\n    --> methods.rs:492:16\n     |\n 492 |     x.contains(\"x\");\n-    |     -----------^^^- help: try using a char instead:: `x.contains('x')`\n+    |     -----------^^^- help: try using a char instead: `x.contains('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:493:19\n     |\n 493 |     x.starts_with(\"x\");\n-    |     --------------^^^- help: try using a char instead:: `x.starts_with('x')`\n+    |     --------------^^^- help: try using a char instead: `x.starts_with('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:494:17\n     |\n 494 |     x.ends_with(\"x\");\n-    |     ------------^^^- help: try using a char instead:: `x.ends_with('x')`\n+    |     ------------^^^- help: try using a char instead: `x.ends_with('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:495:12\n     |\n 495 |     x.find(\"x\");\n-    |     -------^^^- help: try using a char instead:: `x.find('x')`\n+    |     -------^^^- help: try using a char instead: `x.find('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:496:13\n     |\n 496 |     x.rfind(\"x\");\n-    |     --------^^^- help: try using a char instead:: `x.rfind('x')`\n+    |     --------^^^- help: try using a char instead: `x.rfind('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:497:14\n     |\n 497 |     x.rsplit(\"x\");\n-    |     ---------^^^- help: try using a char instead:: `x.rsplit('x')`\n+    |     ---------^^^- help: try using a char instead: `x.rsplit('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:498:24\n     |\n 498 |     x.split_terminator(\"x\");\n-    |     -------------------^^^- help: try using a char instead:: `x.split_terminator('x')`\n+    |     -------------------^^^- help: try using a char instead: `x.split_terminator('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:499:25\n     |\n 499 |     x.rsplit_terminator(\"x\");\n-    |     --------------------^^^- help: try using a char instead:: `x.rsplit_terminator('x')`\n+    |     --------------------^^^- help: try using a char instead: `x.rsplit_terminator('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:500:17\n     |\n 500 |     x.splitn(0, \"x\");\n-    |     ------------^^^- help: try using a char instead:: `x.splitn(0, 'x')`\n+    |     ------------^^^- help: try using a char instead: `x.splitn(0, 'x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:501:18\n     |\n 501 |     x.rsplitn(0, \"x\");\n-    |     -------------^^^- help: try using a char instead:: `x.rsplitn(0, 'x')`\n+    |     -------------^^^- help: try using a char instead: `x.rsplitn(0, 'x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:502:15\n     |\n 502 |     x.matches(\"x\");\n-    |     ----------^^^- help: try using a char instead:: `x.matches('x')`\n+    |     ----------^^^- help: try using a char instead: `x.matches('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:503:16\n     |\n 503 |     x.rmatches(\"x\");\n-    |     -----------^^^- help: try using a char instead:: `x.rmatches('x')`\n+    |     -----------^^^- help: try using a char instead: `x.rmatches('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:504:21\n     |\n 504 |     x.match_indices(\"x\");\n-    |     ----------------^^^- help: try using a char instead:: `x.match_indices('x')`\n+    |     ----------------^^^- help: try using a char instead: `x.match_indices('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:505:22\n     |\n 505 |     x.rmatch_indices(\"x\");\n-    |     -----------------^^^- help: try using a char instead:: `x.rmatch_indices('x')`\n+    |     -----------------^^^- help: try using a char instead: `x.rmatch_indices('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:506:25\n     |\n 506 |     x.trim_left_matches(\"x\");\n-    |     --------------------^^^- help: try using a char instead:: `x.trim_left_matches('x')`\n+    |     --------------------^^^- help: try using a char instead: `x.trim_left_matches('x')`\n \n error: single-character string constant used as pattern\n    --> methods.rs:507:26\n     |\n 507 |     x.trim_right_matches(\"x\");\n-    |     ---------------------^^^- help: try using a char instead:: `x.trim_right_matches('x')`\n+    |     ---------------------^^^- help: try using a char instead: `x.trim_right_matches('x')`\n \n error: you are getting the inner pointer of a temporary `CString`\n    --> methods.rs:517:5"}, {"sha": "8cd549c96da4c9388c40986fd1bcafbb41864cac", "filename": "clippy_tests/examples/needless_return.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_tests%2Fexamples%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/clippy_tests%2Fexamples%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_tests%2Fexamples%2Fneedless_return.stderr?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -2,51 +2,51 @@ error: unneeded return statement\n   --> needless_return.rs:11:5\n    |\n 11 |     return true;\n-   |     ^^^^^^^^^^^^ help: remove `return` as shown:: `true`\n+   |     ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n    |\n    = note: `-D needless-return` implied by `-D warnings`\n \n error: unneeded return statement\n   --> needless_return.rs:15:5\n    |\n 15 |     return true\n-   |     ^^^^^^^^^^^ help: remove `return` as shown:: `true`\n+   |     ^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n   --> needless_return.rs:20:9\n    |\n 20 |         return true;\n-   |         ^^^^^^^^^^^^ help: remove `return` as shown:: `true`\n+   |         ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n   --> needless_return.rs:22:9\n    |\n 22 |         return false;\n-   |         ^^^^^^^^^^^^^ help: remove `return` as shown:: `false`\n+   |         ^^^^^^^^^^^^^ help: remove `return` as shown: `false`\n \n error: unneeded return statement\n   --> needless_return.rs:28:17\n    |\n 28 |         true => return false,\n-   |                 ^^^^^^^^^^^^ help: remove `return` as shown:: `false`\n+   |                 ^^^^^^^^^^^^ help: remove `return` as shown: `false`\n \n error: unneeded return statement\n   --> needless_return.rs:30:13\n    |\n 30 |             return true;\n-   |             ^^^^^^^^^^^^ help: remove `return` as shown:: `true`\n+   |             ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n   --> needless_return.rs:37:9\n    |\n 37 |         return true;\n-   |         ^^^^^^^^^^^^ help: remove `return` as shown:: `true`\n+   |         ^^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: unneeded return statement\n   --> needless_return.rs:39:16\n    |\n 39 |     let _ = || return true;\n-   |                ^^^^^^^^^^^ help: remove `return` as shown:: `true`\n+   |                ^^^^^^^^^^^ help: remove `return` as shown: `true`\n \n error: aborting due to 8 previous errors\n "}, {"sha": "7a1e4e86720239a1ba8361e5e30fd8ff144b08d6", "filename": "tests/ui/transmute.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/937a0aa20a18a749ac3c277536d5c41b0ba433f5/tests%2Fui%2Ftransmute.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/937a0aa20a18a749ac3c277536d5c41b0ba433f5/tests%2Fui%2Ftransmute.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftransmute.stderr?ref=937a0aa20a18a749ac3c277536d5c41b0ba433f5", "patch": "@@ -10,81 +10,81 @@ warning: transmute from a reference to a pointer\n   --> $DIR/transmute.rs:26:23\n    |\n 26 |     let _: *const T = core::intrinsics::transmute(t);\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `t as *const T`\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `t as *const T`\n \n warning: transmute from a reference to a pointer\n   --> $DIR/transmute.rs:28:21\n    |\n 28 |     let _: *mut T = core::intrinsics::transmute(t);\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `t as *const T as *mut T`\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `t as *const T as *mut T`\n \n warning: transmute from a reference to a pointer\n   --> $DIR/transmute.rs:30:23\n    |\n 30 |     let _: *const U = core::intrinsics::transmute(t);\n-   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `t as *const T as *const U`\n+   |                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `t as *const T as *const U`\n \n warning: transmute from a pointer type (`*const T`) to a reference type (`&T`)\n   --> $DIR/transmute.rs:35:17\n    |\n 35 |     let _: &T = std::mem::transmute(p);\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try `&*p`\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*p`\n    |\n    = note: #[warn(transmute_ptr_to_ref)] on by default\n \n warning: transmute from a pointer type (`*mut T`) to a reference type (`&mut T`)\n   --> $DIR/transmute.rs:38:21\n    |\n 38 |     let _: &mut T = std::mem::transmute(m);\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try `&mut *m`\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *m`\n \n warning: transmute from a pointer type (`*mut T`) to a reference type (`&T`)\n   --> $DIR/transmute.rs:41:17\n    |\n 41 |     let _: &T = std::mem::transmute(m);\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try `&*m`\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*m`\n \n warning: transmute from a pointer type (`*mut T`) to a reference type (`&mut T`)\n   --> $DIR/transmute.rs:44:21\n    |\n 44 |     let _: &mut T = std::mem::transmute(p as *mut T);\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `&mut *(p as *mut T)`\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *(p as *mut T)`\n \n warning: transmute from a pointer type (`*const U`) to a reference type (`&T`)\n   --> $DIR/transmute.rs:47:17\n    |\n 47 |     let _: &T = std::mem::transmute(o);\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(o as *const T)`\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(o as *const T)`\n \n warning: transmute from a pointer type (`*mut U`) to a reference type (`&mut T`)\n   --> $DIR/transmute.rs:50:21\n    |\n 50 |     let _: &mut T = std::mem::transmute(om);\n-   |                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try `&mut *(om as *mut T)`\n+   |                     ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&mut *(om as *mut T)`\n \n warning: transmute from a pointer type (`*mut U`) to a reference type (`&T`)\n   --> $DIR/transmute.rs:53:17\n    |\n 53 |     let _: &T = std::mem::transmute(om);\n-   |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(om as *const T)`\n+   |                 ^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(om as *const T)`\n \n warning: transmute from a pointer type (`*const i32`) to a reference type (`&issue1231::Foo<'_, u8>`)\n   --> $DIR/transmute.rs:64:32\n    |\n 64 |     let _: &Foo<u8> = unsafe { std::mem::transmute::<_, &Foo<_>>(raw) };\n-   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(raw as *const Foo<_>)`\n+   |                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(raw as *const Foo<_>)`\n \n warning: transmute from a pointer type (`*const i32`) to a reference type (`&issue1231::Foo<'_, &u8>`)\n   --> $DIR/transmute.rs:66:33\n    |\n 66 |     let _: &Foo<&u8> = unsafe { std::mem::transmute::<_, &Foo<&_>>(raw) };\n-   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(raw as *const Foo<&_>)`\n+   |                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(raw as *const Foo<&_>)`\n \n warning: transmute from a pointer type (`*const i32`) to a reference type (`&u8`)\n   --> $DIR/transmute.rs:70:14\n    |\n 70 |     unsafe { std::mem::transmute::<_, Bar>(raw) };\n-   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `&*(raw as *const u8)`\n+   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `&*(raw as *const u8)`\n \n warning: transmute from a type (`std::vec::Vec<i32>`) to itself\n   --> $DIR/transmute.rs:76:27\n@@ -120,13 +120,13 @@ warning: transmute from an integer to a pointer\n   --> $DIR/transmute.rs:92:31\n    |\n 92 |         let _: *const usize = std::mem::transmute(5_isize);\n-   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `5_isize as *const usize`\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `5_isize as *const usize`\n \n warning: transmute from an integer to a pointer\n   --> $DIR/transmute.rs:96:31\n    |\n 96 |         let _: *const usize = std::mem::transmute(1+1usize);\n-   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try `(1+1usize) as *const usize`\n+   |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `(1+1usize) as *const usize`\n \n warning: transmute from a type (`*const Usize`) to the type that it points to (`Usize`)\n    --> $DIR/transmute.rs:111:24"}]}