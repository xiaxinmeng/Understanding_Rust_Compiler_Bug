{"sha": "140577b5aa63826ecfceb1230fbea12edf28b607", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0MDU3N2I1YWE2MzgyNmVjZmNlYjEyMzBmYmVhMTJlZGYyOGI2MDc=", "commit": {"author": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-05-14T22:55:23Z"}, "committer": {"name": "Nick Cameron", "email": "ncameron@mozilla.com", "date": "2015-05-14T23:08:44Z"}, "message": "Don't use <Duration as Display>::display() in time passes", "tree": {"sha": "a0a37b41ec7f1e25467bd13c9106f388ee3be085", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0a37b41ec7f1e25467bd13c9106f388ee3be085"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/140577b5aa63826ecfceb1230fbea12edf28b607", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/140577b5aa63826ecfceb1230fbea12edf28b607", "html_url": "https://github.com/rust-lang/rust/commit/140577b5aa63826ecfceb1230fbea12edf28b607", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/140577b5aa63826ecfceb1230fbea12edf28b607/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd4dad8c860363077a3d53af025a0c029a613320", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd4dad8c860363077a3d53af025a0c029a613320", "html_url": "https://github.com/rust-lang/rust/commit/dd4dad8c860363077a3d53af025a0c029a613320"}], "stats": {"total": 13, "additions": 9, "deletions": 4}, "files": [{"sha": "8d5357fa6e4170a2285c57bf3650e61c946e94a9", "filename": "src/librustc/util/common.rs", "status": "modified", "additions": 9, "deletions": 4, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/140577b5aa63826ecfceb1230fbea12edf28b607/src%2Flibrustc%2Futil%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/140577b5aa63826ecfceb1230fbea12edf28b607/src%2Flibrustc%2Futil%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fcommon.rs?ref=140577b5aa63826ecfceb1230fbea12edf28b607", "patch": "@@ -44,19 +44,24 @@ pub fn time<T, U, F>(do_it: bool, what: &str, u: U, f: F) -> T where\n         r\n     });\n \n-    let mut u = Some(u);\n     let mut rv = None;\n     let dur = {\n         let ref mut rvp = rv;\n \n         Duration::span(move || {\n-            *rvp = Some(f(u.take().unwrap()))\n+            *rvp = Some(f(u))\n         })\n     };\n     let rv = rv.unwrap();\n \n-    println!(\"{}time: {} \\t{}\", repeat(\"  \").take(old).collect::<String>(),\n-             dur, what);\n+    // Hack up our own formatting for the duration to make it easier for scripts\n+    // to parse (always use the same number of decimal places and the same unit).\n+    const NANOS_PER_SEC: f64 = 1_000_000_000.0;\n+    let secs = dur.secs() as f64;\n+    let secs = secs + dur.extra_nanos() as f64 / NANOS_PER_SEC;\n+    println!(\"{}time: {:.3} \\t{}\", repeat(\"  \").take(old).collect::<String>(),\n+             secs, what);\n+\n     DEPTH.with(|slot| slot.set(old));\n \n     rv"}]}