{"sha": "67cbeee9ee2751f5da8312a3cefea77f44d72795", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3Y2JlZWU5ZWUyNzUxZjVkYTgzMTJhM2NlZmVhNzdmNDRkNzI3OTU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-01T21:56:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-01T21:56:24Z"}, "message": "Rollup merge of #64933 - sam09:master, r=estebank\n\nFixes #64919. Suggest fix based on operator precendence.\n\nFixes https://github.com/rust-lang/rust/issues/64919", "tree": {"sha": "ba18c9518f47068545f2bd01b8077923689cc8e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba18c9518f47068545f2bd01b8077923689cc8e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/67cbeee9ee2751f5da8312a3cefea77f44d72795", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdk8uICRBK7hj4Ov3rIwAAdHIIADhgu/K5OclAdQTp8GunPMLg\nyeKSwlvKXnsuA3nblAmC8mKy2YL04ZBTNz/lkmegfiZgCj5xuPv+JEpDTMx7axaF\n7GbaVv92uHrwLxikmsstJHQ600psBjxwQZ4ocOAhMgl4yzlGxIEvFWanClAOF6a5\nRiekNPYSU0ctJZXfYfalZtv5+9+BTzcjC5DLUSnhksv/zvAAu2JijZ2jqdUguwoP\nHirq8K9FI9/5nut9KTcplq/RAc1LXaKFZpgj9m4lb8pXlyF4Eh/v/lIAm3xN7i89\nWkcZBsD5SzR0E9QdxwLeoNPi6UnODoYAFB/VVP2/CBHSoeDGxE5KYzjplRw1utA=\n=2MbS\n-----END PGP SIGNATURE-----\n", "payload": "tree ba18c9518f47068545f2bd01b8077923689cc8e7\nparent 7628cada4f56676c361730251841e65600d863fe\nparent 9e4eb46790435c38a613d7f9d5d3e0eb5f77fca1\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569966984 +0200\ncommitter GitHub <noreply@github.com> 1569966984 +0200\n\nRollup merge of #64933 - sam09:master, r=estebank\n\nFixes #64919. Suggest fix based on operator precendence.\n\nFixes https://github.com/rust-lang/rust/issues/64919\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/67cbeee9ee2751f5da8312a3cefea77f44d72795", "html_url": "https://github.com/rust-lang/rust/commit/67cbeee9ee2751f5da8312a3cefea77f44d72795", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/67cbeee9ee2751f5da8312a3cefea77f44d72795/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7628cada4f56676c361730251841e65600d863fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/7628cada4f56676c361730251841e65600d863fe", "html_url": "https://github.com/rust-lang/rust/commit/7628cada4f56676c361730251841e65600d863fe"}, {"sha": "9e4eb46790435c38a613d7f9d5d3e0eb5f77fca1", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e4eb46790435c38a613d7f9d5d3e0eb5f77fca1", "html_url": "https://github.com/rust-lang/rust/commit/9e4eb46790435c38a613d7f9d5d3e0eb5f77fca1"}], "stats": {"total": 56, "additions": 49, "deletions": 7}, "files": [{"sha": "720d31310a13d936a3d9543a08caa8dde85784d3", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=67cbeee9ee2751f5da8312a3cefea77f44d72795", "patch": "@@ -128,6 +128,7 @@ use syntax::attr;\n use syntax::feature_gate::{GateIssue, emit_feature_err};\n use syntax::source_map::{DUMMY_SP, original_sp};\n use syntax::symbol::{kw, sym};\n+use syntax::util::parser::ExprPrecedence;\n \n use std::cell::{Cell, RefCell, Ref, RefMut};\n use std::collections::hash_map::Entry;\n@@ -4345,7 +4346,11 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                                 let max_len = receiver.rfind(\".\").unwrap();\n                                 format!(\"{}{}\", &receiver[..max_len], method_call)\n                             } else {\n-                                format!(\"{}{}\", receiver, method_call)\n+                                if expr.precedence().order() < ExprPrecedence::MethodCall.order() {\n+                                    format!(\"({}){}\", receiver, method_call)\n+                                } else {\n+                                    format!(\"{}{}\", receiver, method_call)\n+                                }\n                             };\n                             Some(if is_struct_pat_shorthand_field {\n                                 format!(\"{}: {}\", receiver, sugg)"}, {"sha": "5c666afb89a33ff8d20ea6449054a3fda641201c", "filename": "src/test/ui/conversion-methods.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Ftest%2Fui%2Fconversion-methods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Ftest%2Fui%2Fconversion-methods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconversion-methods.stderr?ref=67cbeee9ee2751f5da8312a3cefea77f44d72795", "patch": "@@ -41,7 +41,7 @@ LL |     let _prove_piercing_earnest: Vec<usize> = &[1, 2, 3];\n    |                                               ^^^^^^^^^^\n    |                                               |\n    |                                               expected struct `std::vec::Vec`, found reference\n-   |                                               help: try using a conversion method: `&[1, 2, 3].to_vec()`\n+   |                                               help: try using a conversion method: `(&[1, 2, 3]).to_vec()`\n    |\n    = note: expected type `std::vec::Vec<usize>`\n               found type `&[{integer}; 3]`"}, {"sha": "f4567554d0dbbe160d701dd2834f56019d877257", "filename": "src/test/ui/infinite/infinite-autoderef.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finfinite%2Finfinite-autoderef.stderr?ref=67cbeee9ee2751f5da8312a3cefea77f44d72795", "patch": "@@ -5,7 +5,7 @@ LL |         x = box x;\n    |             ^^^^^\n    |             |\n    |             cyclic type of infinite size\n-   |             help: try using a conversion method: `box x.to_string()`\n+   |             help: try using a conversion method: `(box x).to_string()`\n \n error[E0055]: reached the recursion limit while auto-dereferencing `Foo`\n   --> $DIR/infinite-autoderef.rs:25:5"}, {"sha": "9a5c183ca342881384d2ae5cd587cf3e0ed531cd", "filename": "src/test/ui/mismatched_types/abridged.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.rs", "raw_url": "https://github.com/rust-lang/rust/raw/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.rs?ref=67cbeee9ee2751f5da8312a3cefea77f44d72795", "patch": "@@ -50,4 +50,13 @@ fn e() -> X<X<String, String>, String> {\n     x //~ ERROR mismatched types\n }\n \n+fn f() -> String {\n+    1+2 //~ ERROR mismatched types\n+}\n+\n+\n+fn g() -> String {\n+    -2 //~ ERROR mismatched types\n+}\n+\n fn main() {}"}, {"sha": "ded12d89c099dda001fd03cc4778c5a067dec54d", "filename": "src/test/ui/mismatched_types/abridged.stderr", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr?ref=67cbeee9ee2751f5da8312a3cefea77f44d72795", "patch": "@@ -66,6 +66,34 @@ LL |     x\n    = note: expected type `X<X<_, std::string::String>, _>`\n               found type `X<X<_, {integer}>, _>`\n \n-error: aborting due to 6 previous errors\n+error[E0308]: mismatched types\n+  --> $DIR/abridged.rs:54:5\n+   |\n+LL | fn f() -> String {\n+   |           ------ expected `std::string::String` because of return type\n+LL |     1+2\n+   |     ^^^\n+   |     |\n+   |     expected struct `std::string::String`, found integer\n+   |     help: try using a conversion method: `(1+2).to_string()`\n+   |\n+   = note: expected type `std::string::String`\n+              found type `{integer}`\n+\n+error[E0308]: mismatched types\n+  --> $DIR/abridged.rs:59:5\n+   |\n+LL | fn g() -> String {\n+   |           ------ expected `std::string::String` because of return type\n+LL |     -2\n+   |     ^^\n+   |     |\n+   |     expected struct `std::string::String`, found integer\n+   |     help: try using a conversion method: `(-2).to_string()`\n+   |\n+   = note: expected type `std::string::String`\n+              found type `{integer}`\n+\n+error: aborting due to 8 previous errors\n \n For more information about this error, try `rustc --explain E0308`."}, {"sha": "7f93697c6f7a75977e318b829b0eece7be122e1c", "filename": "src/test/ui/occurs-check-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Ftest%2Fui%2Foccurs-check-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Ftest%2Fui%2Foccurs-check-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Foccurs-check-2.stderr?ref=67cbeee9ee2751f5da8312a3cefea77f44d72795", "patch": "@@ -5,7 +5,7 @@ LL |     f = box g;\n    |         ^^^^^\n    |         |\n    |         cyclic type of infinite size\n-   |         help: try using a conversion method: `box g.to_string()`\n+   |         help: try using a conversion method: `(box g).to_string()`\n \n error: aborting due to previous error\n "}, {"sha": "01e2b1f7749108e1a97645a5a8429e6cbdec5b4c", "filename": "src/test/ui/occurs-check.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Ftest%2Fui%2Foccurs-check.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Ftest%2Fui%2Foccurs-check.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Foccurs-check.stderr?ref=67cbeee9ee2751f5da8312a3cefea77f44d72795", "patch": "@@ -5,7 +5,7 @@ LL |     f = box f;\n    |         ^^^^^\n    |         |\n    |         cyclic type of infinite size\n-   |         help: try using a conversion method: `box f.to_string()`\n+   |         help: try using a conversion method: `(box f).to_string()`\n \n error: aborting due to previous error\n "}, {"sha": "0d15a2a753ed0f78c27c2b9c51a07b13a3be9bc6", "filename": "src/test/ui/span/coerce-suggestions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/67cbeee9ee2751f5da8312a3cefea77f44d72795/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr?ref=67cbeee9ee2751f5da8312a3cefea77f44d72795", "patch": "@@ -44,7 +44,7 @@ LL |     f = box f;\n    |         ^^^^^\n    |         |\n    |         cyclic type of infinite size\n-   |         help: try using a conversion method: `box f.to_string()`\n+   |         help: try using a conversion method: `(box f).to_string()`\n \n error[E0308]: mismatched types\n   --> $DIR/coerce-suggestions.rs:21:9"}]}