{"sha": "166d8b8c2b282ba0d0cf4da277cf8829d30df94b", "node_id": "C_kwDOAAsO6NoAKDE2NmQ4YjhjMmIyODJiYTBkMGNmNGRhMjc3Y2Y4ODI5ZDMwZGY5NGI", "commit": {"author": {"name": "Pointerbender", "email": "pointerbender@gmail.com", "date": "2022-10-27T04:32:36Z"}, "committer": {"name": "Pointerbender", "email": "pointerbender@gmail.com", "date": "2022-10-27T04:32:36Z"}, "message": "add \"Memory layout\" subsection to documentation of `UnsafeCell` for additional clarity", "tree": {"sha": "378e4244bf6bac5c4a3be21a3f0b628fc3fba641", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/378e4244bf6bac5c4a3be21a3f0b628fc3fba641"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/166d8b8c2b282ba0d0cf4da277cf8829d30df94b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/166d8b8c2b282ba0d0cf4da277cf8829d30df94b", "html_url": "https://github.com/rust-lang/rust/commit/166d8b8c2b282ba0d0cf4da277cf8829d30df94b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/166d8b8c2b282ba0d0cf4da277cf8829d30df94b/comments", "author": {"login": "Pointerbender", "id": 81013316, "node_id": "MDQ6VXNlcjgxMDEzMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/81013316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pointerbender", "html_url": "https://github.com/Pointerbender", "followers_url": "https://api.github.com/users/Pointerbender/followers", "following_url": "https://api.github.com/users/Pointerbender/following{/other_user}", "gists_url": "https://api.github.com/users/Pointerbender/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pointerbender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pointerbender/subscriptions", "organizations_url": "https://api.github.com/users/Pointerbender/orgs", "repos_url": "https://api.github.com/users/Pointerbender/repos", "events_url": "https://api.github.com/users/Pointerbender/events{/privacy}", "received_events_url": "https://api.github.com/users/Pointerbender/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Pointerbender", "id": 81013316, "node_id": "MDQ6VXNlcjgxMDEzMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/81013316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Pointerbender", "html_url": "https://github.com/Pointerbender", "followers_url": "https://api.github.com/users/Pointerbender/followers", "following_url": "https://api.github.com/users/Pointerbender/following{/other_user}", "gists_url": "https://api.github.com/users/Pointerbender/gists{/gist_id}", "starred_url": "https://api.github.com/users/Pointerbender/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Pointerbender/subscriptions", "organizations_url": "https://api.github.com/users/Pointerbender/orgs", "repos_url": "https://api.github.com/users/Pointerbender/repos", "events_url": "https://api.github.com/users/Pointerbender/events{/privacy}", "received_events_url": "https://api.github.com/users/Pointerbender/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56735361536773aee70f44b76438d1a07b7062e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/56735361536773aee70f44b76438d1a07b7062e3", "html_url": "https://github.com/rust-lang/rust/commit/56735361536773aee70f44b76438d1a07b7062e3"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "7bf32cb0d98f27b3bf4db76847f8725cea272d65", "filename": "library/core/src/cell.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/166d8b8c2b282ba0d0cf4da277cf8829d30df94b/library%2Fcore%2Fsrc%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/166d8b8c2b282ba0d0cf4da277cf8829d30df94b/library%2Fcore%2Fsrc%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fcell.rs?ref=166d8b8c2b282ba0d0cf4da277cf8829d30df94b", "patch": "@@ -1816,6 +1816,8 @@ impl<T: ?Sized + fmt::Display> fmt::Display for RefMut<'_, T> {\n ///\n /// [`.get_mut()`]: `UnsafeCell::get_mut`\n ///\n+/// # Memory layout\n+///\n /// `UnsafeCell<T>` has the same in-memory representation as its inner type `T`. A consequence\n /// of this guarantee is that it is possible to convert between `T` and `UnsafeCell<T>`.\n /// Special care has to be taken when converting a nested `T` inside of an `Outer<T>` type"}]}