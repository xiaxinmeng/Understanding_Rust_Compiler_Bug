{"sha": "113a335c3eae30c0e7e2d691ccbba66bd1d1e75e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExM2EzMzVjM2VhZTMwYzBlN2UyZDY5MWNjYmJhNjZiZDFkMWU3NWU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-12T11:10:23Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-09-17T15:33:47Z"}, "message": "test propagating env vars from build.rs to binary", "tree": {"sha": "8e6e93cd66a23e40bd65a5bfdfcc45f41fef7583", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e6e93cd66a23e40bd65a5bfdfcc45f41fef7583"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/113a335c3eae30c0e7e2d691ccbba66bd1d1e75e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/113a335c3eae30c0e7e2d691ccbba66bd1d1e75e", "html_url": "https://github.com/rust-lang/rust/commit/113a335c3eae30c0e7e2d691ccbba66bd1d1e75e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/113a335c3eae30c0e7e2d691ccbba66bd1d1e75e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33c669679efdeec9f9a6e6bbb7404fdb1d2d5fd6", "url": "https://api.github.com/repos/rust-lang/rust/commits/33c669679efdeec9f9a6e6bbb7404fdb1d2d5fd6", "html_url": "https://github.com/rust-lang/rust/commit/33c669679efdeec9f9a6e6bbb7404fdb1d2d5fd6"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "d35940897191fa2fa849566bb240c3ea378893b1", "filename": "cargo-miri/bin.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/113a335c3eae30c0e7e2d691ccbba66bd1d1e75e/cargo-miri%2Fbin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/113a335c3eae30c0e7e2d691ccbba66bd1d1e75e/cargo-miri%2Fbin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fbin.rs?ref=113a335c3eae30c0e7e2d691ccbba66bd1d1e75e", "patch": "@@ -612,7 +612,9 @@ fn phase_cargo_runner(binary: &Path, binary_args: env::Args) {\n     let info: CrateRunInfo = serde_json::from_reader(file)\n         .unwrap_or_else(|_| show_error(format!(\"File {:?} does not contain valid JSON\", binary)));\n \n-    // Set missing env vars.\n+    // Set missing env vars. Looks like `build.rs` vars are still set at run-time, but\n+    // `CARGO_BIN_EXE_*` are not. This means we can give the run-time environment precedence,\n+    // to rather do too little than too much.\n     for (name, val) in info.env {\n         if env::var_os(&name).is_none() {\n             env::set_var(name, val);"}, {"sha": "9851ccf39f3ff3354ae188db2b616c8e15493436", "filename": "test-cargo-miri/build.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/113a335c3eae30c0e7e2d691ccbba66bd1d1e75e/test-cargo-miri%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/113a335c3eae30c0e7e2d691ccbba66bd1d1e75e/test-cargo-miri%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Fbuild.rs?ref=113a335c3eae30c0e7e2d691ccbba66bd1d1e75e", "patch": "@@ -12,4 +12,6 @@ fn not_in_miri() -> i32 {\n fn main() {\n     not_in_miri();\n     println!(\"cargo:rerun-if-changed=build.rs\");\n+    println!(\"cargo:rerun-if-env-changed=MIRITESTVAR\");\n+    println!(\"cargo:rustc-env=MIRITESTVAR=testval\");\n }"}, {"sha": "2250835c9998ce293f82e1b1b8dc7bff2e2cc53e", "filename": "test-cargo-miri/run-test.py", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/113a335c3eae30c0e7e2d691ccbba66bd1d1e75e/test-cargo-miri%2Frun-test.py", "raw_url": "https://github.com/rust-lang/rust/raw/113a335c3eae30c0e7e2d691ccbba66bd1d1e75e/test-cargo-miri%2Frun-test.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Frun-test.py?ref=113a335c3eae30c0e7e2d691ccbba66bd1d1e75e", "patch": "@@ -50,11 +50,14 @@ def test(name, cmd, stdout_ref, stderr_ref, stdin=b'', env={}):\n         fail(\"stderr does not match reference\")\n \n def test_cargo_miri_run():\n-    test(\"`cargo miri run`\",\n+    test(\"`cargo miri run` (without isolation)\",\n         cargo_miri(\"run\"),\n         \"stdout.ref1\", \"stderr.ref1\",\n         stdin=b'12\\n21\\n',\n-        env={'MIRIFLAGS': \"-Zmiri-disable-isolation\"},\n+        env={\n+            'MIRIFLAGS': \"-Zmiri-disable-isolation\",\n+            'MIRITESTVAR': \"wrongval\", # make sure the build.rs value takes precedence\n+        },\n     )\n     test(\"`cargo miri run` (with arguments and target)\",\n         cargo_miri(\"run\") + [\"--bin\", \"cargo-miri-test\", \"--\", \"hello world\", '\"hello world\"'],"}, {"sha": "b36b0c725f85eb81463a0ae86ac85332225b0fda", "filename": "test-cargo-miri/src/main.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/113a335c3eae30c0e7e2d691ccbba66bd1d1e75e/test-cargo-miri%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/113a335c3eae30c0e7e2d691ccbba66bd1d1e75e/test-cargo-miri%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Fsrc%2Fmain.rs?ref=113a335c3eae30c0e7e2d691ccbba66bd1d1e75e", "patch": "@@ -3,6 +3,9 @@ use byteorder::{BigEndian, ByteOrder};\n use std::io::{self, BufRead};\n \n fn main() {\n+    // Check env var set by `build.rs`.\n+    assert_eq!(env!(\"MIRITESTVAR\"), \"testval\");\n+\n     // Exercise external crate, printing to stdout.\n     let buf = &[1,2,3,4];\n     let n = <BigEndian as ByteOrder>::read_u32(buf);"}]}