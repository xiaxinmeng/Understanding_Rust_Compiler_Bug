{"sha": "b584c3227d311f591d05ad442c08811884e99f1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI1ODRjMzIyN2QzMTFmNTkxZDA1YWQ0NDJjMDg4MTE4ODRlOTlmMWI=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-07-28T08:24:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-07-28T08:24:58Z"}, "message": "Rollup merge of #52740 - estebank:crate-name, r=petrochenkov\n\nSuggest underscore when using dashes in crate namet push fork\n\nFix #48437.", "tree": {"sha": "cb2bfc693f8349cb1e69b284daffb2badb7fe9b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb2bfc693f8349cb1e69b284daffb2badb7fe9b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b584c3227d311f591d05ad442c08811884e99f1b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbXChaCRBK7hj4Ov3rIwAAdHIIAJcyiTp/Gw88etCEfFcYHBll\nWO1Q4lXQ9ODMgSksfnGBx/X7D0w5UOhUZZeRaDOzgKzQTmWrMJgDkcWmuBxLjj9P\nh5gLXMUC6LZEtI+Z5VZXeafPGNXM1JJj5UVU9gVFSoIS1hqEJwQS2xurLrXntR1j\n4c4S47PRa3Dn5qJYo70Ct7KZS815GrbOHMkOEU4UeSOA9xBESIUYNx8lLkjYumqq\nr/bhdHED5FhJ++Kj1OlezEFebGClg0diMet63Ziq7gZK5uiqG4uiByNL470llIPQ\nO/ugDakJPsilTJTA8RIQqYG/T7qI46EZsqHCLAuCD5u/w3Ik/Is6AKBs8AW0hyM=\n=kJbx\n-----END PGP SIGNATURE-----\n", "payload": "tree cb2bfc693f8349cb1e69b284daffb2badb7fe9b3\nparent 7da22148ec96476ed639d11b85b5874efe52d916\nparent 647d295fb2fbd3e46a517332d5023dc51ae6e317\nauthor kennytm <kennytm@gmail.com> 1532766298 +0800\ncommitter GitHub <noreply@github.com> 1532766298 +0800\n\nRollup merge of #52740 - estebank:crate-name, r=petrochenkov\n\nSuggest underscore when using dashes in crate namet push fork\n\nFix #48437.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b584c3227d311f591d05ad442c08811884e99f1b", "html_url": "https://github.com/rust-lang/rust/commit/b584c3227d311f591d05ad442c08811884e99f1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b584c3227d311f591d05ad442c08811884e99f1b/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7da22148ec96476ed639d11b85b5874efe52d916", "url": "https://api.github.com/repos/rust-lang/rust/commits/7da22148ec96476ed639d11b85b5874efe52d916", "html_url": "https://github.com/rust-lang/rust/commit/7da22148ec96476ed639d11b85b5874efe52d916"}, {"sha": "647d295fb2fbd3e46a517332d5023dc51ae6e317", "url": "https://api.github.com/repos/rust-lang/rust/commits/647d295fb2fbd3e46a517332d5023dc51ae6e317", "html_url": "https://github.com/rust-lang/rust/commit/647d295fb2fbd3e46a517332d5023dc51ae6e317"}], "stats": {"total": 70, "additions": 69, "deletions": 1}, "files": [{"sha": "56760546c50881e9f9df63e8b385629eb979c9f5", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 35, "deletions": 1, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/b584c3227d311f591d05ad442c08811884e99f1b/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b584c3227d311f591d05ad442c08811884e99f1b/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=b584c3227d311f591d05ad442c08811884e99f1b", "patch": "@@ -6514,6 +6514,39 @@ impl<'a> Parser<'a> {\n         })\n     }\n \n+    fn parse_crate_name_with_dashes(&mut self) -> PResult<'a, ast::Ident> {\n+        let error_msg = \"crate name using dashes are not valid in `extern crate` statements\";\n+        let suggestion_msg = \"if the original crate name uses dashes you need to use underscores \\\n+                              in the code\";\n+        let mut ident = self.parse_ident()?;\n+        let mut idents = vec![];\n+        let mut replacement = vec![];\n+        let mut fixed_crate_name = false;\n+        // Accept `extern crate name-like-this` for better diagnostics\n+        let dash = token::Token::BinOp(token::BinOpToken::Minus);\n+        if self.token == dash {  // Do not include `-` as part of the expected tokens list\n+            while self.eat(&dash) {\n+                fixed_crate_name = true;\n+                replacement.push((self.prev_span, \"_\".to_string()));\n+                idents.push(self.parse_ident()?);\n+            }\n+        }\n+        if fixed_crate_name {\n+            let fixed_name_sp = ident.span.to(idents.last().unwrap().span);\n+            let mut fixed_name = format!(\"{}\", ident.name);\n+            for part in idents {\n+                fixed_name.push_str(&format!(\"_{}\", part.name));\n+            }\n+            ident = Ident::from_str(&fixed_name).with_span_pos(fixed_name_sp);\n+\n+            let mut err = self.struct_span_err(fixed_name_sp, error_msg);\n+            err.span_label(fixed_name_sp, \"dash-separated idents are not valid\");\n+            err.multipart_suggestion(suggestion_msg, replacement);\n+            err.emit();\n+        }\n+        Ok(ident)\n+    }\n+\n     /// Parse extern crate links\n     ///\n     /// # Examples\n@@ -6525,7 +6558,8 @@ impl<'a> Parser<'a> {\n                                visibility: Visibility,\n                                attrs: Vec<Attribute>)\n                                -> PResult<'a, P<Item>> {\n-        let orig_name = self.parse_ident()?;\n+        // Accept `extern crate name-like-this` for better diagnostics\n+        let orig_name = self.parse_crate_name_with_dashes()?;\n         let (item_name, orig_name) = if let Some(rename) = self.parse_rename()? {\n             (rename, Some(orig_name.name))\n         } else {"}, {"sha": "70e1806a20b54acddbc58f1344367e3d7d1cd6b2", "filename": "src/test/ui/bad-crate-name.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b584c3227d311f591d05ad442c08811884e99f1b/src%2Ftest%2Fui%2Fbad-crate-name.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b584c3227d311f591d05ad442c08811884e99f1b/src%2Ftest%2Fui%2Fbad-crate-name.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad-crate-name.rs?ref=b584c3227d311f591d05ad442c08811884e99f1b", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+extern crate krate-name-here;\n+//~^ ERROR crate name using dashes are not valid in `extern crate` statements\n+//~| ERROR can't find crate for `krate_name_here`\n+\n+fn main() {}"}, {"sha": "8348badeeeb175338fcb22ee4d2ef9c662267e18", "filename": "src/test/ui/bad-crate-name.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/b584c3227d311f591d05ad442c08811884e99f1b/src%2Ftest%2Fui%2Fbad-crate-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b584c3227d311f591d05ad442c08811884e99f1b/src%2Ftest%2Fui%2Fbad-crate-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fbad-crate-name.stderr?ref=b584c3227d311f591d05ad442c08811884e99f1b", "patch": "@@ -0,0 +1,19 @@\n+error: crate name using dashes are not valid in `extern crate` statements\n+  --> $DIR/bad-crate-name.rs:11:14\n+   |\n+LL | extern crate krate-name-here;\n+   |              ^^^^^^^^^^^^^^^ dash-separated idents are not valid\n+help: if the original crate name uses dashes you need to use underscores in the code\n+   |\n+LL | extern crate krate_name_here;\n+   |                   ^    ^\n+\n+error[E0463]: can't find crate for `krate_name_here`\n+  --> $DIR/bad-crate-name.rs:11:1\n+   |\n+LL | extern crate krate-name-here;\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't find crate\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0463`."}]}