{"sha": "2d53d94c3b6db09d6f930f5bb23c929c96d24f95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkNTNkOTRjM2I2ZGIwOWQ2ZjkzMGY1YmIyM2M5MjljOTZkMjRmOTU=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2017-11-01T05:32:17Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-01T05:32:17Z"}, "message": "Rollup merge of #45650 - michaelwoerister:per-crate-type-symbol-threshold, r=alexcrichton\n\nTake crate-type into account when generating symbol export lists (linker version scripts)\n\nr? @alexcrichton\ncc https://github.com/rust-lang/rust/issues/45613", "tree": {"sha": "72a2c336965ad4aee4badf374f9b41ae34b33f18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72a2c336965ad4aee4badf374f9b41ae34b33f18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d53d94c3b6db09d6f930f5bb23c929c96d24f95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d53d94c3b6db09d6f930f5bb23c929c96d24f95", "html_url": "https://github.com/rust-lang/rust/commit/2d53d94c3b6db09d6f930f5bb23c929c96d24f95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d53d94c3b6db09d6f930f5bb23c929c96d24f95/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57b4658a2bd6cbd4deb48f0dd627f8ff2878091f", "url": "https://api.github.com/repos/rust-lang/rust/commits/57b4658a2bd6cbd4deb48f0dd627f8ff2878091f", "html_url": "https://github.com/rust-lang/rust/commit/57b4658a2bd6cbd4deb48f0dd627f8ff2878091f"}, {"sha": "d3951ff5e1ac0166346d119a3cbeea7f21865fda", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3951ff5e1ac0166346d119a3cbeea7f21865fda", "html_url": "https://github.com/rust-lang/rust/commit/d3951ff5e1ac0166346d119a3cbeea7f21865fda"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "51f89110eb4aecfb118d9ff60ab7b914c7f44b08", "filename": "src/librustc_trans/back/linker.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2d53d94c3b6db09d6f930f5bb23c929c96d24f95/src%2Flibrustc_trans%2Fback%2Flinker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d53d94c3b6db09d6f930f5bb23c929c96d24f95/src%2Flibrustc_trans%2Fback%2Flinker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flinker.rs?ref=2d53d94c3b6db09d6f930f5bb23c929c96d24f95", "patch": "@@ -747,7 +747,7 @@ impl<'a> Linker for EmLinker<'a> {\n fn exported_symbols(tcx: TyCtxt, crate_type: CrateType) -> Vec<String> {\n     let mut symbols = Vec::new();\n \n-    let export_threshold = symbol_export::threshold(tcx);\n+    let export_threshold = symbol_export::crates_export_threshold(&[crate_type]);\n     for &(ref name, _, level) in tcx.exported_symbols(LOCAL_CRATE).iter() {\n         if level.is_below_threshold(export_threshold) {\n             symbols.push(name.clone());"}, {"sha": "f1ada814bdb804648c8e3d40a279d844ef4673b1", "filename": "src/test/run-make/symbol-visibility/Makefile", "status": "modified", "additions": 12, "deletions": 2, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2d53d94c3b6db09d6f930f5bb23c929c96d24f95/src%2Ftest%2Frun-make%2Fsymbol-visibility%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/2d53d94c3b6db09d6f930f5bb23c929c96d24f95/src%2Ftest%2Frun-make%2Fsymbol-visibility%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fsymbol-visibility%2FMakefile?ref=2d53d94c3b6db09d6f930f5bb23c929c96d24f95", "patch": "@@ -9,24 +9,25 @@ all:\n else\n \n NM=nm -D\n-DYLIB_EXT=so\n CDYLIB_NAME=liba_cdylib.so\n RDYLIB_NAME=liba_rust_dylib.so\n EXE_NAME=an_executable\n+COMBINED_CDYLIB_NAME=libcombined_rlib_dylib.so\n \n ifeq ($(UNAME),Darwin)\n NM=nm -gU\n-DYLIB_EXT=dylib\n CDYLIB_NAME=liba_cdylib.dylib\n RDYLIB_NAME=liba_rust_dylib.dylib\n EXE_NAME=an_executable\n+COMBINED_CDYLIB_NAME=libcombined_rlib_dylib.dylib\n endif\n \n all:\n \t$(RUSTC) an_rlib.rs\n \t$(RUSTC) a_cdylib.rs\n \t$(RUSTC) a_rust_dylib.rs\n \t$(RUSTC) an_executable.rs\n+\t$(RUSTC) a_cdylib.rs --crate-name combined_rlib_dylib --crate-type=rlib,cdylib\n \n \t# Check that a cdylib exports its public #[no_mangle] functions\n \t[ \"$$($(NM) $(TMPDIR)/$(CDYLIB_NAME) | grep -c public_c_function_from_cdylib)\" -eq \"1\" ]\n@@ -47,4 +48,13 @@ all:\n \t[ \"$$($(NM) $(TMPDIR)/$(EXE_NAME) | grep -c public_c_function_from_rlib)\" -eq \"0\" ]\n \t[ \"$$($(NM) $(TMPDIR)/$(EXE_NAME) | grep -c public_rust_function_from_exe)\" -eq \"0\" ]\n \n+\n+\t# Check the combined case, where we generate a cdylib and an rlib in the same\n+\t# compilation session:\n+\t# Check that a cdylib exports its public #[no_mangle] functions\n+\t[ \"$$($(NM) $(TMPDIR)/$(COMBINED_CDYLIB_NAME) | grep -c public_c_function_from_cdylib)\" -eq \"1\" ]\n+\t# Check that a cdylib exports the public #[no_mangle] functions of dependencies\n+\t[ \"$$($(NM) $(TMPDIR)/$(COMBINED_CDYLIB_NAME) | grep -c public_c_function_from_rlib)\" -eq \"1\" ]\n+\t# Check that a cdylib DOES NOT export any public Rust functions\n+\t[ \"$$($(NM) $(TMPDIR)/$(COMBINED_CDYLIB_NAME) | grep -c _ZN.*h.*E)\" -eq \"0\" ]\n endif"}]}