{"sha": "03b892860da5aff7a10cf4ca1364dbcacb95bfcd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzYjg5Mjg2MGRhNWFmZjdhMTBjZjRjYTEzNjRkYmNhY2I5NWJmY2Q=", "commit": {"author": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2018-12-28T20:09:47Z"}, "committer": {"name": "Oliver Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2019-01-01T19:06:50Z"}, "message": "Check the correct arena", "tree": {"sha": "ed0d64da7f4263678ae76d077cf2fe2894a06f19", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed0d64da7f4263678ae76d077cf2fe2894a06f19"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03b892860da5aff7a10cf4ca1364dbcacb95bfcd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03b892860da5aff7a10cf4ca1364dbcacb95bfcd", "html_url": "https://github.com/rust-lang/rust/commit/03b892860da5aff7a10cf4ca1364dbcacb95bfcd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03b892860da5aff7a10cf4ca1364dbcacb95bfcd/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9654ae9c9973253e0e87bff9fd8f79be87492c64", "url": "https://api.github.com/repos/rust-lang/rust/commits/9654ae9c9973253e0e87bff9fd8f79be87492c64", "html_url": "https://github.com/rust-lang/rust/commit/9654ae9c9973253e0e87bff9fd8f79be87492c64"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "9f9ded51e37ee3fae68e952940e809f2e6d28855", "filename": "src/libarena/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/03b892860da5aff7a10cf4ca1364dbcacb95bfcd/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03b892860da5aff7a10cf4ca1364dbcacb95bfcd/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=03b892860da5aff7a10cf4ca1364dbcacb95bfcd", "patch": "@@ -119,6 +119,11 @@ impl<T> Default for TypedArena<T> {\n }\n \n impl<T> TypedArena<T> {\n+    pub fn in_arena(&self, ptr: *const T) -> bool {\n+        let ptr = ptr as *const T as *mut T;\n+\n+        self.chunks.borrow().iter().any(|chunk| chunk.start() <= ptr && ptr < chunk.end())\n+    }\n     /// Allocates an object in the `TypedArena`, returning a reference to it.\n     #[inline]\n     pub fn alloc(&self, object: T) -> &mut T {"}, {"sha": "6c377941dad1966526bbeb794e22aa189ecf363a", "filename": "src/librustc/ty/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/03b892860da5aff7a10cf4ca1364dbcacb95bfcd/src%2Flibrustc%2Fty%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03b892860da5aff7a10cf4ca1364dbcacb95bfcd/src%2Flibrustc%2Fty%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fcontext.rs?ref=03b892860da5aff7a10cf4ca1364dbcacb95bfcd", "patch": "@@ -1762,7 +1762,7 @@ nop_list_lift!{Kind<'a> => Kind<'tcx>}\n impl<'a, 'tcx> Lift<'tcx> for &'a mir::interpret::Allocation {\n     type Lifted = &'tcx mir::interpret::Allocation;\n     fn lift_to_tcx<'b, 'gcx>(&self, tcx: TyCtxt<'b, 'gcx, 'tcx>) -> Option<Self::Lifted> {\n-        assert!(tcx.global_interners.arena.in_arena(*self as *const _));\n+        assert!(tcx.global_arenas.const_allocs.in_arena(*self as *const _));\n         Some(unsafe { mem::transmute(*self) })\n     }\n }"}]}