{"sha": "203c8765ea33c65d888febe0e8219c4bb11b0d89", "node_id": "C_kwDOAAsO6NoAKDIwM2M4NzY1ZWEzM2M2NWQ4ODhmZWJlMGU4MjE5YzRiYjExYjBkODk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-05T08:45:03Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-05T08:45:03Z"}, "message": "Auto merge of #105046 - scottmcm:vecdeque-vs-vec, r=Mark-Simulacrum\n\nSend `VecDeque::from_iter` via `Vec::from_iter`\n\nSince it's O(1) to convert between them now, might as well reuse the logic.\n\nMostly for the various specializations it does, but might also save some monomorphization work if, say, people collect slice iterators into both `Vec`s and `VecDeque`s.", "tree": {"sha": "e26611529f67ed3193e9126d85cb651a3395b964", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e26611529f67ed3193e9126d85cb651a3395b964"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/203c8765ea33c65d888febe0e8219c4bb11b0d89", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/203c8765ea33c65d888febe0e8219c4bb11b0d89", "html_url": "https://github.com/rust-lang/rust/commit/203c8765ea33c65d888febe0e8219c4bb11b0d89", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/203c8765ea33c65d888febe0e8219c4bb11b0d89/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e72ea1dc376e9c302c68faefafd967a8a7ef255a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e72ea1dc376e9c302c68faefafd967a8a7ef255a", "html_url": "https://github.com/rust-lang/rust/commit/e72ea1dc376e9c302c68faefafd967a8a7ef255a"}, {"sha": "a964a37211691ae9a28b76b6002ff55a707e9a8b", "url": "https://api.github.com/repos/rust-lang/rust/commits/a964a37211691ae9a28b76b6002ff55a707e9a8b", "html_url": "https://github.com/rust-lang/rust/commit/a964a37211691ae9a28b76b6002ff55a707e9a8b"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "4866c53e7d521c64d5870b2e8be8553d86e24bc7", "filename": "library/alloc/src/collections/vec_deque/mod.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/203c8765ea33c65d888febe0e8219c4bb11b0d89/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/203c8765ea33c65d888febe0e8219c4bb11b0d89/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fcollections%2Fvec_deque%2Fmod.rs?ref=203c8765ea33c65d888febe0e8219c4bb11b0d89", "patch": "@@ -2699,12 +2699,18 @@ impl<T, A: Allocator> IndexMut<usize> for VecDeque<T, A> {\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<T> FromIterator<T> for VecDeque<T> {\n+    #[inline]\n     fn from_iter<I: IntoIterator<Item = T>>(iter: I) -> VecDeque<T> {\n-        let iterator = iter.into_iter();\n-        let (lower, _) = iterator.size_hint();\n-        let mut deq = VecDeque::with_capacity(lower);\n-        deq.extend(iterator);\n-        deq\n+        // Since converting is O(1) now, might as well re-use that logic\n+        // (including things like the `vec::IntoIter`\u2192`Vec` specialization)\n+        // especially as that could save us some monomorphiziation work\n+        // if one uses the same iterators (like slice ones) with both.\n+        return from_iter_via_vec(iter.into_iter());\n+\n+        #[inline]\n+        fn from_iter_via_vec<U>(iter: impl Iterator<Item = U>) -> VecDeque<U> {\n+            Vec::from_iter(iter).into()\n+        }\n     }\n }\n \n@@ -2791,6 +2797,7 @@ impl<T, A: Allocator> From<Vec<T, A>> for VecDeque<T, A> {\n     /// In its current implementation, this is a very cheap\n     /// conversion. This isn't yet a guarantee though, and\n     /// shouldn't be relied on.\n+    #[inline]\n     fn from(other: Vec<T, A>) -> Self {\n         let (ptr, len, cap, alloc) = other.into_raw_parts_with_alloc();\n         Self { head: 0, len, buf: unsafe { RawVec::from_raw_parts_in(ptr, cap, alloc) } }"}]}