{"sha": "bb1ae85ed0bdd854029435ac5a9f175e3f33e2e7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJiMWFlODVlZDBiZGQ4NTQwMjk0MzVhYzVhOWYxNzVlM2YzM2UyZTc=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-07-28T21:37:34Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-07-28T22:03:19Z"}, "message": "Allow running more tests at once", "tree": {"sha": "dbe2f77a15554846b9a053d59b517acea77e75d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dbe2f77a15554846b9a053d59b517acea77e75d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bb1ae85ed0bdd854029435ac5a9f175e3f33e2e7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bb1ae85ed0bdd854029435ac5a9f175e3f33e2e7", "html_url": "https://github.com/rust-lang/rust/commit/bb1ae85ed0bdd854029435ac5a9f175e3f33e2e7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bb1ae85ed0bdd854029435ac5a9f175e3f33e2e7/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a8124273dd663f7f1ed43b53defc4a2c52dbc12", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a8124273dd663f7f1ed43b53defc4a2c52dbc12", "html_url": "https://github.com/rust-lang/rust/commit/5a8124273dd663f7f1ed43b53defc4a2c52dbc12"}], "stats": {"total": 164, "additions": 110, "deletions": 54}, "files": [{"sha": "45e0a7d853a6c532eb3cc15e188d6a6da6f4005b", "filename": "crates/ra_ide/src/runnables.rs", "status": "modified", "additions": 110, "deletions": 54, "changes": 164, "blob_url": "https://github.com/rust-lang/rust/blob/bb1ae85ed0bdd854029435ac5a9f175e3f33e2e7/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bb1ae85ed0bdd854029435ac5a9f175e3f33e2e7/crates%2Fra_ide%2Fsrc%2Frunnables.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Frunnables.rs?ref=bb1ae85ed0bdd854029435ac5a9f175e3f33e2e7", "patch": "@@ -220,15 +220,7 @@ fn runnable_mod(\n     module: ast::Module,\n     file_id: FileId,\n ) -> Option<Runnable> {\n-    let has_test_function = module\n-        .item_list()?\n-        .items()\n-        .filter_map(|it| match it {\n-            ast::ModuleItem::FnDef(it) => Some(it),\n-            _ => None,\n-        })\n-        .any(|f| has_test_related_attribute(&f));\n-    if !has_test_function {\n+    if !has_test_function_or_multiple_test_submodules(&module) {\n         return None;\n     }\n     let module_def = sema.to_def(&module)?;\n@@ -246,6 +238,34 @@ fn runnable_mod(\n     Some(Runnable { nav, kind: RunnableKind::TestMod { path }, cfg_exprs })\n }\n \n+// We could create runnables for modules with number_of_test_submodules > 0,\n+// but that bloats the runnables for no real benefit, since all tests can be run by the submodule already\n+fn has_test_function_or_multiple_test_submodules(module: &ast::Module) -> bool {\n+    if let Some(item_list) = module.item_list() {\n+        let mut number_of_test_submodules = 0;\n+\n+        for item in item_list.items() {\n+            match item {\n+                ast::ModuleItem::FnDef(f) => {\n+                    if has_test_related_attribute(&f) {\n+                        return true;\n+                    }\n+                }\n+                ast::ModuleItem::Module(submodule) => {\n+                    if has_test_function_or_multiple_test_submodules(&submodule) {\n+                        number_of_test_submodules += 1;\n+                    }\n+                }\n+                _ => (),\n+            }\n+        }\n+\n+        number_of_test_submodules > 1\n+    } else {\n+        false\n+    }\n+}\n+\n #[cfg(test)]\n mod tests {\n     use expect::{expect, Expect};\n@@ -571,38 +591,52 @@ mod test_mod {\n     }\n \n     #[test]\n-    fn test_runnables_one_depth_layer_module() {\n+    fn only_modules_with_test_functions_or_more_than_one_test_submodule_have_runners() {\n         check(\n             r#\"\n //- /lib.rs\n <|>\n-mod foo {\n-    mod test_mod {\n-        #[test]\n-        fn test_foo1() {}\n+mod root_tests {\n+    mod nested_tests_0 {\n+        mod nested_tests_1 {\n+            #[test]\n+            fn nested_test_11() {}\n+\n+            #[test]\n+            fn nested_test_12() {}\n+        }\n+\n+        mod nested_tests_2 {\n+            #[test]\n+            fn nested_test_2() {}\n+        }\n+\n+        mod nested_tests_3 {}\n     }\n+\n+    mod nested_tests_4 {}\n }\n \"#,\n-            &[&TEST, &TEST],\n+            &[&TEST, &TEST, &TEST, &TEST, &TEST, &TEST],\n             expect![[r#\"\n                 [\n                     Runnable {\n                         nav: NavigationTarget {\n                             file_id: FileId(\n                                 1,\n                             ),\n-                            full_range: 15..77,\n+                            full_range: 22..323,\n                             focus_range: Some(\n-                                19..27,\n+                                26..40,\n                             ),\n-                            name: \"test_mod\",\n+                            name: \"nested_tests_0\",\n                             kind: MODULE,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n                         },\n                         kind: TestMod {\n-                            path: \"foo::test_mod\",\n+                            path: \"root_tests::nested_tests_0\",\n                         },\n                         cfg_exprs: [],\n                     },\n@@ -611,66 +645,88 @@ mod foo {\n                             file_id: FileId(\n                                 1,\n                             ),\n-                            full_range: 38..71,\n+                            full_range: 51..192,\n                             focus_range: Some(\n-                                57..66,\n+                                55..69,\n                             ),\n-                            name: \"test_foo1\",\n+                            name: \"nested_tests_1\",\n+                            kind: MODULE,\n+                            container_name: None,\n+                            description: None,\n+                            docs: None,\n+                        },\n+                        kind: TestMod {\n+                            path: \"root_tests::nested_tests_0::nested_tests_1\",\n+                        },\n+                        cfg_exprs: [],\n+                    },\n+                    Runnable {\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                1,\n+                            ),\n+                            full_range: 84..126,\n+                            focus_range: Some(\n+                                107..121,\n+                            ),\n+                            name: \"nested_test_11\",\n                             kind: FN_DEF,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n                         },\n                         kind: Test {\n                             test_id: Path(\n-                                \"foo::test_mod::test_foo1\",\n+                                \"root_tests::nested_tests_0::nested_tests_1::nested_test_11\",\n                             ),\n                             attr: TestAttr {\n                                 ignore: false,\n                             },\n                         },\n                         cfg_exprs: [],\n                     },\n-                ]\n-            \"#]],\n-        );\n-    }\n-\n-    #[test]\n-    fn test_runnables_multiple_depth_module() {\n-        check(\n-            r#\"\n-//- /lib.rs\n-<|>\n-mod foo {\n-    mod bar {\n-        mod test_mod {\n-            #[test]\n-            fn test_foo1() {}\n-        }\n-    }\n-}\n-\"#,\n-            &[&TEST, &TEST],\n-            expect![[r#\"\n-                [\n                     Runnable {\n                         nav: NavigationTarget {\n                             file_id: FileId(\n                                 1,\n                             ),\n-                            full_range: 33..107,\n+                            full_range: 140..182,\n                             focus_range: Some(\n-                                37..45,\n+                                163..177,\n                             ),\n-                            name: \"test_mod\",\n+                            name: \"nested_test_12\",\n+                            kind: FN_DEF,\n+                            container_name: None,\n+                            description: None,\n+                            docs: None,\n+                        },\n+                        kind: Test {\n+                            test_id: Path(\n+                                \"root_tests::nested_tests_0::nested_tests_1::nested_test_12\",\n+                            ),\n+                            attr: TestAttr {\n+                                ignore: false,\n+                            },\n+                        },\n+                        cfg_exprs: [],\n+                    },\n+                    Runnable {\n+                        nav: NavigationTarget {\n+                            file_id: FileId(\n+                                1,\n+                            ),\n+                            full_range: 202..286,\n+                            focus_range: Some(\n+                                206..220,\n+                            ),\n+                            name: \"nested_tests_2\",\n                             kind: MODULE,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n                         },\n                         kind: TestMod {\n-                            path: \"foo::bar::test_mod\",\n+                            path: \"root_tests::nested_tests_0::nested_tests_2\",\n                         },\n                         cfg_exprs: [],\n                     },\n@@ -679,19 +735,19 @@ mod foo {\n                             file_id: FileId(\n                                 1,\n                             ),\n-                            full_range: 60..97,\n+                            full_range: 235..276,\n                             focus_range: Some(\n-                                83..92,\n+                                258..271,\n                             ),\n-                            name: \"test_foo1\",\n+                            name: \"nested_test_2\",\n                             kind: FN_DEF,\n                             container_name: None,\n                             description: None,\n                             docs: None,\n                         },\n                         kind: Test {\n                             test_id: Path(\n-                                \"foo::bar::test_mod::test_foo1\",\n+                                \"root_tests::nested_tests_0::nested_tests_2::nested_test_2\",\n                             ),\n                             attr: TestAttr {\n                                 ignore: false,"}]}