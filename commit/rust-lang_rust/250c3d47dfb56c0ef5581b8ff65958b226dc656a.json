{"sha": "250c3d47dfb56c0ef5581b8ff65958b226dc656a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI1MGMzZDQ3ZGZiNTZjMGVmNTU4MWI4ZmY2NTk1OGIyMjZkYzY1NmE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-16T17:15:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-16T17:15:43Z"}, "message": "auto merge of #9204 : lkuper/rust/workcache, r=alexcrichton\n\nThis just removes the stray \"foo.c\" that `workcache::test` leaves behind when, for example, `make check` runs.", "tree": {"sha": "0cc3dc47c3d630fdaa76f33d060a8fed774d0f1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cc3dc47c3d630fdaa76f33d060a8fed774d0f1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/250c3d47dfb56c0ef5581b8ff65958b226dc656a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/250c3d47dfb56c0ef5581b8ff65958b226dc656a", "html_url": "https://github.com/rust-lang/rust/commit/250c3d47dfb56c0ef5581b8ff65958b226dc656a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/250c3d47dfb56c0ef5581b8ff65958b226dc656a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bc48b63f376439801d43820f6df0990797b8787", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc48b63f376439801d43820f6df0990797b8787", "html_url": "https://github.com/rust-lang/rust/commit/6bc48b63f376439801d43820f6df0990797b8787"}, {"sha": "a7515c87ae1352cb0009c4136f56092736012197", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7515c87ae1352cb0009c4136f56092736012197", "html_url": "https://github.com/rust-lang/rust/commit/a7515c87ae1352cb0009c4136f56092736012197"}], "stats": {"total": 23, "additions": 16, "deletions": 7}, "files": [{"sha": "2b2ecb79294c456b68782631c28b498cd4efe573", "filename": "src/libextra/workcache.rs", "status": "modified", "additions": 16, "deletions": 7, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/250c3d47dfb56c0ef5581b8ff65958b226dc656a/src%2Flibextra%2Fworkcache.rs", "raw_url": "https://github.com/rust-lang/rust/raw/250c3d47dfb56c0ef5581b8ff65958b226dc656a/src%2Flibextra%2Fworkcache.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fworkcache.rs?ref=250c3d47dfb56c0ef5581b8ff65958b226dc656a", "patch": "@@ -496,16 +496,23 @@ fn test() {\n     use std::io::WriterUtil;\n     use std::{os, run};\n \n-    let pth = Path(\"foo.c\");\n+    // Create a path to a new file 'filename' in the directory in which\n+    // this test is running.\n+    fn make_path(filename: ~str) -> Path {\n+        let pth = os::self_exe_path().expect(\"workcache::test failed\").pop().push(filename);\n+        if os::path_exists(&pth) {\n+            os::remove_file(&pth);\n+        }\n+        return pth;\n+    }\n+\n+    let pth = make_path(~\"foo.c\");\n     {\n         let r = io::file_writer(&pth, [io::Create]);\n         r.unwrap().write_str(\"int main() { return 0; }\");\n     }\n \n-    let db_path = os::self_exe_path().expect(\"workcache::test failed\").pop().push(\"db.json\");\n-    if os::path_exists(&db_path) {\n-        os::remove_file(&db_path);\n-    }\n+    let db_path = make_path(~\"db.json\");\n \n     let cx = Context::new(RWArc::new(Database::new(db_path)),\n                           RWArc::new(Logger::new()),\n@@ -514,17 +521,19 @@ fn test() {\n     let s = do cx.with_prep(\"test1\") |prep| {\n \n         let subcx = cx.clone();\n+        let pth = pth.clone();\n \n         prep.declare_input(\"file\", pth.to_str(), digest_file(&pth));\n         do prep.exec |_exe| {\n-            let out = Path(\"foo.o\");\n-            run::process_status(\"gcc\", [~\"foo.c\", ~\"-o\", out.to_str()]);\n+            let out = make_path(~\"foo.o\");\n+            run::process_status(\"gcc\", [pth.to_str(), ~\"-o\", out.to_str()]);\n \n             let _proof_of_concept = subcx.prep(\"subfn\");\n             // Could run sub-rules inside here.\n \n             out.to_str()\n         }\n     };\n+\n     io::println(s);\n }"}]}