{"sha": "180dcc3118998ebbe390f876df51f85f1b33407a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE4MGRjYzMxMTg5OThlYmJlMzkwZjg3NmRmNTFmODVmMWIzMzQwN2E=", "commit": {"author": {"name": "Nathan West", "email": "Lucretiel@gmail.com", "date": "2018-12-05T22:37:38Z"}, "committer": {"name": "Nathan West", "email": "Lucretiel@gmail.com", "date": "2018-12-05T22:51:04Z"}, "message": "Optimized string FromIterator impls", "tree": {"sha": "0cd56442e5908072eedc424bab05d45cff4845d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cd56442e5908072eedc424bab05d45cff4845d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/180dcc3118998ebbe390f876df51f85f1b33407a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/180dcc3118998ebbe390f876df51f85f1b33407a", "html_url": "https://github.com/rust-lang/rust/commit/180dcc3118998ebbe390f876df51f85f1b33407a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/180dcc3118998ebbe390f876df51f85f1b33407a/comments", "author": {"login": "Lucretiel", "id": 1823405, "node_id": "MDQ6VXNlcjE4MjM0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1823405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lucretiel", "html_url": "https://github.com/Lucretiel", "followers_url": "https://api.github.com/users/Lucretiel/followers", "following_url": "https://api.github.com/users/Lucretiel/following{/other_user}", "gists_url": "https://api.github.com/users/Lucretiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lucretiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lucretiel/subscriptions", "organizations_url": "https://api.github.com/users/Lucretiel/orgs", "repos_url": "https://api.github.com/users/Lucretiel/repos", "events_url": "https://api.github.com/users/Lucretiel/events{/privacy}", "received_events_url": "https://api.github.com/users/Lucretiel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Lucretiel", "id": 1823405, "node_id": "MDQ6VXNlcjE4MjM0MDU=", "avatar_url": "https://avatars.githubusercontent.com/u/1823405?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Lucretiel", "html_url": "https://github.com/Lucretiel", "followers_url": "https://api.github.com/users/Lucretiel/followers", "following_url": "https://api.github.com/users/Lucretiel/following{/other_user}", "gists_url": "https://api.github.com/users/Lucretiel/gists{/gist_id}", "starred_url": "https://api.github.com/users/Lucretiel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Lucretiel/subscriptions", "organizations_url": "https://api.github.com/users/Lucretiel/orgs", "repos_url": "https://api.github.com/users/Lucretiel/repos", "events_url": "https://api.github.com/users/Lucretiel/events{/privacy}", "received_events_url": "https://api.github.com/users/Lucretiel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b866f7d258a2428e004039eb0f3fabd73cc9d6ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/b866f7d258a2428e004039eb0f3fabd73cc9d6ae", "html_url": "https://github.com/rust-lang/rust/commit/b866f7d258a2428e004039eb0f3fabd73cc9d6ae"}], "stats": {"total": 41, "additions": 23, "deletions": 18}, "files": [{"sha": "ef9a34ec611c67f6e96107e458c9af68b3ddae4a", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 23, "deletions": 18, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/180dcc3118998ebbe390f876df51f85f1b33407a/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/180dcc3118998ebbe390f876df51f85f1b33407a/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=180dcc3118998ebbe390f876df51f85f1b33407a", "patch": "@@ -1732,18 +1732,31 @@ impl<'a> FromIterator<&'a str> for String {\n #[stable(feature = \"extend_string\", since = \"1.4.0\")]\n impl FromIterator<String> for String {\n     fn from_iter<I: IntoIterator<Item = String>>(iter: I) -> String {\n-        let mut buf = String::new();\n-        buf.extend(iter);\n-        buf\n+        let iterator = iter.into_iter();\n+\n+        match iterator.next() {\n+            None => String::new(),\n+            Some(buf) => {\n+                buf.extend(iterator);\n+                buf\n+            }\n+        }\n     }\n }\n \n #[stable(feature = \"herd_cows\", since = \"1.19.0\")]\n impl<'a> FromIterator<Cow<'a, str>> for String {\n     fn from_iter<I: IntoIterator<Item = Cow<'a, str>>>(iter: I) -> String {\n-        let mut buf = String::new();\n-        buf.extend(iter);\n-        buf\n+        let iterator = iter.into_iter();\n+\n+        match iterator.next() {\n+            None => String::new(),\n+            Some(cow) => {\n+                let buf = cow.into_owned();\n+                buf.extend(iterator);\n+                buf\n+            }\n+        }\n     }\n }\n \n@@ -1753,9 +1766,7 @@ impl Extend<char> for String {\n         let iterator = iter.into_iter();\n         let (lower_bound, _) = iterator.size_hint();\n         self.reserve(lower_bound);\n-        for ch in iterator {\n-            self.push(ch)\n-        }\n+        iterator.for_each(move |c| self.push(c));\n     }\n }\n \n@@ -1769,27 +1780,21 @@ impl<'a> Extend<&'a char> for String {\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl<'a> Extend<&'a str> for String {\n     fn extend<I: IntoIterator<Item = &'a str>>(&mut self, iter: I) {\n-        for s in iter {\n-            self.push_str(s)\n-        }\n+        iter.into_iter().for_each(move |s| self.push_str(s));\n     }\n }\n \n #[stable(feature = \"extend_string\", since = \"1.4.0\")]\n impl Extend<String> for String {\n     fn extend<I: IntoIterator<Item = String>>(&mut self, iter: I) {\n-        for s in iter {\n-            self.push_str(&s)\n-        }\n+        iter.into_iter().for_each(move |s| self.push_str(&s));\n     }\n }\n \n #[stable(feature = \"herd_cows\", since = \"1.19.0\")]\n impl<'a> Extend<Cow<'a, str>> for String {\n     fn extend<I: IntoIterator<Item = Cow<'a, str>>>(&mut self, iter: I) {\n-        for s in iter {\n-            self.push_str(&s)\n-        }\n+        iter.into_iter().for_each(move |s| self.push_str(&s));\n     }\n }\n "}]}