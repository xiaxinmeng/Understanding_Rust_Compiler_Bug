{"sha": "2a2e602f2a6ebb1984817e802bb529415f35a574", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMmU2MDJmMmE2ZWJiMTk4NDgxN2U4MDJiYjUyOTQxNWYzNWE1NzQ=", "commit": {"author": {"name": "Oliver Schneider", "email": "github35764891676564198441@oli-obk.de", "date": "2018-06-07T09:52:32Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-06-07T09:52:32Z"}, "message": "Merge pull request #2833 from phansch/cannot_relate_bound_region_without_ICE_cream\n\nFix cargo late bound region mismatch ICE", "tree": {"sha": "cb22701931a8b9098ceeaef9a69d7b8b5e5bdcb3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb22701931a8b9098ceeaef9a69d7b8b5e5bdcb3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a2e602f2a6ebb1984817e802bb529415f35a574", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJbGQBgCRBK7hj4Ov3rIwAAdHIIAFheAY58DezpcMvnAH6e4Low\njgltZqP7pBY2T/SOkuE/epjDESvzcJj9X+soDZ5E0BcdQl9ELcNeNYrobg3iGarW\nuKV/RutxtNI+B22gNQniQwbBf2//TsetUZYzPUWkLzcDcEdZHKiwEV2yQsXx7AGG\ntsCv7xxuWMlOFf3dZkXOErh9YIypHglsXNe7ImlNP5rh2gVGjlfvehUxgDtC8iEC\nQOkJp3ryDJisidGop8ZtpxIzTZ5eaFBBK+Icz4b+je/Z5K1TZ9C7rev3k17BaWnV\nJrr9yj69eP7WfL3/6Gwn611pKmkpSFNma9V1tybIyW1JlwmAET0QFnsaUE5WhRw=\n=Y761\n-----END PGP SIGNATURE-----\n", "payload": "tree cb22701931a8b9098ceeaef9a69d7b8b5e5bdcb3\nparent 7563d8155b8a1b9a8ee7574619a850dd7169f6c0\nparent 17aff1d774b11ef68c122c995b1d2b238ff5fb04\nauthor Oliver Schneider <github35764891676564198441@oli-obk.de> 1528365152 +0200\ncommitter GitHub <noreply@github.com> 1528365152 +0200\n\nMerge pull request #2833 from phansch/cannot_relate_bound_region_without_ICE_cream\n\nFix cargo late bound region mismatch ICE"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a2e602f2a6ebb1984817e802bb529415f35a574", "html_url": "https://github.com/rust-lang/rust/commit/2a2e602f2a6ebb1984817e802bb529415f35a574", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a2e602f2a6ebb1984817e802bb529415f35a574/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7563d8155b8a1b9a8ee7574619a850dd7169f6c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7563d8155b8a1b9a8ee7574619a850dd7169f6c0", "html_url": "https://github.com/rust-lang/rust/commit/7563d8155b8a1b9a8ee7574619a850dd7169f6c0"}, {"sha": "17aff1d774b11ef68c122c995b1d2b238ff5fb04", "url": "https://api.github.com/repos/rust-lang/rust/commits/17aff1d774b11ef68c122c995b1d2b238ff5fb04", "html_url": "https://github.com/rust-lang/rust/commit/17aff1d774b11ef68c122c995b1d2b238ff5fb04"}], "stats": {"total": 37, "additions": 36, "deletions": 1}, "files": [{"sha": "a49464b021a7a5c887572da0a55f1b5bc0030e3b", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2a2e602f2a6ebb1984817e802bb529415f35a574/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a2e602f2a6ebb1984817e802bb529415f35a574/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=2a2e602f2a6ebb1984817e802bb529415f35a574", "patch": "@@ -8,7 +8,7 @@ use rustc::hir::map::Node;\n use rustc::lint::{LateContext, Level, Lint, LintContext};\n use rustc::session::Session;\n use rustc::traits;\n-use rustc::ty::{self, Ty, TyCtxt, layout::{self, IntegerExt}, subst::Kind};\n+use rustc::ty::{self, Binder, Ty, TyCtxt, layout::{self, IntegerExt}, subst::Kind};\n use rustc_errors::{Applicability, CodeSuggestion, Substitution, SubstitutionPart};\n use std::borrow::Cow;\n use std::env;\n@@ -869,10 +869,14 @@ pub fn return_ty<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, fn_item: NodeId) -> Ty<'t\n }\n \n /// Check if two types are the same.\n+///\n+/// This discards any lifetime annotations, too.\n // FIXME: this works correctly for lifetimes bounds (`for <'a> Foo<'a>` == `for\n // <'b> Foo<'b>` but\n // not for type parameters.\n pub fn same_tys<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, a: Ty<'tcx>, b: Ty<'tcx>) -> bool {\n+    let a = cx.tcx.erase_late_bound_regions(&Binder::bind(a));\n+    let b = cx.tcx.erase_late_bound_regions(&Binder::bind(b));\n     cx.tcx\n         .infer_ctxt()\n         .enter(|infcx| infcx.can_eq(cx.param_env, a, b).is_ok())"}, {"sha": "c6d9bb4a276e118200ecbce8867945ef4834f05c", "filename": "tests/run-pass/ice-2774.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2a2e602f2a6ebb1984817e802bb529415f35a574/tests%2Frun-pass%2Fice-2774.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a2e602f2a6ebb1984817e802bb529415f35a574/tests%2Frun-pass%2Fice-2774.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fice-2774.rs?ref=2a2e602f2a6ebb1984817e802bb529415f35a574", "patch": "@@ -0,0 +1,31 @@\n+use std::collections::HashSet;\n+\n+// See https://github.com/rust-lang-nursery/rust-clippy/issues/2774\n+\n+#[derive(Eq, PartialEq, Debug, Hash)]\n+pub struct Bar {\n+    foo: Foo,\n+}\n+\n+#[derive(Eq, PartialEq, Debug, Hash)]\n+pub struct Foo {}\n+\n+#[allow(implicit_hasher)]\n+// This should not cause a 'cannot relate bound region' ICE\n+pub fn add_barfoos_to_foos<'a>(bars: &HashSet<&'a Bar>) {\n+    let mut foos = HashSet::new();\n+    foos.extend(\n+        bars.iter().map(|b| &b.foo)\n+    );\n+}\n+\n+#[allow(implicit_hasher)]\n+// Also this should not cause a 'cannot relate bound region' ICE\n+pub fn add_barfoos_to_foos2(bars: &HashSet<&Bar>) {\n+    let mut foos = HashSet::new();\n+    foos.extend(\n+        bars.iter().map(|b| &b.foo)\n+    );\n+}\n+\n+fn main() {}"}]}