{"sha": "29a74e62857bc8c51723402dee5873ef0fe2cd83", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5YTc0ZTYyODU3YmM4YzUxNzIzNDAyZGVlNTg3M2VmMGZlMmNkODM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-21T08:15:16Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-11-21T08:15:16Z"}, "message": "Auto merge of #79222 - yoshuawuyts:slice-fill-with, r=m-ou-se\n\nAdd `core::slice::fill_with`\n\nTracking issue https://github.com/rust-lang/rust/issues/79221.\n\nAs suggested by `@m-ou-se` in https://github.com/rust-lang/rust/issues/70758#issuecomment-726838099 this implements `slice::fill_with` as a counterpart to `slice::fill`. This mirrors `Vec::resize` and `Vec::resize_with`. Thanks!\n\nr? `@m-ou-se`", "tree": {"sha": "58867f7cbb95a94e036cd862c946a77b2a981022", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58867f7cbb95a94e036cd862c946a77b2a981022"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/29a74e62857bc8c51723402dee5873ef0fe2cd83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/29a74e62857bc8c51723402dee5873ef0fe2cd83", "html_url": "https://github.com/rust-lang/rust/commit/29a74e62857bc8c51723402dee5873ef0fe2cd83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/29a74e62857bc8c51723402dee5873ef0fe2cd83/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "502c477b3417f18e4e45b4e6e37da9965a033051", "url": "https://api.github.com/repos/rust-lang/rust/commits/502c477b3417f18e4e45b4e6e37da9965a033051", "html_url": "https://github.com/rust-lang/rust/commit/502c477b3417f18e4e45b4e6e37da9965a033051"}, {"sha": "a64d0d4774db30bd37ec2ede87e966dcdd33dfc2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a64d0d4774db30bd37ec2ede87e966dcdd33dfc2", "html_url": "https://github.com/rust-lang/rust/commit/a64d0d4774db30bd37ec2ede87e966dcdd33dfc2"}], "stats": {"total": 28, "additions": 28, "deletions": 0}, "files": [{"sha": "83f22895237a8ba77554ae777f8c4955457826f8", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/29a74e62857bc8c51723402dee5873ef0fe2cd83/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/29a74e62857bc8c51723402dee5873ef0fe2cd83/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=29a74e62857bc8c51723402dee5873ef0fe2cd83", "patch": "@@ -2599,6 +2599,34 @@ impl<T> [T] {\n         }\n     }\n \n+    /// Fills `self` with elements returned by calling a closure repeatedly.\n+    ///\n+    /// This method uses a closure to create new values. If you'd rather\n+    /// [`Clone`] a given value, use [`fill`]. If you want to use the [`Default`]\n+    /// trait to generate values, you can pass [`Default::default`] as the\n+    /// argument.\n+    ///\n+    /// [`fill`]: #method.fill\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(slice_fill_with)]\n+    ///\n+    /// let mut buf = vec![1; 10];\n+    /// buf.fill_with(Default::default);\n+    /// assert_eq!(buf, vec![0; 10]);\n+    /// ```\n+    #[unstable(feature = \"slice_fill_with\", issue = \"79221\")]\n+    pub fn fill_with<F>(&mut self, mut f: F)\n+    where\n+        F: FnMut() -> T,\n+    {\n+        for el in self {\n+            *el = f();\n+        }\n+    }\n+\n     /// Copies the elements from `src` into `self`.\n     ///\n     /// The length of `src` must be the same as `self`."}]}