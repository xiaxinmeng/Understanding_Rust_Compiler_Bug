{"sha": "61a5e4672662d16e659d30017eece3aee5b32d82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYTVlNDY3MjY2MmQxNmU2NTlkMzAwMTdlZWNlM2FlZTViMzJkODI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-26T03:34:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-26T03:34:38Z"}, "message": "Auto merge of #24825 - rkruppe:reference-audit, r=steveklabnik\n\nTransplant the relevant changes (turns out to be all of them) to `grammar.md`, and remove all grammar talk from `reference.md`. Sorry for the chaos.\r\n\r\nThe second commit, further below, goes over the comments and whitespace sections.\r\n\r\nr? @steveklabnik", "tree": {"sha": "c5ff196e701870bb32eb900edcfff28ce952b17f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5ff196e701870bb32eb900edcfff28ce952b17f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61a5e4672662d16e659d30017eece3aee5b32d82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61a5e4672662d16e659d30017eece3aee5b32d82", "html_url": "https://github.com/rust-lang/rust/commit/61a5e4672662d16e659d30017eece3aee5b32d82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61a5e4672662d16e659d30017eece3aee5b32d82/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20adc9533dbafb451451bb109f0fca8f50dd5741", "url": "https://api.github.com/repos/rust-lang/rust/commits/20adc9533dbafb451451bb109f0fca8f50dd5741", "html_url": "https://github.com/rust-lang/rust/commit/20adc9533dbafb451451bb109f0fca8f50dd5741"}, {"sha": "0ea193def9e637ed333ce83a4902cf90c42d9381", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ea193def9e637ed333ce83a4902cf90c42d9381", "html_url": "https://github.com/rust-lang/rust/commit/0ea193def9e637ed333ce83a4902cf90c42d9381"}], "stats": {"total": 51, "additions": 21, "deletions": 30}, "files": [{"sha": "cceab31c61db1da60b0887face14d1492b33e557", "filename": "src/doc/grammar.md", "status": "modified", "additions": 7, "deletions": 5, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/61a5e4672662d16e659d30017eece3aee5b32d82/src%2Fdoc%2Fgrammar.md", "raw_url": "https://github.com/rust-lang/rust/raw/61a5e4672662d16e659d30017eece3aee5b32d82/src%2Fdoc%2Fgrammar.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fgrammar.md?ref=61a5e4672662d16e659d30017eece3aee5b32d82", "patch": "@@ -96,12 +96,16 @@ explicit codepoint lists. [^inputformat]\n ## Special Unicode Productions\n \n The following productions in the Rust grammar are defined in terms of Unicode\n-properties: `ident`, `non_null`, `non_star`, `non_eol`, `non_slash_or_star`,\n-`non_single_quote` and `non_double_quote`.\n+properties: `ident`, `non_null`, `non_eol`, `non_single_quote` and\n+`non_double_quote`.\n \n ### Identifiers\n \n-The `ident` production is any nonempty Unicode string of the following form:\n+The `ident` production is any nonempty Unicode[^non_ascii_idents] string of\n+the following form:\n+\n+[^non_ascii_idents]: Non-ASCII characters in identifiers are currently feature\n+  gated. This is expected to improve soon.\n \n - The first character has property `XID_start`\n - The remaining characters have property `XID_continue`\n@@ -118,8 +122,6 @@ Some productions are defined by exclusion of particular Unicode characters:\n \n - `non_null` is any single Unicode character aside from `U+0000` (null)\n - `non_eol` is `non_null` restricted to exclude `U+000A` (`'\\n'`)\n-- `non_star` is `non_null` restricted to exclude `U+002A` (`*`)\n-- `non_slash_or_star` is `non_null` restricted to exclude `U+002F` (`/`) and `U+002A` (`*`)\n - `non_single_quote` is `non_null` restricted to exclude `U+0027`  (`'`)\n - `non_double_quote` is `non_null` restricted to exclude `U+0022` (`\"`)\n "}, {"sha": "7c9cca90edda78d1acfa3a95e9cc62e5c896a8a9", "filename": "src/doc/reference.md", "status": "modified", "additions": 14, "deletions": 25, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/61a5e4672662d16e659d30017eece3aee5b32d82/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/61a5e4672662d16e659d30017eece3aee5b32d82/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=61a5e4672662d16e659d30017eece3aee5b32d82", "patch": "@@ -65,14 +65,9 @@ explicit code point lists. [^inputformat]\n   provided to the grammar verifier, restricted to ASCII range, when verifying the\n   grammar in this document.\n \n-## Special Unicode Productions\n+## Identifiers\n \n-The following productions in the Rust grammar are defined in terms of Unicode\n-properties: `ident`, `non_null`, `non_eol`, `non_single_quote` and `non_double_quote`.\n-\n-### Identifiers\n-\n-The `ident` production is any nonempty Unicode[^non_ascii_idents] string of the following form:\n+An identifier is any nonempty Unicode[^non_ascii_idents] string of the following form:\n \n [^non_ascii_idents]: Non-ASCII characters in identifiers are currently feature\n   gated. This is expected to improve soon.\n@@ -86,40 +81,34 @@ that does _not_ occur in the set of [keywords](#keywords).\n > character ranges used to form the more familiar C and Java language-family\n > identifiers.\n \n-### Delimiter-restricted productions\n-\n-Some productions are defined by exclusion of particular Unicode characters:\n-\n-- `non_null` is any single Unicode character aside from `U+0000` (null)\n-- `non_eol` is `non_null` restricted to exclude `U+000A` (`'\\n'`)\n-- `non_single_quote` is `non_null` restricted to exclude `U+0027`  (`'`)\n-- `non_double_quote` is `non_null` restricted to exclude `U+0022` (`\"`)\n-\n ## Comments\n \n-Comments in Rust code follow the general C++ style of line and block-comment\n-forms. Nested block comments are supported.\n+Comments in Rust code follow the general C++ style of line (`//`) and\n+block-comment (`/* ... */`) forms. Nested block comments are supported.\n \n Line comments beginning with exactly _three_ slashes (`///`), and block\n comments beginning with exactly one repeated asterisk in the block-open\n sequence (`/**`), are interpreted as a special syntax for `doc`\n [attributes](#attributes). That is, they are equivalent to writing\n-`#[doc=\"...\"]` around the body of the comment (this includes the comment\n-characters themselves, i.e. `/// Foo` turns into `#[doc=\"/// Foo\"]`).\n+`#[doc=\"...\"]` around the body of the comment, i.e., `/// Foo` turns into\n+`#[doc=\"Foo\"]`.\n \n Line comments beginning with `//!` and block comments beginning with `/*!` are\n doc comments that apply to the parent of the comment, rather than the item\n that follows.  That is, they are equivalent to writing `#![doc=\"...\"]` around\n-the body of the comment. `//!` comments are usually used to display\n-information on the crate index page.\n+the body of the comment. `//!` comments are usually used to document\n+modules that occupy a source file.\n \n Non-doc comments are interpreted as a form of whitespace.\n \n ## Whitespace\n \n-The `whitespace_char` production is any nonempty Unicode string consisting of\n-any of the following Unicode characters: `U+0020` (space, `' '`), `U+0009`\n-(tab, `'\\t'`), `U+000A` (LF, `'\\n'`), `U+000D` (CR, `'\\r'`).\n+Whitespace is any non-empty string containing any the following characters:\n+\n+- `U+0020` (space, `' '`)\n+- `U+0009` (tab, `'\\t'`)\n+- `U+000A` (LF, `'\\n'`)\n+- `U+000D` (CR, `'\\r'`)\n \n Rust is a \"free-form\" language, meaning that all forms of whitespace serve only\n to separate _tokens_ in the grammar, and have no semantic significance."}]}