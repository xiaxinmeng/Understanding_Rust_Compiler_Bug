{"sha": "6d7b143036e1d61c8f58864db3445d2a0ae4ad11", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZkN2IxNDMwMzZlMWQ2MWM4ZjU4ODY0ZGIzNDQ1ZDJhMGFlNGFkMTE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-17T02:36:49Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-17T02:37:33Z"}, "message": "libstd: Add a function to borrow a cell", "tree": {"sha": "df08c547c34fe73e5cc99fcaab84b530dbfd3664", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df08c547c34fe73e5cc99fcaab84b530dbfd3664"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6d7b143036e1d61c8f58864db3445d2a0ae4ad11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6d7b143036e1d61c8f58864db3445d2a0ae4ad11", "html_url": "https://github.com/rust-lang/rust/commit/6d7b143036e1d61c8f58864db3445d2a0ae4ad11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6d7b143036e1d61c8f58864db3445d2a0ae4ad11/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e3825d38cc459f9fcb24f1e95d4f6e867265300", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e3825d38cc459f9fcb24f1e95d4f6e867265300", "html_url": "https://github.com/rust-lang/rust/commit/0e3825d38cc459f9fcb24f1e95d4f6e867265300"}], "stats": {"total": 9, "additions": 8, "deletions": 1}, "files": [{"sha": "3d8f63c26cd3e647d748e1c96efb6f2e08f43a90", "filename": "src/libstd/cell.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6d7b143036e1d61c8f58864db3445d2a0ae4ad11/src%2Flibstd%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6d7b143036e1d61c8f58864db3445d2a0ae4ad11/src%2Flibstd%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcell.rs?ref=6d7b143036e1d61c8f58864db3445d2a0ae4ad11", "patch": "@@ -39,6 +39,13 @@ impl<T> Cell<T> {\n     fn is_empty() -> bool {\n         self.value.is_none()\n     }\n+\n+    // Calls a closure with a reference to the value.\n+    fn with_ref(f: fn(v: &T)) {\n+        let val = move self.take();\n+        f(&val);\n+        self.put_back(move val);\n+    }\n }\n \n #[test]\n@@ -66,4 +73,4 @@ fn test_take_empty() {\n fn test_put_back_non_empty() {\n     let value_cell = Cell(~10);\n     value_cell.put_back(~20);\n-}\n\\ No newline at end of file\n+}"}]}