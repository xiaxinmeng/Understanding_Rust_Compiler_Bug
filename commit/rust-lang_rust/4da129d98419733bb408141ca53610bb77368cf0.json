{"sha": "4da129d98419733bb408141ca53610bb77368cf0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRkYTEyOWQ5ODQxOTczM2JiNDA4MTQxY2E1MzYxMGJiNzczNjhjZjA=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-11-11T10:51:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-11-11T10:51:01Z"}, "message": "Auto merge of #37246 - goffrie:no-loop, r=jseyfried\n\nDon't spin expanding stmt macros.\n\nIf we can't make progress when parsing a macro expansion as a statement then we should just bail.\n\nThis alleviates the symptoms shown in e.g. #37113 and #37234 but it doesn't fix the problem that parsing invalid enum bodies (and others) leaves the parser in a crappy state.\n\nI'm not sold on this strategy (checking `tokens_consumed`), so if anyone has a better idea, I'm all ears!", "tree": {"sha": "1355601d6d0ff942eef9ca2c4ee27e6913bca9a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1355601d6d0ff942eef9ca2c4ee27e6913bca9a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4da129d98419733bb408141ca53610bb77368cf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4da129d98419733bb408141ca53610bb77368cf0", "html_url": "https://github.com/rust-lang/rust/commit/4da129d98419733bb408141ca53610bb77368cf0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4da129d98419733bb408141ca53610bb77368cf0/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "280362a02df97670dd08ed19557c81b504b395c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/280362a02df97670dd08ed19557c81b504b395c3", "html_url": "https://github.com/rust-lang/rust/commit/280362a02df97670dd08ed19557c81b504b395c3"}, {"sha": "eed86fac91c12707b8ef6693a5cf2106ca6652c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/eed86fac91c12707b8ef6693a5cf2106ca6652c0", "html_url": "https://github.com/rust-lang/rust/commit/eed86fac91c12707b8ef6693a5cf2106ca6652c0"}], "stats": {"total": 23, "additions": 22, "deletions": 1}, "files": [{"sha": "c3608aac0b40357c2e99095eb61ff3791949cab7", "filename": "src/libsyntax/ext/expand.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4da129d98419733bb408141ca53610bb77368cf0/src%2Flibsyntax%2Fext%2Fexpand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4da129d98419733bb408141ca53610bb77368cf0/src%2Flibsyntax%2Fext%2Fexpand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fexpand.rs?ref=4da129d98419733bb408141ca53610bb77368cf0", "patch": "@@ -533,7 +533,9 @@ impl<'a> Parser<'a> {\n             }\n             ExpansionKind::Stmts => {\n                 let mut stmts = SmallVector::zero();\n-                while self.token != token::Eof {\n+                while self.token != token::Eof &&\n+                      // won't make progress on a `}`\n+                      self.token != token::CloseDelim(token::Brace) {\n                     if let Some(stmt) = self.parse_full_stmt(macro_legacy_warnings)? {\n                         stmts.push(stmt);\n                     }"}, {"sha": "651e11d9d21b3a9482e4a8a335ce43fa37e3d7f4", "filename": "src/test/parse-fail/issue-37234.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/4da129d98419733bb408141ca53610bb77368cf0/src%2Ftest%2Fparse-fail%2Fissue-37234.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4da129d98419733bb408141ca53610bb77368cf0/src%2Ftest%2Fparse-fail%2Fissue-37234.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fparse-fail%2Fissue-37234.rs?ref=4da129d98419733bb408141ca53610bb77368cf0", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+macro_rules! failed {\n+    () => {{\n+        let x = 5 \"\"; //~ ERROR found `\"\"`\n+    }} //~ ERROR macro expansion ignores token `}`\n+}\n+\n+fn main() {\n+    failed!();\n+}"}]}