{"sha": "2557603f320593be9d1c29a453c648e61e74d343", "node_id": "C_kwDOAAsO6NoAKDI1NTc2MDNmMzIwNTkzYmU5ZDFjMjlhNDUzYzY0OGU2MWU3NGQzNDM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-03T22:20:10Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-07-03T22:20:10Z"}, "message": "Auto merge of #98864 - RalfJung:rollup-ptzklyc, r=RalfJung\n\nRollup of 4 pull requests\n\nSuccessful merges:\n\n - #94831 (Link to stabilization section in std-dev-guide for library tracking issue template)\n - #98764 (add Miri to the nightly docs)\n - #98773 (rustdoc: use <details> tag for the source code sidebar)\n - #98799 (Fix bug in `rustdoc -Whelp`)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "85cfe7ab1057e72b396d22bac9d9afdec91d6ca8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85cfe7ab1057e72b396d22bac9d9afdec91d6ca8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2557603f320593be9d1c29a453c648e61e74d343", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2557603f320593be9d1c29a453c648e61e74d343", "html_url": "https://github.com/rust-lang/rust/commit/2557603f320593be9d1c29a453c648e61e74d343", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2557603f320593be9d1c29a453c648e61e74d343/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "495b216696ccbc27c73d6bdc486bf4621d610f4b", "url": "https://api.github.com/repos/rust-lang/rust/commits/495b216696ccbc27c73d6bdc486bf4621d610f4b", "html_url": "https://github.com/rust-lang/rust/commit/495b216696ccbc27c73d6bdc486bf4621d610f4b"}, {"sha": "ce76d7312f0d5b20586ef1445a41f96ce66e1ce3", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce76d7312f0d5b20586ef1445a41f96ce66e1ce3", "html_url": "https://github.com/rust-lang/rust/commit/ce76d7312f0d5b20586ef1445a41f96ce66e1ce3"}], "stats": {"total": 721, "additions": 207, "deletions": 514}, "files": [{"sha": "91c06402ca10a9bffdec70867c017b6de98e8270", "filename": ".github/ISSUE_TEMPLATE/library_tracking_issue.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/.github%2FISSUE_TEMPLATE%2Flibrary_tracking_issue.md", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/.github%2FISSUE_TEMPLATE%2Flibrary_tracking_issue.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.github%2FISSUE_TEMPLATE%2Flibrary_tracking_issue.md?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -50,7 +50,7 @@ If the feature is changed later, please add those PRs here as well.\n -->\n \n - [ ] Implementation: #...\n-- [ ] Final comment period (FCP)\n+- [ ] Final comment period (FCP)[^1]\n - [ ] Stabilization PR\n \n <!--\n@@ -81,3 +81,5 @@ Zulip, or the internals forum) here.\n -->\n \n - None yet.\n+\n+[^1]: https://std-dev-guide.rust-lang.org/feature-lifecycle/stabilization.html"}, {"sha": "b71cdad718a27253a29bca3eed58e9a4fc092520", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -849,10 +849,10 @@ Available lint options:\n     };\n \n     println!(\"Lint checks provided by rustc:\\n\");\n-    println!(\"    {}  {:7.7}  {}\", padded(\"name\"), \"default\", \"meaning\");\n-    println!(\"    {}  {:7.7}  {}\", padded(\"----\"), \"-------\", \"-------\");\n \n     let print_lints = |lints: Vec<&Lint>| {\n+        println!(\"    {}  {:7.7}  {}\", padded(\"name\"), \"default\", \"meaning\");\n+        println!(\"    {}  {:7.7}  {}\", padded(\"----\"), \"-------\", \"-------\");\n         for lint in lints {\n             let name = lint.name_lower().replace('_', \"-\");\n             println!(\n@@ -884,11 +884,15 @@ Available lint options:\n     };\n \n     println!(\"Lint groups provided by rustc:\\n\");\n-    println!(\"    {}  sub-lints\", padded(\"name\"));\n-    println!(\"    {}  ---------\", padded(\"----\"));\n-    println!(\"    {}  all lints that are set to issue warnings\", padded(\"warnings\"));\n \n-    let print_lint_groups = |lints: Vec<(&'static str, Vec<LintId>)>| {\n+    let print_lint_groups = |lints: Vec<(&'static str, Vec<LintId>)>, all_warnings| {\n+        println!(\"    {}  sub-lints\", padded(\"name\"));\n+        println!(\"    {}  ---------\", padded(\"----\"));\n+\n+        if all_warnings {\n+            println!(\"    {}  all lints that are set to issue warnings\", padded(\"warnings\"));\n+        }\n+\n         for (name, to) in lints {\n             let name = name.to_lowercase().replace('_', \"-\");\n             let desc = to\n@@ -901,7 +905,7 @@ Available lint options:\n         println!(\"\\n\");\n     };\n \n-    print_lint_groups(builtin_groups);\n+    print_lint_groups(builtin_groups, true);\n \n     match (loaded_plugins, plugin.len(), plugin_groups.len()) {\n         (false, 0, _) | (false, _, 0) => {\n@@ -916,7 +920,7 @@ Available lint options:\n             }\n             if g > 0 {\n                 println!(\"Lint groups provided by plugins loaded by this crate:\\n\");\n-                print_lint_groups(plugin_groups);\n+                print_lint_groups(plugin_groups, false);\n             }\n         }\n     }"}, {"sha": "fa2a530d9db680723263eacb574792bc7340ace7", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -694,6 +694,7 @@ impl<'a> Builder<'a> {\n                 doc::RustcBook,\n                 doc::CargoBook,\n                 doc::Clippy,\n+                doc::Miri,\n                 doc::EmbeddedBook,\n                 doc::EditionGuide,\n             ),"}, {"sha": "3cf0f9b9f9927f521f669ae4cde8d9a9ff041c6b", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 29, "deletions": 5, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -643,7 +643,7 @@ impl Step for Rustc {\n }\n \n macro_rules! tool_doc {\n-    ($tool: ident, $should_run: literal, $path: literal, [$($krate: literal),+ $(,)?] $(,)?) => {\n+    ($tool: ident, $should_run: literal, $path: literal, [$($krate: literal),+ $(,)?], in_tree = $in_tree:expr $(,)?) => {\n         #[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]\n         pub struct $tool {\n             target: TargetSelection,\n@@ -699,6 +699,12 @@ macro_rules! tool_doc {\n                 t!(fs::create_dir_all(&out_dir));\n                 t!(symlink_dir_force(&builder.config, &out, &out_dir));\n \n+                let source_type = if $in_tree == true {\n+                    SourceType::InTree\n+                } else {\n+                    SourceType::Submodule\n+                };\n+\n                 // Build cargo command.\n                 let mut cargo = prepare_tool_cargo(\n                     builder,\n@@ -707,7 +713,7 @@ macro_rules! tool_doc {\n                     target,\n                     \"doc\",\n                     $path,\n-                    SourceType::InTree,\n+                    source_type,\n                     &[],\n                 );\n \n@@ -723,20 +729,38 @@ macro_rules! tool_doc {\n                 cargo.rustdocflag(\"--show-type-layout\");\n                 cargo.rustdocflag(\"--generate-link-to-definition\");\n                 cargo.rustdocflag(\"-Zunstable-options\");\n-                builder.run(&mut cargo.into());\n+                if $in_tree == true {\n+                    builder.run(&mut cargo.into());\n+                } else {\n+                    // Allow out-of-tree docs to fail (since the tool might be in a broken state).\n+                    if !builder.try_run(&mut cargo.into()) {\n+                        builder.info(&format!(\n+                            \"WARNING: tool {} failed to document; ignoring failure because it is an out-of-tree tool\",\n+                            stringify!($tool).to_lowercase(),\n+                        ));\n+                    }\n+                }\n             }\n         }\n     }\n }\n \n-tool_doc!(Rustdoc, \"rustdoc-tool\", \"src/tools/rustdoc\", [\"rustdoc\", \"rustdoc-json-types\"]);\n+tool_doc!(\n+    Rustdoc,\n+    \"rustdoc-tool\",\n+    \"src/tools/rustdoc\",\n+    [\"rustdoc\", \"rustdoc-json-types\"],\n+    in_tree = true\n+);\n tool_doc!(\n     Rustfmt,\n     \"rustfmt-nightly\",\n     \"src/tools/rustfmt\",\n     [\"rustfmt-nightly\", \"rustfmt-config_proc_macro\"],\n+    in_tree = true\n );\n-tool_doc!(Clippy, \"clippy\", \"src/tools/clippy\", [\"clippy_utils\"]);\n+tool_doc!(Clippy, \"clippy\", \"src/tools/clippy\", [\"clippy_utils\"], in_tree = true);\n+tool_doc!(Miri, \"miri\", \"src/tools/miri\", [\"miri\"], in_tree = false);\n \n #[derive(Ord, PartialOrd, Debug, Copy, Clone, Hash, PartialEq, Eq)]\n pub struct ErrorIndex {"}, {"sha": "04638aa1af62bc957a302368c7505d2bb7a297d4", "filename": "src/librustdoc/config.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/src%2Flibrustdoc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/src%2Flibrustdoc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fconfig.rs?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -353,11 +353,7 @@ impl Options {\n             print_flag_list(\"-C\", config::CG_OPTIONS);\n             return Err(0);\n         }\n-        let w_flags = matches.opt_strs(\"W\");\n-        if w_flags.iter().any(|x| *x == \"help\") {\n-            print_flag_list(\"-W\", config::DB_OPTIONS);\n-            return Err(0);\n-        }\n+\n         if matches.opt_strs(\"passes\") == [\"list\"] {\n             println!(\"Available passes for running rustdoc:\");\n             for pass in passes::PASSES {\n@@ -439,15 +435,19 @@ impl Options {\n             return Err(0);\n         }\n \n-        if matches.free.is_empty() {\n+        let (lint_opts, describe_lints, lint_cap) = get_cmd_lint_options(matches, error_format);\n+\n+        let input = PathBuf::from(if describe_lints {\n+            \"\" // dummy, this won't be used\n+        } else if matches.free.is_empty() {\n             diag.struct_err(\"missing file operand\").emit();\n             return Err(1);\n-        }\n-        if matches.free.len() > 1 {\n+        } else if matches.free.len() > 1 {\n             diag.struct_err(\"too many file operands\").emit();\n             return Err(1);\n-        }\n-        let input = PathBuf::from(&matches.free[0]);\n+        } else {\n+            &matches.free[0]\n+        });\n \n         let libs = matches\n             .opt_strs(\"L\")\n@@ -698,8 +698,6 @@ impl Options {\n         let with_examples = matches.opt_strs(\"with-examples\");\n         let call_locations = crate::scrape_examples::load_call_locations(with_examples, &diag)?;\n \n-        let (lint_opts, describe_lints, lint_cap) = get_cmd_lint_options(matches, error_format);\n-\n         Ok(Options {\n             input,\n             proc_macro_crate,"}, {"sha": "ebff1dc92eada25b1d42d4a7f48292df0d6707ac", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 11, "deletions": 26, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -1578,38 +1578,23 @@ kbd {\n \tmargin-bottom: 1em;\n }\n \n-div.children {\n-\tpadding-left: 27px;\n-\tdisplay: none;\n+details.dir-entry {\n+\tpadding-left: 4px;\n }\n-div.name {\n+\n+details.dir-entry > summary {\n+\tmargin: 0 0 0 13px;\n+\tlist-style-position: outside;\n \tcursor: pointer;\n-\tposition: relative;\n-\tmargin-left: 16px;\n }\n-div.files > a {\n-\tdisplay: block;\n-\tpadding: 0 3px;\n-}\n-div.files > a:hover, div.name:hover {\n-\tbackground-color: #a14b4b;\n+\n+details.dir-entry div.folders, details.dir-entry div.files {\n+\tpadding-left: 23px;\n }\n-div.name.expand + .children {\n+\n+details.dir-entry a {\n \tdisplay: block;\n }\n-div.name::before {\n-\tcontent: \"\\25B6\";\n-\tpadding-left: 4px;\n-\tfont-size: 0.625rem;\n-\tposition: absolute;\n-\tleft: -16px;\n-\ttop: 4px;\n-}\n-div.name.expand::before {\n-\ttransform: rotate(90deg);\n-\tleft: -15px;\n-\ttop: 2px;\n-}\n \n /* The hideme class is used on summary tags that contain a span with\n \tplaceholder text shown only when the toggle is closed. For instance,"}, {"sha": "b25f5e9fdb10ba8dbf4ab2f8297524f4fb1fc12c", "filename": "src/librustdoc/html/static/css/themes/ayu.css", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -575,11 +575,12 @@ kbd {\n \tcolor: #fff;\n \tborder-bottom-color: #5c6773;\n }\n-#source-sidebar div.files > a:hover, div.name:hover {\n+#source-sidebar div.files > a:hover, details.dir-entry summary:hover,\n+#source-sidebar div.files > a:focus, details.dir-entry summary:focus {\n \tbackground-color: #14191f;\n \tcolor: #ffb44c;\n }\n-#source-sidebar div.files > .selected {\n+#source-sidebar div.files > a.selected {\n \tbackground-color: #14191f;\n \tcolor: #ffb44c;\n }"}, {"sha": "a678ec1e1c1080cc0fe576c3f3f69a766f39a31f", "filename": "src/librustdoc/html/static/css/themes/dark.css", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -432,10 +432,11 @@ kbd {\n #source-sidebar > .title {\n \tborder-bottom-color: #ccc;\n }\n-#source-sidebar div.files > a:hover, div.name:hover {\n+#source-sidebar div.files > a:hover, details.dir-entry summary:hover,\n+#source-sidebar div.files > a:focus, details.dir-entry summary:focus {\n \tbackground-color: #444;\n }\n-#source-sidebar div.files > .selected {\n+#source-sidebar div.files > a.selected {\n \tbackground-color: #333;\n }\n "}, {"sha": "e8770ac212426d33b2b210f58a4cf86119041c2e", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -414,13 +414,13 @@ kbd {\n #source-sidebar > .title {\n \tborder-bottom-color: #ccc;\n }\n-#source-sidebar div.files > a:hover, div.name:hover {\n+#source-sidebar div.files > a:hover, details.dir-entry summary:hover,\n+#source-sidebar div.files > a:focus, details.dir-entry summary:focus {\n \tbackground-color: #E0E0E0;\n }\n-#source-sidebar div.files > .selected {\n+#source-sidebar div.files > a.selected {\n \tbackground-color: #fff;\n }\n-\n .scraped-example-list .scrape-help {\n \tborder-color: #555;\n \tcolor: #333;"}, {"sha": "9173e93e7c804151f587ebf745590b13966b981d", "filename": "src/librustdoc/html/static/js/source-script.js", "status": "modified", "additions": 12, "deletions": 19, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fsource-script.js?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -2,7 +2,7 @@\n /* global sourcesIndex */\n \n // Local js definitions:\n-/* global addClass, getCurrentValue, hasClass, onEachLazy, removeClass, browserSupportsHistoryApi */\n+/* global addClass, getCurrentValue, onEachLazy, removeClass, browserSupportsHistoryApi */\n /* global updateLocalStorage */\n \n \"use strict\";\n@@ -13,33 +13,27 @@ const rootPath = document.getElementById(\"rustdoc-vars\").attributes[\"data-root-p\n let oldScrollPosition = 0;\n \n function createDirEntry(elem, parent, fullPath, hasFoundFile) {\n-    const name = document.createElement(\"div\");\n-    name.className = \"name\";\n+    const dirEntry = document.createElement(\"details\");\n+    const summary = document.createElement(\"summary\");\n+\n+    dirEntry.className = \"dir-entry\";\n \n     fullPath += elem[\"name\"] + \"/\";\n \n-    name.onclick = ev => {\n-        if (hasClass(ev.target, \"expand\")) {\n-            removeClass(ev.target, \"expand\");\n-        } else {\n-            addClass(ev.target, \"expand\");\n-        }\n-    };\n-    name.innerText = elem[\"name\"];\n+    summary.innerText = elem[\"name\"];\n+    dirEntry.appendChild(summary);\n \n-    const children = document.createElement(\"div\");\n-    children.className = \"children\";\n     const folders = document.createElement(\"div\");\n     folders.className = \"folders\";\n     if (elem.dirs) {\n         for (const dir of elem.dirs) {\n             if (createDirEntry(dir, folders, fullPath, hasFoundFile)) {\n-                addClass(name, \"expand\");\n+                dirEntry.open = true;\n                 hasFoundFile = true;\n             }\n         }\n     }\n-    children.appendChild(folders);\n+    dirEntry.appendChild(folders);\n \n     const files = document.createElement(\"div\");\n     files.className = \"files\";\n@@ -51,15 +45,14 @@ function createDirEntry(elem, parent, fullPath, hasFoundFile) {\n             const w = window.location.href.split(\"#\")[0];\n             if (!hasFoundFile && w === file.href) {\n                 file.className = \"selected\";\n-                addClass(name, \"expand\");\n+                dirEntry.open = true;\n                 hasFoundFile = true;\n             }\n             files.appendChild(file);\n         }\n     }\n-    children.appendChild(files);\n-    parent.appendChild(name);\n-    parent.appendChild(children);\n+    dirEntry.appendChild(files);\n+    parent.appendChild(dirEntry);\n     return hasFoundFile;\n }\n "}, {"sha": "ded3d9951bd35d3a461b0d49e9076cbb3d4346f8", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 17, "deletions": 8, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -75,7 +75,7 @@ use std::env::{self, VarError};\n use std::io;\n use std::process;\n \n-use rustc_driver::{abort_on_err, describe_lints};\n+use rustc_driver::abort_on_err;\n use rustc_errors::ErrorGuaranteed;\n use rustc_interface::interface;\n use rustc_middle::ty::TyCtxt;\n@@ -770,15 +770,24 @@ fn main_options(options: config::Options) -> MainResult {\n     let config = core::create_config(options);\n \n     interface::create_compiler_and_run(config, |compiler| {\n-        compiler.enter(|queries| {\n-            let sess = compiler.session();\n+        let sess = compiler.session();\n \n-            if sess.opts.describe_lints {\n-                let (_, lint_store) = &*queries.register_plugins()?.peek();\n-                describe_lints(sess, lint_store, true);\n-                return Ok(());\n-            }\n+        if sess.opts.describe_lints {\n+            let mut lint_store = rustc_lint::new_lint_store(\n+                sess.opts.debugging_opts.no_interleave_lints,\n+                sess.unstable_options(),\n+            );\n+            let registered_lints = if let Some(register_lints) = compiler.register_lints() {\n+                register_lints(sess, &mut lint_store);\n+                true\n+            } else {\n+                false\n+            };\n+            rustc_driver::describe_lints(sess, &lint_store, registered_lints);\n+            return Ok(());\n+        }\n \n+        compiler.enter(|queries| {\n             // We need to hold on to the complete resolver, so we cause everything to be\n             // cloned for the analysis passes to use. Suboptimal, but necessary in the\n             // current architecture."}, {"sha": "8ababbf5b4ebd76659800c295e8aef5aab9030db", "filename": "src/test/run-make/issue-88756-opt-help/Makefile", "status": "removed", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/495b216696ccbc27c73d6bdc486bf4621d610f4b/src%2Ftest%2Frun-make%2Fissue-88756-opt-help%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/495b216696ccbc27c73d6bdc486bf4621d610f4b/src%2Ftest%2Frun-make%2Fissue-88756-opt-help%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-88756-opt-help%2FMakefile?ref=495b216696ccbc27c73d6bdc486bf4621d610f4b", "patch": "@@ -1,4 +0,0 @@\n--include ../../run-make-fulldeps/tools.mk\n-\n-all:\n-\t$(RUSTDOC) -W help 2>&1 | diff - output-default.stdout"}, {"sha": "9b742753f25b6b86300baaad0b3f3b97b463072c", "filename": "src/test/run-make/issue-88756-opt-help/README.md", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/495b216696ccbc27c73d6bdc486bf4621d610f4b/src%2Ftest%2Frun-make%2Fissue-88756-opt-help%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/495b216696ccbc27c73d6bdc486bf4621d610f4b/src%2Ftest%2Frun-make%2Fissue-88756-opt-help%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-88756-opt-help%2FREADME.md?ref=495b216696ccbc27c73d6bdc486bf4621d610f4b", "patch": "@@ -1 +0,0 @@\n-This is a test to verify that `rustdoc` behaves the same as rustc and prints out help output for its options like -W (#88756)."}, {"sha": "5cb7ecb649a962b89b9912e1ca8018f71e1f9da3", "filename": "src/test/run-make/issue-88756-opt-help/output-default.stdout", "status": "removed", "additions": 0, "deletions": 193, "changes": 193, "blob_url": "https://github.com/rust-lang/rust/blob/495b216696ccbc27c73d6bdc486bf4621d610f4b/src%2Ftest%2Frun-make%2Fissue-88756-opt-help%2Foutput-default.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/495b216696ccbc27c73d6bdc486bf4621d610f4b/src%2Ftest%2Frun-make%2Fissue-88756-opt-help%2Foutput-default.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-88756-opt-help%2Foutput-default.stdout?ref=495b216696ccbc27c73d6bdc486bf4621d610f4b", "patch": "@@ -1,193 +0,0 @@\n-    -W                          allow-features=val -- only allow the listed language features to be enabled in code (space separated)\n-    -W                       always-encode-mir=val -- encode MIR of all functions into the crate metadata (default: no)\n-    -W               assume-incomplete-release=val -- make cfg(version) treat the current version as incomplete (default: no)\n-    -W                            asm-comments=val -- generate comments into the assembly (may change behavior) (default: no)\n-    -W                       assert-incr-state=val -- assert that the incremental cache is in given state: either `loaded` or `not-loaded`.\n-    -W                      binary-dep-depinfo=val -- include artifacts (sysroot, crate dependencies) used during compilation in dep-info (default: no)\n-    -W                       branch-protection=val -- set options for branch target identification and pointer authentication on AArch64\n-    -W                           cf-protection=val -- instrument control-flow architecture protection\n-    -W               cgu-partitioning-strategy=val -- the codegen unit partitioning strategy to use\n-    -W                                   chalk=val -- enable the experimental Chalk-based trait solving engine\n-    -W                         codegen-backend=val -- the backend to use\n-    -W                             combine-cgu=val -- combine CGUs into a single one\n-    -W                              crate-attr=val -- inject the given attribute in the crate\n-    -W                debug-info-for-profiling=val -- emit discriminators and other data necessary for AutoFDO\n-    -W                            debug-macros=val -- emit line numbers debug info inside macros (default: no)\n-    -W                 deduplicate-diagnostics=val -- deduplicate identical diagnostics (default: yes)\n-    -W                  dep-info-omit-d-target=val -- in dep-info output, omit targets for tracking dependencies of the dep-info files themselves (default: no)\n-    -W                               dep-tasks=val -- print tasks that execute and the color their dep node gets (requires debug build) (default: no)\n-    -W                                 dlltool=val -- import library generation tool (windows-gnu only)\n-    -W                 dont-buffer-diagnostics=val -- emit diagnostics rather than buffering (breaks NLL error downgrading, sorting) (default: no)\n-    -W                           drop-tracking=val -- enables drop tracking in generators (default: no)\n-    -W                        dual-proc-macros=val -- load proc macros for both target and host, but only link to the target (default: no)\n-    -W                          dump-dep-graph=val -- dump the dependency graph to $RUST_DEP_GRAPH (default: /tmp/dep_graph.gv) (default: no)\n-    -W                                dump-mir=val -- dump MIR state to file.\n-        `val` is used to select which passes and functions to dump. For example:\n-        `all` matches all passes and functions,\n-        `foo` matches all passes for functions whose name contains 'foo',\n-        `foo & ConstProp` only the 'ConstProp' pass for function names containing 'foo',\n-        `foo | bar` all passes for function names containing 'foo' or 'bar'.\n-    -W                       dump-mir-dataflow=val -- in addition to `.mir` files, create graphviz `.dot` files with dataflow results (default: no)\n-    -W                            dump-mir-dir=val -- the directory the MIR is dumped into (default: `mir_dump`)\n-    -W            dump-mir-exclude-pass-number=val -- exclude the pass number when dumping MIR (used in tests) (default: no)\n-    -W                       dump-mir-graphviz=val -- in addition to `.mir` files, create graphviz `.dot` files (and with `-Z instrument-coverage`, also create a `.dot` file for the MIR-derived coverage graph) (default: no)\n-    -W                       dump-mir-spanview=val -- in addition to `.mir` files, create `.html` files to view spans for all `statement`s (including terminators), only `terminator` spans, or computed `block` spans (one span encompassing a block's terminator and all statements). If `-Z instrument-coverage` is also enabled, create an additional `.html` file showing the computed coverage spans.\n-    -W                        emit-stack-sizes=val -- emit a section containing stack size metadata (default: no)\n-    -W                             fewer-names=val -- reduce memory use by retaining fewer names within compilation artifacts (LLVM-IR) (default: no)\n-    -W              force-unstable-if-unmarked=val -- force all crates to be `rustc_private` unstable (default: no)\n-    -W                                    fuel=val -- set the optimization fuel quota for a crate\n-    -W                       function-sections=val -- whether each function should go in its own section\n-    -W                    future-incompat-test=val -- forces all lints to be future incompatible, used for internal testing (default: no)\n-    -W                                  gcc-ld=val -- implementation of ld used by cc\n-    -W                      graphviz-dark-mode=val -- use dark-themed colors in graphviz output (default: no)\n-    -W                           graphviz-font=val -- use the given `fontname` in graphviz output; can be overridden by setting environment variable `RUSTC_GRAPHVIZ_FONT` (default: `Courier, monospace`)\n-    -W                               hir-stats=val -- print some statistics about AST and HIR (default: no)\n-    -W                human-readable-cgu-names=val -- generate human-readable, predictable names for codegen units (default: no)\n-    -W                        identify-regions=val -- display unnamed regions as `'<id>`, using a non-ident unique id (default: no)\n-    -W                incremental-ignore-spans=val -- ignore spans during ICH computation -- used for testing (default: no)\n-    -W                        incremental-info=val -- print high-level information about incremental reuse (or the lack thereof) (default: no)\n-    -W              incremental-relative-spans=val -- hash spans relative to their parent item for incr. comp. (default: no)\n-    -W                  incremental-verify-ich=val -- verify incr. comp. hashes of green query instances (default: no)\n-    -W                              inline-mir=val -- enable MIR inlining (default: no)\n-    -W                    inline-mir-threshold=val -- a default MIR inlining threshold (default: 50)\n-    -W               inline-mir-hint-threshold=val -- inlining threshold for functions with inline hint (default: 100)\n-    -W                      inline-in-all-cgus=val -- control whether `#[inline]` functions are in all CGUs\n-    -W                             input-stats=val -- gather statistics about the input (default: no)\n-    -W                     instrument-coverage=val -- instrument the generated code to support LLVM source-based code coverage reports (note, the compiler build config must include `profiler = true`); implies `-C symbol-mangling-version=v0`. Optional values are:\n-        `=all` (implicit value)\n-        `=except-unused-generics`\n-        `=except-unused-functions`\n-        `=off` (default)\n-    -W                       instrument-mcount=val -- insert function instrument code for mcount-based tracing (default: no)\n-    -W                       keep-hygiene-data=val -- keep hygiene data after analysis (default: no)\n-    -W                   link-native-libraries=val -- link native libraries in the linker invocation (default: yes)\n-    -W                               link-only=val -- link the `.rlink` file generated by `-Z no-link` (default: no)\n-    -W                            llvm-plugins=val -- a list LLVM plugins to enable (space separated)\n-    -W                         llvm-time-trace=val -- generate JSON tracing data file from LLVM data (default: no)\n-    -W                         location-detail=val -- comma separated list of location details to be tracked when using caller_location valid options are `file`, `line`, and `column` (default: all)\n-    -W                                      ls=val -- list the symbols defined by a library crate (default: no)\n-    -W                         macro-backtrace=val -- show macro backtraces (default: no)\n-    -W                         merge-functions=val -- control the operation of the MergeFunctions LLVM pass, taking the same values as the target option of the same name\n-    -W                              meta-stats=val -- gather metadata statistics (default: no)\n-    -W                          mir-emit-retag=val -- emit Retagging MIR statements, interpreted e.g., by miri; implies -Zmir-opt-level=0 (default: no)\n-    -W                       mir-enable-passes=val -- use like `-Zmir-enable-passes=+DestProp,-InstCombine`. Forces the specified passes to be enabled, overriding all other checks. Passes that are not specified are enabled or disabled by other flags as usual.\n-    -W                           mir-opt-level=val -- MIR optimization level (0-4; default: 1 in non optimized builds and 2 in optimized builds)\n-    -W                         move-size-limit=val -- the size at which the `large_assignments` lint starts to be emitted\n-    -W                         mutable-noalias=val -- emit noalias metadata for mutable references (default: yes)\n-    -W                   new-llvm-pass-manager=val -- use new LLVM pass manager (default: no)\n-    -W                               nll-facts=val -- dump facts from NLL analysis into side files (default: no)\n-    -W                           nll-facts-dir=val -- the directory the NLL facts are dumped into (default: `nll-facts`)\n-    -W                             no-analysis=val -- parse and expand the source, but run no analysis\n-    -W                              no-codegen=val -- run all passes except codegen; no output\n-    -W              no-generate-arange-section=val -- omit DWARF address ranges that give faster lookups\n-    -W                     no-interleave-lints=val -- execute lints separately; allows benchmarking individual lints\n-    -W                           no-leak-check=val -- disable the 'leak check' for subtyping; unsound, but useful for tests\n-    -W                                 no-link=val -- compile without linking\n-    -W                        no-parallel-llvm=val -- run LLVM in non-parallel mode (while keeping codegen-units and ThinLTO)\n-    -W                 no-unique-section-names=val -- do not use unique names for text and data sections when -Z function-sections is used\n-    -W                     no-profiler-runtime=val -- prevent automatic injection of the profiler_builtins crate\n-    -W                          normalize-docs=val -- normalize associated items in rustdoc when generating documentation\n-    -W                                     oom=val -- panic strategy for out-of-memory handling\n-    -W                  osx-rpath-install-name=val -- pass `-install_name @rpath/...` to the macOS linker (default: no)\n-    -W                       panic-abort-tests=val -- support compiling tests with panic=abort (default: no)\n-    -W                           panic-in-drop=val -- panic strategy for panics in drops\n-    -W                              parse-only=val -- parse only; do not compile, assemble, or link (default: no)\n-    -W                              perf-stats=val -- print some performance-related statistics (default: no)\n-    -W pick-stable-methods-before-any-unstable=val -- try to pick stable methods first before picking any unstable methods (default: yes)\n-    -W                                     plt=val -- whether to use the PLT when calling into shared libraries;\n-        only has effect for PIC code on systems with ELF binaries\n-        (default: PLT is disabled if full relro is enabled)\n-    -W                                polonius=val -- enable polonius-based borrow-checker (default: no)\n-    -W                            polymorphize=val -- perform polymorphization analysis\n-    -W                            pre-link-arg=val -- a single extra argument to prepend the linker invocation (can be used several times)\n-    -W                           pre-link-args=val -- extra arguments to prepend to the linker invocation (space separated)\n-    -W           precise-enum-drop-elaboration=val -- use a more precise version of drop elaboration for matches on enums (default: yes). This results in better codegen, but has caused miscompilations on some tier 2 platforms. See #77382 and #74551.\n-    -W                              print-fuel=val -- make rustc print the total optimization fuel used by a crate\n-    -W                       print-llvm-passes=val -- print the LLVM optimization passes being run (default: no)\n-    -W                        print-mono-items=val -- print the result of the monomorphization collection pass\n-    -W                        print-type-sizes=val -- print layout information for each type encountered (default: no)\n-    -W                    proc-macro-backtrace=val -- show backtraces for panics during proc-macro execution (default: no)\n-    -W                                 profile=val -- insert profiling code (default: no)\n-    -W                        profile-closures=val -- profile size of closures\n-    -W                            profile-emit=val -- file path to emit profiling data at runtime when using 'profile' (default based on relative source path)\n-    -W                        profiler-runtime=val -- name of the profiler runtime crate to automatically inject (default: `profiler_builtins`)\n-    -W                      profile-sample-use=val -- use the given `.prof` file for sampled profile-guided optimization (also known as AutoFDO)\n-    -W                         query-dep-graph=val -- enable queries of the dependency graph for regression testing (default: no)\n-    -W                        randomize-layout=val -- randomize the layout of types (default: no)\n-    -W                             layout-seed=val -- seed layout randomization\n-    -W                   relax-elf-relocations=val -- whether ELF relocations can be relaxed\n-    -W                             relro-level=val -- choose which RELRO level to use\n-    -W                        remap-cwd-prefix=val -- remap paths under the current working directory to this path prefix\n-    -W         simulate-remapped-rust-src-base=val -- simulate the effect of remap-debuginfo = true at bootstrapping by remapping path to rust's source base directory. only meant for testing purposes\n-    -W                     report-delayed-bugs=val -- immediately print bugs registered with `delay_span_bug` (default: no)\n-    -W                               sanitizer=val -- use a sanitizer\n-    -W          sanitizer-memory-track-origins=val -- enable origins tracking in MemorySanitizer\n-    -W                       sanitizer-recover=val -- enable recovery for selected sanitizers\n-    -W                  saturating-float-casts=val -- make float->int casts UB-free: numbers outside the integer type's range are clipped to the max/min integer respectively, and NaN is mapped to 0 (default: yes)\n-    -W                           save-analysis=val -- write syntax and type analysis (in JSON format) information, in addition to normal output (default: no)\n-    -W                            self-profile=val -- run the self profiler and output the raw event data\n-    -W                     self-profile-events=val -- specify the events recorded by the self profiler;\n-        for example: `-Z self-profile-events=default,query-keys`\n-        all options: none, all, default, generic-activity, query-provider, query-cache-hit\n-                     query-blocked, incr-cache-load, incr-result-hashing, query-keys, function-args, args, llvm, artifact-sizes\n-    -W                    self-profile-counter=val -- counter used by the self profiler (default: `wall-time`), one of:\n-        `wall-time` (monotonic clock, i.e. `std::time::Instant`)\n-        `instructions:u` (retired instructions, userspace-only)\n-        `instructions-minus-irqs:u` (subtracting hardware interrupt counts for extra accuracy)\n-    -W                          share-generics=val -- make the current crate share its generic instantiations\n-    -W                               show-span=val -- show spans for compiler debugging (expr|pat|ty)\n-    -W                              span-debug=val -- forward proc_macro::Span's `Debug` impl to `Span`\n-    -W                       span-free-formats=val -- exclude spans when debug-printing compiler state (default: no)\n-    -W                      src-hash-algorithm=val -- hash algorithm of source files in debug info (`md5`, `sha1`, or `sha256`)\n-    -W                         stack-protector=val -- control stack smash protection strategy (`rustc --print stack-protector-strategies` for details)\n-    -W                      strict-init-checks=val -- control if mem::uninitialized and mem::zeroed panic on more UB\n-    -W                                   strip=val -- tell the linker which information to strip (`none` (default), `debuginfo` or `symbols`)\n-    -W                        split-dwarf-kind=val -- split dwarf variant (only if -Csplit-debuginfo is enabled and on relevant platform)\n-        (default: `split`)\n-\n-        `split`: sections which do not require relocation are written into a DWARF object (`.dwo`)\n-                 file which is ignored by the linker\n-        `single`: sections which do not require relocation are written into object file but ignored\n-                  by the linker\n-    -W                    split-dwarf-inlining=val -- provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF\n-    -W                 symbol-mangling-version=val -- which mangling version to use for symbol names ('legacy' (default) or 'v0')\n-    -W                                   teach=val -- show extended diagnostic help (default: no)\n-    -W                               temps-dir=val -- the directory the intermediate files are written to\n-    -W                          terminal-width=val -- set the current terminal width\n-    -W                          translate-lang=val -- language identifier for diagnostic output\n-    -W                translate-additional-ftl=val -- additional fluent translation to preferentially use (for testing translation)\n-    -W        translate-directionality-markers=val -- emit directionality isolation markers in translated diagnostics\n-    -W                                tune-cpu=val -- select processor to schedule for (`rustc --print target-cpus` for details)\n-    -W                                 thinlto=val -- enable ThinLTO when possible\n-    -W                           thir-unsafeck=val -- use the THIR unsafety checker (default: no)\n-    -W                                 threads=val -- use a thread pool with N threads\n-    -W                                    time=val -- measure time of rustc processes (default: no)\n-    -W                        time-llvm-passes=val -- measure time of each LLVM pass (default: no)\n-    -W                             time-passes=val -- measure time of each rustc pass (default: no)\n-    -W                               tls-model=val -- choose the TLS model to use (`rustc --print tls-models` for details)\n-    -W                            trace-macros=val -- for every macro invocation, print its name and arguments (default: no)\n-    -W   translate-remapped-path-to-local-path=val -- translate remapped paths into local paths when possible (default: yes)\n-    -W                        trap-unreachable=val -- generate trap instructions for unreachable intrinsics (default: use target setting, usually yes)\n-    -W                        treat-err-as-bug=val -- treat error number `val` that occurs as bug\n-    -W                   trim-diagnostic-paths=val -- in diagnostics, use heuristics to shorten paths referring to items\n-    -W                              ui-testing=val -- emit compiler diagnostics in a form suitable for UI testing (default: no)\n-    -W            uninit-const-chunk-threshold=val -- allow generating const initializers with mixed init/uninit chunks, and set the maximum number of chunks for which this is allowed (default: 16)\n-    -W          unleash-the-miri-inside-of-you=val -- take the brakes off const evaluation. NOTE: this is unsound (default: no)\n-    -W                                unpretty=val -- present the input source, unstable (and less-pretty) variants;\n-        `normal`, `identified`,\n-        `expanded`, `expanded,identified`,\n-        `expanded,hygiene` (with internal representations),\n-        `ast-tree` (raw AST before expansion),\n-        `ast-tree,expanded` (raw AST after expansion),\n-        `hir` (the HIR), `hir,identified`,\n-        `hir,typed` (HIR with types for each node),\n-        `hir-tree` (dump the raw HIR),\n-        `mir` (the MIR), or `mir-cfg` (graphviz formatted MIR)\n-    -W                        unsound-mir-opts=val -- enable unsound and buggy MIR optimizations (default: no)\n-    -W                        unstable-options=val -- adds unstable command line options to rustc interface (default: no)\n-    -W                       use-ctors-section=val -- use legacy .ctors section for initializers rather than .init_array\n-    -W                            validate-mir=val -- validate MIR after each transformation\n-    -W                                 verbose=val -- in general, enable more debug printouts (default: no)\n-    -W                          verify-llvm-ir=val -- verify LLVM IR (default: no)\n-    -W            virtual-function-elimination=val -- enables dead virtual function elimination optimization. Requires `-Clto[=[fat,yes]]`\n-    -W                         wasi-exec-model=val -- whether to build a wasi command or reactor"}, {"sha": "5df7576133a684ab8f887f442084e99062eb4886", "filename": "src/test/run-make/issue-88756-opt-help/x.rs", "status": "removed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/495b216696ccbc27c73d6bdc486bf4621d610f4b/src%2Ftest%2Frun-make%2Fissue-88756-opt-help%2Fx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/495b216696ccbc27c73d6bdc486bf4621d610f4b/src%2Ftest%2Frun-make%2Fissue-88756-opt-help%2Fx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-88756-opt-help%2Fx.rs?ref=495b216696ccbc27c73d6bdc486bf4621d610f4b", "patch": "@@ -1 +0,0 @@\n-// nothing to see here"}, {"sha": "edcd98dfd937f242514eb4d2f9e7c2c8dc111205", "filename": "src/test/rustdoc-gui/sidebar-source-code-display.goml", "status": "modified", "additions": 63, "deletions": 21, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/src%2Ftest%2Frustdoc-gui%2Fsidebar-source-code-display.goml", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/src%2Ftest%2Frustdoc-gui%2Fsidebar-source-code-display.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar-source-code-display.goml?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -27,29 +27,43 @@ reload:\n // Waiting for the sidebar to be displayed...\n wait-for-css: (\"#sidebar-toggle\", {\"visibility\": \"visible\", \"opacity\": 1})\n assert-css: (\n-    \"#source-sidebar .expand + .children a.selected\",\n+    \"#source-sidebar details[open] > .files a.selected\",\n     {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(255, 255, 255)\"},\n )\n // Without hover.\n assert-css: (\n-    \"#source-sidebar .expand + .children > .files a:not(.selected)\",\n+    \"#source-sidebar details[open] > .files a:not(.selected)\",\n     {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n+// With focus.\n+focus: \"#source-sidebar details[open] > .files a:not(.selected)\"\n+wait-for-css: (\n+    \"#source-sidebar details[open] > .files a:not(.selected)\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(224, 224, 224)\"},\n+)\n+focus: \".search-input\"\n // With hover.\n-move-cursor-to: \"#source-sidebar .expand + .children > .files a:not(.selected)\"\n+move-cursor-to: \"#source-sidebar details[open] > .files a:not(.selected)\"\n assert-css: (\n-    \"#source-sidebar .expand + .children > .files a:not(.selected)\",\n+    \"#source-sidebar details[open] > .files a:not(.selected)\",\n     {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(224, 224, 224)\"},\n )\n // Without hover.\n assert-css: (\n-    \"#source-sidebar .expand + .children .folders .name\",\n+    \"#source-sidebar details[open] > .folders > details > summary\",\n     {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n+// With focus.\n+focus: \"#source-sidebar details[open] > .folders > details > summary\"\n+wait-for-css: (\n+    \"#source-sidebar details[open] > .folders > details > summary\",\n+    {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(224, 224, 224)\"},\n+)\n+focus: \".search-input\"\n // With hover.\n-move-cursor-to: \"#source-sidebar .expand + .children .folders .name\"\n+move-cursor-to: \"#source-sidebar details[open] > .folders > details > summary\"\n assert-css: (\n-    \"#source-sidebar .expand + .children .folders .name\",\n+    \"#source-sidebar details[open] > .folders > details > summary\",\n     {\"color\": \"rgb(0, 0, 0)\", \"background-color\": \"rgb(224, 224, 224)\"},\n )\n \n@@ -59,29 +73,43 @@ reload:\n // Waiting for the sidebar to be displayed...\n wait-for-css: (\"#sidebar-toggle\", {\"visibility\": \"visible\", \"opacity\": 1})\n assert-css: (\n-    \"#source-sidebar .expand + .children a.selected\",\n+    \"#source-sidebar details[open] > .files > a.selected\",\n     {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(51, 51, 51)\"},\n )\n // Without hover.\n assert-css: (\n-    \"#source-sidebar .expand + .children > .files a:not(.selected)\",\n+    \"#source-sidebar details[open] > .files > a:not(.selected)\",\n     {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n+// With focus.\n+focus: \"#source-sidebar details[open] > .files a:not(.selected)\"\n+wait-for-css: (\n+    \"#source-sidebar details[open] > .files a:not(.selected)\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(68, 68, 68)\"},\n+)\n+focus: \".search-input\"\n // With hover.\n-move-cursor-to: \"#source-sidebar .expand + .children > .files a:not(.selected)\"\n+move-cursor-to: \"#source-sidebar details[open] > .files a:not(.selected)\"\n assert-css: (\n-    \"#source-sidebar .expand + .children > .files a:not(.selected)\",\n+    \"#source-sidebar details[open] > .files a:not(.selected)\",\n     {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(68, 68, 68)\"},\n )\n // Without hover.\n assert-css: (\n-    \"#source-sidebar .expand + .children .folders .name\",\n+    \"#source-sidebar details[open] > .folders > details > summary\",\n     {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n+// With focus.\n+focus: \"#source-sidebar details[open] > .folders > details > summary\"\n+wait-for-css: (\n+    \"#source-sidebar details[open] > .folders > details > summary\",\n+    {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(68, 68, 68)\"},\n+)\n+focus: \".search-input\"\n // With hover.\n-move-cursor-to: \"#source-sidebar .expand + .children .folders .name\"\n+move-cursor-to: \"#source-sidebar details[open] > .folders > details > summary\"\n assert-css: (\n-    \"#source-sidebar .expand + .children .folders .name\",\n+    \"#source-sidebar details[open] > .folders > details > summary\",\n     {\"color\": \"rgb(221, 221, 221)\", \"background-color\": \"rgb(68, 68, 68)\"},\n )\n \n@@ -91,29 +119,43 @@ reload:\n // Waiting for the sidebar to be displayed...\n wait-for-css: (\"#sidebar-toggle\", {\"visibility\": \"visible\", \"opacity\": 1})\n assert-css: (\n-    \"#source-sidebar .expand + .children a.selected\",\n+    \"#source-sidebar details[open] > .files a.selected\",\n     {\"color\": \"rgb(255, 180, 76)\", \"background-color\": \"rgb(20, 25, 31)\"},\n )\n // Without hover.\n assert-css: (\n-    \"#source-sidebar .expand + .children > .files a:not(.selected)\",\n+    \"#source-sidebar details[open] > .files a:not(.selected)\",\n     {\"color\": \"rgb(197, 197, 197)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n+// With focus.\n+focus: \"#source-sidebar details[open] > .files a:not(.selected)\"\n+wait-for-css: (\n+    \"#source-sidebar details[open] > .files a:not(.selected)\",\n+    {\"color\": \"rgb(255, 180, 76)\", \"background-color\": \"rgb(20, 25, 31)\"},\n+)\n+focus: \".search-input\"\n // With hover.\n-move-cursor-to: \"#source-sidebar .expand + .children > .files a:not(.selected)\"\n+move-cursor-to: \"#source-sidebar details[open] > .files a:not(.selected)\"\n assert-css: (\n-    \"#source-sidebar .expand + .children > .files a:not(.selected)\",\n+    \"#source-sidebar details[open] > .files a:not(.selected)\",\n     {\"color\": \"rgb(255, 180, 76)\", \"background-color\": \"rgb(20, 25, 31)\"},\n )\n // Without hover.\n assert-css: (\n-    \"#source-sidebar .expand + .children .folders .name\",\n+    \"#source-sidebar details[open] > .folders > details > summary\",\n     {\"color\": \"rgb(197, 197, 197)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n+// With focus.\n+focus: \"#source-sidebar details[open] > .folders > details > summary\"\n+wait-for-css: (\n+    \"#source-sidebar details[open] > .folders > details > summary\",\n+    {\"color\": \"rgb(255, 180, 76)\", \"background-color\": \"rgb(20, 25, 31)\"},\n+)\n+focus: \".search-input\"\n // With hover.\n-move-cursor-to: \"#source-sidebar .expand + .children .folders .name\"\n+move-cursor-to: \"#source-sidebar details[open] > .folders > details > summary\"\n assert-css: (\n-    \"#source-sidebar .expand + .children .folders .name\",\n+    \"#source-sidebar details[open] > .folders > details > summary\",\n     {\"color\": \"rgb(255, 180, 76)\", \"background-color\": \"rgb(20, 25, 31)\"},\n )\n "}, {"sha": "581f826a3d94d13625923bd6eb7a06316bb4a779", "filename": "src/test/rustdoc-gui/source-code-page.goml", "status": "modified", "additions": 10, "deletions": 13, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/src%2Ftest%2Frustdoc-gui%2Fsource-code-page.goml", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/src%2Ftest%2Frustdoc-gui%2Fsource-code-page.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsource-code-page.goml?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -34,19 +34,16 @@ assert-document-property: ({\"URL\": \"/lib.rs.html\"}, ENDS_WITH)\n click: \"#sidebar-toggle\"\n assert: \".source-sidebar-expanded\"\n \n-// We check that the first entry of the sidebar is collapsed (which, for whatever reason,\n-// is number 2 and not 1...).\n-assert-attribute: (\"#source-sidebar .name:nth-child(2)\", {\"class\": \"name\"})\n-assert-text: (\"#source-sidebar .name:nth-child(2)\", \"implementors\")\n-// We also check its children are hidden too.\n-assert-css: (\"#source-sidebar .name:nth-child(2) + .children\", {\"display\": \"none\"})\n+// We check that the first entry of the sidebar is collapsed\n+assert-property: (\"#source-sidebar details:first-of-type\", {\"open\": \"false\"})\n+assert-text: (\"#source-sidebar details:first-of-type > summary\", \"implementors\")\n // We now click on it.\n-click: \"#source-sidebar .name:nth-child(2)\"\n-assert-attribute: (\"#source-sidebar .name:nth-child(2)\", {\"class\": \"name expand\"})\n-// Checking that its children are displayed as well.\n-assert-css: (\"#source-sidebar .name:nth-child(2) + .children\", {\"display\": \"block\"})\n+click: \"#source-sidebar details:first-of-type > summary\"\n+assert-property: (\"#source-sidebar details:first-of-type\", {\"open\": \"true\"})\n \n // And now we collapse it again.\n-click: \"#source-sidebar .name:nth-child(2)\"\n-assert-attribute: (\"#source-sidebar .name:nth-child(2)\", {\"class\": \"name\"})\n-assert-css: (\"#source-sidebar .name:nth-child(2) + .children\", {\"display\": \"none\"})\n+click: \"#source-sidebar details:first-of-type > summary\"\n+assert-property: (\"#source-sidebar details:first-of-type\", {\"open\": \"false\"})\n+\n+// Check the spacing.\n+assert-css: (\"#source-sidebar > details.dir-entry\", {\"padding-left\": \"4px\"})"}, {"sha": "0474d6c143e924b50a6950b049a435b3536fc6e9", "filename": "src/test/rustdoc-ui/issue-83883-describe-lints.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.rs?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -1,8 +1,10 @@\n // compile-flags: -W help\n // check-pass\n+// check-stdout\n+// error-pattern:Lint checks provided\n+// error-pattern:rustdoc::broken-intra-doc-links\n //\n // ignore-tidy-linelength\n //\n // normalize-stdout-test: \"( +name  default  meaning\\n +----  -------  -------\\n)?( *[[:word:]:-]+  (allow  |warn   |deny   |forbid )  [^\\n]+\\n)+\" -> \"    $$NAMES  $$LEVELS  $$MEANINGS\"\n // normalize-stdout-test: \" +name  sub-lints\\n +----  ---------\\n( *[[:word:]:-]+  [^\\n]+\\n)+\" -> \"    $$NAMES  $$SUB_LINTS\"\n-// normalize-stdout-test: \" +rustdoc::all(  (rustdoc::[[:word:]-]+, )*rustdoc::[[:word:]-]+)?\" -> \"    rustdoc::all  $$GROUPS$4\""}, {"sha": "bbf66a31583d25631b7ed04b08e99c9994cc9a67", "filename": "src/test/rustdoc-ui/issue-83883-describe-lints.stdout", "status": "modified", "additions": 23, "deletions": 192, "changes": 215, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Fissue-83883-describe-lints.stdout?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -1,193 +1,24 @@\n-    -W                          allow-features=val -- only allow the listed language features to be enabled in code (space separated)\n-    -W                       always-encode-mir=val -- encode MIR of all functions into the crate metadata (default: no)\n-    -W               assume-incomplete-release=val -- make cfg(version) treat the current version as incomplete (default: no)\n-    -W                            asm-comments=val -- generate comments into the assembly (may change behavior) (default: no)\n-    -W                       assert-incr-state=val -- assert that the incremental cache is in given state: either `loaded` or `not-loaded`.\n-    -W                      binary-dep-depinfo=val -- include artifacts (sysroot, crate dependencies) used during compilation in dep-info (default: no)\n-    -W                       branch-protection=val -- set options for branch target identification and pointer authentication on AArch64\n-    -W                           cf-protection=val -- instrument control-flow architecture protection\n-    -W               cgu-partitioning-strategy=val -- the codegen unit partitioning strategy to use\n-    -W                                   chalk=val -- enable the experimental Chalk-based trait solving engine\n-    -W                         codegen-backend=val -- the backend to use\n-    -W                             combine-cgu=val -- combine CGUs into a single one\n-    -W                              crate-attr=val -- inject the given attribute in the crate\n-    -W                debug-info-for-profiling=val -- emit discriminators and other data necessary for AutoFDO\n-    -W                            debug-macros=val -- emit line numbers debug info inside macros (default: no)\n-    -W                 deduplicate-diagnostics=val -- deduplicate identical diagnostics (default: yes)\n-    -W                  dep-info-omit-d-target=val -- in dep-info output, omit targets for tracking dependencies of the dep-info files themselves (default: no)\n-    -W                               dep-tasks=val -- print tasks that execute and the color their dep node gets (requires debug build) (default: no)\n-    -W                                 dlltool=val -- import library generation tool (windows-gnu only)\n-    -W                 dont-buffer-diagnostics=val -- emit diagnostics rather than buffering (breaks NLL error downgrading, sorting) (default: no)\n-    -W                           drop-tracking=val -- enables drop tracking in generators (default: no)\n-    -W                        dual-proc-macros=val -- load proc macros for both target and host, but only link to the target (default: no)\n-    -W                          dump-dep-graph=val -- dump the dependency graph to $RUST_DEP_GRAPH (default: /tmp/dep_graph.gv) (default: no)\n-    -W                                dump-mir=val -- dump MIR state to file.\n-        `val` is used to select which passes and functions to dump. For example:\n-        `all` matches all passes and functions,\n-        `foo` matches all passes for functions whose name contains 'foo',\n-        `foo & ConstProp` only the 'ConstProp' pass for function names containing 'foo',\n-        `foo | bar` all passes for function names containing 'foo' or 'bar'.\n-    -W                       dump-mir-dataflow=val -- in addition to `.mir` files, create graphviz `.dot` files with dataflow results (default: no)\n-    -W                            dump-mir-dir=val -- the directory the MIR is dumped into (default: `mir_dump`)\n-    -W            dump-mir-exclude-pass-number=val -- exclude the pass number when dumping MIR (used in tests) (default: no)\n-    -W                       dump-mir-graphviz=val -- in addition to `.mir` files, create graphviz `.dot` files (and with `-Z instrument-coverage`, also create a `.dot` file for the MIR-derived coverage graph) (default: no)\n-    -W                       dump-mir-spanview=val -- in addition to `.mir` files, create `.html` files to view spans for all `statement`s (including terminators), only `terminator` spans, or computed `block` spans (one span encompassing a block's terminator and all statements). If `-Z instrument-coverage` is also enabled, create an additional `.html` file showing the computed coverage spans.\n-    -W                        emit-stack-sizes=val -- emit a section containing stack size metadata (default: no)\n-    -W                             fewer-names=val -- reduce memory use by retaining fewer names within compilation artifacts (LLVM-IR) (default: no)\n-    -W              force-unstable-if-unmarked=val -- force all crates to be `rustc_private` unstable (default: no)\n-    -W                                    fuel=val -- set the optimization fuel quota for a crate\n-    -W                       function-sections=val -- whether each function should go in its own section\n-    -W                    future-incompat-test=val -- forces all lints to be future incompatible, used for internal testing (default: no)\n-    -W                                  gcc-ld=val -- implementation of ld used by cc\n-    -W                      graphviz-dark-mode=val -- use dark-themed colors in graphviz output (default: no)\n-    -W                           graphviz-font=val -- use the given `fontname` in graphviz output; can be overridden by setting environment variable `RUSTC_GRAPHVIZ_FONT` (default: `Courier, monospace`)\n-    -W                               hir-stats=val -- print some statistics about AST and HIR (default: no)\n-    -W                human-readable-cgu-names=val -- generate human-readable, predictable names for codegen units (default: no)\n-    -W                        identify-regions=val -- display unnamed regions as `'<id>`, using a non-ident unique id (default: no)\n-    -W                incremental-ignore-spans=val -- ignore spans during ICH computation -- used for testing (default: no)\n-    -W                        incremental-info=val -- print high-level information about incremental reuse (or the lack thereof) (default: no)\n-    -W              incremental-relative-spans=val -- hash spans relative to their parent item for incr. comp. (default: no)\n-    -W                  incremental-verify-ich=val -- verify incr. comp. hashes of green query instances (default: no)\n-    -W                              inline-mir=val -- enable MIR inlining (default: no)\n-    -W                    inline-mir-threshold=val -- a default MIR inlining threshold (default: 50)\n-    -W               inline-mir-hint-threshold=val -- inlining threshold for functions with inline hint (default: 100)\n-    -W                      inline-in-all-cgus=val -- control whether `#[inline]` functions are in all CGUs\n-    -W                             input-stats=val -- gather statistics about the input (default: no)\n-    -W                     instrument-coverage=val -- instrument the generated code to support LLVM source-based code coverage reports (note, the compiler build config must include `profiler = true`); implies `-C symbol-mangling-version=v0`. Optional values are:\n-        `=all` (implicit value)\n-        `=except-unused-generics`\n-        `=except-unused-functions`\n-        `=off` (default)\n-    -W                       instrument-mcount=val -- insert function instrument code for mcount-based tracing (default: no)\n-    -W                       keep-hygiene-data=val -- keep hygiene data after analysis (default: no)\n-    -W                   link-native-libraries=val -- link native libraries in the linker invocation (default: yes)\n-    -W                               link-only=val -- link the `.rlink` file generated by `-Z no-link` (default: no)\n-    -W                            llvm-plugins=val -- a list LLVM plugins to enable (space separated)\n-    -W                         llvm-time-trace=val -- generate JSON tracing data file from LLVM data (default: no)\n-    -W                         location-detail=val -- comma separated list of location details to be tracked when using caller_location valid options are `file`, `line`, and `column` (default: all)\n-    -W                                      ls=val -- list the symbols defined by a library crate (default: no)\n-    -W                         macro-backtrace=val -- show macro backtraces (default: no)\n-    -W                         merge-functions=val -- control the operation of the MergeFunctions LLVM pass, taking the same values as the target option of the same name\n-    -W                              meta-stats=val -- gather metadata statistics (default: no)\n-    -W                          mir-emit-retag=val -- emit Retagging MIR statements, interpreted e.g., by miri; implies -Zmir-opt-level=0 (default: no)\n-    -W                       mir-enable-passes=val -- use like `-Zmir-enable-passes=+DestProp,-InstCombine`. Forces the specified passes to be enabled, overriding all other checks. Passes that are not specified are enabled or disabled by other flags as usual.\n-    -W                           mir-opt-level=val -- MIR optimization level (0-4; default: 1 in non optimized builds and 2 in optimized builds)\n-    -W                         move-size-limit=val -- the size at which the `large_assignments` lint starts to be emitted\n-    -W                         mutable-noalias=val -- emit noalias metadata for mutable references (default: yes)\n-    -W                   new-llvm-pass-manager=val -- use new LLVM pass manager (default: no)\n-    -W                               nll-facts=val -- dump facts from NLL analysis into side files (default: no)\n-    -W                           nll-facts-dir=val -- the directory the NLL facts are dumped into (default: `nll-facts`)\n-    -W                             no-analysis=val -- parse and expand the source, but run no analysis\n-    -W                              no-codegen=val -- run all passes except codegen; no output\n-    -W              no-generate-arange-section=val -- omit DWARF address ranges that give faster lookups\n-    -W                     no-interleave-lints=val -- execute lints separately; allows benchmarking individual lints\n-    -W                           no-leak-check=val -- disable the 'leak check' for subtyping; unsound, but useful for tests\n-    -W                                 no-link=val -- compile without linking\n-    -W                        no-parallel-llvm=val -- run LLVM in non-parallel mode (while keeping codegen-units and ThinLTO)\n-    -W                 no-unique-section-names=val -- do not use unique names for text and data sections when -Z function-sections is used\n-    -W                     no-profiler-runtime=val -- prevent automatic injection of the profiler_builtins crate\n-    -W                          normalize-docs=val -- normalize associated items in rustdoc when generating documentation\n-    -W                                     oom=val -- panic strategy for out-of-memory handling\n-    -W                  osx-rpath-install-name=val -- pass `-install_name @rpath/...` to the macOS linker (default: no)\n-    -W                       panic-abort-tests=val -- support compiling tests with panic=abort (default: no)\n-    -W                           panic-in-drop=val -- panic strategy for panics in drops\n-    -W                              parse-only=val -- parse only; do not compile, assemble, or link (default: no)\n-    -W                              perf-stats=val -- print some performance-related statistics (default: no)\n-    -W pick-stable-methods-before-any-unstable=val -- try to pick stable methods first before picking any unstable methods (default: yes)\n-    -W                                     plt=val -- whether to use the PLT when calling into shared libraries;\n-        only has effect for PIC code on systems with ELF binaries\n-        (default: PLT is disabled if full relro is enabled)\n-    -W                                polonius=val -- enable polonius-based borrow-checker (default: no)\n-    -W                            polymorphize=val -- perform polymorphization analysis\n-    -W                            pre-link-arg=val -- a single extra argument to prepend the linker invocation (can be used several times)\n-    -W                           pre-link-args=val -- extra arguments to prepend to the linker invocation (space separated)\n-    -W           precise-enum-drop-elaboration=val -- use a more precise version of drop elaboration for matches on enums (default: yes). This results in better codegen, but has caused miscompilations on some tier 2 platforms. See #77382 and #74551.\n-    -W                              print-fuel=val -- make rustc print the total optimization fuel used by a crate\n-    -W                       print-llvm-passes=val -- print the LLVM optimization passes being run (default: no)\n-    -W                        print-mono-items=val -- print the result of the monomorphization collection pass\n-    -W                        print-type-sizes=val -- print layout information for each type encountered (default: no)\n-    -W                    proc-macro-backtrace=val -- show backtraces for panics during proc-macro execution (default: no)\n-    -W                                 profile=val -- insert profiling code (default: no)\n-    -W                        profile-closures=val -- profile size of closures\n-    -W                            profile-emit=val -- file path to emit profiling data at runtime when using 'profile' (default based on relative source path)\n-    -W                        profiler-runtime=val -- name of the profiler runtime crate to automatically inject (default: `profiler_builtins`)\n-    -W                      profile-sample-use=val -- use the given `.prof` file for sampled profile-guided optimization (also known as AutoFDO)\n-    -W                         query-dep-graph=val -- enable queries of the dependency graph for regression testing (default: no)\n-    -W                        randomize-layout=val -- randomize the layout of types (default: no)\n-    -W                             layout-seed=val -- seed layout randomization\n-    -W                   relax-elf-relocations=val -- whether ELF relocations can be relaxed\n-    -W                             relro-level=val -- choose which RELRO level to use\n-    -W                        remap-cwd-prefix=val -- remap paths under the current working directory to this path prefix\n-    -W         simulate-remapped-rust-src-base=val -- simulate the effect of remap-debuginfo = true at bootstrapping by remapping path to rust's source base directory. only meant for testing purposes\n-    -W                     report-delayed-bugs=val -- immediately print bugs registered with `delay_span_bug` (default: no)\n-    -W                               sanitizer=val -- use a sanitizer\n-    -W          sanitizer-memory-track-origins=val -- enable origins tracking in MemorySanitizer\n-    -W                       sanitizer-recover=val -- enable recovery for selected sanitizers\n-    -W                  saturating-float-casts=val -- make float->int casts UB-free: numbers outside the integer type's range are clipped to the max/min integer respectively, and NaN is mapped to 0 (default: yes)\n-    -W                           save-analysis=val -- write syntax and type analysis (in JSON format) information, in addition to normal output (default: no)\n-    -W                            self-profile=val -- run the self profiler and output the raw event data\n-    -W                     self-profile-events=val -- specify the events recorded by the self profiler;\n-        for example: `-Z self-profile-events=default,query-keys`\n-        all options: none, all, default, generic-activity, query-provider, query-cache-hit\n-                     query-blocked, incr-cache-load, incr-result-hashing, query-keys, function-args, args, llvm, artifact-sizes\n-    -W                    self-profile-counter=val -- counter used by the self profiler (default: `wall-time`), one of:\n-        `wall-time` (monotonic clock, i.e. `std::time::Instant`)\n-        `instructions:u` (retired instructions, userspace-only)\n-        `instructions-minus-irqs:u` (subtracting hardware interrupt counts for extra accuracy)\n-    -W                          share-generics=val -- make the current crate share its generic instantiations\n-    -W                               show-span=val -- show spans for compiler debugging (expr|pat|ty)\n-    -W                              span-debug=val -- forward proc_macro::Span's `Debug` impl to `Span`\n-    -W                       span-free-formats=val -- exclude spans when debug-printing compiler state (default: no)\n-    -W                      src-hash-algorithm=val -- hash algorithm of source files in debug info (`md5`, `sha1`, or `sha256`)\n-    -W                         stack-protector=val -- control stack smash protection strategy (`rustc --print stack-protector-strategies` for details)\n-    -W                      strict-init-checks=val -- control if mem::uninitialized and mem::zeroed panic on more UB\n-    -W                                   strip=val -- tell the linker which information to strip (`none` (default), `debuginfo` or `symbols`)\n-    -W                        split-dwarf-kind=val -- split dwarf variant (only if -Csplit-debuginfo is enabled and on relevant platform)\n-        (default: `split`)\n \n-        `split`: sections which do not require relocation are written into a DWARF object (`.dwo`)\n-                 file which is ignored by the linker\n-        `single`: sections which do not require relocation are written into object file but ignored\n-                  by the linker\n-    -W                    split-dwarf-inlining=val -- provide minimal debug info in the object/executable to facilitate online symbolication/stack traces in the absence of .dwo/.dwp files when using Split DWARF\n-    -W                 symbol-mangling-version=val -- which mangling version to use for symbol names ('legacy' (default) or 'v0')\n-    -W                                   teach=val -- show extended diagnostic help (default: no)\n-    -W                               temps-dir=val -- the directory the intermediate files are written to\n-    -W                          terminal-width=val -- set the current terminal width\n-    -W                          translate-lang=val -- language identifier for diagnostic output\n-    -W                translate-additional-ftl=val -- additional fluent translation to preferentially use (for testing translation)\n-    -W        translate-directionality-markers=val -- emit directionality isolation markers in translated diagnostics\n-    -W                                tune-cpu=val -- select processor to schedule for (`rustc --print target-cpus` for details)\n-    -W                                 thinlto=val -- enable ThinLTO when possible\n-    -W                           thir-unsafeck=val -- use the THIR unsafety checker (default: no)\n-    -W                                 threads=val -- use a thread pool with N threads\n-    -W                                    time=val -- measure time of rustc processes (default: no)\n-    -W                        time-llvm-passes=val -- measure time of each LLVM pass (default: no)\n-    -W                             time-passes=val -- measure time of each rustc pass (default: no)\n-    -W                               tls-model=val -- choose the TLS model to use (`rustc --print tls-models` for details)\n-    -W                            trace-macros=val -- for every macro invocation, print its name and arguments (default: no)\n-    -W   translate-remapped-path-to-local-path=val -- translate remapped paths into local paths when possible (default: yes)\n-    -W                        trap-unreachable=val -- generate trap instructions for unreachable intrinsics (default: use target setting, usually yes)\n-    -W                        treat-err-as-bug=val -- treat error number `val` that occurs as bug\n-    -W                   trim-diagnostic-paths=val -- in diagnostics, use heuristics to shorten paths referring to items\n-    -W                              ui-testing=val -- emit compiler diagnostics in a form suitable for UI testing (default: no)\n-    -W            uninit-const-chunk-threshold=val -- allow generating const initializers with mixed init/uninit chunks, and set the maximum number of chunks for which this is allowed (default: 16)\n-    -W          unleash-the-miri-inside-of-you=val -- take the brakes off const evaluation. NOTE: this is unsound (default: no)\n-    -W                                unpretty=val -- present the input source, unstable (and less-pretty) variants;\n-        `normal`, `identified`,\n-        `expanded`, `expanded,identified`,\n-        `expanded,hygiene` (with internal representations),\n-        `ast-tree` (raw AST before expansion),\n-        `ast-tree,expanded` (raw AST after expansion),\n-        `hir` (the HIR), `hir,identified`,\n-        `hir,typed` (HIR with types for each node),\n-        `hir-tree` (dump the raw HIR),\n-        `mir` (the MIR), or `mir-cfg` (graphviz formatted MIR)\n-    -W                        unsound-mir-opts=val -- enable unsound and buggy MIR optimizations (default: no)\n-    -W                        unstable-options=val -- adds unstable command line options to rustc interface (default: no)\n-    -W                       use-ctors-section=val -- use legacy .ctors section for initializers rather than .init_array\n-    -W                            validate-mir=val -- validate MIR after each transformation\n-    -W                                 verbose=val -- in general, enable more debug printouts (default: no)\n-    -W                          verify-llvm-ir=val -- verify LLVM IR (default: no)\n-    -W            virtual-function-elimination=val -- enables dead virtual function elimination optimization. Requires `-Clto[=[fat,yes]]`\n-    -W                         wasi-exec-model=val -- whether to build a wasi command or reactor\n+Available lint options:\n+    -W <foo>           Warn about <foo>\n+    -A <foo>           Allow <foo>\n+    -D <foo>           Deny <foo>\n+    -F <foo>           Forbid <foo> (deny <foo> and all attempts to override)\n+\n+\n+Lint checks provided by rustc:\n+\n+    $NAMES  $LEVELS  $MEANINGS\n+\n+Lint groups provided by rustc:\n+\n+    $NAMES  $SUB_LINTS\n+\n+Lint checks provided by plugins loaded by this crate:\n+\n+    $NAMES  $LEVELS  $MEANINGS\n+\n+Lint groups provided by plugins loaded by this crate:\n+\n+    $NAMES  $SUB_LINTS\n+"}, {"sha": "075d75a1d6ceaa9b4deb69a1758514d99b88183b", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2557603f320593be9d1c29a453c648e61e74d343/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2557603f320593be9d1c29a453c648e61e74d343/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=2557603f320593be9d1c29a453c648e61e74d343", "patch": "@@ -3245,7 +3245,8 @@ impl<'test> TestCx<'test> {\n \n             if !self.props.error_patterns.is_empty() {\n                 // \"// error-pattern\" comments\n-                self.check_error_patterns(&proc_res.stderr, &proc_res, pm);\n+                let output_to_check = self.get_output(&proc_res);\n+                self.check_error_patterns(&output_to_check, &proc_res, pm);\n             }\n         }\n \n@@ -3266,7 +3267,8 @@ impl<'test> TestCx<'test> {\n \n             if check_patterns {\n                 // \"// error-pattern\" comments\n-                self.check_error_patterns(&proc_res.stderr, &proc_res, pm);\n+                let output_to_check = self.get_output(&proc_res);\n+                self.check_error_patterns(&output_to_check, &proc_res, pm);\n             }\n \n             if check_annotations {"}]}