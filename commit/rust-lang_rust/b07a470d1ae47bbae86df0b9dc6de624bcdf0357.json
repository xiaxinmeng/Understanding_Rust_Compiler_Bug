{"sha": "b07a470d1ae47bbae86df0b9dc6de624bcdf0357", "node_id": "C_kwDOAAsO6NoAKGIwN2E0NzBkMWFlNDdiYmFlODZkZjBiOWRjNmRlNjI0YmNkZjAzNTc", "commit": {"author": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-04-12T13:04:41Z"}, "committer": {"name": "Gary Guo", "email": "gary@garyguo.net", "date": "2023-04-13T11:35:12Z"}, "message": "Add regression test", "tree": {"sha": "412db320df94e15b83b1c47420d6fa7ea814a0dc", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/412db320df94e15b83b1c47420d6fa7ea814a0dc"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b07a470d1ae47bbae86df0b9dc6de624bcdf0357", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b07a470d1ae47bbae86df0b9dc6de624bcdf0357", "html_url": "https://github.com/rust-lang/rust/commit/b07a470d1ae47bbae86df0b9dc6de624bcdf0357", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b07a470d1ae47bbae86df0b9dc6de624bcdf0357/comments", "author": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nbdd0121", "id": 4065244, "node_id": "MDQ6VXNlcjQwNjUyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4065244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nbdd0121", "html_url": "https://github.com/nbdd0121", "followers_url": "https://api.github.com/users/nbdd0121/followers", "following_url": "https://api.github.com/users/nbdd0121/following{/other_user}", "gists_url": "https://api.github.com/users/nbdd0121/gists{/gist_id}", "starred_url": "https://api.github.com/users/nbdd0121/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nbdd0121/subscriptions", "organizations_url": "https://api.github.com/users/nbdd0121/orgs", "repos_url": "https://api.github.com/users/nbdd0121/repos", "events_url": "https://api.github.com/users/nbdd0121/events{/privacy}", "received_events_url": "https://api.github.com/users/nbdd0121/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "731c6dcb60ffd4980b27338be652bb932790cc83", "url": "https://api.github.com/repos/rust-lang/rust/commits/731c6dcb60ffd4980b27338be652bb932790cc83", "html_url": "https://github.com/rust-lang/rust/commit/731c6dcb60ffd4980b27338be652bb932790cc83"}], "stats": {"total": 39, "additions": 39, "deletions": 0}, "files": [{"sha": "f50c0eb4788970b4e46b8270ab0bd8bdb065b394", "filename": "tests/mir-opt/issue_104451_unwindable_intrinsics.main.AbortUnwindingCalls.after.mir", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b07a470d1ae47bbae86df0b9dc6de624bcdf0357/tests%2Fmir-opt%2Fissue_104451_unwindable_intrinsics.main.AbortUnwindingCalls.after.mir", "raw_url": "https://github.com/rust-lang/rust/raw/b07a470d1ae47bbae86df0b9dc6de624bcdf0357/tests%2Fmir-opt%2Fissue_104451_unwindable_intrinsics.main.AbortUnwindingCalls.after.mir", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fissue_104451_unwindable_intrinsics.main.AbortUnwindingCalls.after.mir?ref=b07a470d1ae47bbae86df0b9dc6de624bcdf0357", "patch": "@@ -0,0 +1,25 @@\n+// MIR for `main` after AbortUnwindingCalls\n+\n+fn main() -> () {\n+    let mut _0: ();                      // return place in scope 0 at $DIR/issue_104451_unwindable_intrinsics.rs:+0:11: +0:11\n+    let mut _1: !;                       // in scope 0 at $DIR/issue_104451_unwindable_intrinsics.rs:+2:9: +2:62\n+    let mut _2: ();                      // in scope 0 at $DIR/issue_104451_unwindable_intrinsics.rs:+2:45: +2:47\n+    scope 1 {\n+    }\n+\n+    bb0: {\n+        StorageLive(_1);                 // scope 1 at $DIR/issue_104451_unwindable_intrinsics.rs:+2:9: +2:62\n+        StorageLive(_2);                 // scope 1 at $DIR/issue_104451_unwindable_intrinsics.rs:+2:45: +2:47\n+        _2 = ();                         // scope 1 at $DIR/issue_104451_unwindable_intrinsics.rs:+2:45: +2:47\n+        _1 = const_eval_select::<(), fn() -> ! {ow_ct}, fn() -> ! {ow_ct}, !>(move _2, ow_ct, ow_ct); // scope 1 at $DIR/issue_104451_unwindable_intrinsics.rs:+2:9: +2:62\n+                                         // mir::Constant\n+                                         // + span: $DIR/issue_104451_unwindable_intrinsics.rs:8:9: 8:44\n+                                         // + literal: Const { ty: unsafe extern \"rust-intrinsic\" fn((), fn() -> ! {ow_ct}, fn() -> ! {ow_ct}) -> ! {const_eval_select::<(), fn() -> ! {ow_ct}, fn() -> ! {ow_ct}, !>}, val: Value(<ZST>) }\n+                                         // mir::Constant\n+                                         // + span: $DIR/issue_104451_unwindable_intrinsics.rs:8:49: 8:54\n+                                         // + literal: Const { ty: fn() -> ! {ow_ct}, val: Value(<ZST>) }\n+                                         // mir::Constant\n+                                         // + span: $DIR/issue_104451_unwindable_intrinsics.rs:8:56: 8:61\n+                                         // + literal: Const { ty: fn() -> ! {ow_ct}, val: Value(<ZST>) }\n+    }\n+}"}, {"sha": "9babd4aaed512c9ba4fa837a2500bc31abd1693c", "filename": "tests/mir-opt/issue_104451_unwindable_intrinsics.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b07a470d1ae47bbae86df0b9dc6de624bcdf0357/tests%2Fmir-opt%2Fissue_104451_unwindable_intrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b07a470d1ae47bbae86df0b9dc6de624bcdf0357/tests%2Fmir-opt%2Fissue_104451_unwindable_intrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fissue_104451_unwindable_intrinsics.rs?ref=b07a470d1ae47bbae86df0b9dc6de624bcdf0357", "patch": "@@ -0,0 +1,14 @@\n+// Check that `UnwindAction::Unreachable` is not generated for unwindable intrinsics.\n+// ignore-wasm32 compiled with panic=abort by default\n+#![feature(core_intrinsics)]\n+\n+// EMIT_MIR issue_104451_unwindable_intrinsics.main.AbortUnwindingCalls.after.mir\n+fn main() {\n+    unsafe {\n+        core::intrinsics::const_eval_select((), ow_ct, ow_ct)\n+    }\n+}\n+\n+const fn ow_ct() -> ! {\n+    panic!();\n+}"}]}