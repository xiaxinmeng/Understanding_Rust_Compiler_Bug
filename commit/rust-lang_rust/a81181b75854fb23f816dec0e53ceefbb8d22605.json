{"sha": "a81181b75854fb23f816dec0e53ceefbb8d22605", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MTE4MWI3NTg1NGZiMjNmODE2ZGVjMGU1M2NlZWZiYjhkMjI2MDU=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-06T09:28:09Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-06T09:28:09Z"}, "message": "don't abort after successfully linting a target", "tree": {"sha": "0ab537d841c390aa60df0f8587ad490d56749fe5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ab537d841c390aa60df0f8587ad490d56749fe5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a81181b75854fb23f816dec0e53ceefbb8d22605", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXVUIpAAoJEFbW7qD8Z6xGz4AP/i2z0iozFTtnWosqKOLOK+lj\nGlNity4lYkWKipc6VFY/yf5PwRgquJYMGgDvpeCBvhqCqMjx02r8rfrxBoe8ALy+\nqA0cWYdTYefg+ojrKHLcwJGCCF+oOOevDPTsGC5TCEod00sm6/+K+rBusI1nhfwz\nsr4WQi+bKa/aMO7FNpg3xmAq2LUVUZozYM8nO5jPj4pvF7S3f8Vv+bIYovE5JG0x\nGw+Yy53bqCmtAP4CjJoO5IjcO4nH7SGEzpv0lincApRi1YGlNipMhYFZFM8wyRLA\nYgldliUWItBQE6AO4zmRz/6aSPxgMgjf46k7aEaZEHvHEXXJqqQaqbEnBbATUEHz\nZcbdyqP3Dr2vjzk7LCkmjijC9P5STclpJJQy36wHC1AZ1k56T9QSthb3gTMDySt3\nXDVuzi7v3P/j33QOcgaSB0fqpjdinyaSIHsq1GZNoZjcJ9iL6Di0JNiqtr9vqblr\nNdhwiAmQdlxSayAZUpH+Lt6S9Q5GpjjBdQTnoUPiv6XFZl0O6PNC4b5kOGvPd+gl\nXBVpJ0l8B7v+daOBHPIqpizfggHz8rAkYgX7UJmGejiucfbIywIp1wOt5z0IUIWX\niZgGXP+7HzQpcSFGBSAgZhaOUlcLe57LGd+77yfpuY2YrWeWDaBMOAZMDlG2MpuL\niZd0zXwUMR9MDFOsnuwR\n=8l8/\n-----END PGP SIGNATURE-----", "payload": "tree 0ab537d841c390aa60df0f8587ad490d56749fe5\nparent a3f7fea36c8874a2ea9824257485f0d3a8d35ea0\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465205289 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465205289 +0200\n\ndon't abort after successfully linting a target"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a81181b75854fb23f816dec0e53ceefbb8d22605", "html_url": "https://github.com/rust-lang/rust/commit/a81181b75854fb23f816dec0e53ceefbb8d22605", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a81181b75854fb23f816dec0e53ceefbb8d22605/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a3f7fea36c8874a2ea9824257485f0d3a8d35ea0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a3f7fea36c8874a2ea9824257485f0d3a8d35ea0", "html_url": "https://github.com/rust-lang/rust/commit/a3f7fea36c8874a2ea9824257485f0d3a8d35ea0"}], "stats": {"total": 17, "additions": 12, "deletions": 5}, "files": [{"sha": "75cc507740a2a82bbfcad255c6b5415bfa3f3643", "filename": "src/main.rs", "status": "modified", "additions": 12, "deletions": 5, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/a81181b75854fb23f816dec0e53ceefbb8d22605/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a81181b75854fb23f816dec0e53ceefbb8d22605/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=a81181b75854fb23f816dec0e53ceefbb8d22605", "patch": "@@ -128,9 +128,13 @@ pub fn main() {\n             let args = std::env::args().skip(2);\n             if let Some(first) = target.kind.get(0) {\n                 if target.kind.len() > 1 || first.ends_with(\"lib\") {\n-                    process(std::iter::once(\"--lib\".to_owned()).chain(args), &dep_path, &sys_root);\n+                    if let Err(code) = process(std::iter::once(\"--lib\".to_owned()).chain(args), &dep_path, &sys_root) {\n+                        std::process::exit(code);\n+                    }\n                 } else if first == \"bin\" {\n-                    process(vec![\"--bin\".to_owned(), target.name].into_iter().chain(args), &dep_path, &sys_root);\n+                    if let Err(code) = process(vec![\"--bin\".to_owned(), target.name].into_iter().chain(args), &dep_path, &sys_root) {\n+                        std::process::exit(code);\n+                    }\n                 }\n             } else {\n                 panic!(\"badly formatted cargo metadata: target::kind is an empty array\");\n@@ -152,7 +156,7 @@ pub fn main() {\n     }\n }\n \n-fn process<P, I>(old_args: I, dep_path: P, sysroot: &str)\n+fn process<P, I>(old_args: I, dep_path: P, sysroot: &str) -> Result<(), i32>\n     where P: AsRef<Path>, I: Iterator<Item=String> {\n \n     let mut args = vec![\"rustc\".to_owned()];\n@@ -178,7 +182,10 @@ fn process<P, I>(old_args: I, dep_path: P, sysroot: &str)\n         .spawn().expect(\"could not run cargo\")\n         .wait().expect(\"failed to wait for cargo?\");\n \n-    if let Some(code) = exit_status.code() {\n-        std::process::exit(code);\n+    if exit_status.success() {\n+        Ok(())\n+    } else {\n+        use std::os::unix::process::ExitStatusExt;\n+        Err(exit_status.code().or(exit_status.signal()).unwrap_or(-1))\n     }\n }"}]}