{"sha": "e33a3f9c278663112cb083187303f04f52dd7ff8", "node_id": "C_kwDOAAsO6NoAKGUzM2EzZjljMjc4NjYzMTEyY2IwODMxODczMDNmMDRmNTJkZDdmZjg", "commit": {"author": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-09-19T20:38:55Z"}, "committer": {"name": "cynecx", "email": "me@cynecx.net", "date": "2021-12-03T22:51:49Z"}, "message": "Update unstable-book with recent asm changes (`may_unwind`)", "tree": {"sha": "1327b4f3cfdeef24c40a2841d6b1e24b5940e480", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1327b4f3cfdeef24c40a2841d6b1e24b5940e480"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e33a3f9c278663112cb083187303f04f52dd7ff8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e33a3f9c278663112cb083187303f04f52dd7ff8", "html_url": "https://github.com/rust-lang/rust/commit/e33a3f9c278663112cb083187303f04f52dd7ff8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e33a3f9c278663112cb083187303f04f52dd7ff8/comments", "author": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cynecx", "id": 5961244, "node_id": "MDQ6VXNlcjU5NjEyNDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/5961244?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cynecx", "html_url": "https://github.com/cynecx", "followers_url": "https://api.github.com/users/cynecx/followers", "following_url": "https://api.github.com/users/cynecx/following{/other_user}", "gists_url": "https://api.github.com/users/cynecx/gists{/gist_id}", "starred_url": "https://api.github.com/users/cynecx/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cynecx/subscriptions", "organizations_url": "https://api.github.com/users/cynecx/orgs", "repos_url": "https://api.github.com/users/cynecx/repos", "events_url": "https://api.github.com/users/cynecx/events{/privacy}", "received_events_url": "https://api.github.com/users/cynecx/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6cbf44f1d46a4b31e633c10a025dae93f01b797e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6cbf44f1d46a4b31e633c10a025dae93f01b797e", "html_url": "https://github.com/rust-lang/rust/commit/6cbf44f1d46a4b31e633c10a025dae93f01b797e"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "fa238a8b3bc6591a55ed18b9403675440464b024", "filename": "src/doc/unstable-book/src/library-features/asm.md", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/e33a3f9c278663112cb083187303f04f52dd7ff8/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "raw_url": "https://github.com/rust-lang/rust/raw/e33a3f9c278663112cb083187303f04f52dd7ff8/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flibrary-features%2Fasm.md?ref=e33a3f9c278663112cb083187303f04f52dd7ff8", "patch": "@@ -454,7 +454,7 @@ operand_expr := expr / \"_\" / expr \"=>\" expr / expr \"=>\" \"_\"\n reg_operand := dir_spec \"(\" reg_spec \")\" operand_expr\n operand := reg_operand / \"const\" const_expr / \"sym\" path\n clobber_abi := \"clobber_abi(\" <abi> *[\",\" <abi>] [\",\"] \")\"\n-option := \"pure\" / \"nomem\" / \"readonly\" / \"preserves_flags\" / \"noreturn\" / \"nostack\" / \"att_syntax\" / \"raw\"\n+option := \"pure\" / \"nomem\" / \"readonly\" / \"preserves_flags\" / \"noreturn\" / \"nostack\" / \"att_syntax\" / \"raw\" / \"may_unwind\"\n options := \"options(\" option *[\",\" option] [\",\"] \")\"\n asm := \"asm!(\" format_string *(\",\" format_string) *(\",\" [ident \"=\"] operand) *(\",\" clobber_abi) *(\",\" options) [\",\"] \")\"\n ```\n@@ -829,6 +829,7 @@ Currently the following options are defined:\n - `noreturn`: The `asm` block never returns, and its return type is defined as `!` (never). Behavior is undefined if execution falls through past the end of the asm code. A `noreturn` asm block behaves just like a function which doesn't return; notably, local variables in scope are not dropped before it is invoked.\n - `nostack`: The `asm` block does not push data to the stack, or write to the stack red-zone (if supported by the target). If this option is *not* used then the stack pointer is guaranteed to be suitably aligned (according to the target ABI) for a function call.\n - `att_syntax`: This option is only valid on x86, and causes the assembler to use the `.att_syntax prefix` mode of the GNU assembler. Register operands are substituted in with a leading `%`.\n+- `may_unwind`: The `asm` block may unwind the stack and be part of the stack unwinding process (This option is only supported by the LLVM backend right now).\n - `raw`: This causes the template string to be parsed as a raw assembly string, with no special handling for `{` and `}`. This is primarily useful when including raw assembly code from an external file using `include_str!`.\n \n The compiler performs some additional checks on options:"}]}