{"sha": "5ee6304d8d738d05debfcb712ee57b024f5e1b95", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVlZTYzMDRkOGQ3MzhkMDVkZWJmY2I3MTJlZTU3YjAyNGY1ZTFiOTU=", "commit": {"author": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-09-20T16:44:49Z"}, "committer": {"name": "Marcus Klaas", "email": "mail@marcusklaas.nl", "date": "2015-09-20T16:45:25Z"}, "message": "Fix struct overflows", "tree": {"sha": "1ef974629ddfd42fb980253810f6153c81367718", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1ef974629ddfd42fb980253810f6153c81367718"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5ee6304d8d738d05debfcb712ee57b024f5e1b95", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5ee6304d8d738d05debfcb712ee57b024f5e1b95", "html_url": "https://github.com/rust-lang/rust/commit/5ee6304d8d738d05debfcb712ee57b024f5e1b95", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5ee6304d8d738d05debfcb712ee57b024f5e1b95/comments", "author": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "committer": {"login": "marcusklaas", "id": 1255413, "node_id": "MDQ6VXNlcjEyNTU0MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1255413?v=4", "gravatar_id": "", "url": "https://api.github.com/users/marcusklaas", "html_url": "https://github.com/marcusklaas", "followers_url": "https://api.github.com/users/marcusklaas/followers", "following_url": "https://api.github.com/users/marcusklaas/following{/other_user}", "gists_url": "https://api.github.com/users/marcusklaas/gists{/gist_id}", "starred_url": "https://api.github.com/users/marcusklaas/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/marcusklaas/subscriptions", "organizations_url": "https://api.github.com/users/marcusklaas/orgs", "repos_url": "https://api.github.com/users/marcusklaas/repos", "events_url": "https://api.github.com/users/marcusklaas/events{/privacy}", "received_events_url": "https://api.github.com/users/marcusklaas/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0952d7354e91505104a61578392e60b5d12f1b71", "url": "https://api.github.com/repos/rust-lang/rust/commits/0952d7354e91505104a61578392e60b5d12f1b71", "html_url": "https://github.com/rust-lang/rust/commit/0952d7354e91505104a61578392e60b5d12f1b71"}], "stats": {"total": 62, "additions": 33, "deletions": 29}, "files": [{"sha": "95da7d3659f1222a4730c9cbfe2e05821bc5f870", "filename": "src/expr.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/5ee6304d8d738d05debfcb712ee57b024f5e1b95/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ee6304d8d738d05debfcb712ee57b024f5e1b95/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=5ee6304d8d738d05debfcb712ee57b024f5e1b95", "patch": "@@ -1057,7 +1057,7 @@ fn rewrite_struct_lit<'a>(context: &RewriteContext,\n     let path_str = try_opt!(path.rewrite(context, path_budget, offset));\n \n     // Foo { a: Foo } - indent is +3, width is -5.\n-    let h_budget = try_opt!(width.checked_sub(path_str.len() + 5));\n+    let h_budget = width.checked_sub(path_str.len() + 5).unwrap_or(0);\n     let (indent, v_budget) = match context.config.struct_lit_style {\n         StructLitStyle::Visual => {\n             (offset + path_str.len() + 3, h_budget)\n@@ -1103,16 +1103,16 @@ fn rewrite_struct_lit<'a>(context: &RewriteContext,\n                              |item| {\n                                  match *item {\n                                      StructLitField::Regular(ref field) => {\n-                                         rewrite_field(inner_context, &field, h_budget, indent)\n+                                         rewrite_field(inner_context, &field, v_budget, indent)\n                                              .unwrap_or(context.snippet(field.span))\n                                      }\n                                      StructLitField::Base(ref expr) => {\n                                          // 2 = ..\n                                          format!(\"..{}\",\n-                                                 h_budget.checked_sub(2)\n-                                                         .and_then(|h_budget| {\n+                                                 v_budget.checked_sub(2)\n+                                                         .and_then(|v_budget| {\n                                                              expr.rewrite(inner_context,\n-                                                                          h_budget,\n+                                                                          v_budget,\n                                                                           indent + 2)\n                                                          })\n                                                          .unwrap_or(context.snippet(expr.span)))\n@@ -1122,11 +1122,13 @@ fn rewrite_struct_lit<'a>(context: &RewriteContext,\n                              span_after(span, \"{\", context.codemap),\n                              span.hi);\n \n+    let tactic = match (context.config.struct_lit_style, fields.len()) {\n+        (StructLitStyle::Visual, 1) => ListTactic::HorizontalVertical,\n+        _ => context.config.struct_lit_multiline_style.to_list_tactic(),\n+    };\n+\n     let fmt = ListFormatting {\n-        tactic: match (context.config.struct_lit_style, fields.len()) {\n-            (StructLitStyle::Visual, 1) => ListTactic::HorizontalVertical,\n-            _ => context.config.struct_lit_multiline_style.to_list_tactic(),\n-        },\n+        tactic: tactic,\n         separator: \",\",\n         trailing_separator: if base.is_some() {\n             SeparatorTactic::Never\n@@ -1150,7 +1152,8 @@ fn rewrite_struct_lit<'a>(context: &RewriteContext,\n     };\n \n     match (context.config.struct_lit_style, context.config.struct_lit_multiline_style) {\n-        (StructLitStyle::Block, _) if fields_str.contains('\\n') => format_on_newline(),\n+        (StructLitStyle::Block, _) if fields_str.contains('\\n') || fields_str.len() > h_budget =>\n+            format_on_newline(),\n         (StructLitStyle::Block, MultilineStyle::ForceMulti) => format_on_newline(),\n         _ => Some(format!(\"{} {{ {} }}\", path_str, fields_str)),\n     }"}, {"sha": "faa0d3775c7197a3eef4a91708bdf5ce3335963a", "filename": "tests/source/expr.rs", "status": "modified", "additions": 0, "deletions": 8, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5ee6304d8d738d05debfcb712ee57b024f5e1b95/tests%2Fsource%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ee6304d8d738d05debfcb712ee57b024f5e1b95/tests%2Fsource%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fexpr.rs?ref=5ee6304d8d738d05debfcb712ee57b024f5e1b95", "patch": "@@ -173,11 +173,3 @@ fn arrays() {\n \n     [ 1 +   3, 4 ,  5, 6, 7, 7, fncall::<Vec<_>>(3-1)]\n }\n-\n-fn struct_exprs() {\n-    Foo\n-    { a :  1, b:f( 2)};\n-    Foo{a:1,b:f(2),..g(3)};\n-    // FIXME: should be wrapped (#231)\n-    LoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongStruct { ..base };\n-}"}, {"sha": "69f90879164eab1277df2a9c765286b140d47127", "filename": "tests/source/struct_lits.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5ee6304d8d738d05debfcb712ee57b024f5e1b95/tests%2Fsource%2Fstruct_lits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ee6304d8d738d05debfcb712ee57b024f5e1b95/tests%2Fsource%2Fstruct_lits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fstruct_lits.rs?ref=5ee6304d8d738d05debfcb712ee57b024f5e1b95", "patch": "@@ -83,3 +83,11 @@ fn issue278() {\n         b: 0,\n     };\n }\n+\n+fn struct_exprs() {\n+    Foo\n+    { a :  1, b:f( 2)};\n+    Foo{a:1,b:f(2),..g(3)};\n+    LoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongStruct { ..base };\n+    IntrinsicISizesContribution { content_intrinsic_sizes: IntrinsicISizes { minimum_inline_size: 0, }, };\n+}"}, {"sha": "bb629f12126664aab9f72b1039b420005c3f13b5", "filename": "tests/target/expr.rs", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/5ee6304d8d738d05debfcb712ee57b024f5e1b95/tests%2Ftarget%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ee6304d8d738d05debfcb712ee57b024f5e1b95/tests%2Ftarget%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fexpr.rs?ref=5ee6304d8d738d05debfcb712ee57b024f5e1b95", "patch": "@@ -183,10 +183,3 @@ fn arrays() {\n \n     [1 + 3, 4, 5, 6, 7, 7, fncall::<Vec<_>>(3 - 1)]\n }\n-\n-fn struct_exprs() {\n-    Foo { a: 1, b: f(2) };\n-    Foo { a: 1, b: f(2), ..g(3) };\n-    // FIXME: should be wrapped (#231)\n-    LoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongStruct { ..base };\n-}"}, {"sha": "ac7b8aaaeab08cc46fd7b71847d23bb39531e8ea", "filename": "tests/target/struct_lits.rs", "status": "modified", "additions": 12, "deletions": 4, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5ee6304d8d738d05debfcb712ee57b024f5e1b95/tests%2Ftarget%2Fstruct_lits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5ee6304d8d738d05debfcb712ee57b024f5e1b95/tests%2Ftarget%2Fstruct_lits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fstruct_lits.rs?ref=5ee6304d8d738d05debfcb712ee57b024f5e1b95", "patch": "@@ -65,10 +65,7 @@ fn main() {\n \n fn matcher() {\n     TagTerminatedByteMatcher {\n-        matcher: ByteMatcher {\n-            pattern: b\"<HTML\",\n-            mask: b\"\\xFF\\xDF\\xDF\\xDF\\xDF\\xFF\",\n-        },\n+        matcher: ByteMatcher { pattern: b\"<HTML\", mask: b\"\\xFF\\xDF\\xDF\\xDF\\xDF\\xFF\" },\n     };\n }\n \n@@ -101,3 +98,14 @@ fn issue278() {\n         b: 0,\n     };\n }\n+\n+fn struct_exprs() {\n+    Foo { a: 1, b: f(2) };\n+    Foo { a: 1, b: f(2), ..g(3) };\n+    LoooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooongStruct {\n+        ..base\n+    };\n+    IntrinsicISizesContribution {\n+        content_intrinsic_sizes: IntrinsicISizes { minimum_inline_size: 0 },\n+    };\n+}"}]}