{"sha": "1bc8f0b49f34927c08d1f31d2bb32ab7404ec948", "node_id": "C_kwDOAAsO6NoAKDFiYzhmMGI0OWYzNDkyN2MwOGQxZjMxZDJiYjMyYWI3NDA0ZWM5NDg", "commit": {"author": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-02-01T17:47:19Z"}, "committer": {"name": "Chris Denton", "email": "christophersdenton@gmail.com", "date": "2022-02-01T18:40:29Z"}, "message": "Link `try_exists` docs to `Path::exists`", "tree": {"sha": "1e3c75434a5411a3d7e20ffe29976aa9c1bbeadb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1e3c75434a5411a3d7e20ffe29976aa9c1bbeadb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1bc8f0b49f34927c08d1f31d2bb32ab7404ec948", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEE+p/jD6jrzmnSIWJLcTRy8vRWJ94FAmH5fp4ACgkQcTRy8vRW\nJ97inRAAiblJSyxLGQjrZeqYprflV2AiQU2R6OnCFXGiugQ1QvirjmdLULWZmxcg\nheGOQX2m4OwleCt449s9W2gofBCx37ZgMxwMPyj3AOCBTcxUtJlwjUMnVxHOPyLN\neTepchTiM+CGJ17awtYs+03GWDT3PxA+s8wsOribK6dPuOdMo3n/RYT7+Te0qQLx\nP+ivoeebsReXos4WhNhIgRlP1VCoe0byw2xRW/Q9hWQjctAjHryH9AIUKfFtXfX6\nt8YX/ka00p2CUUa8jwCrjioCk3W3u+clB2krhpBTX8OZZ4FeB0KrNH/3K659Xh83\n/d6lkyfy4cP4K5jcZ4LsUo6AZcoenjPHCyRd2m2pRgHvsZP4LRs2EsqR0DT43M6z\nYxumxsBt5cn9vnFxhK5uDYGTKEfv1Kpfooo8LboymuTB0fq+Ld/qMX6VnwSyphqm\nyZf1mqUPA6kYtoHCSEILgapj6OuJVanmfoDgE0lBCJunCdmFWFfAWQwahqf0xpYT\nEgqf8Q3NXvAwRvNjnJy6ixY9jfUQHYof63GUBHEdXSjMqzt979H2RVJ3Z4vk5uQz\nvKFqOBcxe4yG8VuopzRpcZyH2hLvTtJmkdYRcBuNU34OXCikQbYfJc1Hv/WG9pWa\nwYYHv3efKR9LWdZ+eOa7LUyRNFdzquHwcJNm0YLKz/Js5hWASB8=\n=5ohd\n-----END PGP SIGNATURE-----", "payload": "tree 1e3c75434a5411a3d7e20ffe29976aa9c1bbeadb\nparent 686663a49e57870c78a4cd047f23a44175fc67a4\nauthor Chris Denton <christophersdenton@gmail.com> 1643737639 +0000\ncommitter Chris Denton <christophersdenton@gmail.com> 1643740829 +0000\n\nLink `try_exists` docs to `Path::exists`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1bc8f0b49f34927c08d1f31d2bb32ab7404ec948", "html_url": "https://github.com/rust-lang/rust/commit/1bc8f0b49f34927c08d1f31d2bb32ab7404ec948", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1bc8f0b49f34927c08d1f31d2bb32ab7404ec948/comments", "author": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ChrisDenton", "id": 4459874, "node_id": "MDQ6VXNlcjQ0NTk4NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4459874?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ChrisDenton", "html_url": "https://github.com/ChrisDenton", "followers_url": "https://api.github.com/users/ChrisDenton/followers", "following_url": "https://api.github.com/users/ChrisDenton/following{/other_user}", "gists_url": "https://api.github.com/users/ChrisDenton/gists{/gist_id}", "starred_url": "https://api.github.com/users/ChrisDenton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ChrisDenton/subscriptions", "organizations_url": "https://api.github.com/users/ChrisDenton/orgs", "repos_url": "https://api.github.com/users/ChrisDenton/repos", "events_url": "https://api.github.com/users/ChrisDenton/events{/privacy}", "received_events_url": "https://api.github.com/users/ChrisDenton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "686663a49e57870c78a4cd047f23a44175fc67a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/686663a49e57870c78a4cd047f23a44175fc67a4", "html_url": "https://github.com/rust-lang/rust/commit/686663a49e57870c78a4cd047f23a44175fc67a4"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "7ca64c38e5d3a211e3ea1192cf7bf6dea7a1ac84", "filename": "library/std/src/fs.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1bc8f0b49f34927c08d1f31d2bb32ab7404ec948/library%2Fstd%2Fsrc%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bc8f0b49f34927c08d1f31d2bb32ab7404ec948/library%2Fstd%2Fsrc%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ffs.rs?ref=1bc8f0b49f34927c08d1f31d2bb32ab7404ec948", "patch": "@@ -2288,7 +2288,7 @@ impl AsInnerMut<fs_imp::DirBuilder> for DirBuilder {\n /// This function will traverse symbolic links to query information about the\n /// destination file. In case of broken symbolic links this will return `Ok(false)`.\n ///\n-/// As opposed to the `exists()` method, this one doesn't silently ignore errors\n+/// As opposed to the [`Path::exists`] method, this one doesn't silently ignore errors\n /// unrelated to the path not existing. (E.g. it will return `Err(_)` in case of permission\n /// denied on some of the parent directories.)\n ///\n@@ -2301,6 +2301,8 @@ impl AsInnerMut<fs_imp::DirBuilder> for DirBuilder {\n /// assert!(!fs::try_exists(\"does_not_exist.txt\").expect(\"Can't check existence of file does_not_exist.txt\"));\n /// assert!(fs::try_exists(\"/root/secret_file.txt\").is_err());\n /// ```\n+///\n+/// [`Path::exists`]: crate::path::Path::exists\n // FIXME: stabilization should modify documentation of `exists()` to recommend this method\n // instead.\n #[unstable(feature = \"path_try_exists\", issue = \"83186\")]"}, {"sha": "85cad65da6a30670f9ff1cd3ee78b97e04cdab7d", "filename": "library/std/src/path.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1bc8f0b49f34927c08d1f31d2bb32ab7404ec948/library%2Fstd%2Fsrc%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1bc8f0b49f34927c08d1f31d2bb32ab7404ec948/library%2Fstd%2Fsrc%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fpath.rs?ref=1bc8f0b49f34927c08d1f31d2bb32ab7404ec948", "patch": "@@ -2730,7 +2730,7 @@ impl Path {\n     /// This function will traverse symbolic links to query information about the\n     /// destination file. In case of broken symbolic links this will return `Ok(false)`.\n     ///\n-    /// As opposed to the `exists()` method, this one doesn't silently ignore errors\n+    /// As opposed to the [`exists()`] method, this one doesn't silently ignore errors\n     /// unrelated to the path not existing. (E.g. it will return `Err(_)` in case of permission\n     /// denied on some of the parent directories.)\n     ///\n@@ -2743,6 +2743,8 @@ impl Path {\n     /// assert!(!Path::new(\"does_not_exist.txt\").try_exists().expect(\"Can't check existence of file does_not_exist.txt\"));\n     /// assert!(Path::new(\"/root/secret_file.txt\").try_exists().is_err());\n     /// ```\n+    ///\n+    /// [`exists()`]: Self::exists\n     // FIXME: stabilization should modify documentation of `exists()` to recommend this method\n     // instead.\n     #[unstable(feature = \"path_try_exists\", issue = \"83186\")]"}]}