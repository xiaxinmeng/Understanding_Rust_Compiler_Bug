{"sha": "3c8c5051b18c604a4a1c0a01a6515ff3852341e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjOGM1MDUxYjE4YzYwNGE0YTFjMGEwMWE2NTE1ZmYzODUyMzQxZTE=", "commit": {"author": {"name": "Gauri", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2018-01-13T11:43:18Z"}, "committer": {"name": "Gauri", "email": "f2013002@goa.bits-pilani.ac.in", "date": "2018-01-13T11:43:18Z"}, "message": "add ui test", "tree": {"sha": "37b08a6d42b3946a75e0ff26bd7d2076f4b1f1af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37b08a6d42b3946a75e0ff26bd7d2076f4b1f1af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c8c5051b18c604a4a1c0a01a6515ff3852341e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c8c5051b18c604a4a1c0a01a6515ff3852341e1", "html_url": "https://github.com/rust-lang/rust/commit/3c8c5051b18c604a4a1c0a01a6515ff3852341e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c8c5051b18c604a4a1c0a01a6515ff3852341e1/comments", "author": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "committer": {"login": "gaurikholkar", "id": 117768111, "node_id": "U_kgDOBwT_rw", "avatar_url": "https://avatars.githubusercontent.com/u/117768111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/gaurikholkar", "html_url": "https://github.com/gaurikholkar", "followers_url": "https://api.github.com/users/gaurikholkar/followers", "following_url": "https://api.github.com/users/gaurikholkar/following{/other_user}", "gists_url": "https://api.github.com/users/gaurikholkar/gists{/gist_id}", "starred_url": "https://api.github.com/users/gaurikholkar/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/gaurikholkar/subscriptions", "organizations_url": "https://api.github.com/users/gaurikholkar/orgs", "repos_url": "https://api.github.com/users/gaurikholkar/repos", "events_url": "https://api.github.com/users/gaurikholkar/events{/privacy}", "received_events_url": "https://api.github.com/users/gaurikholkar/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb1ada27816df80170f5d33753b9ea2049483e82", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb1ada27816df80170f5d33753b9ea2049483e82", "html_url": "https://github.com/rust-lang/rust/commit/eb1ada27816df80170f5d33753b9ea2049483e82"}], "stats": {"total": 54, "additions": 53, "deletions": 1}, "files": [{"sha": "84d5a8df4adbe6e4024d74a6d5690bc894bcdf53", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3c8c5051b18c604a4a1c0a01a6515ff3852341e1/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c8c5051b18c604a4a1c0a01a6515ff3852341e1/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=3c8c5051b18c604a4a1c0a01a6515ff3852341e1", "patch": "@@ -1188,7 +1188,7 @@ impl EmitterWriter {\n                         acc + unicode_width::UnicodeWidthChar::width(ch).unwrap_or(0)\n                     });\n                     let underline_start = span_start_pos.col_display + start;\n-                    let underline_end = span_start_pos.col.0 + start + sub_len;\n+                    let underline_end = span_start_pos.col_display + start + sub_len;\n                     for p in underline_start..underline_end {\n                         buffer.putc(row_num,\n                                     max_line_num_len + 3 + p,"}, {"sha": "f173d0096381b25fab77bebdf7d4be9cc7cc2f86", "filename": "src/test/ui/issue-47377-1.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3c8c5051b18c604a4a1c0a01a6515ff3852341e1/src%2Ftest%2Fui%2Fissue-47377-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c8c5051b18c604a4a1c0a01a6515ff3852341e1/src%2Ftest%2Fui%2Fissue-47377-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47377-1.rs?ref=3c8c5051b18c604a4a1c0a01a6515ff3852341e1", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main(){\n+    let b = \"hello\";\n+        println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b + \", World!\"; //~ERROR 13:37: 13:51: binary operation `+` cannot be applied to type `&str` [E0369]\n+}\n\\ No newline at end of file"}, {"sha": "aad5373ae00dd874e00006eb22f796b3dda247c4", "filename": "src/test/ui/issue-47377-1.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3c8c5051b18c604a4a1c0a01a6515ff3852341e1/src%2Ftest%2Fui%2Fissue-47377-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c8c5051b18c604a4a1c0a01a6515ff3852341e1/src%2Ftest%2Fui%2Fissue-47377-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47377-1.stderr?ref=3c8c5051b18c604a4a1c0a01a6515ff3852341e1", "patch": "@@ -0,0 +1,12 @@\n+error[E0369]: binary operation `+` cannot be applied to type `&str`\n+  --> $DIR/issue-47377-1.rs:13:37\n+   |\n+13 |         println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b + \", World!\"; //~ERROR 13:37: 13:51: binary operation `+` cannot be applied to type `&str` [E0369]\n+   |                                          ^^^^^^^^^^^^^^ `+` can't be used to concatenate two `&str` strings\n+help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n+   |\n+13 |         println!(\"\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\ud83e\udd80\"); let _a = b.to_owned() + \", World!\"; //~ERROR 13:37: 13:51: binary operation `+` cannot be applied to type `&str` [E0369]\n+   |                                          ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}, {"sha": "2a8f2e30c0e88530c393d62625cae42f9809d6c1", "filename": "src/test/ui/issue-47377.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3c8c5051b18c604a4a1c0a01a6515ff3852341e1/src%2Ftest%2Fui%2Fissue-47377.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c8c5051b18c604a4a1c0a01a6515ff3852341e1/src%2Ftest%2Fui%2Fissue-47377.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47377.rs?ref=3c8c5051b18c604a4a1c0a01a6515ff3852341e1", "patch": "@@ -0,0 +1,14 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main(){\n+    let b = \"hello\";\n+    let _a = b + \", World!\"; //~ERROR 13:14: 13:28: binary operation `+` cannot be applied to type `&str` [E0369]\n+}\n\\ No newline at end of file"}, {"sha": "e9f285a19c3d9c387b37163872244c6aa8c267e4", "filename": "src/test/ui/issue-47377.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/3c8c5051b18c604a4a1c0a01a6515ff3852341e1/src%2Ftest%2Fui%2Fissue-47377.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3c8c5051b18c604a4a1c0a01a6515ff3852341e1/src%2Ftest%2Fui%2Fissue-47377.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-47377.stderr?ref=3c8c5051b18c604a4a1c0a01a6515ff3852341e1", "patch": "@@ -0,0 +1,12 @@\n+error[E0369]: binary operation `+` cannot be applied to type `&str`\n+  --> $DIR/issue-47377.rs:13:14\n+   |\n+13 |     let _a = b + \", World!\"; //~ERROR 13:14: 13:28: binary operation `+` cannot be applied to type `&str` [E0369]\n+   |              ^^^^^^^^^^^^^^ `+` can't be used to concatenate two `&str` strings\n+help: `to_owned()` can be used to create an owned `String` from a string reference. String concatenation appends the string on the right to the string on the left and may require reallocation. This requires ownership of the string on the left\n+   |\n+13 |     let _a = b.to_owned() + \", World!\"; //~ERROR 13:14: 13:28: binary operation `+` cannot be applied to type `&str` [E0369]\n+   |              ^^^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}