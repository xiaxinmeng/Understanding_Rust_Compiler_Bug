{"sha": "3e834a7a6295127fe2a5dd8605c7903ad7e5918d", "node_id": "C_kwDOAAsO6NoAKDNlODM0YTdhNjI5NTEyN2ZlMmE1ZGQ4NjA1Yzc5MDNhZDdlNTkxOGQ", "commit": {"author": {"name": "111", "email": "mic215@ucsd.edu", "date": "2022-08-26T03:24:09Z"}, "committer": {"name": "111", "email": "mic215@ucsd.edu", "date": "2022-09-01T15:35:38Z"}, "message": "Migrate DropCheckOverflow", "tree": {"sha": "f43e7e4f59c28c03321e390cf2d4b66189305ede", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f43e7e4f59c28c03321e390cf2d4b66189305ede"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e834a7a6295127fe2a5dd8605c7903ad7e5918d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e834a7a6295127fe2a5dd8605c7903ad7e5918d", "html_url": "https://github.com/rust-lang/rust/commit/3e834a7a6295127fe2a5dd8605c7903ad7e5918d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e834a7a6295127fe2a5dd8605c7903ad7e5918d/comments", "author": {"login": "MingyuChen1", "id": 44656112, "node_id": "MDQ6VXNlcjQ0NjU2MTEy", "avatar_url": "https://avatars.githubusercontent.com/u/44656112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MingyuChen1", "html_url": "https://github.com/MingyuChen1", "followers_url": "https://api.github.com/users/MingyuChen1/followers", "following_url": "https://api.github.com/users/MingyuChen1/following{/other_user}", "gists_url": "https://api.github.com/users/MingyuChen1/gists{/gist_id}", "starred_url": "https://api.github.com/users/MingyuChen1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MingyuChen1/subscriptions", "organizations_url": "https://api.github.com/users/MingyuChen1/orgs", "repos_url": "https://api.github.com/users/MingyuChen1/repos", "events_url": "https://api.github.com/users/MingyuChen1/events{/privacy}", "received_events_url": "https://api.github.com/users/MingyuChen1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "MingyuChen1", "id": 44656112, "node_id": "MDQ6VXNlcjQ0NjU2MTEy", "avatar_url": "https://avatars.githubusercontent.com/u/44656112?v=4", "gravatar_id": "", "url": "https://api.github.com/users/MingyuChen1", "html_url": "https://github.com/MingyuChen1", "followers_url": "https://api.github.com/users/MingyuChen1/followers", "following_url": "https://api.github.com/users/MingyuChen1/following{/other_user}", "gists_url": "https://api.github.com/users/MingyuChen1/gists{/gist_id}", "starred_url": "https://api.github.com/users/MingyuChen1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/MingyuChen1/subscriptions", "organizations_url": "https://api.github.com/users/MingyuChen1/orgs", "repos_url": "https://api.github.com/users/MingyuChen1/repos", "events_url": "https://api.github.com/users/MingyuChen1/events{/privacy}", "received_events_url": "https://api.github.com/users/MingyuChen1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4f9898a7947059433d08357cdaaba84c4705873d", "url": "https://api.github.com/repos/rust-lang/rust/commits/4f9898a7947059433d08357cdaaba84c4705873d", "html_url": "https://github.com/rust-lang/rust/commit/4f9898a7947059433d08357cdaaba84c4705873d"}], "stats": {"total": 32, "additions": 22, "deletions": 10}, "files": [{"sha": "f2864ec4922ec9049f156f91160a4f081045548b", "filename": "compiler/rustc_error_messages/locales/en-US/middle.ftl", "status": "added", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/3e834a7a6295127fe2a5dd8605c7903ad7e5918d/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmiddle.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/3e834a7a6295127fe2a5dd8605c7903ad7e5918d/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmiddle.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fmiddle.ftl?ref=3e834a7a6295127fe2a5dd8605c7903ad7e5918d", "patch": "@@ -0,0 +1,3 @@\n+middle_drop_check_overflow =\n+    overflow while adding drop-check rules for {$ty}\n+    .note = {$note}"}, {"sha": "ebd56b4e084d9529503d0107476bc68e1e9e00fc", "filename": "compiler/rustc_error_messages/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3e834a7a6295127fe2a5dd8605c7903ad7e5918d/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e834a7a6295127fe2a5dd8605c7903ad7e5918d/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Fsrc%2Flib.rs?ref=3e834a7a6295127fe2a5dd8605c7903ad7e5918d", "patch": "@@ -45,6 +45,7 @@ fluent_messages! {\n     interface => \"../locales/en-US/interface.ftl\",\n     infer => \"../locales/en-US/infer.ftl\",\n     lint => \"../locales/en-US/lint.ftl\",\n+    middle => \"../locales/en-US/middle.ftl\",\n     monomorphize => \"../locales/en-US/monomorphize.ftl\",\n     parser => \"../locales/en-US/parser.ftl\",\n     passes => \"../locales/en-US/passes.ftl\","}, {"sha": "d81eb52416974c671207b8551938fff17f66a74c", "filename": "compiler/rustc_middle/src/error.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3e834a7a6295127fe2a5dd8605c7903ad7e5918d/compiler%2Frustc_middle%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e834a7a6295127fe2a5dd8605c7903ad7e5918d/compiler%2Frustc_middle%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ferror.rs?ref=3e834a7a6295127fe2a5dd8605c7903ad7e5918d", "patch": "@@ -0,0 +1,14 @@\n+use rustc_macros::SessionDiagnostic;\n+use rustc_span::Span;\n+\n+use crate::ty::Ty;\n+\n+#[derive(SessionDiagnostic)]\n+#[diag(middle::drop_check_overflow, code = \"E0320\")]\n+#[note]\n+pub struct DropCheckOverflow<'tcx> {\n+    #[primary_span]\n+    pub span: Span,\n+    pub ty: Ty<'tcx>,\n+    pub note: String,\n+}"}, {"sha": "1e3a6bcfc7d32ef6287ac7a01ee07656dee271cc", "filename": "compiler/rustc_middle/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3e834a7a6295127fe2a5dd8605c7903ad7e5918d/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e834a7a6295127fe2a5dd8605c7903ad7e5918d/compiler%2Frustc_middle%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Flib.rs?ref=3e834a7a6295127fe2a5dd8605c7903ad7e5918d", "patch": "@@ -86,6 +86,7 @@ pub mod query;\n pub mod arena;\n #[macro_use]\n pub mod dep_graph;\n+pub(crate) mod error;\n pub mod hir;\n pub mod infer;\n pub mod lint;"}, {"sha": "8002f9286130f686b96c1f46f81fcccccb8e2a2d", "filename": "compiler/rustc_middle/src/traits/query.rs", "status": "modified", "additions": 3, "deletions": 10, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3e834a7a6295127fe2a5dd8605c7903ad7e5918d/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fquery.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e834a7a6295127fe2a5dd8605c7903ad7e5918d/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fquery.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fquery.rs?ref=3e834a7a6295127fe2a5dd8605c7903ad7e5918d", "patch": "@@ -5,11 +5,11 @@\n //! The providers for the queries defined here can be found in\n //! `rustc_traits`.\n \n+use crate::error::DropCheckOverflow;\n use crate::infer::canonical::{Canonical, QueryResponse};\n use crate::ty::error::TypeError;\n use crate::ty::subst::GenericArg;\n use crate::ty::{self, Ty, TyCtxt};\n-use rustc_errors::struct_span_err;\n use rustc_span::source_map::Span;\n use std::iter::FromIterator;\n \n@@ -117,15 +117,8 @@ pub struct DropckOutlivesResult<'tcx> {\n impl<'tcx> DropckOutlivesResult<'tcx> {\n     pub fn report_overflows(&self, tcx: TyCtxt<'tcx>, span: Span, ty: Ty<'tcx>) {\n         if let Some(overflow_ty) = self.overflows.get(0) {\n-            let mut err = struct_span_err!(\n-                tcx.sess,\n-                span,\n-                E0320,\n-                \"overflow while adding drop-check rules for {}\",\n-                ty,\n-            );\n-            err.note(&format!(\"overflowed on {}\", overflow_ty));\n-            err.emit();\n+            let note = format!(\"overflowed on {}\", overflow_ty);\n+            tcx.sess.emit_err(DropCheckOverflow { span, ty, note });\n         }\n     }\n "}]}