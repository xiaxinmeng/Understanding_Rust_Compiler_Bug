{"sha": "a1c79056e5df1236a82bdc6b315660f93ed5b11e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmExYzc5MDU2ZTVkZjEyMzZhODJiZGM2YjMxNTY2MGY5M2VkNWIxMWU=", "commit": {"author": {"name": "Christian", "email": "chris_veenman@hotmail.com", "date": "2019-04-01T20:49:14Z"}, "committer": {"name": "Christian", "email": "chris_veenman@hotmail.com", "date": "2019-04-01T20:49:14Z"}, "message": "Improved the example with numbers that can be exactly represented as floats and added a comment with the solution.", "tree": {"sha": "8e79dbce3b30eced26b6b88b917d77e2a9fbef28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e79dbce3b30eced26b6b88b917d77e2a9fbef28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a1c79056e5df1236a82bdc6b315660f93ed5b11e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a1c79056e5df1236a82bdc6b315660f93ed5b11e", "html_url": "https://github.com/rust-lang/rust/commit/a1c79056e5df1236a82bdc6b315660f93ed5b11e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a1c79056e5df1236a82bdc6b315660f93ed5b11e/comments", "author": null, "committer": null, "parents": [{"sha": "ea369cbc2f733568779215fd2aa68a54d5b75327", "url": "https://api.github.com/repos/rust-lang/rust/commits/ea369cbc2f733568779215fd2aa68a54d5b75327", "html_url": "https://github.com/rust-lang/rust/commit/ea369cbc2f733568779215fd2aa68a54d5b75327"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "77c2dfa51bbbf86334c20d139c97819e0e157a8f", "filename": "src/libcore/ops/arith.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a1c79056e5df1236a82bdc6b315660f93ed5b11e/src%2Flibcore%2Fops%2Farith.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a1c79056e5df1236a82bdc6b315660f93ed5b11e/src%2Flibcore%2Fops%2Farith.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops%2Farith.rs?ref=a1c79056e5df1236a82bdc6b315660f93ed5b11e", "patch": "@@ -545,10 +545,11 @@ macro_rules! rem_impl_float {\n         ///\n         /// # Examples\n         /// ```\n-        /// let x: f32 = 4.0;\n-        /// let y: f32 = 2.5;\n+        /// let x: f32 = 50.50;\n+        /// let y: f32 = 8.125;\n         /// let remainder = x - (x / y).trunc() * y;\n         ///\n+        /// // The answer to both operations is 1.75\n         /// assert_eq!(x % y, remainder);\n         /// ```\n         #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}