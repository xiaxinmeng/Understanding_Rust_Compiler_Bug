{"sha": "23ef22dd4880606c4c3dc908d30c2cbeabc37f58", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIzZWYyMmRkNDg4MDYwNmM0YzNkYzkwOGQzMGMyY2JlYWJjMzdmNTg=", "commit": {"author": {"name": "Gregoire Geis", "email": "git@gregoirege.is", "date": "2020-02-02T01:21:04Z"}, "committer": {"name": "Gregoire Geis", "email": "git@gregoirege.is", "date": "2020-02-03T19:18:10Z"}, "message": "Add regular onEnter command, allowing onEnter to be called without overriding the type command.", "tree": {"sha": "7b68d0cce259e3e945223b478d21b5d444d9e6c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b68d0cce259e3e945223b478d21b5d444d9e6c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/23ef22dd4880606c4c3dc908d30c2cbeabc37f58", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/23ef22dd4880606c4c3dc908d30c2cbeabc37f58", "html_url": "https://github.com/rust-lang/rust/commit/23ef22dd4880606c4c3dc908d30c2cbeabc37f58", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/23ef22dd4880606c4c3dc908d30c2cbeabc37f58/comments", "author": {"login": "71", "id": 7189784, "node_id": "MDQ6VXNlcjcxODk3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7189784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/71", "html_url": "https://github.com/71", "followers_url": "https://api.github.com/users/71/followers", "following_url": "https://api.github.com/users/71/following{/other_user}", "gists_url": "https://api.github.com/users/71/gists{/gist_id}", "starred_url": "https://api.github.com/users/71/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/71/subscriptions", "organizations_url": "https://api.github.com/users/71/orgs", "repos_url": "https://api.github.com/users/71/repos", "events_url": "https://api.github.com/users/71/events{/privacy}", "received_events_url": "https://api.github.com/users/71/received_events", "type": "User", "site_admin": false}, "committer": {"login": "71", "id": 7189784, "node_id": "MDQ6VXNlcjcxODk3ODQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7189784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/71", "html_url": "https://github.com/71", "followers_url": "https://api.github.com/users/71/followers", "following_url": "https://api.github.com/users/71/following{/other_user}", "gists_url": "https://api.github.com/users/71/gists{/gist_id}", "starred_url": "https://api.github.com/users/71/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/71/subscriptions", "organizations_url": "https://api.github.com/users/71/orgs", "repos_url": "https://api.github.com/users/71/repos", "events_url": "https://api.github.com/users/71/events{/privacy}", "received_events_url": "https://api.github.com/users/71/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b090ee5a65f9630146c2842bc51fcfcc8da08da1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b090ee5a65f9630146c2842bc51fcfcc8da08da1", "html_url": "https://github.com/rust-lang/rust/commit/b090ee5a65f9630146c2842bc51fcfcc8da08da1"}], "stats": {"total": 59, "additions": 40, "deletions": 19}, "files": [{"sha": "9987a28f577f19a8dac8f9a85c252cf6d0cbc044", "filename": "editors/code/package.json", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/23ef22dd4880606c4c3dc908d30c2cbeabc37f58/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/23ef22dd4880606c4c3dc908d30c2cbeabc37f58/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=23ef22dd4880606c4c3dc908d30c2cbeabc37f58", "patch": "@@ -114,6 +114,11 @@\n                 \"command\": \"rust-analyzer.reload\",\n                 \"title\": \"Restart server\",\n                 \"category\": \"Rust Analyzer\"\n+            },\n+            {\n+                \"command\": \"rust-analyzer.onEnter\",\n+                \"title\": \"Enhanced enter key\",\n+                \"category\": \"Rust Analyzer\"\n             }\n         ],\n         \"keybindings\": ["}, {"sha": "1b3d3d741c33da19bc54a7c8f0e685645327da3b", "filename": "editors/code/src/commands/on_enter.ts", "status": "modified", "additions": 33, "deletions": 18, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/23ef22dd4880606c4c3dc908d30c2cbeabc37f58/editors%2Fcode%2Fsrc%2Fcommands%2Fon_enter.ts", "raw_url": "https://github.com/rust-lang/rust/raw/23ef22dd4880606c4c3dc908d30c2cbeabc37f58/editors%2Fcode%2Fsrc%2Fcommands%2Fon_enter.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands%2Fon_enter.ts?ref=23ef22dd4880606c4c3dc908d30c2cbeabc37f58", "patch": "@@ -1,28 +1,43 @@\n+import * as vscode from 'vscode';\n import * as lc from 'vscode-languageclient';\n \n import { applySourceChange, SourceChange } from '../source_change';\n import { Cmd, Ctx } from '../ctx';\n \n-export function onEnter(ctx: Ctx): Cmd {\n+async function handleKeypress(ctx: Ctx) {\n+    const editor = ctx.activeRustEditor;\n+    const client = ctx.client;\n+    if (!editor) return false;\n+    if (!client) return false;\n+\n+    const request: lc.TextDocumentPositionParams = {\n+        textDocument: { uri: editor.document.uri.toString() },\n+        position: client.code2ProtocolConverter.asPosition(\n+            editor.selection.active,\n+        ),\n+    };\n+    const change = await client.sendRequest<undefined | SourceChange>(\n+        'rust-analyzer/onEnter',\n+        request,\n+    );\n+    if (!change) return false;\n+\n+    await applySourceChange(ctx, change);\n+    return true;\n+}\n+\n+export function onEnterOverride(ctx: Ctx): Cmd {\n     return async (event: { text: string }) => {\n-        const editor = ctx.activeRustEditor;\n-        const client = ctx.client;\n-        if (!editor || event.text !== '\\n') return false;\n-        if (!client) return false;\n+        if (event.text === '\\n') {\n+            handleKeypress(ctx);\n+        }\n+    };\n+}\n \n-        const request: lc.TextDocumentPositionParams = {\n-            textDocument: { uri: editor.document.uri.toString() },\n-            position: client.code2ProtocolConverter.asPosition(\n-                editor.selection.active,\n-            ),\n-        };\n-        const change = await client.sendRequest<undefined | SourceChange>(\n-            'rust-analyzer/onEnter',\n-            request,\n-        );\n-        if (!change) return false;\n+export function onEnter(ctx: Ctx): Cmd {\n+    return async () => {\n+        if (handleKeypress(ctx)) return;\n \n-        await applySourceChange(ctx, change);\n-        return true;\n+        await vscode.commands.executeCommand('default:type', { text: '\\n' });\n     };\n }"}, {"sha": "5c061e72fd3cd80a9b98a4f8cd634af754cf4c4d", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/23ef22dd4880606c4c3dc908d30c2cbeabc37f58/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/23ef22dd4880606c4c3dc908d30c2cbeabc37f58/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=23ef22dd4880606c4c3dc908d30c2cbeabc37f58", "patch": "@@ -21,6 +21,7 @@ export async function activate(context: vscode.ExtensionContext) {\n     ctx.registerCommand('expandMacro', commands.expandMacro);\n     ctx.registerCommand('run', commands.run);\n     ctx.registerCommand('reload', commands.reload);\n+    ctx.registerCommand('onEnter', commands.onEnter);\n \n     // Internal commands which are invoked by the server.\n     ctx.registerCommand('runSingle', commands.runSingle);\n@@ -29,7 +30,7 @@ export async function activate(context: vscode.ExtensionContext) {\n     ctx.registerCommand('selectAndApplySourceChange', commands.selectAndApplySourceChange);\n \n     if (ctx.config.enableEnhancedTyping) {\n-        ctx.overrideCommand('type', commands.onEnter);\n+        ctx.overrideCommand('type', commands.onEnterOverride);\n     }\n     activateStatusDisplay(ctx);\n "}]}