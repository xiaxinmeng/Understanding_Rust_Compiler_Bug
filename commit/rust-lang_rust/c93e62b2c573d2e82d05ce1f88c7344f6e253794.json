{"sha": "c93e62b2c573d2e82d05ce1f88c7344f6e253794", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5M2U2MmIyYzU3M2QyZTgyZDA1Y2UxZjg4YzczNDRmNmUyNTM3OTQ=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2017-07-13T11:29:14Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo.net", "date": "2017-07-13T11:29:25Z"}, "message": "Adapt cgu-partitioning tests to pre-trans symbol internalization.", "tree": {"sha": "0deef86e66f57c9c230bc9c5f3c0e5be02638850", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0deef86e66f57c9c230bc9c5f3c0e5be02638850"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c93e62b2c573d2e82d05ce1f88c7344f6e253794", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c93e62b2c573d2e82d05ce1f88c7344f6e253794", "html_url": "https://github.com/rust-lang/rust/commit/c93e62b2c573d2e82d05ce1f88c7344f6e253794", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c93e62b2c573d2e82d05ce1f88c7344f6e253794/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f07eb3261c89fb7b34d0eed1e446c73e55f7d2f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f07eb3261c89fb7b34d0eed1e446c73e55f7d2f", "html_url": "https://github.com/rust-lang/rust/commit/2f07eb3261c89fb7b34d0eed1e446c73e55f7d2f"}], "stats": {"total": 106, "additions": 53, "deletions": 53}, "files": [{"sha": "4e6ae167024e3986560328c39142ab9143364004", "filename": "src/test/codegen-units/partitioning/extern-drop-glue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-drop-glue.rs?ref=c93e62b2c573d2e82d05ce1f88c7344f6e253794", "patch": "@@ -24,7 +24,7 @@ extern crate cgu_extern_drop_glue;\n \n struct LocalStruct(cgu_extern_drop_glue::Struct);\n \n-//~ TRANS_ITEM fn extern_drop_glue::user[0] @@ extern_drop_glue[External]\n+//~ TRANS_ITEM fn extern_drop_glue::user[0] @@ extern_drop_glue[Internal]\n fn user()\n {\n     //~ TRANS_ITEM fn core::ptr[0]::drop_in_place[0]<extern_drop_glue::LocalStruct[0]> @@ extern_drop_glue[Internal]\n@@ -36,7 +36,7 @@ mod mod1 {\n \n     struct LocalStruct(cgu_extern_drop_glue::Struct);\n \n-    //~ TRANS_ITEM fn extern_drop_glue::mod1[0]::user[0] @@ extern_drop_glue-mod1[External]\n+    //~ TRANS_ITEM fn extern_drop_glue::mod1[0]::user[0] @@ extern_drop_glue-mod1[Internal]\n     fn user()\n     {\n         //~ TRANS_ITEM fn core::ptr[0]::drop_in_place[0]<extern_drop_glue::mod1[0]::LocalStruct[0]> @@ extern_drop_glue-mod1[Internal]"}, {"sha": "bdb31265e2fb2e14692fad0d841def04eaac321e", "filename": "src/test/codegen-units/partitioning/extern-generic.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fextern-generic.rs?ref=c93e62b2c573d2e82d05ce1f88c7344f6e253794", "patch": "@@ -19,23 +19,23 @@\n // aux-build:cgu_generic_function.rs\n extern crate cgu_generic_function;\n \n-//~ TRANS_ITEM fn extern_generic::user[0] @@ extern_generic[External]\n+//~ TRANS_ITEM fn extern_generic::user[0] @@ extern_generic[Internal]\n fn user() {\n     let _ = cgu_generic_function::foo(\"abc\");\n }\n \n mod mod1 {\n     use cgu_generic_function;\n \n-    //~ TRANS_ITEM fn extern_generic::mod1[0]::user[0] @@ extern_generic-mod1[External]\n+    //~ TRANS_ITEM fn extern_generic::mod1[0]::user[0] @@ extern_generic-mod1[Internal]\n     fn user() {\n         let _ = cgu_generic_function::foo(\"abc\");\n     }\n \n     mod mod1 {\n         use cgu_generic_function;\n \n-        //~ TRANS_ITEM fn extern_generic::mod1[0]::mod1[0]::user[0] @@ extern_generic-mod1-mod1[External]\n+        //~ TRANS_ITEM fn extern_generic::mod1[0]::mod1[0]::user[0] @@ extern_generic-mod1-mod1[Internal]\n         fn user() {\n             let _ = cgu_generic_function::foo(\"abc\");\n         }\n@@ -45,18 +45,18 @@ mod mod1 {\n mod mod2 {\n     use cgu_generic_function;\n \n-    //~ TRANS_ITEM fn extern_generic::mod2[0]::user[0] @@ extern_generic-mod2[External]\n+    //~ TRANS_ITEM fn extern_generic::mod2[0]::user[0] @@ extern_generic-mod2[Internal]\n     fn user() {\n         let _ = cgu_generic_function::foo(\"abc\");\n     }\n }\n \n mod mod3 {\n-    //~ TRANS_ITEM fn extern_generic::mod3[0]::non_user[0] @@ extern_generic-mod3[External]\n+    //~ TRANS_ITEM fn extern_generic::mod3[0]::non_user[0] @@ extern_generic-mod3[Internal]\n     fn non_user() {}\n }\n \n // Make sure the two generic functions from the extern crate get instantiated\n // once for the current crate\n //~ TRANS_ITEM fn cgu_generic_function::foo[0]<&str> @@ cgu_generic_function.volatile[External]\n-//~ TRANS_ITEM fn cgu_generic_function::bar[0]<&str> @@ cgu_generic_function.volatile[External]\n+//~ TRANS_ITEM fn cgu_generic_function::bar[0]<&str> @@ cgu_generic_function.volatile[Internal]"}, {"sha": "20920c9ebe432d63ff0d8d0da52d1f2f232d542e", "filename": "src/test/codegen-units/partitioning/inlining-from-extern-crate.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Finlining-from-extern-crate.rs?ref=c93e62b2c573d2e82d05ce1f88c7344f6e253794", "patch": "@@ -37,7 +37,7 @@ pub fn user()\n mod mod1 {\n     use cgu_explicit_inlining;\n \n-    //~ TRANS_ITEM fn inlining_from_extern_crate::mod1[0]::user[0] @@ inlining_from_extern_crate-mod1[External]\n+    //~ TRANS_ITEM fn inlining_from_extern_crate::mod1[0]::user[0] @@ inlining_from_extern_crate-mod1[Internal]\n     pub fn user()\n     {\n         cgu_explicit_inlining::inlined();\n@@ -50,7 +50,7 @@ mod mod1 {\n mod mod2 {\n     use cgu_explicit_inlining;\n \n-    //~ TRANS_ITEM fn inlining_from_extern_crate::mod2[0]::user[0] @@ inlining_from_extern_crate-mod2[External]\n+    //~ TRANS_ITEM fn inlining_from_extern_crate::mod2[0]::user[0] @@ inlining_from_extern_crate-mod2[Internal]\n     pub fn user()\n     {\n         cgu_explicit_inlining::always_inlined();"}, {"sha": "d2ce847e108f0bf0345d6d57c917c3f4f0ef7f01", "filename": "src/test/codegen-units/partitioning/local-drop-glue.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-drop-glue.rs?ref=c93e62b2c573d2e82d05ce1f88c7344f6e253794", "patch": "@@ -31,7 +31,7 @@ struct Outer {\n     _a: Struct\n }\n \n-//~ TRANS_ITEM fn local_drop_glue::user[0] @@ local_drop_glue[External]\n+//~ TRANS_ITEM fn local_drop_glue::user[0] @@ local_drop_glue[Internal]\n fn user()\n {\n     let _ = Outer {\n@@ -52,7 +52,7 @@ mod mod1\n         _b: (u32, Struct),\n     }\n \n-    //~ TRANS_ITEM fn local_drop_glue::mod1[0]::user[0] @@ local_drop_glue-mod1[External]\n+    //~ TRANS_ITEM fn local_drop_glue::mod1[0]::user[0] @@ local_drop_glue-mod1[Internal]\n     fn user()\n     {\n         let _ = Struct2 {"}, {"sha": "33e3745502fcf2259e97eaee0bf9bf077fe356b7", "filename": "src/test/codegen-units/partitioning/local-generic.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-generic.rs?ref=c93e62b2c573d2e82d05ce1f88c7344f6e253794", "patch": "@@ -22,23 +22,23 @@\n //~ TRANS_ITEM fn local_generic::generic[0]<&str> @@ local_generic.volatile[External]\n pub fn generic<T>(x: T) -> T { x }\n \n-//~ TRANS_ITEM fn local_generic::user[0] @@ local_generic[External]\n+//~ TRANS_ITEM fn local_generic::user[0] @@ local_generic[Internal]\n fn user() {\n     let _ = generic(0u32);\n }\n \n mod mod1 {\n     pub use super::generic;\n \n-    //~ TRANS_ITEM fn local_generic::mod1[0]::user[0] @@ local_generic-mod1[External]\n+    //~ TRANS_ITEM fn local_generic::mod1[0]::user[0] @@ local_generic-mod1[Internal]\n     fn user() {\n         let _ = generic(0u64);\n     }\n \n     mod mod1 {\n         use super::generic;\n \n-        //~ TRANS_ITEM fn local_generic::mod1[0]::mod1[0]::user[0] @@ local_generic-mod1-mod1[External]\n+        //~ TRANS_ITEM fn local_generic::mod1[0]::mod1[0]::user[0] @@ local_generic-mod1-mod1[Internal]\n         fn user() {\n             let _ = generic('c');\n         }\n@@ -48,7 +48,7 @@ mod mod1 {\n mod mod2 {\n     use super::generic;\n \n-    //~ TRANS_ITEM fn local_generic::mod2[0]::user[0] @@ local_generic-mod2[External]\n+    //~ TRANS_ITEM fn local_generic::mod2[0]::user[0] @@ local_generic-mod2[Internal]\n     fn user() {\n         let _ = generic(\"abc\");\n     }"}, {"sha": "a4d9e60d2280cc62a585a23ddd18abd5437ef239", "filename": "src/test/codegen-units/partitioning/local-inlining.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-inlining.rs?ref=c93e62b2c573d2e82d05ce1f88c7344f6e253794", "patch": "@@ -30,7 +30,7 @@ mod inline {\n mod user1 {\n     use super::inline;\n \n-    //~ TRANS_ITEM fn local_inlining::user1[0]::foo[0] @@ local_inlining-user1[External]\n+    //~ TRANS_ITEM fn local_inlining::user1[0]::foo[0] @@ local_inlining-user1[Internal]\n     fn foo() {\n         inline::inlined_function();\n     }\n@@ -39,15 +39,15 @@ mod user1 {\n mod user2 {\n     use super::inline;\n \n-    //~ TRANS_ITEM fn local_inlining::user2[0]::bar[0] @@ local_inlining-user2[External]\n+    //~ TRANS_ITEM fn local_inlining::user2[0]::bar[0] @@ local_inlining-user2[Internal]\n     fn bar() {\n         inline::inlined_function();\n     }\n }\n \n mod non_user {\n \n-    //~ TRANS_ITEM fn local_inlining::non_user[0]::baz[0] @@ local_inlining-non_user[External]\n+    //~ TRANS_ITEM fn local_inlining::non_user[0]::baz[0] @@ local_inlining-non_user[Internal]\n     fn baz() {\n \n     }"}, {"sha": "1beaa186d9ee5815e9d4deca113b4ab0d19ebdec", "filename": "src/test/codegen-units/partitioning/local-transitive-inlining.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Flocal-transitive-inlining.rs?ref=c93e62b2c573d2e82d05ce1f88c7344f6e253794", "patch": "@@ -39,15 +39,15 @@ mod direct_user {\n mod indirect_user {\n     use super::direct_user;\n \n-    //~ TRANS_ITEM fn local_transitive_inlining::indirect_user[0]::bar[0] @@ local_transitive_inlining-indirect_user[External]\n+    //~ TRANS_ITEM fn local_transitive_inlining::indirect_user[0]::bar[0] @@ local_transitive_inlining-indirect_user[Internal]\n     fn bar() {\n         direct_user::foo();\n     }\n }\n \n mod non_user {\n \n-    //~ TRANS_ITEM fn local_transitive_inlining::non_user[0]::baz[0] @@ local_transitive_inlining-non_user[External]\n+    //~ TRANS_ITEM fn local_transitive_inlining::non_user[0]::baz[0] @@ local_transitive_inlining-non_user[Internal]\n     fn baz() {\n \n     }"}, {"sha": "9bdbc8b85e8b8a9bd2d45fc8381180825a75ad60", "filename": "src/test/codegen-units/partitioning/regular-modules.rs", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fregular-modules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fregular-modules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fregular-modules.rs?ref=c93e62b2c573d2e82d05ce1f88c7344f6e253794", "patch": "@@ -16,67 +16,67 @@\n #![allow(dead_code)]\n #![crate_type=\"lib\"]\n \n-//~ TRANS_ITEM fn regular_modules::foo[0] @@ regular_modules[External]\n+//~ TRANS_ITEM fn regular_modules::foo[0] @@ regular_modules[Internal]\n fn foo() {}\n \n-//~ TRANS_ITEM fn regular_modules::bar[0] @@ regular_modules[External]\n+//~ TRANS_ITEM fn regular_modules::bar[0] @@ regular_modules[Internal]\n fn bar() {}\n \n-//~ TRANS_ITEM static regular_modules::BAZ[0] @@ regular_modules[External]\n+//~ TRANS_ITEM static regular_modules::BAZ[0] @@ regular_modules[Internal]\n static BAZ: u64 = 0;\n \n mod mod1 {\n \n-    //~ TRANS_ITEM fn regular_modules::mod1[0]::foo[0] @@ regular_modules-mod1[External]\n+    //~ TRANS_ITEM fn regular_modules::mod1[0]::foo[0] @@ regular_modules-mod1[Internal]\n     fn foo() {}\n-    //~ TRANS_ITEM fn regular_modules::mod1[0]::bar[0] @@ regular_modules-mod1[External]\n+    //~ TRANS_ITEM fn regular_modules::mod1[0]::bar[0] @@ regular_modules-mod1[Internal]\n     fn bar() {}\n-    //~ TRANS_ITEM static regular_modules::mod1[0]::BAZ[0] @@ regular_modules-mod1[External]\n+    //~ TRANS_ITEM static regular_modules::mod1[0]::BAZ[0] @@ regular_modules-mod1[Internal]\n     static BAZ: u64 = 0;\n \n     mod mod1 {\n-        //~ TRANS_ITEM fn regular_modules::mod1[0]::mod1[0]::foo[0] @@ regular_modules-mod1-mod1[External]\n+        //~ TRANS_ITEM fn regular_modules::mod1[0]::mod1[0]::foo[0] @@ regular_modules-mod1-mod1[Internal]\n         fn foo() {}\n-        //~ TRANS_ITEM fn regular_modules::mod1[0]::mod1[0]::bar[0] @@ regular_modules-mod1-mod1[External]\n+        //~ TRANS_ITEM fn regular_modules::mod1[0]::mod1[0]::bar[0] @@ regular_modules-mod1-mod1[Internal]\n         fn bar() {}\n-        //~ TRANS_ITEM static regular_modules::mod1[0]::mod1[0]::BAZ[0] @@ regular_modules-mod1-mod1[External]\n+        //~ TRANS_ITEM static regular_modules::mod1[0]::mod1[0]::BAZ[0] @@ regular_modules-mod1-mod1[Internal]\n         static BAZ: u64 = 0;\n     }\n \n     mod mod2 {\n-        //~ TRANS_ITEM fn regular_modules::mod1[0]::mod2[0]::foo[0] @@ regular_modules-mod1-mod2[External]\n+        //~ TRANS_ITEM fn regular_modules::mod1[0]::mod2[0]::foo[0] @@ regular_modules-mod1-mod2[Internal]\n         fn foo() {}\n-        //~ TRANS_ITEM fn regular_modules::mod1[0]::mod2[0]::bar[0] @@ regular_modules-mod1-mod2[External]\n+        //~ TRANS_ITEM fn regular_modules::mod1[0]::mod2[0]::bar[0] @@ regular_modules-mod1-mod2[Internal]\n         fn bar() {}\n-        //~ TRANS_ITEM static regular_modules::mod1[0]::mod2[0]::BAZ[0] @@ regular_modules-mod1-mod2[External]\n+        //~ TRANS_ITEM static regular_modules::mod1[0]::mod2[0]::BAZ[0] @@ regular_modules-mod1-mod2[Internal]\n         static BAZ: u64 = 0;\n     }\n }\n \n mod mod2 {\n \n-    //~ TRANS_ITEM fn regular_modules::mod2[0]::foo[0] @@ regular_modules-mod2[External]\n+    //~ TRANS_ITEM fn regular_modules::mod2[0]::foo[0] @@ regular_modules-mod2[Internal]\n     fn foo() {}\n-    //~ TRANS_ITEM fn regular_modules::mod2[0]::bar[0] @@ regular_modules-mod2[External]\n+    //~ TRANS_ITEM fn regular_modules::mod2[0]::bar[0] @@ regular_modules-mod2[Internal]\n     fn bar() {}\n-    //~ TRANS_ITEM static regular_modules::mod2[0]::BAZ[0] @@ regular_modules-mod2[External]\n+    //~ TRANS_ITEM static regular_modules::mod2[0]::BAZ[0] @@ regular_modules-mod2[Internal]\n     static BAZ: u64 = 0;\n \n     mod mod1 {\n-        //~ TRANS_ITEM fn regular_modules::mod2[0]::mod1[0]::foo[0] @@ regular_modules-mod2-mod1[External]\n+        //~ TRANS_ITEM fn regular_modules::mod2[0]::mod1[0]::foo[0] @@ regular_modules-mod2-mod1[Internal]\n         fn foo() {}\n-        //~ TRANS_ITEM fn regular_modules::mod2[0]::mod1[0]::bar[0] @@ regular_modules-mod2-mod1[External]\n+        //~ TRANS_ITEM fn regular_modules::mod2[0]::mod1[0]::bar[0] @@ regular_modules-mod2-mod1[Internal]\n         fn bar() {}\n-        //~ TRANS_ITEM static regular_modules::mod2[0]::mod1[0]::BAZ[0] @@ regular_modules-mod2-mod1[External]\n+        //~ TRANS_ITEM static regular_modules::mod2[0]::mod1[0]::BAZ[0] @@ regular_modules-mod2-mod1[Internal]\n         static BAZ: u64 = 0;\n     }\n \n     mod mod2 {\n-        //~ TRANS_ITEM fn regular_modules::mod2[0]::mod2[0]::foo[0] @@ regular_modules-mod2-mod2[External]\n+        //~ TRANS_ITEM fn regular_modules::mod2[0]::mod2[0]::foo[0] @@ regular_modules-mod2-mod2[Internal]\n         fn foo() {}\n-        //~ TRANS_ITEM fn regular_modules::mod2[0]::mod2[0]::bar[0] @@ regular_modules-mod2-mod2[External]\n+        //~ TRANS_ITEM fn regular_modules::mod2[0]::mod2[0]::bar[0] @@ regular_modules-mod2-mod2[Internal]\n         fn bar() {}\n-        //~ TRANS_ITEM static regular_modules::mod2[0]::mod2[0]::BAZ[0] @@ regular_modules-mod2-mod2[External]\n+        //~ TRANS_ITEM static regular_modules::mod2[0]::mod2[0]::BAZ[0] @@ regular_modules-mod2-mod2[Internal]\n         static BAZ: u64 = 0;\n     }\n }"}, {"sha": "8cbce12b52cad5256de4bbb35d33ebd722ab1360", "filename": "src/test/codegen-units/partitioning/statics.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fstatics.rs?ref=c93e62b2c573d2e82d05ce1f88c7344f6e253794", "patch": "@@ -15,34 +15,34 @@\n \n #![crate_type=\"lib\"]\n \n-//~ TRANS_ITEM static statics::FOO[0] @@ statics[External]\n+//~ TRANS_ITEM static statics::FOO[0] @@ statics[Internal]\n static FOO: u32 = 0;\n \n-//~ TRANS_ITEM static statics::BAR[0] @@ statics[External]\n+//~ TRANS_ITEM static statics::BAR[0] @@ statics[Internal]\n static BAR: u32 = 0;\n \n-//~ TRANS_ITEM fn statics::function[0] @@ statics[External]\n+//~ TRANS_ITEM fn statics::function[0] @@ statics[Internal]\n fn function() {\n-    //~ TRANS_ITEM static statics::function[0]::FOO[0] @@ statics[External]\n+    //~ TRANS_ITEM static statics::function[0]::FOO[0] @@ statics[Internal]\n     static FOO: u32 = 0;\n \n-    //~ TRANS_ITEM static statics::function[0]::BAR[0] @@ statics[External]\n+    //~ TRANS_ITEM static statics::function[0]::BAR[0] @@ statics[Internal]\n     static BAR: u32 = 0;\n }\n \n mod mod1 {\n-    //~ TRANS_ITEM static statics::mod1[0]::FOO[0] @@ statics-mod1[External]\n+    //~ TRANS_ITEM static statics::mod1[0]::FOO[0] @@ statics-mod1[Internal]\n     static FOO: u32 = 0;\n \n-    //~ TRANS_ITEM static statics::mod1[0]::BAR[0] @@ statics-mod1[External]\n+    //~ TRANS_ITEM static statics::mod1[0]::BAR[0] @@ statics-mod1[Internal]\n     static BAR: u32 = 0;\n \n-    //~ TRANS_ITEM fn statics::mod1[0]::function[0] @@ statics-mod1[External]\n+    //~ TRANS_ITEM fn statics::mod1[0]::function[0] @@ statics-mod1[Internal]\n     fn function() {\n-        //~ TRANS_ITEM static statics::mod1[0]::function[0]::FOO[0] @@ statics-mod1[External]\n+        //~ TRANS_ITEM static statics::mod1[0]::function[0]::FOO[0] @@ statics-mod1[Internal]\n         static FOO: u32 = 0;\n \n-        //~ TRANS_ITEM static statics::mod1[0]::function[0]::BAR[0] @@ statics-mod1[External]\n+        //~ TRANS_ITEM static statics::mod1[0]::function[0]::BAR[0] @@ statics-mod1[Internal]\n         static BAR: u32 = 0;\n     }\n }"}, {"sha": "74f2f8435670110c528988473020e683242e648e", "filename": "src/test/codegen-units/partitioning/vtable-through-const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c93e62b2c573d2e82d05ce1f88c7344f6e253794/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen-units%2Fpartitioning%2Fvtable-through-const.rs?ref=c93e62b2c573d2e82d05ce1f88c7344f6e253794", "patch": "@@ -67,7 +67,7 @@ mod mod1 {\n     pub const ID_I64: fn(i64) -> i64 = id::<i64>;\n }\n \n-//~ TRANS_ITEM fn vtable_through_const::main[0] @@ vtable_through_const[External]\n+//~ TRANS_ITEM fn vtable_through_const::main[0] @@ vtable_through_const[Internal]\n fn main() {\n     //~ TRANS_ITEM fn core::ptr[0]::drop_in_place[0]<u32> @@ vtable_through_const[Internal]\n "}]}