{"sha": "b5963f07e611cf2a09a310eb74c1a93adfaeb9de", "node_id": "C_kwDOAAsO6NoAKGI1OTYzZjA3ZTYxMWNmMmEwOWEzMTBlYjc0YzFhOTNhZGZhZWI5ZGU", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-10-11T15:50:41Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2022-10-11T15:50:41Z"}, "message": "rustdoc: remove unused classes from sidebar\n\nSince 98f05a0282625a5fda6e90ebf3b05a4bd7608f65 removed separate colors\nfrom the currently-selected item, there's no need to have item classes on\nsidebar links.", "tree": {"sha": "565a8748979e254bae7f22049a4b93fa5f5e83a7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/565a8748979e254bae7f22049a4b93fa5f5e83a7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b5963f07e611cf2a09a310eb74c1a93adfaeb9de", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b5963f07e611cf2a09a310eb74c1a93adfaeb9de", "html_url": "https://github.com/rust-lang/rust/commit/b5963f07e611cf2a09a310eb74c1a93adfaeb9de", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b5963f07e611cf2a09a310eb74c1a93adfaeb9de/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb93450ec4af83c20e9ba6c8e575aca55423001a", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb93450ec4af83c20e9ba6c8e575aca55423001a", "html_url": "https://github.com/rust-lang/rust/commit/bb93450ec4af83c20e9ba6c8e575aca55423001a"}], "stats": {"total": 136, "additions": 67, "deletions": 69}, "files": [{"sha": "dc5b8acdf53a86cf73e99e35b3a26651457155be", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b5963f07e611cf2a09a310eb74c1a93adfaeb9de/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/b5963f07e611cf2a09a310eb74c1a93adfaeb9de/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=b5963f07e611cf2a09a310eb74c1a93adfaeb9de", "patch": "@@ -451,21 +451,19 @@ function loadCss(cssFileName) {\n                 const name = item[0];\n                 const desc = item[1]; // can be null\n \n-                let klass = shortty;\n                 let path;\n                 if (shortty === \"mod\") {\n                     path = name + \"/index.html\";\n                 } else {\n                     path = shortty + \".\" + name + \".html\";\n                 }\n                 const current_page = document.location.href.split(\"/\").pop();\n-                if (path === current_page) {\n-                    klass += \" current\";\n-                }\n                 const link = document.createElement(\"a\");\n                 link.href = path;\n                 link.title = desc;\n-                link.className = klass;\n+                if (path === current_page) {\n+                    link.className = \"current\";\n+                }\n                 link.textContent = name;\n                 const li = document.createElement(\"li\");\n                 li.appendChild(link);"}, {"sha": "18a1a3fadea5527eaf492f793a617aea856b7258", "filename": "src/test/rustdoc-gui/sidebar-links-color.goml", "status": "modified", "additions": 63, "deletions": 63, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/b5963f07e611cf2a09a310eb74c1a93adfaeb9de/src%2Ftest%2Frustdoc-gui%2Fsidebar-links-color.goml", "raw_url": "https://github.com/rust-lang/rust/raw/b5963f07e611cf2a09a310eb74c1a93adfaeb9de/src%2Ftest%2Frustdoc-gui%2Fsidebar-links-color.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar-links-color.goml?ref=b5963f07e611cf2a09a310eb74c1a93adfaeb9de", "patch": "@@ -13,72 +13,72 @@ reload:\n \n // Struct\n assert-css: (\n-    \".sidebar a.struct:not(.current)\",\n+    \".sidebar .block.struct a:not(.current)\",\n     {\"color\": \"rgb(83, 177, 219)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.struct:not(.current)\"\n+move-cursor-to: \".sidebar .block.struct a:not(.current)\"\n assert-css: (\n-    \".sidebar a.struct:hover\",\n+    \".sidebar .block.struct a:hover\",\n     {\"color\": \"rgb(255, 180, 76)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n // Enum\n assert-css: (\n-    \".sidebar a.enum\",\n+    \".sidebar .block.enum a\",\n     {\"color\": \"rgb(83, 177, 219)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.enum\"\n+move-cursor-to: \".sidebar .block.enum a\"\n assert-css: (\n-    \".sidebar a.enum:hover\",\n+    \".sidebar .block.enum a:hover\",\n     {\"color\": \"rgb(255, 180, 76)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n // Union\n assert-css: (\n-    \".sidebar a.union\",\n+    \".sidebar .block.union a\",\n     {\"color\": \"rgb(83, 177, 219)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.union\"\n+move-cursor-to: \".sidebar .block.union a\"\n assert-css: (\n-    \".sidebar a.union:hover\",\n+    \".sidebar .block.union a:hover\",\n     {\"color\": \"rgb(255, 180, 76)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n // Trait\n assert-css: (\n-    \".sidebar a.trait\",\n+    \".sidebar .block.trait a\",\n     {\"color\": \"rgb(83, 177, 219)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.trait\"\n+move-cursor-to: \".sidebar .block.trait a\"\n assert-css: (\n-    \".sidebar a.trait:hover\",\n+    \".sidebar .block.trait a:hover\",\n     {\"color\": \"rgb(255, 180, 76)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n // Function\n assert-css: (\n-    \".sidebar a.fn\",\n+    \".sidebar .block.fn a\",\n     {\"color\": \"rgb(83, 177, 219)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.fn\"\n+move-cursor-to: \".sidebar .block.fn a\"\n assert-css: (\n-    \".sidebar a.fn:hover\",\n+    \".sidebar .block.fn a:hover\",\n     {\"color\": \"rgb(255, 180, 76)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n // Type definition\n assert-css: (\n-    \".sidebar a.type\",\n+    \".sidebar .block.type a\",\n     {\"color\": \"rgb(83, 177, 219)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.type\"\n+move-cursor-to: \".sidebar .block.type a\"\n assert-css: (\n-    \".sidebar a.type:hover\",\n+    \".sidebar .block.type a:hover\",\n     {\"color\": \"rgb(255, 180, 76)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n // Keyword\n assert-css: (\n-    \".sidebar a.keyword\",\n+    \".sidebar .block.keyword a\",\n     {\"color\": \"rgb(83, 177, 219)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.keyword\"\n+move-cursor-to: \".sidebar .block.keyword a\"\n assert-css: (\n-    \".sidebar a.keyword:hover\",\n+    \".sidebar .block.keyword a:hover\",\n     {\"color\": \"rgb(255, 180, 76)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n \n@@ -88,72 +88,72 @@ reload:\n \n // Struct\n assert-css: (\n-    \".sidebar a.struct:not(.current)\",\n+    \".sidebar .block.struct a:not(.current)\",\n     {\"color\": \"rgb(253, 191, 53)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.struct:not(.current)\"\n+move-cursor-to: \".sidebar .block.struct a:not(.current)\"\n assert-css: (\n-    \".sidebar a.struct:hover\",\n+    \".sidebar .block.struct a:hover\",\n     {\"color\": \"rgb(253, 191, 53)\", \"background-color\": \"rgb(68, 68, 68)\"},\n )\n // Enum\n assert-css: (\n-    \".sidebar a.enum\",\n+    \".sidebar .block.enum a\",\n     {\"color\": \"rgb(253, 191, 53)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.enum\"\n+move-cursor-to: \".sidebar .block.enum a\"\n assert-css: (\n-    \".sidebar a.enum:hover\",\n+    \".sidebar .block.enum a:hover\",\n     {\"color\": \"rgb(253, 191, 53)\", \"background-color\": \"rgb(68, 68, 68)\"},\n )\n // Union\n assert-css: (\n-    \".sidebar a.union\",\n+    \".sidebar .block.union a\",\n     {\"color\": \"rgb(253, 191, 53)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.union\"\n+move-cursor-to: \".sidebar .block.union a\"\n assert-css: (\n-    \".sidebar a.union:hover\",\n+    \".sidebar .block.union a:hover\",\n     {\"color\": \"rgb(253, 191, 53)\", \"background-color\": \"rgb(68, 68, 68)\"},\n )\n // Trait\n assert-css: (\n-    \".sidebar a.trait\",\n+    \".sidebar .block.trait a\",\n     {\"color\": \"rgb(253, 191, 53)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.trait\"\n+move-cursor-to: \".sidebar .block.trait a\"\n assert-css: (\n-    \".sidebar a.trait:hover\",\n+    \".sidebar .block.trait a:hover\",\n     {\"color\": \"rgb(253, 191, 53)\", \"background-color\": \"rgb(68, 68, 68)\"},\n )\n // Function\n assert-css: (\n-    \".sidebar a.fn\",\n+    \".sidebar .block.fn a\",\n     {\"color\": \"rgb(253, 191, 53)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.fn\"\n+move-cursor-to: \".sidebar .block.fn a\"\n assert-css: (\n-    \".sidebar a.fn:hover\",\n+    \".sidebar .block.fn a:hover\",\n     {\"color\": \"rgb(253, 191, 53)\", \"background-color\": \"rgb(68, 68, 68)\"},\n )\n // Type definition\n assert-css: (\n-    \".sidebar a.type\",\n+    \".sidebar .block.type a\",\n     {\"color\": \"rgb(253, 191, 53)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.type\"\n+move-cursor-to: \".sidebar .block.type a\"\n assert-css: (\n-    \".sidebar a.type:hover\",\n+    \".sidebar .block.type a:hover\",\n     {\"color\": \"rgb(253, 191, 53)\", \"background-color\": \"rgb(68, 68, 68)\"},\n )\n // Keyword\n assert-css: (\n-    \".sidebar a.keyword\",\n+    \".sidebar .block.keyword a\",\n     {\"color\": \"rgb(253, 191, 53)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.keyword\"\n+move-cursor-to: \".sidebar .block.keyword a\"\n assert-css: (\n-    \".sidebar a.keyword:hover\",\n+    \".sidebar .block.keyword a:hover\",\n     {\"color\": \"rgb(253, 191, 53)\", \"background-color\": \"rgb(68, 68, 68)\"},\n )\n \n@@ -163,71 +163,71 @@ reload:\n \n // Struct\n assert-css: (\n-    \".sidebar a.struct:not(.current)\",\n+    \".sidebar .block.struct a:not(.current)\",\n     {\"color\": \"rgb(53, 109, 164)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.struct:not(.current)\"\n+move-cursor-to: \".sidebar .block.struct a:not(.current)\"\n assert-css: (\n-    \".sidebar a.struct:hover\",\n+    \".sidebar .block.struct a:hover\",\n     {\"color\": \"rgb(53, 109, 164)\", \"background-color\": \"rgb(255, 255, 255)\"},\n )\n // Enum\n assert-css: (\n-    \".sidebar a.enum\",\n+    \".sidebar .block.enum a\",\n     {\"color\": \"rgb(53, 109, 164)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.enum\"\n+move-cursor-to: \".sidebar .block.enum a\"\n assert-css: (\n-    \".sidebar a.enum:hover\",\n+    \".sidebar .block.enum a:hover\",\n     {\"color\": \"rgb(53, 109, 164)\", \"background-color\": \"rgb(255, 255, 255)\"},\n )\n // Union\n assert-css: (\n-    \".sidebar a.union\",\n+    \".sidebar .block.union a\",\n     {\"color\": \"rgb(53, 109, 164)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.union\"\n+move-cursor-to: \".sidebar .block.union a\"\n assert-css: (\n-    \".sidebar a.union:hover\",\n+    \".sidebar .block.union a:hover\",\n     {\"color\": \"rgb(53, 109, 164)\", \"background-color\": \"rgb(255, 255, 255)\"},\n )\n // Trait\n assert-css: (\n-    \".sidebar a.trait\",\n+    \".sidebar .block.trait a\",\n     {\"color\": \"rgb(53, 109, 164)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.trait\"\n+move-cursor-to: \".sidebar .block.trait a\"\n assert-css: (\n-    \".sidebar a.trait:hover\",\n+    \".sidebar .block.trait a:hover\",\n     {\"color\": \"rgb(53, 109, 164)\", \"background-color\": \"rgb(255, 255, 255)\"},\n )\n // Function\n assert-css: (\n-    \".sidebar a.fn\",\n+    \".sidebar .block.fn a\",\n     {\"color\": \"rgb(53, 109, 164)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.fn\"\n+move-cursor-to: \".sidebar .block.fn a\"\n assert-css: (\n-    \".sidebar a.fn:hover\",\n+    \".sidebar .block.fn a:hover\",\n     {\"color\": \"rgb(53, 109, 164)\", \"background-color\": \"rgb(255, 255, 255)\"},\n )\n // Type definition\n assert-css: (\n-    \".sidebar a.type\",\n+    \".sidebar .block.type a\",\n     {\"color\": \"rgb(53, 109, 164)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.type\"\n+move-cursor-to: \".sidebar .block.type a\"\n assert-css: (\n-    \".sidebar a.type:hover\",\n+    \".sidebar .block.type a:hover\",\n     {\"color\": \"rgb(53, 109, 164)\", \"background-color\": \"rgb(255, 255, 255)\"},\n )\n // Keyword\n assert-css: (\n-    \".sidebar a.keyword\",\n+    \".sidebar .block.keyword a\",\n     {\"color\": \"rgb(53, 109, 164)\", \"background-color\": \"rgba(0, 0, 0, 0)\"},\n )\n-move-cursor-to: \".sidebar a.keyword\"\n+move-cursor-to: \".sidebar .block.keyword a\"\n assert-css: (\n-    \".sidebar a.keyword:hover\",\n+    \".sidebar .block.keyword a:hover\",\n     {\"color\": \"rgb(53, 109, 164)\", \"background-color\": \"rgb(255, 255, 255)\"},\n )"}, {"sha": "b5c1b6a4390b6e54410103222a338843984ca1b0", "filename": "src/test/rustdoc-gui/sidebar-macro-reexport.goml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b5963f07e611cf2a09a310eb74c1a93adfaeb9de/src%2Ftest%2Frustdoc-gui%2Fsidebar-macro-reexport.goml", "raw_url": "https://github.com/rust-lang/rust/raw/b5963f07e611cf2a09a310eb74c1a93adfaeb9de/src%2Ftest%2Frustdoc-gui%2Fsidebar-macro-reexport.goml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-gui%2Fsidebar-macro-reexport.goml?ref=b5963f07e611cf2a09a310eb74c1a93adfaeb9de", "patch": "@@ -1,5 +1,5 @@\n // This test ensures that the reexport of a macro doesn't make the original macro\n // displayed twice in the sidebar.\n goto: \"file://\" + |DOC_PATH| + \"/test_docs/macro.repro.html\"\n-wait-for: \".sidebar-elems .macro .macro\"\n+wait-for: \".sidebar-elems .block.macro a\"\n assert-count: (\"//*[@class='sidebar-elems']//*[@class='block macro']//a[text()='repro']\", 1)"}]}