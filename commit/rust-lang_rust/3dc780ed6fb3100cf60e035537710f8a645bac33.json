{"sha": "3dc780ed6fb3100cf60e035537710f8a645bac33", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNkYzc4MGVkNmZiMzEwMGNmNjBlMDM1NTM3NzEwZjhhNjQ1YmFjMzM=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2015-09-14T11:58:19Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2015-09-14T12:15:48Z"}, "message": "use RegionEscape instead of inherent has_escaping_regions fns", "tree": {"sha": "dc4691574dad3cbe973b3a6fe39f5d2db4368277", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc4691574dad3cbe973b3a6fe39f5d2db4368277"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3dc780ed6fb3100cf60e035537710f8a645bac33", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3dc780ed6fb3100cf60e035537710f8a645bac33", "html_url": "https://github.com/rust-lang/rust/commit/3dc780ed6fb3100cf60e035537710f8a645bac33", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3dc780ed6fb3100cf60e035537710f8a645bac33/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5a95acb8aba07ea8e5255893aa4e01e5ba5c2349", "url": "https://api.github.com/repos/rust-lang/rust/commits/5a95acb8aba07ea8e5255893aa4e01e5ba5c2349", "html_url": "https://github.com/rust-lang/rust/commit/5a95acb8aba07ea8e5255893aa4e01e5ba5c2349"}], "stats": {"total": 24, "additions": 7, "deletions": 17}, "files": [{"sha": "a8adb3886442442093073996d76d26d4adf32c96", "filename": "src/librustc/middle/ty/mod.rs", "status": "modified", "additions": 0, "deletions": 16, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/3dc780ed6fb3100cf60e035537710f8a645bac33/src%2Flibrustc%2Fmiddle%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dc780ed6fb3100cf60e035537710f8a645bac33/src%2Flibrustc%2Fmiddle%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty%2Fmod.rs?ref=3dc780ed6fb3100cf60e035537710f8a645bac33", "patch": "@@ -979,18 +979,6 @@ impl<'tcx> Predicate<'tcx> {\n         vec.into_iter()\n     }\n \n-    pub fn has_escaping_regions(&self) -> bool {\n-        match *self {\n-            Predicate::Trait(ref trait_ref) => trait_ref.has_escaping_regions(),\n-            Predicate::Equate(ref p) => p.has_escaping_regions(),\n-            Predicate::RegionOutlives(ref p) => p.has_escaping_regions(),\n-            Predicate::TypeOutlives(ref p) => p.has_escaping_regions(),\n-            Predicate::Projection(ref p) => p.has_escaping_regions(),\n-            Predicate::WellFormed(p) => p.has_escaping_regions(),\n-            Predicate::ObjectSafe(_trait_def_id) => false,\n-        }\n-    }\n-\n     pub fn to_opt_poly_trait_ref(&self) -> Option<PolyTraitRef<'tcx>> {\n         match *self {\n             Predicate::Trait(ref t) => {\n@@ -1037,10 +1025,6 @@ impl<'tcx> InstantiatedPredicates<'tcx> {\n         InstantiatedPredicates { predicates: VecPerParamSpace::empty() }\n     }\n \n-    pub fn has_escaping_regions(&self) -> bool {\n-        self.predicates.any(|p| p.has_escaping_regions())\n-    }\n-\n     pub fn is_empty(&self) -> bool {\n         self.predicates.is_empty()\n     }"}, {"sha": "3b3c9bd0985eb7fe6587bfb4c5b4d6b3536a1665", "filename": "src/librustc/middle/ty/structural_impls.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3dc780ed6fb3100cf60e035537710f8a645bac33/src%2Flibrustc%2Fmiddle%2Fty%2Fstructural_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dc780ed6fb3100cf60e035537710f8a645bac33/src%2Flibrustc%2Fmiddle%2Fty%2Fstructural_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty%2Fstructural_impls.rs?ref=3dc780ed6fb3100cf60e035537710f8a645bac33", "patch": "@@ -45,6 +45,12 @@ impl<'tcx> RegionEscape for ty::ExistentialBounds<'tcx> {\n     }\n }\n \n+impl<'tcx> RegionEscape for ty::InstantiatedPredicates<'tcx> {\n+    fn has_regions_escaping_depth(&self, depth: u32) -> bool {\n+        self.predicates.has_regions_escaping_depth(depth)\n+    }\n+}\n+\n impl<'tcx> RegionEscape for subst::Substs<'tcx> {\n     fn has_regions_escaping_depth(&self, depth: u32) -> bool {\n         self.types.has_regions_escaping_depth(depth) ||"}, {"sha": "edf1cc9b7ef38c31a4812bae98b31b35a2c56d94", "filename": "src/librustc_typeck/check/method/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3dc780ed6fb3100cf60e035537710f8a645bac33/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3dc780ed6fb3100cf60e035537710f8a645bac33/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fmod.rs?ref=3dc780ed6fb3100cf60e035537710f8a645bac33", "patch": "@@ -17,7 +17,7 @@ use middle::def_id::DefId;\n use middle::privacy::{AllPublic, DependsOn, LastPrivate, LastMod};\n use middle::subst;\n use middle::traits;\n-use middle::ty::{self, ToPredicate, ToPolyTraitRef, TraitRef};\n+use middle::ty::{self, RegionEscape, ToPredicate, ToPolyTraitRef, TraitRef};\n use middle::ty::adjustment::{AdjustDerefRef, AutoDerefRef, AutoPtr};\n use middle::infer;\n "}]}