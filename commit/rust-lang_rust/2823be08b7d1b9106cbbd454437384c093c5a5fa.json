{"sha": "2823be08b7d1b9106cbbd454437384c093c5a5fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MjNiZTA4YjdkMWI5MTA2Y2JiZDQ1NDQzNzM4NGMwOTNjNWE1ZmE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-25T19:00:27Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-06-25T19:47:56Z"}, "message": "Register new snapshots\n\nThis change starts denying `*T` in the parser. All code using `*T` should ensure\nthat the FFI call does indeed take `const T*` on the other side before renaming\nthe type to `*const T`.\n\nOtherwise, all code can rename `*T` to `*const T`.\n\n[breaking-change]", "tree": {"sha": "2971066c674ce2d6b1e962431166bed03922f0e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2971066c674ce2d6b1e962431166bed03922f0e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2823be08b7d1b9106cbbd454437384c093c5a5fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2823be08b7d1b9106cbbd454437384c093c5a5fa", "html_url": "https://github.com/rust-lang/rust/commit/2823be08b7d1b9106cbbd454437384c093c5a5fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2823be08b7d1b9106cbbd454437384c093c5a5fa/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7da94c1a00104e25901b6b571bca1b03990d4467", "url": "https://api.github.com/repos/rust-lang/rust/commits/7da94c1a00104e25901b6b571bca1b03990d4467", "html_url": "https://github.com/rust-lang/rust/commit/7da94c1a00104e25901b6b571bca1b03990d4467"}], "stats": {"total": 32, "additions": 13, "deletions": 19}, "files": [{"sha": "77333b4dc2aee614fb6087692d14758d952358b0", "filename": "src/liballoc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Fliballoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Fliballoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Flib.rs?ref=2823be08b7d1b9106cbbd454437384c093c5a5fa", "patch": "@@ -70,7 +70,6 @@\n \n #![no_std]\n #![feature(lang_items, phase, unsafe_destructor)]\n-#![allow(unknown_features)] // NOTE: remove after a stage0 snap\n \n #[phase(plugin, link)]\n extern crate core;"}, {"sha": "4dc45ceeb85adb098d07e814ac890e1de69e622c", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=2823be08b7d1b9106cbbd454437384c093c5a5fa", "patch": "@@ -58,7 +58,6 @@\n #![feature(globs, intrinsics, lang_items, macro_rules, managed_boxes, phase)]\n #![feature(simd, unsafe_destructor)]\n #![deny(missing_doc)]\n-#![allow(unknown_features)] // NOTE: remove after stage0 snapshot\n \n #[cfg(test)] extern crate realcore = \"core\";\n #[cfg(test)] extern crate libc;"}, {"sha": "afa08f04cb20323919f37a377726ba5788202fb7", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=2823be08b7d1b9106cbbd454437384c093c5a5fa", "patch": "@@ -570,12 +570,6 @@ pub trait Shl<RHS,Result> {\n \n macro_rules! shl_impl(\n     ($($t:ty)*) => ($(\n-        #[cfg(stage0)]\n-        impl Shl<$t, $t> for $t {\n-            #[inline]\n-            fn shl(&self, other: &$t) -> $t { (*self) << (*other) }\n-        }\n-        #[cfg(not(stage0), not(test))]\n         impl Shl<$t, $t> for $t {\n             #[inline]\n             fn shl(&self, other: &$t) -> $t {\n@@ -619,12 +613,6 @@ pub trait Shr<RHS,Result> {\n \n macro_rules! shr_impl(\n     ($($t:ty)*) => ($(\n-        #[cfg(stage0, not(test))]\n-        impl Shr<$t, $t> for $t {\n-            #[inline]\n-            fn shr(&self, other: &$t) -> $t { (*self) >> (*other) }\n-        }\n-        #[cfg(not(stage0), not(test))]\n         impl Shr<$t, $t> for $t {\n             #[inline]\n             fn shr(&self, other: &$t) -> $t { (*self) >> (*other as uint) }"}, {"sha": "3ed3d5862b9046d6635a0a00ce17195000a0ca4c", "filename": "src/libnative/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Flibnative%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Flibnative%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Flib.rs?ref=2823be08b7d1b9106cbbd454437384c093c5a5fa", "patch": "@@ -55,7 +55,6 @@\n \n #![deny(unused_result, unused_must_use)]\n #![allow(non_camel_case_types, deprecated)]\n-#![allow(unknown_features)] // NOTE: remove after a stage0 snap\n #![feature(default_type_params, lang_items)]\n \n // NB this crate explicitly does *not* allow glob imports, please seriously"}, {"sha": "4c5419185e55a066f9043f351aa9a03ad9a72bca", "filename": "src/librlibc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Flibrlibc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Flibrlibc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrlibc%2Flib.rs?ref=2823be08b7d1b9106cbbd454437384c093c5a5fa", "patch": "@@ -27,7 +27,6 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/\")]\n #![feature(intrinsics)]\n-#![allow(unknown_features)] // NOTE: remove after stage0 snapshot\n \n #![no_std]\n #![experimental]"}, {"sha": "1c283a4e64789d24343ace42ee83bab274552c70", "filename": "src/librustrt/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Flibrustrt%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Flibrustrt%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Flib.rs?ref=2823be08b7d1b9106cbbd454437384c093c5a5fa", "patch": "@@ -18,7 +18,6 @@\n \n #![feature(macro_rules, phase, globs, thread_local, managed_boxes, asm)]\n #![feature(linkage, lang_items, unsafe_destructor)]\n-#![allow(unknown_features)] // NOTE: remove after stage0 snapshot\n #![no_std]\n #![experimental]\n "}, {"sha": "d1029c7a9baaa040b923d9aec544fef621dd3b4b", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=2823be08b7d1b9106cbbd454437384c093c5a5fa", "patch": "@@ -111,7 +111,6 @@\n #![no_std]\n \n #![allow(deprecated)]\n-#![allow(unknown_features)] // NOTE: remove after stage0 snapshot\n #![deny(missing_doc)]\n \n // When testing libstd, bring in libuv as the I/O backend so tests can print"}, {"sha": "0fd5a7086b78c897507508137b3d7c410242a6a5", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=2823be08b7d1b9106cbbd454437384c093c5a5fa", "patch": "@@ -1448,7 +1448,11 @@ impl<'a> Parser<'a> {\n         } else if self.eat_keyword(keywords::Const) {\n             MutImmutable\n         } else {\n-            // NOTE: after a stage0 snap this should turn into a span_err.\n+            let span = self.last_span;\n+            self.span_err(span,\n+                          \"bare raw pointers are no longer allowed, you should \\\n+                           likely use `*mut T`, but otherwise `*T` is now \\\n+                           known as `*const T`\");\n             MutImmutable\n         };\n         let t = self.parse_ty(true);"}, {"sha": "5c694b34193ef981489759aba1b064e90c9fd34d", "filename": "src/snapshots.txt", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Fsnapshots.txt", "raw_url": "https://github.com/rust-lang/rust/raw/2823be08b7d1b9106cbbd454437384c093c5a5fa/src%2Fsnapshots.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fsnapshots.txt?ref=2823be08b7d1b9106cbbd454437384c093c5a5fa", "patch": "@@ -1,3 +1,11 @@\n+S 2014-06-25 bab614f\n+  freebsd-x86_64 14cb361c8fdefa2534bb6776a04815c08680ecd6\n+  linux-i386 8fec4845626c557431a4aa7bfb2b5cfc65ad9eda\n+  linux-x86_64 2304534c8e2431a5da2086164dd3a3e019b87ecd\n+  macos-i386 d9e348cc1f9021f0f8e8907880fded80afb5db5b\n+  macos-x86_64 aa790195d1f8191dce2f990ec4323bcc69566288\n+  winnt-i386 19b67f8a583516553a4fe62e453eecc5c17aff8e\n+\n S 2014-06-21 db9af1d\n   freebsd-x86_64 ef2bd0fc0b0efa2bd6f5c1eaa60a2ec8df533254\n   linux-i386 84339ea0f796ae468ef86797ef4587274bec19ea"}]}