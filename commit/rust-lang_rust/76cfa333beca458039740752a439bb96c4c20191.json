{"sha": "76cfa333beca458039740752a439bb96c4c20191", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2Y2ZhMzMzYmVjYTQ1ODAzOTc0MDc1MmE0MzliYjk2YzRjMjAxOTE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-20T11:24:48Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2019-12-20T11:24:48Z"}, "message": "Fix init and uninit intrinsics for u/i128", "tree": {"sha": "a0979696c082458c7619335e84e6cef18af1dd4f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a0979696c082458c7619335e84e6cef18af1dd4f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76cfa333beca458039740752a439bb96c4c20191", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76cfa333beca458039740752a439bb96c4c20191", "html_url": "https://github.com/rust-lang/rust/commit/76cfa333beca458039740752a439bb96c4c20191", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76cfa333beca458039740752a439bb96c4c20191/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a125b6253610dc4e94bfd584eba869f45e749853", "url": "https://api.github.com/repos/rust-lang/rust/commits/a125b6253610dc4e94bfd584eba869f45e749853", "html_url": "https://github.com/rust-lang/rust/commit/a125b6253610dc4e94bfd584eba869f45e749853"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "e05d32ffd7965dd21ad404fe1156fb3efaa01da4", "filename": "src/intrinsics.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/76cfa333beca458039740752a439bb96c4c20191/src%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76cfa333beca458039740752a439bb96c4c20191/src%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics.rs?ref=76cfa333beca458039740752a439bb96c4c20191", "patch": "@@ -615,6 +615,10 @@ pub fn codegen_intrinsic_call<'tcx>(\n                     let clif_ty = fx.clif_type(layout.ty).unwrap();\n                     let val = match clif_ty {\n                         types::I8 | types::I16 | types::I32 | types::I64 => fx.bcx.ins().iconst(clif_ty, 0),\n+                        types::I128 => {\n+                            let zero = fx.bcx.ins().iconst(types::I64, 0);\n+                            fx.bcx.ins().iconcat(zero, zero)\n+                        }\n                         types::F32 => {\n                             let zero = fx.bcx.ins().iconst(types::I32, 0);\n                             fx.bcx.ins().bitcast(types::F32, zero)\n@@ -647,6 +651,11 @@ pub fn codegen_intrinsic_call<'tcx>(\n                     let clif_ty = fx.clif_type(layout.ty).unwrap();\n                     let val = match clif_ty {\n                         types::I8 | types::I16 | types::I32 | types::I64 => fx.bcx.ins().iconst(clif_ty, 42),\n+                        types::I128 => {\n+                            let zero = fx.bcx.ins().iconst(types::I64, 0);\n+                            let fourty_two = fx.bcx.ins().iconst(types::I64, 42);\n+                            fx.bcx.ins().iconcat(fourty_two, zero)\n+                        }\n                         types::F32 => {\n                             let zero = fx.bcx.ins().iconst(types::I32, 0xdeadbeef);\n                             fx.bcx.ins().bitcast(types::F32, zero)"}]}