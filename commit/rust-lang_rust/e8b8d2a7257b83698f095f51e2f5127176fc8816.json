{"sha": "e8b8d2a7257b83698f095f51e2f5127176fc8816", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4YjhkMmE3MjU3YjgzNjk4ZjA5NWY1MWUyZjUxMjcxNzZmYzg4MTY=", "commit": {"author": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2019-11-03T09:57:12Z"}, "committer": {"name": "Igor Aleksanov", "email": "popzxc@yandex.ru", "date": "2019-11-04T03:27:25Z"}, "message": "librustc_lexer: Reorder imports in lib.rs", "tree": {"sha": "8e15beeadad7300ae9beaed8260f128c55b3ac13", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e15beeadad7300ae9beaed8260f128c55b3ac13"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e8b8d2a7257b83698f095f51e2f5127176fc8816", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e8b8d2a7257b83698f095f51e2f5127176fc8816", "html_url": "https://github.com/rust-lang/rust/commit/e8b8d2a7257b83698f095f51e2f5127176fc8816", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e8b8d2a7257b83698f095f51e2f5127176fc8816/comments", "author": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "popzxc", "id": 12111581, "node_id": "MDQ6VXNlcjEyMTExNTgx", "avatar_url": "https://avatars.githubusercontent.com/u/12111581?v=4", "gravatar_id": "", "url": "https://api.github.com/users/popzxc", "html_url": "https://github.com/popzxc", "followers_url": "https://api.github.com/users/popzxc/followers", "following_url": "https://api.github.com/users/popzxc/following{/other_user}", "gists_url": "https://api.github.com/users/popzxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/popzxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/popzxc/subscriptions", "organizations_url": "https://api.github.com/users/popzxc/orgs", "repos_url": "https://api.github.com/users/popzxc/repos", "events_url": "https://api.github.com/users/popzxc/events{/privacy}", "received_events_url": "https://api.github.com/users/popzxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ecd26739d45837ee21fe0e2941f957086fbf6a47", "url": "https://api.github.com/repos/rust-lang/rust/commits/ecd26739d45837ee21fe0e2941f957086fbf6a47", "html_url": "https://github.com/rust-lang/rust/commit/ecd26739d45837ee21fe0e2941f957086fbf6a47"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "c50808adec1dd58c50cd21c6b37aac4e73b3b262", "filename": "src/librustc_lexer/src/lib.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e8b8d2a7257b83698f095f51e2f5127176fc8816/src%2Flibrustc_lexer%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e8b8d2a7257b83698f095f51e2f5127176fc8816/src%2Flibrustc_lexer%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_lexer%2Fsrc%2Flib.rs?ref=e8b8d2a7257b83698f095f51e2f5127176fc8816", "patch": "@@ -18,6 +18,8 @@ mod cursor;\n pub mod unescape;\n \n use crate::cursor::{Cursor, EOF_CHAR};\n+use self::TokenKind::*;\n+use self::LiteralKind::*;\n \n /// Parsed token.\n /// It doesn't contain information about data that has been parsed,\n@@ -116,7 +118,6 @@ pub enum TokenKind {\n     /// Unknown token, not expected by the lexer, e.g. \"\u2116\"\n     Unknown,\n }\n-use self::TokenKind::*;\n \n #[derive(Clone, Copy, Debug, PartialEq, Eq, PartialOrd, Ord)]\n pub enum LiteralKind {\n@@ -137,7 +138,6 @@ pub enum LiteralKind {\n     /// \"br\"abc\"\", \"br#\"abc\"#\", \"br####\"ab\"###\"c\"####\", \"br#\"a\"\n     RawByteStr { n_hashes: usize, started: bool, terminated: bool },\n }\n-use self::LiteralKind::*;\n \n /// Base of numeric literal encoding according to its prefix.\n #[derive(Clone, Copy, Debug, PartialEq, Eq, PartialOrd, Ord)]\n@@ -241,7 +241,6 @@ pub fn is_id_continue(c: char) -> bool {\n         || (c > '\\x7f' && unicode_xid::UnicodeXID::is_xid_continue(c))\n }\n \n-\n impl Cursor<'_> {\n     /// Parses a token from the input string.\n     fn advance_token(&mut self) -> Token {"}]}