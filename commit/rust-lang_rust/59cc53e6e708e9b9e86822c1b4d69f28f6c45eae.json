{"sha": "59cc53e6e708e9b9e86822c1b4d69f28f6c45eae", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5Y2M1M2U2ZTcwOGU5YjllODY4MjJjMWI0ZDY5ZjI4ZjZjNDVlYWU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-31T20:10:20Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-08-31T20:10:20Z"}, "message": "Auto merge of #63703 - tommilligan:warn-empty-doctest, r=ollie27\n\nrustdoc: warn on empty doc test\n\nCloses #60319.\n\nA doc test that only contains whitespace should result in a warning.\n\nThis PR adds detection of empty doc tests to `check-code-block-syntax`, as having an invalid doc test is mutually exclusive with an empty doc test.", "tree": {"sha": "5e6317bc94dc6a4871889566a732069c47aae95b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e6317bc94dc6a4871889566a732069c47aae95b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59cc53e6e708e9b9e86822c1b4d69f28f6c45eae", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59cc53e6e708e9b9e86822c1b4d69f28f6c45eae", "html_url": "https://github.com/rust-lang/rust/commit/59cc53e6e708e9b9e86822c1b4d69f28f6c45eae", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59cc53e6e708e9b9e86822c1b4d69f28f6c45eae/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fba38ac27e2ade309f4c2504a6d6cd3556972a28", "url": "https://api.github.com/repos/rust-lang/rust/commits/fba38ac27e2ade309f4c2504a6d6cd3556972a28", "html_url": "https://github.com/rust-lang/rust/commit/fba38ac27e2ade309f4c2504a6d6cd3556972a28"}, {"sha": "0ec2e9fcebd18d98a32884786e1c4bbaf3db1ce0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0ec2e9fcebd18d98a32884786e1c4bbaf3db1ce0", "html_url": "https://github.com/rust-lang/rust/commit/0ec2e9fcebd18d98a32884786e1c4bbaf3db1ce0"}], "stats": {"total": 69, "additions": 59, "deletions": 10}, "files": [{"sha": "5c4159433c7b2ee387f6260a7541942c97e65905", "filename": "src/librustdoc/passes/check_code_block_syntax.rs", "status": "modified", "additions": 27, "deletions": 10, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/59cc53e6e708e9b9e86822c1b4d69f28f6c45eae/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59cc53e6e708e9b9e86822c1b4d69f28f6c45eae/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcheck_code_block_syntax.rs?ref=59cc53e6e708e9b9e86822c1b4d69f28f6c45eae", "patch": "@@ -32,27 +32,39 @@ impl<'a, 'tcx> SyntaxChecker<'a, 'tcx> {\n             dox[code_block.code].to_owned(),\n         );\n \n-        let has_errors = {\n-            let mut has_errors = false;\n+        let validation_status = {\n+            let mut has_syntax_errors = false;\n+            let mut only_whitespace = true;\n+            // even if there is a syntax error, we need to run the lexer over the whole file\n             let mut lexer = Lexer::new(&sess, source_file, None);\n             loop  {\n                 match lexer.next_token().kind {\n                     token::Eof => break,\n-                    token::Unknown(..) => has_errors = true,\n-                    _ => (),\n+                    token::Whitespace => (),\n+                    token::Unknown(..) => has_syntax_errors = true,\n+                    _ => only_whitespace = false,\n                 }\n             }\n-            has_errors\n+\n+            if has_syntax_errors {\n+                Some(CodeBlockInvalid::SyntaxError)\n+            } else if only_whitespace {\n+                Some(CodeBlockInvalid::Empty)\n+            } else {\n+                None\n+            }\n         };\n \n-        if has_errors {\n+        if let Some(code_block_invalid) = validation_status {\n             let mut diag = if let Some(sp) =\n                 super::source_span_for_markdown_range(self.cx, &dox, &code_block.range, &item.attrs)\n             {\n-                let mut diag = self\n-                    .cx\n-                    .sess()\n-                    .struct_span_warn(sp, \"could not parse code block as Rust code\");\n+                let warning_message = match code_block_invalid {\n+                    CodeBlockInvalid::SyntaxError => \"could not parse code block as Rust code\",\n+                    CodeBlockInvalid::Empty => \"Rust code block is empty\",\n+                };\n+\n+                let mut diag = self.cx.sess().struct_span_warn(sp, warning_message);\n \n                 if code_block.syntax.is_none() && code_block.is_fenced {\n                     let sp = sp.from_inner(InnerSpan::new(0, 3));\n@@ -96,3 +108,8 @@ impl<'a, 'tcx> DocFolder for SyntaxChecker<'a, 'tcx> {\n         self.fold_item_recur(item)\n     }\n }\n+\n+enum CodeBlockInvalid {\n+    SyntaxError,\n+    Empty,\n+}"}, {"sha": "3ef66e273d0d016d0b6a2b0c1a807c2f7af97087", "filename": "src/test/rustdoc-ui/invalid-syntax.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/59cc53e6e708e9b9e86822c1b4d69f28f6c45eae/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59cc53e6e708e9b9e86822c1b4d69f28f6c45eae/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.rs?ref=59cc53e6e708e9b9e86822c1b4d69f28f6c45eae", "patch": "@@ -64,3 +64,13 @@ pub fn blargh() {}\n /// \\_\n #[doc = \"```\"]\n pub fn crazy_attrs() {}\n+\n+/// ```rust\n+/// ```\n+pub fn empty_rust() {}\n+\n+/// ```\n+///\n+///\n+/// ```\n+pub fn empty_rust_with_whitespace() {}"}, {"sha": "36209e29277712b22c660ca333357b41d2f5d05a", "filename": "src/test/rustdoc-ui/invalid-syntax.stderr", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/59cc53e6e708e9b9e86822c1b4d69f28f6c45eae/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/59cc53e6e708e9b9e86822c1b4d69f28f6c45eae/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc-ui%2Finvalid-syntax.stderr?ref=59cc53e6e708e9b9e86822c1b4d69f28f6c45eae", "patch": "@@ -179,6 +179,28 @@ LL | | #[doc = \"```\"]\n    |\n    = help: mark blocks that do not contain Rust code as text: ```text\n \n+warning: Rust code block is empty\n+  --> $DIR/invalid-syntax.rs:68:5\n+   |\n+LL |   /// ```rust\n+   |  _____^\n+LL | | /// ```\n+   | |_______^\n+\n+warning: Rust code block is empty\n+  --> $DIR/invalid-syntax.rs:72:5\n+   |\n+LL |   /// ```\n+   |  _____^\n+LL | | ///\n+LL | | ///\n+LL | | /// ```\n+   | |_______^\n+help: mark blocks that do not contain Rust code as text\n+   |\n+LL | /// ```text\n+   |     ^^^^^^^\n+\n error: unknown start of token: \\\n  --> <rustdoc-highlighting>:1:1\n   |"}]}