{"sha": "e90e88306efc3fc1f94e0cbb9c16ec1589797c40", "node_id": "C_kwDOAAsO6NoAKGU5MGU4ODMwNmVmYzNmYzFmOTRlMGNiYjljMTZlYzE1ODk3OTdjNDA", "commit": {"author": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2022-03-08T09:49:20Z"}, "committer": {"name": "Jakub Ber\u00e1nek", "email": "berykubik@gmail.com", "date": "2022-03-08T10:02:01Z"}, "message": "Create a function for gathering profiles and run only Full benchmarks in LLVM PGO", "tree": {"sha": "d1ab5f4ddd5a07cfa584dcc9a00652c535b0a40c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d1ab5f4ddd5a07cfa584dcc9a00652c535b0a40c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e90e88306efc3fc1f94e0cbb9c16ec1589797c40", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQGzBAABCgAdFiEEg8FrwI85f934CWFa28VT5UDC9hkFAmInKZkACgkQ28VT5UDC\n9hkxZQv+MNmUv1nstJtbmz9+DwgCZ7teRmzXgzbyZfuDL2139vF+zVF+KdsHM8ZG\nxNtsTu2MMkh6z678h0p2t0NYQMXci7sGAgV9bOf3Q7/5l6GLP+Vzr3V/9Rhhgxrt\n+KIbqxBPfmEIWaylgebIqWE7nqn+Dau8lAO4Qemlr+ZeLFyDzbSRdGstZqwW0vjz\n9WtgY5N4fqkQA1t0hr5zzGBgvcWz/3hjFxT33K4jdl+vUAkGDGDKc+3e7p4c9gxX\n6hjgadSGHAF/je286vc8MSTXZ7whGkVRa2p/rtLNjgHtWn8y2h1WoQljz2LKKdNL\nooczofe3kfkRqYnLT9HJxiY5scmYCsEVJ4L/DmZP0VLvz6LKSMB7tWIhb6x1LsrE\n/0kzxDReXl/B+TlVAOxUYLeVWkmCZ/qe2inlZjZModeeOcmR8pPzIEhaM0wNk0Dz\n9gbuqAjJsip5iC9w4uF49nbvSedU1yW1uOQBTt2wPSl7Byi+8NcCBNYREw2pkm7q\nADu61MRy\n=pyZA\n-----END PGP SIGNATURE-----", "payload": "tree d1ab5f4ddd5a07cfa584dcc9a00652c535b0a40c\nparent ffa59765e0114de175e2489845b06e0377c77923\nauthor Jakub Ber\u00e1nek <berykubik@gmail.com> 1646732960 +0100\ncommitter Jakub Ber\u00e1nek <berykubik@gmail.com> 1646733721 +0100\n\nCreate a function for gathering profiles and run only Full benchmarks in LLVM PGO\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e90e88306efc3fc1f94e0cbb9c16ec1589797c40", "html_url": "https://github.com/rust-lang/rust/commit/e90e88306efc3fc1f94e0cbb9c16ec1589797c40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e90e88306efc3fc1f94e0cbb9c16ec1589797c40/comments", "author": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Kobzol", "id": 4539057, "node_id": "MDQ6VXNlcjQ1MzkwNTc=", "avatar_url": "https://avatars.githubusercontent.com/u/4539057?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Kobzol", "html_url": "https://github.com/Kobzol", "followers_url": "https://api.github.com/users/Kobzol/followers", "following_url": "https://api.github.com/users/Kobzol/following{/other_user}", "gists_url": "https://api.github.com/users/Kobzol/gists{/gist_id}", "starred_url": "https://api.github.com/users/Kobzol/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Kobzol/subscriptions", "organizations_url": "https://api.github.com/users/Kobzol/orgs", "repos_url": "https://api.github.com/users/Kobzol/repos", "events_url": "https://api.github.com/users/Kobzol/events{/privacy}", "received_events_url": "https://api.github.com/users/Kobzol/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffa59765e0114de175e2489845b06e0377c77923", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffa59765e0114de175e2489845b06e0377c77923", "html_url": "https://github.com/rust-lang/rust/commit/ffa59765e0114de175e2489845b06e0377c77923"}], "stats": {"total": 77, "additions": 38, "deletions": 39}, "files": [{"sha": "88a03c05d9fe26dced4b098f05f58c0a69fcd040", "filename": "src/ci/pgo.sh", "status": "modified", "additions": 38, "deletions": 39, "changes": 77, "blob_url": "https://github.com/rust-lang/rust/blob/e90e88306efc3fc1f94e0cbb9c16ec1589797c40/src%2Fci%2Fpgo.sh", "raw_url": "https://github.com/rust-lang/rust/raw/e90e88306efc3fc1f94e0cbb9c16ec1589797c40/src%2Fci%2Fpgo.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fpgo.sh?ref=e90e88306efc3fc1f94e0cbb9c16ec1589797c40", "patch": "@@ -2,6 +2,40 @@\n \n set -euxo pipefail\n \n+# Compile several crates to gather execution PGO profiles.\n+# Arg0 => builds (Debug, Opt)\n+# Arg1 => runs (Full, IncrFull, All)\n+# Arg2 => crates (syn, cargo, ...)\n+gather_profiles () {\n+  cd /checkout/obj\n+\n+  # Compile libcore, both in opt-level=0 and opt-level=3\n+  RUSTC_BOOTSTRAP=1 ./build/$PGO_HOST/stage2/bin/rustc \\\n+      --edition=2021 --crate-type=lib ../library/core/src/lib.rs\n+  RUSTC_BOOTSTRAP=1 ./build/$PGO_HOST/stage2/bin/rustc \\\n+      --edition=2021 --crate-type=lib -Copt-level=3 ../library/core/src/lib.rs\n+\n+  cd rustc-perf\n+\n+  # Run rustc-perf benchmarks\n+  # Benchmark using profile_local with eprintln, which essentially just means\n+  # don't actually benchmark -- just make sure we run rustc a bunch of times.\n+  RUST_LOG=collector=debug \\\n+  RUSTC=/checkout/obj/build/$PGO_HOST/stage0/bin/rustc \\\n+  RUSTC_BOOTSTRAP=1 \\\n+  /checkout/obj/build/$PGO_HOST/stage0/bin/cargo run -p collector --bin collector -- \\\n+          profile_local \\\n+          eprintln \\\n+          /checkout/obj/build/$PGO_HOST/stage2/bin/rustc \\\n+          Test \\\n+          --builds $1 \\\n+          --cargo /checkout/obj/build/$PGO_HOST/stage0/bin/cargo \\\n+          --runs $2 \\\n+          --include $3\n+\n+  cd /checkout/obj\n+}\n+\n rm -rf /tmp/rustc-pgo\n \n # We collect LLVM profiling information and rustc profiling information in\n@@ -19,6 +53,7 @@ RUSTC_BOOTSTRAP=1 ./build/$PGO_HOST/stage2/bin/rustc \\\n RUSTC_BOOTSTRAP=1 ./build/$PGO_HOST/stage2/bin/rustc \\\n     --edition=2021 --crate-type=lib -Copt-level=3 ../library/core/src/lib.rs\n \n+# Compile rustc perf\n cp -r /tmp/rustc-perf ./\n chown -R $(whoami): ./rustc-perf\n cd rustc-perf\n@@ -29,23 +64,7 @@ RUSTC=/checkout/obj/build/$PGO_HOST/stage0/bin/rustc \\\n RUSTC_BOOTSTRAP=1 \\\n /checkout/obj/build/$PGO_HOST/stage0/bin/cargo build -p collector\n \n-# Gather LLVM PGO profiles from real-world crates.\n-# Benchmark using profile_local with eprintln, which essentially just means\n-# don't actually benchmark -- just make sure we run rustc a bunch of times.\n-RUST_LOG=collector=debug \\\n-RUSTC=/checkout/obj/build/$PGO_HOST/stage0/bin/rustc \\\n-RUSTC_BOOTSTRAP=1 \\\n-/checkout/obj/build/$PGO_HOST/stage0/bin/cargo run -p collector --bin collector -- \\\n-        profile_local \\\n-        eprintln \\\n-        /checkout/obj/build/$PGO_HOST/stage2/bin/rustc \\\n-        Test \\\n-        --builds Debug,Opt \\\n-        --cargo /checkout/obj/build/$PGO_HOST/stage0/bin/cargo \\\n-        --runs All \\\n-        --include syn,cargo,serde,ripgrep,regex,clap-rs,hyper-2\n-\n-cd /checkout/obj\n+gather_profiles \"Debug,Opt\" \"Full\" \"syn,cargo,serde,ripgrep,regex,clap-rs,hyper-2\"\n \n # Merge the profile data we gathered for LLVM\n # Note that this uses the profdata from the clang we used to build LLVM,\n@@ -64,28 +83,8 @@ python3 ../x.py build --target=$PGO_HOST --host=$PGO_HOST \\\n     --stage 2 library/std \\\n     --rust-profile-generate=/tmp/rustc-pgo\n \n-# Profile libcore compilation in opt-level=0 and opt-level=3\n-RUSTC_BOOTSTRAP=1 ./build/$PGO_HOST/stage2/bin/rustc \\\n-    --edition=2021 --crate-type=lib ../library/core/src/lib.rs\n-RUSTC_BOOTSTRAP=1 ./build/$PGO_HOST/stage2/bin/rustc \\\n-    --edition=2021 --crate-type=lib -Copt-level=3 ../library/core/src/lib.rs\n-\n-cd rustc-perf\n-\n-RUST_LOG=collector=debug \\\n-RUSTC=/checkout/obj/build/$PGO_HOST/stage0/bin/rustc \\\n-RUSTC_BOOTSTRAP=1 \\\n-/checkout/obj/build/$PGO_HOST/stage0/bin/cargo run -p collector --bin collector -- \\\n-        profile_local \\\n-        eprintln \\\n-        /checkout/obj/build/$PGO_HOST/stage2/bin/rustc \\\n-        Test \\\n-        --builds Check,Debug,Opt \\\n-        --cargo /checkout/obj/build/$PGO_HOST/stage0/bin/cargo \\\n-        --runs All \\\n-        --include externs,ctfe-stress-4,inflate,cargo,token-stream-stress,match-stress-enum\n-\n-cd /checkout/obj\n+gather_profiles \"Check,Debug,Opt\" \"All\" \\\n+  \"externs,ctfe-stress-4,inflate,cargo,token-stream-stress,match-stress-enum\"\n \n # Merge the profile data we gathered\n ./build/$PGO_HOST/llvm/bin/llvm-profdata \\"}]}