{"sha": "5abd6d9492e8a5a4592bca4c18e1de6104b1ea51", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVhYmQ2ZDk0OTJlOGE1YTQ1OTJiY2E0YzE4ZTFkZTYxMDRiMWVhNTE=", "commit": {"author": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-03-11T01:01:53Z"}, "committer": {"name": "Andy Russell", "email": "arussell123@gmail.com", "date": "2019-03-13T19:24:36Z"}, "message": "add suggestions to invalid macro item error", "tree": {"sha": "792b8d6fc5acd1e81fa92fc0d468e8a8227529cd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/792b8d6fc5acd1e81fa92fc0d468e8a8227529cd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQFKBAABCAA0FiEELriChyEaiMu0yCg7viIhAz7bw3QFAlyJWQkWHGFydXNzZWxs\nMTIzQGdtYWlsLmNvbQAKCRC+IiEDPtvDdOVdCAC0VMfe/8iaTsXVKumgabN8sROp\n+Rn+I9BkFDm3sGmKQ+Grh0744AfLOsv/mxD0uonT/oWiRUmQsD627va4PxW2Pkdl\nk2khgDN+wZNK+JicUHQY+wXIXEEiS7faxFYA20UFs6JLtgPaDth0iVmAqMikFulp\n79l0KO5k0JcVlJVi8+wRp1tauh9mW6sPIoM6Ie1Zwy6n+PEL5T1GcEH7aRSkjBOU\nn4f4RlYBx863pt5d6TFnvoLnfm/0pXPdK3L6ELzeZ/+AG72zs3T+yiDRjsg/IleJ\nDHVMq00MNwGvsRU0J4O+0NpMIblTDXqWbIczmEZQng5WJ0LO0XvmclsXB9GL\n=hU7G\n-----END PGP SIGNATURE-----", "payload": "tree 792b8d6fc5acd1e81fa92fc0d468e8a8227529cd\nparent cf6d881ac1f348e8cf16d8b9177d7dff39fd2570\nauthor Andy Russell <arussell123@gmail.com> 1552266113 -0400\ncommitter Andy Russell <arussell123@gmail.com> 1552505076 -0400\n\nadd suggestions to invalid macro item error\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51", "html_url": "https://github.com/rust-lang/rust/commit/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51/comments", "author": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "committer": {"login": "euclio", "id": 1372438, "node_id": "MDQ6VXNlcjEzNzI0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1372438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/euclio", "html_url": "https://github.com/euclio", "followers_url": "https://api.github.com/users/euclio/followers", "following_url": "https://api.github.com/users/euclio/following{/other_user}", "gists_url": "https://api.github.com/users/euclio/gists{/gist_id}", "starred_url": "https://api.github.com/users/euclio/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/euclio/subscriptions", "organizations_url": "https://api.github.com/users/euclio/orgs", "repos_url": "https://api.github.com/users/euclio/repos", "events_url": "https://api.github.com/users/euclio/events{/privacy}", "received_events_url": "https://api.github.com/users/euclio/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cf6d881ac1f348e8cf16d8b9177d7dff39fd2570", "url": "https://api.github.com/repos/rust-lang/rust/commits/cf6d881ac1f348e8cf16d8b9177d7dff39fd2570", "html_url": "https://github.com/rust-lang/rust/commit/cf6d881ac1f348e8cf16d8b9177d7dff39fd2570"}], "stats": {"total": 109, "additions": 85, "deletions": 24}, "files": [{"sha": "22af7d47fd0a1fe6736bab98aac875feb383d416", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 25, "deletions": 20, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=5abd6d9492e8a5a4592bca4c18e1de6104b1ea51", "patch": "@@ -5116,12 +5116,8 @@ impl<'a> Parser<'a> {\n \n                 let ident = self.parse_ident()?;\n                 let (delim, tokens) = self.expect_delimited_token_tree()?;\n-                if delim != MacDelimiter::Brace {\n-                    if !self.eat(&token::Semi) {\n-                        let msg = \"macros that expand to items must either \\\n-                                   be surrounded with braces or followed by a semicolon\";\n-                        self.span_err(self.prev_span, msg);\n-                    }\n+                if delim != MacDelimiter::Brace && !self.eat(&token::Semi) {\n+                    self.report_invalid_macro_expansion_item();\n                 }\n \n                 (ident, ast::MacroDef { tokens: tokens, legacy: true })\n@@ -5264,13 +5260,8 @@ impl<'a> Parser<'a> {\n                 // if it has a special ident, it's definitely an item\n                 //\n                 // Require a semicolon or braces.\n-                if style != MacStmtStyle::Braces {\n-                    if !self.eat(&token::Semi) {\n-                        self.span_err(self.prev_span,\n-                                      \"macros that expand to items must \\\n-                                       either be surrounded with braces or \\\n-                                       followed by a semicolon\");\n-                    }\n+                if style != MacStmtStyle::Braces && !self.eat(&token::Semi) {\n+                    self.report_invalid_macro_expansion_item();\n                 }\n                 let span = lo.to(hi);\n                 Stmt {\n@@ -8360,13 +8351,8 @@ impl<'a> Parser<'a> {\n             };\n             // eat a matched-delimiter token tree:\n             let (delim, tts) = self.expect_delimited_token_tree()?;\n-            if delim != MacDelimiter::Brace {\n-                if !self.eat(&token::Semi) {\n-                    self.span_err(self.prev_span,\n-                                  \"macros that expand to items must either \\\n-                                   be surrounded with braces or followed by \\\n-                                   a semicolon\");\n-                }\n+            if delim != MacDelimiter::Brace && !self.eat(&token::Semi) {\n+                self.report_invalid_macro_expansion_item();\n             }\n \n             let hi = self.prev_span;\n@@ -8597,6 +8583,25 @@ impl<'a> Parser<'a> {\n             }\n         }\n     }\n+\n+    fn report_invalid_macro_expansion_item(&self) {\n+        self.struct_span_err(\n+            self.prev_span,\n+            \"macros that expand to items must be delimited with braces or followed by a semicolon\",\n+        ).multipart_suggestion(\n+            \"change the delimiters to curly braces\",\n+            vec![\n+                (self.prev_span.with_hi(self.prev_span.lo() + BytePos(1)), String::from(\" {\")),\n+                (self.prev_span.with_lo(self.prev_span.hi() - BytePos(1)), '}'.to_string()),\n+            ],\n+            Applicability::MaybeIncorrect,\n+        ).span_suggestion(\n+            self.sess.source_map.next_point(self.prev_span),\n+            \"add a semicolon\",\n+            ';'.to_string(),\n+            Applicability::MaybeIncorrect,\n+        ).emit();\n+    }\n }\n \n pub fn emit_unclosed_delims(unclosed_delims: &mut Vec<UnmatchedBrace>, handler: &errors::Handler) {"}, {"sha": "ceb44ecf7f58379dea230ebdf0588cfa2c724e63", "filename": "src/test/ui/issues/issue-10536.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51/src%2Ftest%2Fui%2Fissues%2Fissue-10536.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51/src%2Ftest%2Fui%2Fissues%2Fissue-10536.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10536.rs?ref=5abd6d9492e8a5a4592bca4c18e1de6104b1ea51", "patch": "@@ -12,7 +12,7 @@ pub fn main() {\n     foo!();\n \n     assert!({one! two()});\n-    //~^ ERROR macros that expand to items must either be surrounded with braces or followed by a\n+    //~^ ERROR macros that expand to items\n     //~| ERROR cannot find macro `one!` in this scope\n     //~| ERROR mismatched types\n "}, {"sha": "584cdf43a8f4bafe862d2faab3869be92d290c04", "filename": "src/test/ui/issues/issue-10536.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51/src%2Ftest%2Fui%2Fissues%2Fissue-10536.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51/src%2Ftest%2Fui%2Fissues%2Fissue-10536.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-10536.stderr?ref=5abd6d9492e8a5a4592bca4c18e1de6104b1ea51", "patch": "@@ -1,8 +1,16 @@\n-error: macros that expand to items must either be surrounded with braces or followed by a semicolon\n+error: macros that expand to items must be delimited with braces or followed by a semicolon\n   --> $DIR/issue-10536.rs:14:22\n    |\n LL |     assert!({one! two()});\n    |                      ^^\n+help: change the delimiters to curly braces\n+   |\n+LL |     assert!({one! two {}});\n+   |                       ^^\n+help: add a semicolon\n+   |\n+LL |     assert!({one! two();});\n+   |                        ^\n \n error: expected `(` or `{`, found `}`\n   --> $DIR/issue-10536.rs:21:22"}, {"sha": "3afc275d61a2bc864fc954d558f5ba7e6106cb54", "filename": "src/test/ui/parser/macros-no-semicolon-items.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51/src%2Ftest%2Fui%2Fparser%2Fmacros-no-semicolon-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51/src%2Ftest%2Fui%2Fparser%2Fmacros-no-semicolon-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacros-no-semicolon-items.rs?ref=5abd6d9492e8a5a4592bca4c18e1de6104b1ea51", "patch": "@@ -1,4 +1,15 @@\n macro_rules! foo()  //~ ERROR semicolon\n+                    //~| ERROR unexpected end of macro\n+\n+macro_rules! bar {\n+    ($($tokens:tt)*) => {}\n+}\n+\n+bar!( //~ ERROR semicolon\n+    blah\n+    blah\n+    blah\n+)\n \n fn main() {\n }"}, {"sha": "5276aa6f5e9e9992ac6861e29b224b7fd333e37f", "filename": "src/test/ui/parser/macros-no-semicolon-items.stderr", "status": "modified", "additions": 39, "deletions": 2, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51/src%2Ftest%2Fui%2Fparser%2Fmacros-no-semicolon-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5abd6d9492e8a5a4592bca4c18e1de6104b1ea51/src%2Ftest%2Fui%2Fparser%2Fmacros-no-semicolon-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fmacros-no-semicolon-items.stderr?ref=5abd6d9492e8a5a4592bca4c18e1de6104b1ea51", "patch": "@@ -1,8 +1,45 @@\n-error: macros that expand to items must either be surrounded with braces or followed by a semicolon\n+error: macros that expand to items must be delimited with braces or followed by a semicolon\n   --> $DIR/macros-no-semicolon-items.rs:1:17\n    |\n LL | macro_rules! foo()\n    |                 ^^\n+help: change the delimiters to curly braces\n+   |\n+LL | macro_rules! foo {}\n+   |                  ^^\n+help: add a semicolon\n+   |\n+LL | macro_rules! foo();\n+   |                   ^\n+\n+error: macros that expand to items must be delimited with braces or followed by a semicolon\n+  --> $DIR/macros-no-semicolon-items.rs:8:5\n+   |\n+LL |   bar!(\n+   |  _____^\n+LL | |     blah\n+LL | |     blah\n+LL | |     blah\n+LL | | )\n+   | |_^\n+help: change the delimiters to curly braces\n+   |\n+LL | bar! {\n+LL |     blah\n+LL |     blah\n+LL |     blah\n+LL | }\n+   |\n+help: add a semicolon\n+   |\n+LL | );\n+   |  ^\n+\n+error: unexpected end of macro invocation\n+  --> $DIR/macros-no-semicolon-items.rs:1:1\n+   |\n+LL | macro_rules! foo()\n+   | ^^^^^^^^^^^^^^^^^^ missing tokens in macro arguments\n \n-error: aborting due to previous error\n+error: aborting due to 3 previous errors\n "}]}