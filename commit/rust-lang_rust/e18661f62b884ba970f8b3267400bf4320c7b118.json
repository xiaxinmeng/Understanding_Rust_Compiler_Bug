{"sha": "e18661f62b884ba970f8b3267400bf4320c7b118", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxODY2MWY2MmI4ODRiYTk3MGY4YjMyNjc0MDBiZjQzMjBjN2IxMTg=", "commit": {"author": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-09T18:19:23Z"}, "committer": {"name": "Veetaha", "email": "gerzoh1@gmail.com", "date": "2020-02-09T18:19:23Z"}, "message": "docs: Freshen docs for prebuilt binaries and raLspServer setting", "tree": {"sha": "de826bb15d8e336f2e9098d624b1d1d6e0eb14bb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de826bb15d8e336f2e9098d624b1d1d6e0eb14bb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e18661f62b884ba970f8b3267400bf4320c7b118", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e18661f62b884ba970f8b3267400bf4320c7b118", "html_url": "https://github.com/rust-lang/rust/commit/e18661f62b884ba970f8b3267400bf4320c7b118", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e18661f62b884ba970f8b3267400bf4320c7b118/comments", "author": null, "committer": null, "parents": [{"sha": "1b9b13b4b4a75b5531c3f046ce6bf72d681f2732", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b9b13b4b4a75b5531c3f046ce6bf72d681f2732", "html_url": "https://github.com/rust-lang/rust/commit/1b9b13b4b4a75b5531c3f046ce6bf72d681f2732"}], "stats": {"total": 28, "additions": 23, "deletions": 5}, "files": [{"sha": "991deaf902ab30353813f220374706b8e43d67d0", "filename": "docs/dev/README.md", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e18661f62b884ba970f8b3267400bf4320c7b118/docs%2Fdev%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/e18661f62b884ba970f8b3267400bf4320c7b118/docs%2Fdev%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2FREADME.md?ref=e18661f62b884ba970f8b3267400bf4320c7b118", "patch": "@@ -74,7 +74,7 @@ relevant test and execute it (VS Code includes an action for running a single\n test).\n \n However, launching a VS Code instance with locally build language server is\n-possible. There's \"Run Extension (Dev Server)\" launch configuration for this.\n+possible. There's **\"Run Extension (Dev Server)\"** launch configuration for this.\n \n In general, I use one of the following workflows for fixing bugs and\n implementing features.\n@@ -88,7 +88,14 @@ Code to sanity check that the thing works as I expect.\n \n If the problem concerns only the VS Code extension, I use **Run Extension**\n launch configuration from `launch.json`. Notably, this uses the usual\n-`ra_lsp_server` binary from `PATH`. After I am done with the fix, I use `cargo\n+`ra_lsp_server` binary from `PATH`. For this it is important to have the following\n+in `setting.json` file:\n+```json\n+{\n+    \"rust-analyzer.raLspServerPath\": \"ra_lsp_server\"\n+}\n+```\n+After I am done with the fix, I use `cargo\n xtask install --client-code` to try the new extension for real.\n \n If I need to fix something in the `ra_lsp_server` crate, I feel sad because it's"}, {"sha": "1e7d516c5faa6251290cf733db9f16276d98d2b2", "filename": "docs/user/README.md", "status": "modified", "additions": 14, "deletions": 3, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/e18661f62b884ba970f8b3267400bf4320c7b118/docs%2Fuser%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/e18661f62b884ba970f8b3267400bf4320c7b118/docs%2Fuser%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fuser%2FREADME.md?ref=e18661f62b884ba970f8b3267400bf4320c7b118", "patch": "@@ -57,7 +57,7 @@ For updates you need to remove installed binary\n rm -rf ${HOME}/.config/Code/User/globalStorage/matklad.rust-analyzer\n ```\n \n-`\"Donwload latest language server\"` command for VSCode and automatic updates detection is currently WIP.\n+`\"Download latest language server\"` command for VSCode and automatic updates detection is currently WIP.\n \n \n ### Installation from sources\n@@ -71,6 +71,16 @@ $ cd rust-analyzer\n $ cargo xtask install\n ```\n \n+After that you need to amend your `settings.json` file to explicitly specify the\n+path to `ra_lsp_server` that you've just built.\n+```json\n+{\n+    \"rust-analyzer.raLspServerPath\": \"ra_lsp_server\"\n+}\n+```\n+This should work on all platforms, otherwise if installed `ra_lsp_server` is not available through your `$PATH` then see how to configure it [here](#setting-up-the-PATH-variable).\n+\n+\n The automatic installation is expected to *just work* for common cases, if it\n doesn't, report bugs!\n \n@@ -127,7 +137,7 @@ host.\n   As an example, [Pale Fire](https://github.com/matklad/pale-fire/) color scheme tweaks rust colors.\n * `rust-analyzer.enableEnhancedTyping`: by default, rust-analyzer intercepts the\n   `Enter` key to make it easier to continue comments. Note that it may conflict with VIM emulation plugin.\n-* `rust-analyzer.raLspServerPath`: path to `ra_lsp_server` executable\n+* `rust-analyzer.raLspServerPath`: path to `ra_lsp_server` executable, when absent or `null` defaults to prebuilt binary path\n * `rust-analyzer.enableCargoWatchOnStartup`: prompt to install & enable `cargo\n   watch` for live error highlighting (note, this **does not** use rust-analyzer)\n * `rust-analyzer.excludeGlobs`: a list of glob-patterns for exclusion (see globset [docs](https://docs.rs/globset) for syntax).\n@@ -232,7 +242,8 @@ Installation:\n \n * You can now invoke the command palette and type LSP enable to locally/globally enable the rust-analyzer LSP (type LSP enable, then choose either locally or globally, then select rust-analyzer)\n \n-### Setting up the `PATH` variable\n+\n+### Setting up the `PATH` variable <!-- Update links to this header when changing it! -->\n \n On Unix systems, `rustup` adds `~/.cargo/bin` to `PATH` by modifying the shell's\n startup file. Depending on your configuration, your Desktop Environment might not"}]}