{"sha": "873f7408bdffdb05b23f77aa343abd05f2e3126c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3M2Y3NDA4YmRmZmRiMDViMjNmNzdhYTM0M2FiZDA1ZjJlMzEyNmM=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-03-18T13:20:30Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-03-18T20:47:50Z"}, "message": "rustc: test: don't silently ignore bad benches\n\nThis is adequate because when a function has a type that isn't caught here,\nthat is, it has a single argument, but it *isn't* `&mut BenchHarness`, it\nerrors later on with:\n\n     error: mismatched types: expected `fn(&mut test::BenchHarness)` but found\n     `fn(int)` (expected &-ptr but found int)\n\nwhich I consider acceptable.\n\nCloses #12997", "tree": {"sha": "4fe3d6d69bf02851c1fb9aa188fa2b504150c444", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fe3d6d69bf02851c1fb9aa188fa2b504150c444"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/873f7408bdffdb05b23f77aa343abd05f2e3126c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/873f7408bdffdb05b23f77aa343abd05f2e3126c", "html_url": "https://github.com/rust-lang/rust/commit/873f7408bdffdb05b23f77aa343abd05f2e3126c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/873f7408bdffdb05b23f77aa343abd05f2e3126c/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f9e0baa19a33c2b98f502d9604dabacd8f634965", "url": "https://api.github.com/repos/rust-lang/rust/commits/f9e0baa19a33c2b98f502d9604dabacd8f634965", "html_url": "https://github.com/rust-lang/rust/commit/f9e0baa19a33c2b98f502d9604dabacd8f634965"}], "stats": {"total": 51, "additions": 46, "deletions": 5}, "files": [{"sha": "6d8029b1638c4df3459cc62872d95d26a46b49e9", "filename": "src/librustc/front/test.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/873f7408bdffdb05b23f77aa343abd05f2e3126c/src%2Flibrustc%2Ffront%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/873f7408bdffdb05b23f77aa343abd05f2e3126c/src%2Flibrustc%2Ffront%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Ffront%2Ftest.rs?ref=873f7408bdffdb05b23f77aa343abd05f2e3126c", "patch": "@@ -95,10 +95,9 @@ impl<'a> fold::Folder for TestHarnessGenerator<'a> {\n         debug!(\"current path: {}\",\n                ast_util::path_name_i(self.cx.path.get().as_slice()));\n \n-        if is_test_fn(&self.cx, i) || is_bench_fn(i) {\n+        if is_test_fn(&self.cx, i) || is_bench_fn(&self.cx, i) {\n             match i.node {\n-                ast::ItemFn(_, purity, _, _, _)\n-                    if purity == ast::UnsafeFn => {\n+                ast::ItemFn(_, ast::UnsafeFn, _, _, _) => {\n                     let sess = self.cx.sess;\n                     sess.span_fatal(i.span,\n                                     \"unsafe functions cannot be used for \\\n@@ -109,7 +108,7 @@ impl<'a> fold::Folder for TestHarnessGenerator<'a> {\n                     let test = Test {\n                         span: i.span,\n                         path: self.cx.path.get(),\n-                        bench: is_bench_fn(i),\n+                        bench: is_bench_fn(&self.cx, i),\n                         ignore: is_ignored(&self.cx, i),\n                         should_fail: should_fail(i)\n                     };\n@@ -233,7 +232,7 @@ fn is_test_fn(cx: &TestCtxt, i: @ast::Item) -> bool {\n     return has_test_attr && has_test_signature(i);\n }\n \n-fn is_bench_fn(i: @ast::Item) -> bool {\n+fn is_bench_fn(cx: &TestCtxt, i: @ast::Item) -> bool {\n     let has_bench_attr = attr::contains_name(i.attrs.as_slice(), \"bench\");\n \n     fn has_test_signature(i: @ast::Item) -> bool {\n@@ -254,6 +253,12 @@ fn is_bench_fn(i: @ast::Item) -> bool {\n         }\n     }\n \n+    if has_bench_attr && !has_test_signature(i) {\n+        let sess = cx.sess;\n+        sess.span_err(i.span, \"functions used as benches must have signature \\\n+                      `fn(&mut BenchHarness) -> ()`\");\n+    }\n+\n     return has_bench_attr && has_test_signature(i);\n }\n "}, {"sha": "193cbcb25b74d8bf978d5998a2df1cfacf9ba41d", "filename": "src/test/compile-fail/issue-12997-1.rs", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/873f7408bdffdb05b23f77aa343abd05f2e3126c/src%2Ftest%2Fcompile-fail%2Fissue-12997-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/873f7408bdffdb05b23f77aa343abd05f2e3126c/src%2Ftest%2Fcompile-fail%2Fissue-12997-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12997-1.rs?ref=873f7408bdffdb05b23f77aa343abd05f2e3126c", "patch": "@@ -0,0 +1,19 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --test\n+\n+//! Test that makes sure wrongly-typed bench functions aren't ignored\n+\n+#[bench]\n+fn foo() { } //~ ERROR functions used as benches\n+\n+#[bench]\n+fn bar(x: int, y: int) { } //~ ERROR functions used as benches"}, {"sha": "f520ce0eabba6aeb020d883877d846dae14f2109", "filename": "src/test/compile-fail/issue-12997-2.rs", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/873f7408bdffdb05b23f77aa343abd05f2e3126c/src%2Ftest%2Fcompile-fail%2Fissue-12997-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/873f7408bdffdb05b23f77aa343abd05f2e3126c/src%2Ftest%2Fcompile-fail%2Fissue-12997-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-12997-2.rs?ref=873f7408bdffdb05b23f77aa343abd05f2e3126c", "patch": "@@ -0,0 +1,17 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: --test\n+\n+//! Test that makes sure wrongly-typed bench functions are rejected\n+\n+// error-pattern:expected &-ptr but found int\n+#[bench]\n+fn bar(x: int) { }"}]}