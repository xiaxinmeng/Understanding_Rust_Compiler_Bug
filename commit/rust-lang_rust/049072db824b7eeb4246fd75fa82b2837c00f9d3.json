{"sha": "049072db824b7eeb4246fd75fa82b2837c00f9d3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0OTA3MmRiODI0YjdlZWI0MjQ2ZmQ3NWZhODJiMjgzN2MwMGY5ZDM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-06T01:45:06Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-11-06T01:45:06Z"}, "message": "Update lltrans to also emit WinMain@16 on windows.", "tree": {"sha": "5561d47944e2a8178c3be429c0fed20c74f01e35", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5561d47944e2a8178c3be429c0fed20c74f01e35"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/049072db824b7eeb4246fd75fa82b2837c00f9d3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/049072db824b7eeb4246fd75fa82b2837c00f9d3", "html_url": "https://github.com/rust-lang/rust/commit/049072db824b7eeb4246fd75fa82b2837c00f9d3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/049072db824b7eeb4246fd75fa82b2837c00f9d3/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "216082d0405c36e63f602462bb119a3c3b4a488d", "url": "https://api.github.com/repos/rust-lang/rust/commits/216082d0405c36e63f602462bb119a3c3b4a488d", "html_url": "https://github.com/rust-lang/rust/commit/216082d0405c36e63f602462bb119a3c3b4a488d"}], "stats": {"total": 13, "additions": 10, "deletions": 3}, "files": [{"sha": "67f02517653e8cf82dd73eceb9ba5ba3970709a9", "filename": "src/boot/llvm/llasm.ml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/049072db824b7eeb4246fd75fa82b2837c00f9d3/src%2Fboot%2Fllvm%2Fllasm.ml", "raw_url": "https://github.com/rust-lang/rust/raw/049072db824b7eeb4246fd75fa82b2837c00f9d3/src%2Fboot%2Fllvm%2Fllasm.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fllvm%2Fllasm.ml?ref=049072db824b7eeb4246fd75fa82b2837c00f9d3", "patch": "@@ -26,7 +26,7 @@ let x86_glue\n   let (prefix,align) =\n     match sess.Session.sess_targ with\n         Linux_x86_elf\n-      | Win32_x86_pe -> (\"\",4)\n+      | Win32_x86_pe -> (\"_\",4)\n       | MacOS_x86_macho -> (\"_\", 16)\n   in\n   let save_callee_saves ="}, {"sha": "a7e190cd9c186f1793fd4545d96360fe86bc6d7c", "filename": "src/boot/llvm/llfinal.ml", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/049072db824b7eeb4246fd75fa82b2837c00f9d3/src%2Fboot%2Fllvm%2Fllfinal.ml", "raw_url": "https://github.com/rust-lang/rust/raw/049072db824b7eeb4246fd75fa82b2837c00f9d3/src%2Fboot%2Fllvm%2Fllfinal.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fllvm%2Fllfinal.ml?ref=049072db824b7eeb4246fd75fa82b2837c00f9d3", "patch": "@@ -4,6 +4,7 @@\n  *)\n \n let finalize_module\n+    (sess:Session.sess)\n     (llctx:Llvm.llcontext)\n     (llmod:Llvm.llmodule)\n     (abi:Llabi.abi)\n@@ -68,7 +69,13 @@ let finalize_module\n   (* Define the main function for crt0 to call. *)\n   let main_fn =\n     let main_ty = Llvm.function_type i32 [| i32; i32 |] in\n-    Llvm.define_function \"main\" main_ty llmod\n+    let main_name =\n+      match sess.Session.sess_targ with\n+          Common.Win32_x86_pe -> \"WinMain@16\"\n+        | Common.Linux_x86_elf\n+        | Common.MacOS_x86_macho -> \"main\"\n+  in\n+    Llvm.define_function main_name main_ty llmod\n   in\n   let argc = Llvm.param main_fn 0 in\n   let argv = Llvm.param main_fn 1 in"}, {"sha": "22c1557e7c7d938fa749a57d1a8c7ce860b40000", "filename": "src/boot/llvm/lltrans.ml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/049072db824b7eeb4246fd75fa82b2837c00f9d3/src%2Fboot%2Fllvm%2Flltrans.ml", "raw_url": "https://github.com/rust-lang/rust/raw/049072db824b7eeb4246fd75fa82b2837c00f9d3/src%2Fboot%2Fllvm%2Flltrans.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fllvm%2Flltrans.ml?ref=049072db824b7eeb4246fd75fa82b2837c00f9d3", "patch": "@@ -1132,7 +1132,7 @@ let trans_crate\n         Hashtbl.iter declare_mod_item items;\n         Hashtbl.iter trans_mod_item items;\n         Llfinal.finalize_module\n-          llctx llmod abi asm_glue exit_task_glue crate_ptr;\n+          sess llctx llmod abi asm_glue exit_task_glue crate_ptr;\n         llmod\n     with e -> Llvm.dispose_module llmod; raise e\n ;;"}]}