{"sha": "bf408ef5fdc5f95464eca620f170462b2e831a87", "node_id": "C_kwDOAAsO6NoAKGJmNDA4ZWY1ZmRjNWY5NTQ2NGVjYTYyMGYxNzA0NjJiMmU4MzFhODc", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-11-16T18:44:04Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-11-16T18:44:04Z"}, "message": "Merge #10777\n\n10777: internal: Allow disabling perf access via `RA_DISABLE_PERF` r=lnicola a=jonas-schievink\n\nhttps://github.com/rr-debugger/rr does not support the perf-specific ioctls, so add a way to avoid them.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "bde057cc8ba7769c6d0752820e3c75db3535d3f4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bde057cc8ba7769c6d0752820e3c75db3535d3f4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bf408ef5fdc5f95464eca620f170462b2e831a87", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhk/v0CRBK7hj4Ov3rIwAAw6kIAB9NaL188EibyzqW5gGErOSo\nIG2X9oencV/sF3QA9fhrxhCNwHNsCsUgLumuoO3ut4ZxV7ApP4Rzkk4OhrJmfEZk\nPLZ9Yz/fjw3uHGfYWgEyLKmikJR3Hxo7z+tJmo13/SJYLpd/zfiKZTFQWRFzusLB\nE9PTqluVu86j6qFXp0jzjmjlyLjHu4YIXwZcxT9HnxwBFUL1L3Cns+50Bf6LWy9b\n16HyYaDti/YqPI0icPS7USYUGAi16KJwOLd/I+atPq4rgwUvLlVyPU0vqXYyYHXw\ndabauWVnkfAH9FVbO2ej+nbMDA1nJ4Fp0Za+mWrj4/SrLlgPfhZN/Bt8SAEItss=\n=ADlu\n-----END PGP SIGNATURE-----\n", "payload": "tree bde057cc8ba7769c6d0752820e3c75db3535d3f4\nparent 9f1e26c3f9804eaaf2941feaa140d6f8c6d8c562\nparent 445280a1b1d740f084f39efa3f583980adfe1dfa\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1637088244 +0000\ncommitter GitHub <noreply@github.com> 1637088244 +0000\n\nMerge #10777\n\n10777: internal: Allow disabling perf access via `RA_DISABLE_PERF` r=lnicola a=jonas-schievink\n\nhttps://github.com/rr-debugger/rr does not support the perf-specific ioctls, so add a way to avoid them.\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bf408ef5fdc5f95464eca620f170462b2e831a87", "html_url": "https://github.com/rust-lang/rust/commit/bf408ef5fdc5f95464eca620f170462b2e831a87", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bf408ef5fdc5f95464eca620f170462b2e831a87/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9f1e26c3f9804eaaf2941feaa140d6f8c6d8c562", "url": "https://api.github.com/repos/rust-lang/rust/commits/9f1e26c3f9804eaaf2941feaa140d6f8c6d8c562", "html_url": "https://github.com/rust-lang/rust/commit/9f1e26c3f9804eaaf2941feaa140d6f8c6d8c562"}, {"sha": "445280a1b1d740f084f39efa3f583980adfe1dfa", "url": "https://api.github.com/repos/rust-lang/rust/commits/445280a1b1d740f084f39efa3f583980adfe1dfa", "html_url": "https://github.com/rust-lang/rust/commit/445280a1b1d740f084f39efa3f583980adfe1dfa"}], "stats": {"total": 27, "additions": 19, "deletions": 8}, "files": [{"sha": "6258328482962d622b0c6d91ee1641d7cf35940c", "filename": "crates/profile/src/stop_watch.rs", "status": "modified", "additions": 19, "deletions": 8, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/bf408ef5fdc5f95464eca620f170462b2e831a87/crates%2Fprofile%2Fsrc%2Fstop_watch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bf408ef5fdc5f95464eca620f170462b2e831a87/crates%2Fprofile%2Fsrc%2Fstop_watch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fprofile%2Fsrc%2Fstop_watch.rs?ref=bf408ef5fdc5f95464eca620f170462b2e831a87", "patch": "@@ -23,16 +23,27 @@ impl StopWatch {\n     pub fn start() -> StopWatch {\n         #[cfg(target_os = \"linux\")]\n         let counter = {\n-            let mut counter = perf_event::Builder::new()\n-                .build()\n-                .map_err(|err| eprintln!(\"Failed to create perf counter: {}\", err))\n-                .ok();\n-            if let Some(counter) = &mut counter {\n-                if let Err(err) = counter.enable() {\n-                    eprintln!(\"Failed to start perf counter: {}\", err)\n+            // When debugging rust-analyzer using rr, the perf-related syscalls cause it to abort.\n+            // We allow disabling perf by setting the env var `RA_DISABLE_PERF`.\n+\n+            use once_cell::sync::Lazy;\n+            static PERF_ENABLED: Lazy<bool> =\n+                Lazy::new(|| std::env::var_os(\"RA_DISABLE_PERF\").is_none());\n+\n+            if *PERF_ENABLED {\n+                let mut counter = perf_event::Builder::new()\n+                    .build()\n+                    .map_err(|err| eprintln!(\"Failed to create perf counter: {}\", err))\n+                    .ok();\n+                if let Some(counter) = &mut counter {\n+                    if let Err(err) = counter.enable() {\n+                        eprintln!(\"Failed to start perf counter: {}\", err)\n+                    }\n                 }\n+                counter\n+            } else {\n+                None\n             }\n-            counter\n         };\n         let time = Instant::now();\n         StopWatch {"}]}