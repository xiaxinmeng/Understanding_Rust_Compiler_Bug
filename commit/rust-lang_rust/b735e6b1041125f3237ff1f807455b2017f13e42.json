{"sha": "b735e6b1041125f3237ff1f807455b2017f13e42", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3MzVlNmIxMDQxMTI1ZjMyMzdmZjFmODA3NDU1YjIwMTdmMTNlNDI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-06T20:25:09Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-07T23:32:20Z"}, "message": "doc: Fix deadlocks in tutorial due to yield bustage", "tree": {"sha": "51c0ddb4e402ce746f0d005e48abdedc7b0c7b05", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51c0ddb4e402ce746f0d005e48abdedc7b0c7b05"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b735e6b1041125f3237ff1f807455b2017f13e42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b735e6b1041125f3237ff1f807455b2017f13e42", "html_url": "https://github.com/rust-lang/rust/commit/b735e6b1041125f3237ff1f807455b2017f13e42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b735e6b1041125f3237ff1f807455b2017f13e42/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad8010fdf20da90cf3ca06a278a6b9b9bda048fd", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad8010fdf20da90cf3ca06a278a6b9b9bda048fd", "html_url": "https://github.com/rust-lang/rust/commit/ad8010fdf20da90cf3ca06a278a6b9b9bda048fd"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "d9e4b9b399d2c623309e8d88cc479d867abdc11f", "filename": "doc/tutorial-tasks.md", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b735e6b1041125f3237ff1f807455b2017f13e42/doc%2Ftutorial-tasks.md", "raw_url": "https://github.com/rust-lang/rust/raw/b735e6b1041125f3237ff1f807455b2017f13e42/doc%2Ftutorial-tasks.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial-tasks.md?ref=b735e6b1041125f3237ff1f807455b2017f13e42", "patch": "@@ -492,7 +492,8 @@ either task fails, it kills the other one.\n \n ~~~\n # use std::task;\n-# fn sleep_forever() { loop { task::yield() } }\n+# use std::comm::oneshot;\n+# fn sleep_forever() { loop { let (p, c) = oneshot::<()>(); p.recv(); } }\n # do task::try {\n do spawn {\n     do spawn {\n@@ -513,9 +514,10 @@ before returning. Hence:\n \n ~~~\n # use std::comm::{stream, Chan, Port};\n+# use std::comm::oneshot;\n # use std::task::{spawn, try};\n # use std::task;\n-# fn sleep_forever() { loop { task::yield() } }\n+# fn sleep_forever() { loop { let (p, c) = oneshot::<()>(); p.recv(); } }\n # do task::try {\n let (receiver, sender): (Port<int>, Chan<int>) = stream();\n do spawn {  // Bidirectionally linked\n@@ -543,7 +545,8 @@ an intermediate generation has already exited:\n \n ~~~\n # use std::task;\n-# fn sleep_forever() { loop { task::yield() } }\n+# use std::comm::oneshot;\n+# fn sleep_forever() { loop { let (p, c) = oneshot::<()>(); p.recv(); } }\n # fn wait_for_a_while() { for _ in range(0, 1000u) { task::yield() } }\n # do task::try::<int> {\n do task::spawn_supervised {"}]}