{"sha": "687bec117c0a59dc58daf5c9954c906eeb60de21", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4N2JlYzExN2MwYTU5ZGM1OGRhZjVjOTk1NGM5MDZlZWI2MGRlMjE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-13T16:58:49Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-13T16:58:49Z"}, "message": "Don't use generic DB where a concrete one will do", "tree": {"sha": "8c6ee929ffa9f820e98b1b661e2ef7ddcf4d5b32", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c6ee929ffa9f820e98b1b661e2ef7ddcf4d5b32"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/687bec117c0a59dc58daf5c9954c906eeb60de21", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/687bec117c0a59dc58daf5c9954c906eeb60de21", "html_url": "https://github.com/rust-lang/rust/commit/687bec117c0a59dc58daf5c9954c906eeb60de21", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/687bec117c0a59dc58daf5c9954c906eeb60de21/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c85e53531fc9e2e2c2f1368c01e08e10e190cd5", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c85e53531fc9e2e2c2f1368c01e08e10e190cd5", "html_url": "https://github.com/rust-lang/rust/commit/4c85e53531fc9e2e2c2f1368c01e08e10e190cd5"}], "stats": {"total": 17, "additions": 8, "deletions": 9}, "files": [{"sha": "97cf90ae421759c00e61e3dd443abbfdda392e79", "filename": "crates/ra_assists/src/handlers/fill_match_arms.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/687bec117c0a59dc58daf5c9954c906eeb60de21/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "raw_url": "https://github.com/rust-lang/rust/raw/687bec117c0a59dc58daf5c9954c906eeb60de21/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_assists%2Fsrc%2Fhandlers%2Ffill_match_arms.rs?ref=687bec117c0a59dc58daf5c9954c906eeb60de21", "patch": "@@ -2,7 +2,7 @@\n \n use std::iter;\n \n-use hir::{db::HirDatabase, Adt, HasSource, Semantics};\n+use hir::{Adt, HasSource, Semantics};\n use ra_syntax::ast::{self, edit::IndentLevel, make, AstNode, NameOwner};\n \n use crate::{Assist, AssistCtx, AssistId};\n@@ -88,11 +88,7 @@ fn resolve_enum_def(sema: &Semantics<RootDatabase>, expr: &ast::Expr) -> Option<\n     })\n }\n \n-fn build_pat(\n-    db: &impl HirDatabase,\n-    module: hir::Module,\n-    var: hir::EnumVariant,\n-) -> Option<ast::Pat> {\n+fn build_pat(db: &RootDatabase, module: hir::Module, var: hir::EnumVariant) -> Option<ast::Pat> {\n     let path = crate::ast_transform::path_to_ast(module.find_use_path(db, var.into())?);\n \n     // FIXME: use HIR for this; it doesn't currently expose struct vs. tuple vs. unit variants though"}, {"sha": "25384860296eab991477c659ef52855c6a03ad67", "filename": "crates/ra_ide/src/completion/presentation.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/687bec117c0a59dc58daf5c9954c906eeb60de21/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/687bec117c0a59dc58daf5c9954c906eeb60de21/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=687bec117c0a59dc58daf5c9954c906eeb60de21", "patch": "@@ -1,6 +1,6 @@\n //! This modules takes care of rendering various definitions as completion items.\n \n-use hir::{db::HirDatabase, Docs, HasAttrs, HasSource, HirDisplay, ScopeDef, StructKind, Type};\n+use hir::{Docs, HasAttrs, HasSource, HirDisplay, ScopeDef, StructKind, Type};\n use join_to_string::join;\n use ra_syntax::ast::NameOwner;\n use test_utils::tested_by;\n@@ -9,7 +9,10 @@ use crate::completion::{\n     CompletionContext, CompletionItem, CompletionItemKind, CompletionKind, Completions,\n };\n \n-use crate::display::{const_label, macro_label, type_label, FunctionSignature};\n+use crate::{\n+    display::{const_label, macro_label, type_label, FunctionSignature},\n+    RootDatabase,\n+};\n \n impl Completions {\n     pub(crate) fn add_field(\n@@ -300,7 +303,7 @@ impl Completions {\n     }\n }\n \n-fn is_deprecated(node: impl HasAttrs, db: &impl HirDatabase) -> bool {\n+fn is_deprecated(node: impl HasAttrs, db: &RootDatabase) -> bool {\n     node.attrs(db).by_key(\"deprecated\").exists()\n }\n "}]}