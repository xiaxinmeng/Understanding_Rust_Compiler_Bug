{"sha": "8642fc97dd1a9b4f0291726c47ec97d15599d74d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NDJmYzk3ZGQxYTliNGYwMjkxNzI2YzQ3ZWM5N2QxNTU5OWQ3NGQ=", "commit": {"author": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-05-22T20:39:19Z"}, "committer": {"name": "Eduardo Broto", "email": "ebroto@tutanota.com", "date": "2020-05-25T18:00:08Z"}, "message": "multiple_crate_versions: skip dev and build deps", "tree": {"sha": "7bdbe026a7b4e5f652574cf780a2d45d83c395b0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7bdbe026a7b4e5f652574cf780a2d45d83c395b0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8642fc97dd1a9b4f0291726c47ec97d15599d74d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8642fc97dd1a9b4f0291726c47ec97d15599d74d", "html_url": "https://github.com/rust-lang/rust/commit/8642fc97dd1a9b4f0291726c47ec97d15599d74d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8642fc97dd1a9b4f0291726c47ec97d15599d74d/comments", "author": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ebroto", "id": 816908, "node_id": "MDQ6VXNlcjgxNjkwOA==", "avatar_url": "https://avatars.githubusercontent.com/u/816908?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ebroto", "html_url": "https://github.com/ebroto", "followers_url": "https://api.github.com/users/ebroto/followers", "following_url": "https://api.github.com/users/ebroto/following{/other_user}", "gists_url": "https://api.github.com/users/ebroto/gists{/gist_id}", "starred_url": "https://api.github.com/users/ebroto/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ebroto/subscriptions", "organizations_url": "https://api.github.com/users/ebroto/orgs", "repos_url": "https://api.github.com/users/ebroto/repos", "events_url": "https://api.github.com/users/ebroto/events{/privacy}", "received_events_url": "https://api.github.com/users/ebroto/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cff5cff2f3a6687dfaf12b92762e70545e0abefe", "url": "https://api.github.com/repos/rust-lang/rust/commits/cff5cff2f3a6687dfaf12b92762e70545e0abefe", "html_url": "https://github.com/rust-lang/rust/commit/cff5cff2f3a6687dfaf12b92762e70545e0abefe"}], "stats": {"total": 80, "additions": 66, "deletions": 14}, "files": [{"sha": "b24ec897ef5ad3682f2e4b04777f689c1da42e52", "filename": "clippy_lints/src/multiple_crate_versions.rs", "status": "modified", "additions": 45, "deletions": 14, "changes": 59, "blob_url": "https://github.com/rust-lang/rust/blob/8642fc97dd1a9b4f0291726c47ec97d15599d74d/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8642fc97dd1a9b4f0291726c47ec97d15599d74d/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmultiple_crate_versions.rs?ref=8642fc97dd1a9b4f0291726c47ec97d15599d74d", "patch": "@@ -1,11 +1,14 @@\n //! lint on multiple versions of a crate being used\n \n use crate::utils::{run_lints, span_lint};\n+use rustc_hir::def_id::LOCAL_CRATE;\n use rustc_hir::{Crate, CRATE_HIR_ID};\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n use rustc_span::source_map::DUMMY_SP;\n \n+use cargo_metadata::{DependencyKind, MetadataCommand, Node, Package, PackageId};\n+use if_chain::if_chain;\n use itertools::Itertools;\n \n declare_clippy_lint! {\n@@ -34,37 +37,65 @@ declare_clippy_lint! {\n declare_lint_pass!(MultipleCrateVersions => [MULTIPLE_CRATE_VERSIONS]);\n \n impl LateLintPass<'_, '_> for MultipleCrateVersions {\n+    #[allow(clippy::find_map)]\n     fn check_crate(&mut self, cx: &LateContext<'_, '_>, _: &Crate<'_>) {\n         if !run_lints(cx, &[MULTIPLE_CRATE_VERSIONS], CRATE_HIR_ID) {\n             return;\n         }\n \n-        let metadata = if let Ok(metadata) = cargo_metadata::MetadataCommand::new().exec() {\n+        let metadata = if let Ok(metadata) = MetadataCommand::new().exec() {\n             metadata\n         } else {\n             span_lint(cx, MULTIPLE_CRATE_VERSIONS, DUMMY_SP, \"could not read cargo metadata\");\n-\n             return;\n         };\n \n+        let local_name = cx.tcx.crate_name(LOCAL_CRATE).as_str();\n         let mut packages = metadata.packages;\n         packages.sort_by(|a, b| a.name.cmp(&b.name));\n \n-        for (name, group) in &packages.into_iter().group_by(|p| p.name.clone()) {\n-            let group: Vec<cargo_metadata::Package> = group.collect();\n+        if_chain! {\n+            if let Some(resolve) = &metadata.resolve;\n+            if let Some(local_id) = packages.iter().find(|p| p.name == *local_name).map(|p| &p.id);\n+            then {\n+                for (name, group) in &packages.iter().group_by(|p| p.name.clone()) {\n+                    let group: Vec<&Package> = group.collect();\n+\n+                    if group.len() <= 1 {\n+                        continue;\n+                    }\n \n-            if group.len() > 1 {\n-                let mut versions: Vec<_> = group.into_iter().map(|p| p.version).collect();\n-                versions.sort();\n-                let versions = versions.iter().join(\", \");\n+                    if group.iter().all(|p| is_normal_dep(&resolve.nodes, local_id, &p.id)) {\n+                        let mut versions: Vec<_> = group.into_iter().map(|p| &p.version).collect();\n+                        versions.sort();\n+                        let versions = versions.iter().join(\", \");\n \n-                span_lint(\n-                    cx,\n-                    MULTIPLE_CRATE_VERSIONS,\n-                    DUMMY_SP,\n-                    &format!(\"multiple versions for dependency `{}`: {}\", name, versions),\n-                );\n+                        span_lint(\n+                            cx,\n+                            MULTIPLE_CRATE_VERSIONS,\n+                            DUMMY_SP,\n+                            &format!(\"multiple versions for dependency `{}`: {}\", name, versions),\n+                        );\n+                    }\n+                }\n             }\n         }\n     }\n }\n+\n+fn is_normal_dep(nodes: &[Node], local_id: &PackageId, dep_id: &PackageId) -> bool {\n+    fn depends_on(node: &Node, dep_id: &PackageId) -> bool {\n+        node.deps.iter().any(|dep| {\n+            dep.pkg == *dep_id\n+                && dep\n+                    .dep_kinds\n+                    .iter()\n+                    .any(|info| matches!(info.kind, DependencyKind::Normal))\n+        })\n+    }\n+\n+    nodes\n+        .iter()\n+        .filter(|node| depends_on(node, dep_id))\n+        .any(|node| node.id == *local_id || is_normal_dep(nodes, local_id, &node.id))\n+}"}, {"sha": "72731fbc75d00c3e3587bc91de4ffc3d3bd31f23", "filename": "tests/ui-cargo/multiple_crate_versions/5041_allow_dev_build/Cargo.toml", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8642fc97dd1a9b4f0291726c47ec97d15599d74d/tests%2Fui-cargo%2Fmultiple_crate_versions%2F5041_allow_dev_build%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/8642fc97dd1a9b4f0291726c47ec97d15599d74d/tests%2Fui-cargo%2Fmultiple_crate_versions%2F5041_allow_dev_build%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmultiple_crate_versions%2F5041_allow_dev_build%2FCargo.toml?ref=8642fc97dd1a9b4f0291726c47ec97d15599d74d", "patch": "@@ -0,0 +1,17 @@\n+# Should not lint for dev or build dependencies. See issue 5041.\n+\n+[package]\n+name = \"multiple_crate_versions\"\n+version = \"0.1.0\"\n+publish = false\n+\n+# One of the versions of winapi is only a dev dependency: allowed\n+[dependencies]\n+ctrlc = \"=3.1.0\"\n+[dev-dependencies]\n+ansi_term = \"=0.11.0\"\n+\n+# Both versions of winapi are a build dependency: allowed\n+[build-dependencies]\n+ctrlc = \"=3.1.0\"\n+ansi_term = \"=0.11.0\""}, {"sha": "1b2d3ec9459f9520ec0c8201dad49ac265051fd8", "filename": "tests/ui-cargo/multiple_crate_versions/5041_allow_dev_build/src/main.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8642fc97dd1a9b4f0291726c47ec97d15599d74d/tests%2Fui-cargo%2Fmultiple_crate_versions%2F5041_allow_dev_build%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8642fc97dd1a9b4f0291726c47ec97d15599d74d/tests%2Fui-cargo%2Fmultiple_crate_versions%2F5041_allow_dev_build%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-cargo%2Fmultiple_crate_versions%2F5041_allow_dev_build%2Fsrc%2Fmain.rs?ref=8642fc97dd1a9b4f0291726c47ec97d15599d74d", "patch": "@@ -0,0 +1,4 @@\n+// compile-flags: --crate-name=multiple_crate_versions\n+#![warn(clippy::multiple_crate_versions)]\n+\n+fn main() {}"}]}