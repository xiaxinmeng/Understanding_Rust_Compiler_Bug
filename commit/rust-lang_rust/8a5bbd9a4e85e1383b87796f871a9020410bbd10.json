{"sha": "8a5bbd9a4e85e1383b87796f871a9020410bbd10", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhhNWJiZDlhNGU4NWUxMzgzYjg3Nzk2Zjg3MWE5MDIwNDEwYmJkMTA=", "commit": {"author": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-11-15T13:33:47Z"}, "committer": {"name": "Simon Sapin", "email": "simon.sapin@exyr.org", "date": "2018-11-20T17:22:40Z"}, "message": "Add tracking issue for unfold and successors", "tree": {"sha": "3ce967953a4911f2dadd78106d87b1f4307dd894", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3ce967953a4911f2dadd78106d87b1f4307dd894"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a5bbd9a4e85e1383b87796f871a9020410bbd10", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a5bbd9a4e85e1383b87796f871a9020410bbd10", "html_url": "https://github.com/rust-lang/rust/commit/8a5bbd9a4e85e1383b87796f871a9020410bbd10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a5bbd9a4e85e1383b87796f871a9020410bbd10/comments", "author": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SimonSapin", "id": 291359, "node_id": "MDQ6VXNlcjI5MTM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/291359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SimonSapin", "html_url": "https://github.com/SimonSapin", "followers_url": "https://api.github.com/users/SimonSapin/followers", "following_url": "https://api.github.com/users/SimonSapin/following{/other_user}", "gists_url": "https://api.github.com/users/SimonSapin/gists{/gist_id}", "starred_url": "https://api.github.com/users/SimonSapin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SimonSapin/subscriptions", "organizations_url": "https://api.github.com/users/SimonSapin/orgs", "repos_url": "https://api.github.com/users/SimonSapin/repos", "events_url": "https://api.github.com/users/SimonSapin/events{/privacy}", "received_events_url": "https://api.github.com/users/SimonSapin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "641c4909e4de0334c83372b4795388d98cfd257a", "url": "https://api.github.com/repos/rust-lang/rust/commits/641c4909e4de0334c83372b4795388d98cfd257a", "html_url": "https://github.com/rust-lang/rust/commit/641c4909e4de0334c83372b4795388d98cfd257a"}], "stats": {"total": 20, "additions": 10, "deletions": 10}, "files": [{"sha": "8ae4b53da95beabc64a9ec045f6370308f7b304b", "filename": "src/libcore/iter/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8a5bbd9a4e85e1383b87796f871a9020410bbd10/src%2Flibcore%2Fiter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5bbd9a4e85e1383b87796f871a9020410bbd10/src%2Flibcore%2Fiter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fmod.rs?ref=8a5bbd9a4e85e1383b87796f871a9020410bbd10", "patch": "@@ -339,7 +339,7 @@ pub use self::sources::{RepeatWith, repeat_with};\n pub use self::sources::{Empty, empty};\n #[stable(feature = \"iter_once\", since = \"1.2.0\")]\n pub use self::sources::{Once, once};\n-#[unstable(feature = \"iter_unfold\", issue = /* FIXME */ \"0\")]\n+#[unstable(feature = \"iter_unfold\", issue = \"55977\")]\n pub use self::sources::{Unfold, unfold, Successors, successors};\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}, {"sha": "6d35d54641531d9fc9bffa2fe09a84433ada32ec", "filename": "src/libcore/iter/sources.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/8a5bbd9a4e85e1383b87796f871a9020410bbd10/src%2Flibcore%2Fiter%2Fsources.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a5bbd9a4e85e1383b87796f871a9020410bbd10/src%2Flibcore%2Fiter%2Fsources.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fsources.rs?ref=8a5bbd9a4e85e1383b87796f871a9020410bbd10", "patch": "@@ -428,7 +428,7 @@ pub fn once<T>(value: T) -> Once<T> {\n /// assert_eq!(counter.collect::<Vec<_>>(), &[1, 2, 3, 4, 5]);\n /// ```\n #[inline]\n-#[unstable(feature = \"iter_unfold\", issue = /* FIXME */ \"0\")]\n+#[unstable(feature = \"iter_unfold\", issue = \"55977\")]\n pub fn unfold<St, T, F>(initial_state: St, f: F) -> Unfold<St, F>\n     where F: FnMut(&mut St) -> Option<T>\n {\n@@ -445,13 +445,13 @@ pub fn unfold<St, T, F>(initial_state: St, f: F) -> Unfold<St, F>\n ///\n /// [`unfold`]: fn.unfold.html\n #[derive(Clone)]\n-#[unstable(feature = \"iter_unfold\", issue = /* FIXME */ \"0\")]\n+#[unstable(feature = \"iter_unfold\", issue = \"55977\")]\n pub struct Unfold<St, F> {\n     state: St,\n     f: F,\n }\n \n-#[unstable(feature = \"iter_unfold\", issue = /* FIXME */ \"0\")]\n+#[unstable(feature = \"iter_unfold\", issue = \"55977\")]\n impl<St, T, F> Iterator for Unfold<St, F>\n     where F: FnMut(&mut St) -> Option<T>\n {\n@@ -463,7 +463,7 @@ impl<St, T, F> Iterator for Unfold<St, F>\n     }\n }\n \n-#[unstable(feature = \"iter_unfold\", issue = /* FIXME */ \"0\")]\n+#[unstable(feature = \"iter_unfold\", issue = \"55977\")]\n impl<St: fmt::Debug, F> fmt::Debug for Unfold<St, F> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_struct(\"Unfold\")\n@@ -484,7 +484,7 @@ impl<St: fmt::Debug, F> fmt::Debug for Unfold<St, F> {\n /// let powers_of_10 = successors(Some(1_u16), |n| n.checked_mul(10));\n /// assert_eq!(powers_of_10.collect::<Vec<_>>(), &[1, 10, 100, 1_000, 10_000]);\n /// ```\n-#[unstable(feature = \"iter_unfold\", issue = /* FIXME */ \"0\")]\n+#[unstable(feature = \"iter_unfold\", issue = \"55977\")]\n pub fn successors<T, F>(first: Option<T>, succ: F) -> Successors<T, F>\n     where F: FnMut(&T) -> Option<T>\n {\n@@ -504,13 +504,13 @@ pub fn successors<T, F>(first: Option<T>, succ: F) -> Successors<T, F>\n ///\n /// [`successors`]: fn.successors.html\n #[derive(Clone)]\n-#[unstable(feature = \"iter_unfold\", issue = /* FIXME */ \"0\")]\n+#[unstable(feature = \"iter_unfold\", issue = \"55977\")]\n pub struct Successors<T, F> {\n     next: Option<T>,\n     succ: F,\n }\n \n-#[unstable(feature = \"iter_unfold\", issue = /* FIXME */ \"0\")]\n+#[unstable(feature = \"iter_unfold\", issue = \"55977\")]\n impl<T, F> Iterator for Successors<T, F>\n     where F: FnMut(&T) -> Option<T>\n {\n@@ -534,12 +534,12 @@ impl<T, F> Iterator for Successors<T, F>\n     }\n }\n \n-#[unstable(feature = \"iter_unfold\", issue = /* FIXME */ \"0\")]\n+#[unstable(feature = \"iter_unfold\", issue = \"55977\")]\n impl<T, F> FusedIterator for Successors<T, F>\n     where F: FnMut(&T) -> Option<T>\n {}\n \n-#[unstable(feature = \"iter_unfold\", issue = /* FIXME */ \"0\")]\n+#[unstable(feature = \"iter_unfold\", issue = \"55977\")]\n impl<T: fmt::Debug, F> fmt::Debug for Successors<T, F> {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         f.debug_struct(\"Successors\")"}]}