{"sha": "fef1725c0f60616e62b75342ce96412748544725", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZjE3MjVjMGY2MDYxNmU2MmI3NTM0MmNlOTY0MTI3NDg1NDQ3MjU=", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2021-07-28T21:11:41Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-28T21:11:41Z"}, "message": "Rollup merge of #81050 - yoshuawuyts:stabilize-task-ready, r=m-ou-se\n\nStabilize core::task::ready!\n\n_Tracking issue: https://github.com/rust-lang/rust/issues/70922_\n\nThis PR stabilizes the `task::ready!` macro. Similar to https://github.com/rust-lang/rust/pull/80886, this PR was waiting on https://github.com/rust-lang/rust/issues/74355 to be fixed.\n\nThe `task::ready!` API has existed in the futures ecosystem for several years, and was added on nightly last year in https://github.com/rust-lang/rust/pull/70817. The motivation for this macro is the same as it was back then: virtually every single manual future implementation makes use of this; so much so that it's one of the few things included in the [futures-core](https://docs.rs/futures-core/0.3.12/futures_core) library.\n\nr? ``@tmandry``\n\ncc/ ``@rust-lang/wg-async-foundations`` ``@rust-lang/libs``\n\n## Example\n```rust\nuse core::task::{Context, Poll};\nuse core::future::Future;\nuse core::pin::Pin;\n\nasync fn get_num() -> usize {\n    42\n}\n\npub fn do_poll(cx: &mut Context<'_>) -> Poll<()> {\n    let mut f = get_num();\n    let f = unsafe { Pin::new_unchecked(&mut f) };\n\n    let num = ready!(f.poll(cx));\n    // ... use num\n\n    Poll::Ready(())\n}\n```", "tree": {"sha": "d8cf2719d7c57a32ef1176534fd8e7d2dc6bb223", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d8cf2719d7c57a32ef1176534fd8e7d2dc6bb223"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fef1725c0f60616e62b75342ce96412748544725", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJhAcgNCRBK7hj4Ov3rIwAAVL4IADdjNJ4wgbCIOhYDB9V9hyOR\nbVpKD0Lhfpl+0P5NPAcpAwd3rCgMQr4KZrgPt1kUwFzAxAhVkB7e+T/NczjkJ2Dt\nQPmmKHxAlk8HeCtePYmPuvU+IPsy2xr8BZKlRuPlxC1SNvTWKu1UU8xXk54vbZQt\n2cnYRlEo6Gn2at9dSA7BqcOhhm3Iy1N1Ph6UbxxQSahRGOGn1RJwsw5lB5yiGQUC\nNYXwV3PJ8k9uT2IjRJgu6XOaoRRYSCKI6Wv4I8mZu1K2Slz+r7HEqBE6PkFJprCh\nXoL5vjStcqs4lDXcEbyIqBoAjh2/GddUEAcePcdOSc2sq4C006m7c6KL4Hnhx6A=\n=n9do\n-----END PGP SIGNATURE-----\n", "payload": "tree d8cf2719d7c57a32ef1176534fd8e7d2dc6bb223\nparent a28109a7679fbb254ca0962865a8b32b91ddbbd9\nparent 18cc06c848ec2707c3593f8e2ea6e7090e17ff16\nauthor Yuki Okushi <jtitor@2k36.org> 1627506701 +0900\ncommitter GitHub <noreply@github.com> 1627506701 +0900\n\nRollup merge of #81050 - yoshuawuyts:stabilize-task-ready, r=m-ou-se\n\nStabilize core::task::ready!\n\n_Tracking issue: https://github.com/rust-lang/rust/issues/70922_\n\nThis PR stabilizes the `task::ready!` macro. Similar to https://github.com/rust-lang/rust/pull/80886, this PR was waiting on https://github.com/rust-lang/rust/issues/74355 to be fixed.\n\nThe `task::ready!` API has existed in the futures ecosystem for several years, and was added on nightly last year in https://github.com/rust-lang/rust/pull/70817. The motivation for this macro is the same as it was back then: virtually every single manual future implementation makes use of this; so much so that it's one of the few things included in the [futures-core](https://docs.rs/futures-core/0.3.12/futures_core) library.\n\nr? ``@tmandry``\n\ncc/ ``@rust-lang/wg-async-foundations`` ``@rust-lang/libs``\n\n## Example\n```rust\nuse core::task::{Context, Poll};\nuse core::future::Future;\nuse core::pin::Pin;\n\nasync fn get_num() -> usize {\n    42\n}\n\npub fn do_poll(cx: &mut Context<'_>) -> Poll<()> {\n    let mut f = get_num();\n    let f = unsafe { Pin::new_unchecked(&mut f) };\n\n    let num = ready!(f.poll(cx));\n    // ... use num\n\n    Poll::Ready(())\n}\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fef1725c0f60616e62b75342ce96412748544725", "html_url": "https://github.com/rust-lang/rust/commit/fef1725c0f60616e62b75342ce96412748544725", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fef1725c0f60616e62b75342ce96412748544725/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a28109a7679fbb254ca0962865a8b32b91ddbbd9", "url": "https://api.github.com/repos/rust-lang/rust/commits/a28109a7679fbb254ca0962865a8b32b91ddbbd9", "html_url": "https://github.com/rust-lang/rust/commit/a28109a7679fbb254ca0962865a8b32b91ddbbd9"}, {"sha": "18cc06c848ec2707c3593f8e2ea6e7090e17ff16", "url": "https://api.github.com/repos/rust-lang/rust/commits/18cc06c848ec2707c3593f8e2ea6e7090e17ff16", "html_url": "https://github.com/rust-lang/rust/commit/18cc06c848ec2707c3593f8e2ea6e7090e17ff16"}], "stats": {"total": 9, "additions": 2, "deletions": 7}, "files": [{"sha": "5f077f77bbc9f9285dabbc8419f5e5c4ee646b5c", "filename": "library/core/src/task/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fef1725c0f60616e62b75342ce96412748544725/library%2Fcore%2Fsrc%2Ftask%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fef1725c0f60616e62b75342ce96412748544725/library%2Fcore%2Fsrc%2Ftask%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fmod.rs?ref=fef1725c0f60616e62b75342ce96412748544725", "patch": "@@ -11,5 +11,5 @@ mod wake;\n pub use self::wake::{Context, RawWaker, RawWakerVTable, Waker};\n \n mod ready;\n-#[unstable(feature = \"ready_macro\", issue = \"70922\")]\n+#[stable(feature = \"ready_macro\", since = \"1.56.0\")]\n pub use ready::ready;"}, {"sha": "2834ca5fe2224e0bc4383b253062351c9158f659", "filename": "library/core/src/task/ready.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/fef1725c0f60616e62b75342ce96412748544725/library%2Fcore%2Fsrc%2Ftask%2Fready.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fef1725c0f60616e62b75342ce96412748544725/library%2Fcore%2Fsrc%2Ftask%2Fready.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Ftask%2Fready.rs?ref=fef1725c0f60616e62b75342ce96412748544725", "patch": "@@ -8,8 +8,6 @@\n /// # Examples\n ///\n /// ```\n-/// #![feature(ready_macro)]\n-///\n /// use std::task::{ready, Context, Poll};\n /// use std::future::{self, Future};\n /// use std::pin::Pin;\n@@ -29,8 +27,6 @@\n /// The `ready!` call expands to:\n ///\n /// ```\n-/// # #![feature(ready_macro)]\n-/// #\n /// # use std::task::{Context, Poll};\n /// # use std::future::{self, Future};\n /// # use std::pin::Pin;\n@@ -49,7 +45,7 @@\n ///     # Poll::Ready(())\n /// # }\n /// ```\n-#[unstable(feature = \"ready_macro\", issue = \"70922\")]\n+#[stable(feature = \"ready_macro\", since = \"1.56.0\")]\n #[rustc_macro_transparency = \"semitransparent\"]\n pub macro ready($e:expr) {\n     match $e {"}, {"sha": "9cbaa06562a55ee93bc7a7adfbe27b409740aa4a", "filename": "library/std/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fef1725c0f60616e62b75342ce96412748544725/library%2Fstd%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fef1725c0f60616e62b75342ce96412748544725/library%2Fstd%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Flib.rs?ref=fef1725c0f60616e62b75342ce96412748544725", "patch": "@@ -304,7 +304,6 @@\n #![feature(pin_static_ref)]\n #![feature(prelude_import)]\n #![feature(ptr_internals)]\n-#![feature(ready_macro)]\n #![feature(rustc_attrs)]\n #![feature(rustc_private)]\n #![feature(shrink_to)]"}]}