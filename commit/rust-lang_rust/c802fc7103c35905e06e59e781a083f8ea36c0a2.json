{"sha": "c802fc7103c35905e06e59e781a083f8ea36c0a2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM4MDJmYzcxMDNjMzU5MDVlMDZlNTllNzgxYTA4M2Y4ZWEzNmMwYTI=", "commit": {"author": {"name": "Isaac van Bakel", "email": "ivb@vanbakel.io", "date": "2017-07-25T00:13:18Z"}, "committer": {"name": "Isaac van Bakel", "email": "ivb@vanbakel.io", "date": "2017-07-25T17:58:38Z"}, "message": "Modified error for loop mut borrow conflicts\n\nError message now makes clear that mutable borrow conflicts on a single\nvalue in a loop body is caused by the borrow outlasting a single pass of\nthe loop.\nLoop conflicts are detected by seeing when two borrow locations are the\nsame - which indicates the same code being run more than once.", "tree": {"sha": "cf114954e0a31c2b438f1a2db780f1832a16636a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cf114954e0a31c2b438f1a2db780f1832a16636a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c802fc7103c35905e06e59e781a083f8ea36c0a2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c802fc7103c35905e06e59e781a083f8ea36c0a2", "html_url": "https://github.com/rust-lang/rust/commit/c802fc7103c35905e06e59e781a083f8ea36c0a2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c802fc7103c35905e06e59e781a083f8ea36c0a2/comments", "author": {"login": "ivanbakel", "id": 20319565, "node_id": "MDQ6VXNlcjIwMzE5NTY1", "avatar_url": "https://avatars.githubusercontent.com/u/20319565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivanbakel", "html_url": "https://github.com/ivanbakel", "followers_url": "https://api.github.com/users/ivanbakel/followers", "following_url": "https://api.github.com/users/ivanbakel/following{/other_user}", "gists_url": "https://api.github.com/users/ivanbakel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivanbakel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivanbakel/subscriptions", "organizations_url": "https://api.github.com/users/ivanbakel/orgs", "repos_url": "https://api.github.com/users/ivanbakel/repos", "events_url": "https://api.github.com/users/ivanbakel/events{/privacy}", "received_events_url": "https://api.github.com/users/ivanbakel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ivanbakel", "id": 20319565, "node_id": "MDQ6VXNlcjIwMzE5NTY1", "avatar_url": "https://avatars.githubusercontent.com/u/20319565?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ivanbakel", "html_url": "https://github.com/ivanbakel", "followers_url": "https://api.github.com/users/ivanbakel/followers", "following_url": "https://api.github.com/users/ivanbakel/following{/other_user}", "gists_url": "https://api.github.com/users/ivanbakel/gists{/gist_id}", "starred_url": "https://api.github.com/users/ivanbakel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ivanbakel/subscriptions", "organizations_url": "https://api.github.com/users/ivanbakel/orgs", "repos_url": "https://api.github.com/users/ivanbakel/repos", "events_url": "https://api.github.com/users/ivanbakel/events{/privacy}", "received_events_url": "https://api.github.com/users/ivanbakel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5c126bdee6af3feef2d51956debab72f933078c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/5c126bdee6af3feef2d51956debab72f933078c6", "html_url": "https://github.com/rust-lang/rust/commit/5c126bdee6af3feef2d51956debab72f933078c6"}], "stats": {"total": 40, "additions": 27, "deletions": 13}, "files": [{"sha": "e70b7f89a67675de05482f4dea5d1a74e5ef2099", "filename": "src/librustc_borrowck/borrowck/check_loans.rs", "status": "modified", "additions": 27, "deletions": 13, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/c802fc7103c35905e06e59e781a083f8ea36c0a2/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c802fc7103c35905e06e59e781a083f8ea36c0a2/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fcheck_loans.rs?ref=c802fc7103c35905e06e59e781a083f8ea36c0a2", "patch": "@@ -466,19 +466,33 @@ impl<'a, 'tcx> CheckLoanCtxt<'a, 'tcx> {\n             let mut err = match (new_loan.kind, old_loan.kind) {\n                 (ty::MutBorrow, ty::MutBorrow) => {\n                     let mut err = struct_span_err!(self.bccx, new_loan.span, E0499,\n-                                                  \"cannot borrow `{}`{} as mutable \\\n-                                                  more than once at a time\",\n-                                                  nl, new_loan_msg);\n-                    err.span_label(\n-                            old_loan.span,\n-                            format!(\"first mutable borrow occurs here{}\", old_loan_msg));\n-                    err.span_label(\n-                            new_loan.span,\n-                            format!(\"second mutable borrow occurs here{}\", new_loan_msg));\n-                    err.span_label(\n-                            previous_end_span,\n-                            \"first borrow ends here\");\n-                    err\n+                                                      \"cannot borrow `{}`{} as mutable \\\n+                                                      more than once at a time\",\n+                                                      nl, new_loan_msg);\n+\n+                    if new_loan.span == old_loan.span {\n+                        // Both borrows are happening in the same place\n+                        // Meaning the borrow is occuring in a loop\n+                        err.span_label(\n+                                new_loan.span,\n+                                format!(\"mutable borrow starts here in previous \\\n+                                        iteration of loop{}\", new_loan_msg));\n+                        err.span_label(\n+                                previous_end_span,\n+                                \"mutable borrow ends here\");\n+                        err\n+                    } else {\n+                       err.span_label(\n+                                old_loan.span,\n+                                format!(\"first mutable borrow occurs here{}\", old_loan_msg));\n+                        err.span_label(\n+                                new_loan.span,\n+                                format!(\"second mutable borrow occurs here{}\", new_loan_msg));\n+                        err.span_label(\n+                                previous_end_span,\n+                                \"first borrow ends here\");\n+                        err\n+                    }\n                 }\n \n                 (ty::UniqueImmBorrow, ty::UniqueImmBorrow) => {"}]}