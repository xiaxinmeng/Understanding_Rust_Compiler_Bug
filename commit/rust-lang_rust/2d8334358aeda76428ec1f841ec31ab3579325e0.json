{"sha": "2d8334358aeda76428ec1f841ec31ab3579325e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJkODMzNDM1OGFlZGE3NjQyOGVjMWY4NDFlYzMxYWIzNTc5MzI1ZTA=", "commit": {"author": {"name": "varkor", "email": "github@varkor.com", "date": "2018-01-06T22:14:02Z"}, "committer": {"name": "varkor", "email": "github@varkor.com", "date": "2018-01-06T22:14:02Z"}, "message": "Use `next` and `next_back`", "tree": {"sha": "245c9c7b02b8ecca0db8685c06391e6d7ff6d7f5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/245c9c7b02b8ecca0db8685c06391e6d7ff6d7f5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2d8334358aeda76428ec1f841ec31ab3579325e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2d8334358aeda76428ec1f841ec31ab3579325e0", "html_url": "https://github.com/rust-lang/rust/commit/2d8334358aeda76428ec1f841ec31ab3579325e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2d8334358aeda76428ec1f841ec31ab3579325e0/comments", "author": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "varkor", "id": 3943692, "node_id": "MDQ6VXNlcjM5NDM2OTI=", "avatar_url": "https://avatars.githubusercontent.com/u/3943692?v=4", "gravatar_id": "", "url": "https://api.github.com/users/varkor", "html_url": "https://github.com/varkor", "followers_url": "https://api.github.com/users/varkor/followers", "following_url": "https://api.github.com/users/varkor/following{/other_user}", "gists_url": "https://api.github.com/users/varkor/gists{/gist_id}", "starred_url": "https://api.github.com/users/varkor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/varkor/subscriptions", "organizations_url": "https://api.github.com/users/varkor/orgs", "repos_url": "https://api.github.com/users/varkor/repos", "events_url": "https://api.github.com/users/varkor/events{/privacy}", "received_events_url": "https://api.github.com/users/varkor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c23d4500fdb865040a584da24122592b25feb09a", "url": "https://api.github.com/repos/rust-lang/rust/commits/c23d4500fdb865040a584da24122592b25feb09a", "html_url": "https://github.com/rust-lang/rust/commit/c23d4500fdb865040a584da24122592b25feb09a"}], "stats": {"total": 24, "additions": 8, "deletions": 16}, "files": [{"sha": "d6c1420a03c296721c5114fa01b361115fc3792d", "filename": "src/libcore/iter/range.rs", "status": "modified", "additions": 8, "deletions": 16, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/2d8334358aeda76428ec1f841ec31ab3579325e0/src%2Flibcore%2Fiter%2Frange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2d8334358aeda76428ec1f841ec31ab3579325e0/src%2Flibcore%2Fiter%2Frange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Frange.rs?ref=2d8334358aeda76428ec1f841ec31ab3579325e0", "patch": "@@ -253,10 +253,8 @@ impl<A: Step> Iterator for ops::Range<A> {\n     }\n \n     #[inline]\n-    fn max(self) -> Option<A> {\n-        if self.start != self.end {\n-            Some(self.end.sub_one())\n-        } else { None }\n+    fn max(mut self) -> Option<A> {\n+        self.next_back()\n     }\n }\n \n@@ -376,24 +374,18 @@ impl<A: Step> Iterator for ops::RangeInclusive<A> {\n     }\n \n     #[inline]\n-    fn last(self) -> Option<A> {\n-        if self.start <= self.end {\n-            Some(self.end)\n-        } else { None }\n+    fn last(mut self) -> Option<A> {\n+        self.next_back()\n     }\n \n     #[inline]\n-    fn min(self) -> Option<A> {\n-        if self.start <= self.end {\n-            Some(self.start)\n-        } else { None }\n+    fn min(mut self) -> Option<A> {\n+        self.next()\n     }\n \n     #[inline]\n-    fn max(self) -> Option<A> {\n-        if self.start <= self.end {\n-            Some(self.end)\n-        } else { None }\n+    fn max(mut self) -> Option<A> {\n+        self.next_back()\n     }\n }\n "}]}