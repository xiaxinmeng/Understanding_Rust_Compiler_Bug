{"sha": "20f063a9398ea3966947577059aa1ba60b6b8e0a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIwZjA2M2E5Mzk4ZWEzOTY2OTQ3NTc3MDU5YWExYmE2MGI2YjhlMGE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-03-28T07:43:30Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-28T07:43:30Z"}, "message": "Rollup merge of #58848 - GuillaumeGomez:fix-cache-issues, r=Mark-Simulacrum,ollie27\n\nPrevent cache issues on version updates\n\nFixes #58827.\n\ncc @rust-lang/infra", "tree": {"sha": "09485be2570ac40172b2af37586d674cb5a2e74a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/09485be2570ac40172b2af37586d674cb5a2e74a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/20f063a9398ea3966947577059aa1ba60b6b8e0a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcnHsjCRBK7hj4Ov3rIwAAdHIIAHdjKujr0mFm94c1pRbRB09P\n2j64bq+sluGFohi+2cmQ8ZyW3yOElgIHoLzj+2hm5y570WmukcGyvCrIHrHhnZI2\nw2eskml258UjvLimrz89G43fiCANj8zXfXimtd4RDYyv7z/KPXOD7wfAsYowwXRk\nuXAEpu5IO+St3NcKVHm0hZd8tL89kvEQ2XxtkxjZa/pl95j3+Alst7etK2Hss3sD\nvNkaP2ozf9l9vpF1xwAKcsfVquDh1hFsGfy060T0WLDlOqbouI/22uWNZ5RV+VZj\n3I/A1wcxMSLwzMzOC71bDo5niGSnSUPU2chEa8jBqV7JydSNKLEs2ZTzU5k4aEc=\n=55hV\n-----END PGP SIGNATURE-----\n", "payload": "tree 09485be2570ac40172b2af37586d674cb5a2e74a\nparent 83d91d3ac4981cd6e987f2c066f9bb8b08525737\nparent 5652dd677c63d0d1bc7d26f09baceaff7e7525b5\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1553759010 +0100\ncommitter GitHub <noreply@github.com> 1553759010 +0100\n\nRollup merge of #58848 - GuillaumeGomez:fix-cache-issues, r=Mark-Simulacrum,ollie27\n\nPrevent cache issues on version updates\n\nFixes #58827.\n\ncc @rust-lang/infra\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/20f063a9398ea3966947577059aa1ba60b6b8e0a", "html_url": "https://github.com/rust-lang/rust/commit/20f063a9398ea3966947577059aa1ba60b6b8e0a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/20f063a9398ea3966947577059aa1ba60b6b8e0a/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "83d91d3ac4981cd6e987f2c066f9bb8b08525737", "url": "https://api.github.com/repos/rust-lang/rust/commits/83d91d3ac4981cd6e987f2c066f9bb8b08525737", "html_url": "https://github.com/rust-lang/rust/commit/83d91d3ac4981cd6e987f2c066f9bb8b08525737"}, {"sha": "5652dd677c63d0d1bc7d26f09baceaff7e7525b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5652dd677c63d0d1bc7d26f09baceaff7e7525b5", "html_url": "https://github.com/rust-lang/rust/commit/5652dd677c63d0d1bc7d26f09baceaff7e7525b5"}], "stats": {"total": 47, "additions": 31, "deletions": 16}, "files": [{"sha": "1c9f6e1ab285c67a71c5d6cb6b03ad3de13a826a", "filename": "src/bootstrap/bin/rustdoc.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/20f063a9398ea3966947577059aa1ba60b6b8e0a/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20f063a9398ea3966947577059aa1ba60b6b8e0a/src%2Fbootstrap%2Fbin%2Frustdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustdoc.rs?ref=20f063a9398ea3966947577059aa1ba60b6b8e0a", "patch": "@@ -69,6 +69,17 @@ fn main() {\n                .arg(\"unstable-options\");\n         }\n         cmd.arg(\"--generate-redirect-pages\");\n+        has_unstable = true;\n+    }\n+\n+    // Needed to be able to run all rustdoc tests.\n+    if let Some(ref x) = env::var_os(\"RUSTDOC_RESOURCE_SUFFIX\") {\n+        // This \"unstable-options\" can be removed when `--resource-suffix` is stabilized\n+        if !has_unstable {\n+            cmd.arg(\"-Z\")\n+               .arg(\"unstable-options\");\n+        }\n+        cmd.arg(\"--resource-suffix\").arg(x);\n     }\n \n     if verbose > 1 {"}, {"sha": "d831d2f1af2dd77c61db230f65db0d515fd517f9", "filename": "src/bootstrap/doc.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/20f063a9398ea3966947577059aa1ba60b6b8e0a/src%2Fbootstrap%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20f063a9398ea3966947577059aa1ba60b6b8e0a/src%2Fbootstrap%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fdoc.rs?ref=20f063a9398ea3966947577059aa1ba60b6b8e0a", "patch": "@@ -343,12 +343,9 @@ fn invoke_rustdoc(\n         .arg(\"--html-before-content\").arg(&version_info)\n         .arg(\"--html-in-header\").arg(&header)\n         .arg(\"--markdown-no-toc\")\n-        .arg(\"--markdown-playground-url\")\n-        .arg(\"https://play.rust-lang.org/\")\n-        .arg(\"-o\").arg(&out)\n-        .arg(&path)\n-        .arg(\"--markdown-css\")\n-        .arg(\"../rust.css\");\n+        .arg(\"--markdown-playground-url\").arg(\"https://play.rust-lang.org/\")\n+        .arg(\"-o\").arg(&out).arg(&path)\n+        .arg(\"--markdown-css\").arg(\"../rust.css\");\n \n     builder.run(&mut cmd);\n }\n@@ -431,8 +428,7 @@ impl Step for Standalone {\n                .arg(\"--html-in-header\").arg(&favicon)\n                .arg(\"--markdown-no-toc\")\n                .arg(\"--index-page\").arg(&builder.src.join(\"src/doc/index.md\"))\n-               .arg(\"--markdown-playground-url\")\n-               .arg(\"https://play.rust-lang.org/\")\n+               .arg(\"--markdown-playground-url\").arg(\"https://play.rust-lang.org/\")\n                .arg(\"-o\").arg(&out)\n                .arg(&path);\n \n@@ -523,6 +519,7 @@ impl Step for Std {\n                  .arg(\"--markdown-css\").arg(\"rust.css\")\n                  .arg(\"--markdown-no-toc\")\n                  .arg(\"--generate-redirect-pages\")\n+                 .arg(\"--resource-suffix\").arg(crate::channel::CFG_RELEASE_NUM)\n                  .arg(\"--index-page\").arg(&builder.src.join(\"src/doc/index.md\"));\n \n             builder.run(&mut cargo);\n@@ -589,6 +586,7 @@ impl Step for Test {\n \n         cargo.arg(\"--no-deps\")\n              .arg(\"-p\").arg(\"test\")\n+             .env(\"RUSTDOC_RESOURCE_SUFFIX\", crate::channel::CFG_RELEASE_NUM)\n              .env(\"RUSTDOC_GENERATE_REDIRECT_PAGES\", \"1\");\n \n         builder.run(&mut cargo);\n@@ -660,6 +658,7 @@ impl Step for WhitelistedRustc {\n         // for which docs must be built.\n         for krate in &[\"proc_macro\"] {\n             cargo.arg(\"-p\").arg(krate)\n+                 .env(\"RUSTDOC_RESOURCE_SUFFIX\", crate::channel::CFG_RELEASE_NUM)\n                  .env(\"RUSTDOC_GENERATE_REDIRECT_PAGES\", \"1\");\n         }\n \n@@ -890,6 +889,7 @@ impl Step for ErrorIndex {\n         );\n         index.arg(\"html\");\n         index.arg(out.join(\"error-index.html\"));\n+        index.arg(crate::channel::CFG_RELEASE_NUM);\n \n         // FIXME: shouldn't have to pass this env var\n         index.env(\"CFG_BUILD\", &builder.config.build)"}, {"sha": "04986b59ea0f1afeee4df464bf31e649bbab707d", "filename": "src/tools/error_index_generator/main.rs", "status": "modified", "additions": 12, "deletions": 8, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/20f063a9398ea3966947577059aa1ba60b6b8e0a/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/20f063a9398ea3966947577059aa1ba60b6b8e0a/src%2Ftools%2Ferror_index_generator%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ferror_index_generator%2Fmain.rs?ref=20f063a9398ea3966947577059aa1ba60b6b8e0a", "patch": "@@ -27,9 +27,10 @@ enum OutputFormat {\n }\n \n impl OutputFormat {\n-    fn from(format: &str) -> OutputFormat {\n+    fn from(format: &str, resource_suffix: &str) -> OutputFormat {\n         match &*format.to_lowercase() {\n-            \"html\"     => OutputFormat::HTML(HTMLFormatter(RefCell::new(IdMap::new()))),\n+            \"html\"     => OutputFormat::HTML(HTMLFormatter(RefCell::new(IdMap::new()),\n+                                                           resource_suffix.to_owned())),\n             \"markdown\" => OutputFormat::Markdown(MarkdownFormatter),\n             s          => OutputFormat::Unknown(s.to_owned()),\n         }\n@@ -44,7 +45,7 @@ trait Formatter {\n     fn footer(&self, output: &mut dyn Write) -> Result<(), Box<dyn Error>>;\n }\n \n-struct HTMLFormatter(RefCell<IdMap>);\n+struct HTMLFormatter(RefCell<IdMap>, String);\n struct MarkdownFormatter;\n \n impl Formatter for HTMLFormatter {\n@@ -55,7 +56,7 @@ impl Formatter for HTMLFormatter {\n <title>Rust Compiler Error Index</title>\n <meta charset=\"utf-8\">\n <!-- Include rust.css after light.css so its rules take priority. -->\n-<link rel=\"stylesheet\" type=\"text/css\" href=\"light.css\"/>\n+<link rel=\"stylesheet\" type=\"text/css\" href=\"light{suffix}.css\"/>\n <link rel=\"stylesheet\" type=\"text/css\" href=\"rust.css\"/>\n <style>\n .error-undescribed {{\n@@ -64,7 +65,7 @@ impl Formatter for HTMLFormatter {\n </style>\n </head>\n <body>\n-\"##)?;\n+\"##, suffix=self.1)?;\n         Ok(())\n     }\n \n@@ -242,9 +243,12 @@ fn main_with_result(format: OutputFormat, dst: &Path) -> Result<(), Box<dyn Erro\n \n fn parse_args() -> (OutputFormat, PathBuf) {\n     let mut args = env::args().skip(1);\n-    let format = args.next().map(|a| OutputFormat::from(&a))\n-                            .unwrap_or(OutputFormat::from(\"html\"));\n-    let dst = args.next().map(PathBuf::from).unwrap_or_else(|| {\n+    let format = args.next();\n+    let dst = args.next();\n+    let resource_suffix = args.next().unwrap_or_else(String::new);\n+    let format = format.map(|a| OutputFormat::from(&a, &resource_suffix))\n+                       .unwrap_or(OutputFormat::from(\"html\", &resource_suffix));\n+    let dst = dst.map(PathBuf::from).unwrap_or_else(|| {\n         match format {\n             OutputFormat::HTML(..) => PathBuf::from(\"doc/error-index.html\"),\n             OutputFormat::Markdown(..) => PathBuf::from(\"doc/error-index.md\"),"}]}