{"sha": "b2b82f790b0342fa7eb4e3b81bf1ae00681b4543", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyYjgyZjc5MGIwMzQyZmE3ZWI0ZTNiODFiZjFhZTAwNjgxYjQ1NDM=", "commit": {"author": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-11-15T19:05:36Z"}, "committer": {"name": "scalexm", "email": "alexandre@scalexm.fr", "date": "2018-11-29T20:57:40Z"}, "message": "Implement `AggregateOps`\n`make_solution` does not return any guidance for now", "tree": {"sha": "71771c60f396f5f12e29be7e7b5bf1041ddfe406", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71771c60f396f5f12e29be7e7b5bf1041ddfe406"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b2b82f790b0342fa7eb4e3b81bf1ae00681b4543", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b2b82f790b0342fa7eb4e3b81bf1ae00681b4543", "html_url": "https://github.com/rust-lang/rust/commit/b2b82f790b0342fa7eb4e3b81bf1ae00681b4543", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b2b82f790b0342fa7eb4e3b81bf1ae00681b4543/comments", "author": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scalexm", "id": 1173131, "node_id": "MDQ6VXNlcjExNzMxMzE=", "avatar_url": "https://avatars.githubusercontent.com/u/1173131?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scalexm", "html_url": "https://github.com/scalexm", "followers_url": "https://api.github.com/users/scalexm/followers", "following_url": "https://api.github.com/users/scalexm/following{/other_user}", "gists_url": "https://api.github.com/users/scalexm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scalexm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scalexm/subscriptions", "organizations_url": "https://api.github.com/users/scalexm/orgs", "repos_url": "https://api.github.com/users/scalexm/repos", "events_url": "https://api.github.com/users/scalexm/events{/privacy}", "received_events_url": "https://api.github.com/users/scalexm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0169dc3f36aec63e5926f2d69e788a396fd10f82", "url": "https://api.github.com/repos/rust-lang/rust/commits/0169dc3f36aec63e5926f2d69e788a396fd10f82", "html_url": "https://github.com/rust-lang/rust/commit/0169dc3f36aec63e5926f2d69e788a396fd10f82"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "58a8d2abd9962960384e1f818f4a4958b017673a", "filename": "src/librustc_traits/chalk_context/mod.rs", "status": "modified", "additions": 28, "deletions": 2, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b2b82f790b0342fa7eb4e3b81bf1ae00681b4543/src%2Flibrustc_traits%2Fchalk_context%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b2b82f790b0342fa7eb4e3b81bf1ae00681b4543/src%2Flibrustc_traits%2Fchalk_context%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_traits%2Fchalk_context%2Fmod.rs?ref=b2b82f790b0342fa7eb4e3b81bf1ae00681b4543", "patch": "@@ -26,6 +26,7 @@ use rustc::infer::canonical::{\n     CanonicalVarValues,\n     OriginalQueryValues,\n     QueryResponse,\n+    Certainty,\n };\n use rustc::traits::{\n     DomainGoal,\n@@ -132,9 +133,34 @@ impl context::AggregateOps<ChalkArenas<'gcx>> for ChalkContext<'cx, 'gcx> {\n     fn make_solution(\n         &self,\n         _root_goal: &Canonical<'gcx, InEnvironment<'gcx, Goal<'gcx>>>,\n-        _simplified_answers: impl context::AnswerStream<ChalkArenas<'gcx>>,\n+        mut simplified_answers: impl context::AnswerStream<ChalkArenas<'gcx>>,\n     ) -> Option<Canonical<'gcx, QueryResponse<'gcx, ()>>> {\n-        unimplemented!()\n+        use chalk_engine::SimplifiedAnswer;\n+\n+        if simplified_answers.peek_answer().is_none() {\n+            return None;\n+        }\n+\n+        let SimplifiedAnswer { subst, ambiguous } = simplified_answers\n+            .next_answer()\n+            .unwrap();\n+\n+        let ambiguous = simplified_answers.peek_answer().is_some() || ambiguous;\n+\n+        Some(subst.unchecked_map(|subst| {\n+            QueryResponse {\n+                var_values: subst.subst,\n+                region_constraints: subst.constraints\n+                    .into_iter()\n+                    .map(|c| ty::Binder::bind(c))\n+                    .collect(),\n+                certainty: match ambiguous {\n+                    true => Certainty::Ambiguous,\n+                    false => Certainty::Proven,\n+                },\n+                value: (),\n+            }\n+        }))\n     }\n }\n "}]}