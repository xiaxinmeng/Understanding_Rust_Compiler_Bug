{"sha": "c5045187752fa1889564b176f5ddaa3f9aaccb4b", "node_id": "C_kwDOAAsO6NoAKGM1MDQ1MTg3NzUyZmExODg5NTY0YjE3NmY1ZGRhYTNmOWFhY2NiNGI", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-01-17T07:18:40Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-01-17T07:30:35Z"}, "message": "Temporarily disable format string completions", "tree": {"sha": "02decece1cc81c9608275c5b118dd7252c2cca34", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/02decece1cc81c9608275c5b118dd7252c2cca34"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5045187752fa1889564b176f5ddaa3f9aaccb4b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5045187752fa1889564b176f5ddaa3f9aaccb4b", "html_url": "https://github.com/rust-lang/rust/commit/c5045187752fa1889564b176f5ddaa3f9aaccb4b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5045187752fa1889564b176f5ddaa3f9aaccb4b/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e6e72809e3b55da3a57af95e6445a12729331ad6", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6e72809e3b55da3a57af95e6445a12729331ad6", "html_url": "https://github.com/rust-lang/rust/commit/e6e72809e3b55da3a57af95e6445a12729331ad6"}], "stats": {"total": 95, "additions": 49, "deletions": 46}, "files": [{"sha": "0cb8a707e7f21ed36ee7cb122a3a5c3fa020f52d", "filename": "crates/ide_completion/src/completions/format_string.rs", "status": "modified", "additions": 49, "deletions": 46, "changes": 95, "blob_url": "https://github.com/rust-lang/rust/blob/c5045187752fa1889564b176f5ddaa3f9aaccb4b/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fformat_string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5045187752fa1889564b176f5ddaa3f9aaccb4b/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fformat_string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fformat_string.rs?ref=c5045187752fa1889564b176f5ddaa3f9aaccb4b", "patch": "@@ -8,6 +8,9 @@ use crate::{context::CompletionContext, CompletionItem, CompletionItemKind, Comp\n \n /// Complete identifiers in format strings.\n pub(crate) fn format_string(acc: &mut Completions, ctx: &CompletionContext) {\n+    if true {\n+        return;\n+    }\n     let string = match ast::String::cast(ctx.token.clone()) {\n         Some(it) if is_format_string(&it) => it,\n         _ => return,\n@@ -36,7 +39,7 @@ pub(crate) fn format_string(acc: &mut Completions, ctx: &CompletionContext) {\n mod tests {\n     use expect_test::{expect, Expect};\n \n-    use crate::tests::{check_edit, completion_list_no_kw};\n+    use crate::tests::completion_list_no_kw;\n \n     fn check(ra_fixture: &str, expect: Expect) {\n         let actual = completion_list_no_kw(ra_fixture);\n@@ -59,49 +62,49 @@ format_args!(\"f$0\");\n         );\n     }\n \n-    #[test]\n-    fn completes_locals() {\n-        check_edit(\n-            \"foobar\",\n-            r#\"\n-macro_rules! format_args {\n-    ($lit:literal $(tt:tt)*) => { 0 },\n-}\n-fn main() {\n-    let foobar = 1;\n-    format_args!(\"{f$0\");\n-}\n-\"#,\n-            r#\"\n-macro_rules! format_args {\n-    ($lit:literal $(tt:tt)*) => { 0 },\n-}\n-fn main() {\n-    let foobar = 1;\n-    format_args!(\"{foobar\");\n-}\n-\"#,\n-        );\n-        check_edit(\n-            \"foobar\",\n-            r#\"\n-macro_rules! format_args {\n-    ($lit:literal $(tt:tt)*) => { 0 },\n-}\n-fn main() {\n-    let foobar = 1;\n-    format_args!(\"{$0\");\n-}\n-\"#,\n-            r#\"\n-macro_rules! format_args {\n-    ($lit:literal $(tt:tt)*) => { 0 },\n-}\n-fn main() {\n-    let foobar = 1;\n-    format_args!(\"{foobar\");\n-}\n-\"#,\n-        );\n-    }\n+    //     #[test]\n+    //     fn completes_locals() {\n+    //         check_edit(\n+    //             \"foobar\",\n+    //             r#\"\n+    // macro_rules! format_args {\n+    //     ($lit:literal $(tt:tt)*) => { 0 },\n+    // }\n+    // fn main() {\n+    //     let foobar = 1;\n+    //     format_args!(\"{f$0\");\n+    // }\n+    // \"#,\n+    //             r#\"\n+    // macro_rules! format_args {\n+    //     ($lit:literal $(tt:tt)*) => { 0 },\n+    // }\n+    // fn main() {\n+    //     let foobar = 1;\n+    //     format_args!(\"{foobar\");\n+    // }\n+    // \"#,\n+    //         );\n+    //         check_edit(\n+    //             \"foobar\",\n+    //             r#\"\n+    // macro_rules! format_args {\n+    //     ($lit:literal $(tt:tt)*) => { 0 },\n+    // }\n+    // fn main() {\n+    //     let foobar = 1;\n+    //     format_args!(\"{$0\");\n+    // }\n+    // \"#,\n+    //             r#\"\n+    // macro_rules! format_args {\n+    //     ($lit:literal $(tt:tt)*) => { 0 },\n+    // }\n+    // fn main() {\n+    //     let foobar = 1;\n+    //     format_args!(\"{foobar\");\n+    // }\n+    // \"#,\n+    //         );\n+    //     }\n }"}]}