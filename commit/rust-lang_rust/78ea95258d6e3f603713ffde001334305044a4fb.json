{"sha": "78ea95258d6e3f603713ffde001334305044a4fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZWE5NTI1OGQ2ZTNmNjAzNzEzZmZkZTAwMTMzNDMwNTA0NGE0ZmI=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-02T15:40:49Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-07-02T15:40:49Z"}, "message": "improve comments", "tree": {"sha": "ddf1e113feaecc1d5031f19a8ba993868671583d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ddf1e113feaecc1d5031f19a8ba993868671583d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78ea95258d6e3f603713ffde001334305044a4fb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78ea95258d6e3f603713ffde001334305044a4fb", "html_url": "https://github.com/rust-lang/rust/commit/78ea95258d6e3f603713ffde001334305044a4fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78ea95258d6e3f603713ffde001334305044a4fb/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "73f8333e78e277353a1b69fbf605b9956a6c8ae5", "url": "https://api.github.com/repos/rust-lang/rust/commits/73f8333e78e277353a1b69fbf605b9956a6c8ae5", "html_url": "https://github.com/rust-lang/rust/commit/73f8333e78e277353a1b69fbf605b9956a6c8ae5"}], "stats": {"total": 11, "additions": 10, "deletions": 1}, "files": [{"sha": "2e95a45479c4f966fd0feb956eaa538780d0f944", "filename": "src/librustc_data_structures/indexed_set.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/78ea95258d6e3f603713ffde001334305044a4fb/src%2Flibrustc_data_structures%2Findexed_set.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ea95258d6e3f603713ffde001334305044a4fb/src%2Flibrustc_data_structures%2Findexed_set.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Findexed_set.rs?ref=78ea95258d6e3f603713ffde001334305044a4fb", "patch": "@@ -239,14 +239,20 @@ impl<T: Idx> IdxSet<T> {\n         self.words_mut().clone_from_slice(other.words());\n     }\n \n+    /// Set `self = self | other` and return true if `self` changed\n+    /// (i.e., if new bits were added).\n     pub fn union(&mut self, other: &IdxSet<T>) -> bool {\n         bitwise(self.words_mut(), other.words(), &Union)\n     }\n \n+    /// Set `self = self - other` and return true if `self` changed.\n+    /// (i.e., if any bits were removed).\n     pub fn subtract(&mut self, other: &IdxSet<T>) -> bool {\n         bitwise(self.words_mut(), other.words(), &Subtract)\n     }\n \n+    /// Set `self = self & other` and return true if `self` changed.\n+    /// (i.e., if any bits were removed).\n     pub fn intersect(&mut self, other: &IdxSet<T>) -> bool {\n         bitwise(self.words_mut(), other.words(), &Intersect)\n     }"}, {"sha": "4630cdae47d627d855c5e3fa5e71e2e76fa753a3", "filename": "src/librustc_mir/util/liveness.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/78ea95258d6e3f603713ffde001334305044a4fb/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78ea95258d6e3f603713ffde001334305044a4fb/src%2Flibrustc_mir%2Futil%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Futil%2Fliveness.rs?ref=78ea95258d6e3f603713ffde001334305044a4fb", "patch": "@@ -140,9 +140,12 @@ pub fn liveness_of_locals<'tcx>(mir: &Mir<'tcx>, mode: LivenessMode) -> Liveness\n         bits.overwrite(&outs[bb]);\n         def_use[bb].apply(&mut bits);\n \n-        // add `bits` to the out set for each predecessor; if those\n+        // `bits` now contains the live variables on entry. Therefore,\n+        // add `bits` to the `out` set for each predecessor; if those\n         // bits were not already present, then enqueue the predecessor\n         // as dirty.\n+        //\n+        // (note that `union` returns true if the `self` set changed)\n         for &pred_bb in &predecessors[bb] {\n             if outs[pred_bb].union(&bits) {\n                 dirty_queue.insert(pred_bb);"}]}