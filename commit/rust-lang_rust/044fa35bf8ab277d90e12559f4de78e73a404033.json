{"sha": "044fa35bf8ab277d90e12559f4de78e73a404033", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0NGZhMzViZjhhYjI3N2Q5MGUxMjU1OWY0ZGU3OGU3M2E0MDQwMzM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-02T04:14:43Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2013-08-04T06:40:25Z"}, "message": "rt: Fix a corner-case in unwinding that leads to stack overflow\n\nIn some scenarios upcall_rust_stack_limit fails to record the stack\nlimit, leaving it 0, and allowing subsequent Rust code to run into\nthe red zone.", "tree": {"sha": "bae44de7c6c4758d74a6898b77c882cdffac8a9d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bae44de7c6c4758d74a6898b77c882cdffac8a9d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/044fa35bf8ab277d90e12559f4de78e73a404033", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/044fa35bf8ab277d90e12559f4de78e73a404033", "html_url": "https://github.com/rust-lang/rust/commit/044fa35bf8ab277d90e12559f4de78e73a404033", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/044fa35bf8ab277d90e12559f4de78e73a404033/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "93432a2c2f244f46c8c60c3988483b20def990b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/93432a2c2f244f46c8c60c3988483b20def990b7", "html_url": "https://github.com/rust-lang/rust/commit/93432a2c2f244f46c8c60c3988483b20def990b7"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "2f6b8acb0725c3c12996f5c08a7b6d0991ab3af8", "filename": "src/rt/rust_task.cpp", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/044fa35bf8ab277d90e12559f4de78e73a404033/src%2Frt%2Frust_task.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/044fa35bf8ab277d90e12559f4de78e73a404033/src%2Frt%2Frust_task.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_task.cpp?ref=044fa35bf8ab277d90e12559f4de78e73a404033", "patch": "@@ -609,10 +609,21 @@ when unwinding through __morestack).\n void\n rust_task::reset_stack_limit() {\n     uintptr_t sp = get_sp();\n+    bool reseted = false;\n     while (!sp_in_stk_seg(sp, stk)) {\n+        reseted = true;\n         prev_stack();\n         assert(stk != NULL && \"Failed to find the current stack\");\n     }\n+\n+    // Each call to prev_stack will record the stack limit. If we *didn't*\n+    // call prev_stack then we still need to record it now to catch a corner case:\n+    // the throw to initiate unwinding starts on the C stack while sp limit is 0.\n+    // If we don't set the limit here then the rust code run subsequently will\n+    // will veer into the red zone. Lame!\n+    if (!reseted) {\n+        record_stack_limit();\n+    }\n }\n \n void"}, {"sha": "bde90e3726ed3d7fdc45bcbf4d3fdf96cbbaf30a", "filename": "src/test/run-pass/unwind-resource.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/044fa35bf8ab277d90e12559f4de78e73a404033/src%2Ftest%2Frun-pass%2Funwind-resource.rs", "raw_url": "https://github.com/rust-lang/rust/raw/044fa35bf8ab277d90e12559f4de78e73a404033/src%2Ftest%2Frun-pass%2Funwind-resource.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funwind-resource.rs?ref=044fa35bf8ab277d90e12559f4de78e73a404033", "patch": "@@ -8,7 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// xfail-test\n+// xfail-fast\n+\n extern mod extra;\n \n use std::comm::*;"}]}