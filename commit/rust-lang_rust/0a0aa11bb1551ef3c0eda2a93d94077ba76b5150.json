{"sha": "0a0aa11bb1551ef3c0eda2a93d94077ba76b5150", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhMGFhMTFiYjE1NTFlZjNjMGVkYTJhOTNkOTQwNzdiYTc2YjUxNTA=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-10T14:45:36Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-02-10T14:45:36Z"}, "message": "Add comment noting that this naive approach is not too naive.", "tree": {"sha": "5882df2e197da70d0e7e2128878098cc3d35f94c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5882df2e197da70d0e7e2128878098cc3d35f94c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a0aa11bb1551ef3c0eda2a93d94077ba76b5150", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a0aa11bb1551ef3c0eda2a93d94077ba76b5150", "html_url": "https://github.com/rust-lang/rust/commit/0a0aa11bb1551ef3c0eda2a93d94077ba76b5150", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a0aa11bb1551ef3c0eda2a93d94077ba76b5150/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b1d5f01828fdb21e31071d149618d2e983342c5", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b1d5f01828fdb21e31071d149618d2e983342c5", "html_url": "https://github.com/rust-lang/rust/commit/0b1d5f01828fdb21e31071d149618d2e983342c5"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "96e146fc894f98cddc149c6f850e45546b3519c6", "filename": "src/librustc_privacy/lib.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0a0aa11bb1551ef3c0eda2a93d94077ba76b5150/src%2Flibrustc_privacy%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a0aa11bb1551ef3c0eda2a93d94077ba76b5150/src%2Flibrustc_privacy%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_privacy%2Flib.rs?ref=0a0aa11bb1551ef3c0eda2a93d94077ba76b5150", "patch": "@@ -898,6 +898,9 @@ impl<'a, 'tcx, 'v> Visitor<'v> for PrivacyVisitor<'a, 'tcx> {\n             ast::ExprStruct(_, ref fields, _) => {\n                 match ty::expr_ty(self.tcx, expr).sty {\n                     ty::ty_struct(ctor_id, _) => {\n+                        // RFC 736: ensure all unmentioned fields are visible.\n+                        // Rather than computing the set of unmentioned fields\n+                        // (i.e. `all_fields - fields`), just check them all.\n                         let all_fields = ty::lookup_struct_fields(self.tcx, ctor_id);\n                         for field in all_fields {\n                             self.check_field(expr.span, ctor_id,"}]}