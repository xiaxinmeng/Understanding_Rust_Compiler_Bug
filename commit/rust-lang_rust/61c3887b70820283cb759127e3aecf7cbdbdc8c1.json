{"sha": "61c3887b70820283cb759127e3aecf7cbdbdc8c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYxYzM4ODdiNzA4MjAyODNjYjc1OTEyN2UzYWVjZjdjYmRiZGM4YzE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-08T16:50:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-12-08T16:50:43Z"}, "message": "Remove one more Ty", "tree": {"sha": "d122e4c39550e930ab0ec03fe8cd3aab7c619a73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d122e4c39550e930ab0ec03fe8cd3aab7c619a73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/61c3887b70820283cb759127e3aecf7cbdbdc8c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/61c3887b70820283cb759127e3aecf7cbdbdc8c1", "html_url": "https://github.com/rust-lang/rust/commit/61c3887b70820283cb759127e3aecf7cbdbdc8c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/61c3887b70820283cb759127e3aecf7cbdbdc8c1/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a1639d0d1ef201b2b9a425eddecfb41a25f10931", "url": "https://api.github.com/repos/rust-lang/rust/commits/a1639d0d1ef201b2b9a425eddecfb41a25f10931", "html_url": "https://github.com/rust-lang/rust/commit/a1639d0d1ef201b2b9a425eddecfb41a25f10931"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "c013ff99bbad47b7b7741a54746bc2e250acd705", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/61c3887b70820283cb759127e3aecf7cbdbdc8c1/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c3887b70820283cb759127e3aecf7cbdbdc8c1/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=61c3887b70820283cb759127e3aecf7cbdbdc8c1", "patch": "@@ -986,11 +986,6 @@ impl Type {\n         None\n     }\n \n-    // FIXME: remove\n-    pub fn into_ty(self) -> Ty {\n-        self.ty.value\n-    }\n-\n     pub fn as_adt(&self) -> Option<Adt> {\n         let (adt, _subst) = self.ty.value.as_adt()?;\n         Some(adt.into())"}, {"sha": "44d18500380789a9352d9ec8f63bf395913d0368", "filename": "crates/ra_hir/src/source_binder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/61c3887b70820283cb759127e3aecf7cbdbdc8c1/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c3887b70820283cb759127e3aecf7cbdbdc8c1/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_binder.rs?ref=61c3887b70820283cb759127e3aecf7cbdbdc8c1", "patch": "@@ -427,7 +427,7 @@ impl SourceAnalyzer {\n \n     /// Checks that particular type `ty` implements `std::future::Future`.\n     /// This function is used in `.await` syntax completion.\n-    pub fn impls_future(&self, db: &impl HirDatabase, ty: Ty) -> bool {\n+    pub fn impls_future(&self, db: &impl HirDatabase, ty: Type) -> bool {\n         let std_future_path = known::std_future_future();\n \n         let std_future_trait = match self.resolver.resolve_known_trait(db, &std_future_path) {\n@@ -440,7 +440,7 @@ impl SourceAnalyzer {\n             _ => return false,\n         };\n \n-        let canonical_ty = Canonical { value: ty, num_vars: 0 };\n+        let canonical_ty = Canonical { value: ty.ty.value, num_vars: 0 };\n         implements_trait(&canonical_ty, db, &self.resolver, krate.into(), std_future_trait)\n     }\n "}, {"sha": "294964887a81a39dcfc5ac57ccfd70735573eccd", "filename": "crates/ra_ide/src/completion/complete_dot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/61c3887b70820283cb759127e3aecf7cbdbdc8c1/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/61c3887b70820283cb759127e3aecf7cbdbdc8c1/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fcompletion%2Fcomplete_dot.rs?ref=61c3887b70820283cb759127e3aecf7cbdbdc8c1", "patch": "@@ -27,7 +27,7 @@ pub(super) fn complete_dot(acc: &mut Completions, ctx: &CompletionContext) {\n     complete_methods(acc, ctx, &receiver_ty);\n \n     // Suggest .await syntax for types that implement Future trait\n-    if ctx.analyzer.impls_future(ctx.db, receiver_ty.into_ty()) {\n+    if ctx.analyzer.impls_future(ctx.db, receiver_ty) {\n         CompletionItem::new(CompletionKind::Keyword, ctx.source_range(), \"await\")\n             .detail(\"expr.await\")\n             .insert_text(\"await\")"}]}