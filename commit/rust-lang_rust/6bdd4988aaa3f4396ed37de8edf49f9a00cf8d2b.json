{"sha": "6bdd4988aaa3f4396ed37de8edf49f9a00cf8d2b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiZGQ0OTg4YWFhM2Y0Mzk2ZWQzN2RlOGVkZjQ5ZjlhMDBjZjhkMmI=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-09T22:30:59Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-07-09T22:32:24Z"}, "message": "tutorial: Fix typos. Closes #2852", "tree": {"sha": "b14ddd39d3f84d17c0f12c5d1dc53ec8aa257093", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b14ddd39d3f84d17c0f12c5d1dc53ec8aa257093"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6bdd4988aaa3f4396ed37de8edf49f9a00cf8d2b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6bdd4988aaa3f4396ed37de8edf49f9a00cf8d2b", "html_url": "https://github.com/rust-lang/rust/commit/6bdd4988aaa3f4396ed37de8edf49f9a00cf8d2b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6bdd4988aaa3f4396ed37de8edf49f9a00cf8d2b/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "271da617cbd1233ed41459e3b136870bf8f6ab43", "url": "https://api.github.com/repos/rust-lang/rust/commits/271da617cbd1233ed41459e3b136870bf8f6ab43", "html_url": "https://github.com/rust-lang/rust/commit/271da617cbd1233ed41459e3b136870bf8f6ab43"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "31d4bb6707531e650e94a39c187a347ba7c91afe", "filename": "doc/tutorial.md", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6bdd4988aaa3f4396ed37de8edf49f9a00cf8d2b/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/6bdd4988aaa3f4396ed37de8edf49f9a00cf8d2b/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=6bdd4988aaa3f4396ed37de8edf49f9a00cf8d2b", "patch": "@@ -1592,7 +1592,7 @@ When you need to store a closure in a data structure, a stack closure\n will not do, since the compiler will refuse to let you store it. For\n this purpose, Rust provides a type of closure that has an arbitrary\n lifetime, written `fn@` (boxed closure, analogous to the `@` pointer\n-type described in the next section).\n+type described earlier).\n \n A boxed closure does not directly access its environment, but merely\n copies out the values that it closes over into a private data\n@@ -2950,9 +2950,10 @@ fn stringifier(from_parent: comm::port<uint>,\n You can see that the function takes two parameters.  The first is a\n port used to receive messages from the parent, and the second is a\n channel used to send messages to the parent.  The body itself simply\n-loops, reading from the `from_par` port and then sending its response\n-to the `to_par` channel.  The actual response itself is simply the\n-strified version of the received value, `uint::to_str(value)`.\n+loops, reading from the `from_parent` port and then sending its\n+response to the `to_parent` channel.  The actual response itself is\n+simply the strified version of the received value,\n+`uint::to_str(value)`.\n  \n Here is the code for the parent task:\n "}]}