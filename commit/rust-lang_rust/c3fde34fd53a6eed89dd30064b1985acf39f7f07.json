{"sha": "c3fde34fd53a6eed89dd30064b1985acf39f7f07", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzZmRlMzRmZDUzYTZlZWQ4OWRkMzAwNjRiMTk4NWFjZjM5ZjdmMDc=", "commit": {"author": {"name": "airt", "email": "airtial@gmail.com", "date": "2019-04-30T19:09:27Z"}, "committer": {"name": "airt", "email": "airtial@gmail.com", "date": "2019-04-30T19:11:58Z"}, "message": "fix suggestion for search_is_some", "tree": {"sha": "1d654fac6bdc04569cb26e3d08b414a63be11f9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1d654fac6bdc04569cb26e3d08b414a63be11f9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3fde34fd53a6eed89dd30064b1985acf39f7f07", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3fde34fd53a6eed89dd30064b1985acf39f7f07", "html_url": "https://github.com/rust-lang/rust/commit/c3fde34fd53a6eed89dd30064b1985acf39f7f07", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3fde34fd53a6eed89dd30064b1985acf39f7f07/comments", "author": {"login": "airt", "id": 5058439, "node_id": "MDQ6VXNlcjUwNTg0Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5058439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/airt", "html_url": "https://github.com/airt", "followers_url": "https://api.github.com/users/airt/followers", "following_url": "https://api.github.com/users/airt/following{/other_user}", "gists_url": "https://api.github.com/users/airt/gists{/gist_id}", "starred_url": "https://api.github.com/users/airt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/airt/subscriptions", "organizations_url": "https://api.github.com/users/airt/orgs", "repos_url": "https://api.github.com/users/airt/repos", "events_url": "https://api.github.com/users/airt/events{/privacy}", "received_events_url": "https://api.github.com/users/airt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "airt", "id": 5058439, "node_id": "MDQ6VXNlcjUwNTg0Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/5058439?v=4", "gravatar_id": "", "url": "https://api.github.com/users/airt", "html_url": "https://github.com/airt", "followers_url": "https://api.github.com/users/airt/followers", "following_url": "https://api.github.com/users/airt/following{/other_user}", "gists_url": "https://api.github.com/users/airt/gists{/gist_id}", "starred_url": "https://api.github.com/users/airt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/airt/subscriptions", "organizations_url": "https://api.github.com/users/airt/orgs", "repos_url": "https://api.github.com/users/airt/repos", "events_url": "https://api.github.com/users/airt/events{/privacy}", "received_events_url": "https://api.github.com/users/airt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bd0b75f6c3a8c147aa95a64877280abf1fc1b069", "url": "https://api.github.com/repos/rust-lang/rust/commits/bd0b75f6c3a8c147aa95a64877280abf1fc1b069", "html_url": "https://github.com/rust-lang/rust/commit/bd0b75f6c3a8c147aa95a64877280abf1fc1b069"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "83f7d2a1f9eae8c592d59bf07bcdb0ecd10f012c", "filename": "clippy_lints/src/methods/mod.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/c3fde34fd53a6eed89dd30064b1985acf39f7f07/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3fde34fd53a6eed89dd30064b1985acf39f7f07/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Fmod.rs?ref=c3fde34fd53a6eed89dd30064b1985acf39f7f07", "patch": "@@ -1977,10 +1977,16 @@ fn lint_search_is_some<'a, 'tcx>(\n         if search_snippet.lines().count() <= 1 {\n             // suggest `any(|x| ..)` instead of `any(|&x| ..)` for `find(|&x| ..).is_some()`\n             let any_search_snippet =\n-                if search_method == \"find\" && search_snippet.starts_with(\"|&\") {\n-                    Some(search_snippet.replacen('&', \"\", 1))\n-                } else {\n-                    None\n+                if_chain! {\n+                    if search_method == \"find\";\n+                    if let hir::ExprKind::Closure(_, _, body_id, ..) = search_args[1].node;\n+                    let closure_body = cx.tcx.hir().body(body_id);\n+                    if let hir::PatKind::Ref(..) = closure_body.arguments[0].pat.node;\n+                    then {\n+                        Some(search_snippet.replacen('&', \"\", 1))\n+                    } else {\n+                        None\n+                    }\n                 };\n             // add note if not multi-line\n             span_note_and_lint("}]}