{"sha": "678af4106504913ea04672e29f452861d97fae18", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3OGFmNDEwNjUwNDkxM2VhMDQ2NzJlMjlmNDUyODYxZDk3ZmFlMTg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-14T14:20:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-14T14:20:13Z"}, "message": "Merge #8514\n\n8514: Add more profiling spans into type inference r=matklad a=SomeoneToIgnore\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/8503\r\n\r\nI've added a minimal set of spans to remove `???` and showcase the underlying issue:\r\n\r\n<img width=\"1552\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/114722983-f2181900-9d42-11eb-821d-9e93ded5f81f.png\">\r\n\r\n`db.trait_solve` reliably produces the same timings for the same input in the same place for me, despite supposedly being cached by Salsa.\r\nIn my perception, this is a bit odd, so I've decided to stop at this point and discuss it with people with better knowledge on the topic.\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>", "tree": {"sha": "359cb4c3a3ef739ff9fa4a84987f5354e1bde679", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/359cb4c3a3ef739ff9fa4a84987f5354e1bde679"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/678af4106504913ea04672e29f452861d97fae18", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgdvodCRBK7hj4Ov3rIwAAdHIIAIRh18ELhW5QGRm9s5C5wFQm\nx9fny0RWfvxTfKZBEHz35FIfgYFqziNiBLYJ/fOi+jJkVjUIOGFYXV0ISZCV3Uaq\nmmWXrqZZu6nNNP9jQ3zNuXMYq5jy8lg9bIvtJ2AFBg1p9oAf5O27tOeqbNswIfaA\naNyeiJwMoyv4MmFiYk8lztL1K7tflzmFqgfGubCwllFcCmQeP+sXV7xMJSTmPURI\nnAKDSwfTrQFv35CToT8QZ/gx5VWuhT89vxsCHZmQYukmUEuoLRNXaEXo4dy8G9XD\nJVX2fesEn+VXAl+mmkpnYgq3m+e1pqzDgpAFvB98u0AShOaU2v4al7w7g5DHPqk=\n=PUhU\n-----END PGP SIGNATURE-----\n", "payload": "tree 359cb4c3a3ef739ff9fa4a84987f5354e1bde679\nparent 10a243ea55565a0dd1de52f8f802c3e3a7bfef54\nparent 75a2605361e497cdb6f8c8a4056a6ecd1e35ad68\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1618410013 +0000\ncommitter GitHub <noreply@github.com> 1618410013 +0000\n\nMerge #8514\n\n8514: Add more profiling spans into type inference r=matklad a=SomeoneToIgnore\n\nFixes https://github.com/rust-analyzer/rust-analyzer/issues/8503\r\n\r\nI've added a minimal set of spans to remove `???` and showcase the underlying issue:\r\n\r\n<img width=\"1552\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2690773/114722983-f2181900-9d42-11eb-821d-9e93ded5f81f.png\">\r\n\r\n`db.trait_solve` reliably produces the same timings for the same input in the same place for me, despite supposedly being cached by Salsa.\r\nIn my perception, this is a bit odd, so I've decided to stop at this point and discuss it with people with better knowledge on the topic.\n\nCo-authored-by: Kirill Bulatov <mail4score@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/678af4106504913ea04672e29f452861d97fae18", "html_url": "https://github.com/rust-lang/rust/commit/678af4106504913ea04672e29f452861d97fae18", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/678af4106504913ea04672e29f452861d97fae18/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "10a243ea55565a0dd1de52f8f802c3e3a7bfef54", "url": "https://api.github.com/repos/rust-lang/rust/commits/10a243ea55565a0dd1de52f8f802c3e3a7bfef54", "html_url": "https://github.com/rust-lang/rust/commit/10a243ea55565a0dd1de52f8f802c3e3a7bfef54"}, {"sha": "75a2605361e497cdb6f8c8a4056a6ecd1e35ad68", "url": "https://api.github.com/repos/rust-lang/rust/commits/75a2605361e497cdb6f8c8a4056a6ecd1e35ad68", "html_url": "https://github.com/rust-lang/rust/commit/75a2605361e497cdb6f8c8a4056a6ecd1e35ad68"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "6d2cf4619862b6595db3aec4398e8c46c0c2bcd3", "filename": "crates/hir_ty/src/autoderef.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/678af4106504913ea04672e29f452861d97fae18/crates%2Fhir_ty%2Fsrc%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/678af4106504913ea04672e29f452861d97fae18/crates%2Fhir_ty%2Fsrc%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fautoderef.rs?ref=678af4106504913ea04672e29f452861d97fae18", "patch": "@@ -36,6 +36,7 @@ pub(crate) fn deref(\n     krate: CrateId,\n     ty: InEnvironment<&Canonical<Ty>>,\n ) -> Option<Canonical<Ty>> {\n+    let _p = profile::span(\"deref\");\n     if let Some(derefed) = builtin_deref(&ty.goal.value) {\n         Some(Canonical { value: derefed, binders: ty.goal.binders.clone() })\n     } else {\n@@ -56,6 +57,7 @@ fn deref_by_trait(\n     krate: CrateId,\n     ty: InEnvironment<&Canonical<Ty>>,\n ) -> Option<Canonical<Ty>> {\n+    let _p = profile::span(\"deref_by_trait\");\n     let deref_trait = match db.lang_item(krate, \"deref\".into())? {\n         LangItemTarget::TraitId(it) => it,\n         _ => return None,\n@@ -83,7 +85,10 @@ fn deref_by_trait(\n             environment: ty.environment.clone(),\n         },\n     };\n-    if db.trait_solve(krate, implements_goal).is_none() {\n+    if {\n+        let _p = profile::span(\"db.trait_solve\");\n+        db.trait_solve(krate, implements_goal).is_none()\n+    } {\n         return None;\n     }\n "}]}