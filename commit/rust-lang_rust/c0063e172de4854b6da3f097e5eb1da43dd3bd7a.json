{"sha": "c0063e172de4854b6da3f097e5eb1da43dd3bd7a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMDYzZTE3MmRlNDg1NGI2ZGEzZjA5N2U1ZWIxZGE0M2RkM2JkN2E=", "commit": {"author": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-05T18:46:11Z"}, "committer": {"name": "mcarton", "email": "cartonmartin+git@gmail.com", "date": "2016-02-05T18:46:11Z"}, "message": "Improve error message", "tree": {"sha": "65b5ed5cad076cd256b71f3e0d58c965795bc620", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/65b5ed5cad076cd256b71f3e0d58c965795bc620"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0063e172de4854b6da3f097e5eb1da43dd3bd7a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0063e172de4854b6da3f097e5eb1da43dd3bd7a", "html_url": "https://github.com/rust-lang/rust/commit/c0063e172de4854b6da3f097e5eb1da43dd3bd7a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0063e172de4854b6da3f097e5eb1da43dd3bd7a/comments", "author": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mcarton", "id": 3751788, "node_id": "MDQ6VXNlcjM3NTE3ODg=", "avatar_url": "https://avatars.githubusercontent.com/u/3751788?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mcarton", "html_url": "https://github.com/mcarton", "followers_url": "https://api.github.com/users/mcarton/followers", "following_url": "https://api.github.com/users/mcarton/following{/other_user}", "gists_url": "https://api.github.com/users/mcarton/gists{/gist_id}", "starred_url": "https://api.github.com/users/mcarton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mcarton/subscriptions", "organizations_url": "https://api.github.com/users/mcarton/orgs", "repos_url": "https://api.github.com/users/mcarton/repos", "events_url": "https://api.github.com/users/mcarton/events{/privacy}", "received_events_url": "https://api.github.com/users/mcarton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f50b0981d33c2fcb591e2aab46bd8bd0497daff", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f50b0981d33c2fcb591e2aab46bd8bd0497daff", "html_url": "https://github.com/rust-lang/rust/commit/0f50b0981d33c2fcb591e2aab46bd8bd0497daff"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "3f430a1aaf02b2ad4ae7054845912b8e367672ed", "filename": "src/loops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0063e172de4854b6da3f097e5eb1da43dd3bd7a/src%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0063e172de4854b6da3f097e5eb1da43dd3bd7a/src%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Floops.rs?ref=c0063e172de4854b6da3f097e5eb1da43dd3bd7a", "patch": "@@ -547,7 +547,7 @@ fn check_for_loop_over_map_kv(cx: &LateContext, pat: &Pat, arg: &Expr, body: &Ex\n                           |db| {\n                     db.span_suggestion(expr.span,\n                                        \"use the corresponding method\",\n-                                       format!(\"for {} in {}.{}()\",\n+                                       format!(\"for {} in {}.{}() {{...}}\",\n                                                snippet(cx, *pat_span, \"..\"),\n                                                snippet(cx, arg_span, \"..\"),\n                                                kind));"}]}