{"sha": "c1dc0b7bbc239290388d2365c6d0b282e299bdbc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMxZGMwYjdiYmMyMzkyOTAzODhkMjM2NWM2ZDBiMjgyZTI5OWJkYmM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2021-04-08T14:56:03Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2021-04-08T14:56:03Z"}, "message": "add comments", "tree": {"sha": "6686450c01a7a706ba0d0af66a492243f93f0dff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6686450c01a7a706ba0d0af66a492243f93f0dff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1dc0b7bbc239290388d2365c6d0b282e299bdbc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1dc0b7bbc239290388d2365c6d0b282e299bdbc", "html_url": "https://github.com/rust-lang/rust/commit/c1dc0b7bbc239290388d2365c6d0b282e299bdbc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1dc0b7bbc239290388d2365c6d0b282e299bdbc/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1a14315975224951bc993455783678154afade09", "url": "https://api.github.com/repos/rust-lang/rust/commits/1a14315975224951bc993455783678154afade09", "html_url": "https://github.com/rust-lang/rust/commit/1a14315975224951bc993455783678154afade09"}], "stats": {"total": 24, "additions": 23, "deletions": 1}, "files": [{"sha": "91bc8ab5ef41da194936a68aada9b56da6639cf8", "filename": "compiler/rustc_resolve/src/late/lifetimes.rs", "status": "modified", "additions": 23, "deletions": 1, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/c1dc0b7bbc239290388d2365c6d0b282e299bdbc/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1dc0b7bbc239290388d2365c6d0b282e299bdbc/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Flifetimes.rs?ref=c1dc0b7bbc239290388d2365c6d0b282e299bdbc", "patch": "@@ -2343,7 +2343,18 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n \n                 Scope::TraitRefBoundary { s, .. } => {\n                     // We've exited nested poly trait refs; mark that we are no longer in nested trait refs.\n-                    // We don't increase the late depth because this isn't a `Binder` scope\n+                    // We don't increase the late depth because this isn't a `Binder` scope.\n+                    //\n+                    // This came up in #83737, which boiled down to a case like this:\n+                    //\n+                    // ```\n+                    // F: for<> Fn(&()) -> Box<dyn for<> Future<Output = ()> + Unpin>,\n+                    //                         //  ^^^^^\n+\n+                    // ```\n+                    //\n+                    // Here, as we traverse upwards from the `dyn for<>` binder, we want to reset `in_poly_trait_ref`\n+                    // to false, so that we avoid excess contaenation when we encounter the outer `for<>`  binder.\n                     in_poly_trait_ref = false;\n                     scope = s;\n                 }\n@@ -2369,6 +2380,17 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                         // We've already seen a binder that is a poly trait ref and this one is too,\n                         // that means that they are nested and we are concatenating the bound vars;\n                         // don't increase the late depth.\n+                        //\n+                        // This happens specifically with associated trait bounds like the following:\n+                        //\n+                        // ```\n+                        // for<'a> T: Iterator<Item: for<'b> Foo<'a, 'b>>\n+                        // ```\n+                        //\n+                        // In this case, as we traverse `for<'b>`, we would increment `late_depth` but\n+                        // set `in_poly_trait_ref` to true. Then when we traverse `for<'a>`, we would\n+                        // not increment `late_depth` again. (NB: Niko thinks this logic is actually\n+                        // wrong.)\n                         (true, true) => {}\n                         // We've exited nested poly trait refs; add one to the late depth and mark\n                         // that we are no longer in nested trait refs"}]}