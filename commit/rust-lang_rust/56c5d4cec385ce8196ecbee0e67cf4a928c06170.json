{"sha": "56c5d4cec385ce8196ecbee0e67cf4a928c06170", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2YzVkNGNlYzM4NWNlODE5NmVjYmVlMGU2N2NmNGE5MjhjMDYxNzA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-02-09T12:37:33Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2014-02-11T21:55:24Z"}, "message": "libsyntax -- fix unsafe sharing in closures", "tree": {"sha": "20590662238dfaeb5f9a9a2a845af7757eab628f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/20590662238dfaeb5f9a9a2a845af7757eab628f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56c5d4cec385ce8196ecbee0e67cf4a928c06170", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56c5d4cec385ce8196ecbee0e67cf4a928c06170", "html_url": "https://github.com/rust-lang/rust/commit/56c5d4cec385ce8196ecbee0e67cf4a928c06170", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56c5d4cec385ce8196ecbee0e67cf4a928c06170/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7560387afc9660b4ea6a15eef1f387182c6ae51", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7560387afc9660b4ea6a15eef1f387182c6ae51", "html_url": "https://github.com/rust-lang/rust/commit/c7560387afc9660b4ea6a15eef1f387182c6ae51"}], "stats": {"total": 22, "additions": 12, "deletions": 10}, "files": [{"sha": "9d290c93c6494f1edca3268fe0cb548d0101fdcf", "filename": "src/libsyntax/ext/deriving/generic.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/56c5d4cec385ce8196ecbee0e67cf4a928c06170/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56c5d4cec385ce8196ecbee0e67cf4a928c06170/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric.rs?ref=56c5d4cec385ce8196ecbee0e67cf4a928c06170", "patch": "@@ -580,10 +580,12 @@ impl<'a> MethodDef<'a> {\n             ast::SelfStatic => None,\n             _ => Some(ast::Arg::new_self(trait_.span, ast::MutImmutable))\n         };\n-        let args = arg_types.move_iter().map(|(name, ty)| {\n-            cx.arg(trait_.span, name, ty)\n-        });\n-        let args = self_arg.move_iter().chain(args).collect();\n+        let args = {\n+            let args = arg_types.move_iter().map(|(name, ty)| {\n+                    cx.arg(trait_.span, name, ty)\n+                });\n+            self_arg.move_iter().chain(args).collect()\n+        };\n \n         let ret_type = self.get_ret_ty(cx, trait_, generics, type_ident);\n "}, {"sha": "ef7bd7c2bcdec2ffae56a6dd9d544d3146e4afcc", "filename": "src/libsyntax/ext/deriving/rand.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/56c5d4cec385ce8196ecbee0e67cf4a928c06170/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56c5d4cec385ce8196ecbee0e67cf4a928c06170/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Frand.rs?ref=56c5d4cec385ce8196ecbee0e67cf4a928c06170", "patch": "@@ -60,7 +60,7 @@ fn rand_substructure(cx: &mut ExtCtxt, trait_span: Span, substr: &Substructure)\n         cx.ident_of(\"Rand\"),\n         cx.ident_of(\"rand\")\n     ];\n-    let rand_call = |span| {\n+    let rand_call = |cx: &mut ExtCtxt, span| {\n         cx.expr_call_global(span,\n                             rand_ident.clone(),\n                             ~[ rng[0] ])\n@@ -111,7 +111,7 @@ fn rand_substructure(cx: &mut ExtCtxt, trait_span: Span, substr: &Substructure)\n                 let i_expr = cx.expr_uint(v_span, i);\n                 let pat = cx.pat_lit(v_span, i_expr);\n \n-                let thing = rand_thing(cx, v_span, ident, summary, |sp| rand_call(sp));\n+                let thing = rand_thing(cx, v_span, ident, summary, |cx, sp| rand_call(cx, sp));\n                 cx.arm(v_span, ~[ pat ], thing)\n             }).collect::<~[ast::Arm]>();\n \n@@ -130,20 +130,21 @@ fn rand_substructure(cx: &mut ExtCtxt, trait_span: Span, substr: &Substructure)\n                   trait_span: Span,\n                   ctor_ident: Ident,\n                   summary: &StaticFields,\n-                  rand_call: |Span| -> @Expr)\n+                  rand_call: |&mut ExtCtxt, Span| -> @Expr)\n                   -> @Expr {\n         match *summary {\n             Unnamed(ref fields) => {\n                 if fields.is_empty() {\n                     cx.expr_ident(trait_span, ctor_ident)\n                 } else {\n-                    let exprs = fields.map(|span| rand_call(*span));\n+                    let exprs = fields.map(|span| rand_call(cx, *span));\n                     cx.expr_call_ident(trait_span, ctor_ident, exprs)\n                 }\n             }\n             Named(ref fields) => {\n                 let rand_fields = fields.map(|&(ident, span)| {\n-                    cx.field_imm(span, ident, rand_call(span))\n+                    let e = rand_call(cx, span);\n+                    cx.field_imm(span, ident, e)\n                 });\n                 cx.expr_struct_ident(trait_span, ctor_ident, rand_fields)\n             }"}, {"sha": "3eacce5eb1d774b7768a6824f4f0f478d0027cfc", "filename": "src/libsyntax/ext/format.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/56c5d4cec385ce8196ecbee0e67cf4a928c06170/src%2Flibsyntax%2Fext%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56c5d4cec385ce8196ecbee0e67cf4a928c06170/src%2Flibsyntax%2Fext%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fformat.rs?ref=56c5d4cec385ce8196ecbee0e67cf4a928c06170", "patch": "@@ -21,7 +21,6 @@ use rsparse = parse;\n use std::fmt::parse;\n use std::hashmap::{HashMap, HashSet};\n use std::vec;\n-use std::cell::RefCell;\n \n #[deriving(Eq)]\n enum ArgumentType {"}]}