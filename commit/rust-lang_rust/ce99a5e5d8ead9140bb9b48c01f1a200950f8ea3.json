{"sha": "ce99a5e5d8ead9140bb9b48c01f1a200950f8ea3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlOTlhNWU1ZDhlYWQ5MTQwYmI5YjQ4YzAxZjFhMjAwOTUwZjhlYTM=", "commit": {"author": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-04-20T07:09:30Z"}, "committer": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-04-20T07:09:30Z"}, "message": "Check that the feature strings are well-formed\n\nAssert that the feature strings are NUL terminated, so that they will\nbe well-formed as C strings.\n\nThis is a safety check to ease the maintaninace and update of the\nfeature lists.", "tree": {"sha": "f904c2521dca6df81258dd99bbfebfba6f80037e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f904c2521dca6df81258dd99bbfebfba6f80037e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce99a5e5d8ead9140bb9b48c01f1a200950f8ea3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce99a5e5d8ead9140bb9b48c01f1a200950f8ea3", "html_url": "https://github.com/rust-lang/rust/commit/ce99a5e5d8ead9140bb9b48c01f1a200950f8ea3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce99a5e5d8ead9140bb9b48c01f1a200950f8ea3/comments", "author": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "deaa2fe7536e395a890f910019a820b36f2cd992", "url": "https://api.github.com/repos/rust-lang/rust/commits/deaa2fe7536e395a890f910019a820b36f2cd992", "html_url": "https://github.com/rust-lang/rust/commit/deaa2fe7536e395a890f910019a820b36f2cd992"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "fad0af19a127037ad0861b1842860cecb2eb621b", "filename": "src/librustc_driver/target_features.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ce99a5e5d8ead9140bb9b48c01f1a200950f8ea3/src%2Flibrustc_driver%2Ftarget_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce99a5e5d8ead9140bb9b48c01f1a200950f8ea3/src%2Flibrustc_driver%2Ftarget_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftarget_features.rs?ref=ce99a5e5d8ead9140bb9b48c01f1a200950f8ea3", "patch": "@@ -54,6 +54,7 @@ pub fn add_configuration(cfg: &mut ast::CrateConfig, sess: &Session) {\n \n     let tf = InternedString::new(\"target_feature\");\n     for feat in whitelist {\n+        assert_eq!(feat.chars().last(), Some('\\0'));\n         if unsafe { LLVMRustHasFeature(target_machine, feat.as_ptr() as *const c_char) } {\n             cfg.push(attr::mk_name_value_item_str(tf.clone(), intern(&feat[..feat.len()-1])))\n         }"}]}