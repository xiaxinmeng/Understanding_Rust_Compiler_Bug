{"sha": "96ee13a56d856f6d0d58da796389c0b49f438bc8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk2ZWUxM2E1NmQ4NTZmNmQwZDU4ZGE3OTYzODljMGI0OWY0MzhiYzg=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2018-11-09T01:15:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-11-09T01:15:01Z"}, "message": "Rollup merge of #55739 - wesleywiser:mir_inline_fuel, r=nikomatsakis\n\nConsume optimization fuel from the MIR inliner\n\nThis makes it easier to debug mis-optimizations that occur during\ninlining. Thanks to @nikomatsakis for the suggestion!", "tree": {"sha": "2f76aab85c66fe05ff6a358d39d65071c1008ceb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f76aab85c66fe05ff6a358d39d65071c1008ceb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/96ee13a56d856f6d0d58da796389c0b49f438bc8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJb5N+VCRBK7hj4Ov3rIwAAdHIIAKh+IZ2W/9kkCQ59Fb27rAfD\nEcWQY0hDoE3/HMzPrhr1hTSGnWXEDbzhiXNCf9WPt2VE0+K8impg0zpdo7YU+MVo\noBRvDW5DcIWF3S/3/v3OPrtkKUDer1SPWcPR4f9sQnrppcPmCXNhySR11BHUw88U\nYiRyt1PamwTjiFdPvWF3DKksJ05uD5Bu1fC35irDT3dp/Q3nDry7/InhwNmtaut8\nBPpBv6jgVOYzy3pyHgdo6FiaZlPiNFM16CvMNs+KQEnRySjIA1l9/pTHq6bmo5BD\ndNxxWDscvV9rKYjniZOaWwc8//8wUCKUkKO03T+JHjHdxTJmXN50+BvGc2UGY0Y=\n=qVwK\n-----END PGP SIGNATURE-----\n", "payload": "tree 2f76aab85c66fe05ff6a358d39d65071c1008ceb\nparent e873984fa8fff9df303df902bb1dc10528cd99ec\nparent e72afa9573ab8cb7ca2482f53b234bb59e3040ef\nauthor Mark Rousskov <mark.simulacrum@gmail.com> 1541726101 -0700\ncommitter GitHub <noreply@github.com> 1541726101 -0700\n\nRollup merge of #55739 - wesleywiser:mir_inline_fuel, r=nikomatsakis\n\nConsume optimization fuel from the MIR inliner\n\nThis makes it easier to debug mis-optimizations that occur during\ninlining. Thanks to @nikomatsakis for the suggestion!\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/96ee13a56d856f6d0d58da796389c0b49f438bc8", "html_url": "https://github.com/rust-lang/rust/commit/96ee13a56d856f6d0d58da796389c0b49f438bc8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/96ee13a56d856f6d0d58da796389c0b49f438bc8/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e873984fa8fff9df303df902bb1dc10528cd99ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/e873984fa8fff9df303df902bb1dc10528cd99ec", "html_url": "https://github.com/rust-lang/rust/commit/e873984fa8fff9df303df902bb1dc10528cd99ec"}, {"sha": "e72afa9573ab8cb7ca2482f53b234bb59e3040ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/e72afa9573ab8cb7ca2482f53b234bb59e3040ef", "html_url": "https://github.com/rust-lang/rust/commit/e72afa9573ab8cb7ca2482f53b234bb59e3040ef"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "2db3bbda3233bf8c895e0352a587511b4b92ceb2", "filename": "src/librustc_mir/transform/inline.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/96ee13a56d856f6d0d58da796389c0b49f438bc8/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/96ee13a56d856f6d0d58da796389c0b49f438bc8/src%2Flibrustc_mir%2Ftransform%2Finline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Finline.rs?ref=96ee13a56d856f6d0d58da796389c0b49f438bc8", "patch": "@@ -137,7 +137,7 @@ impl<'a, 'tcx> Inliner<'a, 'tcx> {\n \n                 let callee_mir = match self.tcx.try_optimized_mir(callsite.location.span,\n                                                                   callsite.callee) {\n-                    Ok(callee_mir) if self.should_inline(callsite, callee_mir) => {\n+                    Ok(callee_mir) if self.consider_optimizing(callsite, callee_mir) => {\n                         self.tcx.subst_and_normalize_erasing_regions(\n                             &callsite.substs,\n                             param_env,\n@@ -198,6 +198,18 @@ impl<'a, 'tcx> Inliner<'a, 'tcx> {\n         }\n     }\n \n+    fn consider_optimizing(&self,\n+                           callsite: CallSite<'tcx>,\n+                           callee_mir: &Mir<'tcx>)\n+                           -> bool\n+    {\n+        debug!(\"consider_optimizing({:?})\", callsite);\n+        self.should_inline(callsite, callee_mir)\n+            && self.tcx.consider_optimizing(|| format!(\"Inline {:?} into {:?}\",\n+                                                       callee_mir.span,\n+                                                       callsite))\n+    }\n+\n     fn should_inline(&self,\n                      callsite: CallSite<'tcx>,\n                      callee_mir: &Mir<'tcx>)"}]}