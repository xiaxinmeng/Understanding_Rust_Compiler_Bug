{"sha": "5fb8a3926619a18a2e31627e4cdf05f16530b0eb", "node_id": "C_kwDOAAsO6NoAKDVmYjhhMzkyNjYxOWExOGEyZTMxNjI3ZTRjZGYwNWYxNjUzMGIwZWI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-19T05:51:42Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-06-19T05:51:42Z"}, "message": "Auto merge of #97367 - WaffleLapkin:stabilize_checked_slice_to_str_conv, r=dtolnay\n\nStabilize checked slice->str conversion functions\n\nThis PR stabilizes the following APIs as `const` functions in Rust 1.63:\n```rust\n// core::str\n\npub const fn from_utf8(v: &[u8]) -> Result<&str, Utf8Error>;\n\nimpl Utf8Error {\n    pub const fn valid_up_to(&self) -> usize;\n    pub const fn error_len(&self) -> Option<usize>;\n}\n```\n\nNote that the `from_utf8_mut` function is not stabilized as unique references (`&mut _`) are [unstable in const context].\n\nFCP: https://github.com/rust-lang/rust/issues/91006#issuecomment-1134593095\n\n[unstable in const context]: https://github.com/rust-lang/rust/issues/57349", "tree": {"sha": "bf422d1f8697954e89cc67e89b7bcff1b69b2d31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf422d1f8697954e89cc67e89b7bcff1b69b2d31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fb8a3926619a18a2e31627e4cdf05f16530b0eb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fb8a3926619a18a2e31627e4cdf05f16530b0eb", "html_url": "https://github.com/rust-lang/rust/commit/5fb8a3926619a18a2e31627e4cdf05f16530b0eb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fb8a3926619a18a2e31627e4cdf05f16530b0eb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6c9be6e4e9074ca58cef8b1ded299eff72e3ac52", "url": "https://api.github.com/repos/rust-lang/rust/commits/6c9be6e4e9074ca58cef8b1ded299eff72e3ac52", "html_url": "https://github.com/rust-lang/rust/commit/6c9be6e4e9074ca58cef8b1ded299eff72e3ac52"}, {"sha": "89295352ee00a5555141db5fb7bcc41c822d4aec", "url": "https://api.github.com/repos/rust-lang/rust/commits/89295352ee00a5555141db5fb7bcc41c822d4aec", "html_url": "https://github.com/rust-lang/rust/commit/89295352ee00a5555141db5fb7bcc41c822d4aec"}], "stats": {"total": 11, "additions": 6, "deletions": 5}, "files": [{"sha": "b0c55ca4f5139b748fd9cbe0af8f297df61352fe", "filename": "library/core/src/str/converts.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5fb8a3926619a18a2e31627e4cdf05f16530b0eb/library%2Fcore%2Fsrc%2Fstr%2Fconverts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fb8a3926619a18a2e31627e4cdf05f16530b0eb/library%2Fcore%2Fsrc%2Fstr%2Fconverts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Fconverts.rs?ref=5fb8a3926619a18a2e31627e4cdf05f16530b0eb", "patch": "@@ -82,9 +82,10 @@ use super::Utf8Error;\n /// assert_eq!(\"\ud83d\udc96\", sparkle_heart);\n /// ```\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-#[rustc_const_unstable(feature = \"const_str_from_utf8\", issue = \"91006\")]\n+#[rustc_const_stable(feature = \"const_str_from_utf8_shared\", since = \"1.63.0\")]\n+#[rustc_allow_const_fn_unstable(str_internals)]\n pub const fn from_utf8(v: &[u8]) -> Result<&str, Utf8Error> {\n-    // This should use `?` again, once it's `const`\n+    // FIXME: This should use `?` again, once it's `const`\n     match run_utf8_validation(v) {\n         Ok(_) => {\n             // SAFETY: validation succeeded."}, {"sha": "4e569fcc866b6c974c0d373cc0d85062bd460490", "filename": "library/core/src/str/error.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5fb8a3926619a18a2e31627e4cdf05f16530b0eb/library%2Fcore%2Fsrc%2Fstr%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fb8a3926619a18a2e31627e4cdf05f16530b0eb/library%2Fcore%2Fsrc%2Fstr%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fstr%2Ferror.rs?ref=5fb8a3926619a18a2e31627e4cdf05f16530b0eb", "patch": "@@ -72,7 +72,7 @@ impl Utf8Error {\n     /// assert_eq!(1, error.valid_up_to());\n     /// ```\n     #[stable(feature = \"utf8_error\", since = \"1.5.0\")]\n-    #[rustc_const_unstable(feature = \"const_str_from_utf8\", issue = \"91006\")]\n+    #[rustc_const_stable(feature = \"const_str_from_utf8_shared\", since = \"1.63.0\")]\n     #[must_use]\n     #[inline]\n     pub const fn valid_up_to(&self) -> usize {\n@@ -95,11 +95,11 @@ impl Utf8Error {\n     ///\n     /// [U+FFFD]: ../../std/char/constant.REPLACEMENT_CHARACTER.html\n     #[stable(feature = \"utf8_error_error_len\", since = \"1.20.0\")]\n-    #[rustc_const_unstable(feature = \"const_str_from_utf8\", issue = \"91006\")]\n+    #[rustc_const_stable(feature = \"const_str_from_utf8_shared\", since = \"1.63.0\")]\n     #[must_use]\n     #[inline]\n     pub const fn error_len(&self) -> Option<usize> {\n-        // This should become `map` again, once it's `const`\n+        // FIXME: This should become `map` again, once it's `const`\n         match self.error_len {\n             Some(len) => Some(len as usize),\n             None => None,"}]}