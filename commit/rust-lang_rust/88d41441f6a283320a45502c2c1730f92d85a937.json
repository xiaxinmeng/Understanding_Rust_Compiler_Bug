{"sha": "88d41441f6a283320a45502c2c1730f92d85a937", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ZDQxNDQxZjZhMjgzMzIwYTQ1NTAyYzJjMTczMGY5MmQ4NWE5Mzc=", "commit": {"author": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-10-02T23:59:48Z"}, "committer": {"name": "Corey Farwell", "email": "coreyf@rwell.org", "date": "2016-10-03T01:58:22Z"}, "message": "Migrate `VariantKind` constructor to `Clean` impl.\n\nhttps://github.com/rust-lang/rust/pull/36903#discussion_r81477884", "tree": {"sha": "f0480f07d848cd21ce6ed13d69b605c8b22fccd8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f0480f07d848cd21ce6ed13d69b605c8b22fccd8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88d41441f6a283320a45502c2c1730f92d85a937", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88d41441f6a283320a45502c2c1730f92d85a937", "html_url": "https://github.com/rust-lang/rust/commit/88d41441f6a283320a45502c2c1730f92d85a937", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88d41441f6a283320a45502c2c1730f92d85a937/comments", "author": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "committer": {"login": "frewsxcv", "id": 416575, "node_id": "MDQ6VXNlcjQxNjU3NQ==", "avatar_url": "https://avatars.githubusercontent.com/u/416575?v=4", "gravatar_id": "", "url": "https://api.github.com/users/frewsxcv", "html_url": "https://github.com/frewsxcv", "followers_url": "https://api.github.com/users/frewsxcv/followers", "following_url": "https://api.github.com/users/frewsxcv/following{/other_user}", "gists_url": "https://api.github.com/users/frewsxcv/gists{/gist_id}", "starred_url": "https://api.github.com/users/frewsxcv/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/frewsxcv/subscriptions", "organizations_url": "https://api.github.com/users/frewsxcv/orgs", "repos_url": "https://api.github.com/users/frewsxcv/repos", "events_url": "https://api.github.com/users/frewsxcv/events{/privacy}", "received_events_url": "https://api.github.com/users/frewsxcv/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b55468c8fef3dbe493f32e78d78ae176ef8f9ec1", "url": "https://api.github.com/repos/rust-lang/rust/commits/b55468c8fef3dbe493f32e78d78ae176ef8f9ec1", "html_url": "https://github.com/rust-lang/rust/commit/b55468c8fef3dbe493f32e78d78ae176ef8f9ec1"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "a85e0193a97018c41e03a2c129ea47a698b0a45e", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/88d41441f6a283320a45502c2c1730f92d85a937/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88d41441f6a283320a45502c2c1730f92d85a937/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=88d41441f6a283320a45502c2c1730f92d85a937", "patch": "@@ -2025,7 +2025,7 @@ impl Clean<Item> for doctree::Variant {\n             deprecation: self.depr.clean(cx),\n             def_id: cx.map.local_def_id(self.def.id()),\n             inner: VariantItem(Variant {\n-                kind: VariantKind::from_struct_def(&self.def, cx),\n+                kind: self.def.clean(cx),\n             }),\n         }\n     }\n@@ -2079,14 +2079,14 @@ pub enum VariantKind {\n     StructVariant(VariantStruct),\n }\n \n-impl VariantKind {\n-    fn from_struct_def(struct_def: &hir::VariantData, cx: &DocContext) -> VariantKind {\n-        if struct_def.is_struct() {\n-            StructVariant(struct_def.clean(cx))\n-        } else if struct_def.is_unit() {\n+impl Clean<VariantKind> for hir::VariantData {\n+    fn clean(&self, cx: &DocContext) -> VariantKind {\n+        if self.is_struct() {\n+            StructVariant(self.clean(cx))\n+        } else if self.is_unit() {\n             CLikeVariant\n         } else {\n-            TupleVariant(struct_def.fields().iter().map(|x| x.ty.clean(cx)).collect())\n+            TupleVariant(self.fields().iter().map(|x| x.ty.clean(cx)).collect())\n         }\n     }\n }"}]}