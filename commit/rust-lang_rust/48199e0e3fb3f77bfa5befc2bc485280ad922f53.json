{"sha": "48199e0e3fb3f77bfa5befc2bc485280ad922f53", "node_id": "C_kwDOAAsO6NoAKDQ4MTk5ZTBlM2ZiM2Y3N2JmYTViZWZjMmJjNDg1MjgwYWQ5MjJmNTM", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-29T09:23:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-29T09:23:16Z"}, "message": "Rollup merge of #96523 - nbdd0121:windows, r=petrochenkov\n\nAdd `@feat.00` symbol to symbols.o for COFF\n\nFix #96498\n\nThis is based on top of #96444.\n\nr? ``@petrochenkov``", "tree": {"sha": "d9254072c3b95525f649b1b8c9da49250d758e64", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d9254072c3b95525f649b1b8c9da49250d758e64"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48199e0e3fb3f77bfa5befc2bc485280ad922f53", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJia66ECRBK7hj4Ov3rIwAAJdEIAHLM1ORnD2CoN2OQsQ2G8MwK\njxNB9Eli9VXbjLR8c0EJ21zHw0HJfa87ccjeK75ZAVQXJuYX7966HycYKIUrXmcU\nhKmxIsuNxeh2+pG4kfGbirZAxqlLQmFqY5Cw91h3H+j0VQ/DKrEIl0vsP+AGJBiW\nKQtZSEXZCnoHJo3ySzK4pAybf9ecuXkVpGOQ5sAQo02nUUDDoap9JNGMVXq9RXwE\nNIbsc0//PpZwr52Qn2qJfh1UU8dRVoDU7A5srEjlB1cXzFCNJl6ntWh+C0xgJSNa\noQ9EFDO5Zkblf2f2Krpv4UvPjNdKaLi0/f1sGmwTfvxVUSyyuvhCgXw2bRkAtw8=\n=G593\n-----END PGP SIGNATURE-----\n", "payload": "tree d9254072c3b95525f649b1b8c9da49250d758e64\nparent 109008a1c104ac672c4852ee3dee55a8f2bda789\nparent 0fce0db96f5d7f3b42d25412d3989014551852ac\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1651224196 +0200\ncommitter GitHub <noreply@github.com> 1651224196 +0200\n\nRollup merge of #96523 - nbdd0121:windows, r=petrochenkov\n\nAdd `@feat.00` symbol to symbols.o for COFF\n\nFix #96498\n\nThis is based on top of #96444.\n\nr? ``@petrochenkov``\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48199e0e3fb3f77bfa5befc2bc485280ad922f53", "html_url": "https://github.com/rust-lang/rust/commit/48199e0e3fb3f77bfa5befc2bc485280ad922f53", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48199e0e3fb3f77bfa5befc2bc485280ad922f53/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "109008a1c104ac672c4852ee3dee55a8f2bda789", "url": "https://api.github.com/repos/rust-lang/rust/commits/109008a1c104ac672c4852ee3dee55a8f2bda789", "html_url": "https://github.com/rust-lang/rust/commit/109008a1c104ac672c4852ee3dee55a8f2bda789"}, {"sha": "0fce0db96f5d7f3b42d25412d3989014551852ac", "url": "https://api.github.com/repos/rust-lang/rust/commits/0fce0db96f5d7f3b42d25412d3989014551852ac", "html_url": "https://github.com/rust-lang/rust/commit/0fce0db96f5d7f3b42d25412d3989014551852ac"}], "stats": {"total": 35, "additions": 35, "deletions": 0}, "files": [{"sha": "886ca9681e2b28e0da728d9075381d1daa46851a", "filename": "compiler/rustc_codegen_ssa/src/back/link.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/48199e0e3fb3f77bfa5befc2bc485280ad922f53/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48199e0e3fb3f77bfa5befc2bc485280ad922f53/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fback%2Flink.rs?ref=48199e0e3fb3f77bfa5befc2bc485280ad922f53", "patch": "@@ -1700,6 +1700,29 @@ fn add_linked_symbol_object(\n         // We handle the name decoration of COFF targets in `symbol_export.rs`, so disable the\n         // default mangler in `object` crate.\n         file.set_mangling(object::write::Mangling::None);\n+\n+        // Add feature flags to the object file. On MSVC this is optional but LLD will complain if\n+        // not present.\n+        let mut feature = 0;\n+\n+        if file.architecture() == object::Architecture::I386 {\n+            // Indicate that all SEH handlers are registered in .sxdata section.\n+            // We don't have generate any code, so we don't need .sxdata section but LLD still\n+            // expects us to set this bit (see #96498).\n+            // Reference: https://docs.microsoft.com/en-us/windows/win32/debug/pe-format\n+            feature |= 1;\n+        }\n+\n+        file.add_symbol(object::write::Symbol {\n+            name: \"@feat.00\".into(),\n+            value: feature,\n+            size: 0,\n+            kind: object::SymbolKind::Data,\n+            scope: object::SymbolScope::Compilation,\n+            weak: false,\n+            section: object::write::SymbolSection::Absolute,\n+            flags: object::SymbolFlags::None,\n+        });\n     }\n \n     for (sym, kind) in symbols.iter() {"}, {"sha": "eae6400aee43a5223e22c979b7998a4fdbaff7b3", "filename": "src/test/run-make/issue-96498/Makefile", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48199e0e3fb3f77bfa5befc2bc485280ad922f53/src%2Ftest%2Frun-make%2Fissue-96498%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/48199e0e3fb3f77bfa5befc2bc485280ad922f53/src%2Ftest%2Frun-make%2Fissue-96498%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-96498%2FMakefile?ref=48199e0e3fb3f77bfa5befc2bc485280ad922f53", "patch": "@@ -0,0 +1,8 @@\n+# only-windows\n+# needs-rust-lld\n+\n+-include ../../run-make-fulldeps/tools.mk\n+\n+# Ensure that LLD can link\n+all:\n+\t$(RUSTC) -C linker=rust-lld foo.rs"}, {"sha": "93ac3641b098ccbbbd64e868967fea51c7b81bd2", "filename": "src/test/run-make/issue-96498/foo.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48199e0e3fb3f77bfa5befc2bc485280ad922f53/src%2Ftest%2Frun-make%2Fissue-96498%2Ffoo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48199e0e3fb3f77bfa5befc2bc485280ad922f53/src%2Ftest%2Frun-make%2Fissue-96498%2Ffoo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fissue-96498%2Ffoo.rs?ref=48199e0e3fb3f77bfa5befc2bc485280ad922f53", "patch": "@@ -0,0 +1,4 @@\n+#![crate_type = \"cdylib\"]\n+\n+#[no_mangle]\n+extern \"C\" fn foo() {}"}]}