{"sha": "6a04e9ce147cba1ae4da177f271a29eb296a9bef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhMDRlOWNlMTQ3Y2JhMWFlNGRhMTc3ZjI3MWEyOWViMjk2YTliZWY=", "commit": {"author": {"name": "Phil Ellison", "email": "phil.j.ellison@gmail.com", "date": "2019-08-13T06:31:06Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-08-25T09:56:23Z"}, "message": "Fix build for Diagnostic type change", "tree": {"sha": "5e5c9e9cf85b64381c978995d5ad029570d77476", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5e5c9e9cf85b64381c978995d5ad029570d77476"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a04e9ce147cba1ae4da177f271a29eb296a9bef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a04e9ce147cba1ae4da177f271a29eb296a9bef", "html_url": "https://github.com/rust-lang/rust/commit/6a04e9ce147cba1ae4da177f271a29eb296a9bef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a04e9ce147cba1ae4da177f271a29eb296a9bef/comments", "author": {"login": "theotherphil", "id": 1974256, "node_id": "MDQ6VXNlcjE5NzQyNTY=", "avatar_url": "https://avatars.githubusercontent.com/u/1974256?v=4", "gravatar_id": "", "url": "https://api.github.com/users/theotherphil", "html_url": "https://github.com/theotherphil", "followers_url": "https://api.github.com/users/theotherphil/followers", "following_url": "https://api.github.com/users/theotherphil/following{/other_user}", "gists_url": "https://api.github.com/users/theotherphil/gists{/gist_id}", "starred_url": "https://api.github.com/users/theotherphil/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/theotherphil/subscriptions", "organizations_url": "https://api.github.com/users/theotherphil/orgs", "repos_url": "https://api.github.com/users/theotherphil/repos", "events_url": "https://api.github.com/users/theotherphil/events{/privacy}", "received_events_url": "https://api.github.com/users/theotherphil/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "200470692ff1023024f0d4a6c35deb43d3045f10", "url": "https://api.github.com/repos/rust-lang/rust/commits/200470692ff1023024f0d4a6c35deb43d3045f10", "html_url": "https://github.com/rust-lang/rust/commit/200470692ff1023024f0d4a6c35deb43d3045f10"}], "stats": {"total": 11, "additions": 4, "deletions": 7}, "files": [{"sha": "475dd5766e7fe8e6dd673d16583bcd221815e668", "filename": "crates/ra_hir/src/diagnostics.rs", "status": "modified", "additions": 4, "deletions": 7, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6a04e9ce147cba1ae4da177f271a29eb296a9bef/crates%2Fra_hir%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a04e9ce147cba1ae4da177f271a29eb296a9bef/crates%2Fra_hir%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdiagnostics.rs?ref=6a04e9ce147cba1ae4da177f271a29eb296a9bef", "patch": "@@ -154,11 +154,8 @@ impl Diagnostic for MissingOkInTailExpr {\n     fn message(&self) -> String {\n         \"wrap return expression in Ok\".to_string()\n     }\n-    fn file(&self) -> HirFileId {\n-        self.file\n-    }\n-    fn syntax_node_ptr(&self) -> SyntaxNodePtr {\n-        self.expr.into()\n+    fn source(&self) -> Source<SyntaxNodePtr> {\n+        Source { file_id: self.file, ast: self.expr.into() }\n     }\n     fn as_any(&self) -> &(dyn Any + Send + 'static) {\n         self\n@@ -169,8 +166,8 @@ impl AstDiagnostic for MissingOkInTailExpr {\n     type AST = ast::Expr;\n \n     fn ast(&self, db: &impl HirDatabase) -> Self::AST {\n-        let root = db.parse_or_expand(self.file()).unwrap();\n-        let node = self.syntax_node_ptr().to_node(&root);\n+        let root = db.parse_or_expand(self.file).unwrap();\n+        let node = self.source().ast.to_node(&root);\n         ast::Expr::cast(node).unwrap()\n     }\n }"}]}