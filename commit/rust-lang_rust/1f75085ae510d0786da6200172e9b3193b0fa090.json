{"sha": "1f75085ae510d0786da6200172e9b3193b0fa090", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFmNzUwODVhZTUxMGQwNzg2ZGE2MjAwMTcyZTliMzE5M2IwZmEwOTA=", "commit": {"author": {"name": "Phil Ruffwind", "email": "rf@rufflewind.com", "date": "2017-02-24T00:19:25Z"}, "committer": {"name": "Phil Ruffwind", "email": "rf@rufflewind.com", "date": "2017-02-25T05:25:13Z"}, "message": "Add Gankro's table to nomicon/src/phantom-data.md\n\nOriginal: https://github.com/rust-lang/rust/issues/30069#issuecomment-159928136\n\nTesting confirms that:\n\n  - PhantomData<fn() -> T> does not actually enable drop checking.\n  - PhantomData<fn(T) -> T> is neither variant nor contravariant.", "tree": {"sha": "26a8a1c416e23bf7bfac3212be7a514b0fb5eb1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26a8a1c416e23bf7bfac3212be7a514b0fb5eb1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1f75085ae510d0786da6200172e9b3193b0fa090", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1f75085ae510d0786da6200172e9b3193b0fa090", "html_url": "https://github.com/rust-lang/rust/commit/1f75085ae510d0786da6200172e9b3193b0fa090", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1f75085ae510d0786da6200172e9b3193b0fa090/comments", "author": {"login": "Rufflewind", "id": 6571068, "node_id": "MDQ6VXNlcjY1NzEwNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/6571068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rufflewind", "html_url": "https://github.com/Rufflewind", "followers_url": "https://api.github.com/users/Rufflewind/followers", "following_url": "https://api.github.com/users/Rufflewind/following{/other_user}", "gists_url": "https://api.github.com/users/Rufflewind/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rufflewind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rufflewind/subscriptions", "organizations_url": "https://api.github.com/users/Rufflewind/orgs", "repos_url": "https://api.github.com/users/Rufflewind/repos", "events_url": "https://api.github.com/users/Rufflewind/events{/privacy}", "received_events_url": "https://api.github.com/users/Rufflewind/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Rufflewind", "id": 6571068, "node_id": "MDQ6VXNlcjY1NzEwNjg=", "avatar_url": "https://avatars.githubusercontent.com/u/6571068?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Rufflewind", "html_url": "https://github.com/Rufflewind", "followers_url": "https://api.github.com/users/Rufflewind/followers", "following_url": "https://api.github.com/users/Rufflewind/following{/other_user}", "gists_url": "https://api.github.com/users/Rufflewind/gists{/gist_id}", "starred_url": "https://api.github.com/users/Rufflewind/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Rufflewind/subscriptions", "organizations_url": "https://api.github.com/users/Rufflewind/orgs", "repos_url": "https://api.github.com/users/Rufflewind/repos", "events_url": "https://api.github.com/users/Rufflewind/events{/privacy}", "received_events_url": "https://api.github.com/users/Rufflewind/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "413a975e31584d1e22d158a70c6d3073b991a618", "url": "https://api.github.com/repos/rust-lang/rust/commits/413a975e31584d1e22d158a70c6d3073b991a618", "html_url": "https://github.com/rust-lang/rust/commit/413a975e31584d1e22d158a70c6d3073b991a618"}], "stats": {"total": 22, "additions": 20, "deletions": 2}, "files": [{"sha": "32539c2d01f6dcd9e9488cfae80f02f0be929db6", "filename": "src/doc/nomicon/src/phantom-data.md", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/1f75085ae510d0786da6200172e9b3193b0fa090/src%2Fdoc%2Fnomicon%2Fsrc%2Fphantom-data.md", "raw_url": "https://github.com/rust-lang/rust/raw/1f75085ae510d0786da6200172e9b3193b0fa090/src%2Fdoc%2Fnomicon%2Fsrc%2Fphantom-data.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon%2Fsrc%2Fphantom-data.md?ref=1f75085ae510d0786da6200172e9b3193b0fa090", "patch": "@@ -82,5 +82,23 @@ standard library made a utility for itself called `Unique<T>` which:\n \n * wraps a `*const T` for variance\n * includes a `PhantomData<T>`\n-* auto-derives Send/Sync as if T was contained\n-* marks the pointer as NonZero for the null-pointer optimization\n+* auto-derives `Send`/`Sync` as if T was contained\n+* marks the pointer as `NonZero` for the null-pointer optimization\n+\n+## Table of `PhantomData` patterns\n+\n+Here\u2019s a table of all the wonderful ways `PhantomData` could be used:\n+\n+| Phantom type                | `'a`      | `T`                       |\n+|-----------------------------|-----------|---------------------------|\n+| `PhantomData<T>`            | -         | variant (with drop check) |\n+| `PhantomData<&'a T>`        | variant   | variant                   |\n+| `PhantomData<&'a mut T>`    | variant   | invariant                 |\n+| `PhantomData<*const T>`     | -         | variant                   |\n+| `PhantomData<*mut T>`       | -         | invariant                 |\n+| `PhantomData<fn(T)>`        | -         | contravariant (*)         |\n+| `PhantomData<fn() -> T>`    | -         | variant                   |\n+| `PhantomData<fn(T) -> T>`   | -         | invariant                 |\n+| `PhantomData<Cell<&'a ()>>` | invariant | -                         |\n+\n+(*) If contravariance gets scrapped, this would be invariant."}]}