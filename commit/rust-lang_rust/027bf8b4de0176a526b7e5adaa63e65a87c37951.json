{"sha": "027bf8b4de0176a526b7e5adaa63e65a87c37951", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyN2JmOGI0ZGUwMTc2YTUyNmI3ZTVhZGFhNjNlNjVhODdjMzc5NTE=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2018-11-25T15:40:26Z"}, "committer": {"name": "Alexander Regueiro", "email": "alexreg@me.com", "date": "2018-11-30T03:12:10Z"}, "message": "Use opt_def_id instead of having special branch", "tree": {"sha": "b24013f1e01ebc5e554751beed1140e29f027b57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b24013f1e01ebc5e554751beed1140e29f027b57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/027bf8b4de0176a526b7e5adaa63e65a87c37951", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/027bf8b4de0176a526b7e5adaa63e65a87c37951", "html_url": "https://github.com/rust-lang/rust/commit/027bf8b4de0176a526b7e5adaa63e65a87c37951", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/027bf8b4de0176a526b7e5adaa63e65a87c37951/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexreg", "id": 67036, "node_id": "MDQ6VXNlcjY3MDM2", "avatar_url": "https://avatars.githubusercontent.com/u/67036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexreg", "html_url": "https://github.com/alexreg", "followers_url": "https://api.github.com/users/alexreg/followers", "following_url": "https://api.github.com/users/alexreg/following{/other_user}", "gists_url": "https://api.github.com/users/alexreg/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexreg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexreg/subscriptions", "organizations_url": "https://api.github.com/users/alexreg/orgs", "repos_url": "https://api.github.com/users/alexreg/repos", "events_url": "https://api.github.com/users/alexreg/events{/privacy}", "received_events_url": "https://api.github.com/users/alexreg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c144dc07e35c1ef4a25bc321dce07565952121aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/c144dc07e35c1ef4a25bc321dce07565952121aa", "html_url": "https://github.com/rust-lang/rust/commit/c144dc07e35c1ef4a25bc321dce07565952121aa"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ab0094df0e219b8349d95e7450feca01890ee756", "filename": "src/librustc/middle/reachable.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/027bf8b4de0176a526b7e5adaa63e65a87c37951/src%2Flibrustc%2Fmiddle%2Freachable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/027bf8b4de0176a526b7e5adaa63e65a87c37951/src%2Flibrustc%2Fmiddle%2Freachable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Freachable.rs?ref=027bf8b4de0176a526b7e5adaa63e65a87c37951", "patch": "@@ -116,10 +116,10 @@ impl<'a, 'tcx> Visitor<'tcx> for ReachableContext<'a, 'tcx> {\n             Some(Def::Local(node_id)) | Some(Def::Upvar(node_id, ..)) => {\n                 self.reachable_symbols.insert(node_id);\n             }\n-            Some(Def::Err) => {}  // #56202: calling `def.def_id()` would be an error\n             Some(def) => {\n-                let def_id = def.def_id();\n-                if let Some(node_id) = self.tcx.hir.as_local_node_id(def_id) {\n+                if let Some((node_id, def_id)) = def.opt_def_id().and_then(|def_id| {\n+                    self.tcx.hir.as_local_node_id(def_id).map(|node_id| (node_id, def_id))\n+                }) {\n                     if self.def_id_represents_local_inlined_item(def_id) {\n                         self.worklist.push(node_id);\n                     } else {"}]}