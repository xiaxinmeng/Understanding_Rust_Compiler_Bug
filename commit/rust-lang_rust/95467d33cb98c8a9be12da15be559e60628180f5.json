{"sha": "95467d33cb98c8a9be12da15be559e60628180f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1NDY3ZDMzY2I5OGM4YTliZTEyZGExNWJlNTU5ZTYwNjI4MTgwZjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-29T03:56:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-04-29T03:56:09Z"}, "message": "Auto merge of #41577 - Keruspe:master, r=alexcrichton\n\nrustbuild improvements\n\nProperly hook up cargo and rls in the build phase, and install them, when extended build is enabled.", "tree": {"sha": "7f26940956ae3d491e87b1333bfd7ce60347cd77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7f26940956ae3d491e87b1333bfd7ce60347cd77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95467d33cb98c8a9be12da15be559e60628180f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95467d33cb98c8a9be12da15be559e60628180f5", "html_url": "https://github.com/rust-lang/rust/commit/95467d33cb98c8a9be12da15be559e60628180f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95467d33cb98c8a9be12da15be559e60628180f5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "810ed98d08158574e98b504c0955fce6c6a72ad9", "url": "https://api.github.com/repos/rust-lang/rust/commits/810ed98d08158574e98b504c0955fce6c6a72ad9", "html_url": "https://github.com/rust-lang/rust/commit/810ed98d08158574e98b504c0955fce6c6a72ad9"}, {"sha": "a8c6ba9c6eff834721e0c775de975b8741431fd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8c6ba9c6eff834721e0c775de975b8741431fd0", "html_url": "https://github.com/rust-lang/rust/commit/a8c6ba9c6eff834721e0c775de975b8741431fd0"}], "stats": {"total": 32, "additions": 24, "deletions": 8}, "files": [{"sha": "c805522fbf588d06b4676bb8bd0647fa2c1aea54", "filename": "src/bootstrap/install.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/95467d33cb98c8a9be12da15be559e60628180f5/src%2Fbootstrap%2Finstall.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95467d33cb98c8a9be12da15be559e60628180f5/src%2Fbootstrap%2Finstall.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Finstall.rs?ref=95467d33cb98c8a9be12da15be559e60628180f5", "patch": "@@ -46,24 +46,32 @@ pub fn install(build: &Build, stage: u32, host: &str) {\n     let empty_dir = build.out.join(\"tmp/empty_dir\");\n     t!(fs::create_dir_all(&empty_dir));\n     if build.config.docs {\n-        install_sh(&build, \"docs\", \"rust-docs\", stage, host, &prefix,\n-                   &docdir, &libdir, &mandir, &empty_dir);\n+        install_sh(&build, \"docs\", \"rust-docs\", &build.rust_package_vers(),\n+                   stage, host, &prefix, &docdir, &libdir, &mandir, &empty_dir);\n     }\n \n     for target in build.config.target.iter() {\n-        install_sh(&build, \"std\", \"rust-std\", stage, target, &prefix,\n-                   &docdir, &libdir, &mandir, &empty_dir);\n+        install_sh(&build, \"std\", \"rust-std\", &build.rust_package_vers(),\n+                   stage, target, &prefix, &docdir, &libdir, &mandir, &empty_dir);\n     }\n \n-    install_sh(&build, \"rustc\", \"rustc\", stage, host, &prefix,\n-               &docdir, &libdir, &mandir, &empty_dir);\n+    if build.config.extended {\n+        install_sh(&build, \"cargo\", \"cargo\", &build.cargo_package_vers(),\n+                   stage, host, &prefix, &docdir, &libdir, &mandir, &empty_dir);\n+        install_sh(&build, \"rls\", \"rls\", &build.rls_package_vers(),\n+                   stage, host, &prefix, &docdir, &libdir, &mandir, &empty_dir);\n+    }\n+\n+    install_sh(&build, \"rustc\", \"rustc\", &build.rust_package_vers(),\n+               stage, host, &prefix, &docdir, &libdir, &mandir, &empty_dir);\n+\n     t!(fs::remove_dir_all(&empty_dir));\n }\n \n-fn install_sh(build: &Build, package: &str, name: &str, stage: u32, host: &str,\n+fn install_sh(build: &Build, package: &str, name: &str, version: &str, stage: u32, host: &str,\n               prefix: &Path, docdir: &Path, libdir: &Path, mandir: &Path, empty_dir: &Path) {\n     println!(\"Install {} stage{} ({})\", package, stage, host);\n-    let package_name = format!(\"{}-{}-{}\", name, build.rust_package_vers(), host);\n+    let package_name = format!(\"{}-{}-{}\", name, version, host);\n \n     let mut cmd = Command::new(\"sh\");\n     cmd.current_dir(empty_dir)"}, {"sha": "2852421ad287f425c9e9603a7278f6e3b5507c6f", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/95467d33cb98c8a9be12da15be559e60628180f5/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95467d33cb98c8a9be12da15be559e60628180f5/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=95467d33cb98c8a9be12da15be559e60628180f5", "patch": "@@ -1054,6 +1054,11 @@ impl Build {\n         self.package_vers(&self.release_num(\"cargo\"))\n     }\n \n+    /// Returns the value of `package_vers` above for rls\n+    fn rls_package_vers(&self) -> String {\n+        self.package_vers(&self.release_num(\"rls\"))\n+    }\n+\n     /// Returns the `version` string associated with this compiler for Rust\n     /// itself.\n     ///"}, {"sha": "c15e889394f07dca5040b159dfb37db24b208cbe", "filename": "src/bootstrap/step.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/95467d33cb98c8a9be12da15be559e60628180f5/src%2Fbootstrap%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95467d33cb98c8a9be12da15be559e60628180f5/src%2Fbootstrap%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fstep.rs?ref=95467d33cb98c8a9be12da15be559e60628180f5", "patch": "@@ -575,6 +575,8 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n          .dep(|s| s.name(\"libstd-tool\"))\n          .run(move |s| compile::tool(build, s.stage, s.target, \"remote-test-client\"));\n     rules.build(\"tool-cargo\", \"cargo\")\n+         .host(true)\n+         .default(build.config.extended)\n          .dep(|s| s.name(\"maybe-clean-tools\"))\n          .dep(|s| s.name(\"libstd-tool\"))\n          .dep(|s| s.stage(0).host(s.target).name(\"openssl\"))\n@@ -588,6 +590,7 @@ pub fn build_rules<'a>(build: &'a Build) -> Rules {\n          .run(move |s| compile::tool(build, s.stage, s.target, \"cargo\"));\n     rules.build(\"tool-rls\", \"rls\")\n          .host(true)\n+         .default(build.config.extended)\n          .dep(|s| s.name(\"librustc-tool\"))\n          .dep(|s| s.stage(0).host(s.target).name(\"openssl\"))\n          .dep(move |s| {"}]}