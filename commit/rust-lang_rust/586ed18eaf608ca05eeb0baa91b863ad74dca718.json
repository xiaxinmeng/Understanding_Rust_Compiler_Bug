{"sha": "586ed18eaf608ca05eeb0baa91b863ad74dca718", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NmVkMThlYWY2MDhjYTA1ZWViMGJhYTkxYjg2M2FkNzRkY2E3MTg=", "commit": {"author": {"name": "Aaron Hill", "email": "aa1ronham@gmail.com", "date": "2021-02-25T21:06:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-02-25T21:06:24Z"}, "message": "Rollup merge of #82502 - jyn514:tidy, r=petrochenkov\n\nOnly look for HTML `tidy` when running rustdoc tests\n\nThis avoids printing lots of unnecessary errors, as well as making the\ntest suite slightly faster. This doesn't fix the windows bug tracked by https://github.com/rust-lang/rust/issues/82501, though.\n\nr? `@petrochenkov`", "tree": {"sha": "ae3affd5aae048dff27c02b8564d550aae6c3bdd", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ae3affd5aae048dff27c02b8564d550aae6c3bdd"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/586ed18eaf608ca05eeb0baa91b863ad74dca718", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgOBFQCRBK7hj4Ov3rIwAAdHIIAA8SN/TxvkpbdfIVnzVr7j16\nmdV94+VX5aOi3rrtbade7LJ+4fXeWxXxhnXdJjuCOvbhNe6TTyjRzUgJfWEGQCLL\ntkxZhp9R2orO+uEP7ZwSXbxVycrdRhalQPg3J+bBchMSx9WecGalRir6Em1P7WAn\nbJx1+yjKKGg5jJM5pkeeHlzcdIJs9uozD1SAAdi3LJj2NmF/JaoEPc6VPu+h6TnR\nsDJMBdCzswGR0uYqvgySg2ixb/dgyvU8cP/VW9Hpy1QF43ZwkUDu8WArWA547yJ1\nJqloFKZK+pXTOMgj56IYl0QTcT5KTrD+jpN87kHBv7QsiukmAfLMoHvEbzF2eHA=\n=lF2S\n-----END PGP SIGNATURE-----\n", "payload": "tree ae3affd5aae048dff27c02b8564d550aae6c3bdd\nparent 8250a2510dbbd826c0a79fbb8eca014a339ed3b9\nparent 97ab01219ca224fd5410334e519df787031b8860\nauthor Aaron Hill <aa1ronham@gmail.com> 1614287184 -0500\ncommitter GitHub <noreply@github.com> 1614287184 -0500\n\nRollup merge of #82502 - jyn514:tidy, r=petrochenkov\n\nOnly look for HTML `tidy` when running rustdoc tests\n\nThis avoids printing lots of unnecessary errors, as well as making the\ntest suite slightly faster. This doesn't fix the windows bug tracked by https://github.com/rust-lang/rust/issues/82501, though.\n\nr? `@petrochenkov`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/586ed18eaf608ca05eeb0baa91b863ad74dca718", "html_url": "https://github.com/rust-lang/rust/commit/586ed18eaf608ca05eeb0baa91b863ad74dca718", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/586ed18eaf608ca05eeb0baa91b863ad74dca718/comments", "author": {"login": "Aaron1011", "id": 1408859, "node_id": "MDQ6VXNlcjE0MDg4NTk=", "avatar_url": "https://avatars.githubusercontent.com/u/1408859?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Aaron1011", "html_url": "https://github.com/Aaron1011", "followers_url": "https://api.github.com/users/Aaron1011/followers", "following_url": "https://api.github.com/users/Aaron1011/following{/other_user}", "gists_url": "https://api.github.com/users/Aaron1011/gists{/gist_id}", "starred_url": "https://api.github.com/users/Aaron1011/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Aaron1011/subscriptions", "organizations_url": "https://api.github.com/users/Aaron1011/orgs", "repos_url": "https://api.github.com/users/Aaron1011/repos", "events_url": "https://api.github.com/users/Aaron1011/events{/privacy}", "received_events_url": "https://api.github.com/users/Aaron1011/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8250a2510dbbd826c0a79fbb8eca014a339ed3b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/8250a2510dbbd826c0a79fbb8eca014a339ed3b9", "html_url": "https://github.com/rust-lang/rust/commit/8250a2510dbbd826c0a79fbb8eca014a339ed3b9"}, {"sha": "97ab01219ca224fd5410334e519df787031b8860", "url": "https://api.github.com/repos/rust-lang/rust/commits/97ab01219ca224fd5410334e519df787031b8860", "html_url": "https://github.com/rust-lang/rust/commit/97ab01219ca224fd5410334e519df787031b8860"}], "stats": {"total": 18, "additions": 12, "deletions": 6}, "files": [{"sha": "b32a6f08638cc028ee9ddaead485e0fb0ba240e1", "filename": "src/tools/compiletest/src/main.rs", "status": "modified", "additions": 12, "deletions": 6, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/586ed18eaf608ca05eeb0baa91b863ad74dca718/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/586ed18eaf608ca05eeb0baa91b863ad74dca718/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fmain.rs?ref=586ed18eaf608ca05eeb0baa91b863ad74dca718", "patch": "@@ -195,11 +195,17 @@ pub fn parse_config(args: Vec<String>) -> Config {\n \n     let src_base = opt_path(matches, \"src-base\");\n     let run_ignored = matches.opt_present(\"ignored\");\n-    let has_tidy = Command::new(\"tidy\")\n-        .arg(\"--version\")\n-        .stdout(Stdio::null())\n-        .status()\n-        .map_or(false, |status| status.success());\n+    let mode = matches.opt_str(\"mode\").unwrap().parse().expect(\"invalid mode\");\n+    let has_tidy = if mode == Mode::Rustdoc {\n+        Command::new(\"tidy\")\n+            .arg(\"--version\")\n+            .stdout(Stdio::null())\n+            .status()\n+            .map_or(false, |status| status.success())\n+    } else {\n+        // Avoid spawning an external command when we know tidy won't be used.\n+        false\n+    };\n     Config {\n         bless: matches.opt_present(\"bless\"),\n         compile_lib_path: make_absolute(opt_path(matches, \"compile-lib-path\")),\n@@ -218,7 +224,7 @@ pub fn parse_config(args: Vec<String>) -> Config {\n         src_base,\n         build_base: opt_path(matches, \"build-base\"),\n         stage_id: matches.opt_str(\"stage-id\").unwrap(),\n-        mode: matches.opt_str(\"mode\").unwrap().parse().expect(\"invalid mode\"),\n+        mode,\n         suite: matches.opt_str(\"suite\").unwrap(),\n         debugger: None,\n         run_ignored,"}]}