{"sha": "8dad1b92284d7c79872ac36e1fb3eece5756c86e", "node_id": "C_kwDOAAsO6NoAKDhkYWQxYjkyMjg0ZDdjNzk4NzJhYzM2ZTFmYjNlZWNlNTc1NmM4NmU", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-11-05T13:50:10Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-11-05T13:50:10Z"}, "message": "Don't check items for macro calls if they have no attributes", "tree": {"sha": "cb6a813518ad3ded4dc378d849920438d6233a77", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb6a813518ad3ded4dc378d849920438d6233a77"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8dad1b92284d7c79872ac36e1fb3eece5756c86e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8dad1b92284d7c79872ac36e1fb3eece5756c86e", "html_url": "https://github.com/rust-lang/rust/commit/8dad1b92284d7c79872ac36e1fb3eece5756c86e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8dad1b92284d7c79872ac36e1fb3eece5756c86e/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "af4d244462c17540ce91af6d42ccbd1b50ad756d", "url": "https://api.github.com/repos/rust-lang/rust/commits/af4d244462c17540ce91af6d42ccbd1b50ad756d", "html_url": "https://github.com/rust-lang/rust/commit/af4d244462c17540ce91af6d42ccbd1b50ad756d"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "302d666318386294996130a9dc247a952b682fc6", "filename": "crates/hir/src/semantics.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8dad1b92284d7c79872ac36e1fb3eece5756c86e/crates%2Fhir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8dad1b92284d7c79872ac36e1fb3eece5756c86e/crates%2Fhir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fsemantics.rs?ref=8dad1b92284d7c79872ac36e1fb3eece5756c86e", "patch": "@@ -17,7 +17,7 @@ use rustc_hash::{FxHashMap, FxHashSet};\n use smallvec::{smallvec, SmallVec};\n use syntax::{\n     algo::skip_trivia_token,\n-    ast::{self, HasGenericParams, HasLoopBody},\n+    ast::{self, HasAttrs, HasGenericParams, HasLoopBody},\n     match_ast, AstNode, Direction, SyntaxNode, SyntaxNodePtr, SyntaxToken, TextRange, TextSize,\n };\n \n@@ -588,7 +588,10 @@ impl<'db> SemanticsImpl<'db> {\n                 // are we inside an attribute macro call\n                 let containing_attribute_macro_call = self.with_ctx(|ctx| {\n                     token.value.ancestors().filter_map(ast::Item::cast).find_map(|item| {\n-                        // investigate this, seems to be VERY(250ms) expensive in rust-analyzer/src/config.rs?\n+                        if item.attrs().next().is_none() {\n+                            // Don't force populate the dyn cache for items that don't have an attribute anyways\n+                            return None;\n+                        }\n                         Some((ctx.item_to_macro_call(token.with_value(item.clone()))?, item))\n                     })\n                 });"}]}