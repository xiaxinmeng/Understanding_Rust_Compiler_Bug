{"sha": "27b280e1b5370640fc0f181a52eaae6dc379d353", "node_id": "C_kwDOAAsO6NoAKDI3YjI4MGUxYjUzNzA2NDBmYzBmMTgxYTUyZWFhZTZkYzM3OWQzNTM", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-09-27T13:42:32Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2022-09-27T13:47:32Z"}, "message": "Fix ICE in const_trait check code\n\nThis fixes #102156.", "tree": {"sha": "08999691b71330980e534a4c066faa0ef212be12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/08999691b71330980e534a4c066faa0ef212be12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27b280e1b5370640fc0f181a52eaae6dc379d353", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27b280e1b5370640fc0f181a52eaae6dc379d353", "html_url": "https://github.com/rust-lang/rust/commit/27b280e1b5370640fc0f181a52eaae6dc379d353", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27b280e1b5370640fc0f181a52eaae6dc379d353/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "57ee5cf5a93923dae9c98bffb11545fc3a31368d", "url": "https://api.github.com/repos/rust-lang/rust/commits/57ee5cf5a93923dae9c98bffb11545fc3a31368d", "html_url": "https://github.com/rust-lang/rust/commit/57ee5cf5a93923dae9c98bffb11545fc3a31368d"}], "stats": {"total": 36, "additions": 35, "deletions": 1}, "files": [{"sha": "0af538454f068d13a924257da5a4ec3bb77e2057", "filename": "compiler/rustc_passes/src/check_const.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27b280e1b5370640fc0f181a52eaae6dc379d353/compiler%2Frustc_passes%2Fsrc%2Fcheck_const.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27b280e1b5370640fc0f181a52eaae6dc379d353/compiler%2Frustc_passes%2Fsrc%2Fcheck_const.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_passes%2Fsrc%2Fcheck_const.rs?ref=27b280e1b5370640fc0f181a52eaae6dc379d353", "patch": "@@ -199,7 +199,7 @@ impl<'tcx> Visitor<'tcx> for CheckConstVisitor<'tcx> {\n             ..\n         }) = item.kind\n         {\n-            let def_id = trait_ref.trait_def_id().unwrap();\n+            let Some(def_id) = trait_ref.trait_def_id() else { return; };\n             let source_map = tcx.sess.source_map();\n             if !tcx.has_attr(def_id, sym::const_trait) {\n                 tcx.sess"}, {"sha": "fe4e91081301304559a389d49f2b219b7e1f29d9", "filename": "src/test/ui/rfc-2632-const-trait-impl/issue-102156.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/27b280e1b5370640fc0f181a52eaae6dc379d353/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-102156.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27b280e1b5370640fc0f181a52eaae6dc379d353/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-102156.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-102156.rs?ref=27b280e1b5370640fc0f181a52eaae6dc379d353", "patch": "@@ -0,0 +1,15 @@\n+#![feature(allocator_api)]\n+#![feature(const_trait_impl)]\n+\n+use core::convert::{From, TryFrom};\n+//~^ ERROR\n+//~| ERROR\n+\n+use std::pin::Pin;\n+use std::alloc::Allocator;\n+impl<T: ?Sized, A: Allocator> const From<Box<T, A>> for Pin<Box<T, A>>\n+where\n+    A: 'static,\n+{}\n+\n+pub fn main() {}"}, {"sha": "8bf00eaff1fb92be600685c32095f8950453bb42", "filename": "src/test/ui/rfc-2632-const-trait-impl/issue-102156.stderr", "status": "added", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/27b280e1b5370640fc0f181a52eaae6dc379d353/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-102156.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/27b280e1b5370640fc0f181a52eaae6dc379d353/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-102156.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2632-const-trait-impl%2Fissue-102156.stderr?ref=27b280e1b5370640fc0f181a52eaae6dc379d353", "patch": "@@ -0,0 +1,19 @@\n+error[E0433]: failed to resolve: maybe a missing crate `core`?\n+  --> $DIR/issue-102156.rs:4:5\n+   |\n+LL | use core::convert::{From, TryFrom};\n+   |     ^^^^ maybe a missing crate `core`?\n+   |\n+   = help: consider adding `extern crate core` to use the `core` crate\n+\n+error[E0433]: failed to resolve: maybe a missing crate `core`?\n+  --> $DIR/issue-102156.rs:4:5\n+   |\n+LL | use core::convert::{From, TryFrom};\n+   |     ^^^^ maybe a missing crate `core`?\n+   |\n+   = help: consider adding `extern crate core` to use the `core` crate\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0433`."}]}