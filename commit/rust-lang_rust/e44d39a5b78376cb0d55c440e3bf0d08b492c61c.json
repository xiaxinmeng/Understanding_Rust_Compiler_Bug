{"sha": "e44d39a5b78376cb0d55c440e3bf0d08b492c61c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NGQzOWE1Yjc4Mzc2Y2IwZDU1YzQ0MGUzYmYwZDA4YjQ5MmM2MWM=", "commit": {"author": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-08-03T19:32:36Z"}, "committer": {"name": "The8472", "email": "git@infinite-source.de", "date": "2021-08-03T19:32:36Z"}, "message": "#[inline] slice::advance_by", "tree": {"sha": "ab084cd3b607ff540574712c3518ab1c5219a213", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ab084cd3b607ff540574712c3518ab1c5219a213"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e44d39a5b78376cb0d55c440e3bf0d08b492c61c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e44d39a5b78376cb0d55c440e3bf0d08b492c61c", "html_url": "https://github.com/rust-lang/rust/commit/e44d39a5b78376cb0d55c440e3bf0d08b492c61c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e44d39a5b78376cb0d55c440e3bf0d08b492c61c/comments", "author": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "committer": {"login": "the8472", "id": 1065730, "node_id": "MDQ6VXNlcjEwNjU3MzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1065730?v=4", "gravatar_id": "", "url": "https://api.github.com/users/the8472", "html_url": "https://github.com/the8472", "followers_url": "https://api.github.com/users/the8472/followers", "following_url": "https://api.github.com/users/the8472/following{/other_user}", "gists_url": "https://api.github.com/users/the8472/gists{/gist_id}", "starred_url": "https://api.github.com/users/the8472/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/the8472/subscriptions", "organizations_url": "https://api.github.com/users/the8472/orgs", "repos_url": "https://api.github.com/users/the8472/repos", "events_url": "https://api.github.com/users/the8472/events{/privacy}", "received_events_url": "https://api.github.com/users/the8472/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5fd37f00f1ec5e4a4b0d87f5af0b93f36aab271", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5fd37f00f1ec5e4a4b0d87f5af0b93f36aab271", "html_url": "https://github.com/rust-lang/rust/commit/d5fd37f00f1ec5e4a4b0d87f5af0b93f36aab271"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "cf15756868e655fb021d012a9e75df7ab4e63ddc", "filename": "library/core/src/slice/iter/macros.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/e44d39a5b78376cb0d55c440e3bf0d08b492c61c/library%2Fcore%2Fsrc%2Fslice%2Fiter%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e44d39a5b78376cb0d55c440e3bf0d08b492c61c/library%2Fcore%2Fsrc%2Fslice%2Fiter%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fiter%2Fmacros.rs?ref=e44d39a5b78376cb0d55c440e3bf0d08b492c61c", "patch": "@@ -185,8 +185,9 @@ macro_rules! iterator {\n                 }\n             }\n \n+            #[inline]\n             fn advance_by(&mut self, n: usize) -> Result<(), usize> {\n-                let advance = cmp::min(n, len!(self));\n+                let advance = cmp::min(len!(self), n);\n                 // SAFETY: By construction, `advance` does not exceed `self.len()`.\n                 unsafe { self.post_inc_start(advance as isize) };\n                 if advance == n { Ok(()) } else { Err(advance) }\n@@ -381,7 +382,7 @@ macro_rules! iterator {\n \n             #[inline]\n             fn advance_back_by(&mut self, n: usize) -> Result<(), usize> {\n-                let advance = cmp::min(n, len!(self));\n+                let advance = cmp::min(len!(self), n);\n                 // SAFETY: By construction, `advance` does not exceed `self.len()`.\n                 unsafe { self.pre_dec_end(advance as isize) };\n                 if advance == n { Ok(()) } else { Err(advance) }"}]}