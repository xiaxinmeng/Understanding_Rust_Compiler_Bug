{"sha": "7580da306e338089b1cffedb09a71cb11debddf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ODBkYTMwNmUzMzgwODliMWNmZmVkYjA5YTcxY2IxMWRlYmRkZjU=", "commit": {"author": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2015-08-21T18:49:59Z"}, "committer": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2015-08-22T12:34:39Z"}, "message": "matches: special message for this case\n\nmatch &e { &Pat1 => {}, &Pat2 => {}, ... }\n\n(inspired by dogfood fixes)", "tree": {"sha": "9dba8e0a1fa4f9f055f57c0f187a4935d3780d28", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9dba8e0a1fa4f9f055f57c0f187a4935d3780d28"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7580da306e338089b1cffedb09a71cb11debddf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7580da306e338089b1cffedb09a71cb11debddf5", "html_url": "https://github.com/rust-lang/rust/commit/7580da306e338089b1cffedb09a71cb11debddf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7580da306e338089b1cffedb09a71cb11debddf5/comments", "author": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f1a2374938d77e3ecb713d57241d8209578ed0d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f1a2374938d77e3ecb713d57241d8209578ed0d", "html_url": "https://github.com/rust-lang/rust/commit/8f1a2374938d77e3ecb713d57241d8209578ed0d"}], "stats": {"total": 33, "additions": 20, "deletions": 13}, "files": [{"sha": "002da07f50b7180b38eb6e4b815c6c98b5f59604", "filename": "src/matches.rs", "status": "modified", "additions": 14, "deletions": 13, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/7580da306e338089b1cffedb09a71cb11debddf5/src%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7580da306e338089b1cffedb09a71cb11debddf5/src%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmatches.rs?ref=7580da306e338089b1cffedb09a71cb11debddf5", "patch": "@@ -55,9 +55,15 @@ impl LintPass for MatchPass {\n \n             // check preconditions for MATCH_REF_PATS\n             if has_only_ref_pats(arms) {\n-                span_lint(cx, MATCH_REF_PATS, expr.span, &format!(\n-                    \"instead of prefixing all patterns with `&`, you can dereference the \\\n-                     expression to match: `match *{} {{ ...`\", snippet(cx, ex.span, \"..\")));\n+                if let ExprAddrOf(Mutability::MutImmutable, ref inner) = ex.node {\n+                    span_lint(cx, MATCH_REF_PATS, expr.span, &format!(\n+                        \"you don't need to add `&` to both the expression to match \\\n+                         and the patterns: use `match {} {{ ...`\", snippet(cx, inner.span, \"..\")));\n+                } else {\n+                    span_lint(cx, MATCH_REF_PATS, expr.span, &format!(\n+                        \"instead of prefixing all patterns with `&`, you can dereference the \\\n+                         expression to match: `match *{} {{ ...`\", snippet(cx, ex.span, \"..\")));\n+                }\n             }\n         }\n     }\n@@ -72,14 +78,9 @@ fn is_unit_expr(expr: &Expr) -> bool {\n }\n \n fn has_only_ref_pats(arms: &[Arm]) -> bool {\n-    for arm in arms {\n-        for pat in &arm.pats {\n-            match pat.node {\n-                PatRegion(..) => (),  // &-patterns\n-                PatWild(..) => (),    // an \"anything\" wildcard is also fine\n-                _ => return false,\n-            }\n-        }\n-    }\n-    true\n+    arms.iter().flat_map(|a| &a.pats).all(|p| match p.node {\n+        PatRegion(..) => true,  // &-patterns\n+        PatWild(..) => true,    // an \"anything\" wildcard is also fine\n+        _ => false,\n+    })\n }"}, {"sha": "3cc540992c99c5629561f4197fc072355ddb52e3", "filename": "tests/compile-fail/matches.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7580da306e338089b1cffedb09a71cb11debddf5/tests%2Fcompile-fail%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7580da306e338089b1cffedb09a71cb11debddf5/tests%2Fcompile-fail%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fmatches.rs?ref=7580da306e338089b1cffedb09a71cb11debddf5", "patch": "@@ -53,6 +53,12 @@ fn ref_pats() {\n         &(v, 1) => println!(\"{}\", v),\n         _ => println!(\"none\"),\n     }\n+    // special case: using & both in expr and pats\n+    let w = Some(0);\n+    match &w {  //~ERROR you don't need to add `&` to both\n+        &Some(v) => println!(\"{:?}\", v),\n+        &None => println!(\"none\"),\n+    }\n }\n \n fn main() {"}]}