{"sha": "b46fd3863203d662531c735389b4008d8a715561", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0NmZkMzg2MzIwM2Q2NjI1MzFjNzM1Mzg5YjQwMDhkOGE3MTU1NjE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-31T22:16:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-31T22:16:16Z"}, "message": "sort imports", "tree": {"sha": "88fc46aece632c2bada308105cf16ed13eef1340", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88fc46aece632c2bada308105cf16ed13eef1340"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b46fd3863203d662531c735389b4008d8a715561", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b46fd3863203d662531c735389b4008d8a715561", "html_url": "https://github.com/rust-lang/rust/commit/b46fd3863203d662531c735389b4008d8a715561", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b46fd3863203d662531c735389b4008d8a715561/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f77fc158fc6502cede48c94bbabb040c77b38c08", "url": "https://api.github.com/repos/rust-lang/rust/commits/f77fc158fc6502cede48c94bbabb040c77b38c08", "html_url": "https://github.com/rust-lang/rust/commit/f77fc158fc6502cede48c94bbabb040c77b38c08"}], "stats": {"total": 15, "additions": 8, "deletions": 7}, "files": [{"sha": "4b3fbc9081b3cd9a0329540cb6c58d32a8bc07c3", "filename": "crates/ra_flycheck/src/lib.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b46fd3863203d662531c735389b4008d8a715561/crates%2Fra_flycheck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b46fd3863203d662531c735389b4008d8a715561/crates%2Fra_flycheck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_flycheck%2Fsrc%2Flib.rs?ref=b46fd3863203d662531c735389b4008d8a715561", "patch": "@@ -1,12 +1,8 @@\n //! cargo_check provides the functionality needed to run `cargo check` or\n //! another compatible command (f.x. clippy) in a background thread and provide\n //! LSP diagnostics based on the output of the command.\n-use cargo_metadata::Message;\n-use crossbeam_channel::{never, select, unbounded, Receiver, RecvError, Sender};\n-use lsp_types::{\n-    CodeAction, CodeActionOrCommand, Diagnostic, Url, WorkDoneProgress, WorkDoneProgressBegin,\n-    WorkDoneProgressEnd, WorkDoneProgressReport,\n-};\n+mod conv;\n+\n use std::{\n     error, fmt,\n     io::{BufRead, BufReader},\n@@ -15,7 +11,12 @@ use std::{\n     time::Instant,\n };\n \n-mod conv;\n+use cargo_metadata::Message;\n+use crossbeam_channel::{never, select, unbounded, Receiver, RecvError, Sender};\n+use lsp_types::{\n+    CodeAction, CodeActionOrCommand, Diagnostic, Url, WorkDoneProgress, WorkDoneProgressBegin,\n+    WorkDoneProgressEnd, WorkDoneProgressReport,\n+};\n \n use crate::conv::{map_rust_diagnostic_to_lsp, MappedRustDiagnostic};\n "}]}