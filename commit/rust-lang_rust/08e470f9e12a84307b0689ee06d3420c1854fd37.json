{"sha": "08e470f9e12a84307b0689ee06d3420c1854fd37", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA4ZTQ3MGY5ZTEyYTg0MzA3YjA2ODllZTA2ZDM0MjBjMTg1NGZkMzc=", "commit": {"author": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2016-08-13T06:45:39Z"}, "committer": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2016-08-13T06:52:35Z"}, "message": "compiletest: Remove dead code.", "tree": {"sha": "07475ad3062e378d81236fef39be5f32e2ed70ea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07475ad3062e378d81236fef39be5f32e2ed70ea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/08e470f9e12a84307b0689ee06d3420c1854fd37", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/08e470f9e12a84307b0689ee06d3420c1854fd37", "html_url": "https://github.com/rust-lang/rust/commit/08e470f9e12a84307b0689ee06d3420c1854fd37", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/08e470f9e12a84307b0689ee06d3420c1854fd37/comments", "author": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d3c3de8abe63f738113874267dad3b92a1965ecd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d3c3de8abe63f738113874267dad3b92a1965ecd", "html_url": "https://github.com/rust-lang/rust/commit/d3c3de8abe63f738113874267dad3b92a1965ecd"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "e9ccc029bc3cf4ee0efcfbef5d64ab94882edc54", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/08e470f9e12a84307b0689ee06d3420c1854fd37/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/08e470f9e12a84307b0689ee06d3420c1854fd37/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=08e470f9e12a84307b0689ee06d3420c1854fd37", "patch": "@@ -137,10 +137,6 @@ impl<'test> TestCx<'test> {\n \n         self.check_correct_failure_status(&proc_res);\n \n-        if proc_res.status.success() {\n-            self.fatal(\"process did not return an error status\");\n-        }\n-\n         let output_to_check = self.get_output(&proc_res);\n         let expected_errors = errors::load_errors(&self.testpaths.file, self.revision);\n         if !expected_errors.is_empty() {"}]}