{"sha": "8f479e362fbfcb31e83396ef850ab5219a32821e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmNDc5ZTM2MmZiZmNiMzFlODMzOTZlZjg1MGFiNTIxOWEzMjgyMWU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-30T11:11:37Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-03-30T11:24:55Z"}, "message": "fix aliasing in remove()\n\nalso add smoke test to detect relocation even in rustc runs", "tree": {"sha": "554fe3c0bb7f31547838633cc47b8b80b8498084", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/554fe3c0bb7f31547838633cc47b8b80b8498084"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f479e362fbfcb31e83396ef850ab5219a32821e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f479e362fbfcb31e83396ef850ab5219a32821e", "html_url": "https://github.com/rust-lang/rust/commit/8f479e362fbfcb31e83396ef850ab5219a32821e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f479e362fbfcb31e83396ef850ab5219a32821e/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4eacf45c9cf6bd110dc019082c2a4a8fd9668d66", "url": "https://api.github.com/repos/rust-lang/rust/commits/4eacf45c9cf6bd110dc019082c2a4a8fd9668d66", "html_url": "https://github.com/rust-lang/rust/commit/4eacf45c9cf6bd110dc019082c2a4a8fd9668d66"}], "stats": {"total": 13, "additions": 8, "deletions": 5}, "files": [{"sha": "a90bc58cbfd5d10ba1f8cce6edcf48953753c6a6", "filename": "src/liballoc/tests/vec.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/8f479e362fbfcb31e83396ef850ab5219a32821e/src%2Fliballoc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f479e362fbfcb31e83396ef850ab5219a32821e/src%2Fliballoc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Ftests%2Fvec.rs?ref=8f479e362fbfcb31e83396ef850ab5219a32821e", "patch": "@@ -1366,7 +1366,8 @@ fn test_stable_pointers() {\n     v.push(13);\n \n     // Laundering the lifetime -- we take care that `v` does not reallocate, so that's okay.\n-    let v0 = unsafe { &*(&v[0] as *const _) };\n+    let v0 = &mut v[0];\n+    let v0 = unsafe { &mut *(v0 as *mut _) };\n     // Now do a bunch of things and occasionally use `v0` again to assert it is still valid.\n \n     // Pushing/inserting and popping/removing\n@@ -1420,6 +1421,10 @@ fn test_stable_pointers() {\n     assert_eq!(*v0, 13);\n     next_then_drop(v.splice(5..6, vec![1; 10].into_iter().filter(|_| true))); // lower bound not exact\n     assert_eq!(*v0, 13);\n+\n+    // Smoke test that would fire even outside Miri if an actual relocation happened.\n+    *v0 -= 13;\n+    assert_eq!(v[0], 0);\n }\n \n // https://github.com/rust-lang/rust/pull/49496 introduced specialization based on:"}, {"sha": "dc2a246f817761d54521fc41d11ae62b5f440939", "filename": "src/liballoc/vec.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8f479e362fbfcb31e83396ef850ab5219a32821e/src%2Fliballoc%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f479e362fbfcb31e83396ef850ab5219a32821e/src%2Fliballoc%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fvec.rs?ref=8f479e362fbfcb31e83396ef850ab5219a32821e", "patch": "@@ -1200,7 +1200,7 @@ impl<T> Vec<T> {\n         } else {\n             unsafe {\n                 self.len -= 1;\n-                Some(ptr::read(self.get_unchecked(self.len())))\n+                Some(ptr::read(self.as_ptr().add(self.len())))\n             }\n         }\n     }\n@@ -2020,9 +2020,7 @@ where\n                 let (lower, _) = iterator.size_hint();\n                 let mut vector = Vec::with_capacity(lower.saturating_add(1));\n                 unsafe {\n-                    // `vector` is new, cannot have aliases, so us getting exclusive references\n-                    // here is okay.\n-                    ptr::write(vector.get_unchecked_mut(0), element);\n+                    ptr::write(vector.as_mut_ptr(), element);\n                     vector.set_len(1);\n                 }\n                 vector"}]}