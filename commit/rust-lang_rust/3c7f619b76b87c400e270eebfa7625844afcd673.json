{"sha": "3c7f619b76b87c400e270eebfa7625844afcd673", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjN2Y2MTliNzZiODdjNDAwZTI3MGVlYmZhNzYyNTg0NGFmY2Q2NzM=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-06-18T17:40:38Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-07-09T07:06:28Z"}, "message": "str: use more helpful assertion failure messages", "tree": {"sha": "621e5f082dd82d9252a67a5fadcab3425eccd0a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/621e5f082dd82d9252a67a5fadcab3425eccd0a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c7f619b76b87c400e270eebfa7625844afcd673", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c7f619b76b87c400e270eebfa7625844afcd673", "html_url": "https://github.com/rust-lang/rust/commit/3c7f619b76b87c400e270eebfa7625844afcd673", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c7f619b76b87c400e270eebfa7625844afcd673/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c2dd553bed572368953801dd1d339013f58b53d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c2dd553bed572368953801dd1d339013f58b53d6", "html_url": "https://github.com/rust-lang/rust/commit/c2dd553bed572368953801dd1d339013f58b53d6"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "f94d5a5e4b5e3b6fe31f02a687189afdfd3d2b92", "filename": "src/libcore/str.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3c7f619b76b87c400e270eebfa7625844afcd673/src%2Flibcore%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c7f619b76b87c400e270eebfa7625844afcd673/src%2Flibcore%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr.rs?ref=3c7f619b76b87c400e270eebfa7625844afcd673", "patch": "@@ -1764,7 +1764,9 @@ impl<'a> StrSlice<'a> for &'a str {\n \n     #[inline]\n     fn slice(&self, begin: uint, end: uint) -> &'a str {\n-        assert!(self.is_char_boundary(begin) && self.is_char_boundary(end));\n+        assert!(self.is_char_boundary(begin) && self.is_char_boundary(end),\n+                \"index {} and/or {} in `{}` do not lie on character boundary\", begin,\n+                end, *self);\n         unsafe { raw::slice_bytes(*self, begin, end) }\n     }\n \n@@ -1775,7 +1777,8 @@ impl<'a> StrSlice<'a> for &'a str {\n \n     #[inline]\n     fn slice_to(&self, end: uint) -> &'a str {\n-        assert!(self.is_char_boundary(end));\n+        assert!(self.is_char_boundary(end), \"index {} in `{}` does not lie on \\\n+                a character boundary\", end, *self);\n         unsafe { raw::slice_bytes(*self, 0, end) }\n     }\n "}]}