{"sha": "c9b9462e8f7f0181fcc7f5883c4502e81d260b12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5Yjk0NjJlOGY3ZjAxODFmY2M3ZjU4ODNjNDUwMmU4MWQyNjBiMTI=", "commit": {"author": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2013-07-02T06:46:27Z"}, "committer": {"name": "Seo Sanghyeon", "email": "sanxiyn@gmail.com", "date": "2013-07-05T04:02:43Z"}, "message": "Remove visit_struct_method", "tree": {"sha": "df11bbdbd76b4eb63cbb815ed90e7554739dfb33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df11bbdbd76b4eb63cbb815ed90e7554739dfb33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9b9462e8f7f0181fcc7f5883c4502e81d260b12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9b9462e8f7f0181fcc7f5883c4502e81d260b12", "html_url": "https://github.com/rust-lang/rust/commit/c9b9462e8f7f0181fcc7f5883c4502e81d260b12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9b9462e8f7f0181fcc7f5883c4502e81d260b12/comments", "author": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sanxiyn", "id": 45249, "node_id": "MDQ6VXNlcjQ1MjQ5", "avatar_url": "https://avatars.githubusercontent.com/u/45249?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sanxiyn", "html_url": "https://github.com/sanxiyn", "followers_url": "https://api.github.com/users/sanxiyn/followers", "following_url": "https://api.github.com/users/sanxiyn/following{/other_user}", "gists_url": "https://api.github.com/users/sanxiyn/gists{/gist_id}", "starred_url": "https://api.github.com/users/sanxiyn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sanxiyn/subscriptions", "organizations_url": "https://api.github.com/users/sanxiyn/orgs", "repos_url": "https://api.github.com/users/sanxiyn/repos", "events_url": "https://api.github.com/users/sanxiyn/events{/privacy}", "received_events_url": "https://api.github.com/users/sanxiyn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e89dcb887b99dc8c04d2863e906a4b2705959159", "url": "https://api.github.com/repos/rust-lang/rust/commits/e89dcb887b99dc8c04d2863e906a4b2705959159", "html_url": "https://github.com/rust-lang/rust/commit/e89dcb887b99dc8c04d2863e906a4b2705959159"}], "stats": {"total": 24, "additions": 0, "deletions": 24}, "files": [{"sha": "c39b676b97f01630858dae6d9cebda3bb4cd75c8", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c9b9462e8f7f0181fcc7f5883c4502e81d260b12/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9b9462e8f7f0181fcc7f5883c4502e81d260b12/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=c9b9462e8f7f0181fcc7f5883c4502e81d260b12", "patch": "@@ -966,10 +966,6 @@ fn lint_unused_mut() -> visit::vt<@mut Context> {\n             visit_fn_decl(cx, &tm.decl);\n             visit::visit_ty_method(tm, (cx, vt));\n         },\n-        visit_struct_method: |sm, (cx, vt)| {\n-            visit_fn_decl(cx, &sm.decl);\n-            visit::visit_struct_method(sm, (cx, vt));\n-        },\n         visit_trait_method: |tm, (cx, vt)| {\n             match *tm {\n                 ast::required(ref tm) => visit_fn_decl(cx, &tm.decl),\n@@ -1049,14 +1045,6 @@ fn lint_missing_doc() -> visit::vt<@mut Context> {\n     }\n \n     visit::mk_vt(@visit::Visitor {\n-        visit_struct_method: |m, (cx, vt)| {\n-            if m.vis == ast::public {\n-                check_attrs(cx, m.attrs, m.span,\n-                            \"missing documentation for a method\");\n-            }\n-            visit::visit_struct_method(m, (cx, vt));\n-        },\n-\n         visit_ty_method: |m, (cx, vt)| {\n             // All ty_method objects are linted about because they're part of a\n             // trait (no visibility)"}, {"sha": "5bde51ad70fa204c7fdc4ab0ed88d41e8f2437ab", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c9b9462e8f7f0181fcc7f5883c4502e81d260b12/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9b9462e8f7f0181fcc7f5883c4502e81d260b12/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=c9b9462e8f7f0181fcc7f5883c4502e81d260b12", "patch": "@@ -90,7 +90,6 @@ pub struct Visitor<E> {\n     visit_trait_method: @fn(&trait_method, (E, vt<E>)),\n     visit_struct_def: @fn(@struct_def, ident, &Generics, node_id, (E, vt<E>)),\n     visit_struct_field: @fn(@struct_field, (E, vt<E>)),\n-    visit_struct_method: @fn(@method, (E, vt<E>))\n }\n \n pub type visitor<E> = @Visitor<E>;\n@@ -116,7 +115,6 @@ pub fn default_visitor<E: Copy>() -> visitor<E> {\n         visit_trait_method: |a,b|visit_trait_method::<E>(a, b),\n         visit_struct_def: |a,b,c,d,e|visit_struct_def::<E>(a, b, c, d, e),\n         visit_struct_field: |a,b|visit_struct_field::<E>(a, b),\n-        visit_struct_method: |a,b|visit_struct_method::<E>(a, b)\n     };\n }\n \n@@ -414,10 +412,6 @@ pub fn visit_struct_field<E: Copy>(sf: &struct_field, (e, v): (E, vt<E>)) {\n     (v.visit_ty)(sf.node.ty, (e, v));\n }\n \n-pub fn visit_struct_method<E: Copy>(m: &method, (e, v): (E, vt<E>)) {\n-    visit_method_helper(m, (e, v));\n-}\n-\n pub fn visit_block<E: Copy>(b: &blk, (e, v): (E, vt<E>)) {\n     for b.node.view_items.iter().advance |vi| {\n         (v.visit_view_item)(*vi, (copy e, v));\n@@ -729,10 +723,6 @@ pub fn mk_simple_visitor(v: simple_visitor) -> vt<()> {\n         f(sf);\n         visit_struct_field(sf, (e, v));\n     }\n-    fn v_struct_method(f: @fn(@method), m: @method, (e, v): ((), vt<()>)) {\n-        f(m);\n-        visit_struct_method(m, (e, v));\n-    }\n     return mk_vt(@Visitor {\n         visit_mod: |a,b,c,d|v_mod(v.visit_mod, a, b, c, d),\n         visit_view_item: |a,b| v_view_item(v.visit_view_item, a, b),\n@@ -760,7 +750,5 @@ pub fn mk_simple_visitor(v: simple_visitor) -> vt<()> {\n             v_struct_def(v.visit_struct_def, a, b, c, d, e),\n         visit_struct_field: |a,b|\n             v_struct_field(v.visit_struct_field, a, b),\n-        visit_struct_method: |a,b|\n-            v_struct_method(v.visit_struct_method, a, b)\n     });\n }"}]}