{"sha": "5452368fad8ee8d03d980de47604fa108111ea57", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU0NTIzNjhmYWQ4ZWU4ZDAzZDk4MGRlNDc2MDRmYTEwODExMWVhNTc=", "commit": {"author": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-08-24T09:50:30Z"}, "committer": {"name": "Zac Pullar-Strecker", "email": "zacmps@gmail.com", "date": "2020-08-24T09:50:30Z"}, "message": "Renames, comments, and dead code removal", "tree": {"sha": "6ee0a7d37456c210e0f0a65d4b9656ace534740f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ee0a7d37456c210e0f0a65d4b9656ace534740f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5452368fad8ee8d03d980de47604fa108111ea57", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5452368fad8ee8d03d980de47604fa108111ea57", "html_url": "https://github.com/rust-lang/rust/commit/5452368fad8ee8d03d980de47604fa108111ea57", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5452368fad8ee8d03d980de47604fa108111ea57/comments", "author": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "committer": {"login": "zacps", "id": 9827696, "node_id": "MDQ6VXNlcjk4Mjc2OTY=", "avatar_url": "https://avatars.githubusercontent.com/u/9827696?v=4", "gravatar_id": "", "url": "https://api.github.com/users/zacps", "html_url": "https://github.com/zacps", "followers_url": "https://api.github.com/users/zacps/followers", "following_url": "https://api.github.com/users/zacps/following{/other_user}", "gists_url": "https://api.github.com/users/zacps/gists{/gist_id}", "starred_url": "https://api.github.com/users/zacps/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/zacps/subscriptions", "organizations_url": "https://api.github.com/users/zacps/orgs", "repos_url": "https://api.github.com/users/zacps/repos", "events_url": "https://api.github.com/users/zacps/events{/privacy}", "received_events_url": "https://api.github.com/users/zacps/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7bbca7a1b3f9293d2f5cc5745199bc5f8396f2f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/7bbca7a1b3f9293d2f5cc5745199bc5f8396f2f0", "html_url": "https://github.com/rust-lang/rust/commit/7bbca7a1b3f9293d2f5cc5745199bc5f8396f2f0"}], "stats": {"total": 31, "additions": 8, "deletions": 23}, "files": [{"sha": "bd80102fae4765dc1e5c7baad4b8f5b889625652", "filename": "crates/hir/src/code_model.rs", "status": "modified", "additions": 1, "deletions": 18, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/5452368fad8ee8d03d980de47604fa108111ea57/crates%2Fhir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5452368fad8ee8d03d980de47604fa108111ea57/crates%2Fhir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fcode_model.rs?ref=5452368fad8ee8d03d980de47604fa108111ea57", "patch": "@@ -43,8 +43,8 @@ use tt::{Ident, Leaf, Literal, TokenTree};\n \n use crate::{\n     db::{DefDatabase, HirDatabase},\n+    doc_links::Resolvable,\n     has_source::HasSource,\n-    link_rewrite::Resolvable,\n     HirDisplay, InFile, Name,\n };\n \n@@ -234,23 +234,6 @@ impl ModuleDef {\n             ModuleDef::BuiltinType(it) => Some(it.as_name()),\n         }\n     }\n-\n-    pub fn resolver<D: DefDatabase + HirDatabase>(&self, db: &D) -> Option<Resolver> {\n-        Some(match self {\n-            ModuleDef::Module(m) => ModuleId::from(m.clone()).resolver(db),\n-            ModuleDef::Function(f) => FunctionId::from(f.clone()).resolver(db),\n-            ModuleDef::Adt(adt) => AdtId::from(adt.clone()).resolver(db),\n-            ModuleDef::EnumVariant(ev) => {\n-                GenericDefId::from(GenericDef::from(ev.clone())).resolver(db)\n-            }\n-            ModuleDef::Const(c) => GenericDefId::from(GenericDef::from(c.clone())).resolver(db),\n-            ModuleDef::Static(s) => StaticId::from(s.clone()).resolver(db),\n-            ModuleDef::Trait(t) => TraitId::from(t.clone()).resolver(db),\n-            ModuleDef::TypeAlias(t) => ModuleId::from(t.module(db)).resolver(db),\n-            // FIXME: This should be a resolver relative to `std/core`\n-            ModuleDef::BuiltinType(_t) => None?,\n-        })\n-    }\n }\n \n pub use hir_def::{"}, {"sha": "45b26519e0be3904c2fc11c21a81269bfdff9c45", "filename": "crates/hir/src/doc_links.rs", "status": "renamed", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5452368fad8ee8d03d980de47604fa108111ea57/crates%2Fhir%2Fsrc%2Fdoc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5452368fad8ee8d03d980de47604fa108111ea57/crates%2Fhir%2Fsrc%2Fdoc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Fdoc_links.rs?ref=5452368fad8ee8d03d980de47604fa108111ea57", "patch": "@@ -1,4 +1,4 @@\n-//! Resolves and rewrites links in markdown documentation for hovers/completion windows.\n+//! Resolves links in markdown documentation.\n \n use std::iter::once;\n \n@@ -113,7 +113,7 @@ fn try_resolve_path(db: &dyn HirDatabase, moddef: &ModuleDef, link_target: &str)\n         .map(|url| url.into_string())\n }\n \n-// Strip prefixes, suffixes, and inline code marks from the given string.\n+/// Strip prefixes, suffixes, and inline code marks from the given string.\n fn strip_prefixes_suffixes(mut s: &str) -> &str {\n     s = s.trim_matches('`');\n ", "previous_filename": "crates/hir/src/link_rewrite.rs"}, {"sha": "d1f4d7813236553c05b52cea39b1dcee3dcf6162", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5452368fad8ee8d03d980de47604fa108111ea57/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5452368fad8ee8d03d980de47604fa108111ea57/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=5452368fad8ee8d03d980de47604fa108111ea57", "patch": "@@ -27,7 +27,7 @@ pub mod diagnostics;\n \n mod from_id;\n mod code_model;\n-mod link_rewrite;\n+mod doc_links;\n \n mod has_source;\n \n@@ -38,8 +38,8 @@ pub use crate::{\n         Function, GenericDef, HasAttrs, HasVisibility, ImplDef, Local, MacroDef, Module, ModuleDef,\n         ScopeDef, Static, Struct, Trait, Type, TypeAlias, TypeParam, Union, VariantDef, Visibility,\n     },\n+    doc_links::resolve_doc_link,\n     has_source::HasSource,\n-    link_rewrite::resolve_doc_link,\n     semantics::{original_range, PathResolution, Semantics, SemanticsScope},\n };\n "}, {"sha": "ff3200eefb4d86a36b7d30250d73dd575f1f34d2", "filename": "crates/ide/src/link_rewrite.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5452368fad8ee8d03d980de47604fa108111ea57/crates%2Fide%2Fsrc%2Flink_rewrite.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5452368fad8ee8d03d980de47604fa108111ea57/crates%2Fide%2Fsrc%2Flink_rewrite.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Flink_rewrite.rs?ref=5452368fad8ee8d03d980de47604fa108111ea57", "patch": "@@ -1,4 +1,6 @@\n-//! This is a wrapper around [`hir::link_rewrite`] connecting it to the markdown parser.\n+//! Resolves and rewrites links in markdown documentation.\n+//!\n+//! Most of the implementation can be found in [`hir::doc_links`].\n \n use pulldown_cmark::{CowStr, Event, Options, Parser, Tag};\n use pulldown_cmark_to_cmark::{cmark_with_options, Options as CmarkOptions};"}]}