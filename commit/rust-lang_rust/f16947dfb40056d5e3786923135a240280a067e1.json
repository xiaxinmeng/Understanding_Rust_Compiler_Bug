{"sha": "f16947dfb40056d5e3786923135a240280a067e1", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxNjk0N2RmYjQwMDU2ZDVlMzc4NjkyMzEzNWEyNDAyODBhMDY3ZTE=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-06T08:43:01Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-06T08:43:01Z"}, "message": "Implement intrinsic write_bytes", "tree": {"sha": "153ee5ed697e433c6ab2e38c3bbccd680aa2b165", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/153ee5ed697e433c6ab2e38c3bbccd680aa2b165"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f16947dfb40056d5e3786923135a240280a067e1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f16947dfb40056d5e3786923135a240280a067e1", "html_url": "https://github.com/rust-lang/rust/commit/f16947dfb40056d5e3786923135a240280a067e1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f16947dfb40056d5e3786923135a240280a067e1/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8e2ce6b4b5c89b5906ccdf10d8f1366404c2103", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8e2ce6b4b5c89b5906ccdf10d8f1366404c2103", "html_url": "https://github.com/rust-lang/rust/commit/f8e2ce6b4b5c89b5906ccdf10d8f1366404c2103"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "1cc16419413cc18e8ee4ee4c4fef26371d8b7c56", "filename": "src/intrinsics.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f16947dfb40056d5e3786923135a240280a067e1/src%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f16947dfb40056d5e3786923135a240280a067e1/src%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics.rs?ref=f16947dfb40056d5e3786923135a240280a067e1", "patch": "@@ -308,6 +308,9 @@ pub fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n             let uninit_val = uninit_place.to_cvalue(fx);\n             ret.write_cvalue(fx, uninit_val);\n         };\n+        write_bytes, <T> (v dst, v val, v count) {\n+            fx.bcx.call_memset(fx.isa, dst, val, count);\n+        };\n         uninit, <T> () {\n             let layout = fx.layout_of(T);\n             let stack_slot = fx.bcx.create_stack_slot(StackSlotData {"}]}