{"sha": "0c3ad68a5a973642c6789a5c57d10e84fdb66520", "node_id": "C_kwDOAAsO6NoAKDBjM2FkNjhhNWE5NzM2NDJjNjc4OWE1YzU3ZDEwZTg0ZmRiNjY1MjA", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-19T12:01:38Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-08-20T03:46:17Z"}, "message": "add ./miri cargo for RA to invoke", "tree": {"sha": "f68369c5faef2630b83088c9a9d6bb41b70dfd57", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f68369c5faef2630b83088c9a9d6bb41b70dfd57"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0c3ad68a5a973642c6789a5c57d10e84fdb66520", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0c3ad68a5a973642c6789a5c57d10e84fdb66520", "html_url": "https://github.com/rust-lang/rust/commit/0c3ad68a5a973642c6789a5c57d10e84fdb66520", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0c3ad68a5a973642c6789a5c57d10e84fdb66520/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09118da54fa6498eef98533e2156d24958d4a79f", "url": "https://api.github.com/repos/rust-lang/rust/commits/09118da54fa6498eef98533e2156d24958d4a79f", "html_url": "https://github.com/rust-lang/rust/commit/09118da54fa6498eef98533e2156d24958d4a79f"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "8d965ae8fcb8da693c9337c04b847216b721db00", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/0c3ad68a5a973642c6789a5c57d10e84fdb66520/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/0c3ad68a5a973642c6789a5c57d10e84fdb66520/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=0c3ad68a5a973642c6789a5c57d10e84fdb66520", "patch": "@@ -171,14 +171,16 @@ to `.vscode/settings.json` in your local Miri clone:\n         \"env\",\n         \"MIRI_AUTO_OPS=no\",\n         \"./miri\",\n-        \"check\",\n+        \"cargo\",\n+        \"clippy\", // make this `check` when working with a locally built rustc\n         \"--message-format=json\"\n     ],\n     // Contrary to what the name suggests, this also affects proc macros.\n     \"rust-analyzer.cargo.buildScripts.overrideCommand\": [\n         \"env\",\n         \"MIRI_AUTO_OPS=no\",\n         \"./miri\",\n+        \"cargo\",\n         \"check\",\n         \"--message-format=json\",\n     ],"}, {"sha": "cf3ad06788ab1311b9c98f7df8c08431f64370f7", "filename": "cargo-miri/miri", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/0c3ad68a5a973642c6789a5c57d10e84fdb66520/cargo-miri%2Fmiri", "raw_url": "https://github.com/rust-lang/rust/raw/0c3ad68a5a973642c6789a5c57d10e84fdb66520/cargo-miri%2Fmiri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/cargo-miri%2Fmiri?ref=0c3ad68a5a973642c6789a5c57d10e84fdb66520", "patch": "@@ -1,3 +1,4 @@\n #!/bin/sh\n-# Hack to work around https://github.com/rust-analyzer/rust-analyzer/issues/10793.\n+# RA invokes `./miri cargo ...` for each workspace, so we need to forward that to the main `miri`\n+# script. See <https://github.com/rust-analyzer/rust-analyzer/issues/10793>.\n exec \"$(dirname \"$0\")\"/../miri \"$@\""}, {"sha": "a72fe91f594b692bd0df9408f739e0479978c539", "filename": "miri", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/0c3ad68a5a973642c6789a5c57d10e84fdb66520/miri", "raw_url": "https://github.com/rust-lang/rust/raw/0c3ad68a5a973642c6789a5c57d10e84fdb66520/miri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri?ref=0c3ad68a5a973642c6789a5c57d10e84fdb66520", "patch": "@@ -29,6 +29,10 @@ Format all sources and tests. <flags> are passed to `rustfmt`.\n ./miri clippy <flags>:\n Runs clippy on all sources. <flags> are passed to `cargo clippy`.\n \n+./miri cargo <flags>:\n+Runs just `cargo <flags>` with the Miri-specific environment variables.\n+Mainly meant to be invoked by rust-analyzer.\n+\n ./miri many-seeds <command>:\n Runs <command> over and over again with different seeds for Miri. The MIRIFLAGS\n variable is set to its original value appended with ` -Zmiri-seed=$SEED` for\n@@ -44,7 +48,7 @@ MIRI_SYSROOT:\n If already set, the \"sysroot setup\" step is skipped.\n \n CARGO_EXTRA_FLAGS:\n-Pass extra flags to all cargo invocations.\n+Pass extra flags to all cargo invocations. (Ignored by `./miri cargo`.)\n EOF\n )\n \n@@ -218,6 +222,11 @@ clippy)\n     $CARGO clippy $CARGO_EXTRA_FLAGS --manifest-path \"$MIRIDIR\"/ui_test/Cargo.toml --all-targets \"$@\"\n     $CARGO clippy $CARGO_EXTRA_FLAGS --manifest-path \"$MIRIDIR\"/cargo-miri/Cargo.toml \"$@\"\n     ;;\n+cargo)\n+    # We carefully kept the working dir intact, so this will run cargo *on the workspace in the\n+    # current working dir*, not on the main Miri workspace. That is exactly what RA needs.\n+    $CARGO \"$@\"\n+    ;;\n *)\n     if [ -n \"$COMMAND\" ]; then\n       echo \"Unknown command: $COMMAND\""}]}