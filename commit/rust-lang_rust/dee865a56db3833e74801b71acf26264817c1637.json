{"sha": "dee865a56db3833e74801b71acf26264817c1637", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlZTg2NWE1NmRiMzgzM2U3NDgwMWI3MWFjZjI2MjY0ODE3YzE2Mzc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-14T01:40:08Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-05-14T01:40:08Z"}, "message": "Auto merge of #33532 - jseyfried:mutable_lowering_context, r=nrc\n\nClean up `hir::lowering`\n\nClean up `hir::lowering`:\n - give lowering functions mutable access to the lowering context\n - refactor the `lower_*` functions and other functions that take a lowering context into methods\n - simplify the API that `hir::lowering` exposes to `driver`\n - other miscellaneous cleanups\n\nr? @nrc", "tree": {"sha": "0875ae608dbed98f5da05cce18e5b68dc97e2ad1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0875ae608dbed98f5da05cce18e5b68dc97e2ad1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dee865a56db3833e74801b71acf26264817c1637", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dee865a56db3833e74801b71acf26264817c1637", "html_url": "https://github.com/rust-lang/rust/commit/dee865a56db3833e74801b71acf26264817c1637", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dee865a56db3833e74801b71acf26264817c1637/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b79e05a05f7259891adc4d7b0487d44121eb0c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b79e05a05f7259891adc4d7b0487d44121eb0c1", "html_url": "https://github.com/rust-lang/rust/commit/2b79e05a05f7259891adc4d7b0487d44121eb0c1"}, {"sha": "33978b0728640f3345479bd3fc0055a36507cf32", "url": "https://api.github.com/repos/rust-lang/rust/commits/33978b0728640f3345479bd3fc0055a36507cf32", "html_url": "https://github.com/rust-lang/rust/commit/33978b0728640f3345479bd3fc0055a36507cf32"}], "stats": {"total": 3349, "additions": 1647, "deletions": 1702}, "files": [{"sha": "5ca99a7db67f5f9e48eec6230ad6d0a0551fa310", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 1634, "deletions": 1687, "changes": 3321, "blob_url": "https://github.com/rust-lang/rust/blob/dee865a56db3833e74801b71acf26264817c1637/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dee865a56db3833e74801b71acf26264817c1637/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=dee865a56db3833e74801b71acf26264817c1637"}, {"sha": "47378793dba8e10996d8ba0377a0e286ee9dbc0e", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dee865a56db3833e74801b71acf26264817c1637/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dee865a56db3833e74801b71acf26264817c1637/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=dee865a56db3833e74801b71acf26264817c1637", "patch": "@@ -37,7 +37,7 @@ use rustc_typeck as typeck;\n use rustc_privacy;\n use rustc_plugin::registry::Registry;\n use rustc_plugin as plugin;\n-use rustc::hir::lowering::{lower_crate, LoweringContext};\n+use rustc::hir::lowering::lower_crate;\n use rustc_passes::{no_asm, loops, consts, rvalues, static_recursion};\n use rustc_const_eval::check_match;\n use super::Compilation;\n@@ -816,8 +816,7 @@ pub fn lower_and_resolve<'a>(sess: &Session,\n \n         // Lower ast -> hir.\n         let hir_forest = time(sess.time_passes(), \"lowering ast -> hir\", || {\n-            let lcx = LoweringContext::new(sess, Some(krate), &mut resolver);\n-            hir_map::Forest::new(lower_crate(&lcx, krate), dep_graph)\n+            hir_map::Forest::new(lower_crate(krate, sess, &mut resolver), dep_graph)\n         });\n \n         (ty::CrateAnalysis {"}, {"sha": "ad0e8e1c37623a9f03de6fabf74e1ba84df2977b", "filename": "src/librustc_metadata/astencode.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/dee865a56db3833e74801b71acf26264817c1637/src%2Flibrustc_metadata%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dee865a56db3833e74801b71acf26264817c1637/src%2Flibrustc_metadata%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fastencode.rs?ref=dee865a56db3833e74801b71acf26264817c1637", "patch": "@@ -57,7 +57,7 @@ use rustc_serialize::{Encodable, EncoderHelpers};\n #[cfg(test)] use syntax::parse;\n #[cfg(test)] use syntax::ast::NodeId;\n #[cfg(test)] use rustc::hir::print as pprust;\n-#[cfg(test)] use rustc::hir::lowering::{lower_item, LoweringContext, DummyResolver};\n+#[cfg(test)] use rustc::hir::lowering::{LoweringContext, DummyResolver};\n \n struct DecodeContext<'a, 'b, 'tcx: 'a> {\n     tcx: TyCtxt<'a, 'tcx, 'tcx>,\n@@ -1319,11 +1319,11 @@ fn mk_ctxt() -> parse::ParseSess {\n }\n \n #[cfg(test)]\n-fn with_testing_context<T, F: FnOnce(LoweringContext) -> T>(f: F) -> T {\n+fn with_testing_context<T, F: FnOnce(&mut LoweringContext) -> T>(f: F) -> T {\n     let assigner = FakeNodeIdAssigner;\n     let mut resolver = DummyResolver;\n-    let lcx = LoweringContext::new(&assigner, None, &mut resolver);\n-    f(lcx)\n+    let mut lcx = LoweringContext::testing_context(&assigner, &mut resolver);\n+    f(&mut lcx)\n }\n \n #[cfg(test)]\n@@ -1340,7 +1340,7 @@ fn roundtrip(in_item: hir::Item) {\n fn test_basic() {\n     let cx = mk_ctxt();\n     with_testing_context(|lcx| {\n-        roundtrip(lower_item(&lcx, &quote_item!(&cx,\n+        roundtrip(lcx.lower_item(&quote_item!(&cx,\n             fn foo() {}\n         ).unwrap()));\n     });\n@@ -1350,7 +1350,7 @@ fn test_basic() {\n fn test_smalltalk() {\n     let cx = mk_ctxt();\n     with_testing_context(|lcx| {\n-        roundtrip(lower_item(&lcx, &quote_item!(&cx,\n+        roundtrip(lcx.lower_item(&quote_item!(&cx,\n             fn foo() -> isize { 3 + 4 } // first smalltalk program ever executed.\n         ).unwrap()));\n     });\n@@ -1360,7 +1360,7 @@ fn test_smalltalk() {\n fn test_more() {\n     let cx = mk_ctxt();\n     with_testing_context(|lcx| {\n-        roundtrip(lower_item(&lcx, &quote_item!(&cx,\n+        roundtrip(lcx.lower_item(&quote_item!(&cx,\n             fn foo(x: usize, y: usize) -> usize {\n                 let z = x + y;\n                 return z;\n@@ -1380,10 +1380,10 @@ fn test_simplification() {\n     ).unwrap();\n     let cx = mk_ctxt();\n     with_testing_context(|lcx| {\n-        let hir_item = lower_item(&lcx, &item);\n+        let hir_item = lcx.lower_item(&item);\n         let item_in = InlinedItemRef::Item(&hir_item);\n         let item_out = simplify_ast(item_in);\n-        let item_exp = InlinedItem::Item(P(lower_item(&lcx, &quote_item!(&cx,\n+        let item_exp = InlinedItem::Item(P(lcx.lower_item(&quote_item!(&cx,\n             fn new_int_alist<B>() -> alist<isize, B> {\n                 return alist {eq_fn: eq_int, data: Vec::new()};\n             }"}, {"sha": "579cbf1fd33b701d7a1f7b1928937f0b5ef84fc7", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/dee865a56db3833e74801b71acf26264817c1637/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dee865a56db3833e74801b71acf26264817c1637/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=dee865a56db3833e74801b71acf26264817c1637", "patch": "@@ -28,7 +28,7 @@ use rustc::hir::map as hir_map;\n use rustc::session::{self, config};\n use rustc::session::config::{get_unstable_features_setting, OutputType};\n use rustc::session::search_paths::{SearchPaths, PathKind};\n-use rustc::hir::lowering::{lower_crate, LoweringContext, DummyResolver};\n+use rustc::hir::lowering::{lower_crate, DummyResolver};\n use rustc_back::dynamic_lib::DynamicLibrary;\n use rustc_back::tempdir::TempDir;\n use rustc_driver::{driver, Compilation};\n@@ -98,8 +98,7 @@ pub fn run(input: &str,\n     let defs = &RefCell::new(hir_map::collect_definitions(&krate));\n \n     let mut dummy_resolver = DummyResolver;\n-    let lcx = LoweringContext::new(&sess, Some(&krate), &mut dummy_resolver);\n-    let krate = lower_crate(&lcx, &krate);\n+    let krate = lower_crate(&krate, &sess, &mut dummy_resolver);\n \n     let opts = scrape_test_config(&krate);\n "}]}