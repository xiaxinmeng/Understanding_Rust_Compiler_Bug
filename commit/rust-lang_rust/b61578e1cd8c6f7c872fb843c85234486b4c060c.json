{"sha": "b61578e1cd8c6f7c872fb843c85234486b4c060c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2MTU3OGUxY2Q4YzZmN2M4NzJmYjg0M2M4NTIzNDQ4NmI0YzA2MGM=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-17T21:28:44Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-10-17T23:36:49Z"}, "message": "Don't unify from mutable? to immutable\n\nImmutable is supposed to be a subtype of mutable-huh.", "tree": {"sha": "9b18afb17482eb02923a166d05783c26e3b30d8c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b18afb17482eb02923a166d05783c26e3b30d8c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b61578e1cd8c6f7c872fb843c85234486b4c060c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b61578e1cd8c6f7c872fb843c85234486b4c060c", "html_url": "https://github.com/rust-lang/rust/commit/b61578e1cd8c6f7c872fb843c85234486b4c060c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b61578e1cd8c6f7c872fb843c85234486b4c060c/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f7a825c6148ab634d2804508118dec939c41136d", "url": "https://api.github.com/repos/rust-lang/rust/commits/f7a825c6148ab634d2804508118dec939c41136d", "html_url": "https://github.com/rust-lang/rust/commit/f7a825c6148ab634d2804508118dec939c41136d"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "7f026d5215dc99937494f75838ee3e3124c20555", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b61578e1cd8c6f7c872fb843c85234486b4c060c/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b61578e1cd8c6f7c872fb843c85234486b4c060c/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=b61578e1cd8c6f7c872fb843c85234486b4c060c", "patch": "@@ -1952,7 +1952,6 @@ mod unify {\n        option::t<ast::mutability> {\n         if expected == actual { ret some(expected); }\n         if expected == ast::maybe_mut { ret some(actual); }\n-        if actual == ast::maybe_mut { ret some(expected); }\n         ret none;\n     }\n     tag fn_common_res {"}, {"sha": "f329e40cb9889b67665073e9ebc04a4f94c66796", "filename": "src/lib/vec.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b61578e1cd8c6f7c872fb843c85234486b4c060c/src%2Flib%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b61578e1cd8c6f7c872fb843c85234486b4c060c/src%2Flib%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fvec.rs?ref=b61578e1cd8c6f7c872fb843c85234486b4c060c", "patch": "@@ -5,7 +5,7 @@ import uint::next_power_of_two;\n import ptr::addr_of;\n \n native \"rust-intrinsic\" mod rusti {\n-    fn vec_len<T>(&&v: [T]) -> uint;\n+    fn vec_len<T>(&&v: [mutable? T]) -> uint;\n }\n \n native \"rust\" mod rustrt {\n@@ -86,7 +86,7 @@ pure fn is_not_empty<T>(v: [mutable? T]) -> bool { ret !is_empty(v); }\n fn head<@T>(v: [mutable? T]) : is_not_empty(v) -> T { ret v[0]; }\n \n /// Returns all but the first element of a vector\n-fn tail<@T>(v: [mutable? T]) : is_not_empty(v) -> [mutable? T] {\n+fn tail<@T>(v: [mutable? T]) : is_not_empty(v) -> [T] {\n     ret slice(v, 1u, len(v));\n }\n "}]}