{"sha": "246edb8628cb4df26e37ef42a50ee076b9e21ff4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NmVkYjg2MjhjYjRkZjI2ZTM3ZWY0MmE1MGVlMDc2YjllMjFmZjQ=", "commit": {"author": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-11-28T13:22:41Z"}, "committer": {"name": "Andrew Cann", "email": "shum@canndrew.org", "date": "2016-11-28T13:22:41Z"}, "message": "Make core::fmt::Void a non-empty type.\n\nBecause we handle artifically-constructed references to it in live code which\nis a totally broken thing to do.", "tree": {"sha": "9b6d2a53e5d373e0dadff7f7d0a1f66aef0399b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b6d2a53e5d373e0dadff7f7d0a1f66aef0399b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/246edb8628cb4df26e37ef42a50ee076b9e21ff4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/246edb8628cb4df26e37ef42a50ee076b9e21ff4", "html_url": "https://github.com/rust-lang/rust/commit/246edb8628cb4df26e37ef42a50ee076b9e21ff4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/246edb8628cb4df26e37ef42a50ee076b9e21ff4/comments", "author": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "committer": {"login": "canndrew", "id": 5555066, "node_id": "MDQ6VXNlcjU1NTUwNjY=", "avatar_url": "https://avatars.githubusercontent.com/u/5555066?v=4", "gravatar_id": "", "url": "https://api.github.com/users/canndrew", "html_url": "https://github.com/canndrew", "followers_url": "https://api.github.com/users/canndrew/followers", "following_url": "https://api.github.com/users/canndrew/following{/other_user}", "gists_url": "https://api.github.com/users/canndrew/gists{/gist_id}", "starred_url": "https://api.github.com/users/canndrew/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/canndrew/subscriptions", "organizations_url": "https://api.github.com/users/canndrew/orgs", "repos_url": "https://api.github.com/users/canndrew/repos", "events_url": "https://api.github.com/users/canndrew/events{/privacy}", "received_events_url": "https://api.github.com/users/canndrew/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7ddb8946bf041d89ba109ec8dd754492de78606", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7ddb8946bf041d89ba109ec8dd754492de78606", "html_url": "https://github.com/rust-lang/rust/commit/c7ddb8946bf041d89ba109ec8dd754492de78606"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "9167264ba9d12f4297ecb936aa1bdec370da7a0f", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/246edb8628cb4df26e37ef42a50ee076b9e21ff4/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/246edb8628cb4df26e37ef42a50ee076b9e21ff4/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=246edb8628cb4df26e37ef42a50ee076b9e21ff4", "patch": "@@ -166,7 +166,9 @@ pub struct Formatter<'a> {\n // NB. Argument is essentially an optimized partially applied formatting function,\n // equivalent to `exists T.(&T, fn(&T, &mut Formatter) -> Result`.\n \n-enum Void {}\n+struct Void {\n+    _priv: (),\n+}\n \n /// This struct represents the generic \"argument\" which is taken by the Xprintf\n /// family of functions. It contains a function to format the given value. At"}]}