{"sha": "cca0dfa79ed968d41464eb7beb7aaa970e2d429f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNjYTBkZmE3OWVkOTY4ZDQxNDY0ZWI3YmViN2FhYTk3MGUyZDQyOWY=", "commit": {"author": {"name": "AdnoC", "email": "adam.r.cutler@gmail.com", "date": "2020-12-31T20:46:13Z"}, "committer": {"name": "AdnoC", "email": "adam.r.cutler@gmail.com", "date": "2020-12-31T20:46:13Z"}, "message": "we can have one less call to name.clone()", "tree": {"sha": "14f5a4529f75b9d13d5248ff8e0612b695ef6f31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14f5a4529f75b9d13d5248ff8e0612b695ef6f31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cca0dfa79ed968d41464eb7beb7aaa970e2d429f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cca0dfa79ed968d41464eb7beb7aaa970e2d429f", "html_url": "https://github.com/rust-lang/rust/commit/cca0dfa79ed968d41464eb7beb7aaa970e2d429f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cca0dfa79ed968d41464eb7beb7aaa970e2d429f/comments", "author": {"login": "AdnoC", "id": 4079454, "node_id": "MDQ6VXNlcjQwNzk0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4079454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdnoC", "html_url": "https://github.com/AdnoC", "followers_url": "https://api.github.com/users/AdnoC/followers", "following_url": "https://api.github.com/users/AdnoC/following{/other_user}", "gists_url": "https://api.github.com/users/AdnoC/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdnoC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdnoC/subscriptions", "organizations_url": "https://api.github.com/users/AdnoC/orgs", "repos_url": "https://api.github.com/users/AdnoC/repos", "events_url": "https://api.github.com/users/AdnoC/events{/privacy}", "received_events_url": "https://api.github.com/users/AdnoC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "AdnoC", "id": 4079454, "node_id": "MDQ6VXNlcjQwNzk0NTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/4079454?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AdnoC", "html_url": "https://github.com/AdnoC", "followers_url": "https://api.github.com/users/AdnoC/followers", "following_url": "https://api.github.com/users/AdnoC/following{/other_user}", "gists_url": "https://api.github.com/users/AdnoC/gists{/gist_id}", "starred_url": "https://api.github.com/users/AdnoC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AdnoC/subscriptions", "organizations_url": "https://api.github.com/users/AdnoC/orgs", "repos_url": "https://api.github.com/users/AdnoC/repos", "events_url": "https://api.github.com/users/AdnoC/events{/privacy}", "received_events_url": "https://api.github.com/users/AdnoC/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "435c189c803486a30d3fa0cdcc354e04b9993310", "url": "https://api.github.com/repos/rust-lang/rust/commits/435c189c803486a30d3fa0cdcc354e04b9993310", "html_url": "https://github.com/rust-lang/rust/commit/435c189c803486a30d3fa0cdcc354e04b9993310"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "779754ada7f808671d9ab6b27fe12196713b5fcd", "filename": "crates/hir_def/src/resolver.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/cca0dfa79ed968d41464eb7beb7aaa970e2d429f/crates%2Fhir_def%2Fsrc%2Fresolver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cca0dfa79ed968d41464eb7beb7aaa970e2d429f/crates%2Fhir_def%2Fsrc%2Fresolver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_def%2Fsrc%2Fresolver.rs?ref=cca0dfa79ed968d41464eb7beb7aaa970e2d429f", "patch": "@@ -510,8 +510,9 @@ impl Scope {\n                 if let Some(prelude) = m.crate_def_map.prelude {\n                     let prelude_def_map = db.crate_def_map(prelude.krate);\n                     prelude_def_map[prelude.local_id].scope.entries().for_each(|(name, def)| {\n-                        if !seen.contains(&(name.clone(), def)) {\n-                            f(name.clone(), ScopeDef::PerNs(def));\n+                        let seen_tuple = (name.clone(), def);\n+                        if !seen.contains(&seen_tuple) {\n+                            f(seen_tuple.0, ScopeDef::PerNs(def));\n                         }\n                     });\n                 }"}]}