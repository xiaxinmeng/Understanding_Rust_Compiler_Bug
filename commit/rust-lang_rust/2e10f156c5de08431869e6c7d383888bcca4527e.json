{"sha": "2e10f156c5de08431869e6c7d383888bcca4527e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMTBmMTU2YzVkZTA4NDMxODY5ZTZjN2QzODM4ODhiY2NhNDUyN2U=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-07-29T17:57:20Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-29T17:57:20Z"}, "message": "Merge #5574\n\n5574: Replace rand with oorandom r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "4de0bef2ca0215da21322427062d1005cb0167e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4de0bef2ca0215da21322427062d1005cb0167e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e10f156c5de08431869e6c7d383888bcca4527e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfIbiACRBK7hj4Ov3rIwAAdHIIAAJGA1tu0rKLdTBiR3hq7wfn\n2opBCpvZtn/3rOufeJV6kYstN2lY2K5CJGtutA2AYzOOFhmiJ8M4rnMebQFc4m5Y\nGBlZpvgUeg/HM8rt6bSEyfqZ6D8hdO+Xo8QodiU56N3nkFmQIwopof3roRnogjcj\n7wcdFPpWNcKfFelgbeWXvETcJHoky8LI/hjxOdr4u/A6e7TUxIeRDbY+cOrA3fhr\nNR4qTNV2TrwbT+isEbPHO+Lj8qBsT35xO9JxRxFRlxmuXm5NykGQCrySbxuVWy1o\nKF4fE0u/VqPxqFgP90aGkDldeWPi0DTAQNHAqi6ygNkMvfOWd9OD9SkD/LlbOUk=\n=CpBp\n-----END PGP SIGNATURE-----\n", "payload": "tree 4de0bef2ca0215da21322427062d1005cb0167e6\nparent 17126b9827dcec89bbe07add455a4ad893db58fa\nparent 63de7bbb5b4cfb4797adb303ce2a48cf8ff2cff4\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1596045440 +0000\ncommitter GitHub <noreply@github.com> 1596045440 +0000\n\nMerge #5574\n\n5574: Replace rand with oorandom r=matklad a=matklad\n\n\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e10f156c5de08431869e6c7d383888bcca4527e", "html_url": "https://github.com/rust-lang/rust/commit/2e10f156c5de08431869e6c7d383888bcca4527e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e10f156c5de08431869e6c7d383888bcca4527e/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17126b9827dcec89bbe07add455a4ad893db58fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/17126b9827dcec89bbe07add455a4ad893db58fa", "html_url": "https://github.com/rust-lang/rust/commit/17126b9827dcec89bbe07add455a4ad893db58fa"}, {"sha": "63de7bbb5b4cfb4797adb303ce2a48cf8ff2cff4", "url": "https://api.github.com/repos/rust-lang/rust/commits/63de7bbb5b4cfb4797adb303ce2a48cf8ff2cff4", "html_url": "https://github.com/rust-lang/rust/commit/63de7bbb5b4cfb4797adb303ce2a48cf8ff2cff4"}], "stats": {"total": 142, "additions": 44, "deletions": 98}, "files": [{"sha": "c656f846d8956c8ddb1079611483aa97a597c7e4", "filename": "Cargo.lock", "status": "modified", "additions": 11, "deletions": 79, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/2e10f156c5de08431869e6c7d383888bcca4527e/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/2e10f156c5de08431869e6c7d383888bcca4527e/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=2e10f156c5de08431869e6c7d383888bcca4527e", "patch": "@@ -400,17 +400,6 @@ version = \"0.3.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"3dcaa9ae7725d12cdb85b3ad99a434db70b468c09ded17e012d86b5c1010f7a7\"\n \n-[[package]]\n-name = \"getrandom\"\n-version = \"0.1.14\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"7abc8dd8451921606d809ba32e95b6111925cd2906060d2dcc29c070220503eb\"\n-dependencies = [\n- \"cfg-if\",\n- \"libc\",\n- \"wasi\",\n-]\n-\n [[package]]\n name = \"gimli\"\n version = \"0.22.0\"\n@@ -810,6 +799,12 @@ version = \"1.4.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"0b631f7e854af39a1739f401cf34a8a013dfe09eac4fa4dba91e9768bd28168d\"\n \n+[[package]]\n+name = \"oorandom\"\n+version = \"11.1.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+checksum = \"a170cebd8021a008ea92e4db85a72f80b35df514ec664b296fdcbb654eac0b2c\"\n+\n [[package]]\n name = \"parking_lot\"\n version = \"0.11.0\"\n@@ -868,12 +863,6 @@ version = \"0.2.3\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n checksum = \"b4596b6d070b27117e987119b4dac604f3c58cfb0b191112e24771b2faeac1a6\"\n \n-[[package]]\n-name = \"ppv-lite86\"\n-version = \"0.2.8\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"237a5ed80e274dbc66f86bd59c1e25edc039660be53194b5fe0a482e0f2612ea\"\n-\n [[package]]\n name = \"proc-macro2\"\n version = \"1.0.19\"\n@@ -1046,6 +1035,7 @@ dependencies = [\n  \"indexmap\",\n  \"itertools\",\n  \"log\",\n+ \"oorandom\",\n  \"ra_assists\",\n  \"ra_cfg\",\n  \"ra_db\",\n@@ -1056,7 +1046,6 @@ dependencies = [\n  \"ra_ssr\",\n  \"ra_syntax\",\n  \"ra_text_edit\",\n- \"rand\",\n  \"rustc-hash\",\n  \"stdx\",\n  \"test_utils\",\n@@ -1217,57 +1206,6 @@ dependencies = [\n  \"stdx\",\n ]\n \n-[[package]]\n-name = \"rand\"\n-version = \"0.7.3\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"6a6b1679d49b24bbfe0c803429aa1874472f50d9b363131f0e89fc356b544d03\"\n-dependencies = [\n- \"getrandom\",\n- \"libc\",\n- \"rand_chacha\",\n- \"rand_core\",\n- \"rand_hc\",\n- \"rand_pcg\",\n-]\n-\n-[[package]]\n-name = \"rand_chacha\"\n-version = \"0.2.2\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f4c8ed856279c9737206bf725bf36935d8666ead7aa69b52be55af369d193402\"\n-dependencies = [\n- \"ppv-lite86\",\n- \"rand_core\",\n-]\n-\n-[[package]]\n-name = \"rand_core\"\n-version = \"0.5.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"90bde5296fc891b0cef12a6d03ddccc162ce7b2aff54160af9338f8d40df6d19\"\n-dependencies = [\n- \"getrandom\",\n-]\n-\n-[[package]]\n-name = \"rand_hc\"\n-version = \"0.2.0\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"ca3129af7b92a17112d59ad498c6f81eaf463253766b90396d39ea7a39d6613c\"\n-dependencies = [\n- \"rand_core\",\n-]\n-\n-[[package]]\n-name = \"rand_pcg\"\n-version = \"0.2.1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"16abd0c1b639e9eb4d7c50c0b8100b0d0f849be2349829c740fe8e6eb4816429\"\n-dependencies = [\n- \"rand_core\",\n-]\n-\n [[package]]\n name = \"rayon\"\n version = \"1.3.1\"\n@@ -1354,6 +1292,7 @@ dependencies = [\n  \"lsp-server\",\n  \"lsp-types\",\n  \"mimalloc\",\n+ \"oorandom\",\n  \"parking_lot\",\n  \"pico-args\",\n  \"ra_cfg\",\n@@ -1372,7 +1311,6 @@ dependencies = [\n  \"ra_text_edit\",\n  \"ra_toolchain\",\n  \"ra_tt\",\n- \"rand\",\n  \"rayon\",\n  \"rustc-hash\",\n  \"serde\",\n@@ -1414,16 +1352,16 @@ checksum = \"71d301d4193d031abdd79ff7e3dd721168a9572ef3fe51a1517aba235bd8f86e\"\n \n [[package]]\n name = \"salsa\"\n-version = \"0.15.0\"\n+version = \"0.15.1\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"885b4b99dde959decc84e85dd943bd140b4aabd62db2f8206ef5270f77ec20b9\"\n+checksum = \"d4cdc109fcc9e9450c7ef47fb7474e99bffd51799da03ed0a6c7f0e2cb3848a6\"\n dependencies = [\n  \"crossbeam-utils\",\n  \"indexmap\",\n  \"lock_api\",\n  \"log\",\n+ \"oorandom\",\n  \"parking_lot\",\n- \"rand\",\n  \"rustc-hash\",\n  \"salsa-macros\",\n  \"smallvec\",\n@@ -1831,12 +1769,6 @@ dependencies = [\n  \"winapi-util\",\n ]\n \n-[[package]]\n-name = \"wasi\"\n-version = \"0.9.0+wasi-snapshot-preview1\"\n-source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"cccddf32554fecc6acb585f82a32a72e28b48f8c4c1883ddfeeeaa96f7d8e519\"\n-\n [[package]]\n name = \"winapi\"\n version = \"0.2.8\""}, {"sha": "f4181c4eb81c242d75aed3052d7325e582bea0e2", "filename": "crates/ra_ide/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2e10f156c5de08431869e6c7d383888bcca4527e/crates%2Fra_ide%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/2e10f156c5de08431869e6c7d383888bcca4527e/crates%2Fra_ide%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2FCargo.toml?ref=2e10f156c5de08431869e6c7d383888bcca4527e", "patch": "@@ -17,7 +17,7 @@ indexmap = \"1.3.2\"\n itertools = \"0.9.0\"\n log = \"0.4.8\"\n rustc-hash = \"1.1.0\"\n-rand = { version = \"0.7.3\", features = [\"small_rng\"] }\n+oorandom = \"11.1.2\"\n \n stdx = { path = \"../stdx\" }\n "}, {"sha": "a5e7d28676dd7f46dbbe722f7c570368dd39c088", "filename": "crates/ra_ide/src/syntax_highlighting/html.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2e10f156c5de08431869e6c7d383888bcca4527e/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e10f156c5de08431869e6c7d383888bcca4527e/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Fsrc%2Fsyntax_highlighting%2Fhtml.rs?ref=2e10f156c5de08431869e6c7d383888bcca4527e", "patch": "@@ -1,5 +1,6 @@\n //! Renders a bit of code as HTML.\n \n+use oorandom::Rand32;\n use ra_db::SourceDatabase;\n use ra_syntax::{AstNode, TextRange, TextSize};\n \n@@ -9,13 +10,12 @@ pub(crate) fn highlight_as_html(db: &RootDatabase, file_id: FileId, rainbow: boo\n     let parse = db.parse(file_id);\n \n     fn rainbowify(seed: u64) -> String {\n-        use rand::prelude::*;\n-        let mut rng = SmallRng::seed_from_u64(seed);\n+        let mut rng = Rand32::new(seed);\n         format!(\n             \"hsl({h},{s}%,{l}%)\",\n-            h = rng.gen_range::<u16, _, _>(0, 361),\n-            s = rng.gen_range::<u16, _, _>(42, 99),\n-            l = rng.gen_range::<u16, _, _>(40, 91),\n+            h = rng.rand_range(0..361),\n+            s = rng.rand_range(42..99),\n+            l = rng.rand_range(40..91),\n         )\n     }\n "}, {"sha": "401e87a73d3bc12d0e464d1f30b5caff9d03f59c", "filename": "crates/ra_ide/test_data/rainbow_highlighting.html", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/2e10f156c5de08431869e6c7d383888bcca4527e/crates%2Fra_ide%2Ftest_data%2Frainbow_highlighting.html", "raw_url": "https://github.com/rust-lang/rust/raw/2e10f156c5de08431869e6c7d383888bcca4527e/crates%2Fra_ide%2Ftest_data%2Frainbow_highlighting.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide%2Ftest_data%2Frainbow_highlighting.html?ref=2e10f156c5de08431869e6c7d383888bcca4527e", "patch": "@@ -36,14 +36,14 @@\n .unresolved_reference { color: #FC5555; text-decoration: wavy underline; }\n </style>\n <pre><code><span class=\"keyword\">fn</span> <span class=\"function declaration\">main</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"hello\"</span><span class=\"punctuation\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"2705725358298919760\" style=\"color: hsl(17,51%,74%);\">x</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"3365759661443752373\" style=\"color: hsl(127,76%,66%);\">y</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"hello\"</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"2705725358298919760\" style=\"color: hsl(76,47%,83%);\">x</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"3365759661443752373\" style=\"color: hsl(15,86%,51%);\">y</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n \n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(19,74%,76%);\">x</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"other color please!\"</span><span class=\"punctuation\">;</span>\n-    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"6717528807933952652\" style=\"color: hsl(85,49%,84%);\">y</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(19,74%,76%);\">x</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(127,71%,87%);\">x</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"other color please!\"</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"variable declaration\" data-binding-hash=\"6717528807933952652\" style=\"color: hsl(90,74%,79%);\">y</span> <span class=\"operator\">=</span> <span class=\"variable\" data-binding-hash=\"794745962933817518\" style=\"color: hsl(127,71%,87%);\">x</span><span class=\"punctuation\">.</span><span class=\"unresolved_reference\">to_string</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span><span class=\"punctuation\">;</span>\n <span class=\"punctuation\">}</span>\n \n <span class=\"keyword\">fn</span> <span class=\"function declaration\">bar</span><span class=\"punctuation\">(</span><span class=\"punctuation\">)</span> <span class=\"punctuation\">{</span>\n-    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(261,57%,61%);\">hello</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"hello\"</span><span class=\"punctuation\">;</span>\n+    <span class=\"keyword\">let</span> <span class=\"keyword\">mut</span> <span class=\"variable declaration mutable\" data-binding-hash=\"8121853618659664005\" style=\"color: hsl(273,88%,88%);\">hello</span> <span class=\"operator\">=</span> <span class=\"string_literal\">\"hello\"</span><span class=\"punctuation\">;</span>\n <span class=\"punctuation\">}</span></code></pre>\n\\ No newline at end of file"}, {"sha": "931fc61edd779bf305843fa8ab9b225d9b9b7a10", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/2e10f156c5de08431869e6c7d383888bcca4527e/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/2e10f156c5de08431869e6c7d383888bcca4527e/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=2e10f156c5de08431869e6c7d383888bcca4527e", "patch": "@@ -23,7 +23,7 @@ log = \"0.4.8\"\n lsp-types = { version = \"0.78.0\", features = [\"proposed\"] }\n parking_lot = \"0.11.0\"\n pico-args = \"0.3.1\"\n-rand = { version = \"0.7.3\", features = [\"small_rng\"] }\n+oorandom = \"11.1.2\"\n rustc-hash = \"1.1.0\"\n serde = { version = \"1.0.106\", features = [\"derive\"] }\n serde_json = \"1.0.48\""}, {"sha": "66d201ba66b5045476d612af700259d66a4b8a49", "filename": "crates/rust-analyzer/src/cli/analysis_stats.rs", "status": "modified", "additions": 20, "deletions": 5, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/2e10f156c5de08431869e6c7d383888bcca4527e/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e10f156c5de08431869e6c7d383888bcca4527e/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fanalysis_stats.rs?ref=2e10f156c5de08431869e6c7d383888bcca4527e", "patch": "@@ -1,7 +1,10 @@\n //! Fully type-check project and print various stats, like the number of type\n //! errors.\n \n-use std::{path::Path, time::Instant};\n+use std::{\n+    path::Path,\n+    time::{Instant, SystemTime, UNIX_EPOCH},\n+};\n \n use hir::{\n     db::{AstDatabase, DefDatabase, HirDatabase},\n@@ -10,12 +13,12 @@ use hir::{\n use hir_def::FunctionId;\n use hir_ty::{Ty, TypeWalk};\n use itertools::Itertools;\n+use oorandom::Rand32;\n use ra_db::{\n     salsa::{self, ParallelDatabase},\n     SourceDatabaseExt,\n };\n use ra_syntax::AstNode;\n-use rand::{seq::SliceRandom, thread_rng};\n use rayon::prelude::*;\n use rustc_hash::FxHashSet;\n use stdx::format_to;\n@@ -46,6 +49,11 @@ pub fn analysis_stats(\n     load_output_dirs: bool,\n     with_proc_macro: bool,\n ) -> Result<()> {\n+    let mut rng = {\n+        let seed = SystemTime::now().duration_since(UNIX_EPOCH).unwrap().as_millis() as u64;\n+        Rand32::new(seed)\n+    };\n+\n     let db_load_time = Instant::now();\n     let (host, vfs) = load_cargo(path, load_output_dirs, with_proc_macro)?;\n     let db = host.raw_database();\n@@ -57,7 +65,7 @@ pub fn analysis_stats(\n \n     let mut krates = Crate::all(db);\n     if randomize {\n-        krates.shuffle(&mut thread_rng());\n+        shuffle(&mut rng, &mut krates);\n     }\n     for krate in krates {\n         let module = krate.root_module(db).expect(\"crate without root module\");\n@@ -72,7 +80,7 @@ pub fn analysis_stats(\n     }\n \n     if randomize {\n-        visit_queue.shuffle(&mut thread_rng());\n+        shuffle(&mut rng, &mut visit_queue);\n     }\n \n     eprintln!(\"Crates in this dir: {}\", num_crates);\n@@ -110,7 +118,7 @@ pub fn analysis_stats(\n     );\n \n     if randomize {\n-        funcs.shuffle(&mut thread_rng());\n+        shuffle(&mut rng, &mut funcs);\n     }\n \n     let mut bar = match verbosity {\n@@ -306,3 +314,10 @@ pub fn analysis_stats(\n \n     Ok(())\n }\n+\n+fn shuffle<T>(rng: &mut Rand32, slice: &mut [T]) {\n+    for i in (1..slice.len()).rev() {\n+        let idx = rng.rand_range(0..i as u32) as usize;\n+        slice.swap(idx, i)\n+    }\n+}"}, {"sha": "d65a2acbca1dd3baf1240dab6f9089640dad3540", "filename": "xtask/tests/tidy.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2e10f156c5de08431869e6c7d383888bcca4527e/xtask%2Ftests%2Ftidy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e10f156c5de08431869e6c7d383888bcca4527e/xtask%2Ftests%2Ftidy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/xtask%2Ftests%2Ftidy.rs?ref=2e10f156c5de08431869e6c7d383888bcca4527e", "patch": "@@ -55,7 +55,6 @@ fn check_licenses() {\n 0BSD OR MIT OR Apache-2.0\n Apache-2.0 OR BSL-1.0\n Apache-2.0 OR MIT\n-Apache-2.0 WITH LLVM-exception OR Apache-2.0 OR MIT\n Apache-2.0/MIT\n BSD-2-Clause\n BSD-3-Clause"}]}