{"sha": "05de0d7c9fce57456ec095cae5cd94cf50a13eba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1ZGUwZDdjOWZjZTU3NDU2ZWMwOTVjYWU1Y2Q5NGNmNTBhMTNlYmE=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-11-01T18:20:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-11-01T18:20:21Z"}, "message": "Rollup merge of #65972 - braiins:vkr-arm-panicking, r=alexcrichton\n\nFix libunwind build: Define __LITTLE_ENDIAN__ for LE targets\n\nIf `__LITTLE_ENDIAN__` is missing, libunwind assumes big endian\nand reads unwinding instructions wrong on ARM EHABI.\n\nFix #65765\n\nTechnical background in referenced bug.\n\nI didn't run any automated tests, just built a simple panicking program using the fixed toolchain and panicking started to work. Tried with `catch_unwind()` and that seems to work now too. libunwind's log seems ok now, I can paste it if needed.", "tree": {"sha": "3d736b3a2e9e6b06ea7758561c93d6d216592f37", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d736b3a2e9e6b06ea7758561c93d6d216592f37"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05de0d7c9fce57456ec095cae5cd94cf50a13eba", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdvHdlCRBK7hj4Ov3rIwAAdHIIAA8ldyi+dCkwdg9ekI9XI+dJ\nO/oD9fD7xgqk/EPviAfZPF9AO/4oPkSyO17xklJLVtyXiLyp7oxNsHDIusg1Z6B2\n6smJWSy/QQyFkvDftSJXqr1mWNPPOl+7i9iFdPZ9f/GXyp+q73DhiTfSnlxYRyPQ\nbVkomavjJBDRXJJtixD+SAVbQyGYETVqQDralyQIbnDHdKSPRylLLnQOHXJ6lLtc\nZn+PsLbR1QcFdmnhN2X7+Yc5s8h1+wurBh/zQHZpCgGdWRSL5vpp3PFfegsnaTCC\nAqQ6bOQ3/hWTlO3rjU7Xfe3YcPWe6ONTCLqz7dOsEn7NqS9Gx2yE5GIgC2FL/1o=\n=0EB+\n-----END PGP SIGNATURE-----\n", "payload": "tree 3d736b3a2e9e6b06ea7758561c93d6d216592f37\nparent 9bf161384097aca7bfe8c106f167df28092b34b4\nparent e9e483653223597db7db8b60187d78252ec77886\nauthor Tyler Mandry <tmandry@gmail.com> 1572632421 -0700\ncommitter GitHub <noreply@github.com> 1572632421 -0700\n\nRollup merge of #65972 - braiins:vkr-arm-panicking, r=alexcrichton\n\nFix libunwind build: Define __LITTLE_ENDIAN__ for LE targets\n\nIf `__LITTLE_ENDIAN__` is missing, libunwind assumes big endian\nand reads unwinding instructions wrong on ARM EHABI.\n\nFix #65765\n\nTechnical background in referenced bug.\n\nI didn't run any automated tests, just built a simple panicking program using the fixed toolchain and panicking started to work. Tried with `catch_unwind()` and that seems to work now too. libunwind's log seems ok now, I can paste it if needed.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05de0d7c9fce57456ec095cae5cd94cf50a13eba", "html_url": "https://github.com/rust-lang/rust/commit/05de0d7c9fce57456ec095cae5cd94cf50a13eba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05de0d7c9fce57456ec095cae5cd94cf50a13eba/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9bf161384097aca7bfe8c106f167df28092b34b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/9bf161384097aca7bfe8c106f167df28092b34b4", "html_url": "https://github.com/rust-lang/rust/commit/9bf161384097aca7bfe8c106f167df28092b34b4"}, {"sha": "e9e483653223597db7db8b60187d78252ec77886", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9e483653223597db7db8b60187d78252ec77886", "html_url": "https://github.com/rust-lang/rust/commit/e9e483653223597db7db8b60187d78252ec77886"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "b8db16f8f2ac8dcfac2afa518dda66457ca3e75e", "filename": "src/libunwind/build.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/05de0d7c9fce57456ec095cae5cd94cf50a13eba/src%2Flibunwind%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05de0d7c9fce57456ec095cae5cd94cf50a13eba/src%2Flibunwind%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibunwind%2Fbuild.rs?ref=05de0d7c9fce57456ec095cae5cd94cf50a13eba", "patch": "@@ -56,12 +56,18 @@ mod llvm_libunwind {\n     pub fn compile() {\n         let target_env = env::var(\"CARGO_CFG_TARGET_ENV\").unwrap();\n         let target_vendor = env::var(\"CARGO_CFG_TARGET_VENDOR\").unwrap();\n+        let target_endian_little = env::var(\"CARGO_CFG_TARGET_ENDIAN\").unwrap() != \"big\";\n         let cfg = &mut cc::Build::new();\n \n         cfg.cpp(true);\n         cfg.cpp_set_stdlib(None);\n         cfg.warnings(false);\n \n+        // libunwind expects a __LITTLE_ENDIAN__ macro to be set for LE archs, cf. #65765\n+        if target_endian_little {\n+            cfg.define(\"__LITTLE_ENDIAN__\", Some(\"1\"));\n+        }\n+\n         if target_env == \"msvc\" {\n             // Don't pull in extra libraries on MSVC\n             cfg.flag(\"/Zl\");"}]}