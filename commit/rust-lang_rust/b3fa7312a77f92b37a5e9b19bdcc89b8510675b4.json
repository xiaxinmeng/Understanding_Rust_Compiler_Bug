{"sha": "b3fa7312a77f92b37a5e9b19bdcc89b8510675b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzZmE3MzEyYTc3ZjkyYjM3YTVlOWIxOWJkY2M4OWI4NTEwNjc1YjQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-12T17:01:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-03-12T17:01:36Z"}, "message": "Simpler deserialization", "tree": {"sha": "84e5bb3f1ffaa59ba6fe9768a9350bca6e2995c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84e5bb3f1ffaa59ba6fe9768a9350bca6e2995c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4", "html_url": "https://github.com/rust-lang/rust/commit/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fd3ece2b739b2e8d97626d6c5a6cb91b70df1071", "url": "https://api.github.com/repos/rust-lang/rust/commits/fd3ece2b739b2e8d97626d6c5a6cb91b70df1071", "html_url": "https://github.com/rust-lang/rust/commit/fd3ece2b739b2e8d97626d6c5a6cb91b70df1071"}], "stats": {"total": 66, "additions": 38, "deletions": 28}, "files": [{"sha": "084e17b040c90a6e249870aee22387aa50a68359", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=b3fa7312a77f92b37a5e9b19bdcc89b8510675b4", "patch": "@@ -7,8 +7,6 @@\n //! configure the server itself, feature flags are passed into analysis, and\n //! tweak things like automatic insertion of `()` in completions.\n \n-use crate::req::InlayConfigDef;\n-use ra_ide::InlayHintsOptions;\n use rustc_hash::FxHashMap;\n \n use ra_project_model::CargoFeatures;\n@@ -32,8 +30,11 @@ pub struct ServerConfig {\n \n     pub lru_capacity: Option<usize>,\n \n-    #[serde(with = \"InlayConfigDef\")]\n-    pub inlay_hints: InlayHintsOptions,\n+    #[serde(deserialize_with = \"nullable_bool_true\")]\n+    pub inlay_hints_type: bool,\n+    #[serde(deserialize_with = \"nullable_bool_true\")]\n+    pub inlay_hints_parameter: bool,\n+    pub inlay_hints_max_length: Option<usize>,\n \n     pub cargo_watch_enable: bool,\n     pub cargo_watch_args: Vec<String>,\n@@ -63,7 +64,9 @@ impl Default for ServerConfig {\n             exclude_globs: Vec::new(),\n             use_client_watching: false,\n             lru_capacity: None,\n-            inlay_hints: Default::default(),\n+            inlay_hints_type: true,\n+            inlay_hints_parameter: true,\n+            inlay_hints_max_length: None,\n             cargo_watch_enable: true,\n             cargo_watch_args: Vec::new(),\n             cargo_watch_command: \"check\".to_string(),"}, {"sha": "fd4657d7e507ceb66b58794c74ade680bc4cf944", "filename": "crates/rust-analyzer/src/conv.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4/crates%2Frust-analyzer%2Fsrc%2Fconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4/crates%2Frust-analyzer%2Fsrc%2Fconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconv.rs?ref=b3fa7312a77f92b37a5e9b19bdcc89b8510675b4", "patch": "@@ -11,8 +11,8 @@ use lsp_types::{\n use ra_ide::{\n     translate_offset_with_edit, CompletionItem, CompletionItemKind, FileId, FilePosition,\n     FileRange, FileSystemEdit, Fold, FoldKind, Highlight, HighlightModifier, HighlightTag,\n-    InsertTextFormat, LineCol, LineIndex, NavigationTarget, RangeInfo, ReferenceAccess, Severity,\n-    SourceChange, SourceFileEdit,\n+    InlayHint, InlayKind, InsertTextFormat, LineCol, LineIndex, NavigationTarget, RangeInfo,\n+    ReferenceAccess, Severity, SourceChange, SourceFileEdit,\n };\n use ra_syntax::{SyntaxKind, TextRange, TextUnit};\n use ra_text_edit::{AtomTextEdit, TextEdit};\n@@ -323,6 +323,20 @@ impl ConvWith<&FoldConvCtx<'_>> for Fold {\n     }\n }\n \n+impl ConvWith<&LineIndex> for InlayHint {\n+    type Output = req::InlayHint;\n+    fn conv_with(self, line_index: &LineIndex) -> Self::Output {\n+        req::InlayHint {\n+            label: self.label.to_string(),\n+            range: self.range.conv_with(line_index),\n+            kind: match self.kind {\n+                InlayKind::ParameterHint => req::InlayKind::ParameterHint,\n+                InlayKind::TypeHint => req::InlayKind::TypeHint,\n+            },\n+        }\n+    }\n+}\n+\n impl Conv for Highlight {\n     type Output = (u32, u32);\n "}, {"sha": "2b3b16d356be6cd3b03bd8d882b1d49b37a33daa", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=b3fa7312a77f92b37a5e9b19bdcc89b8510675b4", "patch": "@@ -18,7 +18,7 @@ use crossbeam_channel::{select, unbounded, RecvError, Sender};\n use lsp_server::{Connection, ErrorCode, Message, Notification, Request, RequestId, Response};\n use lsp_types::{ClientCapabilities, NumberOrString};\n use ra_cargo_watch::{url_from_path_with_drive_lowercasing, CheckOptions, CheckTask};\n-use ra_ide::{Canceled, FileId, LibraryData, SourceRootId};\n+use ra_ide::{Canceled, FileId, InlayHintsOptions, LibraryData, SourceRootId};\n use ra_prof::profile;\n use ra_vfs::{VfsFile, VfsTask, Watch};\n use relative_path::RelativePathBuf;\n@@ -177,7 +177,11 @@ pub fn main_loop(\n                     .and_then(|it| it.folding_range.as_ref())\n                     .and_then(|it| it.line_folding_only)\n                     .unwrap_or(false),\n-                inlay_hints: config.inlay_hints,\n+                inlay_hints: InlayHintsOptions {\n+                    type_hints: config.inlay_hints_type,\n+                    parameter_hints: config.inlay_hints_parameter,\n+                    max_length: config.inlay_hints_max_length,\n+                },\n                 cargo_watch: CheckOptions {\n                     enable: config.cargo_watch_enable,\n                     args: config.cargo_watch_args,"}, {"sha": "6482f3b771acd1980d67148fbf5f1b035356ef2a", "filename": "crates/rust-analyzer/src/main_loop/handlers.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=b3fa7312a77f92b37a5e9b19bdcc89b8510675b4", "patch": "@@ -999,11 +999,7 @@ pub fn handle_inlay_hints(\n     Ok(analysis\n         .inlay_hints(file_id, &world.options.inlay_hints)?\n         .into_iter()\n-        .map(|api_type| InlayHint {\n-            label: api_type.label.to_string(),\n-            range: api_type.range.conv_with(&line_index),\n-            kind: api_type.kind,\n-        })\n+        .map_conv_with(&line_index)\n         .collect())\n }\n "}, {"sha": "a3efe3b9feb5fbfa2bfa3c83b52558f1e1a6205c", "filename": "crates/rust-analyzer/src/req.rs", "status": "modified", "additions": 1, "deletions": 13, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4/crates%2Frust-analyzer%2Fsrc%2Freq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4/crates%2Frust-analyzer%2Fsrc%2Freq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Freq.rs?ref=b3fa7312a77f92b37a5e9b19bdcc89b8510675b4", "patch": "@@ -4,8 +4,6 @@ use lsp_types::{Location, Position, Range, TextDocumentIdentifier, Url};\n use rustc_hash::FxHashMap;\n use serde::{Deserialize, Serialize};\n \n-use ra_ide::{InlayHintsOptions, InlayKind};\n-\n pub use lsp_types::{\n     notification::*, request::*, ApplyWorkspaceEditParams, CodeActionParams, CodeLens,\n     CodeLensParams, CompletionParams, CompletionResponse, DiagnosticTag,\n@@ -198,24 +196,14 @@ pub struct InlayHintsParams {\n }\n \n #[derive(Debug, PartialEq, Eq, Deserialize, Serialize)]\n-#[serde(remote = \"InlayKind\")]\n-pub enum InlayKindDef {\n+pub enum InlayKind {\n     TypeHint,\n     ParameterHint,\n }\n \n-#[derive(Deserialize)]\n-#[serde(remote = \"InlayConfig\", rename_all = \"camelCase\")]\n-pub struct InlayConfigDef {\n-    pub type_hints: bool,\n-    pub parameter_hints: bool,\n-    pub max_length: Option<usize>,\n-}\n-\n #[derive(Debug, Deserialize, Serialize)]\n pub struct InlayHint {\n     pub range: Range,\n-    #[serde(with = \"InlayKindDef\")]\n     pub kind: InlayKind,\n     pub label: String,\n }"}, {"sha": "b2c830b309af72d8d8c86a7a41c3006fd3f8d0a2", "filename": "editors/code/src/client.ts", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4/editors%2Fcode%2Fsrc%2Fclient.ts", "raw_url": "https://github.com/rust-lang/rust/raw/b3fa7312a77f92b37a5e9b19bdcc89b8510675b4/editors%2Fcode%2Fsrc%2Fclient.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fclient.ts?ref=b3fa7312a77f92b37a5e9b19bdcc89b8510675b4", "patch": "@@ -29,11 +29,16 @@ export async function createClient(config: Config, serverPath: string): Promise<\n         initializationOptions: {\n             publishDecorations: !config.highlightingSemanticTokens,\n             lruCapacity: config.lruCapacity,\n-            inlayHints: config.inlayHints,\n+\n+            inlayHintsType: config.inlayHints.typeHints,\n+            inlayHintsParameter: config.inlayHints.parameterHints,\n+            inlayHintsMaxLength: config.inlayHints.maxLength,\n+\n             cargoWatchEnable: cargoWatchOpts.enable,\n             cargoWatchArgs: cargoWatchOpts.arguments,\n             cargoWatchCommand: cargoWatchOpts.command,\n             cargoWatchAllTargets: cargoWatchOpts.allTargets,\n+\n             excludeGlobs: config.excludeGlobs,\n             useClientWatching: config.useClientWatching,\n             featureFlags: config.featureFlags,"}]}