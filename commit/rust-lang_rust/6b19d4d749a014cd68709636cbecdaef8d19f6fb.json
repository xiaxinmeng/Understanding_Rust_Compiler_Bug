{"sha": "6b19d4d749a014cd68709636cbecdaef8d19f6fb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZiMTlkNGQ3NDlhMDE0Y2Q2ODcwOTYzNmNiZWNkYWVmOGQxOWY2ZmI=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2018-01-21T06:20:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-01-21T06:20:33Z"}, "message": "Merge pull request #2378 from kjvalencik/hard-tabs-overflow\n\nLineOverflow: Count tabs as tab_spaces when measuring line length for overflow", "tree": {"sha": "b5b7a9c6b3205d025aac1023a8218b9ce1f2029e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b5b7a9c6b3205d025aac1023a8218b9ce1f2029e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b19d4d749a014cd68709636cbecdaef8d19f6fb", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaZDExCRBK7hj4Ov3rIwAAdHIIAK2SiAVTRCvwZsy6yifZ/uUT\nBZT55G6BCT+JV0W3qz95dqyfIH5/MYqPH47Gxxo1vPwiR1MdGKOGMYtf1pul7HcR\na7IBi7FJO/vKTSMAci60E2i4XckIZkS/Ryeo6jnnISwft8YV6tiw0+wjwsyzgsVF\nmgE48gyPS5/RUlHNKUqS8nj1PThL4zucF2ib0BAFdjuKUYZ3G3Opz3NlAtLEWj7W\niwEAPvRIskJaUN2ZGwLtj9o0Z368yF+Br+vl1pUoEZjdT7sh0kMWOezdTLam3Jjg\nua8soN4on3C6LTs2CPnXntSFBvEt3sKHozasa7RsmC1DM4lgCD1TFAiQePVoYZY=\n=D0sV\n-----END PGP SIGNATURE-----\n", "payload": "tree b5b7a9c6b3205d025aac1023a8218b9ce1f2029e\nparent e0e3e22248cd14ebbe0253e9720261a0328bfc59\nparent 1fb172f98952e8f8a26115de219f46f5f889dbbd\nauthor Seiichi Uchida <seuchida@gmail.com> 1516515633 +0900\ncommitter GitHub <noreply@github.com> 1516515633 +0900\n\nMerge pull request #2378 from kjvalencik/hard-tabs-overflow\n\nLineOverflow: Count tabs as tab_spaces when measuring line length for overflow"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b19d4d749a014cd68709636cbecdaef8d19f6fb", "html_url": "https://github.com/rust-lang/rust/commit/6b19d4d749a014cd68709636cbecdaef8d19f6fb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b19d4d749a014cd68709636cbecdaef8d19f6fb/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0e3e22248cd14ebbe0253e9720261a0328bfc59", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0e3e22248cd14ebbe0253e9720261a0328bfc59", "html_url": "https://github.com/rust-lang/rust/commit/e0e3e22248cd14ebbe0253e9720261a0328bfc59"}, {"sha": "1fb172f98952e8f8a26115de219f46f5f889dbbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/1fb172f98952e8f8a26115de219f46f5f889dbbd", "html_url": "https://github.com/rust-lang/rust/commit/1fb172f98952e8f8a26115de219f46f5f889dbbd"}], "stats": {"total": 12, "additions": 11, "deletions": 1}, "files": [{"sha": "817188925cdb92c87238b94b3c9a2d351a2ad246", "filename": "src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6b19d4d749a014cd68709636cbecdaef8d19f6fb/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b19d4d749a014cd68709636cbecdaef8d19f6fb/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=6b19d4d749a014cd68709636cbecdaef8d19f6fb", "patch": "@@ -463,7 +463,7 @@ fn format_lines(\n             is_string = false;\n         } else {\n             newline_count = 0;\n-            line_len += 1;\n+            line_len += if c == '\\t' { config.tab_spaces() } else { 1 };\n             if c.is_whitespace() {\n                 if last_wspace.is_none() {\n                     last_wspace = Some(b);"}, {"sha": "24a6b15e421a5ea7d8953d48e07c5e2474ec933b", "filename": "tests/system.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6b19d4d749a014cd68709636cbecdaef8d19f6fb/tests%2Fsystem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b19d4d749a014cd68709636cbecdaef8d19f6fb/tests%2Fsystem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsystem.rs?ref=6b19d4d749a014cd68709636cbecdaef8d19f6fb", "patch": "@@ -261,6 +261,16 @@ fn format_lines_errors_are_reported() {\n     assert!(error_summary.has_formatting_errors());\n }\n \n+#[test]\n+fn format_lines_errors_are_reported_with_tabs() {\n+    let long_identifier = String::from_utf8(vec![b'a'; 97]).unwrap();\n+    let input = Input::Text(format!(\"fn a() {{\\n\\t{}\\n}}\", long_identifier));\n+    let config = Config::from_toml(\"hard_tabs = true\").unwrap();\n+    let (error_summary, _file_map, _report) =\n+        format_input::<io::Stdout>(input, &config, None).unwrap();\n+    assert!(error_summary.has_formatting_errors());\n+}\n+\n // For each file, run rustfmt and collect the output.\n // Returns the number of files checked and the number of failures.\n fn check_files(files: Vec<PathBuf>) -> (Vec<FormatReport>, u32, u32) {"}]}