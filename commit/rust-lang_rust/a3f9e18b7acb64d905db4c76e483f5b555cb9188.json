{"sha": "a3f9e18b7acb64d905db4c76e483f5b555cb9188", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzZjllMThiN2FjYjY0ZDkwNWRiNGM3NmU0ODNmNWI1NTVjYjkxODg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-07T22:54:59Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-07T22:55:33Z"}, "message": "libsyntax: Allow users of the visitor to visit struct defs", "tree": {"sha": "303e82f7aed261dd5b21be469dbdffa87485367b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/303e82f7aed261dd5b21be469dbdffa87485367b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3f9e18b7acb64d905db4c76e483f5b555cb9188", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3f9e18b7acb64d905db4c76e483f5b555cb9188", "html_url": "https://github.com/rust-lang/rust/commit/a3f9e18b7acb64d905db4c76e483f5b555cb9188", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3f9e18b7acb64d905db4c76e483f5b555cb9188/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "deaef48675c34f3a63ded090058dfe6cbe60c3c6", "url": "https://api.github.com/repos/rust-lang/rust/commits/deaef48675c34f3a63ded090058dfe6cbe60c3c6", "html_url": "https://github.com/rust-lang/rust/commit/deaef48675c34f3a63ded090058dfe6cbe60c3c6"}], "stats": {"total": 48, "additions": 35, "deletions": 13}, "files": [{"sha": "caaf6cca5b135368cb0ab3200f1061923bfca04e", "filename": "src/libsyntax/ast_util.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a3f9e18b7acb64d905db4c76e483f5b555cb9188/src%2Flibsyntax%2Fast_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3f9e18b7acb64d905db4c76e483f5b555cb9188/src%2Flibsyntax%2Fast_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_util.rs?ref=a3f9e18b7acb64d905db4c76e483f5b555cb9188", "patch": "@@ -565,6 +565,10 @@ fn id_visitor(vfn: fn@(node_id)) -> visit::vt<()> {\n         visit_trait_method: fn@(_ty_m: trait_method) {\n         },\n \n+        visit_struct_def: fn@(_sd: struct_def, _id: ident, _tps: ~[ty_param],\n+                              _id: node_id) {\n+        },\n+\n         visit_class_item: fn@(c: @class_member) {\n             match c.node {\n               instance_var(_, _, _, id,_) => vfn(id),"}, {"sha": "7268a5c5d316c81efea469c107d30ce7fed08ddb", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 31, "deletions": 13, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/a3f9e18b7acb64d905db4c76e483f5b555cb9188/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3f9e18b7acb64d905db4c76e483f5b555cb9188/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=a3f9e18b7acb64d905db4c76e483f5b555cb9188", "patch": "@@ -61,6 +61,8 @@ type visitor<E> =\n       visit_fn: fn@(fn_kind, fn_decl, blk, span, node_id, E, vt<E>),\n       visit_ty_method: fn@(ty_method, E, vt<E>),\n       visit_trait_method: fn@(trait_method, E, vt<E>),\n+      visit_struct_def: fn@(struct_def, ident, ~[ty_param], node_id, E,\n+                            vt<E>),\n       visit_class_item: fn@(@class_member, E, vt<E>)};\n \n fn default_visitor<E>() -> visitor<E> {\n@@ -81,6 +83,8 @@ fn default_visitor<E>() -> visitor<E> {\n           visit_fn: |a,b,c,d,e,f,g|visit_fn::<E>(a, b, c, d, e, f, g),\n           visit_ty_method: |a,b,c|visit_ty_method::<E>(a, b, c),\n           visit_trait_method: |a,b,c|visit_trait_method::<E>(a, b, c),\n+          visit_struct_def:\n+            |a,b,c,d,e,f|visit_struct_def::<E>(a, b, c, d, e, f),\n           visit_class_item: |a,b,c|visit_class_item::<E>(a, b, c)};\n }\n \n@@ -153,19 +157,8 @@ fn visit_item<E>(i: @item, e: E, v: vt<E>) {\n         }\n       }\n       item_class(struct_def, tps) => {\n-          v.visit_ty_params(tps, e, v);\n-          for struct_def.members.each |m| {\n-             v.visit_class_item(m, e, v);\n-          }\n-          for struct_def.traits.each |p| { visit_path(p.path, e, v); }\n-          do option::iter(struct_def.ctor) |ctor| {\n-            visit_class_ctor_helper(ctor, i.ident, tps,\n-                                    ast_util::local_def(i.id), e, v);\n-          };\n-          do option::iter(struct_def.dtor) |dtor| {\n-            visit_class_dtor_helper(dtor, tps,\n-                                    ast_util::local_def(i.id), e, v)\n-          };\n+        v.visit_ty_params(tps, e, v);\n+        v.visit_struct_def(struct_def, i.ident, tps, i.id, e, v);\n       }\n       item_trait(tps, traits, methods) => {\n         v.visit_ty_params(tps, e, v);\n@@ -325,6 +318,20 @@ fn visit_trait_method<E>(m: trait_method, e: E, v: vt<E>) {\n     }\n }\n \n+fn visit_struct_def<E>(sd: struct_def, nm: ast::ident, tps: ~[ty_param],\n+                       id: node_id, e: E, v: vt<E>) {\n+    for sd.members.each |m| {\n+       v.visit_class_item(m, e, v);\n+    }\n+    for sd.traits.each |p| { visit_path(p.path, e, v); }\n+    do option::iter(sd.ctor) |ctor| {\n+      visit_class_ctor_helper(ctor, nm, tps, ast_util::local_def(id), e, v);\n+    };\n+    do option::iter(sd.dtor) |dtor| {\n+      visit_class_dtor_helper(dtor, tps, ast_util::local_def(id), e, v)\n+    };\n+}\n+\n fn visit_block<E>(b: ast::blk, e: E, v: vt<E>) {\n     for b.node.view_items.each |vi| { v.visit_view_item(vi, e, v); }\n     for b.node.stmts.each |s| { v.visit_stmt(s, e, v); }\n@@ -472,6 +479,7 @@ type simple_visitor =\n       visit_fn: fn@(fn_kind, fn_decl, blk, span, node_id),\n       visit_ty_method: fn@(ty_method),\n       visit_trait_method: fn@(trait_method),\n+      visit_struct_def: fn@(struct_def, ident, ~[ty_param], node_id),\n       visit_class_item: fn@(@class_member)};\n \n fn simple_ignore_ty(_t: @ty) {}\n@@ -495,6 +503,8 @@ fn default_simple_visitor() -> simple_visitor {\n                         _id: node_id) { },\n           visit_ty_method: fn@(_m: ty_method) { },\n           visit_trait_method: fn@(_m: trait_method) { },\n+          visit_struct_def: fn@(_sd: struct_def, _nm: ident,\n+                                _tps: ~[ty_param], _id: node_id) { },\n           visit_class_item: fn@(_c: @class_member) {}\n          };\n }\n@@ -562,6 +572,12 @@ fn mk_simple_visitor(v: simple_visitor) -> vt<()> {\n         f(m);\n         visit_trait_method(m, e, v);\n     }\n+    fn v_struct_def(f: fn@(struct_def, ident, ~[ty_param], node_id),\n+                    sd: struct_def, nm: ident, tps: ~[ty_param], id: node_id,\n+                    &&e: (), v: vt<()>) {\n+        f(sd, nm, tps, id);\n+        visit_struct_def(sd, nm, tps, id, e, v);\n+    }\n     fn v_ty_params(f: fn@(~[ty_param]),\n                    ps: ~[ty_param],\n                    &&e: (), v: vt<()>) {\n@@ -609,6 +625,8 @@ fn mk_simple_visitor(v: simple_visitor) -> vt<()> {\n                     v_ty_method(v.visit_ty_method, a, b, c),\n                 visit_trait_method: |a,b,c|\n                     v_trait_method(v.visit_trait_method, a, b, c),\n+                visit_struct_def: |a,b,c,d,e,f|\n+                    v_struct_def(v.visit_struct_def, a, b, c, d, e, f),\n                 visit_class_item: |a,b,c|\n                     v_class_item(v.visit_class_item, a, b, c)\n                });"}]}