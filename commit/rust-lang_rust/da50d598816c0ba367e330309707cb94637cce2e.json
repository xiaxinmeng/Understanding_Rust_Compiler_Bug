{"sha": "da50d598816c0ba367e330309707cb94637cce2e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNTBkNTk4ODE2YzBiYTM2N2UzMzAzMDk3MDdjYjk0NjM3Y2NlMmU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-10T23:01:45Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-11T09:07:35Z"}, "message": "pretty-print: Do not lose the `$crate` printing flag in `print_tt`", "tree": {"sha": "079eac93228859aad46b4df53a6ba24daed59eea", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/079eac93228859aad46b4df53a6ba24daed59eea"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da50d598816c0ba367e330309707cb94637cce2e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da50d598816c0ba367e330309707cb94637cce2e", "html_url": "https://github.com/rust-lang/rust/commit/da50d598816c0ba367e330309707cb94637cce2e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da50d598816c0ba367e330309707cb94637cce2e/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69070058cd2fdb57ebbbbef94892cfb5688ce27f", "url": "https://api.github.com/repos/rust-lang/rust/commits/69070058cd2fdb57ebbbbef94892cfb5688ce27f", "html_url": "https://github.com/rust-lang/rust/commit/69070058cd2fdb57ebbbbef94892cfb5688ce27f"}], "stats": {"total": 40, "additions": 29, "deletions": 11}, "files": [{"sha": "8623399c587b83e844239bf170735996fc1a6237", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da50d598816c0ba367e330309707cb94637cce2e/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da50d598816c0ba367e330309707cb94637cce2e/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=da50d598816c0ba367e330309707cb94637cce2e", "patch": "@@ -689,7 +689,7 @@ pub trait PrintState<'a>: std::ops::Deref<Target=pp::Printer> + std::ops::DerefM\n             TokenTree::Delimited(_, delim, tts) => {\n                 self.word(token_kind_to_string(&token::OpenDelim(delim)));\n                 self.space();\n-                self.print_tts(tts);\n+                self.print_tts(tts, convert_dollar_crate);\n                 self.space();\n                 self.word(token_kind_to_string(&token::CloseDelim(delim)))\n             },"}, {"sha": "bbe6a48c5b18600e2d50adb0636e288207b504fa", "filename": "src/test/ui/macros/auxiliary/dollar-crate-nested-encoding.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/da50d598816c0ba367e330309707cb94637cce2e/src%2Ftest%2Fui%2Fmacros%2Fauxiliary%2Fdollar-crate-nested-encoding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da50d598816c0ba367e330309707cb94637cce2e/src%2Ftest%2Fui%2Fmacros%2Fauxiliary%2Fdollar-crate-nested-encoding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fauxiliary%2Fdollar-crate-nested-encoding.rs?ref=da50d598816c0ba367e330309707cb94637cce2e", "patch": "@@ -0,0 +1,10 @@\n+pub type S = u8;\n+\n+macro_rules! generate_exported { () => {\n+    #[macro_export]\n+    macro_rules! exported {\n+        () => ($crate::S)\n+    }\n+}}\n+\n+generate_exported!();"}, {"sha": "5242f7830bbdb5cc1c510a638c18b8e5144a8cea", "filename": "src/test/ui/macros/dollar-crate-nested-encoding.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/da50d598816c0ba367e330309707cb94637cce2e/src%2Ftest%2Fui%2Fmacros%2Fdollar-crate-nested-encoding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da50d598816c0ba367e330309707cb94637cce2e/src%2Ftest%2Fui%2Fmacros%2Fdollar-crate-nested-encoding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fdollar-crate-nested-encoding.rs?ref=da50d598816c0ba367e330309707cb94637cce2e", "patch": "@@ -0,0 +1,8 @@\n+// check-pass\n+// aux-build:dollar-crate-nested-encoding.rs\n+\n+extern crate dollar_crate_nested_encoding;\n+\n+type A = dollar_crate_nested_encoding::exported!();\n+\n+fn main() {}"}, {"sha": "0611fcb13f267dc17f471345ce1976df45be51b0", "filename": "src/test/ui/proc-macro/dollar-crate-issue-57089.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/da50d598816c0ba367e330309707cb94637cce2e/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-57089.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/da50d598816c0ba367e330309707cb94637cce2e/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-57089.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-57089.stdout?ref=da50d598816c0ba367e330309707cb94637cce2e", "patch": "@@ -1,4 +1,4 @@\n-PRINT-BANG INPUT (DISPLAY): struct M ( crate :: S ) ;\n+PRINT-BANG INPUT (DISPLAY): struct M ( $crate :: S ) ;\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n@@ -39,7 +39,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): struct A(crate::S);\n-PRINT-ATTR RE-COLLECTED (DISPLAY): struct A ( crate :: S ) ;\n+PRINT-ATTR RE-COLLECTED (DISPLAY): struct A ( $crate :: S ) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\","}, {"sha": "6c483d7a91bbab5a35fdc9d2bfe0464c766a98c6", "filename": "src/test/ui/proc-macro/dollar-crate-issue-62325.stdout", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/da50d598816c0ba367e330309707cb94637cce2e/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-62325.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/da50d598816c0ba367e330309707cb94637cce2e/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-62325.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate-issue-62325.stdout?ref=da50d598816c0ba367e330309707cb94637cce2e", "patch": "@@ -1,5 +1,5 @@\n PRINT-ATTR INPUT (DISPLAY): struct A(identity!(crate :: S));\n-PRINT-ATTR RE-COLLECTED (DISPLAY): struct A ( identity ! ( crate :: S ) ) ;\n+PRINT-ATTR RE-COLLECTED (DISPLAY): struct A ( identity ! ( $crate :: S ) ) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n@@ -55,7 +55,7 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): struct B(identity!(::dollar_crate_external :: S));\n-PRINT-ATTR RE-COLLECTED (DISPLAY): struct B ( identity ! ( ::dollar_crate_external :: S ) ) ;\n+PRINT-ATTR RE-COLLECTED (DISPLAY): struct B ( identity ! ( $crate :: S ) ) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\","}, {"sha": "3c88ee99842a26e27f2e717fc08ce453e0372c4d", "filename": "src/test/ui/proc-macro/dollar-crate.stdout", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/da50d598816c0ba367e330309707cb94637cce2e/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate.stdout", "raw_url": "https://github.com/rust-lang/rust/raw/da50d598816c0ba367e330309707cb94637cce2e/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate.stdout", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fdollar-crate.stdout?ref=da50d598816c0ba367e330309707cb94637cce2e", "patch": "@@ -1,4 +1,4 @@\n-PRINT-BANG INPUT (DISPLAY): struct M ( crate :: S ) ;\n+PRINT-BANG INPUT (DISPLAY): struct M ( $crate :: S ) ;\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n@@ -39,7 +39,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): struct A(crate::S);\n-PRINT-ATTR RE-COLLECTED (DISPLAY): struct A ( crate :: S ) ;\n+PRINT-ATTR RE-COLLECTED (DISPLAY): struct A ( $crate :: S ) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n@@ -80,7 +80,7 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): struct D(crate::S);\n-PRINT-DERIVE RE-COLLECTED (DISPLAY): struct D ( crate :: S ) ;\n+PRINT-DERIVE RE-COLLECTED (DISPLAY): struct D ( $crate :: S ) ;\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n@@ -120,7 +120,7 @@ PRINT-DERIVE INPUT (DEBUG): TokenStream [\n         span: #2 bytes(LO..HI),\n     },\n ]\n-PRINT-BANG INPUT (DISPLAY): struct M ( ::dollar_crate_external :: S ) ;\n+PRINT-BANG INPUT (DISPLAY): struct M ( $crate :: S ) ;\n PRINT-BANG INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n@@ -161,7 +161,7 @@ PRINT-BANG INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-ATTR INPUT (DISPLAY): struct A(::dollar_crate_external::S);\n-PRINT-ATTR RE-COLLECTED (DISPLAY): struct A ( ::dollar_crate_external :: S ) ;\n+PRINT-ATTR RE-COLLECTED (DISPLAY): struct A ( $crate :: S ) ;\n PRINT-ATTR INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\",\n@@ -202,7 +202,7 @@ PRINT-ATTR INPUT (DEBUG): TokenStream [\n     },\n ]\n PRINT-DERIVE INPUT (DISPLAY): struct D(::dollar_crate_external::S);\n-PRINT-DERIVE RE-COLLECTED (DISPLAY): struct D ( ::dollar_crate_external :: S ) ;\n+PRINT-DERIVE RE-COLLECTED (DISPLAY): struct D ( $crate :: S ) ;\n PRINT-DERIVE INPUT (DEBUG): TokenStream [\n     Ident {\n         ident: \"struct\","}]}