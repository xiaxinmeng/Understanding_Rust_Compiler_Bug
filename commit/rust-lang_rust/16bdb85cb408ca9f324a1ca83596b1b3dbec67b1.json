{"sha": "16bdb85cb408ca9f324a1ca83596b1b3dbec67b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2YmRiODVjYjQwOGNhOWYzMjRhMWNhODM1OTZiMWIzZGJlYzY3YjE=", "commit": {"author": {"name": "David Rajchenbach-Teller", "email": "dteller@mozilla.com", "date": "2011-11-07T13:46:02Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-11-07T20:04:16Z"}, "message": "[Parser] parser.rs: Made two error messages less ambiguous", "tree": {"sha": "c7f7082c7324e1d95e97f637b8b55387858686fa", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7f7082c7324e1d95e97f637b8b55387858686fa"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16bdb85cb408ca9f324a1ca83596b1b3dbec67b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16bdb85cb408ca9f324a1ca83596b1b3dbec67b1", "html_url": "https://github.com/rust-lang/rust/commit/16bdb85cb408ca9f324a1ca83596b1b3dbec67b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16bdb85cb408ca9f324a1ca83596b1b3dbec67b1/comments", "author": {"login": "Yoric", "id": 10190, "node_id": "MDQ6VXNlcjEwMTkw", "avatar_url": "https://avatars.githubusercontent.com/u/10190?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Yoric", "html_url": "https://github.com/Yoric", "followers_url": "https://api.github.com/users/Yoric/followers", "following_url": "https://api.github.com/users/Yoric/following{/other_user}", "gists_url": "https://api.github.com/users/Yoric/gists{/gist_id}", "starred_url": "https://api.github.com/users/Yoric/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Yoric/subscriptions", "organizations_url": "https://api.github.com/users/Yoric/orgs", "repos_url": "https://api.github.com/users/Yoric/repos", "events_url": "https://api.github.com/users/Yoric/events{/privacy}", "received_events_url": "https://api.github.com/users/Yoric/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "852e789e789b424f70614869d89f2611dae2002d", "url": "https://api.github.com/repos/rust-lang/rust/commits/852e789e789b424f70614869d89f2611dae2002d", "html_url": "https://github.com/rust-lang/rust/commit/852e789e789b424f70614869d89f2611dae2002d"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "f859300f3eaddb6bd043bf881d255e8348d62a0c", "filename": "src/comp/syntax/parse/parser.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/16bdb85cb408ca9f324a1ca83596b1b3dbec67b1/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16bdb85cb408ca9f324a1ca83596b1b3dbec67b1/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fparse%2Fparser.rs?ref=16bdb85cb408ca9f324a1ca83596b1b3dbec67b1", "patch": "@@ -1268,7 +1268,9 @@ fn parse_if_expr_1(p: parser) ->\n         hi = elexpr.span.hi;\n     } else if !option::is_none(thn.node.expr) {\n         let sp = option::get(thn.node.expr).span;\n-        p.span_fatal(sp, \"if without else can not return a value\");\n+        p.span_fatal(sp, \"`if` without `else` can not produce a result\");\n+        //TODO: If a suggestion mechanism appears, suggest that the\n+        //user may have forgotten a ';'\n     }\n     ret {cond: cond, then: thn, els: els, lo: lo, hi: hi};\n }\n@@ -1679,7 +1681,9 @@ fn parse_block_no_value(p: parser) -> ast::blk {\n     let blk = parse_block(p);\n     if !option::is_none(blk.node.expr) {\n         let sp = option::get(blk.node.expr).span;\n-        p.span_fatal(sp, \"this block must not return a value\");\n+        p.span_fatal(sp, \"this block must not have a result\");\n+        //TODO: If a suggestion mechanism appears, suggest that the\n+        //user may have forgotten a ';'\n     }\n     ret blk;\n }"}]}