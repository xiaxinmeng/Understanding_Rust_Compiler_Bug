{"sha": "d73e374ddbf66489c0565566d26e659e6ff80c2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3M2UzNzRkZGJmNjY0ODljMDU2NTU2NmQyNmU2NTllNmZmODBjMmM=", "commit": {"author": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2016-08-27T14:16:17Z"}, "committer": {"name": "Ahmed Charles", "email": "acharles@outlook.com", "date": "2016-09-11T23:02:43Z"}, "message": "Use question_mark feature in libserialize.", "tree": {"sha": "5d8008ce134fe2c7144925fee0adf2f066e13a33", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5d8008ce134fe2c7144925fee0adf2f066e13a33"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d73e374ddbf66489c0565566d26e659e6ff80c2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d73e374ddbf66489c0565566d26e659e6ff80c2c", "html_url": "https://github.com/rust-lang/rust/commit/d73e374ddbf66489c0565566d26e659e6ff80c2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d73e374ddbf66489c0565566d26e659e6ff80c2c/comments", "author": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ahmedcharles", "id": 3112514, "node_id": "MDQ6VXNlcjMxMTI1MTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3112514?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ahmedcharles", "html_url": "https://github.com/ahmedcharles", "followers_url": "https://api.github.com/users/ahmedcharles/followers", "following_url": "https://api.github.com/users/ahmedcharles/following{/other_user}", "gists_url": "https://api.github.com/users/ahmedcharles/gists{/gist_id}", "starred_url": "https://api.github.com/users/ahmedcharles/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ahmedcharles/subscriptions", "organizations_url": "https://api.github.com/users/ahmedcharles/orgs", "repos_url": "https://api.github.com/users/ahmedcharles/repos", "events_url": "https://api.github.com/users/ahmedcharles/events{/privacy}", "received_events_url": "https://api.github.com/users/ahmedcharles/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "14d3937e659b383a32ec9c90e5805386150c0054", "url": "https://api.github.com/repos/rust-lang/rust/commits/14d3937e659b383a32ec9c90e5805386150c0054", "html_url": "https://github.com/rust-lang/rust/commit/14d3937e659b383a32ec9c90e5805386150c0054"}], "stats": {"total": 19, "additions": 9, "deletions": 10}, "files": [{"sha": "6ccc0be41bc0f7f3c0f23df423adafed0312efcb", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 5, "deletions": 6, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d73e374ddbf66489c0565566d26e659e6ff80c2c/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d73e374ddbf66489c0565566d26e659e6ff80c2c/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=d73e374ddbf66489c0565566d26e659e6ff80c2c", "patch": "@@ -475,15 +475,14 @@ impl<'a> Encoder<'a> {\n }\n \n macro_rules! emit_enquoted_if_mapkey {\n-    ($enc:ident,$e:expr) => {\n+    ($enc:ident,$e:expr) => ({\n         if $enc.is_emitting_map_key {\n-            try!(write!($enc.writer, \"\\\"{}\\\"\", $e));\n-            Ok(())\n+            write!($enc.writer, \"\\\"{}\\\"\", $e)?;\n         } else {\n-            try!(write!($enc.writer, \"{}\", $e));\n-            Ok(())\n+            write!($enc.writer, \"{}\", $e)?;\n         }\n-    }\n+        Ok(())\n+    })\n }\n \n impl<'a> ::Encoder for Encoder<'a> {"}, {"sha": "8e271597dfcb6dd31c7b341c4632cf19d0bbbc7d", "filename": "src/libserialize/serialize.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/d73e374ddbf66489c0565566d26e659e6ff80c2c/src%2Flibserialize%2Fserialize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d73e374ddbf66489c0565566d26e659e6ff80c2c/src%2Flibserialize%2Fserialize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fserialize.rs?ref=d73e374ddbf66489c0565566d26e659e6ff80c2c", "patch": "@@ -511,10 +511,10 @@ macro_rules! tuple {\n                 let len: usize = count_idents!($($name,)*);\n                 d.read_tuple(len, |d| {\n                     let mut i = 0;\n-                    let ret = ($(try!(d.read_tuple_arg({ i+=1; i-1 },\n-                                                       |d| -> Result<$name,D::Error> {\n+                    let ret = ($(d.read_tuple_arg({ i+=1; i-1 },\n+                                                  |d| -> Result<$name,D::Error> {\n                         Decodable::decode(d)\n-                    })),)*);\n+                    })?,)*);\n                     Ok(ret)\n                 })\n             }\n@@ -527,7 +527,7 @@ macro_rules! tuple {\n                 $(let $name = $name; n += 1;)*\n                 s.emit_tuple(n, |s| {\n                     let mut i = 0;\n-                    $(try!(s.emit_tuple_arg({ i+=1; i-1 }, |s| $name.encode(s)));)*\n+                    $(s.emit_tuple_arg({ i+=1; i-1 }, |s| $name.encode(s))?;)*\n                     Ok(())\n                 })\n             }"}]}