{"sha": "0ff115c507524c9c3b50a84365f1a5e4c115eedd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmZjExNWM1MDc1MjRjOWMzYjUwYTg0MzY1ZjFhNWU0YzExNWVlZGQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2016-10-11T15:51:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2016-10-11T15:51:26Z"}, "message": "Rollup merge of #37040 - flodiebold:hash-tests, r=michaelwoerister\n\nIncr. comp. hash tests for consts and statics\n\nHi,\n\nThese two commits fix #37000 and #37001.\n\nr? @michaelwoerister", "tree": {"sha": "79f4b27f382752962c10a0452a511bce8ba36b5c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/79f4b27f382752962c10a0452a511bce8ba36b5c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0ff115c507524c9c3b50a84365f1a5e4c115eedd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0ff115c507524c9c3b50a84365f1a5e4c115eedd", "html_url": "https://github.com/rust-lang/rust/commit/0ff115c507524c9c3b50a84365f1a5e4c115eedd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0ff115c507524c9c3b50a84365f1a5e4c115eedd/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "97e9eac8bf3b791cdc3cd0a97fa17a802286373f", "url": "https://api.github.com/repos/rust-lang/rust/commits/97e9eac8bf3b791cdc3cd0a97fa17a802286373f", "html_url": "https://github.com/rust-lang/rust/commit/97e9eac8bf3b791cdc3cd0a97fa17a802286373f"}, {"sha": "eb07a6cfd04144bf76104226cd37647e9c35d9fa", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb07a6cfd04144bf76104226cd37647e9c35d9fa", "html_url": "https://github.com/rust-lang/rust/commit/eb07a6cfd04144bf76104226cd37647e9c35d9fa"}], "stats": {"total": 317, "additions": 317, "deletions": 0}, "files": [{"sha": "10c02d84b385e7105723652a177694a4c6700e13", "filename": "src/test/incremental/hashes/consts.rs", "status": "added", "additions": 132, "deletions": 0, "changes": 132, "blob_url": "https://github.com/rust-lang/rust/blob/0ff115c507524c9c3b50a84365f1a5e4c115eedd/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ff115c507524c9c3b50a84365f1a5e4c115eedd/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fconsts.rs?ref=0ff115c507524c9c3b50a84365f1a5e4c115eedd", "patch": "@@ -0,0 +1,132 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+// This test case tests the incremental compilation hash (ICH) implementation\n+// for consts.\n+\n+// The general pattern followed here is: Change one thing between rev1 and rev2\n+// and make sure that the hash has changed, then change nothing between rev2 and\n+// rev3 and make sure that the hash has not changed.\n+\n+// must-compile-successfully\n+// revisions: cfail1 cfail2 cfail3\n+// compile-flags: -Z query-dep-graph\n+\n+#![allow(warnings)]\n+#![feature(rustc_attrs)]\n+#![crate_type=\"rlib\"]\n+\n+\n+// Change const visibility ---------------------------------------------------\n+#[cfg(cfail1)]\n+const CONST_VISIBILITY: u8 = 0;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub const CONST_VISIBILITY: u8 = 0;\n+\n+\n+// Change type from i32 to u32 ------------------------------------------------\n+#[cfg(cfail1)]\n+const CONST_CHANGE_TYPE_1: i32 = 0;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+const CONST_CHANGE_TYPE_1: u32 = 0;\n+\n+\n+// Change type from Option<u32> to Option<u64> --------------------------------\n+#[cfg(cfail1)]\n+const CONST_CHANGE_TYPE_2: Option<u32> = None;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+const CONST_CHANGE_TYPE_2: Option<u64> = None;\n+\n+\n+// Change value between simple literals ---------------------------------------\n+#[cfg(cfail1)]\n+const CONST_CHANGE_VALUE_1: i16 = 1;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+const CONST_CHANGE_VALUE_1: i16 = 2;\n+\n+\n+// Change value between expressions -------------------------------------------\n+#[cfg(cfail1)]\n+const CONST_CHANGE_VALUE_2: i16 = 1 + 1;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+const CONST_CHANGE_VALUE_2: i16 = 1 + 2;\n+\n+\n+#[cfg(cfail1)]\n+const CONST_CHANGE_VALUE_3: i16 = 2 + 3;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+const CONST_CHANGE_VALUE_3: i16 = 2 * 3;\n+\n+\n+#[cfg(cfail1)]\n+const CONST_CHANGE_VALUE_4: i16 = 1 + 2 * 3;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+const CONST_CHANGE_VALUE_4: i16 = 1 + 2 * 4;\n+\n+\n+// Change type indirectly -----------------------------------------------------\n+struct ReferencedType1;\n+struct ReferencedType2;\n+\n+mod const_change_type_indirectly {\n+    #[cfg(cfail1)]\n+    use super::ReferencedType1 as Type;\n+\n+    #[cfg(not(cfail1))]\n+    use super::ReferencedType2 as Type;\n+\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    const CONST_CHANGE_TYPE_INDIRECTLY_1: Type = Type;\n+\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    const CONST_CHANGE_TYPE_INDIRECTLY_2: Option<Type> = None;\n+}"}, {"sha": "ac67e4349013a8cad20e453dceaaee3ea1673572", "filename": "src/test/incremental/hashes/statics.rs", "status": "added", "additions": 185, "deletions": 0, "changes": 185, "blob_url": "https://github.com/rust-lang/rust/blob/0ff115c507524c9c3b50a84365f1a5e4c115eedd/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0ff115c507524c9c3b50a84365f1a5e4c115eedd/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fhashes%2Fstatics.rs?ref=0ff115c507524c9c3b50a84365f1a5e4c115eedd", "patch": "@@ -0,0 +1,185 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+// This test case tests the incremental compilation hash (ICH) implementation\n+// for statics.\n+\n+// The general pattern followed here is: Change one thing between rev1 and rev2\n+// and make sure that the hash has changed, then change nothing between rev2 and\n+// rev3 and make sure that the hash has not changed.\n+\n+// must-compile-successfully\n+// revisions: cfail1 cfail2 cfail3\n+// compile-flags: -Z query-dep-graph\n+\n+#![allow(warnings)]\n+#![feature(rustc_attrs)]\n+#![feature(linkage)]\n+#![feature(thread_local)]\n+#![crate_type=\"rlib\"]\n+\n+\n+// Change static visibility ---------------------------------------------------\n+#[cfg(cfail1)]\n+static STATIC_VISIBILITY: u8 = 0;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+pub static STATIC_VISIBILITY: u8 = 0;\n+\n+\n+// Change static mutability ---------------------------------------------------\n+#[cfg(cfail1)]\n+static STATIC_MUTABILITY: u8 = 0;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+static mut STATIC_MUTABILITY: u8 = 0;\n+\n+\n+// Add linkage attribute ------------------------------------------------------\n+#[cfg(cfail1)]\n+static STATIC_LINKAGE: u8 = 0;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[linkage=\"weak_odr\"]\n+static STATIC_LINKAGE: u8 = 0;\n+\n+\n+// Add no_mangle attribute ----------------------------------------------------\n+#[cfg(cfail1)]\n+static STATIC_NO_MANGLE: u8 = 0;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[no_mangle]\n+static STATIC_NO_MANGLE: u8 = 0;\n+\n+\n+// Add thread_local attribute -------------------------------------------------\n+#[cfg(cfail1)]\n+static STATIC_THREAD_LOCAL: u8 = 0;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+#[thread_local]\n+static STATIC_THREAD_LOCAL: u8 = 0;\n+\n+\n+// Change type from i16 to u64 ------------------------------------------------\n+#[cfg(cfail1)]\n+static STATIC_CHANGE_TYPE_1: i16 = 0;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+static STATIC_CHANGE_TYPE_1: u64 = 0;\n+\n+\n+// Change type from Option<i8> to Option<u16> ---------------------------------\n+#[cfg(cfail1)]\n+static STATIC_CHANGE_TYPE_2: Option<i8> = None;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+static STATIC_CHANGE_TYPE_2: Option<u16> = None;\n+\n+\n+// Change value between simple literals ---------------------------------------\n+#[cfg(cfail1)]\n+static STATIC_CHANGE_VALUE_1: i16 = 1;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+static STATIC_CHANGE_VALUE_1: i16 = 2;\n+\n+\n+// Change value between expressions -------------------------------------------\n+#[cfg(cfail1)]\n+static STATIC_CHANGE_VALUE_2: i16 = 1 + 1;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+static STATIC_CHANGE_VALUE_2: i16 = 1 + 2;\n+\n+\n+#[cfg(cfail1)]\n+static STATIC_CHANGE_VALUE_3: i16 = 2 + 3;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+static STATIC_CHANGE_VALUE_3: i16 = 2 * 3;\n+\n+\n+#[cfg(cfail1)]\n+static STATIC_CHANGE_VALUE_4: i16 = 1 + 2 * 3;\n+\n+#[cfg(not(cfail1))]\n+#[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+#[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+#[rustc_metadata_dirty(cfg=\"cfail2\")]\n+#[rustc_metadata_clean(cfg=\"cfail3\")]\n+static STATIC_CHANGE_VALUE_4: i16 = 1 + 2 * 4;\n+\n+\n+// Change type indirectly -----------------------------------------------------\n+struct ReferencedType1;\n+struct ReferencedType2;\n+\n+mod static_change_type_indirectly {\n+    #[cfg(cfail1)]\n+    use super::ReferencedType1 as Type;\n+\n+    #[cfg(not(cfail1))]\n+    use super::ReferencedType2 as Type;\n+\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    static STATIC_CHANGE_TYPE_INDIRECTLY_1: Type = Type;\n+\n+    #[rustc_dirty(label=\"Hir\", cfg=\"cfail2\")]\n+    #[rustc_clean(label=\"Hir\", cfg=\"cfail3\")]\n+    #[rustc_metadata_dirty(cfg=\"cfail2\")]\n+    #[rustc_metadata_clean(cfg=\"cfail3\")]\n+    static STATIC_CHANGE_TYPE_INDIRECTLY_2: Option<Type> = None;\n+}"}]}