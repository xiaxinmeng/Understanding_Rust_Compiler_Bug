{"sha": "b90df7997d891d89e658a7781cc4a52fba38aa40", "node_id": "C_kwDOAAsO6NoAKGI5MGRmNzk5N2Q4OTFkODllNjU4YTc3ODFjYzRhNTJmYmEzOGFhNDA", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-11T11:10:43Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2022-04-11T11:10:43Z"}, "message": "Add simplistic config validation", "tree": {"sha": "f8f051b118e77e1ee93cee40c45daa7d22225ae0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8f051b118e77e1ee93cee40c45daa7d22225ae0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b90df7997d891d89e658a7781cc4a52fba38aa40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b90df7997d891d89e658a7781cc4a52fba38aa40", "html_url": "https://github.com/rust-lang/rust/commit/b90df7997d891d89e658a7781cc4a52fba38aa40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b90df7997d891d89e658a7781cc4a52fba38aa40/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d7055e3223a33e3df7a8dd0c01e9dec4b91ac38", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d7055e3223a33e3df7a8dd0c01e9dec4b91ac38", "html_url": "https://github.com/rust-lang/rust/commit/6d7055e3223a33e3df7a8dd0c01e9dec4b91ac38"}], "stats": {"total": 13, "additions": 13, "deletions": 0}, "files": [{"sha": "ab9ad4a54312ba504dbcc33603c3817400f76d20", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/b90df7997d891d89e658a7781cc4a52fba38aa40/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b90df7997d891d89e658a7781cc4a52fba38aa40/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=b90df7997d891d89e658a7781cc4a52fba38aa40", "patch": "@@ -571,13 +571,26 @@ impl Config {\n                 None => tracing::info!(\"Invalid snippet {}\", name),\n             }\n         }\n+\n+        self.validate(&mut errors);\n+\n         if errors.is_empty() {\n             Ok(())\n         } else {\n             Err(ConfigUpdateError { errors })\n         }\n     }\n \n+    fn validate(&self, error_sink: &mut Vec<(String, serde_json::Error)>) {\n+        use serde::de::Error;\n+        if self.data.checkOnSave_command.is_empty() {\n+            error_sink.push((\n+                \"/checkOnSave/command\".to_string(),\n+                serde_json::Error::custom(\"expected a non-empty string\"),\n+            ));\n+        }\n+    }\n+\n     pub fn json_schema() -> serde_json::Value {\n         ConfigData::json_schema()\n     }"}]}