{"sha": "f38770cd2606148bfe764351849ea7ebea45132c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYzODc3MGNkMjYwNjE0OGJmZTc2NDM1MTg0OWVhN2ViZWE0NTEzMmM=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-06-16T17:28:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-06-16T17:28:13Z"}, "message": "Merge #9302\n\n9302: internal: Add builtin derives to attribute completion fixtures r=Veykril a=Veykril\n\nbors R+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>", "tree": {"sha": "4cdfb20392ec5884706f66b754b4a3a84e66498b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4cdfb20392ec5884706f66b754b4a3a84e66498b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f38770cd2606148bfe764351849ea7ebea45132c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgyjStCRBK7hj4Ov3rIwAA5HYIAA7km4u9b5V1skGHFS/6czjA\n9LMl6adT3WgKlKUZPeu4Jnd2XWbDA3MNJN2NnX244aNLYXZ0uTy2O8o2X5ImfqX+\n7M++sNj49DgfyFLrbE2+8j4yk7ugDW0zSk5D8t3vRs91kjWvQ2BuUbNkG0hNrXts\nC3etqs/S0EUG8u0Eoywg4tGnWXZrYk7LD7onCCA7tiJ8dTTTo8aHv3VC/dWNN2nM\nePl5Rxsc1LMuNPPJI/KbLpCr+kfDqowD567DDs5UoTS3qfnHl/Oor7/h3ka4kp16\nw+S8YTp5DoKI+Pvs6fcQQQSoafVsW6gfaQTGiqoE+ibXuWVhErd+5l25Z05ru8s=\n=AaxG\n-----END PGP SIGNATURE-----\n", "payload": "tree 4cdfb20392ec5884706f66b754b4a3a84e66498b\nparent f6e73d510da3a7b2582fdf629fcfda4dca9c7b06\nparent a92ed1eef4a5804c474221d1088dafb5d45f1378\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1623864493 +0000\ncommitter GitHub <noreply@github.com> 1623864493 +0000\n\nMerge #9302\n\n9302: internal: Add builtin derives to attribute completion fixtures r=Veykril a=Veykril\n\nbors R+\n\nCo-authored-by: Lukas Wirth <lukastw97@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f38770cd2606148bfe764351849ea7ebea45132c", "html_url": "https://github.com/rust-lang/rust/commit/f38770cd2606148bfe764351849ea7ebea45132c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f38770cd2606148bfe764351849ea7ebea45132c/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f6e73d510da3a7b2582fdf629fcfda4dca9c7b06", "url": "https://api.github.com/repos/rust-lang/rust/commits/f6e73d510da3a7b2582fdf629fcfda4dca9c7b06", "html_url": "https://github.com/rust-lang/rust/commit/f6e73d510da3a7b2582fdf629fcfda4dca9c7b06"}, {"sha": "a92ed1eef4a5804c474221d1088dafb5d45f1378", "url": "https://api.github.com/repos/rust-lang/rust/commits/a92ed1eef4a5804c474221d1088dafb5d45f1378", "html_url": "https://github.com/rust-lang/rust/commit/a92ed1eef4a5804c474221d1088dafb5d45f1378"}], "stats": {"total": 74, "additions": 67, "deletions": 7}, "files": [{"sha": "20bbbba4643f49dbaa8e03079003045ed48ff9ec", "filename": "crates/ide_completion/src/completions/attribute/derive.rs", "status": "modified", "additions": 67, "deletions": 7, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/f38770cd2606148bfe764351849ea7ebea45132c/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f38770cd2606148bfe764351849ea7ebea45132c/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_completion%2Fsrc%2Fcompletions%2Fattribute%2Fderive.rs?ref=f38770cd2606148bfe764351849ea7ebea45132c", "patch": "@@ -31,6 +31,8 @@ pub(super) fn complete_derive(\n                 let lookup = components.join(\", \");\n                 let label = components.iter().rev().join(\", \");\n                 (label, Some(lookup))\n+            } else if existing_derives.contains(&derive) {\n+                continue;\n             } else {\n                 (derive, None)\n             };\n@@ -83,7 +85,31 @@ mod tests {\n     use crate::{test_utils::completion_list, CompletionKind};\n \n     fn check(ra_fixture: &str, expect: Expect) {\n-        let actual = completion_list(ra_fixture, CompletionKind::Attribute);\n+        let builtin_derives = r#\"\n+#[rustc_builtin_macro]\n+pub macro Clone {}\n+#[rustc_builtin_macro]\n+pub macro Copy {}\n+#[rustc_builtin_macro]\n+pub macro Default {}\n+#[rustc_builtin_macro]\n+pub macro Debug {}\n+#[rustc_builtin_macro]\n+pub macro Hash {}\n+#[rustc_builtin_macro]\n+pub macro PartialEq {}\n+#[rustc_builtin_macro]\n+pub macro Eq {}\n+#[rustc_builtin_macro]\n+pub macro PartialOrd {}\n+#[rustc_builtin_macro]\n+pub macro Ord {}\n+\n+\"#;\n+        let actual = completion_list(\n+            &format!(\"{} {}\", builtin_derives, ra_fixture),\n+            CompletionKind::Attribute,\n+        );\n         expect.assert_eq(&actual);\n     }\n \n@@ -94,19 +120,53 @@ mod tests {\n \n     #[test]\n     fn empty_derive() {\n-        // FIXME: Add build-in derives to fixture.\n-        check(r#\"#[derive($0)] struct Test;\"#, expect![[r#\"\"#]]);\n+        check(\n+            r#\"#[derive($0)] struct Test;\"#,\n+            expect![[r#\"\n+            at PartialEq\n+            at Default\n+            at PartialEq, Eq\n+            at PartialEq, Eq, PartialOrd, Ord\n+            at Clone, Copy\n+            at Debug\n+            at Clone\n+            at Hash\n+            at PartialEq, PartialOrd\n+        \"#]],\n+        );\n     }\n \n     #[test]\n     fn derive_with_input() {\n-        // FIXME: Add build-in derives to fixture.\n-        check(r#\"#[derive(serde::Serialize, PartialEq, $0)] struct Test;\"#, expect![[r#\"\"#]])\n+        check(\n+            r#\"#[derive(serde::Serialize, PartialEq, $0)] struct Test;\"#,\n+            expect![[r#\"\n+                at Default\n+                at Eq\n+                at Eq, PartialOrd, Ord\n+                at Clone, Copy\n+                at Debug\n+                at Clone\n+                at Hash\n+                at PartialOrd\n+            \"#]],\n+        )\n     }\n \n     #[test]\n     fn derive_with_input2() {\n-        // FIXME: Add build-in derives to fixture.\n-        check(r#\"#[derive($0 serde::Serialize, PartialEq)] struct Test;\"#, expect![[r#\"\"#]])\n+        check(\n+            r#\"#[derive($0 serde::Serialize, PartialEq)] struct Test;\"#,\n+            expect![[r#\"\n+                at Default\n+                at Eq\n+                at Eq, PartialOrd, Ord\n+                at Clone, Copy\n+                at Debug\n+                at Clone\n+                at Hash\n+                at PartialOrd\n+            \"#]],\n+        )\n     }\n }"}]}