{"sha": "6b76588222eb1a69f681c00f9d073edb43401ba7", "node_id": "C_kwDOAAsO6NoAKDZiNzY1ODgyMjJlYjFhNjlmNjgxYzAwZjlkMDczZWRiNDM0MDFiYTc", "commit": {"author": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-05-03T02:40:08Z"}, "committer": {"name": "yukang", "email": "moorekang@gmail.com", "date": "2023-05-08T06:58:09Z"}, "message": "suggest struct when we get colon in fileds in enum", "tree": {"sha": "c8ef38f46d6e423f3bfb7e9edcdeba8fe82d7f65", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8ef38f46d6e423f3bfb7e9edcdeba8fe82d7f65"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6b76588222eb1a69f681c00f9d073edb43401ba7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6b76588222eb1a69f681c00f9d073edb43401ba7", "html_url": "https://github.com/rust-lang/rust/commit/6b76588222eb1a69f681c00f9d073edb43401ba7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6b76588222eb1a69f681c00f9d073edb43401ba7/comments", "author": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "committer": {"login": "chenyukang", "id": 230646, "node_id": "MDQ6VXNlcjIzMDY0Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/230646?v=4", "gravatar_id": "", "url": "https://api.github.com/users/chenyukang", "html_url": "https://github.com/chenyukang", "followers_url": "https://api.github.com/users/chenyukang/followers", "following_url": "https://api.github.com/users/chenyukang/following{/other_user}", "gists_url": "https://api.github.com/users/chenyukang/gists{/gist_id}", "starred_url": "https://api.github.com/users/chenyukang/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/chenyukang/subscriptions", "organizations_url": "https://api.github.com/users/chenyukang/orgs", "repos_url": "https://api.github.com/users/chenyukang/repos", "events_url": "https://api.github.com/users/chenyukang/events{/privacy}", "received_events_url": "https://api.github.com/users/chenyukang/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "04c53444dff325a0a3a4cb88cb952fbf341861ec", "url": "https://api.github.com/repos/rust-lang/rust/commits/04c53444dff325a0a3a4cb88cb952fbf341861ec", "html_url": "https://github.com/rust-lang/rust/commit/04c53444dff325a0a3a4cb88cb952fbf341861ec"}], "stats": {"total": 42, "additions": 37, "deletions": 5}, "files": [{"sha": "2a47711a8d3e65d78d5141e9972b1b624968965c", "filename": "compiler/rustc_parse/src/parser/item.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6b76588222eb1a69f681c00f9d073edb43401ba7/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b76588222eb1a69f681c00f9d073edb43401ba7/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fitem.rs?ref=6b76588222eb1a69f681c00f9d073edb43401ba7", "patch": "@@ -1262,6 +1262,7 @@ impl<'a> Parser<'a> {\n             }\n         }\n \n+        let prev_span = self.prev_token.span;\n         let id = self.parse_ident()?;\n         let mut generics = self.parse_generics()?;\n         generics.where_clause = self.parse_where_clause()?;\n@@ -1275,6 +1276,14 @@ impl<'a> Parser<'a> {\n             self.parse_delim_comma_seq(Delimiter::Brace, |p| p.parse_enum_variant()).map_err(\n                 |mut e| {\n                     e.span_label(id.span, \"while parsing this enum\");\n+                    if self.token == token::Colon {\n+                        e.span_suggestion_verbose(\n+                            prev_span,\n+                            \"perhaps you meant to use `struct` here\",\n+                            \"struct\".to_string(),\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    }\n                     self.recover_stmt();\n                     e\n                 },"}, {"sha": "49fe32c71091c68c903df86e89f17c790ceff743", "filename": "tests/ui/structs-enums/issue-103869.fixed", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/6b76588222eb1a69f681c00f9d073edb43401ba7/tests%2Fui%2Fstructs-enums%2Fissue-103869.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/6b76588222eb1a69f681c00f9d073edb43401ba7/tests%2Fui%2Fstructs-enums%2Fissue-103869.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs-enums%2Fissue-103869.fixed?ref=6b76588222eb1a69f681c00f9d073edb43401ba7", "patch": "@@ -0,0 +1,13 @@\n+// run-rustfix\n+\n+struct VecOrMap {\n+    //~^ HELP: perhaps you meant to use `struct` here\n+    vec: Vec<usize>,\n+    //~^ ERROR expected one of `(`, `,`, `=`, `{`, or `}`, found `:`\n+    //~| HELP: enum variants can be `Variant`, `Variant = <integer>`, `Variant(Type, ..., TypeN)` or `Variant { fields: Types }`\n+}\n+\n+fn main() {\n+    let o = VecOrMap { vec: vec![1, 2, 3] };\n+    println!(\"{:?}\", o.vec);\n+}"}, {"sha": "729079e050115d504d7a946ab954eee89a9fe2f2", "filename": "tests/ui/structs-enums/issue-103869.rs", "status": "renamed", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/6b76588222eb1a69f681c00f9d073edb43401ba7/tests%2Fui%2Fstructs-enums%2Fissue-103869.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6b76588222eb1a69f681c00f9d073edb43401ba7/tests%2Fui%2Fstructs-enums%2Fissue-103869.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs-enums%2Fissue-103869.rs?ref=6b76588222eb1a69f681c00f9d073edb43401ba7", "patch": "@@ -1,8 +1,13 @@\n-enum VecOrMap{\n+// run-rustfix\n+\n+enum VecOrMap {\n+    //~^ HELP: perhaps you meant to use `struct` here\n     vec: Vec<usize>,\n     //~^ ERROR expected one of `(`, `,`, `=`, `{`, or `}`, found `:`\n     //~| HELP: enum variants can be `Variant`, `Variant = <integer>`, `Variant(Type, ..., TypeN)` or `Variant { fields: Types }`\n-    map: HashMap<String,usize>\n }\n \n-fn main() {}\n+fn main() {\n+    let o = VecOrMap { vec: vec![1, 2, 3] };\n+    println!(\"{:?}\", o.vec);\n+}", "previous_filename": "tests/ui/parser/issue-103869.rs"}, {"sha": "4665ebf89a3c9356390bcacae0b22e189aef7cdd", "filename": "tests/ui/structs-enums/issue-103869.stderr", "status": "renamed", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/6b76588222eb1a69f681c00f9d073edb43401ba7/tests%2Fui%2Fstructs-enums%2Fissue-103869.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/6b76588222eb1a69f681c00f9d073edb43401ba7/tests%2Fui%2Fstructs-enums%2Fissue-103869.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fstructs-enums%2Fissue-103869.stderr?ref=6b76588222eb1a69f681c00f9d073edb43401ba7", "patch": "@@ -1,12 +1,17 @@\n error: expected one of `(`, `,`, `=`, `{`, or `}`, found `:`\n-  --> $DIR/issue-103869.rs:2:8\n+  --> $DIR/issue-103869.rs:5:8\n    |\n-LL | enum VecOrMap{\n+LL | enum VecOrMap {\n    |      -------- while parsing this enum\n+LL |\n LL |     vec: Vec<usize>,\n    |        ^ expected one of `(`, `,`, `=`, `{`, or `}`\n    |\n    = help: enum variants can be `Variant`, `Variant = <integer>`, `Variant(Type, ..., TypeN)` or `Variant { fields: Types }`\n+help: perhaps you meant to use `struct` here\n+   |\n+LL | struct VecOrMap {\n+   | ~~~~~~\n \n error: aborting due to previous error\n ", "previous_filename": "tests/ui/parser/issue-103869.stderr"}]}