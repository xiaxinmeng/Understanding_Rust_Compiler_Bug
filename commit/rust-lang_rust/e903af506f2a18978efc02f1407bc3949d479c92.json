{"sha": "e903af506f2a18978efc02f1407bc3949d479c92", "node_id": "C_kwDOAAsO6NoAKGU5MDNhZjUwNmYyYTE4OTc4ZWZjMDJmMTQwN2JjMzk0OWQ0NzljOTI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-03T12:12:17Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-03T12:12:17Z"}, "message": "Auto merge of #10229 - danielparks:doc-feature-cargo-clippy, r=flip1995\n\nDocument `cargo-clippy` feature\n\nIt is possible to use conditional compilation to prevent Clippy from evaluating certain code at all. Unfortunately, it was no longer documented anywhere. This adds a brief explanation of how to use the feature with conditional compilation, and mentions a few downsides.\n\nFixes #10220 \u2014 Ability to skip files or blocks entirely\nchangelog: none\n<!-- changelog_checked -->", "tree": {"sha": "8fa2f0594b2737547203cbe3a634f45d4e6106b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8fa2f0594b2737547203cbe3a634f45d4e6106b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e903af506f2a18978efc02f1407bc3949d479c92", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e903af506f2a18978efc02f1407bc3949d479c92", "html_url": "https://github.com/rust-lang/rust/commit/e903af506f2a18978efc02f1407bc3949d479c92", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e903af506f2a18978efc02f1407bc3949d479c92/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "207955cee5708c3a521da9a9a71a46e5deb7445f", "url": "https://api.github.com/repos/rust-lang/rust/commits/207955cee5708c3a521da9a9a71a46e5deb7445f", "html_url": "https://github.com/rust-lang/rust/commit/207955cee5708c3a521da9a9a71a46e5deb7445f"}, {"sha": "471de0cb9f7ed11a437d830329050ee419d2ead0", "url": "https://api.github.com/repos/rust-lang/rust/commits/471de0cb9f7ed11a437d830329050ee419d2ead0", "html_url": "https://github.com/rust-lang/rust/commit/471de0cb9f7ed11a437d830329050ee419d2ead0"}], "stats": {"total": 21, "additions": 21, "deletions": 0}, "files": [{"sha": "1304f6a8c2f095bc4056824fc9d1afe2aca3afb3", "filename": "book/src/configuration.md", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/e903af506f2a18978efc02f1407bc3949d479c92/book%2Fsrc%2Fconfiguration.md", "raw_url": "https://github.com/rust-lang/rust/raw/e903af506f2a18978efc02f1407bc3949d479c92/book%2Fsrc%2Fconfiguration.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/book%2Fsrc%2Fconfiguration.md?ref=e903af506f2a18978efc02f1407bc3949d479c92", "patch": "@@ -100,3 +100,24 @@ Note: `custom_inner_attributes` is an unstable feature, so it has to be enabled\n \n Lints that recognize this configuration option can be\n found [here](https://rust-lang.github.io/rust-clippy/master/index.html#msrv)\n+\n+### Disabling evaluation of certain code\n+\n+> **Note:** This should only be used in cases where other solutions, like `#[allow(clippy::all)]`, are not sufficient.\n+\n+Very rarely, you may wish to prevent Clippy from evaluating certain sections of code entirely. You can do this with\n+[conditional compilation](https://doc.rust-lang.org/reference/conditional-compilation.html) by checking that the\n+`cargo-clippy` feature is not set. You may need to provide a stub so that the code compiles:\n+\n+```rust\n+#[cfg(not(feature = \"cargo-clippy\"))]\n+include!(concat!(env!(\"OUT_DIR\"), \"/my_big_function-generated.rs\"));\n+\n+#[cfg(feature = \"cargo-clippy\")]\n+fn my_big_function(_input: &str) -> Option<MyStruct> {\n+    None\n+}\n+```\n+\n+This feature is not actually part of your crate, so specifying `--all-features` to other tools, e.g. `cargo test\n+--all-features`, will not disable it."}]}