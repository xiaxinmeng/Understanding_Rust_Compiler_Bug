{"sha": "2a244ce7f40fdbb66052545cda8de8d4d2582e2a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhMjQ0Y2U3ZjQwZmRiYjY2MDUyNTQ1Y2RhOGRlOGQ0ZDI1ODJlMmE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-09T17:24:51Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-12-09T17:24:51Z"}, "message": "rollup merge of #19598: japaric/ord\n\ncc #18755\n\nr? @alexcrichton\ncc @bjz", "tree": {"sha": "e7d466dbf2d9ee1c24cae4a629e98f2e0616a349", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7d466dbf2d9ee1c24cae4a629e98f2e0616a349"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2a244ce7f40fdbb66052545cda8de8d4d2582e2a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2a244ce7f40fdbb66052545cda8de8d4d2582e2a", "html_url": "https://github.com/rust-lang/rust/commit/2a244ce7f40fdbb66052545cda8de8d4d2582e2a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2a244ce7f40fdbb66052545cda8de8d4d2582e2a/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0ad3c7f933d575d3700d8f5124e5474dfcdbd63", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0ad3c7f933d575d3700d8f5124e5474dfcdbd63", "html_url": "https://github.com/rust-lang/rust/commit/d0ad3c7f933d575d3700d8f5124e5474dfcdbd63"}, {"sha": "8dcdd1e76a6524de7da8423bc9f224fe8a822bc8", "url": "https://api.github.com/repos/rust-lang/rust/commits/8dcdd1e76a6524de7da8423bc9f224fe8a822bc8", "html_url": "https://github.com/rust-lang/rust/commit/8dcdd1e76a6524de7da8423bc9f224fe8a822bc8"}], "stats": {"total": 35, "additions": 28, "deletions": 7}, "files": [{"sha": "6900773f44d4bec09aeba6251d00e03c145b4b13", "filename": "src/libsyntax/ext/deriving/cmp/totalord.rs", "status": "modified", "additions": 25, "deletions": 4, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/2a244ce7f40fdbb66052545cda8de8d4d2582e2a/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a244ce7f40fdbb66052545cda8de8d4d2582e2a/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fcmp%2Ftotalord.rs?ref=2a244ce7f40fdbb66052545cda8de8d4d2582e2a", "patch": "@@ -66,12 +66,19 @@ pub fn cs_cmp(cx: &mut ExtCtxt, span: Span,\n                                           cx.ident_of(\"cmp\"),\n                                           cx.ident_of(\"Equal\")));\n \n+    let cmp_path = vec![\n+        cx.ident_of(\"std\"),\n+        cx.ident_of(\"cmp\"),\n+        cx.ident_of(\"Ord\"),\n+        cx.ident_of(\"cmp\"),\n+    ];\n+\n     /*\n     Builds:\n \n-    let __test = self_field1.cmp(&other_field2);\n+    let __test = ::std::cmp::Ord::cmp(&self_field1, &other_field1);\n     if other == ::std::cmp::Ordering::Equal {\n-        let __test = self_field2.cmp(&other_field2);\n+        let __test = ::std::cmp::Ord::cmp(&self_field2, &other_field2);\n         if __test == ::std::cmp::Ordering::Equal {\n             ...\n         } else {\n@@ -83,18 +90,32 @@ pub fn cs_cmp(cx: &mut ExtCtxt, span: Span,\n \n     FIXME #6449: These `if`s could/should be `match`es.\n     */\n-    cs_same_method_fold(\n+    cs_fold(\n         // foldr nests the if-elses correctly, leaving the first field\n         // as the outermost one, and the last as the innermost.\n         false,\n-        |cx, span, old, new| {\n+        |cx, span, old, self_f, other_fs| {\n             // let __test = new;\n             // if __test == ::std::cmp::Ordering::Equal {\n             //    old\n             // } else {\n             //    __test\n             // }\n \n+            let new = {\n+                let other_f = match other_fs {\n+                    [ref o_f] => o_f,\n+                    _ => cx.span_bug(span, \"not exactly 2 arguments in `deriving(PartialOrd)`\"),\n+                };\n+\n+                let args = vec![\n+                    cx.expr_addr_of(span, self_f),\n+                    cx.expr_addr_of(span, other_f.clone()),\n+                ];\n+\n+                cx.expr_call_global(span, cmp_path.clone(), args)\n+            };\n+\n             let assign = cx.stmt_let(span, false, test_id, new);\n \n             let cond = cx.expr_binary(span, ast::BiEq,"}, {"sha": "35bd68d803a2e3d43edef6382ef20b35f6cf324e", "filename": "src/test/run-pass/issue-18738.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/2a244ce7f40fdbb66052545cda8de8d4d2582e2a/src%2Ftest%2Frun-pass%2Fissue-18738.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2a244ce7f40fdbb66052545cda8de8d4d2582e2a/src%2Ftest%2Frun-pass%2Fissue-18738.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-18738.rs?ref=2a244ce7f40fdbb66052545cda8de8d4d2582e2a", "patch": "@@ -8,18 +8,18 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#[deriving(PartialEq, PartialOrd)]\n+#[deriving(Eq, PartialEq, PartialOrd, Ord)]\n enum Test<'a> {\n     Int(&'a int),\n     Slice(&'a [u8]),\n }\n \n-#[deriving(PartialEq, PartialOrd)]\n+#[deriving(Eq, PartialEq, PartialOrd, Ord)]\n struct Version {\n     vendor_info: &'static str\n }\n \n-#[deriving(PartialEq, PartialOrd)]\n+#[deriving(Eq, PartialEq, PartialOrd, Ord)]\n struct Foo(&'static str);\n \n fn main() {}"}]}