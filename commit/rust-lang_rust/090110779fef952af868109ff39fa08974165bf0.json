{"sha": "090110779fef952af868109ff39fa08974165bf0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5MDExMDc3OWZlZjk1MmFmODY4MTA5ZmYzOWZhMDg5NzQxNjViZjA=", "commit": {"author": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-12-05T18:08:33Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2014-12-05T18:08:33Z"}, "message": "rollup merge of #19553: sfackler/issue-19543\n\nCloses #19543", "tree": {"sha": "e2457725ba81817fd5272b6b01494b895b13c0c3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e2457725ba81817fd5272b6b01494b895b13c0c3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/090110779fef952af868109ff39fa08974165bf0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/090110779fef952af868109ff39fa08974165bf0", "html_url": "https://github.com/rust-lang/rust/commit/090110779fef952af868109ff39fa08974165bf0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/090110779fef952af868109ff39fa08974165bf0/comments", "author": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a90e0d70ccc91044ec2143d38a17baeb60adbb7e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a90e0d70ccc91044ec2143d38a17baeb60adbb7e", "html_url": "https://github.com/rust-lang/rust/commit/a90e0d70ccc91044ec2143d38a17baeb60adbb7e"}, {"sha": "714ce7919719e6a70719c873dec506765c00686f", "url": "https://api.github.com/repos/rust-lang/rust/commits/714ce7919719e6a70719c873dec506765c00686f", "html_url": "https://github.com/rust-lang/rust/commit/714ce7919719e6a70719c873dec506765c00686f"}], "stats": {"total": 5, "additions": 5, "deletions": 0}, "files": [{"sha": "7b9dd70c58f023d1ad481c423234f7ea1af949f8", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/090110779fef952af868109ff39fa08974165bf0/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/090110779fef952af868109ff39fa08974165bf0/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=090110779fef952af868109ff39fa08974165bf0", "patch": "@@ -34,6 +34,7 @@ mod float;\n pub mod rt;\n \n #[experimental = \"core and I/O reconciliation may alter this definition\"]\n+/// The type returned by formatter methods.\n pub type Result = result::Result<(), Error>;\n \n /// The error type which is returned from formatting a message into a stream."}, {"sha": "b0ac98c94e748b3f0404369fb027251f461237b6", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/090110779fef952af868109ff39fa08974165bf0/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/090110779fef952af868109ff39fa08974165bf0/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=090110779fef952af868109ff39fa08974165bf0", "patch": "@@ -1428,6 +1428,7 @@ impl LintPass for MissingDoc {\n             ast::ItemEnum(..) => \"an enum\",\n             ast::ItemStruct(..) => \"a struct\",\n             ast::ItemTrait(..) => \"a trait\",\n+            ast::ItemTy(..) => \"a type alias\",\n             _ => return\n         };\n         self.check_missing_docs_attrs(cx, Some(it.id), it.attrs.as_slice(),"}, {"sha": "8d4ecde692d72358ead90e3ad5cf25d8cd18b38d", "filename": "src/test/compile-fail/lint-missing-doc.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/090110779fef952af868109ff39fa08974165bf0/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/090110779fef952af868109ff39fa08974165bf0/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-missing-doc.rs?ref=090110779fef952af868109ff39fa08974165bf0", "patch": "@@ -17,6 +17,9 @@\n //! Some garbage docs for the crate here\n #![doc=\"More garbage\"]\n \n+type Typedef = String;\n+pub type PubTypedef = String; //~ ERROR: missing documentation\n+\n struct Foo {\n     a: int,\n     b: int,"}]}