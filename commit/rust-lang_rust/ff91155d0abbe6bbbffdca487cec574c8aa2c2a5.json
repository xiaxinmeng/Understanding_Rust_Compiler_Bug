{"sha": "ff91155d0abbe6bbbffdca487cec574c8aa2c2a5", "node_id": "C_kwDOAAsO6NoAKGZmOTExNTVkMGFiYmU2YmJiZmZkY2E0ODdjZWM1NzRjOGFhMmMyYTU", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-04-16T22:07:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-04-16T22:07:25Z"}, "message": "Rollup merge of #96105 - jyn514:less-verbose-logging, r=Mark-Simulacrum\n\nMake the debug output for `TargetSelection` less verbose\n\nIn particular, this makes the output of `x build -vv` easier to read.\nBefore:\n\n```\n    c Sysroot { compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } } }\n```\n\nAfter:\n```\n    c Sysroot { compiler: Compiler { stage: 0, host: x86_64-unknown-linux-gnu } }\n```", "tree": {"sha": "254d1a09b1b0077d77efbe6d1fdbf6b8852cefb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/254d1a09b1b0077d77efbe6d1fdbf6b8852cefb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ff91155d0abbe6bbbffdca487cec574c8aa2c2a5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiWz4dCRBK7hj4Ov3rIwAA82EIACiZEPoUdbjrMsRwJrclUlbe\nvO+JYEVqDKJiG0fsOpJlx7WxwX7lX1s9/fWI7vqblmkUb2CsWkAZ2XPX4gQwNG/r\nDT5L1pQeL4RH2s0DEapTWbXs3qFlBSrPmq/rX5PMfsBOKDIueyXLjPuCSDv7Ed+C\nHE3y5a9ewdmH1kMPNp9omKU+CVMZ77Oqw3gqTC95jFZd9vp6VKj+ZRet1rx7nGZO\nZBCZk2+SBOuPljpqZlwa+vTOGYCYiO6Oj1A4+Zurn9jpR5ZGmcfKuK/IyRxftycB\n9FwKO+apJBfioQhNofwasRiprmKGckOSAsakmpa1IlfbVNcm5x3ry63NejCkd2Q=\n=hjbn\n-----END PGP SIGNATURE-----\n", "payload": "tree 254d1a09b1b0077d77efbe6d1fdbf6b8852cefb1\nparent 0b43f70321df290f758cb4f835f861c4ea95d009\nparent 82d99ad8548a7c6eb9de059554897865d3de96d2\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1650146845 +0200\ncommitter GitHub <noreply@github.com> 1650146845 +0200\n\nRollup merge of #96105 - jyn514:less-verbose-logging, r=Mark-Simulacrum\n\nMake the debug output for `TargetSelection` less verbose\n\nIn particular, this makes the output of `x build -vv` easier to read.\nBefore:\n\n```\n    c Sysroot { compiler: Compiler { stage: 0, host: TargetSelection { triple: \"x86_64-unknown-linux-gnu\", file: None } } }\n```\n\nAfter:\n```\n    c Sysroot { compiler: Compiler { stage: 0, host: x86_64-unknown-linux-gnu } }\n```\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ff91155d0abbe6bbbffdca487cec574c8aa2c2a5", "html_url": "https://github.com/rust-lang/rust/commit/ff91155d0abbe6bbbffdca487cec574c8aa2c2a5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ff91155d0abbe6bbbffdca487cec574c8aa2c2a5/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0b43f70321df290f758cb4f835f861c4ea95d009", "url": "https://api.github.com/repos/rust-lang/rust/commits/0b43f70321df290f758cb4f835f861c4ea95d009", "html_url": "https://github.com/rust-lang/rust/commit/0b43f70321df290f758cb4f835f861c4ea95d009"}, {"sha": "82d99ad8548a7c6eb9de059554897865d3de96d2", "url": "https://api.github.com/repos/rust-lang/rust/commits/82d99ad8548a7c6eb9de059554897865d3de96d2", "html_url": "https://github.com/rust-lang/rust/commit/82d99ad8548a7c6eb9de059554897865d3de96d2"}], "stats": {"total": 8, "additions": 7, "deletions": 1}, "files": [{"sha": "d7c29f6900a534028c53746ff9c1182f58380ddb", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ff91155d0abbe6bbbffdca487cec574c8aa2c2a5/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ff91155d0abbe6bbbffdca487cec574c8aa2c2a5/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=ff91155d0abbe6bbbffdca487cec574c8aa2c2a5", "patch": "@@ -221,7 +221,7 @@ impl FromStr for LlvmLibunwind {\n     }\n }\n \n-#[derive(Debug, Copy, Clone, Default, PartialEq, Eq, PartialOrd, Ord, Hash)]\n+#[derive(Copy, Clone, Default, PartialEq, Eq, PartialOrd, Ord, Hash)]\n pub struct TargetSelection {\n     pub triple: Interned<String>,\n     file: Option<Interned<String>>,\n@@ -276,6 +276,12 @@ impl fmt::Display for TargetSelection {\n     }\n }\n \n+impl fmt::Debug for TargetSelection {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        write!(f, \"{}\", self)\n+    }\n+}\n+\n impl PartialEq<&str> for TargetSelection {\n     fn eq(&self, other: &&str) -> bool {\n         self.triple == *other"}]}