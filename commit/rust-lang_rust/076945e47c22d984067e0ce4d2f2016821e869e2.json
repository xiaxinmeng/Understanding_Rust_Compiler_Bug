{"sha": "076945e47c22d984067e0ce4d2f2016821e869e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3Njk0NWU0N2MyMmQ5ODQwNjdlMGNlNGQyZjIwMTY4MjFlODY5ZTI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-10T15:00:28Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-12-10T15:01:02Z"}, "message": "Minor, more orthogonal code\n\nIt's better to accept things as arguments rather than store them.", "tree": {"sha": "e0dafa1ecf91c07b9946eed4fcf279ed3114cd0e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e0dafa1ecf91c07b9946eed4fcf279ed3114cd0e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/076945e47c22d984067e0ce4d2f2016821e869e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/076945e47c22d984067e0ce4d2f2016821e869e2", "html_url": "https://github.com/rust-lang/rust/commit/076945e47c22d984067e0ce4d2f2016821e869e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/076945e47c22d984067e0ce4d2f2016821e869e2/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "17f236c2b041de7abd8ec3be208b8eff75fd7ffb", "url": "https://api.github.com/repos/rust-lang/rust/commits/17f236c2b041de7abd8ec3be208b8eff75fd7ffb", "html_url": "https://github.com/rust-lang/rust/commit/17f236c2b041de7abd8ec3be208b8eff75fd7ffb"}], "stats": {"total": 28, "additions": 12, "deletions": 16}, "files": [{"sha": "544886d298ba92e82fb428f4899766c1fc6e5687", "filename": "crates/completion/src/completions/unqualified_path.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/076945e47c22d984067e0ce4d2f2016821e869e2/crates%2Fcompletion%2Fsrc%2Fcompletions%2Funqualified_path.rs", "raw_url": "https://github.com/rust-lang/rust/raw/076945e47c22d984067e0ce4d2f2016821e869e2/crates%2Fcompletion%2Fsrc%2Fcompletions%2Funqualified_path.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fcompletions%2Funqualified_path.rs?ref=076945e47c22d984067e0ce4d2f2016821e869e2", "patch": "@@ -145,15 +145,13 @@ fn fuzzy_completion(acc: &mut Completions, ctx: &CompletionContext) -> Option<()\n     })\n     .filter(|(mod_path, _)| mod_path.len() > 1)\n     .filter_map(|(import_path, definition)| {\n-        render_resolution_with_import(\n-            RenderContext::new(ctx),\n-            ImportEdit {\n-                import_path: import_path.clone(),\n-                import_scope: import_scope.clone(),\n-                merge_behavior: ctx.config.merge,\n-            },\n-            &definition,\n-        )\n+        let ie =\n+            ImportEdit { import_path: import_path.clone(), import_scope: import_scope.clone() };\n+        {\n+            let _p = profile::span(\"totextedit\");\n+            ie.to_text_edit(ctx.config.merge);\n+        }\n+        render_resolution_with_import(RenderContext::new(ctx), ie, &definition)\n     });\n \n     acc.add_all(possible_imports);"}, {"sha": "65f8353e7c4d53be0ecbbcf85943a050ef22bd13", "filename": "crates/completion/src/item.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/076945e47c22d984067e0ce4d2f2016821e869e2/crates%2Fcompletion%2Fsrc%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/076945e47c22d984067e0ce4d2f2016821e869e2/crates%2Fcompletion%2Fsrc%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Fitem.rs?ref=076945e47c22d984067e0ce4d2f2016821e869e2", "patch": "@@ -271,19 +271,18 @@ impl CompletionItem {\n pub struct ImportEdit {\n     pub import_path: ModPath,\n     pub import_scope: ImportScope,\n-    pub merge_behavior: Option<MergeBehavior>,\n }\n \n impl ImportEdit {\n     /// Attempts to insert the import to the given scope, producing a text edit.\n     /// May return no edit in edge cases, such as scope already containing the import.\n-    pub fn to_text_edit(&self) -> Option<TextEdit> {\n+    pub fn to_text_edit(&self, merge_behavior: Option<MergeBehavior>) -> Option<TextEdit> {\n         let _p = profile::span(\"ImportEdit::to_text_edit\");\n \n         let rewriter = insert_use::insert_use(\n             &self.import_scope,\n             mod_path_to_ast(&self.import_path),\n-            self.merge_behavior,\n+            merge_behavior,\n         );\n         let old_ast = rewriter.rewrite_root()?;\n         let mut import_insert = TextEdit::builder();"}, {"sha": "8e27bb153283b90e8db9cac9d14cde72f77ecb52", "filename": "crates/completion/src/lib.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/076945e47c22d984067e0ce4d2f2016821e869e2/crates%2Fcompletion%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/076945e47c22d984067e0ce4d2f2016821e869e2/crates%2Fcompletion%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Flib.rs?ref=076945e47c22d984067e0ce4d2f2016821e869e2", "patch": "@@ -153,9 +153,7 @@ pub fn resolve_completion_edits(\n         })\n         .find(|mod_path| mod_path.to_string() == full_import_path)?;\n \n-    ImportEdit { import_path, import_scope, merge_behavior: config.merge }\n-        .to_text_edit()\n-        .map(|edit| vec![edit])\n+    ImportEdit { import_path, import_scope }.to_text_edit(config.merge).map(|edit| vec![edit])\n }\n \n #[cfg(test)]"}, {"sha": "db896b2df23441d8edc1862a51e4fc103919735e", "filename": "crates/completion/src/test_utils.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/076945e47c22d984067e0ce4d2f2016821e869e2/crates%2Fcompletion%2Fsrc%2Ftest_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/076945e47c22d984067e0ce4d2f2016821e869e2/crates%2Fcompletion%2Fsrc%2Ftest_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fcompletion%2Fsrc%2Ftest_utils.rs?ref=076945e47c22d984067e0ce4d2f2016821e869e2", "patch": "@@ -98,7 +98,8 @@ pub(crate) fn check_edit_with_config(\n     let mut actual = db.file_text(position.file_id).to_string();\n \n     let mut combined_edit = completion.text_edit().to_owned();\n-    if let Some(import_text_edit) = completion.import_to_add().and_then(|edit| edit.to_text_edit())\n+    if let Some(import_text_edit) =\n+        completion.import_to_add().and_then(|edit| edit.to_text_edit(config.merge))\n     {\n         combined_edit.union(import_text_edit).expect(\n             \"Failed to apply completion resolve changes: change ranges overlap, but should not\","}]}