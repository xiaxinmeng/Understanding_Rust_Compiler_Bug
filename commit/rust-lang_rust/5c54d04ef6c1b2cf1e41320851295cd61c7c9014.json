{"sha": "5c54d04ef6c1b2cf1e41320851295cd61c7c9014", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNTRkMDRlZjZjMWIyY2YxZTQxMzIwODUxMjk1Y2Q2MWM3YzkwMTQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2021-07-16T08:08:05Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-07-16T08:08:05Z"}, "message": "Rollup merge of #87069 - sexxi-goose:copy_ref_always, r=nikomatsakis\n\nExprUseVisitor: Treat ByValue use of Copy types as ImmBorrow\n\nr? ```@nikomatsakis```", "tree": {"sha": "d787cb5d9868a37ad35324449c738e915751039a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d787cb5d9868a37ad35324449c738e915751039a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c54d04ef6c1b2cf1e41320851295cd61c7c9014", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c54d04ef6c1b2cf1e41320851295cd61c7c9014", "html_url": "https://github.com/rust-lang/rust/commit/5c54d04ef6c1b2cf1e41320851295cd61c7c9014", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c54d04ef6c1b2cf1e41320851295cd61c7c9014/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d084b13a58efac06c478ae721b5666e76fe3214", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d084b13a58efac06c478ae721b5666e76fe3214", "html_url": "https://github.com/rust-lang/rust/commit/1d084b13a58efac06c478ae721b5666e76fe3214"}, {"sha": "a9e9b7f9b2ad52035fe7b57bb0fc8ba62d649c33", "url": "https://api.github.com/repos/rust-lang/rust/commits/a9e9b7f9b2ad52035fe7b57bb0fc8ba62d649c33", "html_url": "https://github.com/rust-lang/rust/commit/a9e9b7f9b2ad52035fe7b57bb0fc8ba62d649c33"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "5f400d079da2f1d7b5277e8450703003a6d2a0cc", "filename": "clippy_lints/src/escape.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/5c54d04ef6c1b2cf1e41320851295cd61c7c9014/clippy_lints%2Fsrc%2Fescape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c54d04ef6c1b2cf1e41320851295cd61c7c9014/clippy_lints%2Fsrc%2Fescape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fescape.rs?ref=5c54d04ef6c1b2cf1e41320851295cd61c7c9014", "patch": "@@ -11,7 +11,7 @@ use rustc_span::source_map::Span;\n use rustc_span::symbol::kw;\n use rustc_target::abi::LayoutOf;\n use rustc_target::spec::abi::Abi;\n-use rustc_typeck::expr_use_visitor::{ConsumeMode, Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n+use rustc_typeck::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n \n #[derive(Copy, Clone)]\n pub struct BoxedLocal {\n@@ -133,13 +133,10 @@ fn is_argument(map: rustc_middle::hir::map::Map<'_>, id: HirId) -> bool {\n }\n \n impl<'a, 'tcx> Delegate<'tcx> for EscapeDelegate<'a, 'tcx> {\n-    fn consume(&mut self, cmt: &PlaceWithHirId<'tcx>, _: HirId, mode: ConsumeMode) {\n+    fn consume(&mut self, cmt: &PlaceWithHirId<'tcx>, _: HirId) {\n         if cmt.place.projections.is_empty() {\n             if let PlaceBase::Local(lid) = cmt.place.base {\n-                if let ConsumeMode::Move = mode {\n-                    // moved out or in. clearly can't be localized\n-                    self.set.remove(&lid);\n-                }\n+                self.set.remove(&lid);\n                 let map = &self.cx.tcx.hir();\n                 if let Some(Node::Binding(_)) = map.find(cmt.hir_id) {\n                     if self.set.contains(&lid) {"}, {"sha": "1e54a1e2de165e8781a4c581606d5da9cbf72efe", "filename": "clippy_lints/src/loops/mut_range_bound.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c54d04ef6c1b2cf1e41320851295cd61c7c9014/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c54d04ef6c1b2cf1e41320851295cd61c7c9014/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops%2Fmut_range_bound.rs?ref=5c54d04ef6c1b2cf1e41320851295cd61c7c9014", "patch": "@@ -7,7 +7,7 @@ use rustc_infer::infer::TyCtxtInferExt;\n use rustc_lint::LateContext;\n use rustc_middle::{mir::FakeReadCause, ty};\n use rustc_span::source_map::Span;\n-use rustc_typeck::expr_use_visitor::{ConsumeMode, Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n+use rustc_typeck::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n \n pub(super) fn check(cx: &LateContext<'_>, arg: &Expr<'_>, body: &Expr<'_>) {\n     if let Some(higher::Range {\n@@ -82,7 +82,7 @@ struct MutatePairDelegate<'a, 'tcx> {\n }\n \n impl<'tcx> Delegate<'tcx> for MutatePairDelegate<'_, 'tcx> {\n-    fn consume(&mut self, _: &PlaceWithHirId<'tcx>, _: HirId, _: ConsumeMode) {}\n+    fn consume(&mut self, _: &PlaceWithHirId<'tcx>, _: HirId) {}\n \n     fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, diag_expr_id: HirId, bk: ty::BorrowKind) {\n         if let ty::BorrowKind::MutBorrow = bk {"}, {"sha": "57fd03f4e12a68afd6fc8b322cd0b69cf7d599db", "filename": "clippy_lints/src/needless_pass_by_value.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5c54d04ef6c1b2cf1e41320851295cd61c7c9014/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c54d04ef6c1b2cf1e41320851295cd61c7c9014/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_pass_by_value.rs?ref=5c54d04ef6c1b2cf1e41320851295cd61c7c9014", "patch": "@@ -326,10 +326,8 @@ impl MovedVariablesCtxt {\n }\n \n impl<'tcx> euv::Delegate<'tcx> for MovedVariablesCtxt {\n-    fn consume(&mut self, cmt: &euv::PlaceWithHirId<'tcx>, _: HirId, mode: euv::ConsumeMode) {\n-        if let euv::ConsumeMode::Move = mode {\n-            self.move_common(cmt);\n-        }\n+    fn consume(&mut self, cmt: &euv::PlaceWithHirId<'tcx>, _: HirId) {\n+        self.move_common(cmt);\n     }\n \n     fn borrow(&mut self, _: &euv::PlaceWithHirId<'tcx>, _: HirId, _: ty::BorrowKind) {}"}, {"sha": "ac885e9994404b605dd5b0d1c91df3cc45c6b970", "filename": "clippy_utils/src/usage.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c54d04ef6c1b2cf1e41320851295cd61c7c9014/clippy_utils%2Fsrc%2Fusage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c54d04ef6c1b2cf1e41320851295cd61c7c9014/clippy_utils%2Fsrc%2Fusage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fusage.rs?ref=5c54d04ef6c1b2cf1e41320851295cd61c7c9014", "patch": "@@ -10,7 +10,7 @@ use rustc_lint::LateContext;\n use rustc_middle::hir::map::Map;\n use rustc_middle::mir::FakeReadCause;\n use rustc_middle::ty;\n-use rustc_typeck::expr_use_visitor::{ConsumeMode, Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n+use rustc_typeck::expr_use_visitor::{Delegate, ExprUseVisitor, PlaceBase, PlaceWithHirId};\n \n /// Returns a set of mutated local variable IDs, or `None` if mutations could not be determined.\n pub fn mutated_variables<'tcx>(expr: &'tcx Expr<'_>, cx: &LateContext<'tcx>) -> Option<HirIdSet> {\n@@ -67,7 +67,7 @@ impl<'tcx> MutVarsDelegate {\n }\n \n impl<'tcx> Delegate<'tcx> for MutVarsDelegate {\n-    fn consume(&mut self, _: &PlaceWithHirId<'tcx>, _: HirId, _: ConsumeMode) {}\n+    fn consume(&mut self, _: &PlaceWithHirId<'tcx>, _: HirId) {}\n \n     fn borrow(&mut self, cmt: &PlaceWithHirId<'tcx>, _: HirId, bk: ty::BorrowKind) {\n         if let ty::BorrowKind::MutBorrow = bk {"}]}