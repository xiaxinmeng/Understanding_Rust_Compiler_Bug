{"sha": "7a47ffcbc73fa3bd02429c92841dcb0792a1f9b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhNDdmZmNiYzczZmEzYmQwMjQyOWM5Mjg0MWRjYjA3OTJhMWY5Yjg=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-20T18:37:15Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-07-20T18:37:15Z"}, "message": "UB is src bzns", "tree": {"sha": "c59cd46e5ef4994ea8c4a67b647ec42cb02767a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c59cd46e5ef4994ea8c4a67b647ec42cb02767a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7a47ffcbc73fa3bd02429c92841dcb0792a1f9b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7a47ffcbc73fa3bd02429c92841dcb0792a1f9b8", "html_url": "https://github.com/rust-lang/rust/commit/7a47ffcbc73fa3bd02429c92841dcb0792a1f9b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7a47ffcbc73fa3bd02429c92841dcb0792a1f9b8/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99043dde9dd2d0507ad2e3cda65b9d3e9244f13f", "url": "https://api.github.com/repos/rust-lang/rust/commits/99043dde9dd2d0507ad2e3cda65b9d3e9244f13f", "html_url": "https://github.com/rust-lang/rust/commit/99043dde9dd2d0507ad2e3cda65b9d3e9244f13f"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0ffc23c452333297cba0f0e75b5b051fdb68805c", "filename": "src/doc/tarpl/vec-into-iter.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7a47ffcbc73fa3bd02429c92841dcb0792a1f9b8/src%2Fdoc%2Ftarpl%2Fvec-into-iter.md", "raw_url": "https://github.com/rust-lang/rust/raw/7a47ffcbc73fa3bd02429c92841dcb0792a1f9b8/src%2Fdoc%2Ftarpl%2Fvec-into-iter.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Ftarpl%2Fvec-into-iter.md?ref=7a47ffcbc73fa3bd02429c92841dcb0792a1f9b8", "patch": "@@ -63,7 +63,7 @@ However because `offset` is marked as a GEP inbounds instruction, this will tell\n LLVM that ptr is allocated and won't alias other allocated memory. This is fine\n for zero-sized types, as they can't alias anything. However if we're using\n `heap::EMPTY` as a sentinel for a non-allocation for a *non-zero-sized* type,\n-this can cause undefined behaviour. Alas, we must therefore special case either\n+this can cause Undefined Behaviour. Alas, we must therefore special case either\n cap or len being 0 to not do the offset.\n \n So this is what we end up with for initialization:"}]}