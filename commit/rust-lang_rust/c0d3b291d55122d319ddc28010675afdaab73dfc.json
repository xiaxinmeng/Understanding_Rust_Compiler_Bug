{"sha": "c0d3b291d55122d319ddc28010675afdaab73dfc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwZDNiMjkxZDU1MTIyZDMxOWRkYzI4MDEwNjc1YWZkYWFiNzNkZmM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-05T00:03:50Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-05T00:03:50Z"}, "message": "librustc: Shot in the dark to try to unbreak Windows. rs=me", "tree": {"sha": "e1249ecadb553dc05a40d646748dd4f5aaea42a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1249ecadb553dc05a40d646748dd4f5aaea42a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c0d3b291d55122d319ddc28010675afdaab73dfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c0d3b291d55122d319ddc28010675afdaab73dfc", "html_url": "https://github.com/rust-lang/rust/commit/c0d3b291d55122d319ddc28010675afdaab73dfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c0d3b291d55122d319ddc28010675afdaab73dfc/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "33c1e47c1b09216e100951ba9e95a3c0c61c0cc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/33c1e47c1b09216e100951ba9e95a3c0c61c0cc7", "html_url": "https://github.com/rust-lang/rust/commit/33c1e47c1b09216e100951ba9e95a3c0c61c0cc7"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "452e950dba600e4ae671f568f766528fb0930fc9", "filename": "src/librustc/middle/typeck/infer/unify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c0d3b291d55122d319ddc28010675afdaab73dfc/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c0d3b291d55122d319ddc28010675afdaab73dfc/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Finfer%2Funify.rs?ref=c0d3b291d55122d319ddc28010675afdaab73dfc", "patch": "@@ -43,7 +43,7 @@ impl infer_ctxt {\n             match (*var_val) {\n               redirect(ref vid) => {\n                 let node = self.get(vb, (*vid));\n-                if node.root != (*vid) {\n+                if node.root.ne(vid) {\n                     // Path compression\n                     vb.vals.insert((*vid).to_uint(), redirect(node.root));\n                 }"}]}