{"sha": "7caf753d4413cb0ae7bc266fd89e56f1d3842857", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjYWY3NTNkNDQxM2NiMGFlN2JjMjY2ZmQ4OWU1NmYxZDM4NDI4NTc=", "commit": {"author": {"name": "Nathaniel Ringo", "email": "remexre@gmail.com", "date": "2018-01-09T21:09:54Z"}, "committer": {"name": "Nathaniel Ringo", "email": "remexre@gmail.com", "date": "2018-01-09T21:09:54Z"}, "message": "Fixes Duration constructor const fns other than new, reverts new to non-const.", "tree": {"sha": "3be89c2da9bbb97374c04d5151e433869359db0a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3be89c2da9bbb97374c04d5151e433869359db0a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7caf753d4413cb0ae7bc266fd89e56f1d3842857", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7caf753d4413cb0ae7bc266fd89e56f1d3842857", "html_url": "https://github.com/rust-lang/rust/commit/7caf753d4413cb0ae7bc266fd89e56f1d3842857", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7caf753d4413cb0ae7bc266fd89e56f1d3842857/comments", "author": {"login": "remexre", "id": 4196789, "node_id": "MDQ6VXNlcjQxOTY3ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/4196789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remexre", "html_url": "https://github.com/remexre", "followers_url": "https://api.github.com/users/remexre/followers", "following_url": "https://api.github.com/users/remexre/following{/other_user}", "gists_url": "https://api.github.com/users/remexre/gists{/gist_id}", "starred_url": "https://api.github.com/users/remexre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remexre/subscriptions", "organizations_url": "https://api.github.com/users/remexre/orgs", "repos_url": "https://api.github.com/users/remexre/repos", "events_url": "https://api.github.com/users/remexre/events{/privacy}", "received_events_url": "https://api.github.com/users/remexre/received_events", "type": "User", "site_admin": false}, "committer": {"login": "remexre", "id": 4196789, "node_id": "MDQ6VXNlcjQxOTY3ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/4196789?v=4", "gravatar_id": "", "url": "https://api.github.com/users/remexre", "html_url": "https://github.com/remexre", "followers_url": "https://api.github.com/users/remexre/followers", "following_url": "https://api.github.com/users/remexre/following{/other_user}", "gists_url": "https://api.github.com/users/remexre/gists{/gist_id}", "starred_url": "https://api.github.com/users/remexre/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/remexre/subscriptions", "organizations_url": "https://api.github.com/users/remexre/orgs", "repos_url": "https://api.github.com/users/remexre/repos", "events_url": "https://api.github.com/users/remexre/events{/privacy}", "received_events_url": "https://api.github.com/users/remexre/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2624c05acf93ca2b35dae7ae3770fd92b5dce4b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2624c05acf93ca2b35dae7ae3770fd92b5dce4b5", "html_url": "https://github.com/rust-lang/rust/commit/2624c05acf93ca2b35dae7ae3770fd92b5dce4b5"}], "stats": {"total": 23, "additions": 13, "deletions": 10}, "files": [{"sha": "bb30d0d80bdfd9a37c28f27f21db6542c1b15fa2", "filename": "src/libstd/time/duration.rs", "status": "modified", "additions": 13, "deletions": 10, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/7caf753d4413cb0ae7bc266fd89e56f1d3842857/src%2Flibstd%2Ftime%2Fduration.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7caf753d4413cb0ae7bc266fd89e56f1d3842857/src%2Flibstd%2Ftime%2Fduration.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ftime%2Fduration.rs?ref=7caf753d4413cb0ae7bc266fd89e56f1d3842857", "patch": "@@ -73,7 +73,7 @@ impl Duration {\n     /// ```\n     #[stable(feature = \"duration\", since = \"1.3.0\")]\n     #[inline]\n-    pub const fn new(secs: u64, nanos: u32) -> Duration {\n+    pub fn new(secs: u64, nanos: u32) -> Duration {\n         let secs = secs.checked_add((nanos / NANOS_PER_SEC) as u64)\n             .expect(\"overflow in Duration::new\");\n         let nanos = nanos % NANOS_PER_SEC;\n@@ -113,9 +113,10 @@ impl Duration {\n     #[stable(feature = \"duration\", since = \"1.3.0\")]\n     #[inline]\n     pub const fn from_millis(millis: u64) -> Duration {\n-        let secs = millis / MILLIS_PER_SEC;\n-        let nanos = ((millis % MILLIS_PER_SEC) as u32) * NANOS_PER_MILLI;\n-        Duration { secs: secs, nanos: nanos }\n+        Duration {\n+\t\tsecs: millis / MILLIS_PER_SEC,\n+\t\tnanos: ((millis % MILLIS_PER_SEC) as u32) * NANOS_PER_MILLI,\n+\t}\n     }\n \n     /// Creates a new `Duration` from the specified number of microseconds.\n@@ -134,9 +135,10 @@ impl Duration {\n     #[unstable(feature = \"duration_from_micros\", issue = \"44400\")]\n     #[inline]\n     pub const fn from_micros(micros: u64) -> Duration {\n-        let secs = micros / MICROS_PER_SEC;\n-        let nanos = ((micros % MICROS_PER_SEC) as u32) * NANOS_PER_MICRO;\n-        Duration { secs: secs, nanos: nanos }\n+        Duration {\n+\t\tsecs: micros / MICROS_PER_SEC,\n+\t\tnanos: ((micros % MICROS_PER_SEC) as u32) * NANOS_PER_MICRO,\n+\t}\n     }\n \n     /// Creates a new `Duration` from the specified number of nanoseconds.\n@@ -155,9 +157,10 @@ impl Duration {\n     #[unstable(feature = \"duration_extras\", issue = \"46507\")]\n     #[inline]\n     pub const fn from_nanos(nanos: u64) -> Duration {\n-        let secs = nanos / (NANOS_PER_SEC as u64);\n-        let nanos = (nanos % (NANOS_PER_SEC as u64)) as u32;\n-        Duration { secs: secs, nanos: nanos }\n+        Duration {\n+\t\tsecs: nanos / (NANOS_PER_SEC as u64),\n+\t\tnanos: (nanos % (NANOS_PER_SEC as u64)) as u32,\n+\t}\n     }\n \n     /// Returns the number of _whole_ seconds contained by this `Duration`."}]}