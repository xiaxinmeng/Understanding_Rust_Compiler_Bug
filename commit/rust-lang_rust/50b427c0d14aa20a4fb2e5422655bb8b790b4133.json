{"sha": "50b427c0d14aa20a4fb2e5422655bb8b790b4133", "node_id": "C_kwDOAAsO6NoAKDUwYjQyN2MwZDE0YWEyMGE0ZmIyZTU0MjI2NTViYjhiNzkwYjQxMzM", "commit": {"author": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2023-04-04T06:54:26Z"}, "committer": {"name": "Jake Heinz", "email": "jh@discordapp.com", "date": "2023-04-04T06:54:26Z"}, "message": "use crate from autoderef ty", "tree": {"sha": "0dac9d055d507b7ee639e216683b759743758624", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0dac9d055d507b7ee639e216683b759743758624"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50b427c0d14aa20a4fb2e5422655bb8b790b4133", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50b427c0d14aa20a4fb2e5422655bb8b790b4133", "html_url": "https://github.com/rust-lang/rust/commit/50b427c0d14aa20a4fb2e5422655bb8b790b4133", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50b427c0d14aa20a4fb2e5422655bb8b790b4133/comments", "author": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jhgg", "id": 5489149, "node_id": "MDQ6VXNlcjU0ODkxNDk=", "avatar_url": "https://avatars.githubusercontent.com/u/5489149?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jhgg", "html_url": "https://github.com/jhgg", "followers_url": "https://api.github.com/users/jhgg/followers", "following_url": "https://api.github.com/users/jhgg/following{/other_user}", "gists_url": "https://api.github.com/users/jhgg/gists{/gist_id}", "starred_url": "https://api.github.com/users/jhgg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jhgg/subscriptions", "organizations_url": "https://api.github.com/users/jhgg/orgs", "repos_url": "https://api.github.com/users/jhgg/repos", "events_url": "https://api.github.com/users/jhgg/events{/privacy}", "received_events_url": "https://api.github.com/users/jhgg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "94e6a6642c0c4aacc3cc30163c0a7d3d27386ae8", "url": "https://api.github.com/repos/rust-lang/rust/commits/94e6a6642c0c4aacc3cc30163c0a7d3d27386ae8", "html_url": "https://github.com/rust-lang/rust/commit/94e6a6642c0c4aacc3cc30163c0a7d3d27386ae8"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "fde75e8d7df558d8fb1296d7e36dca6e4357bccd", "filename": "crates/ide-assists/src/handlers/generate_delegate_methods.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/50b427c0d14aa20a4fb2e5422655bb8b790b4133/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_delegate_methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50b427c0d14aa20a4fb2e5422655bb8b790b4133/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_delegate_methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-assists%2Fsrc%2Fhandlers%2Fgenerate_delegate_methods.rs?ref=50b427c0d14aa20a4fb2e5422655bb8b790b4133", "patch": "@@ -63,10 +63,10 @@ pub(crate) fn generate_delegate_methods(acc: &mut Assists, ctx: &AssistContext<'\n     };\n \n     let sema_field_ty = ctx.sema.resolve_type(&field_ty)?;\n-    let krate = sema_field_ty.krate(ctx.db());\n     let mut methods = vec![];\n \n     for ty in sema_field_ty.autoderef(ctx.db()) {\n+        let krate = ty.krate(ctx.db());\n         ty.iterate_assoc_items(ctx.db(), krate, |item| {\n             if let hir::AssocItem::Function(f) = item {\n                 if f.self_param(ctx.db()).is_some() && f.is_visible_from(ctx.db(), current_module) {"}]}