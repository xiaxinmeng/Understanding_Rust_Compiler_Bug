{"sha": "c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMzNjI3ZTI1ZWUyNzUzMjNmZjIyNGJmZDdjMGZkMGJjMTM2MmMyOGQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-16T07:54:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-06-16T07:54:59Z"}, "message": "Auto merge of #42631 - malbarbo:wasm32, r=alexcrichton\n\nAdd a travis builder for wasm32-unknown-emscripten\n\nThis commits add an entry to travis matrix that will execute wasm32-unknown-emscripten tests suites.\n\n- Emscripten for asmjs was updated to sdk-1.37.13-64bit\n- The tests are run with node 8.0.0 (it can execute wasm)\n- A wrapper script is used to run each test from the directory where it is (workaround for https://github.com/kripken/emscripten/issues/4542)\n- Some tests are ignore, see #42629 and #42630", "tree": {"sha": "41c9bf11920a9e44ab36fddf442e5a2e3fac3503", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41c9bf11920a9e44ab36fddf442e5a2e3fac3503"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "html_url": "https://github.com/rust-lang/rust/commit/c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4581e89a49c4b1209f9152a38a3cbb909c6209c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/4581e89a49c4b1209f9152a38a3cbb909c6209c9", "html_url": "https://github.com/rust-lang/rust/commit/4581e89a49c4b1209f9152a38a3cbb909c6209c9"}, {"sha": "9da77b3ec5dd99c50629005480323e6684957409", "url": "https://api.github.com/repos/rust-lang/rust/commits/9da77b3ec5dd99c50629005480323e6684957409", "html_url": "https://github.com/rust-lang/rust/commit/9da77b3ec5dd99c50629005480323e6684957409"}], "stats": {"total": 280, "additions": 182, "deletions": 98}, "files": [{"sha": "b95196da356c86cc1fdf60a0c7c257d699a23119", "filename": ".travis.yml", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -36,9 +36,10 @@ matrix:\n     - env: IMAGE=dist-x86_64-linux DEPLOY=1 ALLOW_TRY=1\n     - env: IMAGE=dist-x86_64-musl DEPLOY=1\n     - env: IMAGE=dist-x86_64-netbsd DEPLOY=1\n-    - env: IMAGE=emscripten\n+    - env: IMAGE=asmjs\n     - env: IMAGE=i686-gnu\n     - env: IMAGE=i686-gnu-nopt\n+    # - env: IMAGE=wasm32 issue 42646\n     - env: IMAGE=x86_64-gnu\n     - env: IMAGE=x86_64-gnu-full-bootstrap\n     - env: IMAGE=x86_64-gnu-aux"}, {"sha": "2a1b27334c30d309a2246e02ad8097de2551e84d", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -567,7 +567,9 @@ fn find_tests(dir: &Path,\n         let filename = e.file_name().into_string().unwrap();\n         if (target.contains(\"windows\") && filename.ends_with(\".exe\")) ||\n            (!target.contains(\"windows\") && !filename.contains(\".\")) ||\n-           (target.contains(\"emscripten\") && filename.ends_with(\".js\")) {\n+           (target.contains(\"emscripten\") &&\n+            filename.ends_with(\".js\") &&\n+            !filename.ends_with(\".asm.js\")) {\n             dst.push(e.path());\n         }\n     }"}, {"sha": "899ce1e4569df7bd41a7de302a23f1d42b99b2a2", "filename": "src/ci/docker/asmjs/Dockerfile", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Fci%2Fdocker%2Fasmjs%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Fci%2Fdocker%2Fasmjs%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fasmjs%2FDockerfile?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -0,0 +1,44 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python \\\n+  git \\\n+  cmake \\\n+  sudo \\\n+  gdb \\\n+  xz-utils\n+\n+# dumb-init\n+COPY scripts/dumb-init.sh /scripts/\n+RUN sh /scripts/dumb-init.sh\n+\n+# emscripten\n+COPY scripts/emscripten.sh /scripts/\n+RUN bash /scripts/emscripten.sh\n+\n+# env\n+ENV PATH=$PATH:/emsdk-portable\n+ENV PATH=$PATH:/emsdk-portable/clang/e1.37.13_64bit/\n+ENV PATH=$PATH:/emsdk-portable/emscripten/1.37.13/\n+ENV PATH=$PATH:/emsdk-portable/node/4.1.1_64bit/bin/\n+ENV EMSCRIPTEN=/emsdk-portable/emscripten/1.37.13/\n+ENV BINARYEN_ROOT=/emsdk-portable/clang/e1.37.13_64bit/binaryen/\n+ENV EM_CONFIG=/emsdk-portable/.emscripten\n+\n+ENV TARGETS=asmjs-unknown-emscripten\n+\n+ENV RUST_CONFIGURE_ARGS --target=$TARGETS\n+\n+ENV SCRIPT python2.7 ../x.py test --target $TARGETS\n+\n+# cache\n+COPY scripts/sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n+# init\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]"}, {"sha": "daf398ac0962f805229f66ec9565144fb3e96d6d", "filename": "src/ci/docker/disabled/wasm32/Dockerfile", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32%2FDockerfile?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -0,0 +1,44 @@\n+FROM ubuntu:16.04\n+\n+RUN apt-get update && apt-get install -y --no-install-recommends \\\n+  g++ \\\n+  make \\\n+  file \\\n+  curl \\\n+  ca-certificates \\\n+  python \\\n+  git \\\n+  cmake \\\n+  sudo \\\n+  gdb \\\n+  xz-utils\n+\n+# dumb-init\n+COPY scripts/dumb-init.sh /scripts/\n+RUN sh /scripts/dumb-init.sh\n+\n+# emscripten\n+COPY scripts/emscripten.sh /scripts/\n+RUN bash /scripts/emscripten.sh\n+COPY wasm32/node.sh /usr/local/bin/node\n+\n+# env\n+ENV PATH=$PATH:/emsdk-portable\n+ENV PATH=$PATH:/emsdk-portable/clang/e1.37.13_64bit/\n+ENV PATH=$PATH:/emsdk-portable/emscripten/1.37.13/\n+ENV EMSCRIPTEN=/emsdk-portable/emscripten/1.37.13/\n+ENV BINARYEN_ROOT=/emsdk-portable/clang/e1.37.13_64bit/binaryen/\n+ENV EM_CONFIG=/emsdk-portable/.emscripten\n+\n+ENV TARGETS=wasm32-unknown-emscripten\n+\n+ENV RUST_CONFIGURE_ARGS --target=$TARGETS\n+\n+ENV SCRIPT python2.7 ../x.py test --target $TARGETS\n+\n+# cache\n+COPY scripts/sccache.sh /scripts/\n+RUN sh /scripts/sccache.sh\n+\n+# init\n+ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]"}, {"sha": "dfa7f221ffa2022ae0b235b2e4d0ba3c579688f6", "filename": "src/ci/docker/disabled/wasm32/node.sh", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32%2Fnode.sh", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32%2Fnode.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdisabled%2Fwasm32%2Fnode.sh?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -0,0 +1,18 @@\n+#!/bin/bash\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+path=\"$(dirname $1)\"\n+file=\"$(basename $1)\"\n+\n+shift\n+\n+cd \"$path\"\n+exec /node-v8.0.0-linux-x64/bin/node \"$file\" \"$@\""}, {"sha": "0f0e5b69c32cf787d2a2fafb6dacbd370bce6c7a", "filename": "src/ci/docker/emscripten/Dockerfile", "status": "removed", "additions": 0, "deletions": 41, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/4581e89a49c4b1209f9152a38a3cbb909c6209c9/src%2Fci%2Fdocker%2Femscripten%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/4581e89a49c4b1209f9152a38a3cbb909c6209c9/src%2Fci%2Fdocker%2Femscripten%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Femscripten%2FDockerfile?ref=4581e89a49c4b1209f9152a38a3cbb909c6209c9", "patch": "@@ -1,41 +0,0 @@\n-FROM ubuntu:16.04\n-\n-RUN apt-get update && apt-get install -y --no-install-recommends \\\n-  g++ \\\n-  make \\\n-  file \\\n-  curl \\\n-  ca-certificates \\\n-  python \\\n-  git \\\n-  cmake \\\n-  sudo \\\n-  gdb \\\n-  xz-utils \\\n-  lib32stdc++6\n-\n-RUN curl -o /usr/local/bin/sccache \\\n-      https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-05-12-sccache-x86_64-unknown-linux-musl && \\\n-      chmod +x /usr/local/bin/sccache\n-\n-RUN curl -OL https://github.com/Yelp/dumb-init/releases/download/v1.2.0/dumb-init_1.2.0_amd64.deb && \\\n-    dpkg -i dumb-init_*.deb && \\\n-    rm dumb-init_*.deb\n-ENTRYPOINT [\"/usr/bin/dumb-init\", \"--\"]\n-\n-WORKDIR /tmp\n-COPY emscripten/build-emscripten.sh /tmp/\n-RUN ./build-emscripten.sh\n-ENV PATH=$PATH:/tmp/emsdk_portable\n-ENV PATH=$PATH:/tmp/emsdk_portable/clang/tag-e1.37.10/build_tag-e1.37.10_32/bin\n-ENV PATH=$PATH:/tmp/emsdk_portable/node/4.1.1_32bit/bin\n-ENV PATH=$PATH:/tmp/emsdk_portable/emscripten/tag-1.37.10\n-ENV EMSCRIPTEN=/tmp/emsdk_portable/emscripten/tag-1.37.10\n-\n-ENV RUST_CONFIGURE_ARGS --target=asmjs-unknown-emscripten\n-\n-# Run `emcc` first as it's got a prompt and doesn't actually do anything, after\n-# that's done with do the real build.\n-ENV SCRIPT emcc && \\\n-      python2.7 ../x.py test --target asmjs-unknown-emscripten\n-"}, {"sha": "8d6a28f418bf955b8d75b049d33f49794630e538", "filename": "src/ci/docker/emscripten/build-emscripten.sh", "status": "removed", "additions": 0, "deletions": 53, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/4581e89a49c4b1209f9152a38a3cbb909c6209c9/src%2Fci%2Fdocker%2Femscripten%2Fbuild-emscripten.sh", "raw_url": "https://github.com/rust-lang/rust/raw/4581e89a49c4b1209f9152a38a3cbb909c6209c9/src%2Fci%2Fdocker%2Femscripten%2Fbuild-emscripten.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Femscripten%2Fbuild-emscripten.sh?ref=4581e89a49c4b1209f9152a38a3cbb909c6209c9", "patch": "@@ -1,53 +0,0 @@\n-#!/bin/bash\n-# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n-# file at the top-level directory of this distribution and at\n-# http://rust-lang.org/COPYRIGHT.\n-#\n-# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-# option. This file may not be copied, modified, or distributed\n-# except according to those terms.\n-\n-set -ex\n-\n-hide_output() {\n-  set +x\n-  on_err=\"\n-echo ERROR: An error was encountered with the build.\n-cat /tmp/build.log\n-exit 1\n-\"\n-  trap \"$on_err\" ERR\n-  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n-  PING_LOOP_PID=$!\n-  $@ &> /tmp/build.log\n-  trap - ERR\n-  kill $PING_LOOP_PID\n-  rm /tmp/build.log\n-  set -x\n-}\n-\n-curl https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz | \\\n-    tar xzf -\n-\n-# Some versions of the EMSDK archive have their contents in .emsdk-portable\n-# and others in emsdk_portable. Make sure the EMSDK ends up in a fixed path.\n-if [ -d emsdk-portable ]; then\n-    mv emsdk-portable emsdk_portable\n-fi\n-\n-if [ ! -d emsdk_portable ]; then\n-    echo \"ERROR: Invalid emsdk archive. Dumping working directory.\" >&2\n-    ls -l\n-    exit 1\n-fi\n-\n-# Some versions of the EMSDK set the permissions of the root directory to\n-# 0700. Ensure the directory is readable by all users.\n-chmod 755 emsdk_portable\n-\n-source emsdk_portable/emsdk_env.sh\n-hide_output emsdk update\n-hide_output emsdk install --build=Release sdk-tag-1.37.10-32bit\n-hide_output emsdk activate --build=Release sdk-tag-1.37.10-32bit"}, {"sha": "8aa5a98d7fc5296d6eb6b3893e9d88fa81725bc3", "filename": "src/ci/docker/scripts/emscripten.sh", "status": "added", "additions": 53, "deletions": 0, "changes": 53, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Fci%2Fdocker%2Fscripts%2Femscripten.sh", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Fci%2Fdocker%2Fscripts%2Femscripten.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fscripts%2Femscripten.sh?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -0,0 +1,53 @@\n+# Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+set -ex\n+\n+hide_output() {\n+  set +x\n+  on_err=\"\n+echo ERROR: An error was encountered with the build.\n+cat /tmp/build.log\n+exit 1\n+\"\n+  trap \"$on_err\" ERR\n+  bash -c \"while true; do sleep 30; echo \\$(date) - building ...; done\" &\n+  PING_LOOP_PID=$!\n+  $@ &> /tmp/build.log\n+  trap - ERR\n+  kill $PING_LOOP_PID\n+  rm -f /tmp/build.log\n+  set -x\n+}\n+\n+cd /\n+curl -L https://s3.amazonaws.com/mozilla-games/emscripten/releases/emsdk-portable.tar.gz | \\\n+    tar -xz\n+\n+cd /emsdk-portable\n+./emsdk update\n+hide_output ./emsdk install sdk-1.37.13-64bit\n+./emsdk activate sdk-1.37.13-64bit\n+\n+# Compile and cache libc\n+source ./emsdk_env.sh\n+echo \"main(){}\" > a.c\n+HOME=/emsdk-portable/ emcc a.c\n+HOME=/emsdk-portable/ emcc -s BINARYEN=1 a.c\n+rm -f a.*\n+\n+# Make emsdk usable by any user\n+cp /root/.emscripten /emsdk-portable\n+chmod a+rxw -R /emsdk-portable\n+\n+# node 8 is required to run wasm\n+cd /\n+curl -L https://nodejs.org/dist/v8.0.0/node-v8.0.0-linux-x64.tar.xz | \\\n+    tar -xJ"}, {"sha": "9934e1dab9662696e07bc0fe6761f49522a826eb", "filename": "src/libcore/tests/num/dec2flt/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Flibcore%2Ftests%2Fnum%2Fdec2flt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Flibcore%2Ftests%2Fnum%2Fdec2flt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fdec2flt%2Fmod.rs?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -33,6 +33,7 @@ macro_rules! test_literal {\n     })\n }\n \n+#[cfg_attr(all(target_arch = \"wasm32\", target_os = \"emscripten\"), ignore)] // issue 42630\n #[test]\n fn ordinary() {\n     test_literal!(1.0);\n@@ -43,6 +44,7 @@ fn ordinary() {\n     test_literal!(2.2250738585072014e-308);\n }\n \n+#[cfg_attr(all(target_arch = \"wasm32\", target_os = \"emscripten\"), ignore)] // issue 42630\n #[test]\n fn special_code_paths() {\n     test_literal!(36893488147419103229.0); // 2^65 - 3, triggers half-to-even with even significand"}, {"sha": "c9cd2bf5a9ae7db59ca89794468fc1e9c4c7333c", "filename": "src/libcore/tests/num/dec2flt/rawfp.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Flibcore%2Ftests%2Fnum%2Fdec2flt%2Frawfp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Flibcore%2Ftests%2Fnum%2Fdec2flt%2Frawfp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fdec2flt%2Frawfp.rs?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -86,6 +86,7 @@ fn rounding_overflow() {\n     assert_eq!(rounded.k, adjusted_k + 1);\n }\n \n+#[cfg_attr(all(target_arch = \"wasm32\", target_os = \"emscripten\"), ignore)] // issue 42630\n #[test]\n fn prev_float_monotonic() {\n     let mut x = 1.0;\n@@ -121,6 +122,7 @@ fn next_float_inf() {\n     assert_eq!(next_float(f64::INFINITY), f64::INFINITY);\n }\n \n+#[cfg_attr(all(target_arch = \"wasm32\", target_os = \"emscripten\"), ignore)] // issue 42630\n #[test]\n fn next_prev_identity() {\n     for &x in &SOME_FLOATS {\n@@ -131,6 +133,7 @@ fn next_prev_identity() {\n     }\n }\n \n+#[cfg_attr(all(target_arch = \"wasm32\", target_os = \"emscripten\"), ignore)] // issue 42630\n #[test]\n fn next_float_monotonic() {\n     let mut x = 0.49999999999999;"}, {"sha": "03772a765cc6a2ead15fd9346c866c675a5461b1", "filename": "src/libcore/tests/num/flt2dec/strategy/dragon.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fstrategy%2Fdragon.rs?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -24,6 +24,7 @@ fn test_mul_pow10() {\n     }\n }\n \n+#[cfg_attr(all(target_arch = \"wasm32\", target_os = \"emscripten\"), ignore)] // issue 42630\n #[test]\n fn shortest_sanity_test() {\n     f64_shortest_sanity_test(format_shortest);"}, {"sha": "17fb99bcc92249e3f889c5aec75d23f762ec604b", "filename": "src/libcore/tests/num/flt2dec/strategy/grisu.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fflt2dec%2Fstrategy%2Fgrisu.rs?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -38,6 +38,7 @@ fn test_max_pow10_no_more_than() {\n }\n \n \n+#[cfg_attr(all(target_arch = \"wasm32\", target_os = \"emscripten\"), ignore)] // issue 42630\n #[test]\n fn shortest_sanity_test() {\n     f64_shortest_sanity_test(format_shortest);"}, {"sha": "8fdcc36a268e8a9288d637a00bc7cd675c7c4123", "filename": "src/libcore/tests/num/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Flibcore%2Ftests%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Flibcore%2Ftests%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ftests%2Fnum%2Fmod.rs?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -169,6 +169,7 @@ test_impl_from! { test_u16f64, u16, f64 }\n test_impl_from! { test_u32f64, u32, f64 }\n \n // Float -> Float\n+#[cfg_attr(all(target_arch = \"wasm32\", target_os = \"emscripten\"), ignore)] // issue 42630\n #[test]\n fn test_f32f64() {\n     use core::f32;"}, {"sha": "813998b75028f5907d21cfb38caf85ace7d0f679", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -1158,6 +1158,7 @@ mod tests {\n         assert_eq!(Fp::Zero, neg_zero.classify());\n     }\n \n+    #[cfg_attr(all(target_arch = \"wasm32\", target_os = \"emscripten\"), ignore)] // issue 42630\n     #[test]\n     fn test_one() {\n         let one: f64 = 1.0f64;\n@@ -1210,6 +1211,7 @@ mod tests {\n         assert!((-109.2f64).is_finite());\n     }\n \n+    #[cfg_attr(all(target_arch = \"wasm32\", target_os = \"emscripten\"), ignore)] // issue 42630\n     #[test]\n     fn test_is_normal() {\n         let nan: f64 = NAN;\n@@ -1227,6 +1229,7 @@ mod tests {\n         assert!(!1e-308f64.is_normal());\n     }\n \n+    #[cfg_attr(all(target_arch = \"wasm32\", target_os = \"emscripten\"), ignore)] // issue 42630\n     #[test]\n     fn test_classify() {\n         let nan: f64 = NAN;"}, {"sha": "fb257bf7b500c50f09c82713b9cb80be4e71e395", "filename": "src/test/run-pass/asm-concat-src.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n // pretty-expanded FIXME #23616\n-// ignore-asmjs\n+// ignore-emscripten\n \n #![feature(asm)]\n "}, {"sha": "6e3e4be0d8e87cbb8a3cfb262e30fe09f2923943", "filename": "src/test/run-pass/conditional-compile-arch.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Ftest%2Frun-pass%2Fconditional-compile-arch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Ftest%2Frun-pass%2Fconditional-compile-arch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconditional-compile-arch.rs?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -36,3 +36,6 @@ pub fn main() { }\n \n #[cfg(target_arch = \"asmjs\")]\n pub fn main() { }\n+\n+#[cfg(target_arch = \"wasm32\")]\n+pub fn main() { }"}, {"sha": "56036caca15bfe5782230f8154314427db785dbc", "filename": "src/test/run-pass/issue-27859.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Ftest%2Frun-pass%2Fissue-27859.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Ftest%2Frun-pass%2Fissue-27859.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-27859.rs?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -8,6 +8,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n+// ignore-wasm32 issue 42629\n+\n #[inline(never)]\n fn foo(a: f32, b: f32) -> f32 {\n     a % b"}, {"sha": "7e70c4a7ab38eba75bc387aaece3c10565c6d316", "filename": "src/test/run-pass/out-of-stack.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Ftest%2Frun-pass%2Fout-of-stack.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c3627e25ee275323ff224bfd7c0fd0bc1362c28d/src%2Ftest%2Frun-pass%2Fout-of-stack.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fout-of-stack.rs?ref=c3627e25ee275323ff224bfd7c0fd0bc1362c28d", "patch": "@@ -10,7 +10,7 @@\n \n // ignore-android: FIXME (#20004)\n // ignore-musl\n-// ignore-asmjs\n+// ignore-emscripten\n \n #![feature(asm)]\n #![feature(libc)]"}]}