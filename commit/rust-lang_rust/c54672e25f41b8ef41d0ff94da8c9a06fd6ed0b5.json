{"sha": "c54672e25f41b8ef41d0ff94da8c9a06fd6ed0b5", "node_id": "C_kwDOAAsO6NoAKGM1NDY3MmUyNWY0MWI4ZWY0MWQwZmY5NGRhOGM5YTA2ZmQ2ZWQwYjU", "commit": {"author": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-06-15T22:02:55Z"}, "committer": {"name": "Ben Kimock", "email": "kimockb@gmail.com", "date": "2023-06-16T13:06:12Z"}, "message": "Disable alignment checks on i686-pc-windows-msvc", "tree": {"sha": "2134074b61865fdc300cf2e0882a5bebc9d9c518", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2134074b61865fdc300cf2e0882a5bebc9d9c518"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c54672e25f41b8ef41d0ff94da8c9a06fd6ed0b5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c54672e25f41b8ef41d0ff94da8c9a06fd6ed0b5", "html_url": "https://github.com/rust-lang/rust/commit/c54672e25f41b8ef41d0ff94da8c9a06fd6ed0b5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c54672e25f41b8ef41d0ff94da8c9a06fd6ed0b5/comments", "author": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "committer": {"login": "saethlin", "id": 12105168, "node_id": "MDQ6VXNlcjEyMTA1MTY4", "avatar_url": "https://avatars.githubusercontent.com/u/12105168?v=4", "gravatar_id": "", "url": "https://api.github.com/users/saethlin", "html_url": "https://github.com/saethlin", "followers_url": "https://api.github.com/users/saethlin/followers", "following_url": "https://api.github.com/users/saethlin/following{/other_user}", "gists_url": "https://api.github.com/users/saethlin/gists{/gist_id}", "starred_url": "https://api.github.com/users/saethlin/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/saethlin/subscriptions", "organizations_url": "https://api.github.com/users/saethlin/orgs", "repos_url": "https://api.github.com/users/saethlin/repos", "events_url": "https://api.github.com/users/saethlin/events{/privacy}", "received_events_url": "https://api.github.com/users/saethlin/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99b334696fffe8c08d2e6a978862849d5a89f875", "url": "https://api.github.com/repos/rust-lang/rust/commits/99b334696fffe8c08d2e6a978862849d5a89f875", "html_url": "https://github.com/rust-lang/rust/commit/99b334696fffe8c08d2e6a978862849d5a89f875"}], "stats": {"total": 25, "additions": 25, "deletions": 0}, "files": [{"sha": "3987614f951ebb57b32f881ffb001b692f9fde93", "filename": "compiler/rustc_mir_transform/src/check_alignment.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/c54672e25f41b8ef41d0ff94da8c9a06fd6ed0b5/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54672e25f41b8ef41d0ff94da8c9a06fd6ed0b5/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fcheck_alignment.rs?ref=c54672e25f41b8ef41d0ff94da8c9a06fd6ed0b5", "patch": "@@ -15,6 +15,9 @@ pub struct CheckAlignment;\n \n impl<'tcx> MirPass<'tcx> for CheckAlignment {\n     fn is_enabled(&self, sess: &Session) -> bool {\n+        if sess.target.llvm_target == \"i686-pc-windows-msvc\" {\n+            return false;\n+        }\n         sess.opts.debug_assertions\n     }\n "}, {"sha": "d1bf3d46a7c7abc96adb79ff7b526b3b58326917", "filename": "tests/ui/mir/mir_alignment_check.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/c54672e25f41b8ef41d0ff94da8c9a06fd6ed0b5/tests%2Fui%2Fmir%2Fmir_alignment_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54672e25f41b8ef41d0ff94da8c9a06fd6ed0b5/tests%2Fui%2Fmir%2Fmir_alignment_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmir%2Fmir_alignment_check.rs?ref=c54672e25f41b8ef41d0ff94da8c9a06fd6ed0b5", "patch": "@@ -1,5 +1,6 @@\n // run-fail\n // ignore-wasm32-bare: No panic messages\n+// ignore-i686-pc-windows-msvc: #112480\n // compile-flags: -C debug-assertions\n // error-pattern: misaligned pointer dereference: address must be a multiple of 0x4 but is\n "}, {"sha": "56388c1047e9adff8280561bafa71ae64d7491ba", "filename": "tests/ui/mir/mir_alignment_check_i686-pc-windows-msvc.rs", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/c54672e25f41b8ef41d0ff94da8c9a06fd6ed0b5/tests%2Fui%2Fmir%2Fmir_alignment_check_i686-pc-windows-msvc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c54672e25f41b8ef41d0ff94da8c9a06fd6ed0b5/tests%2Fui%2Fmir%2Fmir_alignment_check_i686-pc-windows-msvc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmir%2Fmir_alignment_check_i686-pc-windows-msvc.rs?ref=c54672e25f41b8ef41d0ff94da8c9a06fd6ed0b5", "patch": "@@ -0,0 +1,21 @@\n+// run-pass\n+// only-i686-pc-windows-msvc\n+// compile-flags: -Copt-level=0 -Cdebug-assertions=yes\n+\n+// MSVC isn't sure if on 32-bit Windows its u64 type is 8-byte-aligned or 4-byte-aligned.\n+// So this test ensures that on i686-pc-windows-msvc, we do not insert a runtime check\n+// that will fail on dereferencing of a pointer to u64 which is not 8-byte-aligned but is\n+// 4-byte-aligned.\n+\n+#![feature(strict_provenance)]\n+\n+fn main() {\n+    let mut x = [0u64; 2];\n+    let ptr: *mut u8 = x.as_mut_ptr().cast::<u8>();\n+    unsafe {\n+        let misaligned = ptr.add(4).cast::<u64>();\n+        assert!(misaligned.addr() % 8 != 0);\n+        assert!(misaligned.addr() % 4 == 0);\n+        *misaligned = 42;\n+    }\n+}"}]}