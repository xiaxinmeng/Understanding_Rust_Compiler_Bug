{"sha": "f1e07103d3ebac4e820311254e077481d00bed49", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYxZTA3MTAzZDNlYmFjNGU4MjAzMTEyNTRlMDc3NDgxZDAwYmVkNDk=", "commit": {"author": {"name": "Donough Liu", "email": "ldm2993593805@163.com", "date": "2020-06-20T12:00:36Z"}, "committer": {"name": "Donough Liu", "email": "ldm2993593805@163.com", "date": "2020-06-20T12:00:36Z"}, "message": "Prevent incorrect help message for dereference suggestion", "tree": {"sha": "e1adf3654582399a0d913fdd1dc9488f0c060773", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e1adf3654582399a0d913fdd1dc9488f0c060773"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f1e07103d3ebac4e820311254e077481d00bed49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f1e07103d3ebac4e820311254e077481d00bed49", "html_url": "https://github.com/rust-lang/rust/commit/f1e07103d3ebac4e820311254e077481d00bed49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f1e07103d3ebac4e820311254e077481d00bed49/comments", "author": {"login": "ldm0", "id": 31354274, "node_id": "MDQ6VXNlcjMxMzU0Mjc0", "avatar_url": "https://avatars.githubusercontent.com/u/31354274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldm0", "html_url": "https://github.com/ldm0", "followers_url": "https://api.github.com/users/ldm0/followers", "following_url": "https://api.github.com/users/ldm0/following{/other_user}", "gists_url": "https://api.github.com/users/ldm0/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldm0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldm0/subscriptions", "organizations_url": "https://api.github.com/users/ldm0/orgs", "repos_url": "https://api.github.com/users/ldm0/repos", "events_url": "https://api.github.com/users/ldm0/events{/privacy}", "received_events_url": "https://api.github.com/users/ldm0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ldm0", "id": 31354274, "node_id": "MDQ6VXNlcjMxMzU0Mjc0", "avatar_url": "https://avatars.githubusercontent.com/u/31354274?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ldm0", "html_url": "https://github.com/ldm0", "followers_url": "https://api.github.com/users/ldm0/followers", "following_url": "https://api.github.com/users/ldm0/following{/other_user}", "gists_url": "https://api.github.com/users/ldm0/gists{/gist_id}", "starred_url": "https://api.github.com/users/ldm0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ldm0/subscriptions", "organizations_url": "https://api.github.com/users/ldm0/orgs", "repos_url": "https://api.github.com/users/ldm0/repos", "events_url": "https://api.github.com/users/ldm0/events{/privacy}", "received_events_url": "https://api.github.com/users/ldm0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ef68bf3929e5073e84b48fd76a689b071842d756", "url": "https://api.github.com/repos/rust-lang/rust/commits/ef68bf3929e5073e84b48fd76a689b071842d756", "html_url": "https://github.com/rust-lang/rust/commit/ef68bf3929e5073e84b48fd76a689b071842d756"}], "stats": {"total": 70, "additions": 68, "deletions": 2}, "files": [{"sha": "176bd90303dddfe93230763329fd14597dd5a59e", "filename": "src/librustc_trait_selection/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1e07103d3ebac4e820311254e077481d00bed49/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1e07103d3ebac4e820311254e077481d00bed49/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trait_selection%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=f1e07103d3ebac4e820311254e077481d00bed49", "patch": "@@ -500,7 +500,7 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n                     if let Ok(src) = self.tcx.sess.source_map().span_to_snippet(span) {\n                         // Don't care about `&mut` because `DerefMut` is used less\n                         // often and user will not expect autoderef happens.\n-                        if src.starts_with(\"&\") {\n+                        if src.starts_with(\"&\") && !src.starts_with(\"&mut \") {\n                             let derefs = \"*\".repeat(steps);\n                             err.span_suggestion(\n                                 span,"}, {"sha": "b7160b75c605ed966f4b05dbe97b9bebd15101d7", "filename": "src/test/ui/traits/trait-suggest-deferences-multiple-0.fixed", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f1e07103d3ebac4e820311254e077481d00bed49/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-0.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/f1e07103d3ebac4e820311254e077481d00bed49/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-0.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-0.fixed?ref=f1e07103d3ebac4e820311254e077481d00bed49", "previous_filename": "src/test/ui/traits/trait-suggest-deferences-multiple.fixed"}, {"sha": "9ac55177ffadd1d337db6c75cbfc6126b340f92f", "filename": "src/test/ui/traits/trait-suggest-deferences-multiple-0.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/f1e07103d3ebac4e820311254e077481d00bed49/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-0.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1e07103d3ebac4e820311254e077481d00bed49/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-0.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-0.rs?ref=f1e07103d3ebac4e820311254e077481d00bed49", "previous_filename": "src/test/ui/traits/trait-suggest-deferences-multiple.rs"}, {"sha": "add34a553bc9fbdab247953b48a0c23c7a113ebd", "filename": "src/test/ui/traits/trait-suggest-deferences-multiple-0.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f1e07103d3ebac4e820311254e077481d00bed49/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-0.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1e07103d3ebac4e820311254e077481d00bed49/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-0.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-0.stderr?ref=f1e07103d3ebac4e820311254e077481d00bed49", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `&Baz: Happy` is not satisfied\n-  --> $DIR/trait-suggest-deferences-multiple.rs:34:9\n+  --> $DIR/trait-suggest-deferences-multiple-0.rs:34:9\n    |\n LL | fn foo<T>(_: T) where T: Happy {}\n    |                          ----- required by this bound in `foo`", "previous_filename": "src/test/ui/traits/trait-suggest-deferences-multiple.stderr"}, {"sha": "91c6c7924a4082d911025bcc264ec1a77124a777", "filename": "src/test/ui/traits/trait-suggest-deferences-multiple-1.rs", "status": "added", "additions": 54, "deletions": 0, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/f1e07103d3ebac4e820311254e077481d00bed49/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f1e07103d3ebac4e820311254e077481d00bed49/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-1.rs?ref=f1e07103d3ebac4e820311254e077481d00bed49", "patch": "@@ -0,0 +1,54 @@\n+use std::ops::{Deref, DerefMut};\n+\n+trait Happy {}\n+struct LDM;\n+impl Happy for &mut LDM {}\n+\n+struct Foo(LDM);\n+struct Bar(Foo);\n+struct Baz(Bar);\n+impl Deref for Foo {\n+    type Target = LDM;\n+    fn deref(&self) -> &Self::Target {\n+        &self.0\n+    }\n+}\n+impl Deref for Bar {\n+    type Target = Foo;\n+    fn deref(&self) -> &Self::Target {\n+        &self.0\n+    }\n+}\n+impl Deref for Baz {\n+    type Target = Bar;\n+    fn deref(&self) -> &Self::Target {\n+        &self.0\n+    }\n+}\n+impl DerefMut for Foo {\n+    fn deref_mut(&mut self) -> &mut Self::Target {\n+        &mut self.0\n+    }\n+}\n+impl DerefMut for Bar {\n+    fn deref_mut(&mut self) -> &mut Self::Target {\n+        &mut self.0\n+    }\n+}\n+impl DerefMut for Baz {\n+    fn deref_mut(&mut self) -> &mut Self::Target {\n+        &mut self.0\n+    }\n+}\n+\n+\n+fn foo<T>(_: T) where T: Happy {}\n+\n+fn main() {\n+    // Currently the compiler doesn't try to suggest dereferences for situations\n+    // where DerefMut involves. So this test is meant to ensure compiler doesn't\n+    // generate incorrect help message.\n+    let mut baz = Baz(Bar(Foo(LDM)));\n+    foo(&mut baz);\n+    //~^ ERROR the trait bound `&mut Baz: Happy` is not satisfied\n+}"}, {"sha": "e90278fa16f0ee2d600958cf85835a17ac25a0c7", "filename": "src/test/ui/traits/trait-suggest-deferences-multiple-1.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/f1e07103d3ebac4e820311254e077481d00bed49/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f1e07103d3ebac4e820311254e077481d00bed49/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-deferences-multiple-1.stderr?ref=f1e07103d3ebac4e820311254e077481d00bed49", "patch": "@@ -0,0 +1,12 @@\n+error[E0277]: the trait bound `&mut Baz: Happy` is not satisfied\n+  --> $DIR/trait-suggest-deferences-multiple-1.rs:52:9\n+   |\n+LL | fn foo<T>(_: T) where T: Happy {}\n+   |                          ----- required by this bound in `foo`\n+...\n+LL |     foo(&mut baz);\n+   |         ^^^^^^^^ the trait `Happy` is not implemented for `&mut Baz`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0277`."}]}