{"sha": "2cc81ac531c10a678ee25128a36fdc56ba00aaa3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjYzgxYWM1MzFjMTBhNjc4ZWUyNTEyOGEzNmZkYzU2YmEwMGFhYTM=", "commit": {"author": {"name": "Travis Watkins", "email": "amaranth@ubuntu.com", "date": "2015-01-03T08:49:42Z"}, "committer": {"name": "Travis Watkins", "email": "amaranth@ubuntu.com", "date": "2015-01-13T07:29:01Z"}, "message": "Return passed value from black_box\n\nBy returning the passed value black_box can be used on data being\npassed to a function being benchmarked. This ensures the compiler\ndoes not optimize the function for the input which could result in\nthe entire function being optimized away.", "tree": {"sha": "450536f5b6bec0f7e5de63250d6c8d02d1839f20", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/450536f5b6bec0f7e5de63250d6c8d02d1839f20"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cc81ac531c10a678ee25128a36fdc56ba00aaa3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cc81ac531c10a678ee25128a36fdc56ba00aaa3", "html_url": "https://github.com/rust-lang/rust/commit/2cc81ac531c10a678ee25128a36fdc56ba00aaa3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cc81ac531c10a678ee25128a36fdc56ba00aaa3/comments", "author": {"login": "amaranth", "id": 341418, "node_id": "MDQ6VXNlcjM0MTQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/341418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amaranth", "html_url": "https://github.com/amaranth", "followers_url": "https://api.github.com/users/amaranth/followers", "following_url": "https://api.github.com/users/amaranth/following{/other_user}", "gists_url": "https://api.github.com/users/amaranth/gists{/gist_id}", "starred_url": "https://api.github.com/users/amaranth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amaranth/subscriptions", "organizations_url": "https://api.github.com/users/amaranth/orgs", "repos_url": "https://api.github.com/users/amaranth/repos", "events_url": "https://api.github.com/users/amaranth/events{/privacy}", "received_events_url": "https://api.github.com/users/amaranth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "amaranth", "id": 341418, "node_id": "MDQ6VXNlcjM0MTQxOA==", "avatar_url": "https://avatars.githubusercontent.com/u/341418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/amaranth", "html_url": "https://github.com/amaranth", "followers_url": "https://api.github.com/users/amaranth/followers", "following_url": "https://api.github.com/users/amaranth/following{/other_user}", "gists_url": "https://api.github.com/users/amaranth/gists{/gist_id}", "starred_url": "https://api.github.com/users/amaranth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/amaranth/subscriptions", "organizations_url": "https://api.github.com/users/amaranth/orgs", "repos_url": "https://api.github.com/users/amaranth/repos", "events_url": "https://api.github.com/users/amaranth/events{/privacy}", "received_events_url": "https://api.github.com/users/amaranth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d5fbae33897a8340542f21b6ded913148ca9199", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d5fbae33897a8340542f21b6ded913148ca9199", "html_url": "https://github.com/rust-lang/rust/commit/3d5fbae33897a8340542f21b6ded913148ca9199"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "c00246598c303c94bdccd58287bf86b3f30ca02f", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/2cc81ac531c10a678ee25128a36fdc56ba00aaa3/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2cc81ac531c10a678ee25128a36fdc56ba00aaa3/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=2cc81ac531c10a678ee25128a36fdc56ba00aaa3", "patch": "@@ -1332,10 +1332,11 @@ impl MetricMap {\n /// elimination.\n ///\n /// This function is a no-op, and does not even read from `dummy`.\n-pub fn black_box<T>(dummy: T) {\n+pub fn black_box<T>(dummy: T) -> T {\n     // we need to \"use\" the argument in some way LLVM can't\n     // introspect.\n     unsafe {asm!(\"\" : : \"r\"(&dummy))}\n+    dummy\n }\n \n "}]}