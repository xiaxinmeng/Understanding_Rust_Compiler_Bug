{"sha": "f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY5ZGVlMDRhYWFiYzBlZTM4ZjkxNzQ0ZTA3ZmU2N2YzNmVjNmM4ZTk=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-10T03:30:03Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-08-10T14:33:22Z"}, "message": "std: Iterator.len_ -> .len", "tree": {"sha": "8f4c820450000fe20dc036db485afed156e9e0a9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8f4c820450000fe20dc036db485afed156e9e0a9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9", "html_url": "https://github.com/rust-lang/rust/commit/f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "74d2552b0ab671a7455b5a60972c0cc6e3ecdb82", "url": "https://api.github.com/repos/rust-lang/rust/commits/74d2552b0ab671a7455b5a60972c0cc6e3ecdb82", "html_url": "https://github.com/rust-lang/rust/commit/74d2552b0ab671a7455b5a60972c0cc6e3ecdb82"}], "stats": {"total": 29, "additions": 14, "deletions": 15}, "files": [{"sha": "0fb64152d376c6eab42d744c83e21a3abf695979", "filename": "src/compiletest/runtest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9/src%2Fcompiletest%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9/src%2Fcompiletest%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fruntest.rs?ref=f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9", "patch": "@@ -938,7 +938,7 @@ fn disassemble_extract(config: &config, _props: &TestProps,\n \n fn count_extracted_lines(p: &Path) -> uint {\n     let x = io::read_whole_file_str(&p.with_filetype(\"ll\")).unwrap();\n-    x.line_iter().len_()\n+    x.line_iter().len()\n }\n \n "}, {"sha": "19a72b0029fb2ab86b2aafb602727d7aa420c7b1", "filename": "src/libextra/dlist.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9/src%2Flibextra%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9/src%2Flibextra%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Fdlist.rs?ref=f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9", "patch": "@@ -1077,31 +1077,31 @@ mod tests {\n         let v = &[0, ..128];\n         let m: DList<int> = v.iter().map(|&x|x).collect();\n         do b.iter {\n-            assert!(m.iter().len_() == 128);\n+            assert!(m.iter().len() == 128);\n         }\n     }\n     #[bench]\n     fn bench_iter_mut(b: &mut test::BenchHarness) {\n         let v = &[0, ..128];\n         let mut m: DList<int> = v.iter().map(|&x|x).collect();\n         do b.iter {\n-            assert!(m.mut_iter().len_() == 128);\n+            assert!(m.mut_iter().len() == 128);\n         }\n     }\n     #[bench]\n     fn bench_iter_rev(b: &mut test::BenchHarness) {\n         let v = &[0, ..128];\n         let m: DList<int> = v.iter().map(|&x|x).collect();\n         do b.iter {\n-            assert!(m.rev_iter().len_() == 128);\n+            assert!(m.rev_iter().len() == 128);\n         }\n     }\n     #[bench]\n     fn bench_iter_mut_rev(b: &mut test::BenchHarness) {\n         let v = &[0, ..128];\n         let mut m: DList<int> = v.iter().map(|&x|x).collect();\n         do b.iter {\n-            assert!(m.mut_rev_iter().len_() == 128);\n+            assert!(m.mut_rev_iter().len() == 128);\n         }\n     }\n }"}, {"sha": "44cb8065b382b2503749be7a168eae84c34fc7ab", "filename": "src/librustpkg/version.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9/src%2Flibrustpkg%2Fversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9/src%2Flibrustpkg%2Fversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Fversion.rs?ref=f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9", "patch": "@@ -200,7 +200,7 @@ fn try_parsing_version(s: &str) -> Option<Version> {\n /// Just an approximation\n fn is_url_like(p: &Path) -> bool {\n     let str = p.to_str();\n-    str.split_iter('/').len_() > 2\n+    str.split_iter('/').len() > 2\n }\n \n /// If s is of the form foo#bar, where bar is a valid version\n@@ -215,7 +215,7 @@ pub fn split_version_general<'a>(s: &'a str, sep: char) -> Option<(&'a str, Vers\n     for st in s.split_iter(sep) {\n         debug!(\"whole = %s part = %s\", s, st);\n     }\n-    if s.split_iter(sep).len_() > 2 {\n+    if s.split_iter(sep).len() > 2 {\n         return None;\n     }\n     match s.rfind(sep) {"}, {"sha": "dc9550f6e4d4687be15347cb0f33d4a11abea57a", "filename": "src/libstd/iterator.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9/src%2Flibstd%2Fiterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9/src%2Flibstd%2Fiterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fiterator.rs?ref=f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9", "patch": "@@ -409,19 +409,18 @@ pub trait Iterator<A> {\n         accum\n     }\n \n-    // FIXME: #5898: should be called len\n     /// Counts the number of elements in this iterator.\n     ///\n     /// # Example\n     ///\n     /// ~~~ {.rust}\n     /// let a = [1, 2, 3, 4, 5];\n     /// let mut it = a.iter();\n-    /// assert!(it.len_() == 5);\n-    /// assert!(it.len_() == 0);\n+    /// assert!(it.len() == 5);\n+    /// assert!(it.len() == 0);\n     /// ~~~\n     #[inline]\n-    fn len_(&mut self) -> uint {\n+    fn len(&mut self) -> uint {\n         self.fold(0, |cnt, _x| cnt + 1)\n     }\n \n@@ -1718,9 +1717,9 @@ mod tests {\n     #[test]\n     fn test_iterator_len() {\n         let v = &[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n-        assert_eq!(v.slice(0, 4).iter().len_(), 4);\n-        assert_eq!(v.slice(0, 10).iter().len_(), 10);\n-        assert_eq!(v.slice(0, 0).iter().len_(), 0);\n+        assert_eq!(v.slice(0, 4).iter().len(), 4);\n+        assert_eq!(v.slice(0, 10).iter().len(), 10);\n+        assert_eq!(v.slice(0, 0).iter().len(), 0);\n     }\n \n     #[test]"}, {"sha": "df71a6f054a2abc30105f08aea3acc35b568ac36", "filename": "src/libstd/str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9/src%2Flibstd%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9/src%2Flibstd%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstr.rs?ref=f9dee04aaabc0ee38f91744e07fe67f36ec6c8e9", "patch": "@@ -1593,7 +1593,7 @@ impl<'self> StrSlice<'self> for &'self str {\n \n     /// Returns the number of characters that a string holds\n     #[inline]\n-    fn char_len(&self) -> uint { self.iter().len_() }\n+    fn char_len(&self) -> uint { self.iter().len() }\n \n     /// Returns a slice of the given string from the byte range\n     /// [`begin`..`end`)"}]}