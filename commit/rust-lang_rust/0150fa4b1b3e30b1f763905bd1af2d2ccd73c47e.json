{"sha": "0150fa4b1b3e30b1f763905bd1af2d2ccd73c47e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxNTBmYTRiMWIzZTMwYjFmNzYzOTA1YmQxYWYyZDJjY2Q3M2M0N2U=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-10-09T00:33:02Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2014-11-21T21:17:09Z"}, "message": "core: Rename Char::len_utf8_bytes to Char::len_utf8\n\n\"bytes\" is redundant.\n\nDeprecate the old.", "tree": {"sha": "07115d546445ccc1c0636a03444e9810bc743d89", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/07115d546445ccc1c0636a03444e9810bc743d89"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0150fa4b1b3e30b1f763905bd1af2d2ccd73c47e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0150fa4b1b3e30b1f763905bd1af2d2ccd73c47e", "html_url": "https://github.com/rust-lang/rust/commit/0150fa4b1b3e30b1f763905bd1af2d2ccd73c47e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0150fa4b1b3e30b1f763905bd1af2d2ccd73c47e/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acb5fefd6d9933b345873355c2c0100184c74727", "url": "https://api.github.com/repos/rust-lang/rust/commits/acb5fefd6d9933b345873355c2c0100184c74727", "html_url": "https://github.com/rust-lang/rust/commit/acb5fefd6d9933b345873355c2c0100184c74727"}], "stats": {"total": 9, "additions": 9, "deletions": 0}, "files": [{"sha": "82dc2becf28cfacdc0b0d0a3b5e2b16bc8ba2d69", "filename": "src/libcore/char.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/0150fa4b1b3e30b1f763905bd1af2d2ccd73c47e/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0150fa4b1b3e30b1f763905bd1af2d2ccd73c47e/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=0150fa4b1b3e30b1f763905bd1af2d2ccd73c47e", "patch": "@@ -316,8 +316,13 @@ pub trait Char {\n \n     /// Returns the amount of bytes this character would need if encoded in\n     /// UTF-8.\n+    #[deprecated = \"use len_utf8\"]\n     fn len_utf8_bytes(&self) -> uint;\n \n+    /// Returns the amount of bytes this character would need if encoded in\n+    /// UTF-8.\n+    fn len_utf8(&self) -> uint;\n+\n     /// Encodes this character as UTF-8 into the provided byte buffer,\n     /// and then returns the number of bytes written.\n     ///\n@@ -352,8 +357,12 @@ impl Char for char {\n     fn escape_default(&self, f: |char|) { escape_default(*self, f) }\n \n     #[inline]\n+    #[deprecated = \"use len_utf8\"]\n     fn len_utf8_bytes(&self) -> uint { len_utf8_bytes(*self) }\n \n+    #[inline]\n+    fn len_utf8(&self) -> uint { len_utf8_bytes(*self) }\n+\n     #[inline]\n     fn encode_utf8<'a>(&self, dst: &'a mut [u8]) -> Option<uint> {\n         // Marked #[inline] to allow llvm optimizing it away"}]}