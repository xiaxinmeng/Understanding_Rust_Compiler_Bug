{"sha": "fc5a361c84b54315a06cdbcc003e7b748ec6ac4c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjNWEzNjFjODRiNTQzMTVhMDZjZGJjYzAwM2U3Yjc0OGVjNmFjNGM=", "commit": {"author": {"name": "jsen-", "email": "max.enhanced@gmail.com", "date": "2016-11-10T01:00:25Z"}, "committer": {"name": "jsen-", "email": "max.enhanced@gmail.com", "date": "2016-11-20T21:13:01Z"}, "message": "support creation of anonymous pipe on WinXP/2K3", "tree": {"sha": "ec7b67d6b2254f993061e4def08e96ad71969a14", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ec7b67d6b2254f993061e4def08e96ad71969a14"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc5a361c84b54315a06cdbcc003e7b748ec6ac4c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc5a361c84b54315a06cdbcc003e7b748ec6ac4c", "html_url": "https://github.com/rust-lang/rust/commit/fc5a361c84b54315a06cdbcc003e7b748ec6ac4c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc5a361c84b54315a06cdbcc003e7b748ec6ac4c/comments", "author": {"login": "jsen-", "id": 1452008, "node_id": "MDQ6VXNlcjE0NTIwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1452008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsen-", "html_url": "https://github.com/jsen-", "followers_url": "https://api.github.com/users/jsen-/followers", "following_url": "https://api.github.com/users/jsen-/following{/other_user}", "gists_url": "https://api.github.com/users/jsen-/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsen-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsen-/subscriptions", "organizations_url": "https://api.github.com/users/jsen-/orgs", "repos_url": "https://api.github.com/users/jsen-/repos", "events_url": "https://api.github.com/users/jsen-/events{/privacy}", "received_events_url": "https://api.github.com/users/jsen-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsen-", "id": 1452008, "node_id": "MDQ6VXNlcjE0NTIwMDg=", "avatar_url": "https://avatars.githubusercontent.com/u/1452008?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsen-", "html_url": "https://github.com/jsen-", "followers_url": "https://api.github.com/users/jsen-/followers", "following_url": "https://api.github.com/users/jsen-/following{/other_user}", "gists_url": "https://api.github.com/users/jsen-/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsen-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsen-/subscriptions", "organizations_url": "https://api.github.com/users/jsen-/orgs", "repos_url": "https://api.github.com/users/jsen-/repos", "events_url": "https://api.github.com/users/jsen-/events{/privacy}", "received_events_url": "https://api.github.com/users/jsen-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da2ce2276873242a101f205537e7ce297d68f8dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/da2ce2276873242a101f205537e7ce297d68f8dd", "html_url": "https://github.com/rust-lang/rust/commit/da2ce2276873242a101f205537e7ce297d68f8dd"}], "stats": {"total": 34, "additions": 26, "deletions": 8}, "files": [{"sha": "dfc998b88e37f69ec8ff94bcfc3a3d0a5d4e6bb6", "filename": "src/libstd/sys/windows/c.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc5a361c84b54315a06cdbcc003e7b748ec6ac4c/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc5a361c84b54315a06cdbcc003e7b748ec6ac4c/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fc.rs?ref=fc5a361c84b54315a06cdbcc003e7b748ec6ac4c", "patch": "@@ -182,6 +182,7 @@ pub const ERROR_INVALID_HANDLE: DWORD = 6;\n pub const ERROR_NO_MORE_FILES: DWORD = 18;\n pub const ERROR_HANDLE_EOF: DWORD = 38;\n pub const ERROR_FILE_EXISTS: DWORD = 80;\n+pub const ERROR_INVALID_PARAMETER: DWORD = 87;\n pub const ERROR_BROKEN_PIPE: DWORD = 109;\n pub const ERROR_CALL_NOT_IMPLEMENTED: DWORD = 120;\n pub const ERROR_INSUFFICIENT_BUFFER: DWORD = 122;"}, {"sha": "1eb1730547642f18eb3fc162d192f977089c84b0", "filename": "src/libstd/sys/windows/pipe.rs", "status": "modified", "additions": 25, "deletions": 8, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/fc5a361c84b54315a06cdbcc003e7b748ec6ac4c/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc5a361c84b54315a06cdbcc003e7b748ec6ac4c/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs?ref=fc5a361c84b54315a06cdbcc003e7b748ec6ac4c", "patch": "@@ -43,6 +43,7 @@ pub fn anon_pipe() -> io::Result<(AnonPipe, AnonPipe)> {\n         let reader;\n         let mut name;\n         let mut tries = 0;\n+        let mut reject_remote_clients_flag = c::PIPE_REJECT_REMOTE_CLIENTS;\n         loop {\n             tries += 1;\n             let key: u64 = rand::thread_rng().gen();\n@@ -56,12 +57,12 @@ pub fn anon_pipe() -> io::Result<(AnonPipe, AnonPipe)> {\n \n             let handle = c::CreateNamedPipeW(wide_name.as_ptr(),\n                                              c::PIPE_ACCESS_INBOUND |\n-                                              c::FILE_FLAG_FIRST_PIPE_INSTANCE |\n-                                              c::FILE_FLAG_OVERLAPPED,\n+                                             c::FILE_FLAG_FIRST_PIPE_INSTANCE |\n+                                             c::FILE_FLAG_OVERLAPPED,\n                                              c::PIPE_TYPE_BYTE |\n-                                              c::PIPE_READMODE_BYTE |\n-                                              c::PIPE_WAIT |\n-                                              c::PIPE_REJECT_REMOTE_CLIENTS,\n+                                             c::PIPE_READMODE_BYTE |\n+                                             c::PIPE_WAIT |\n+                                             reject_remote_clients_flag,\n                                              1,\n                                              4096,\n                                              4096,\n@@ -76,11 +77,27 @@ pub fn anon_pipe() -> io::Result<(AnonPipe, AnonPipe)> {\n             //\n             // Don't try again too much though as this could also perhaps be a\n             // legit error.\n+            // If ERROR_INVALID_PARAMETER is returned, this probably means we're\n+            // running on pre-Vista version where PIPE_REJECT_REMOTE_CLIENTS is\n+            // not supported, so we continue retrying without it. This implies\n+            // reduced security on Windows versions older than Vista by allowing\n+            // connections to this pipe from remote machines.\n+            // Proper fix would increase the number of FFI imports and introduce\n+            // significant amount of Windows XP specific code with no clean\n+            // testing strategy\n+            // for more info see https://github.com/rust-lang/rust/pull/37677\n             if handle == c::INVALID_HANDLE_VALUE {\n                 let err = io::Error::last_os_error();\n-                if tries < 10 &&\n-                   err.raw_os_error() == Some(c::ERROR_ACCESS_DENIED as i32) {\n-                    continue\n+                let raw_os_err = err.raw_os_error();\n+                if tries < 10 {\n+                    if raw_os_err == Some(c::ERROR_ACCESS_DENIED as i32) {\n+                        continue\n+                    } else if reject_remote_clients_flag != 0 &&\n+                        raw_os_err == Some(c::ERROR_INVALID_PARAMETER as i32) {\n+                        reject_remote_clients_flag = 0;\n+                        tries -= 1;\n+                        continue\n+                    }\n                 }\n                 return Err(err)\n             }"}]}