{"sha": "7718b14301b96c06c97d2c200508e0703b3de953", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3MThiMTQzMDFiOTZjMDZjOTdkMmMyMDA1MDhlMDcwM2IzZGU5NTM=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-06-01T01:49:22Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2019-06-05T22:10:19Z"}, "message": "Test StorageDead statements explicitly", "tree": {"sha": "a41b6e7496c55e7628ba4eea6fe488e08675cc62", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a41b6e7496c55e7628ba4eea6fe488e08675cc62"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7718b14301b96c06c97d2c200508e0703b3de953", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7718b14301b96c06c97d2c200508e0703b3de953", "html_url": "https://github.com/rust-lang/rust/commit/7718b14301b96c06c97d2c200508e0703b3de953", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7718b14301b96c06c97d2c200508e0703b3de953/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d6cb096effc19d970d8111e8ba8d87b80017d72", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d6cb096effc19d970d8111e8ba8d87b80017d72", "html_url": "https://github.com/rust-lang/rust/commit/4d6cb096effc19d970d8111e8ba8d87b80017d72"}], "stats": {"total": 106, "additions": 106, "deletions": 0}, "files": [{"sha": "7be17c4292ae67b53a236598a34048ea27fd0289", "filename": "src/test/mir-opt/generator-storage-dead-unwind.rs", "status": "added", "additions": 106, "deletions": 0, "changes": 106, "blob_url": "https://github.com/rust-lang/rust/blob/7718b14301b96c06c97d2c200508e0703b3de953/src%2Ftest%2Fmir-opt%2Fgenerator-storage-dead-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7718b14301b96c06c97d2c200508e0703b3de953/src%2Ftest%2Fmir-opt%2Fgenerator-storage-dead-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fmir-opt%2Fgenerator-storage-dead-unwind.rs?ref=7718b14301b96c06c97d2c200508e0703b3de953", "patch": "@@ -0,0 +1,106 @@\n+// ignore-wasm32-bare compiled with panic=abort by default\n+\n+// Test that we generate StorageDead on unwind paths for generators.\n+//\n+// Basic block and local names can safely change, but the StorageDead statements\n+// should not go away.\n+\n+#![feature(generators, generator_trait)]\n+\n+struct Foo(i32);\n+\n+impl Drop for Foo {\n+    fn drop(&mut self) {}\n+}\n+\n+struct Bar(i32);\n+\n+fn take<T>(_x: T) {}\n+\n+fn main() {\n+    let _gen = || {\n+        let a = Foo(5);\n+        let b = Bar(6);\n+        yield;\n+        take(a);\n+        take(b);\n+    };\n+}\n+\n+// END RUST SOURCE\n+\n+// START rustc.main-{{closure}}.StateTransform.before.mir\n+// ...\n+// let _2: Foo;\n+// ...\n+// let mut _7: Foo;\n+// ...\n+// let mut _9: Bar;\n+// scope 1 {\n+//     let _3: Bar;\n+//     scope 2 {\n+//     }\n+// }\n+// bb0: {\n+//     StorageLive(_2);\n+//     _2 = Foo(const 5i32,);\n+//     StorageLive(_3);\n+//     _3 = Bar(const 6i32,);\n+//     ...\n+//     _1 = suspend(move _5) -> [resume: bb2, drop: bb4];\n+// }\n+// bb1 (cleanup): {\n+//     resume;\n+// }\n+// bb2: {\n+//     ...\n+//     StorageLive(_7);\n+//     _7 = move _2;\n+//     _6 = const take::<Foo>(move _7) -> [return: bb9, unwind: bb8];\n+// }\n+// bb3 (cleanup): {\n+//     StorageDead(_2);\n+//     drop(_1) -> bb1;\n+// }\n+// bb4: {\n+//     ...\n+//     StorageDead(_3);\n+//     drop(_2) -> [return: bb5, unwind: bb3];\n+// }\n+// bb5: {\n+//     StorageDead(_2);\n+//     drop(_1) -> [return: bb6, unwind: bb1];\n+// }\n+// bb6: {\n+//     generator_drop;\n+// }\n+// bb7 (cleanup): {\n+//     StorageDead(_3);\n+//     StorageDead(_2);\n+//     drop(_1) -> bb1;\n+// }\n+// bb8 (cleanup): {\n+//     StorageDead(_7);\n+//     goto -> bb7;\n+// }\n+// bb9: {\n+//     StorageDead(_7);\n+//     StorageLive(_9);\n+//     _9 = move _3;\n+//     _8 = const take::<Bar>(move _9) -> [return: bb10, unwind: bb11];\n+// }\n+// bb10: {\n+//     StorageDead(_9);\n+//     ...\n+//     StorageDead(_3);\n+//     StorageDead(_2);\n+//     drop(_1) -> [return: bb12, unwind: bb1];\n+// }\n+// bb11 (cleanup): {\n+//     StorageDead(_9);\n+//     goto -> bb7;\n+// }\n+// bb12: {\n+//     return;\n+// }\n+// END rustc.main-{{closure}}.StateTransform.before.mir"}]}