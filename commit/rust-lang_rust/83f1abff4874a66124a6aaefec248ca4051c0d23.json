{"sha": "83f1abff4874a66124a6aaefec248ca4051c0d23", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzZjFhYmZmNDg3NGE2NjEyNGE2YWFlZmVjMjQ4Y2E0MDUxYzBkMjM=", "commit": {"author": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2021-01-04T20:20:44Z"}, "committer": {"name": "ThibsG", "email": "Thibs@debian.com", "date": "2021-01-15T17:57:56Z"}, "message": "Fix FP with empty return for `needless_return` lint", "tree": {"sha": "bce262401aa0d8223bc2b673bce04b04fd7b954e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bce262401aa0d8223bc2b673bce04b04fd7b954e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83f1abff4874a66124a6aaefec248ca4051c0d23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83f1abff4874a66124a6aaefec248ca4051c0d23", "html_url": "https://github.com/rust-lang/rust/commit/83f1abff4874a66124a6aaefec248ca4051c0d23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83f1abff4874a66124a6aaefec248ca4051c0d23/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d1e129851a6133da72bc44eea9a48530d42e54d", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d1e129851a6133da72bc44eea9a48530d42e54d", "html_url": "https://github.com/rust-lang/rust/commit/2d1e129851a6133da72bc44eea9a48530d42e54d"}], "stats": {"total": 57, "additions": 55, "deletions": 2}, "files": [{"sha": "e438f92b136ac453745d0f35cbfb85f52cf024da", "filename": "clippy_lints/src/returns.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/83f1abff4874a66124a6aaefec248ca4051c0d23/clippy_lints%2Fsrc%2Freturns.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f1abff4874a66124a6aaefec248ca4051c0d23/clippy_lints%2Fsrc%2Freturns.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Freturns.rs?ref=83f1abff4874a66124a6aaefec248ca4051c0d23", "patch": "@@ -131,7 +131,16 @@ impl<'tcx> LateLintPass<'tcx> for Return {\n         _: HirId,\n     ) {\n         match kind {\n-            FnKind::Closure(_) => check_final_expr(cx, &body.value, Some(body.value.span), RetReplacement::Empty),\n+            FnKind::Closure(_) => {\n+                // when returning without value in closure, replace this `return`\n+                // with an empty block to prevent invalid suggestion (see #6501)\n+                let replacement = if let ExprKind::Ret(None) = &body.value.kind {\n+                    RetReplacement::Block\n+                } else {\n+                    RetReplacement::Empty\n+                };\n+                check_final_expr(cx, &body.value, Some(body.value.span), replacement)\n+            },\n             FnKind::ItemFn(..) | FnKind::Method(..) => {\n                 if let ExprKind::Block(ref block, _) = body.value.kind {\n                     check_block_return(cx, block);"}, {"sha": "f137e8ecae935a69765127624d3ac5a1c6ac28cd", "filename": "tests/ui/needless_return.fixed", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/83f1abff4874a66124a6aaefec248ca4051c0d23/tests%2Fui%2Fneedless_return.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/83f1abff4874a66124a6aaefec248ca4051c0d23/tests%2Fui%2Fneedless_return.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.fixed?ref=83f1abff4874a66124a6aaefec248ca4051c0d23", "patch": "@@ -101,6 +101,19 @@ fn test_return_in_macro() {\n     needed_return!(0);\n }\n \n+mod issue6501 {\n+    fn foo(bar: Result<(), ()>) {\n+        bar.unwrap_or_else(|_| {})\n+    }\n+\n+    fn test_closure() {\n+        let _ = || {\n+            \n+        };\n+        let _ = || {};\n+    }\n+}\n+\n fn main() {\n     let _ = test_end_of_fn();\n     let _ = test_no_semicolon();"}, {"sha": "d754e4d37a844fcbf6fdfafaaad5ac8632e23a21", "filename": "tests/ui/needless_return.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/83f1abff4874a66124a6aaefec248ca4051c0d23/tests%2Fui%2Fneedless_return.rs", "raw_url": "https://github.com/rust-lang/rust/raw/83f1abff4874a66124a6aaefec248ca4051c0d23/tests%2Fui%2Fneedless_return.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.rs?ref=83f1abff4874a66124a6aaefec248ca4051c0d23", "patch": "@@ -101,6 +101,19 @@ fn test_return_in_macro() {\n     needed_return!(0);\n }\n \n+mod issue6501 {\n+    fn foo(bar: Result<(), ()>) {\n+        bar.unwrap_or_else(|_| return)\n+    }\n+\n+    fn test_closure() {\n+        let _ = || {\n+            return;\n+        };\n+        let _ = || return;\n+    }\n+}\n+\n fn main() {\n     let _ = test_end_of_fn();\n     let _ = test_no_semicolon();"}, {"sha": "12d94e892eda598d53f73c2769bfe9b665a5fa5d", "filename": "tests/ui/needless_return.stderr", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/83f1abff4874a66124a6aaefec248ca4051c0d23/tests%2Fui%2Fneedless_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/83f1abff4874a66124a6aaefec248ca4051c0d23/tests%2Fui%2Fneedless_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_return.stderr?ref=83f1abff4874a66124a6aaefec248ca4051c0d23", "patch": "@@ -84,5 +84,23 @@ error: unneeded `return` statement\n LL |         return String::new();\n    |         ^^^^^^^^^^^^^^^^^^^^^ help: remove `return`: `String::new()`\n \n-error: aborting due to 14 previous errors\n+error: unneeded `return` statement\n+  --> $DIR/needless_return.rs:91:32\n+   |\n+LL |         bar.unwrap_or_else(|_| return)\n+   |                                ^^^^^^ help: replace `return` with an empty block: `{}`\n+\n+error: unneeded `return` statement\n+  --> $DIR/needless_return.rs:96:13\n+   |\n+LL |             return;\n+   |             ^^^^^^^ help: remove `return`\n+\n+error: unneeded `return` statement\n+  --> $DIR/needless_return.rs:98:20\n+   |\n+LL |         let _ = || return;\n+   |                    ^^^^^^ help: replace `return` with an empty block: `{}`\n+\n+error: aborting due to 17 previous errors\n "}]}