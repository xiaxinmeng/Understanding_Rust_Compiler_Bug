{"sha": "882c47f1870f15cb2aaad8871ccbad1c51520f49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4MmM0N2YxODcwZjE1Y2IyYWFhZDg4NzFjY2JhZDFjNTE1MjBmNDk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-20T20:17:07Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-02-20T20:17:07Z"}, "message": "move syntax error to parser", "tree": {"sha": "e47aa900bcffffded370b68b2e50604199b491e3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e47aa900bcffffded370b68b2e50604199b491e3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/882c47f1870f15cb2aaad8871ccbad1c51520f49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/882c47f1870f15cb2aaad8871ccbad1c51520f49", "html_url": "https://github.com/rust-lang/rust/commit/882c47f1870f15cb2aaad8871ccbad1c51520f49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/882c47f1870f15cb2aaad8871ccbad1c51520f49/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61992dc1cd4956038e3c15439c1203f21e05af06", "url": "https://api.github.com/repos/rust-lang/rust/commits/61992dc1cd4956038e3c15439c1203f21e05af06", "html_url": "https://github.com/rust-lang/rust/commit/61992dc1cd4956038e3c15439c1203f21e05af06"}], "stats": {"total": 49, "additions": 24, "deletions": 25}, "files": [{"sha": "138d1394af99c8ce3841ea956f91da03bc1b490b", "filename": "crates/ra_syntax/src/parsing.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/882c47f1870f15cb2aaad8871ccbad1c51520f49/crates%2Fra_syntax%2Fsrc%2Fparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/882c47f1870f15cb2aaad8871ccbad1c51520f49/crates%2Fra_syntax%2Fsrc%2Fparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing.rs?ref=882c47f1870f15cb2aaad8871ccbad1c51520f49", "patch": "@@ -9,7 +9,7 @@ mod grammar;\n mod reparsing;\n \n use crate::{\n-    SyntaxError, SyntaxKind, SmolStr,\n+    SyntaxKind, SmolStr, SyntaxError,\n     parsing::{\n         builder::GreenBuilder,\n         input::ParserInput,\n@@ -21,11 +21,14 @@ use crate::{\n \n pub use self::lexer::{tokenize, Token};\n \n+#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+pub struct ParseError(pub String);\n+\n pub(crate) use self::reparsing::incremental_reparse;\n \n pub(crate) fn parse_text(text: &str) -> (GreenNode, Vec<SyntaxError>) {\n     let tokens = tokenize(&text);\n-    parse_with(GreenBuilder::new(), text, &tokens, grammar::root)\n+    parse_with(GreenBuilder::default(), text, &tokens, grammar::root)\n }\n \n fn parse_with<S: TreeSink>(\n@@ -57,7 +60,7 @@ trait TreeSink {\n     /// branch as current.\n     fn finish_branch(&mut self);\n \n-    fn error(&mut self, error: SyntaxError);\n+    fn error(&mut self, error: ParseError);\n \n     /// Complete tree building. Make sure that\n     /// `start_branch` and `finish_branch` calls"}, {"sha": "ee0e2cce7ae5f2a1a341ba33e8004ffa319c7823", "filename": "crates/ra_syntax/src/parsing/builder.rs", "status": "modified", "additions": 13, "deletions": 6, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/882c47f1870f15cb2aaad8871ccbad1c51520f49/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/882c47f1870f15cb2aaad8871ccbad1c51520f49/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fbuilder.rs?ref=882c47f1870f15cb2aaad8871ccbad1c51520f49", "patch": "@@ -1,26 +1,32 @@\n use crate::{\n-    parsing::TreeSink,\n+    SmolStr, SyntaxKind, SyntaxError, SyntaxErrorKind, TextUnit,\n+    parsing::{TreeSink, ParseError},\n     syntax_node::{GreenNode, RaTypes},\n-    SmolStr, SyntaxKind, SyntaxError,\n };\n \n use rowan::GreenNodeBuilder;\n \n pub(crate) struct GreenBuilder {\n+    text_pos: TextUnit,\n     errors: Vec<SyntaxError>,\n     inner: GreenNodeBuilder<RaTypes>,\n }\n \n-impl GreenBuilder {\n-    pub(crate) fn new() -> GreenBuilder {\n-        GreenBuilder { errors: Vec::new(), inner: GreenNodeBuilder::new() }\n+impl Default for GreenBuilder {\n+    fn default() -> GreenBuilder {\n+        GreenBuilder {\n+            text_pos: TextUnit::default(),\n+            errors: Vec::new(),\n+            inner: GreenNodeBuilder::new(),\n+        }\n     }\n }\n \n impl TreeSink for GreenBuilder {\n     type Tree = (GreenNode, Vec<SyntaxError>);\n \n     fn leaf(&mut self, kind: SyntaxKind, text: SmolStr) {\n+        self.text_pos += TextUnit::of_str(text.as_str());\n         self.inner.leaf(kind, text);\n     }\n \n@@ -32,7 +38,8 @@ impl TreeSink for GreenBuilder {\n         self.inner.finish_internal();\n     }\n \n-    fn error(&mut self, error: SyntaxError) {\n+    fn error(&mut self, error: ParseError) {\n+        let error = SyntaxError::new(SyntaxErrorKind::ParseError(error), self.text_pos);\n         self.errors.push(error)\n     }\n "}, {"sha": "f6f020eaba4bc5a6558a1a446c22845968b0b7d8", "filename": "crates/ra_syntax/src/parsing/event.rs", "status": "modified", "additions": 2, "deletions": 9, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/882c47f1870f15cb2aaad8871ccbad1c51520f49/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fevent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/882c47f1870f15cb2aaad8871ccbad1c51520f49/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fevent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fevent.rs?ref=882c47f1870f15cb2aaad8871ccbad1c51520f49", "patch": "@@ -13,14 +13,9 @@ use crate::{\n     SmolStr,\n     SyntaxKind::{self, *},\n     TextRange, TextUnit,\n-    syntax_error::{\n-        ParseError,\n-        SyntaxError,\n-        SyntaxErrorKind,\n-    },\n     parsing::{\n+        ParseError, TreeSink,\n         lexer::Token,\n-        TreeSink,\n     },\n };\n \n@@ -159,9 +154,7 @@ impl<'a, S: TreeSink> EventProcessor<'a, S> {\n                         .sum::<TextUnit>();\n                     self.leaf(kind, len, n_raw_tokens);\n                 }\n-                Event::Error { msg } => self\n-                    .sink\n-                    .error(SyntaxError::new(SyntaxErrorKind::ParseError(msg), self.text_pos)),\n+                Event::Error { msg } => self.sink.error(msg),\n             }\n         }\n         self.sink"}, {"sha": "923b0f2b20dba9193a5280ead2cf18bca879caeb", "filename": "crates/ra_syntax/src/parsing/parser.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/882c47f1870f15cb2aaad8871ccbad1c51520f49/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/882c47f1870f15cb2aaad8871ccbad1c51520f49/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Fparser.rs?ref=882c47f1870f15cb2aaad8871ccbad1c51520f49", "patch": "@@ -3,10 +3,9 @@ use std::cell::Cell;\n use drop_bomb::DropBomb;\n \n use crate::{\n-    syntax_error::ParseError,\n     SyntaxKind::{self, ERROR, EOF, TOMBSTONE},\n     parsing::{\n-        TokenSource,\n+        TokenSource, ParseError,\n         token_set::TokenSet,\n         event::Event,\n     },"}, {"sha": "f2d218ab90344a518774bdd8692f70a70acedc64", "filename": "crates/ra_syntax/src/parsing/reparsing.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/882c47f1870f15cb2aaad8871ccbad1c51520f49/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/882c47f1870f15cb2aaad8871ccbad1c51520f49/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fparsing%2Freparsing.rs?ref=882c47f1870f15cb2aaad8871ccbad1c51520f49", "patch": "@@ -61,7 +61,7 @@ fn reparse_block<'node>(\n     if !is_balanced(&tokens) {\n         return None;\n     }\n-    let (green, new_errors) = parse_with(GreenBuilder::new(), &text, &tokens, reparser);\n+    let (green, new_errors) = parse_with(GreenBuilder::default(), &text, &tokens, reparser);\n     Some((node, green, new_errors))\n }\n "}, {"sha": "1a00fcc27a33b60105177c54a53e2ead5466a1b1", "filename": "crates/ra_syntax/src/syntax_error.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/882c47f1870f15cb2aaad8871ccbad1c51520f49/crates%2Fra_syntax%2Fsrc%2Fsyntax_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/882c47f1870f15cb2aaad8871ccbad1c51520f49/crates%2Fra_syntax%2Fsrc%2Fsyntax_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_syntax%2Fsrc%2Fsyntax_error.rs?ref=882c47f1870f15cb2aaad8871ccbad1c51520f49", "patch": "@@ -1,6 +1,6 @@\n use std::fmt;\n \n-use crate::{TextRange, TextUnit};\n+use crate::{TextRange, TextUnit, parsing::ParseError};\n \n #[derive(Debug, Clone, PartialEq, Eq, Hash)]\n pub struct SyntaxError {\n@@ -95,9 +95,6 @@ pub enum SyntaxErrorKind {\n     InvalidMatchInnerAttr,\n }\n \n-#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n-pub struct ParseError(pub String);\n-\n impl fmt::Display for SyntaxErrorKind {\n     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n         use self::SyntaxErrorKind::*;"}]}