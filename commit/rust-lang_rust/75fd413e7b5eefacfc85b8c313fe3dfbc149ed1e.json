{"sha": "75fd413e7b5eefacfc85b8c313fe3dfbc149ed1e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1ZmQ0MTNlN2I1ZWVmYWNmYzg1YjhjMzEzZmUzZGZiYzE0OWVkMWU=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-01T03:49:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-12-01T03:49:26Z"}, "message": "Rollup merge of #66790 - christianpoveda:check-set-discriminant, r=oli-obk\n\nDo `min_const_fn` checks for `SetDiscriminant`s target\n\nFixes https://github.com/rust-lang/rust/issues/66556\n\nr? @oli-obk @ecstatic-morse", "tree": {"sha": "e458b8eb39253dcf79d3ad696aa14c7a3eba3110", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e458b8eb39253dcf79d3ad696aa14c7a3eba3110"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75fd413e7b5eefacfc85b8c313fe3dfbc149ed1e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJd4zhGCRBK7hj4Ov3rIwAAdHIIAA7qj83iXrMVw9o9ms7Zh41u\nHDGxcmaRjMhT4EMhfMU09IHiIrCBhkoUxlb69i3MCPsmE6rWkqBQTuHcWfJziNEu\n8HYxLVzfwrSDHWdAkOfe0Itpr/+y4mx1fJI3yCG57UFZmkfQFbdsTtM8iMEcrKIg\ngmLoXCQuskAtkN19uSG847vALnmeD8MOmmzf5omr73BQ/+2eqjJyvgzLm/WHKAb9\nPBvV4j6mlEYh75j1MKl0pzoU3OxeGiB9pxfVuRW2jXLtmulS6lqPd+0vD2rONuoj\nlfr04LGDKFtqHVlXBCwm4VZirdsSVrNeTtWZJdISb1F39UI8RqDNAA97dJZQUcE=\n=mT6d\n-----END PGP SIGNATURE-----\n", "payload": "tree e458b8eb39253dcf79d3ad696aa14c7a3eba3110\nparent 60f4212ee537c7f5efff51c694c814b5458c8aa7\nparent 2ced9d96e7b70237daa69bd8d421f0421d57e676\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1575172166 +0100\ncommitter GitHub <noreply@github.com> 1575172166 +0100\n\nRollup merge of #66790 - christianpoveda:check-set-discriminant, r=oli-obk\n\nDo `min_const_fn` checks for `SetDiscriminant`s target\n\nFixes https://github.com/rust-lang/rust/issues/66556\n\nr? @oli-obk @ecstatic-morse\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75fd413e7b5eefacfc85b8c313fe3dfbc149ed1e", "html_url": "https://github.com/rust-lang/rust/commit/75fd413e7b5eefacfc85b8c313fe3dfbc149ed1e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75fd413e7b5eefacfc85b8c313fe3dfbc149ed1e/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "60f4212ee537c7f5efff51c694c814b5458c8aa7", "url": "https://api.github.com/repos/rust-lang/rust/commits/60f4212ee537c7f5efff51c694c814b5458c8aa7", "html_url": "https://github.com/rust-lang/rust/commit/60f4212ee537c7f5efff51c694c814b5458c8aa7"}, {"sha": "2ced9d96e7b70237daa69bd8d421f0421d57e676", "url": "https://api.github.com/repos/rust-lang/rust/commits/2ced9d96e7b70237daa69bd8d421f0421d57e676", "html_url": "https://github.com/rust-lang/rust/commit/2ced9d96e7b70237daa69bd8d421f0421d57e676"}], "stats": {"total": 5, "additions": 2, "deletions": 3}, "files": [{"sha": "829d9ee6fafd7387542dfeee27a46ab1728775b5", "filename": "src/librustc_mir/transform/check_consts/validation.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/75fd413e7b5eefacfc85b8c313fe3dfbc149ed1e/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75fd413e7b5eefacfc85b8c313fe3dfbc149ed1e/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fcheck_consts%2Fvalidation.rs?ref=75fd413e7b5eefacfc85b8c313fe3dfbc149ed1e", "patch": "@@ -560,15 +560,14 @@ impl Visitor<'tcx> for Validator<'_, 'mir, 'tcx> {\n         trace!(\"visit_statement: statement={:?} location={:?}\", statement, location);\n \n         match statement.kind {\n-            StatementKind::Assign(..) => {\n+            StatementKind::Assign(..) | StatementKind::SetDiscriminant { .. } => {\n                 self.super_statement(statement, location);\n             }\n             StatementKind::FakeRead(FakeReadCause::ForMatchedPlace, _) => {\n                 self.check_op(ops::IfOrMatch);\n             }\n             // FIXME(eddyb) should these really do nothing?\n             StatementKind::FakeRead(..) |\n-            StatementKind::SetDiscriminant { .. } |\n             StatementKind::StorageLive(_) |\n             StatementKind::StorageDead(_) |\n             StatementKind::InlineAsm {..} |"}, {"sha": "e40d6a5952edb2aebd16c68bd6d70ef2c607a710", "filename": "src/librustc_mir/transform/qualify_min_const_fn.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75fd413e7b5eefacfc85b8c313fe3dfbc149ed1e/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75fd413e7b5eefacfc85b8c313fe3dfbc149ed1e/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fqualify_min_const_fn.rs?ref=75fd413e7b5eefacfc85b8c313fe3dfbc149ed1e", "patch": "@@ -225,7 +225,7 @@ fn check_statement(\n         StatementKind::FakeRead(_, place) => check_place(tcx, place, span, def_id, body),\n \n         // just an assignment\n-        StatementKind::SetDiscriminant { .. } => Ok(()),\n+        StatementKind::SetDiscriminant { place, .. } => check_place(tcx, place, span, def_id, body),\n \n         | StatementKind::InlineAsm { .. } => {\n             Err((span, \"cannot use inline assembly in const fn\".into()))"}]}