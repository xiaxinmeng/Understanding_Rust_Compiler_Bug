{"sha": "5fd9f6c7b9944638e4781e3d9384638942f84456", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmZDlmNmM3Yjk5NDQ2MzhlNDc4MWUzZDkzODQ2Mzg5NDJmODQ0NTY=", "commit": {"author": {"name": "Lukas Tobias Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-18T18:21:47Z"}, "committer": {"name": "Lukas Tobias Wirth", "email": "lukastw97@gmail.com", "date": "2021-05-18T18:21:47Z"}, "message": "Add ImportGranularity::Guess", "tree": {"sha": "ef5a6e2d081e69581fb72b31a1523072c30e7770", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef5a6e2d081e69581fb72b31a1523072c30e7770"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fd9f6c7b9944638e4781e3d9384638942f84456", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fd9f6c7b9944638e4781e3d9384638942f84456", "html_url": "https://github.com/rust-lang/rust/commit/5fd9f6c7b9944638e4781e3d9384638942f84456", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fd9f6c7b9944638e4781e3d9384638942f84456/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b8a99692d12189406cad7215530fb5103e6c4b5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b8a99692d12189406cad7215530fb5103e6c4b5d", "html_url": "https://github.com/rust-lang/rust/commit/b8a99692d12189406cad7215530fb5103e6c4b5d"}], "stats": {"total": 26, "additions": 11, "deletions": 15}, "files": [{"sha": "1fdd110ccc2dfe158ef321fc2d932cd3461595c6", "filename": "crates/ide_db/src/helpers/insert_use.rs", "status": "modified", "additions": 4, "deletions": 12, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/5fd9f6c7b9944638e4781e3d9384638942f84456/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fd9f6c7b9944638e4781e3d9384638942f84456/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fhelpers%2Finsert_use.rs?ref=5fd9f6c7b9944638e4781e3d9384638942f84456", "patch": "@@ -18,6 +18,8 @@ pub use hir::PrefixKind;\n /// How imports should be grouped into use statements.\n #[derive(Copy, Clone, Debug, PartialEq, Eq)]\n pub enum ImportGranularity {\n+    /// Try to guess the granularity of imports on a per module basis by observing the existing imports.\n+    Guess,\n     /// Do not change the granularity of any imports and preserve the original structure written by the developer.\n     Preserve,\n     /// Merge imports from the same crate into a single use statement.\n@@ -28,16 +30,6 @@ pub enum ImportGranularity {\n     Item,\n }\n \n-impl ImportGranularity {\n-    pub fn merge_behavior(self) -> Option<MergeBehavior> {\n-        match self {\n-            ImportGranularity::Crate => Some(MergeBehavior::Crate),\n-            ImportGranularity::Module => Some(MergeBehavior::Module),\n-            ImportGranularity::Preserve | ImportGranularity::Item => None,\n-        }\n-    }\n-}\n-\n #[derive(Clone, Copy, Debug, PartialEq, Eq)]\n pub struct InsertUseConfig {\n     pub granularity: ImportGranularity,\n@@ -118,10 +110,10 @@ impl ImportScope {\n pub fn insert_use<'a>(scope: &ImportScope, path: ast::Path, cfg: InsertUseConfig) {\n     let _p = profile::span(\"insert_use\");\n     let mb = match cfg.granularity {\n-        ImportGranularity::Preserve => scope.guess_merge_behavior_from_scope(),\n+        ImportGranularity::Guess => scope.guess_merge_behavior_from_scope(),\n         ImportGranularity::Crate => Some(MergeBehavior::Crate),\n         ImportGranularity::Module => Some(MergeBehavior::Module),\n-        ImportGranularity::Item => None,\n+        ImportGranularity::Item | ImportGranularity::Preserve => None,\n     };\n \n     let use_item ="}, {"sha": "a34ca97acf22ff488fd8fb372db3fb1842430eef", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5fd9f6c7b9944638e4781e3d9384638942f84456/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5fd9f6c7b9944638e4781e3d9384638942f84456/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=5fd9f6c7b9944638e4781e3d9384638942f84456", "patch": "@@ -36,7 +36,7 @@ config_data! {\n         /// The strategy to use when inserting new imports or merging imports.\n         assist_importGranularity |\n         assist_importMergeBehavior |\n-        assist_importMergeBehaviour: ImportGranularityDef  = \"\\\"preserve\\\"\",\n+        assist_importMergeBehaviour: ImportGranularityDef  = \"\\\"guess\\\"\",\n         /// The path structure for newly inserted paths to use.\n         assist_importPrefix: ImportPrefixDef           = \"\\\"plain\\\"\",\n         /// Group inserted imports by the [following order](https://rust-analyzer.github.io/manual.html#auto-import). Groups are separated by newlines.\n@@ -610,6 +610,7 @@ impl Config {\n     fn insert_use_config(&self) -> InsertUseConfig {\n         InsertUseConfig {\n             granularity: match self.data.assist_importGranularity {\n+                ImportGranularityDef::Guess => ImportGranularity::Guess,\n                 ImportGranularityDef::Preserve => ImportGranularity::Preserve,\n                 ImportGranularityDef::Item => ImportGranularity::Item,\n                 ImportGranularityDef::Crate => ImportGranularity::Crate,\n@@ -719,9 +720,10 @@ enum ManifestOrProjectJson {\n #[derive(Deserialize, Debug, Clone)]\n #[serde(rename_all = \"snake_case\")]\n enum ImportGranularityDef {\n+    Preserve,\n+    Guess,\n     #[serde(alias = \"none\")]\n     Item,\n-    Preserve,\n     #[serde(alias = \"full\")]\n     Crate,\n     #[serde(alias = \"last\")]"}, {"sha": "06ce86987051f66a02e9a1ef18e6dd4dd6fac3c3", "filename": "editors/code/package.json", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5fd9f6c7b9944638e4781e3d9384638942f84456/editors%2Fcode%2Fpackage.json", "raw_url": "https://github.com/rust-lang/rust/raw/5fd9f6c7b9944638e4781e3d9384638942f84456/editors%2Fcode%2Fpackage.json", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fpackage.json?ref=5fd9f6c7b9944638e4781e3d9384638942f84456", "patch": "@@ -387,15 +387,17 @@\n                 \"$generated-start\": false,\n                 \"rust-analyzer.assist.importGranularity\": {\n                     \"markdownDescription\": \"How imports should be grouped into use statements.\",\n-                    \"default\": \"preserve\",\n+                    \"default\": \"guess\",\n                     \"type\": \"string\",\n                     \"enum\": [\n+                        \"guess\",\n                         \"preserve\",\n                         \"crate\",\n                         \"module\",\n                         \"item\"\n                     ],\n                     \"enumDescriptions\": [\n+                        \"Try to guess the granularity of imports on a per module basis by observing the existing imports.\",\n                         \"Do not change the granularity of any imports and preserve the original structure written by the developer.\",\n                         \"Merge imports from the same crate into a single use statement. Conversely, imports from different crates are split into separate statements.\",\n                         \"Merge imports from the same module into a single use statement. Conversely, imports from different modules are split into separate statements.\","}]}