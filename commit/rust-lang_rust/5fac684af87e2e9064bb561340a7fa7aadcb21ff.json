{"sha": "5fac684af87e2e9064bb561340a7fa7aadcb21ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVmYWM2ODRhZjg3ZTJlOTA2NGJiNTYxMzQwYTdmYTdhYWRjYjIxZmY=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-28T19:40:34Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-09-28T19:40:34Z"}, "message": "vim: `const` is a keyword", "tree": {"sha": "239d0e4a817c207e68c569f3baf0f5f140d1b780", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/239d0e4a817c207e68c569f3baf0f5f140d1b780"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5fac684af87e2e9064bb561340a7fa7aadcb21ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5fac684af87e2e9064bb561340a7fa7aadcb21ff", "html_url": "https://github.com/rust-lang/rust/commit/5fac684af87e2e9064bb561340a7fa7aadcb21ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5fac684af87e2e9064bb561340a7fa7aadcb21ff/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d8a80cb31fd8a7a0e6e07df7d5a6aeff6609507e", "url": "https://api.github.com/repos/rust-lang/rust/commits/d8a80cb31fd8a7a0e6e07df7d5a6aeff6609507e", "html_url": "https://github.com/rust-lang/rust/commit/d8a80cb31fd8a7a0e6e07df7d5a6aeff6609507e"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "fde118ce76b6303eef2e0d5a93b69fe609896ef3", "filename": "src/etc/vim/syntax/rust.vim", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5fac684af87e2e9064bb561340a7fa7aadcb21ff/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "raw_url": "https://github.com/rust-lang/rust/raw/5fac684af87e2e9064bb561340a7fa7aadcb21ff/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fvim%2Fsyntax%2Frust.vim?ref=5fac684af87e2e9064bb561340a7fa7aadcb21ff", "patch": "@@ -15,8 +15,8 @@ if !exists(\"main_syntax\")\n endif\n \n syn keyword   rustKeyword     alt as assert auth be bind break chan check\n-syn keyword   rustKeyword     claim cont do each else export fail fn for if\n-syn keyword   rustKeyword     import in inline iter lambda let log log_err\n+syn keyword   rustKeyword     claim cont const do each else export fail fn for\n+syn keyword   rustKeyword     if import in inline iter lambda let log log_err\n syn keyword   rustKeyword     macro meta mod mutable native note obj port\n syn keyword   rustKeyword     prove put resource ret self spawn syntax tag\n syn keyword   rustKeyword     type unsafe use while with"}]}