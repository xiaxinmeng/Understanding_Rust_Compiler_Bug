{"sha": "39cfb1e51ff3caa73118591eb7336d3ae703ac49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5Y2ZiMWU1MWZmM2NhYTczMTE4NTkxZWI3MzM2ZDNhZTcwM2FjNDk=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-07T09:18:08Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2018-10-07T09:31:42Z"}, "message": "Workaround for missing select.i8 encoding", "tree": {"sha": "2f85185f8a33a799d017b1ecbde13b133c452238", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2f85185f8a33a799d017b1ecbde13b133c452238"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/39cfb1e51ff3caa73118591eb7336d3ae703ac49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/39cfb1e51ff3caa73118591eb7336d3ae703ac49", "html_url": "https://github.com/rust-lang/rust/commit/39cfb1e51ff3caa73118591eb7336d3ae703ac49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/39cfb1e51ff3caa73118591eb7336d3ae703ac49/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3f7adf2d228f9a0043dd6408816ed65d41fbbf49", "url": "https://api.github.com/repos/rust-lang/rust/commits/3f7adf2d228f9a0043dd6408816ed65d41fbbf49", "html_url": "https://github.com/rust-lang/rust/commit/3f7adf2d228f9a0043dd6408816ed65d41fbbf49"}], "stats": {"total": 19, "additions": 17, "deletions": 2}, "files": [{"sha": "54c393e2824fe00823fa2d508534448f9ce640d4", "filename": "src/common.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/39cfb1e51ff3caa73118591eb7336d3ae703ac49/src%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39cfb1e51ff3caa73118591eb7336d3ae703ac49/src%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcommon.rs?ref=39cfb1e51ff3caa73118591eb7336d3ae703ac49", "patch": "@@ -69,6 +69,21 @@ pub fn cton_type_from_ty<'a, 'tcx: 'a>(\n     })\n }\n \n+pub fn codegen_select(bcx: &mut FunctionBuilder, cond: Value, lhs: Value, rhs: Value) -> Value {\n+    let lhs_ty = bcx.func.dfg.value_type(lhs);\n+    let rhs_ty = bcx.func.dfg.value_type(rhs);\n+    assert_eq!(lhs_ty, rhs_ty);\n+    if lhs_ty == types::I8 || lhs_ty == types::I16 {\n+        // FIXME workaround for missing enocding for select.i8\n+        let lhs = bcx.ins().uextend(types::I32, lhs);\n+        let rhs = bcx.ins().uextend(types::I32, rhs);\n+        let res = bcx.ins().select(cond, lhs, rhs);\n+        bcx.ins().ireduce(lhs_ty, res)\n+    } else {\n+        bcx.ins().select(cond, lhs, rhs)\n+    }\n+}\n+\n fn codegen_field<'a, 'tcx: 'a>(\n     fx: &mut FunctionCx<'a, 'tcx, impl Backend>,\n     base: Value,"}, {"sha": "79ed21ce3112ee7c2d9fd3c5ee2d8d2e44c40e50", "filename": "src/intrinsics.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/39cfb1e51ff3caa73118591eb7336d3ae703ac49/src%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/39cfb1e51ff3caa73118591eb7336d3ae703ac49/src%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics.rs?ref=39cfb1e51ff3caa73118591eb7336d3ae703ac49", "patch": "@@ -76,7 +76,7 @@ macro_rules! atomic_minmax {\n \n         // Compare\n         let is_eq = $fx.bcx.ins().icmp(IntCC::SignedGreaterThan, old, $src);\n-        let new = $fx.bcx.ins().select(is_eq, old, $src);\n+        let new = crate::common::codegen_select(&mut $fx.bcx, is_eq, old, $src);\n \n         // Write new\n         $fx.bcx.ins().store(MemFlags::new(), new, $ptr, 0);\n@@ -378,7 +378,7 @@ pub fn codegen_intrinsic_call<'a, 'tcx: 'a>(\n \n             // Compare\n             let is_eq = fx.bcx.ins().icmp(IntCC::Equal, old, test_old);\n-            let new = fx.bcx.ins().select(is_eq, old, new); // Keep old if not equal to test_old\n+            let new = crate::common::codegen_select(&mut fx.bcx, is_eq, old, new); // Keep old if not equal to test_old\n \n             // Write new\n             fx.bcx.ins().store(MemFlags::new(), new, ptr, 0);"}]}