{"sha": "55ceed81fe68bf09293176cd2c16fbb90aab0531", "node_id": "C_kwDOAAsO6NoAKDU1Y2VlZDgxZmU2OGJmMDkyOTMxNzZjZDJjMTZmYmI5MGFhYjA1MzE", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-01-14T13:25:52Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2022-02-11T19:28:38Z"}, "message": "Remove the alt_std_name option\n\nThis option introduced in #15820 allows a custom crate to be imported in\nthe place of std, but with the name std. I don't think there is any\nvalue to this. At most it is confusing users of a driver that uses this option. There are no users of\nthis option on github. If anyone still needs it, they can emulate it\ninjecting #![no_core] in addition to their own prelude.", "tree": {"sha": "4fc7484399104737d80fd170b4ebac5d47405d09", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fc7484399104737d80fd170b4ebac5d47405d09"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55ceed81fe68bf09293176cd2c16fbb90aab0531", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55ceed81fe68bf09293176cd2c16fbb90aab0531", "html_url": "https://github.com/rust-lang/rust/commit/55ceed81fe68bf09293176cd2c16fbb90aab0531", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55ceed81fe68bf09293176cd2c16fbb90aab0531/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "78450d2d602b06d9b94349aaf8cece1a4acaf3a8", "url": "https://api.github.com/repos/rust-lang/rust/commits/78450d2d602b06d9b94349aaf8cece1a4acaf3a8", "html_url": "https://github.com/rust-lang/rust/commit/78450d2d602b06d9b94349aaf8cece1a4acaf3a8"}], "stats": {"total": 12, "additions": 2, "deletions": 10}, "files": [{"sha": "3571517d2b258a8162ab6fc69bb0e5e658015e7e", "filename": "compiler/rustc_builtin_macros/src/standard_library_imports.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55ceed81fe68bf09293176cd2c16fbb90aab0531/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55ceed81fe68bf09293176cd2c16fbb90aab0531/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_builtin_macros%2Fsrc%2Fstandard_library_imports.rs?ref=55ceed81fe68bf09293176cd2c16fbb90aab0531", "patch": "@@ -11,7 +11,6 @@ pub fn inject(\n     mut krate: ast::Crate,\n     resolver: &mut dyn ResolverExpand,\n     sess: &Session,\n-    alt_std_name: Option<Symbol>,\n ) -> ast::Crate {\n     let edition = sess.parse_sess.edition;\n \n@@ -53,7 +52,7 @@ pub fn inject(\n                 span,\n                 ident,\n                 vec![cx.attribute(cx.meta_word(span, sym::macro_use))],\n-                ast::ItemKind::ExternCrate(alt_std_name),\n+                ast::ItemKind::ExternCrate(None),\n             ),\n         );\n     }"}, {"sha": "66e1e78b2856c8972539e349684e0e1a70a61093", "filename": "compiler/rustc_interface/src/passes.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/55ceed81fe68bf09293176cd2c16fbb90aab0531/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55ceed81fe68bf09293176cd2c16fbb90aab0531/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_interface%2Fsrc%2Fpasses.rs?ref=55ceed81fe68bf09293176cd2c16fbb90aab0531", "patch": "@@ -286,8 +286,7 @@ pub fn configure_and_expand(\n     rustc_builtin_macros::register_builtin_macros(resolver);\n \n     krate = sess.time(\"crate_injection\", || {\n-        let alt_std_name = sess.opts.alt_std_name.as_ref().map(|s| Symbol::intern(s));\n-        rustc_builtin_macros::standard_library_imports::inject(krate, resolver, sess, alt_std_name)\n+        rustc_builtin_macros::standard_library_imports::inject(krate, resolver, sess)\n     });\n \n     util::check_attr_crate_type(sess, &krate.attrs, &mut resolver.lint_buffer());"}, {"sha": "79962d5db891826e30cacac0389ab937d0ba8d10", "filename": "compiler/rustc_session/src/config.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/55ceed81fe68bf09293176cd2c16fbb90aab0531/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55ceed81fe68bf09293176cd2c16fbb90aab0531/compiler%2Frustc_session%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fconfig.rs?ref=55ceed81fe68bf09293176cd2c16fbb90aab0531", "patch": "@@ -770,7 +770,6 @@ impl Default for Options {\n             externs: Externs(BTreeMap::new()),\n             extern_dep_specs: ExternDepSpecs(BTreeMap::new()),\n             crate_name: None,\n-            alt_std_name: None,\n             libs: Vec::new(),\n             unstable_features: UnstableFeatures::Disallow,\n             debug_assertions: true,\n@@ -2382,7 +2381,6 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n         unstable_features: UnstableFeatures::from_environment(crate_name.as_deref()),\n         extern_dep_specs,\n         crate_name,\n-        alt_std_name: None,\n         libs,\n         debug_assertions,\n         actually_rustdoc: false,"}, {"sha": "ae1b638c34467ec0f0542cf0895ac2cb03e88009", "filename": "compiler/rustc_session/src/options.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/55ceed81fe68bf09293176cd2c16fbb90aab0531/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55ceed81fe68bf09293176cd2c16fbb90aab0531/compiler%2Frustc_session%2Fsrc%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Foptions.rs?ref=55ceed81fe68bf09293176cd2c16fbb90aab0531", "patch": "@@ -184,10 +184,6 @@ top_level_options!(\n         externs: Externs [UNTRACKED],\n         extern_dep_specs: ExternDepSpecs [UNTRACKED],\n         crate_name: Option<String> [TRACKED],\n-        /// An optional name to use as the crate for std during std injection,\n-        /// written `extern crate name as std`. Defaults to `std`. Used by\n-        /// out-of-tree drivers.\n-        alt_std_name: Option<String> [TRACKED],\n         /// Indicates how the compiler should treat unstable features.\n         unstable_features: UnstableFeatures [TRACKED],\n "}]}