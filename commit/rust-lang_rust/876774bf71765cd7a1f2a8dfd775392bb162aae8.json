{"sha": "876774bf71765cd7a1f2a8dfd775392bb162aae8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3Njc3NGJmNzE3NjVjZDdhMWYyYThkZmQ3NzUzOTJiYjE2MmFhZTg=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-09-14T21:13:24Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-09-23T12:18:34Z"}, "message": "Improve 'dropped here' note.\n\nStart mentioning function name that the variable is valid within in\nnotes to provide context.", "tree": {"sha": "81c8a9fdd3f6e34559468f2b29d26182df152c27", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81c8a9fdd3f6e34559468f2b29d26182df152c27"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/876774bf71765cd7a1f2a8dfd775392bb162aae8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAlunhJoACgkQAXYLT59T\n8VSisBAAgh0oLBTYPexPsoJ500xIssWG+6I5h+UeqPwg0nYUy0snYbLTjs0VN5Ot\nxSIsFiC736mvaRyuXAonzIPIyKlx5X/kjfa/4l+p9Aq5txQSsUnWZ4i3CJb67iAP\nAhpMhgqmLPltxhSShnkkApDQpZBSQvQYTjG7Au2rBXBB1B7f8az9Wi+MHbWDGV34\nYxk0OAmI29y1Cs5taU4t915BBOkX37HkNrywJY1UuG+BKH0mNZ8Il28tgDtDXmlA\nOaJPHEXHLZ0fJYIgRSguGcn2IpdCcVaUGW/YjaqKMAW9sMIkPZgX4W2E3YVUyyQW\naZt3QEald2kmlR9oktU06lknKrxl8o0TZEyAoO2k8QxcjrEkc7Sg2+PMau/JXPtJ\nCQEjfYmNUjv2uLB7wc3HoCNYPUmnYQ9v5MAs8AvuLwPzcZ0Ew7AoGC/Fsy58nxAB\nE1GvzmjrhkROyWPaAWmYSwywK1YsPiRsgKn2VC50kETcWT55jBN31toMn3T4Dr/Y\nl8QcVvt2GTvJz+QRAvFyGvXUN/1rp/ZuLaJ9MVTKxZO/XzE0jBPwKeCK4Ma2ryCJ\nHAPzLdXuuLnzSd8dWNsszEn+4YAzAtsT5dr0XxB6xfyxVSaedETYG1nSOTBSDXCs\nR8e7VmwRcJb22BTcbF6FIo5/fIew5R3QgGN9O/kF2lIeeD5wQP4=\n=Qq5p\n-----END PGP SIGNATURE-----", "payload": "tree 81c8a9fdd3f6e34559468f2b29d26182df152c27\nparent 9eb8d1179c220e44b3eec9edb69e1fbd04988538\nauthor David Wood <david@davidtw.co> 1536959604 +0200\ncommitter David Wood <david@davidtw.co> 1537705114 +0200\n\nImprove 'dropped here' note.\n\nStart mentioning function name that the variable is valid within in\nnotes to provide context.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/876774bf71765cd7a1f2a8dfd775392bb162aae8", "html_url": "https://github.com/rust-lang/rust/commit/876774bf71765cd7a1f2a8dfd775392bb162aae8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/876774bf71765cd7a1f2a8dfd775392bb162aae8/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9eb8d1179c220e44b3eec9edb69e1fbd04988538", "url": "https://api.github.com/repos/rust-lang/rust/commits/9eb8d1179c220e44b3eec9edb69e1fbd04988538", "html_url": "https://github.com/rust-lang/rust/commit/9eb8d1179c220e44b3eec9edb69e1fbd04988538"}], "stats": {"total": 34, "additions": 25, "deletions": 9}, "files": [{"sha": "6fe9087370b06f81b9df4b8f4fe154c2bd0ea725", "filename": "src/librustc_mir/borrow_check/error_reporting.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/876774bf71765cd7a1f2a8dfd775392bb162aae8/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/876774bf71765cd7a1f2a8dfd775392bb162aae8/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Ferror_reporting.rs?ref=876774bf71765cd7a1f2a8dfd775392bb162aae8", "patch": "@@ -519,7 +519,23 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n                 borrow_span,\n                 format!(\"`{}` would have to be valid for `{}`\", name, region_name)\n             );\n-            err.span_label(drop_span, format!(\"but `{}` dropped here while still borrowed\", name));\n+\n+            if let Some(fn_node_id) = self.infcx.tcx.hir.as_local_node_id(self.mir_def_id) {\n+                err.span_label(\n+                    drop_span,\n+                    format!(\n+                        \"...but `{}` is only valid for the duration of the `{}` function, so it \\\n+                         is dropped here while still borrowed\",\n+                        name,\n+                        self.infcx.tcx.hir.name(fn_node_id),\n+                    )\n+                );\n+            } else {\n+                err.span_label(\n+                    drop_span,\n+                    format!(\"...but `{}` dropped here while still borrowed\", name)\n+                );\n+            }\n \n             if let BorrowExplanation::MustBeValidFor(..) = explanation { } else {\n                 explanation.emit(self.infcx.tcx, &mut err);"}, {"sha": "11dbe5fcaca38253a85cba5357510ff19c30b5c7", "filename": "src/test/ui/issues/issue-30438-c.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/876774bf71765cd7a1f2a8dfd775392bb162aae8/src%2Ftest%2Fui%2Fissues%2Fissue-30438-c.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/876774bf71765cd7a1f2a8dfd775392bb162aae8/src%2Ftest%2Fui%2Fissues%2Fissue-30438-c.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-30438-c.nll.stderr?ref=876774bf71765cd7a1f2a8dfd775392bb162aae8", "patch": "@@ -10,7 +10,7 @@ LL |     &x\n    |     ^^ `x` would have to be valid for `'y`\n LL |     //~^ ERROR: `x` does not live long enough\n LL | }\n-   | - but `x` dropped here while still borrowed\n+   | - ...but `x` is only valid for the duration of the `silly` function, so it is dropped here while still borrowed\n \n error: aborting due to previous error\n "}, {"sha": "c8b473d2b2ccc01f29b077b68be80e1ae071db07", "filename": "src/test/ui/nll/borrowed-universal-error-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/876774bf71765cd7a1f2a8dfd775392bb162aae8/src%2Ftest%2Fui%2Fnll%2Fborrowed-universal-error-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/876774bf71765cd7a1f2a8dfd775392bb162aae8/src%2Ftest%2Fui%2Fnll%2Fborrowed-universal-error-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fborrowed-universal-error-2.stderr?ref=876774bf71765cd7a1f2a8dfd775392bb162aae8", "patch": "@@ -10,7 +10,7 @@ LL |     &v\n    |     ^^ `v` would have to be valid for `'a`\n LL |     //~^ ERROR `v` does not live long enough [E0597]\n LL | }\n-   | - but `v` dropped here while still borrowed\n+   | - ...but `v` is only valid for the duration of the `foo` function, so it is dropped here while still borrowed\n \n error: aborting due to previous error\n "}, {"sha": "233ed47163056446feec9e6e9216a2e299ce6ba1", "filename": "src/test/ui/nll/issue-52534-1.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/876774bf71765cd7a1f2a8dfd775392bb162aae8/src%2Ftest%2Fui%2Fnll%2Fissue-52534-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/876774bf71765cd7a1f2a8dfd775392bb162aae8/src%2Ftest%2Fui%2Fnll%2Fissue-52534-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52534-1.stderr?ref=876774bf71765cd7a1f2a8dfd775392bb162aae8", "patch": "@@ -9,7 +9,7 @@ LL |         let x = 22;\n LL |         &x\n    |         ^^ `x` would have to be valid for `'0`\n LL |     }\n-   |     - but `x` dropped here while still borrowed\n+   |     - ...but `x` is only valid for the duration of the `bar` function, so it is dropped here while still borrowed\n \n error[E0597]: `x` does not live long enough\n   --> $DIR/issue-52534-1.rs:25:5\n@@ -22,7 +22,7 @@ LL |     let x = 22;\n LL |     &x\n    |     ^^ `x` would have to be valid for `'0`\n LL | }\n-   | - but `x` dropped here while still borrowed\n+   | - ...but `x` is only valid for the duration of the `foo` function, so it is dropped here while still borrowed\n \n error[E0597]: `x` does not live long enough\n   --> $DIR/issue-52534-1.rs:30:6\n@@ -35,7 +35,7 @@ LL |     let x = 22;\n LL |     &&x\n    |      ^^ `x` would have to be valid for `'0`\n LL | }\n-   | - but `x` dropped here while still borrowed\n+   | - ...but `x` is only valid for the duration of the `baz` function, so it is dropped here while still borrowed\n \n error[E0597]: borrowed value does not live long enough\n   --> $DIR/issue-52534-1.rs:30:6"}, {"sha": "032aa218d4a8f9746282e9eb6d4136f52c1988d0", "filename": "src/test/ui/nll/issue-52534.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/876774bf71765cd7a1f2a8dfd775392bb162aae8/src%2Ftest%2Fui%2Fnll%2Fissue-52534.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/876774bf71765cd7a1f2a8dfd775392bb162aae8/src%2Ftest%2Fui%2Fnll%2Fissue-52534.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-52534.stderr?ref=876774bf71765cd7a1f2a8dfd775392bb162aae8", "patch": "@@ -6,7 +6,7 @@ LL |     foo(|a| &x)\n    |           |\n    |           has type `&'0 u32`\n LL | }\n-   | - but `x` dropped here while still borrowed\n+   | - ...but `x` is only valid for the duration of the `bar` function, so it is dropped here while still borrowed\n \n error: aborting due to previous error\n "}, {"sha": "90e0f1b7e07f8c72c0b1620f6be966197549e456", "filename": "src/test/ui/regions/regions-nested-fns-2.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/876774bf71765cd7a1f2a8dfd775392bb162aae8/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns-2.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/876774bf71765cd7a1f2a8dfd775392bb162aae8/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns-2.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns-2.nll.stderr?ref=876774bf71765cd7a1f2a8dfd775392bb162aae8", "patch": "@@ -8,7 +8,7 @@ LL |             if false { &y } else { z }\n    |                         ^ `y` would have to be valid for `'0`\n LL |         });\n LL | }\n-   | - but `y` dropped here while still borrowed\n+   | - ...but `y` is only valid for the duration of the `nested` function, so it is dropped here while still borrowed\n \n error: aborting due to previous error\n "}, {"sha": "e8309beb0ae87f4ca6daf72f45eff3d1747e73a8", "filename": "src/test/ui/regions/regions-nested-fns.nll.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/876774bf71765cd7a1f2a8dfd775392bb162aae8/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns.nll.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/876774bf71765cd7a1f2a8dfd775392bb162aae8/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns.nll.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions%2Fregions-nested-fns.nll.stderr?ref=876774bf71765cd7a1f2a8dfd775392bb162aae8", "patch": "@@ -31,7 +31,7 @@ LL |         ay = &y;\n    |               ^ `y` would have to be valid for `'0`\n ...\n LL | }\n-   | - but `y` dropped here while still borrowed\n+   | - ...but `y` is only valid for the duration of the `nested` function, so it is dropped here while still borrowed\n \n error: unsatisfied lifetime constraints\n   --> $DIR/regions-nested-fns.rs:23:68"}]}