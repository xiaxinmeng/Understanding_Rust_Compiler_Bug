{"sha": "6e1ed17295962b51fa8f1df14e3ff551eabed582", "node_id": "C_kwDOAAsO6NoAKDZlMWVkMTcyOTU5NjJiNTFmYThmMWRmMTRlM2ZmNTUxZWFiZWQ1ODI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-31T15:22:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-31T15:22:18Z"}, "message": "Auto merge of #2044 - RalfJung:int_log, r=RalfJung\n\ntest int_log functions\n\nI'll have to disable many of their tests in libcore since they take too long, so let's add some of them back on our side here.", "tree": {"sha": "27fa5962d54a096416e25211fbde6b28a747cdf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27fa5962d54a096416e25211fbde6b28a747cdf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6e1ed17295962b51fa8f1df14e3ff551eabed582", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6e1ed17295962b51fa8f1df14e3ff551eabed582", "html_url": "https://github.com/rust-lang/rust/commit/6e1ed17295962b51fa8f1df14e3ff551eabed582", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6e1ed17295962b51fa8f1df14e3ff551eabed582/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1bbf078f368b1a16951730148fe15127df249ef", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1bbf078f368b1a16951730148fe15127df249ef", "html_url": "https://github.com/rust-lang/rust/commit/c1bbf078f368b1a16951730148fe15127df249ef"}, {"sha": "811e6dd71dbbf5c4aee5b4ea1cc7c51f266e717a", "url": "https://api.github.com/repos/rust-lang/rust/commits/811e6dd71dbbf5c4aee5b4ea1cc7c51f266e717a", "html_url": "https://github.com/rust-lang/rust/commit/811e6dd71dbbf5c4aee5b4ea1cc7c51f266e717a"}], "stats": {"total": 31, "additions": 30, "deletions": 1}, "files": [{"sha": "bed83f84eedfcef7c1da87e5c81724d2b339e31c", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6e1ed17295962b51fa8f1df14e3ff551eabed582/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/6e1ed17295962b51fa8f1df14e3ff551eabed582/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=6e1ed17295962b51fa8f1df14e3ff551eabed582", "patch": "@@ -1 +1 @@\n-100f12d17026fccfc5d80527b5976dd66b228b13\n+df20355fa9fa5e9fb89be4e4bfee8a643bb7a23e"}, {"sha": "764b2dca82caad67c043b86e7ead2c94089091c5", "filename": "tests/run-pass/integer-ops.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/6e1ed17295962b51fa8f1df14e3ff551eabed582/tests%2Frun-pass%2Finteger-ops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6e1ed17295962b51fa8f1df14e3ff551eabed582/tests%2Frun-pass%2Finteger-ops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Finteger-ops.rs?ref=6e1ed17295962b51fa8f1df14e3ff551eabed582", "patch": "@@ -1,4 +1,5 @@\n // compile-flags: -Coverflow-checks=off\n+#![feature(int_log)]\n #![allow(arithmetic_overflow)]\n \n pub fn main() {\n@@ -171,4 +172,32 @@ pub fn main() {\n     assert_eq!(10i8.overflowing_abs(), (10,false));\n     assert_eq!((-10i8).overflowing_abs(), (10,false));\n     assert_eq!((-128i8).overflowing_abs(), (-128,true));\n+\n+    // Logarithms\n+    macro_rules! test_log {\n+        ($type:ident, $max_log2:expr, $max_log10:expr) => {\n+            assert_eq!($type::MIN.checked_log2(), None);\n+            assert_eq!($type::MIN.checked_log10(), None);\n+            assert_eq!($type::MAX.checked_log2(), Some($max_log2));\n+            assert_eq!($type::MAX.checked_log10(), Some($max_log10));\n+        }\n+    }\n+\n+    test_log!(i8, 6, 2);\n+    test_log!(u8, 7, 2);\n+    test_log!(i16, 14, 4);\n+    test_log!(u16, 15, 4);\n+    test_log!(i32, 30, 9);\n+    test_log!(u32, 31, 9);\n+    test_log!(i64, 62, 18);\n+    test_log!(u64, 63, 19);\n+    test_log!(i128, 126, 38);\n+    test_log!(u128, 127, 38);\n+\n+    for i in (1..=i16::MAX).step_by(i8::MAX as usize) {\n+        assert_eq!(i.checked_log(13), Some((i as f32).log(13.0) as u32));\n+    }\n+    for i in (1..=u16::MAX).step_by(i8::MAX as usize) {\n+        assert_eq!(i.checked_log(13), Some((i as f32).log(13.0) as u32));\n+    }\n }"}]}