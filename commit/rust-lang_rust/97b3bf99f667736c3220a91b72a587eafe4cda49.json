{"sha": "97b3bf99f667736c3220a91b72a587eafe4cda49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3YjNiZjk5ZjY2NzczNmMzMjIwYTkxYjcyYTU4N2VhZmU0Y2RhNDk=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2018-03-19T06:31:04Z"}, "committer": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2018-03-19T06:31:04Z"}, "message": "Stabilize termination_trait\n\nThis stabilizes `main` with non-() return types; see #48453.", "tree": {"sha": "9d7ffe740df57f72712c2013c2dd2eff90e90cf5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d7ffe740df57f72712c2013c2dd2eff90e90cf5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97b3bf99f667736c3220a91b72a587eafe4cda49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97b3bf99f667736c3220a91b72a587eafe4cda49", "html_url": "https://github.com/rust-lang/rust/commit/97b3bf99f667736c3220a91b72a587eafe4cda49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97b3bf99f667736c3220a91b72a587eafe4cda49/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c5c650d670f5f191ea9667b455c15a607e550fdb", "url": "https://api.github.com/repos/rust-lang/rust/commits/c5c650d670f5f191ea9667b455c15a607e550fdb", "html_url": "https://github.com/rust-lang/rust/commit/c5c650d670f5f191ea9667b455c15a607e550fdb"}], "stats": {"total": 62, "additions": 22, "deletions": 40}, "files": [{"sha": "42bf516a0afa5ee783a53fefc8407cbd6d34999d", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 16, "deletions": 19, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=97b3bf99f667736c3220a91b72a587eafe4cda49", "patch": "@@ -1106,25 +1106,22 @@ fn check_fn<'a, 'gcx, 'tcx>(inherited: &'a Inherited<'a, 'gcx, 'tcx>,\n     }\n     fcx.demand_suptype(span, ret_ty, actual_return_ty);\n \n-    if fcx.tcx.features().termination_trait {\n-        // If the termination trait language item is activated, check that the main return type\n-        // implements the termination trait.\n-        if let Some(term_id) = fcx.tcx.lang_items().termination() {\n-            if let Some((id, _)) = *fcx.tcx.sess.entry_fn.borrow() {\n-                if id == fn_id {\n-                    match fcx.sess().entry_type.get() {\n-                        Some(config::EntryMain) => {\n-                            let substs = fcx.tcx.mk_substs(iter::once(Kind::from(ret_ty)));\n-                            let trait_ref = ty::TraitRef::new(term_id, substs);\n-                            let cause = traits::ObligationCause::new(\n-                                span, fn_id, ObligationCauseCode::MainFunctionType);\n-\n-                            inherited.register_predicate(\n-                                traits::Obligation::new(\n-                                    cause, param_env, trait_ref.to_predicate()));\n-                        },\n-                        _ => {},\n-                    }\n+    // Check that the main return type implements the termination trait.\n+    if let Some(term_id) = fcx.tcx.lang_items().termination() {\n+        if let Some((id, _)) = *fcx.tcx.sess.entry_fn.borrow() {\n+            if id == fn_id {\n+                match fcx.sess().entry_type.get() {\n+                    Some(config::EntryMain) => {\n+                        let substs = fcx.tcx.mk_substs(iter::once(Kind::from(ret_ty)));\n+                        let trait_ref = ty::TraitRef::new(term_id, substs);\n+                        let cause = traits::ObligationCause::new(\n+                            span, fn_id, ObligationCauseCode::MainFunctionType);\n+\n+                        inherited.register_predicate(\n+                            traits::Obligation::new(\n+                                cause, param_env, trait_ref.to_predicate()));\n+                    },\n+                    _ => {},\n                 }\n             }\n         }"}, {"sha": "8089014044211cfb5bdbf160093a0da23f5a4cdd", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=97b3bf99f667736c3220a91b72a587eafe4cda49", "patch": "@@ -208,8 +208,7 @@ fn check_main_fn_ty<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>,\n             }\n \n             let actual = tcx.fn_sig(main_def_id);\n-            let expected_return_type = if tcx.lang_items().termination().is_some()\n-                && tcx.features().termination_trait {\n+            let expected_return_type = if tcx.lang_items().termination().is_some() {\n                 // we take the return type of the given main function, the real check is done\n                 // in `check_fn`\n                 actual.output().skip_binder()"}, {"sha": "33da0e5788653a5c0db63d91a845e31d7401d046", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=97b3bf99f667736c3220a91b72a587eafe4cda49", "patch": "@@ -308,7 +308,6 @@\n #![feature(str_char)]\n #![feature(str_internals)]\n #![feature(str_utf16)]\n-#![feature(termination_trait)]\n #![feature(test, rustc_private)]\n #![feature(thread_local)]\n #![feature(toowned_clone_into)]\n@@ -325,6 +324,7 @@\n #![cfg_attr(test, feature(update_panic_count))]\n #![cfg_attr(windows, feature(used))]\n #![cfg_attr(stage0, feature(never_type))]\n+#![cfg_attr(stage0, feature(termination_trait))]\n \n #![default_lib_allocator]\n "}, {"sha": "781071b7f7f072d968fe165e93a07932ad15bde2", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=97b3bf99f667736c3220a91b72a587eafe4cda49", "patch": "@@ -429,9 +429,6 @@ declare_features! (\n     // `foo.rs` as an alternative to `foo/mod.rs`\n     (active, non_modrs_mods, \"1.24.0\", Some(44660), None),\n \n-    // Termination trait in main (RFC 1937)\n-    (active, termination_trait, \"1.24.0\", Some(43301), None),\n-\n     // Termination trait in tests (RFC 1937)\n     (active, termination_trait_test, \"1.24.0\", Some(48854), None),\n \n@@ -558,6 +555,8 @@ declare_features! (\n     (accepted, inclusive_range_syntax, \"1.26.0\", Some(28237), None),\n     // allow `..=` in patterns (RFC 1192)\n     (accepted, dotdoteq_in_patterns, \"1.26.0\", Some(28237), None),\n+    // Termination trait in main (RFC 1937)\n+    (accepted, termination_trait, \"1.26.0\", Some(43301), None),\n );\n \n // If you change this, please modify src/doc/unstable-book as well. You must"}, {"sha": "ff2b32f3fd93b44a31c77faf75edf5dbabd99885", "filename": "src/test/compile-fail/rfc-1937-termination-trait/termination-trait-main-i32.rs", "status": "renamed", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-main-i32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-main-i32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-main-i32.rs?ref=97b3bf99f667736c3220a91b72a587eafe4cda49", "patch": "@@ -8,6 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-fn main() -> i32 { //~ ERROR main function has wrong type [E0580]\n+fn main() -> i32 {\n+//~^ ERROR the trait bound `i32: std::process::Termination` is not satisfied [E0277]\n     0\n }", "previous_filename": "src/test/compile-fail/feature-gate-termination_trait.rs"}, {"sha": "ea39ba92f41439a1f8ae5e4fa5b5abb9ca359e57", "filename": "src/test/compile-fail/rfc-1937-termination-trait/termination-trait-main-wrong-type.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-main-wrong-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-main-wrong-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-main-wrong-type.rs?ref=97b3bf99f667736c3220a91b72a587eafe4cda49", "patch": "@@ -7,7 +7,6 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(termination_trait)]\n \n fn main() -> char {\n //~^ ERROR: the trait bound `char: std::process::Termination` is not satisfied"}, {"sha": "bab02fc5597067eb30a872490d1f0c64aa7f0e92", "filename": "src/test/compile-fail/rfc-1937-termination-trait/termination-trait-not-satisfied.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-not-satisfied.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-not-satisfied.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Frfc-1937-termination-trait%2Ftermination-trait-not-satisfied.rs?ref=97b3bf99f667736c3220a91b72a587eafe4cda49", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(termination_trait)]\n-\n struct ReturnType {}\n \n fn main() -> ReturnType { //~ ERROR `ReturnType: std::process::Termination` is not satisfied"}, {"sha": "863de85af88fbee024d7f4df8f35c284ec796915", "filename": "src/test/run-fail/rfc-1937-termination-trait/termination-trait-for-never.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-never.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-never.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-never.rs?ref=97b3bf99f667736c3220a91b72a587eafe4cda49", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(termination_trait)]\n-\n // error-pattern:oh, dear\n \n fn main() -> ! {"}, {"sha": "0c6cb4de9567d8955d8ef2f618e4cc383d7fec05", "filename": "src/test/run-fail/rfc-1937-termination-trait/termination-trait-for-result-box-error_err.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_err.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_err.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_err.rs?ref=97b3bf99f667736c3220a91b72a587eafe4cda49", "patch": "@@ -11,8 +11,6 @@\n // must-compile-successfully\n // failure-status: 1\n \n-#![feature(termination_trait)]\n-\n use std::io::{Error, ErrorKind};\n \n fn main() -> Result<(), Box<Error>> {"}, {"sha": "046d27a9f0fe55586ed5f82a1533900e04e6b1ec", "filename": "src/test/run-pass/rfc-1937-termination-trait/termination-trait-for-empty.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-empty.rs?ref=97b3bf99f667736c3220a91b72a587eafe4cda49", "patch": "@@ -8,6 +8,4 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(termination_trait)]\n-\n fn main() {}"}, {"sha": "4aa7d8c3a77d2fd594538bc4c8bcc776893aec6b", "filename": "src/test/run-pass/rfc-1937-termination-trait/termination-trait-for-exitcode.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-exitcode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-exitcode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-exitcode.rs?ref=97b3bf99f667736c3220a91b72a587eafe4cda49", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(termination_trait)]\n #![feature(process_exitcode_placeholder)]\n \n use std::process::ExitCode;"}, {"sha": "33686ed0b8fa23b5dcbf8a038a23fbfebf815da9", "filename": "src/test/run-pass/rfc-1937-termination-trait/termination-trait-for-result-box-error_ok.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_ok.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_ok.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-result-box-error_ok.rs?ref=97b3bf99f667736c3220a91b72a587eafe4cda49", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(termination_trait)]\n-\n use std::io::Error;\n \n fn main() -> Result<(), Box<Error>> {"}, {"sha": "1c87e31e763e9f9bee733e568431872dcf599dee", "filename": "src/test/run-pass/rfc-1937-termination-trait/termination-trait-for-result.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-result.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97b3bf99f667736c3220a91b72a587eafe4cda49/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-result.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Frfc-1937-termination-trait%2Ftermination-trait-for-result.rs?ref=97b3bf99f667736c3220a91b72a587eafe4cda49", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(termination_trait)]\n-\n use std::io::Error;\n \n fn main() -> Result<(), Error> {"}]}