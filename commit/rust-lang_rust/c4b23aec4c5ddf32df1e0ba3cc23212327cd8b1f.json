{"sha": "c4b23aec4c5ddf32df1e0ba3cc23212327cd8b1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM0YjIzYWVjNGM1ZGRmMzJkZjFlMGJhM2NjMjMyMTIzMjdjZDhiMWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-29T00:15:22Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-04-29T00:15:22Z"}, "message": "Auto merge of #24865 - bluss:range-size, r=alexcrichton\n\ncore: Fix size_hint for signed integer `Range<T>` iterators\r\n\r\nThere was an overflow bug in .size_hint() for signed iterators, which\r\nproduced an hilariously incorrect size or an overflow panic.\r\n\r\nIncorrect size is a serious bug since the iterators are marked\r\nExactSizeIterator. (And leads to abort() on (-1i8..127).collect() when\r\nthe collection tries to preallocate too much).\r\n\r\n> (-1i8..127).size_hint()\r\n(18446744073709551488, Some(18446744073709551488))\r\n\r\nBug found using quickcheck.\r\n\r\nFixes #24851", "tree": {"sha": "45cf093827a54610239c2fddd3760b8addf4444d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45cf093827a54610239c2fddd3760b8addf4444d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c4b23aec4c5ddf32df1e0ba3cc23212327cd8b1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c4b23aec4c5ddf32df1e0ba3cc23212327cd8b1f", "html_url": "https://github.com/rust-lang/rust/commit/c4b23aec4c5ddf32df1e0ba3cc23212327cd8b1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c4b23aec4c5ddf32df1e0ba3cc23212327cd8b1f/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8871c17b76a1e0ab36ce2bb51008b53f596e5b3c", "url": "https://api.github.com/repos/rust-lang/rust/commits/8871c17b76a1e0ab36ce2bb51008b53f596e5b3c", "html_url": "https://github.com/rust-lang/rust/commit/8871c17b76a1e0ab36ce2bb51008b53f596e5b3c"}, {"sha": "95be21df477655131627def1943de73922b1f6a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/95be21df477655131627def1943de73922b1f6a4", "html_url": "https://github.com/rust-lang/rust/commit/95be21df477655131627def1943de73922b1f6a4"}], "stats": {"total": 45, "additions": 41, "deletions": 4}, "files": [{"sha": "0fa27a4312d5760948c12ce5dcc6df8bf3918241", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 35, "deletions": 4, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/c4b23aec4c5ddf32df1e0ba3cc23212327cd8b1f/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4b23aec4c5ddf32df1e0ba3cc23212327cd8b1f/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=c4b23aec4c5ddf32df1e0ba3cc23212327cd8b1f", "patch": "@@ -2407,12 +2407,14 @@ pub trait Step: PartialOrd {\n     /// `start` should always be less than `end`, so the result should never\n     /// be negative.\n     ///\n+    /// `by` must be > 0.\n+    ///\n     /// Returns `None` if it is not possible to calculate steps_between\n     /// without overflow.\n     fn steps_between(start: &Self, end: &Self, by: &Self) -> Option<usize>;\n }\n \n-macro_rules! step_impl {\n+macro_rules! step_impl_unsigned {\n     ($($t:ty)*) => ($(\n         impl Step for $t {\n             #[inline]\n@@ -2423,7 +2425,33 @@ macro_rules! step_impl {\n             #[allow(trivial_numeric_casts)]\n             fn steps_between(start: &$t, end: &$t, by: &$t) -> Option<usize> {\n                 if *start <= *end {\n-                    Some(((*end - *start) / *by) as usize)\n+                    // Note: We assume $t <= usize here\n+                    Some((*end - *start) as usize / (*by as usize))\n+                } else {\n+                    Some(0)\n+                }\n+            }\n+        }\n+    )*)\n+}\n+macro_rules! step_impl_signed {\n+    ($($t:ty)*) => ($(\n+        impl Step for $t {\n+            #[inline]\n+            fn step(&self, by: &$t) -> Option<$t> {\n+                (*self).checked_add(*by)\n+            }\n+            #[inline]\n+            #[allow(trivial_numeric_casts)]\n+            fn steps_between(start: &$t, end: &$t, by: &$t) -> Option<usize> {\n+                if *start <= *end {\n+                    // Note: We assume $t <= isize here\n+                    // Use .wrapping_sub and cast to usize to compute the\n+                    // difference that may not fit inside the range of isize.\n+                    Some(\n+                        ((*end as isize).wrapping_sub(*start as isize) as usize\n+                        / (*by as usize))\n+                    )\n                 } else {\n                     Some(0)\n                 }\n@@ -2447,9 +2475,12 @@ macro_rules! step_impl_no_between {\n     )*)\n }\n \n-step_impl!(usize u8 u16 u32 isize i8 i16 i32);\n+step_impl_unsigned!(usize u8 u16 u32);\n+step_impl_signed!(isize i8 i16 i32);\n+#[cfg(target_pointer_width = \"64\")]\n+step_impl_unsigned!(u64);\n #[cfg(target_pointer_width = \"64\")]\n-step_impl!(u64 i64);\n+step_impl_signed!(i64);\n #[cfg(target_pointer_width = \"32\")]\n step_impl_no_between!(u64 i64);\n "}, {"sha": "bb36630f1682f5ea1c1f869c7a907426509b6231", "filename": "src/libcoretest/iter.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c4b23aec4c5ddf32df1e0ba3cc23212327cd8b1f/src%2Flibcoretest%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c4b23aec4c5ddf32df1e0ba3cc23212327cd8b1f/src%2Flibcoretest%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Fiter.rs?ref=c4b23aec4c5ddf32df1e0ba3cc23212327cd8b1f", "patch": "@@ -11,6 +11,7 @@\n use core::iter::*;\n use core::iter::order::*;\n use core::iter::MinMaxResult::*;\n+use core::isize;\n use core::usize;\n use core::cmp;\n \n@@ -758,6 +759,11 @@ fn test_range() {\n     assert_eq!((usize::MAX - 1..usize::MAX).size_hint(), (1, Some(1)));\n     assert_eq!((-10..-1).size_hint(), (9, Some(9)));\n     assert_eq!((-1..-10).size_hint(), (0, Some(0)));\n+\n+    assert_eq!((-70..58i8).size_hint(), (128, Some(128)));\n+    assert_eq!((-128..127i8).size_hint(), (255, Some(255)));\n+    assert_eq!((-2..isize::MAX).size_hint(),\n+               (isize::MAX as usize + 2, Some(isize::MAX as usize + 2)));\n }\n \n #[test]"}]}