{"sha": "8213f01a76a6114ff145f5d5cec335671d3b6c7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyMTNmMDFhNzZhNjExNGZmMTQ1ZjVkNWNlYzMzNTY3MWQzYjZjN2U=", "commit": {"author": {"name": "Jake Kerr", "email": "kodafox@gmail.com", "date": "2015-09-01T08:20:04Z"}, "committer": {"name": "Jake Kerr", "email": "kodafox@gmail.com", "date": "2015-09-01T08:32:22Z"}, "message": "Reverse AtomicBool value in nomicon example to agree with its comment.\n\nMakes the code agree with the comment: 'value answers \"am I locked?\"'.", "tree": {"sha": "1f6f4f06e8c333b3fa09034a0a5aac920717fbca", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f6f4f06e8c333b3fa09034a0a5aac920717fbca"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8213f01a76a6114ff145f5d5cec335671d3b6c7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8213f01a76a6114ff145f5d5cec335671d3b6c7e", "html_url": "https://github.com/rust-lang/rust/commit/8213f01a76a6114ff145f5d5cec335671d3b6c7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8213f01a76a6114ff145f5d5cec335671d3b6c7e/comments", "author": {"login": "jakerr", "id": 322861, "node_id": "MDQ6VXNlcjMyMjg2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/322861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakerr", "html_url": "https://github.com/jakerr", "followers_url": "https://api.github.com/users/jakerr/followers", "following_url": "https://api.github.com/users/jakerr/following{/other_user}", "gists_url": "https://api.github.com/users/jakerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakerr/subscriptions", "organizations_url": "https://api.github.com/users/jakerr/orgs", "repos_url": "https://api.github.com/users/jakerr/repos", "events_url": "https://api.github.com/users/jakerr/events{/privacy}", "received_events_url": "https://api.github.com/users/jakerr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jakerr", "id": 322861, "node_id": "MDQ6VXNlcjMyMjg2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/322861?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jakerr", "html_url": "https://github.com/jakerr", "followers_url": "https://api.github.com/users/jakerr/followers", "following_url": "https://api.github.com/users/jakerr/following{/other_user}", "gists_url": "https://api.github.com/users/jakerr/gists{/gist_id}", "starred_url": "https://api.github.com/users/jakerr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jakerr/subscriptions", "organizations_url": "https://api.github.com/users/jakerr/orgs", "repos_url": "https://api.github.com/users/jakerr/repos", "events_url": "https://api.github.com/users/jakerr/events{/privacy}", "received_events_url": "https://api.github.com/users/jakerr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d78f2d333b323b0ce155152ae2e648450bffb01", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d78f2d333b323b0ce155152ae2e648450bffb01", "html_url": "https://github.com/rust-lang/rust/commit/7d78f2d333b323b0ce155152ae2e648450bffb01"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "08f0de4f00677d0348d8bd2966318da85cce22ef", "filename": "src/doc/nomicon/atomics.md", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8213f01a76a6114ff145f5d5cec335671d3b6c7e/src%2Fdoc%2Fnomicon%2Fatomics.md", "raw_url": "https://github.com/rust-lang/rust/raw/8213f01a76a6114ff145f5d5cec335671d3b6c7e/src%2Fdoc%2Fnomicon%2Fatomics.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Fnomicon%2Fatomics.md?ref=8213f01a76a6114ff145f5d5cec335671d3b6c7e", "patch": "@@ -210,18 +210,18 @@ use std::sync::atomic::{AtomicBool, Ordering};\n use std::thread;\n \n fn main() {\n-    let lock = Arc::new(AtomicBool::new(true)); // value answers \"am I locked?\"\n+    let lock = Arc::new(AtomicBool::new(false)); // value answers \"am I locked?\"\n \n     // ... distribute lock to threads somehow ...\n \n-    // Try to acquire the lock by setting it to false\n-    while !lock.compare_and_swap(true, false, Ordering::Acquire) { }\n+    // Try to acquire the lock by setting it to true\n+    while lock.compare_and_swap(false, true, Ordering::Acquire) { }\n     // broke out of the loop, so we successfully acquired the lock!\n \n     // ... scary data accesses ...\n \n     // ok we're done, release the lock\n-    lock.store(true, Ordering::Release);\n+    lock.store(false, Ordering::Release);\n }\n ```\n "}]}