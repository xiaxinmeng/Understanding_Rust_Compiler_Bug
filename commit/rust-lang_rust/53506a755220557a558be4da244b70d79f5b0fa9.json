{"sha": "53506a755220557a558be4da244b70d79f5b0fa9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzNTA2YTc1NTIyMDU1N2E1NThiZTRkYTI0NGI3MGQ3OWY1YjBmYTk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-24T11:13:51Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-24T11:13:51Z"}, "message": "Pull macro up", "tree": {"sha": "0781995393812f583200929cea61c706290ee137", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0781995393812f583200929cea61c706290ee137"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53506a755220557a558be4da244b70d79f5b0fa9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53506a755220557a558be4da244b70d79f5b0fa9", "html_url": "https://github.com/rust-lang/rust/commit/53506a755220557a558be4da244b70d79f5b0fa9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53506a755220557a558be4da244b70d79f5b0fa9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f11237561c391eecba39c5ba57defa2dc7a27b21", "url": "https://api.github.com/repos/rust-lang/rust/commits/f11237561c391eecba39c5ba57defa2dc7a27b21", "html_url": "https://github.com/rust-lang/rust/commit/f11237561c391eecba39c5ba57defa2dc7a27b21"}], "stats": {"total": 44, "additions": 16, "deletions": 28}, "files": [{"sha": "e8852531bfb075e4b7f29f0138e40baf208990fd", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/53506a755220557a558be4da244b70d79f5b0fa9/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53506a755220557a558be4da244b70d79f5b0fa9/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=53506a755220557a558be4da244b70d79f5b0fa9", "patch": "@@ -15,6 +15,20 @@ pub use crate::{\n pub use relative_path::{RelativePath, RelativePathBuf};\n pub use salsa;\n \n+#[macro_export]\n+macro_rules! impl_intern_key {\n+    ($name:ident) => {\n+        impl $crate::salsa::InternKey for $name {\n+            fn from_intern_id(v: $crate::salsa::InternId) -> Self {\n+                $name(v)\n+            }\n+            fn as_intern_id(&self) -> $crate::salsa::InternId {\n+                self.0\n+            }\n+        }\n+    };\n+}\n+\n pub trait CheckCanceled {\n     /// Aborts current query if there are pending changes.\n     ///"}, {"sha": "67de8b243ec82d0f56d811148ed1acfc60a493ea", "filename": "crates/ra_hir/src/ids.rs", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/53506a755220557a558be4da244b70d79f5b0fa9/crates%2Fra_hir%2Fsrc%2Fids.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53506a755220557a558be4da244b70d79f5b0fa9/crates%2Fra_hir%2Fsrc%2Fids.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fids.rs?ref=53506a755220557a558be4da244b70d79f5b0fa9", "patch": "@@ -5,20 +5,7 @@\n //! This module defines a bunch of ids we are using. The most important ones are\n //! probably `HirFileId` and `DefId`.\n \n-use ra_db::salsa;\n-\n-macro_rules! impl_intern_key {\n-    ($name:ident) => {\n-        impl salsa::InternKey for $name {\n-            fn from_intern_id(v: salsa::InternId) -> Self {\n-                $name(v)\n-            }\n-            fn as_intern_id(&self) -> salsa::InternId {\n-                self.0\n-            }\n-        }\n-    };\n-}\n+use ra_db::{impl_intern_key, salsa};\n \n /// This exists just for Chalk, because Chalk just has a single `StructId` where\n /// we have different kinds of ADTs, primitive types and special type"}, {"sha": "b063530c27b290c7bf84bdbe0705600bb75ab7d1", "filename": "crates/ra_hir_def/src/lib.rs", "status": "modified", "additions": 1, "deletions": 14, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/53506a755220557a558be4da244b70d79f5b0fa9/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53506a755220557a558be4da244b70d79f5b0fa9/crates%2Fra_hir_def%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Flib.rs?ref=53506a755220557a558be4da244b70d79f5b0fa9", "patch": "@@ -35,7 +35,7 @@ use std::hash::{Hash, Hasher};\n \n use hir_expand::{ast_id_map::FileAstId, db::AstDatabase, AstId, HirFileId, MacroDefId, Source};\n use ra_arena::{impl_arena_id, map::ArenaMap, RawId};\n-use ra_db::{salsa, CrateId};\n+use ra_db::{impl_intern_key, salsa, CrateId};\n use ra_syntax::{ast, AstNode};\n \n use crate::{builtin_type::BuiltinType, db::InternDatabase};\n@@ -56,19 +56,6 @@ pub struct ModuleId {\n pub struct LocalModuleId(RawId);\n impl_arena_id!(LocalModuleId);\n \n-macro_rules! impl_intern_key {\n-    ($name:ident) => {\n-        impl salsa::InternKey for $name {\n-            fn from_intern_id(v: salsa::InternId) -> Self {\n-                $name(v)\n-            }\n-            fn as_intern_id(&self) -> salsa::InternId {\n-                self.0\n-            }\n-        }\n-    };\n-}\n-\n #[derive(Debug)]\n pub struct ItemLoc<N: AstNode> {\n     pub(crate) module: ModuleId,"}]}