{"sha": "86f73473c8de4598f8ade982dbb9d44f89777c54", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2ZjczNDczYzhkZTQ1OThmOGFkZTk4MmRiYjlkNDRmODk3NzdjNTQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-30T07:20:58Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-04-30T07:20:58Z"}, "message": "Auto merge of #4045 - matthiaskrgr:RTU, r=phansch\n\nrustc_tools_util: try to handle case of not having CFG_RELEASE_CHANNEL better when getting compiler channel.\n\nchangelog: rustc_tools_util: try to handle case of not having CFG_RELEASE_CHANNEL better when getting compiler channel.", "tree": {"sha": "c8b52d63d7162a080e41ca235583f443f39ffdc3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c8b52d63d7162a080e41ca235583f443f39ffdc3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/86f73473c8de4598f8ade982dbb9d44f89777c54", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/86f73473c8de4598f8ade982dbb9d44f89777c54", "html_url": "https://github.com/rust-lang/rust/commit/86f73473c8de4598f8ade982dbb9d44f89777c54", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/86f73473c8de4598f8ade982dbb9d44f89777c54/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0ff1a585f8bda16edf9023d83a6e19f24ddd11b", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0ff1a585f8bda16edf9023d83a6e19f24ddd11b", "html_url": "https://github.com/rust-lang/rust/commit/d0ff1a585f8bda16edf9023d83a6e19f24ddd11b"}, {"sha": "8012b9119809a9d6ffc350cf884b1aea7d6dda54", "url": "https://api.github.com/repos/rust-lang/rust/commits/8012b9119809a9d6ffc350cf884b1aea7d6dda54", "html_url": "https://github.com/rust-lang/rust/commit/8012b9119809a9d6ffc350cf884b1aea7d6dda54"}], "stats": {"total": 43, "additions": 33, "deletions": 10}, "files": [{"sha": "79c90b86b6cfdcb7974551fc945bbbaf7a8f8741", "filename": "rustc_tools_util/README.md", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/86f73473c8de4598f8ade982dbb9d44f89777c54/rustc_tools_util%2FREADME.md", "raw_url": "https://github.com/rust-lang/rust/raw/86f73473c8de4598f8ade982dbb9d44f89777c54/rustc_tools_util%2FREADME.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tools_util%2FREADME.md?ref=86f73473c8de4598f8ade982dbb9d44f89777c54", "patch": "@@ -30,6 +30,10 @@ fn main() {\n         \"cargo:rustc-env=COMMIT_DATE={}\",\n         rustc_tools_util::get_commit_date().unwrap_or_default()\n     );\n+    println!(\n+        \"cargo:rustc-env=RUSTC_RELEASE_CHANNEL={}\",\n+        rustc_tools_util::get_channel_from_compiler_output().unwrap_or_default()\n+    );\n }\n \n ````"}, {"sha": "8f89d50c64a452171fda774dec33059bbd312776", "filename": "rustc_tools_util/src/lib.rs", "status": "modified", "additions": 29, "deletions": 10, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/86f73473c8de4598f8ade982dbb9d44f89777c54/rustc_tools_util%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/86f73473c8de4598f8ade982dbb9d44f89777c54/rustc_tools_util%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rustc_tools_util%2Fsrc%2Flib.rs?ref=86f73473c8de4598f8ade982dbb9d44f89777c54", "patch": "@@ -8,7 +8,7 @@ macro_rules! get_version_info {\n         let patch = env!(\"CARGO_PKG_VERSION_PATCH\").parse::<u16>().unwrap();\n         let crate_name = String::from(env!(\"CARGO_PKG_NAME\"));\n \n-        let host_compiler = $crate::get_channel();\n+        let host_compiler = option_env!(\"RUSTC_RELEASE_CHANNEL\").map(str::to_string);\n         let commit_hash = option_env!(\"GIT_HASH\").map(str::to_string);\n         let commit_date = option_env!(\"COMMIT_DATE\").map(str::to_string);\n \n@@ -79,15 +79,6 @@ impl std::fmt::Debug for VersionInfo {\n     }\n }\n \n-pub fn get_channel() -> Option<String> {\n-    if let Ok(channel) = env::var(\"CFG_RELEASE_CHANNEL\") {\n-        Some(channel)\n-    } else {\n-        // we could ask ${RUSTC} -Vv and do some parsing and find out\n-        Some(String::from(\"nightly\"))\n-    }\n-}\n-\n pub fn get_commit_hash() -> Option<String> {\n     std::process::Command::new(\"git\")\n         .args(&[\"rev-parse\", \"--short\", \"HEAD\"])\n@@ -104,6 +95,34 @@ pub fn get_commit_date() -> Option<String> {\n         .and_then(|r| String::from_utf8(r.stdout).ok())\n }\n \n+pub fn get_channel() -> Option<String> {\n+    match env::var(\"CFG_RELEASE_CHANNEL\") {\n+        Ok(channel) => Some(channel),\n+        Err(_) => {\n+            // if that failed, try to ask rustc -V, do some parsing and find out\n+            match std::process::Command::new(\"rustc\")\n+                .arg(\"-V\")\n+                .output()\n+                .ok()\n+                .and_then(|r| String::from_utf8(r.stdout).ok())\n+            {\n+                Some(rustc_output) => {\n+                    if rustc_output.contains(\"beta\") {\n+                        Some(String::from(\"beta\"))\n+                    } else if rustc_output.contains(\"stable\") {\n+                        Some(String::from(\"stable\"))\n+                    } else {\n+                        // default to nightly if we fail to parse\n+                        Some(String::from(\"nightly\"))\n+                    }\n+                },\n+                // default to nightly\n+                None => Some(String::from(\"nightly\")),\n+            }\n+        },\n+    }\n+}\n+\n #[cfg(test)]\n mod test {\n     use super::*;"}]}