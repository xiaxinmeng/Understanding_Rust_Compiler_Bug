{"sha": "da66431d06b961efd323f25978964df54d44d3c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNjY0MzFkMDZiOTYxZWZkMzIzZjI1OTc4OTY0ZGY1NGQ0NGQzYzQ=", "commit": {"author": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-02-23T20:43:04Z"}, "committer": {"name": "Eduard Burtescu", "email": "edy.burt@gmail.com", "date": "2016-03-17T19:51:50Z"}, "message": "trans: Combine cabi and back::abi into abi.", "tree": {"sha": "b83d995a8ae365f923a5a84d8755aa8559f39272", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b83d995a8ae365f923a5a84d8755aa8559f39272"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da66431d06b961efd323f25978964df54d44d3c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da66431d06b961efd323f25978964df54d44d3c4", "html_url": "https://github.com/rust-lang/rust/commit/da66431d06b961efd323f25978964df54d44d3c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da66431d06b961efd323f25978964df54d44d3c4/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cdfad40735745252ad42519df8a6c8ecc3739b58", "url": "https://api.github.com/repos/rust-lang/rust/commits/cdfad40735745252ad42519df8a6c8ecc3739b58", "html_url": "https://github.com/rust-lang/rust/commit/cdfad40735745252ad42519df8a6c8ecc3739b58"}], "stats": {"total": 113, "additions": 45, "deletions": 68}, "files": [{"sha": "d2ca1cd3f9339ca1a206d2a3dca1b6892bb734be", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -73,7 +73,6 @@ mod macros;\n pub mod diagnostics;\n \n pub mod back {\n-    pub use rustc_back::abi;\n     pub use rustc_back::rpath;\n     pub use rustc_back::svh;\n }"}, {"sha": "c3a3a8d582aff91f2fc400141e0b57d16d605234", "filename": "src/librustc_back/abi.rs", "status": "removed", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/cdfad40735745252ad42519df8a6c8ecc3739b58/src%2Flibrustc_back%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cdfad40735745252ad42519df8a6c8ecc3739b58/src%2Flibrustc_back%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Fabi.rs?ref=cdfad40735745252ad42519df8a6c8ecc3739b58", "patch": "@@ -1,24 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-pub const BOX_FIELD_DROP_GLUE: usize = 1;\n-pub const BOX_FIELD_BODY: usize = 4;\n-\n-/// The first half of a fat pointer.\n-/// - For a closure, this is the code address.\n-/// - For an object or trait instance, this is the address of the box.\n-/// - For a slice, this is the base address.\n-pub const FAT_PTR_ADDR: usize = 0;\n-\n-/// The second half of a fat pointer.\n-/// - For a closure, this is the address of the environment.\n-/// - For an object or trait instance, this is the address of the vtable.\n-/// - For a slice, this is the length.\n-pub const FAT_PTR_EXTRA: usize = 1;"}, {"sha": "3ffc031d621f4a2c5f8282b31035be77578f543b", "filename": "src/librustc_back/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_back%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_back%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Flib.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -48,7 +48,6 @@ extern crate rustc_llvm;\n extern crate rustc_front;\n #[macro_use] extern crate log;\n \n-pub mod abi;\n pub mod tempdir;\n pub mod rpath;\n pub mod sha2;"}, {"sha": "c8ce09b4d79754d93040182ff98cf2f1b1f41325", "filename": "src/librustc_trans/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Flib.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -61,7 +61,6 @@ pub use rustc::lint;\n pub use rustc::util;\n \n pub mod back {\n-    pub use rustc_back::abi;\n     pub use rustc_back::rpath;\n     pub use rustc_back::svh;\n "}, {"sha": "9aabceb6b0ee5785b04521adcaff1c0a5653450f", "filename": "src/librustc_trans/trans/abi.rs", "status": "renamed", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fabi.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -1,4 +1,4 @@\n-// Copyright 2012-2015 The Rust Project Developers. See the COPYRIGHT\n+// Copyright 2012-2016 The Rust Project Developers. See the COPYRIGHT\n // file at the top-level directory of this distribution and at\n // http://rust-lang.org/COPYRIGHT.\n //\n@@ -28,7 +28,19 @@ use trans::type_of;\n \n use middle::ty::{self, Ty};\n \n-use syntax::abi::Abi;\n+pub use syntax::abi::Abi;\n+\n+/// The first half of a fat pointer.\n+/// - For a closure, this is the code address.\n+/// - For an object or trait instance, this is the address of the box.\n+/// - For a slice, this is the base address.\n+pub const FAT_PTR_ADDR: usize = 0;\n+\n+/// The second half of a fat pointer.\n+/// - For a closure, this is the address of the environment.\n+/// - For an object or trait instance, this is the address of the vtable.\n+/// - For a slice, this is the length.\n+pub const FAT_PTR_EXTRA: usize = 1;\n \n #[derive(Clone, Copy, PartialEq, Debug)]\n pub enum ArgKind {\n@@ -130,7 +142,7 @@ impl FnType {\n                          abi: Abi,\n                          sig: &ty::FnSig<'tcx>,\n                          extra_args: &[Ty<'tcx>]) -> FnType {\n-        use syntax::abi::Abi::*;\n+        use self::Abi::*;\n         let cconv = match ccx.sess().target.target.adjust_abi(abi) {\n             RustIntrinsic => {\n                 // Intrinsics are emitted at the call site", "previous_filename": "src/librustc_trans/trans/cabi.rs"}, {"sha": "798fbbe8fbf5699e2360feb1680c9629dfef44ff", "filename": "src/librustc_trans/trans/adt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fadt.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -48,13 +48,13 @@ use std;\n use std::rc::Rc;\n \n use llvm::{ValueRef, True, IntEQ, IntNE};\n-use back::abi::FAT_PTR_ADDR;\n use middle::subst;\n use middle::ty::{self, Ty, TyCtxt};\n use syntax::ast;\n use syntax::attr;\n use syntax::attr::IntType;\n use trans::_match;\n+use trans::abi::FAT_PTR_ADDR;\n use trans::base::InitAlloca;\n use trans::build::*;\n use trans::cleanup;"}, {"sha": "4bb2b13998f7872eaa48a6be01dc2c7e9fe8f152", "filename": "src/librustc_trans/trans/attributes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fattributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fattributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fattributes.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -15,10 +15,10 @@ use middle::ty;\n use middle::infer;\n use middle::traits::ProjectionMode;\n use session::config::NoDebugInfo;\n-use syntax::abi::Abi;\n pub use syntax::attr::InlineAttr;\n use syntax::ast;\n use rustc_front::hir;\n+use trans::abi::Abi;\n use trans::base;\n use trans::common;\n use trans::context::CrateContext;"}, {"sha": "69b296edd306975c5de14896d009da8e218b092c", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -30,7 +30,7 @@ use super::CrateTranslation;\n use super::ModuleTranslation;\n \n use back::link::mangle_exported_name;\n-use back::{link, abi};\n+use back::link;\n use lint;\n use llvm::{BasicBlockRef, Linkage, ValueRef, Vector, get_param};\n use llvm;\n@@ -52,6 +52,7 @@ use rustc::mir::mir_map::MirMap;\n use session::config::{self, NoDebugInfo, FullDebugInfo};\n use session::Session;\n use trans::_match;\n+use trans::abi::{self, Abi};\n use trans::adt;\n use trans::assert_dep_graph;\n use trans::attributes;\n@@ -100,7 +101,6 @@ use std::cell::{Cell, RefCell};\n use std::collections::{HashMap, HashSet};\n use std::str;\n use std::{i8, i16, i32, i64};\n-use syntax::abi::Abi;\n use syntax::codemap::{Span, DUMMY_SP};\n use syntax::parse::token::InternedString;\n use syntax::attr::AttrMetaMethods;"}, {"sha": "1004505b3c4a06ac14fecd377be43b284b8cbc6e", "filename": "src/librustc_trans/trans/cabi_aarch64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_aarch64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_aarch64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcabi_aarch64.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -11,7 +11,7 @@\n #![allow(non_upper_case_globals)]\n \n use llvm::{Integer, Pointer, Float, Double, Struct, Array, Vector, Attribute};\n-use trans::cabi::{FnType, ArgType};\n+use trans::abi::{FnType, ArgType};\n use trans::context::CrateContext;\n use trans::type_::Type;\n "}, {"sha": "12d6aa6341aa91d536562377dc9eb4dde6f223fa", "filename": "src/librustc_trans/trans/cabi_arm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_arm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_arm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcabi_arm.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -11,7 +11,7 @@\n #![allow(non_upper_case_globals)]\n \n use llvm::{Integer, Pointer, Float, Double, Struct, Array, Vector, Attribute};\n-use trans::cabi::{FnType, ArgType};\n+use trans::abi::{FnType, ArgType};\n use trans::context::CrateContext;\n use trans::type_::Type;\n "}, {"sha": "752a7f3ca5c7cc1bc9dee5e1ead1f1607c2eb60d", "filename": "src/librustc_trans/trans/cabi_asmjs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_asmjs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_asmjs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcabi_asmjs.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -11,7 +11,7 @@\n #![allow(non_upper_case_globals)]\n \n use llvm::{Struct, Array, Attribute};\n-use trans::cabi::{FnType, ArgType};\n+use trans::abi::{FnType, ArgType};\n use trans::context::CrateContext;\n use trans::type_::Type;\n "}, {"sha": "1bab2f6e9aedae29d8337be018f030e67f20887f", "filename": "src/librustc_trans/trans/cabi_mips.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_mips.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_mips.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcabi_mips.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -14,7 +14,7 @@ use libc::c_uint;\n use std::cmp;\n use llvm;\n use llvm::{Integer, Pointer, Float, Double, Struct, Array, Vector, Attribute};\n-use trans::cabi::{ArgType, FnType};\n+use trans::abi::{ArgType, FnType};\n use trans::context::CrateContext;\n use trans::type_::Type;\n "}, {"sha": "0239f9fe928311e3f46331b9e40fadd0a820be7c", "filename": "src/librustc_trans/trans/cabi_powerpc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_powerpc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_powerpc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcabi_powerpc.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -11,7 +11,7 @@\n use libc::c_uint;\n use llvm;\n use llvm::{Integer, Pointer, Float, Double, Struct, Array, Attribute};\n-use trans::cabi::{FnType, ArgType};\n+use trans::abi::{FnType, ArgType};\n use trans::context::CrateContext;\n use trans::type_::Type;\n "}, {"sha": "842171c0d73ac012faceaed9a746f006d0c37f9b", "filename": "src/librustc_trans/trans/cabi_powerpc64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_powerpc64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_powerpc64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcabi_powerpc64.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -16,7 +16,7 @@\n // need to be fixed when PowerPC vector support is added.\n \n use llvm::{Integer, Pointer, Float, Double, Struct, Array, Attribute};\n-use trans::cabi::{FnType, ArgType};\n+use trans::abi::{FnType, ArgType};\n use trans::context::CrateContext;\n use trans::type_::Type;\n "}, {"sha": "256e656b9b691a2d76b14f230d284c6702f04c7c", "filename": "src/librustc_trans/trans/cabi_x86.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_x86.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_x86.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcabi_x86.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use llvm::*;\n-use trans::cabi::{ArgType, FnType};\n+use trans::abi::{ArgType, FnType};\n use trans::type_::Type;\n use super::common::*;\n use super::machine::*;"}, {"sha": "12fd31cc96e7a9cea5ad93d5ad858df110605913", "filename": "src/librustc_trans/trans/cabi_x86_64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_x86_64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_x86_64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcabi_x86_64.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -16,7 +16,7 @@ use self::RegClass::*;\n \n use llvm::{Integer, Pointer, Float, Double};\n use llvm::{Struct, Array, Attribute, Vector};\n-use trans::cabi::{ArgType, FnType};\n+use trans::abi::{ArgType, FnType};\n use trans::context::CrateContext;\n use trans::type_::Type;\n "}, {"sha": "7e887b2ad70ff1d9cacf91f06bcefa42561fca74", "filename": "src/librustc_trans/trans/cabi_x86_win64.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_x86_win64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcabi_x86_win64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcabi_x86_win64.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -11,7 +11,7 @@\n use llvm::*;\n use super::common::*;\n use super::machine::*;\n-use trans::cabi::{ArgType, FnType};\n+use trans::abi::{ArgType, FnType};\n use trans::type_::Type;\n \n // Win64 ABI: http://msdn.microsoft.com/en-us/library/zthk2dkh.aspx"}, {"sha": "4c5386799e9a81757ec98d57e37ea17fcc4227fb", "filename": "src/librustc_trans/trans/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -27,6 +27,7 @@ use middle::subst;\n use middle::subst::{Substs};\n use middle::traits;\n use rustc::front::map as hir_map;\n+use trans::abi::Abi;\n use trans::adt;\n use trans::attributes;\n use trans::base;\n@@ -54,7 +55,6 @@ use trans::Disr;\n use middle::ty::{self, Ty, TyCtxt, TypeFoldable};\n use rustc_front::hir;\n \n-use syntax::abi::Abi;\n use syntax::ast;\n use syntax::codemap::DUMMY_SP;\n use syntax::errors;"}, {"sha": "d4272e7918502663ac22c6bcbccc6215c27d71dc", "filename": "src/librustc_trans/trans/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fclosure.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -14,6 +14,7 @@ use llvm::{ValueRef, get_params};\n use middle::def_id::DefId;\n use middle::infer;\n use middle::traits::ProjectionMode;\n+use trans::abi::Abi::RustCall;\n use trans::adt;\n use trans::attributes;\n use trans::base::*;\n@@ -32,7 +33,6 @@ use trans::Disr;\n use middle::ty;\n use session::config::FullDebugInfo;\n \n-use syntax::abi::Abi::RustCall;\n use syntax::ast;\n use syntax::attr::{ThinAttributes, ThinAttributesExt};\n "}, {"sha": "3170ee0bf48acc59983900b9b44b4d5ce162c01b", "filename": "src/librustc_trans/trans/collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcollector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcollector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcollector.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -1261,7 +1261,7 @@ pub fn push_unique_type_name<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n                 output.push_str(\"unsafe \");\n             }\n \n-            if abi != ::syntax::abi::Abi::Rust {\n+            if abi != ::trans::abi::Abi::Rust {\n                 output.push_str(\"extern \\\"\");\n                 output.push_str(abi.name());\n                 output.push_str(\"\\\" \");"}, {"sha": "b9f9004d7ee268199e3afd3fd87fb5a082e78c82", "filename": "src/librustc_trans/trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -22,6 +22,7 @@ use middle::def_id::DefId;\n use middle::infer;\n use middle::lang_items::LangItem;\n use middle::subst::Substs;\n+use trans::abi::Abi;\n use trans::base;\n use trans::build;\n use trans::builder::Builder;\n@@ -49,7 +50,6 @@ use std::ops::Deref;\n use std::ffi::CString;\n use std::cell::{Cell, RefCell};\n \n-use syntax::abi::Abi;\n use syntax::ast;\n use syntax::codemap::{DUMMY_SP, Span};\n use syntax::parse::token::InternedString;"}, {"sha": "31ad7054996056b5a1a0cca3254d66da5596fb40", "filename": "src/librustc_trans/trans/consts.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -9,7 +9,6 @@\n // except according to those terms.\n \n \n-use back::abi;\n use llvm;\n use llvm::{ConstFCmp, ConstICmp, SetLinkage, SetUnnamedAddr};\n use llvm::{InternalLinkage, ValueRef, Bool, True};\n@@ -19,7 +18,7 @@ use middle::const_eval::{self, ConstEvalErr};\n use middle::def::Def;\n use middle::def_id::DefId;\n use rustc::front::map as hir_map;\n-use trans::{adt, closure, debuginfo, expr, inline, machine};\n+use trans::{abi, adt, closure, debuginfo, expr, inline, machine};\n use trans::base::{self, exported_name, push_ctxt};\n use trans::callee::Callee;\n use trans::collector::{self, TransItem};"}, {"sha": "e9a6aed70089fe1b628e898adb1dca4bff0bba8f", "filename": "src/librustc_trans/trans/debuginfo/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Fmod.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -32,6 +32,7 @@ use middle::subst::{self, Substs};\n use rustc_front;\n use rustc_front::hir;\n \n+use trans::abi::Abi;\n use trans::common::{NodeIdAndSpan, CrateContext, FunctionContext, Block};\n use trans;\n use trans::{monomorphize, type_of};\n@@ -49,7 +50,6 @@ use std::rc::Rc;\n \n use syntax::codemap::{Span, Pos};\n use syntax::{ast, codemap};\n-use syntax::abi::Abi;\n use syntax::attr::IntType;\n use syntax::parse::token::{self, special_idents};\n "}, {"sha": "b71b7789affe2f87575160b5f61aa1372f87bc3b", "filename": "src/librustc_trans/trans/debuginfo/type_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Ftype_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Ftype_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo%2Ftype_names.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -107,7 +107,7 @@ pub fn push_debuginfo_type_name<'a, 'tcx>(cx: &CrateContext<'a, 'tcx>,\n                 output.push_str(\"unsafe \");\n             }\n \n-            if abi != ::syntax::abi::Abi::Rust {\n+            if abi != ::trans::abi::Abi::Rust {\n                 output.push_str(\"extern \\\"\");\n                 output.push_str(abi.name());\n                 output.push_str(\"\\\" \");"}, {"sha": "848ed2c1211f435bfa3d0e0cf4495386b381c241", "filename": "src/librustc_trans/trans/declare.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fdeclare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fdeclare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdeclare.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -23,10 +23,9 @@ use llvm::{self, ValueRef};\n use middle::ty;\n use middle::infer;\n use middle::traits::ProjectionMode;\n-use syntax::abi::Abi;\n+use trans::abi::{Abi, FnType};\n use trans::attributes;\n use trans::base;\n-use trans::cabi::FnType;\n use trans::context::CrateContext;\n use trans::type_::Type;\n use trans::type_of;"}, {"sha": "6ea407e7b443edaba1579238a437be2029b6c75e", "filename": "src/librustc_trans/trans/expr.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -51,12 +51,11 @@\n pub use self::Dest::*;\n use self::lazy_binop_ty::*;\n \n-use back::abi;\n use llvm::{self, ValueRef, TypeKind};\n use middle::const_qualif::ConstQualif;\n use middle::def::Def;\n use middle::subst::Substs;\n-use trans::{_match, adt, asm, base, closure, consts, controlflow};\n+use trans::{_match, abi, adt, asm, base, closure, consts, controlflow};\n use trans::base::*;\n use trans::build::*;\n use trans::callee::{Callee, ArgExprs, ArgOverloadedCall, ArgOverloadedOp};"}, {"sha": "0cf30aca94cd27a797633432c67712181af91a43", "filename": "src/librustc_trans/trans/foreign.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -9,15 +9,15 @@\n // except according to those terms.\n \n \n-use back::{abi, link};\n+use back::link;\n use llvm::{ValueRef, get_param};\n use llvm;\n use middle::weak_lang_items;\n+use trans::abi::{self, Abi, FnType};\n use trans::attributes;\n use trans::base::{llvm_linkage_by_name, push_ctxt};\n use trans::base;\n use trans::build::*;\n-use trans::cabi::FnType;\n use trans::common::*;\n use trans::debuginfo::DebugLoc;\n use trans::declare;\n@@ -35,7 +35,6 @@ use middle::subst::Substs;\n use std::cmp;\n use std::iter::once;\n use libc::c_uint;\n-use syntax::abi::Abi;\n use syntax::attr;\n use syntax::parse::token::{InternedString, special_idents};\n use syntax::ast;\n@@ -715,7 +714,4 @@ pub fn link_name(name: ast::Name, attrs: &[ast::Attribute]) -> InternedString {\n             None => name.as_str(),\n         }\n     }\n-}\n-        }\n-    }\n }"}, {"sha": "edca908e7ba04a3e5b1499235580a67f6435fcc6", "filename": "src/librustc_trans/trans/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -18,6 +18,7 @@ use llvm::{ValueRef, TypeKind};\n use middle::infer;\n use middle::subst;\n use middle::subst::FnSpace;\n+use trans::abi::Abi;\n use trans::adt;\n use trans::attributes;\n use trans::base::*;\n@@ -40,7 +41,6 @@ use trans::Disr;\n use middle::subst::Substs;\n use rustc::dep_graph::DepNode;\n use rustc_front::hir;\n-use syntax::abi::Abi;\n use syntax::ast;\n use syntax::ptr::P;\n use syntax::parse::token;"}, {"sha": "00babf6792f9a4fd177950407b84b47e03b9f93f", "filename": "src/librustc_trans/trans/mir/block.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fblock.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -11,7 +11,7 @@\n use llvm::{BasicBlockRef, ValueRef, OperandBundleDef};\n use rustc::middle::ty;\n use rustc::mir::repr as mir;\n-use syntax::abi::Abi;\n+use trans::abi::Abi;\n use trans::adt;\n use trans::attributes;\n use trans::base;"}, {"sha": "21cd35ea045ae2ea501a48e3351d33acc85f26bd", "filename": "src/librustc_trans/trans/mir/constant.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmir%2Fconstant.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -8,12 +8,12 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use back::abi;\n use llvm::ValueRef;\n use middle::ty::{Ty, TypeFoldable};\n use rustc::middle::const_eval::{self, ConstVal};\n use rustc_const_eval::ConstInt::*;\n use rustc::mir::repr as mir;\n+use trans::abi;\n use trans::common::{self, BlockAndBuilder, C_bool, C_bytes, C_floating_f64, C_integral,\n                     C_str_slice, C_nil, C_undef};\n use trans::consts;"}, {"sha": "ff5ed35b8c08c1462b5d8c43f725f871a848650e", "filename": "src/librustc_trans/trans/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmod.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -19,6 +19,7 @@ pub use self::disr::Disr;\n #[macro_use]\n mod macros;\n \n+mod abi;\n mod adt;\n mod asm;\n mod assert_dep_graph;\n@@ -27,7 +28,6 @@ mod base;\n mod basic_block;\n mod build;\n mod builder;\n-mod cabi;\n mod cabi_aarch64;\n mod cabi_arm;\n mod cabi_asmjs;"}, {"sha": "07dba8e6cc383cbc1be3134b38c1c787b27073c1", "filename": "src/librustc_trans/trans/monomorphize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmonomorphize.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -16,6 +16,7 @@ use middle::infer::normalize_associated_type;\n use middle::subst;\n use middle::subst::{Subst, Substs};\n use middle::ty::fold::{TypeFolder, TypeFoldable};\n+use trans::abi::Abi;\n use trans::attributes;\n use trans::base::{push_ctxt};\n use trans::base::trans_fn;\n@@ -30,7 +31,6 @@ use rustc::util::ppaux;\n \n use rustc_front::hir;\n \n-use syntax::abi::Abi;\n use syntax::attr;\n use syntax::errors;\n "}, {"sha": "b3beecfb9b8d565c2d5ff1600aec323197e2f8ef", "filename": "src/librustc_trans/trans/type_of.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da66431d06b961efd323f25978964df54d44d3c4/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs?ref=da66431d06b961efd323f25978964df54d44d3c4", "patch": "@@ -13,15 +13,14 @@\n use middle::def_id::DefId;\n use middle::infer;\n use middle::subst;\n+use trans::abi::{Abi, FnType};\n use trans::adt;\n-use trans::cabi::FnType;\n use trans::common::*;\n use trans::machine;\n use middle::ty::{self, Ty, TypeFoldable};\n \n use trans::type_::Type;\n \n-use syntax::abi::Abi;\n use syntax::ast;\n \n // LLVM doesn't like objects that are too big. Issue #17913"}]}