{"sha": "55013cddefbd8e2616370a72df785c20880189ce", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU1MDEzY2RkZWZiZDhlMjYxNjM3MGE3MmRmNzg1YzIwODgwMTg5Y2U=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-14T04:29:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-14T04:29:26Z"}, "message": "Auto merge of #38981 - sdleffler:patch-1, r=alexcrichton\n\nAdd PartialOrd, Ord derivations to TypeId\n\nI want to be able to sort a `Vec` of types which contain `TypeId`s, so an `Ord` derivation would be very useful to me. `Hash` and `PartialEq`/`Eq` already exist, so the missing `PartialOrd` and `Ord` derivations feel like an oversight to me.", "tree": {"sha": "6f34d5d04aa643169ceb9b432ee7e68d0bb35714", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f34d5d04aa643169ceb9b432ee7e68d0bb35714"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/55013cddefbd8e2616370a72df785c20880189ce", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/55013cddefbd8e2616370a72df785c20880189ce", "html_url": "https://github.com/rust-lang/rust/commit/55013cddefbd8e2616370a72df785c20880189ce", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/55013cddefbd8e2616370a72df785c20880189ce/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "61b93bd811297e7a7527b5481b4fd08e9740b123", "url": "https://api.github.com/repos/rust-lang/rust/commits/61b93bd811297e7a7527b5481b4fd08e9740b123", "html_url": "https://github.com/rust-lang/rust/commit/61b93bd811297e7a7527b5481b4fd08e9740b123"}, {"sha": "b08ab1e20d8c70e741e3820f16fc277ba6a9a697", "url": "https://api.github.com/repos/rust-lang/rust/commits/b08ab1e20d8c70e741e3820f16fc277ba6a9a697", "html_url": "https://github.com/rust-lang/rust/commit/b08ab1e20d8c70e741e3820f16fc277ba6a9a697"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "b8a4174766a78b9863140c8282f64750b63bc2a2", "filename": "src/libcore/any.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/55013cddefbd8e2616370a72df785c20880189ce/src%2Flibcore%2Fany.rs", "raw_url": "https://github.com/rust-lang/rust/raw/55013cddefbd8e2616370a72df785c20880189ce/src%2Flibcore%2Fany.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fany.rs?ref=55013cddefbd8e2616370a72df785c20880189ce", "patch": "@@ -338,7 +338,11 @@ impl Any+Send {\n ///\n /// A `TypeId` is currently only available for types which ascribe to `'static`,\n /// but this limitation may be removed in the future.\n-#[derive(Clone, Copy, PartialEq, Eq, Debug, Hash)]\n+///\n+/// While `TypeId` implements `Hash`, `PartialOrd`, and `Ord`, it is worth\n+/// noting that the hashes and ordering will vary between Rust releases. Beware\n+/// of relying on them outside of your code!\n+#[derive(Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Debug, Hash)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct TypeId {\n     t: u64,"}]}