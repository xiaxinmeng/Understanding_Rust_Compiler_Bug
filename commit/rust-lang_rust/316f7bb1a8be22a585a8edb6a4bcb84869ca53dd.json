{"sha": "316f7bb1a8be22a585a8edb6a4bcb84869ca53dd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMxNmY3YmIxYThiZTIyYTU4NWE4ZWRiNmE0YmNiODQ4NjljYTUzZGQ=", "commit": {"author": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-29T02:23:19Z"}, "committer": {"name": "Jeffrey Seyfried", "email": "jeffrey.seyfried@gmail.com", "date": "2016-09-29T02:25:21Z"}, "message": "Fix ICE on a macro in a constant integer position that expands into other macros.", "tree": {"sha": "a26ffc37bdbca8a6077c2120b2904aa9ef9fc58d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a26ffc37bdbca8a6077c2120b2904aa9ef9fc58d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/316f7bb1a8be22a585a8edb6a4bcb84869ca53dd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/316f7bb1a8be22a585a8edb6a4bcb84869ca53dd", "html_url": "https://github.com/rust-lang/rust/commit/316f7bb1a8be22a585a8edb6a4bcb84869ca53dd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/316f7bb1a8be22a585a8edb6a4bcb84869ca53dd/comments", "author": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jseyfried", "id": 8652869, "node_id": "MDQ6VXNlcjg2NTI4Njk=", "avatar_url": "https://avatars.githubusercontent.com/u/8652869?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jseyfried", "html_url": "https://github.com/jseyfried", "followers_url": "https://api.github.com/users/jseyfried/followers", "following_url": "https://api.github.com/users/jseyfried/following{/other_user}", "gists_url": "https://api.github.com/users/jseyfried/gists{/gist_id}", "starred_url": "https://api.github.com/users/jseyfried/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jseyfried/subscriptions", "organizations_url": "https://api.github.com/users/jseyfried/orgs", "repos_url": "https://api.github.com/users/jseyfried/repos", "events_url": "https://api.github.com/users/jseyfried/events{/privacy}", "received_events_url": "https://api.github.com/users/jseyfried/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "755516bb96cc0f74c3098d2a64917f4e0a6f3f03", "url": "https://api.github.com/repos/rust-lang/rust/commits/755516bb96cc0f74c3098d2a64917f4e0a6f3f03", "html_url": "https://github.com/rust-lang/rust/commit/755516bb96cc0f74c3098d2a64917f4e0a6f3f03"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "947aeb4439e16931cedf38a1612602f2d9edae8b", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/316f7bb1a8be22a585a8edb6a4bcb84869ca53dd/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/316f7bb1a8be22a585a8edb6a4bcb84869ca53dd/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=316f7bb1a8be22a585a8edb6a4bcb84869ca53dd", "patch": "@@ -172,10 +172,13 @@ impl<'a> Resolver<'a> {\n \n         let mut def_collector = DefCollector::new(&mut self.definitions);\n         def_collector.visit_macro_invoc = Some(visit_macro_invoc);\n-        def_collector.with_parent(def_index, |def_collector| if !const_integer {\n+        def_collector.with_parent(def_index, |def_collector| {\n+            if const_integer {\n+                if let Expansion::Expr(ref expr) = *expansion {\n+                    def_collector.visit_ast_const_integer(expr);\n+                }\n+            }\n             expansion.visit_with(def_collector)\n-        } else if let Expansion::Expr(ref expr) = *expansion {\n-            def_collector.visit_ast_const_integer(expr);\n         });\n     }\n }"}]}