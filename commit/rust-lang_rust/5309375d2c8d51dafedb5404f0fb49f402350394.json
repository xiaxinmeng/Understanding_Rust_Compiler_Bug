{"sha": "5309375d2c8d51dafedb5404f0fb49f402350394", "node_id": "C_kwDOAAsO6NoAKDUzMDkzNzVkMmM4ZDUxZGFmZWRiNTQwNGYwZmI0OWY0MDIzNTAzOTQ", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-10T20:53:06Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-08-16T03:00:32Z"}, "message": "Do not report cycle error when inferring return type for suggestion", "tree": {"sha": "0cc5caf474d106828f82b5e2afdcff22316d6f5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0cc5caf474d106828f82b5e2afdcff22316d6f5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5309375d2c8d51dafedb5404f0fb49f402350394", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5309375d2c8d51dafedb5404f0fb49f402350394", "html_url": "https://github.com/rust-lang/rust/commit/5309375d2c8d51dafedb5404f0fb49f402350394", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5309375d2c8d51dafedb5404f0fb49f402350394/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "40336865fe7d4a01139a3336639c6971647e885c", "url": "https://api.github.com/repos/rust-lang/rust/commits/40336865fe7d4a01139a3336639c6971647e885c", "html_url": "https://github.com/rust-lang/rust/commit/40336865fe7d4a01139a3336639c6971647e885c"}], "stats": {"total": 75, "additions": 75, "deletions": 0}, "files": [{"sha": "ba81fc62141555bd0d62cbe32443720168fd464f", "filename": "Cargo.lock", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5309375d2c8d51dafedb5404f0fb49f402350394/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/5309375d2c8d51dafedb5404f0fb49f402350394/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=5309375d2c8d51dafedb5404f0fb49f402350394", "patch": "@@ -4359,6 +4359,7 @@ dependencies = [\n  \"rustc_serialize\",\n  \"rustc_session\",\n  \"rustc_span\",\n+ \"rustc_target\",\n  \"tracing\",\n ]\n "}, {"sha": "8a727d9a1825ad7f724f04b2ab095d96c116c57e", "filename": "compiler/rustc_middle/src/query/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5309375d2c8d51dafedb5404f0fb49f402350394/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5309375d2c8d51dafedb5404f0fb49f402350394/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fquery%2Fmod.rs?ref=5309375d2c8d51dafedb5404f0fb49f402350394", "patch": "@@ -770,6 +770,7 @@ rustc_queries! {\n         desc { |tcx| \"computing function signature of `{}`\", tcx.def_path_str(key) }\n         cache_on_disk_if { key.is_local() }\n         separate_provide_extern\n+        cycle_delay_bug\n     }\n \n     /// Performs lint checking for the module."}, {"sha": "c37ae4f32536bd3bc8a41d0f8dadac8b21b01522", "filename": "compiler/rustc_query_impl/Cargo.toml", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5309375d2c8d51dafedb5404f0fb49f402350394/compiler%2Frustc_query_impl%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/5309375d2c8d51dafedb5404f0fb49f402350394/compiler%2Frustc_query_impl%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2FCargo.toml?ref=5309375d2c8d51dafedb5404f0fb49f402350394", "patch": "@@ -20,6 +20,7 @@ rustc_query_system = { path = \"../rustc_query_system\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_session = { path = \"../rustc_session\" }\n rustc_span = { path = \"../rustc_span\" }\n+rustc_target = { path = \"../rustc_target\" }\n tracing = \"0.1\"\n \n [features]"}, {"sha": "0ed48f8d4a051a7f29f770c9d0eb60709d280766", "filename": "compiler/rustc_query_impl/src/values.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/5309375d2c8d51dafedb5404f0fb49f402350394/compiler%2Frustc_query_impl%2Fsrc%2Fvalues.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5309375d2c8d51dafedb5404f0fb49f402350394/compiler%2Frustc_query_impl%2Fsrc%2Fvalues.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_query_impl%2Fsrc%2Fvalues.rs?ref=5309375d2c8d51dafedb5404f0fb49f402350394", "patch": "@@ -43,3 +43,23 @@ impl<'tcx> Value<'tcx> for AdtSizedConstraint<'_> {\n         }\n     }\n }\n+\n+impl<'tcx> Value<'tcx> for ty::Binder<'_, ty::FnSig<'_>> {\n+    fn from_cycle_error(tcx: QueryCtxt<'tcx>) -> Self {\n+        let err = tcx.ty_error();\n+        // FIXME(compiler-errors): It would be nice if we could get the\n+        // query key, so we could at least generate a fn signature that\n+        // has the right arity.\n+        let fn_sig = ty::Binder::dummy(tcx.mk_fn_sig(\n+            [].into_iter(),\n+            err,\n+            false,\n+            rustc_hir::Unsafety::Normal,\n+            rustc_target::spec::abi::Abi::Rust,\n+        ));\n+\n+        // SAFETY: This is never called when `Self` is not `ty::Binder<'tcx, ty::FnSig<'tcx>>`.\n+        // FIXME: Represent the above fact in the trait system somehow.\n+        unsafe { std::mem::transmute::<ty::PolyFnSig<'tcx>, ty::Binder<'_, ty::FnSig<'_>>>(fn_sig) }\n+    }\n+}"}, {"sha": "d6d24be1b8dc43361d9fd15187c8b9de8a71be74", "filename": "src/test/ui/suggestions/return-cycle-2.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5309375d2c8d51dafedb5404f0fb49f402350394/src%2Ftest%2Fui%2Fsuggestions%2Freturn-cycle-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5309375d2c8d51dafedb5404f0fb49f402350394/src%2Ftest%2Fui%2Fsuggestions%2Freturn-cycle-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Freturn-cycle-2.rs?ref=5309375d2c8d51dafedb5404f0fb49f402350394", "patch": "@@ -0,0 +1,14 @@\n+use std::marker::PhantomData;\n+\n+struct Token<T>(PhantomData<T>);\n+\n+impl<T> Token<T> {\n+    fn as_ref(_: i32, _: i32) -> _ {\n+        //~^ ERROR the placeholder `_` is not allowed within types on item signatures for return types\n+        //~| NOTE not allowed in type signatures\n+        //~| HELP replace with the correct return type\n+        Token(PhantomData::<&T>)\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "3a1a0f7f4f543c686b43c632c885e987f90366fc", "filename": "src/test/ui/suggestions/return-cycle-2.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5309375d2c8d51dafedb5404f0fb49f402350394/src%2Ftest%2Fui%2Fsuggestions%2Freturn-cycle-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5309375d2c8d51dafedb5404f0fb49f402350394/src%2Ftest%2Fui%2Fsuggestions%2Freturn-cycle-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Freturn-cycle-2.stderr?ref=5309375d2c8d51dafedb5404f0fb49f402350394", "patch": "@@ -0,0 +1,12 @@\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/return-cycle-2.rs:6:34\n+   |\n+LL |     fn as_ref(_: i32, _: i32) -> _ {\n+   |                                  ^\n+   |                                  |\n+   |                                  not allowed in type signatures\n+   |                                  help: replace with the correct return type: `Token<&'static T>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0121`."}, {"sha": "60b80e35a20b892eee29a85ae05d9b067b3f0bb9", "filename": "src/test/ui/suggestions/return-cycle.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/5309375d2c8d51dafedb5404f0fb49f402350394/src%2Ftest%2Fui%2Fsuggestions%2Freturn-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5309375d2c8d51dafedb5404f0fb49f402350394/src%2Ftest%2Fui%2Fsuggestions%2Freturn-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Freturn-cycle.rs?ref=5309375d2c8d51dafedb5404f0fb49f402350394", "patch": "@@ -0,0 +1,14 @@\n+use std::marker::PhantomData;\n+\n+struct Token<T>(PhantomData<T>);\n+\n+impl<T> Token<T> {\n+    fn new() -> _ {\n+        //~^ ERROR the placeholder `_` is not allowed within types on item signatures for return types\n+        //~| NOTE not allowed in type signatures\n+        //~| HELP replace with the correct return type\n+        Token(PhantomData::<()>)\n+    }\n+}\n+\n+fn main() {}"}, {"sha": "63fa9e040874de8c5e0df73f90046876961877d1", "filename": "src/test/ui/suggestions/return-cycle.stderr", "status": "added", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/5309375d2c8d51dafedb5404f0fb49f402350394/src%2Ftest%2Fui%2Fsuggestions%2Freturn-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5309375d2c8d51dafedb5404f0fb49f402350394/src%2Ftest%2Fui%2Fsuggestions%2Freturn-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Freturn-cycle.stderr?ref=5309375d2c8d51dafedb5404f0fb49f402350394", "patch": "@@ -0,0 +1,12 @@\n+error[E0121]: the placeholder `_` is not allowed within types on item signatures for return types\n+  --> $DIR/return-cycle.rs:6:17\n+   |\n+LL |     fn new() -> _ {\n+   |                 ^\n+   |                 |\n+   |                 not allowed in type signatures\n+   |                 help: replace with the correct return type: `Token<()>`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0121`."}]}