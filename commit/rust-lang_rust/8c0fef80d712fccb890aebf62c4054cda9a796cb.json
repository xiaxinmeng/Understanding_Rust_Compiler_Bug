{"sha": "8c0fef80d712fccb890aebf62c4054cda9a796cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjMGZlZjgwZDcxMmZjY2I4OTBhZWJmNjJjNDA1NGNkYTlhNzk2Y2I=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-06-17T23:49:44Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2016-06-18T00:15:07Z"}, "message": "Fix ICE in memory categorization of tuple patterns", "tree": {"sha": "43028360214599a134b4879e8949905af9cbd798", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/43028360214599a134b4879e8949905af9cbd798"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c0fef80d712fccb890aebf62c4054cda9a796cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c0fef80d712fccb890aebf62c4054cda9a796cb", "html_url": "https://github.com/rust-lang/rust/commit/8c0fef80d712fccb890aebf62c4054cda9a796cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c0fef80d712fccb890aebf62c4054cda9a796cb/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1f9423a87aadacf1dc8f52e3df56f61a7415d4d7", "url": "https://api.github.com/repos/rust-lang/rust/commits/1f9423a87aadacf1dc8f52e3df56f61a7415d4d7", "html_url": "https://github.com/rust-lang/rust/commit/1f9423a87aadacf1dc8f52e3df56f61a7415d4d7"}], "stats": {"total": 23, "additions": 19, "deletions": 4}, "files": [{"sha": "a345e94ebda0b1d30c1e04998c5c4e8ea2bb002f", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8c0fef80d712fccb890aebf62c4054cda9a796cb/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c0fef80d712fccb890aebf62c4054cda9a796cb/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=8c0fef80d712fccb890aebf62c4054cda9a796cb", "patch": "@@ -1145,8 +1145,8 @@ impl<'a, 'gcx, 'tcx> MemCategorizationContext<'a, 'gcx, 'tcx> {\n                     }\n                 }\n                 Some(Def::Struct(..)) => {\n-                    let expected_len = match self.pat_ty(&pat) {\n-                        Ok(&ty::TyS{sty: ty::TyStruct(adt_def, _), ..}) => {\n+                    let expected_len = match self.pat_ty(&pat)?.sty {\n+                        ty::TyStruct(adt_def, _) => {\n                             adt_def.struct_variant().fields.len()\n                         }\n                         ref ty => {\n@@ -1196,8 +1196,8 @@ impl<'a, 'gcx, 'tcx> MemCategorizationContext<'a, 'gcx, 'tcx> {\n \n           PatKind::Tuple(ref subpats, ddpos) => {\n             // (p1, ..., pN)\n-            let expected_len = match self.pat_ty(&pat) {\n-                Ok(&ty::TyS{sty: ty::TyTuple(ref tys), ..}) => tys.len(),\n+            let expected_len = match self.pat_ty(&pat)?.sty {\n+                ty::TyTuple(ref tys) => tys.len(),\n                 ref ty => span_bug!(pat.span, \"tuple pattern unexpected type {:?}\", ty),\n             };\n             for (i, subpat) in subpats.iter().enumerate_and_adjust(expected_len, ddpos) {"}, {"sha": "ffcd052369d297725d55bbf0f6b12c83cb5d4475", "filename": "src/test/compile-fail/issue-34334.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/8c0fef80d712fccb890aebf62c4054cda9a796cb/src%2Ftest%2Fcompile-fail%2Fissue-34334.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c0fef80d712fccb890aebf62c4054cda9a796cb/src%2Ftest%2Fcompile-fail%2Fissue-34334.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-34334.rs?ref=8c0fef80d712fccb890aebf62c4054cda9a796cb", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main () {\n+    let sr: Vec<(u32, _, _) = vec![]; //~ ERROR expected one of `+`, `,`, or `>`, found `=`\n+    let sr2: Vec<(u32, _, _)> = sr.iter().map(|(faction, th_sender, th_receiver)| {}).collect();\n+    //~^ ERROR unresolved name `sr`\n+}"}]}