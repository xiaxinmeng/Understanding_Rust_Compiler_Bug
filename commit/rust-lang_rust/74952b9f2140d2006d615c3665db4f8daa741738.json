{"sha": "74952b9f2140d2006d615c3665db4f8daa741738", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc0OTUyYjlmMjE0MGQyMDA2ZDYxNWMzNjY1ZGI0ZjhkYWE3NDE3Mzg=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-24T20:29:32Z"}, "committer": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2020-09-24T20:29:32Z"}, "message": "Fix FIXME in core::num test: Check sign of zero in min/max tests.", "tree": {"sha": "aea24240ac268946072fa55b6f31cbf5334782ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aea24240ac268946072fa55b6f31cbf5334782ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/74952b9f2140d2006d615c3665db4f8daa741738", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/74952b9f2140d2006d615c3665db4f8daa741738", "html_url": "https://github.com/rust-lang/rust/commit/74952b9f2140d2006d615c3665db4f8daa741738", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/74952b9f2140d2006d615c3665db4f8daa741738/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4eff9b0b29a8898c839d46f3c66526710afed68a", "url": "https://api.github.com/repos/rust-lang/rust/commits/4eff9b0b29a8898c839d46f3c66526710afed68a", "html_url": "https://github.com/rust-lang/rust/commit/4eff9b0b29a8898c839d46f3c66526710afed68a"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "378c8af344b591b0d82631237391c06dc1a6ab90", "filename": "library/core/tests/num/mod.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/74952b9f2140d2006d615c3665db4f8daa741738/library%2Fcore%2Ftests%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/74952b9f2140d2006d615c3665db4f8daa741738/library%2Fcore%2Ftests%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fnum%2Fmod.rs?ref=74952b9f2140d2006d615c3665db4f8daa741738", "patch": "@@ -634,14 +634,18 @@ assume_usize_width! {\n macro_rules! test_float {\n     ($modname: ident, $fty: ty, $inf: expr, $neginf: expr, $nan: expr) => {\n         mod $modname {\n-            // FIXME(nagisa): these tests should test for sign of -0.0\n             #[test]\n             fn min() {\n                 assert_eq!((0.0 as $fty).min(0.0), 0.0);\n+                assert!((0.0 as $fty).min(0.0).is_sign_positive());\n                 assert_eq!((-0.0 as $fty).min(-0.0), -0.0);\n+                assert!((-0.0 as $fty).min(-0.0).is_sign_negative());\n                 assert_eq!((9.0 as $fty).min(9.0), 9.0);\n                 assert_eq!((-9.0 as $fty).min(0.0), -9.0);\n                 assert_eq!((0.0 as $fty).min(9.0), 0.0);\n+                assert!((0.0 as $fty).min(9.0).is_sign_positive());\n+                assert_eq!((-0.0 as $fty).min(9.0), -0.0);\n+                assert!((-0.0 as $fty).min(9.0).is_sign_negative());\n                 assert_eq!((-0.0 as $fty).min(-9.0), -9.0);\n                 assert_eq!(($inf as $fty).min(9.0), 9.0);\n                 assert_eq!((9.0 as $fty).min($inf), 9.0);\n@@ -660,11 +664,19 @@ macro_rules! test_float {\n             #[test]\n             fn max() {\n                 assert_eq!((0.0 as $fty).max(0.0), 0.0);\n+                assert!((0.0 as $fty).max(0.0).is_sign_positive());\n                 assert_eq!((-0.0 as $fty).max(-0.0), -0.0);\n+                assert!((-0.0 as $fty).max(-0.0).is_sign_negative());\n                 assert_eq!((9.0 as $fty).max(9.0), 9.0);\n                 assert_eq!((-9.0 as $fty).max(0.0), 0.0);\n+                assert!((-9.0 as $fty).max(0.0).is_sign_positive());\n+                assert_eq!((-9.0 as $fty).max(-0.0), -0.0);\n+                assert!((-9.0 as $fty).max(-0.0).is_sign_negative());\n                 assert_eq!((0.0 as $fty).max(9.0), 9.0);\n+                assert_eq!((0.0 as $fty).max(-9.0), 0.0);\n+                assert!((0.0 as $fty).max(-9.0).is_sign_positive());\n                 assert_eq!((-0.0 as $fty).max(-9.0), -0.0);\n+                assert!((-0.0 as $fty).max(-9.0).is_sign_negative());\n                 assert_eq!(($inf as $fty).max(9.0), $inf);\n                 assert_eq!((9.0 as $fty).max($inf), $inf);\n                 assert_eq!(($inf as $fty).max(-9.0), $inf);"}]}