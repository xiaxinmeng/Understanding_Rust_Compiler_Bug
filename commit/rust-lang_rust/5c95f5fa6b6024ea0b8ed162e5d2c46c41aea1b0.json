{"sha": "5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjOTVmNWZhNmI2MDI0ZWEwYjhlZDE2MmU1ZDJjNDZjNDFhZWExYjA=", "commit": {"author": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2019-07-07T17:08:40Z"}, "committer": {"name": "Nikita Popov", "email": "nikita.ppv@gmail.com", "date": "2019-07-09T19:55:29Z"}, "message": "Fix float add/mul reduction codegen\n\nThe accumulator is now respected for unordered reductions.", "tree": {"sha": "b4adf84eda41c22a58c084917b9a893dc8df9659", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b4adf84eda41c22a58c084917b9a893dc8df9659"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0", "html_url": "https://github.com/rust-lang/rust/commit/5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0/comments", "author": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikic", "id": 216080, "node_id": "MDQ6VXNlcjIxNjA4MA==", "avatar_url": "https://avatars.githubusercontent.com/u/216080?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikic", "html_url": "https://github.com/nikic", "followers_url": "https://api.github.com/users/nikic/followers", "following_url": "https://api.github.com/users/nikic/following{/other_user}", "gists_url": "https://api.github.com/users/nikic/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikic/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikic/subscriptions", "organizations_url": "https://api.github.com/users/nikic/orgs", "repos_url": "https://api.github.com/users/nikic/repos", "events_url": "https://api.github.com/users/nikic/events{/privacy}", "received_events_url": "https://api.github.com/users/nikic/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8789c9e59596c5f89c6be6b82a880e016d6c2f31", "url": "https://api.github.com/repos/rust-lang/rust/commits/8789c9e59596c5f89c6be6b82a880e016d6c2f31", "html_url": "https://github.com/rust-lang/rust/commit/8789c9e59596c5f89c6be6b82a880e016d6c2f31"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "e9f25e6344b064ac990af518a59a16fa9e9b420c", "filename": "src/librustc_codegen_llvm/common.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0/src%2Flibrustc_codegen_llvm%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fcommon.rs?ref=5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0", "patch": "@@ -249,6 +249,10 @@ impl ConstMethods<'tcx> for CodegenCx<'ll, 'tcx> {\n         self.const_uint(self.type_i8(), i as u64)\n     }\n \n+    fn const_real(&self, t: &'ll Type, val: f64) -> &'ll Value {\n+        unsafe { llvm::LLVMConstReal(t, val) }\n+    }\n+\n     fn const_struct(\n         &self,\n         elts: &[&'ll Value],"}, {"sha": "dd6cfd7e29e4ea9f39efffb9f834d86a240fee11", "filename": "src/librustc_codegen_llvm/intrinsic.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fintrinsic.rs?ref=5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0", "patch": "@@ -1663,9 +1663,10 @@ fn generic_simd_intrinsic(\n                             acc\n                         } else {\n                             // unordered arithmetic reductions do not:\n+                            let identity_acc = if $name.contains(\"mul\") { 1.0 } else { 0.0 };\n                             match f.bit_width() {\n-                                32 => bx.const_undef(bx.type_f32()),\n-                                64 => bx.const_undef(bx.type_f64()),\n+                                32 => bx.const_real(bx.type_f32(), identity_acc),\n+                                64 => bx.const_real(bx.type_f64(), identity_acc),\n                                 v => {\n                                     return_error!(r#\"\n unsupported {} from `{}` with element `{}` of size `{}` to `{}`\"#,"}, {"sha": "4bf0faa1ec32e0498e37f84e6616e42db4a80572", "filename": "src/librustc_codegen_llvm/llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2Fllvm%2Fffi.rs?ref=5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0", "patch": "@@ -715,6 +715,7 @@ extern \"C\" {\n     // Operations on scalar constants\n     pub fn LLVMConstInt(IntTy: &Type, N: c_ulonglong, SignExtend: Bool) -> &Value;\n     pub fn LLVMConstIntOfArbitraryPrecision(IntTy: &Type, Wn: c_uint, Ws: *const u64) -> &Value;\n+    pub fn LLVMConstReal(RealTy: &Type, N: f64) -> &Value;\n     pub fn LLVMConstIntGetZExtValue(ConstantVal: &Value) -> c_ulonglong;\n     pub fn LLVMRustConstInt128Get(ConstantVal: &Value, SExt: bool,\n                                   high: &mut u64, low: &mut u64) -> bool;"}, {"sha": "248fadfaf0f2734eef2e350d8674750d06c4e748", "filename": "src/librustc_codegen_ssa/traits/consts.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_ssa%2Ftraits%2Fconsts.rs?ref=5c95f5fa6b6024ea0b8ed162e5d2c46c41aea1b0", "patch": "@@ -17,6 +17,7 @@ pub trait ConstMethods<'tcx>: BackendTypes {\n     fn const_u64(&self, i: u64) -> Self::Value;\n     fn const_usize(&self, i: u64) -> Self::Value;\n     fn const_u8(&self, i: u8) -> Self::Value;\n+    fn const_real(&self, t: Self::Type, val: f64) -> Self::Value;\n \n     fn const_struct(&self, elts: &[Self::Value], packed: bool) -> Self::Value;\n "}]}