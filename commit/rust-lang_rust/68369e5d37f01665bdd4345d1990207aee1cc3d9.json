{"sha": "68369e5d37f01665bdd4345d1990207aee1cc3d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY4MzY5ZTVkMzdmMDE2NjViZGQ0MzQ1ZDE5OTAyMDdhZWUxY2MzZDk=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-04-25T08:31:40Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-04-25T08:31:40Z"}, "message": "Merge remote-tracking branch 'origin/master' into yati_master", "tree": {"sha": "efe63d69bafb60a0abddb265401e2e9aa986b5cb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efe63d69bafb60a0abddb265401e2e9aa986b5cb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/68369e5d37f01665bdd4345d1990207aee1cc3d9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAlj/CW8ACgkQpp+NIls6\n19lR5g/+OaGJUyPmvWG6WBdrrS8GajekdrPwjQjZVFrpOxJzt9G0STes6CHuPF8t\n4pHNS7l6O308g9d64UCi+9nT1Yzgi9Zv+uJNf23lUH0gem3+4bjMcQBMAYBQ7/yD\nkO4oYlKjG2tr76iC6EUZBqHPAir3D95Db+EPATaVwE25V4vVzDzn+/5Y1LxCX4hr\nownjCWi6veWl8ODtkNWzBtf7tpVAz6ezncMpDf0Nrky8F/IiwnvchSvV6awL/pYr\nvW0TmCDuXM1NM8QIV04vPVOLmuuB3KwgIf7P5TbFA2KrxP+y5pibuQKM820Z3YQa\naNdwNAZ0koxcH3j+4UK3XE3+4EX4gFtPHxCAiH3oa0CbZqzbt+BqvhWFKIeQ3loQ\no9qcnNLdiKgQk3Ga0w587FRwBpRt0m/WfdTUZpJFngfNytrZJYjo9QvTApYSK7cK\nAQPTcm+Rb0vBU1SpLsyLVQcv7TZmYpc4952WE7I0Cuwx8tm0LNvjJ4zZcUN08MMV\nD5Fcu/Sn+1RWWG87pHmHDyaNAG7DE2gH8ULAsW2oDVt4yolnOrX2Qk+s4rvB65aW\nIfHzNOBVARcNuGcPaj17G0KaQHeb1gs/CHrGPql6uIJ/sHed7WOldhYtY41iaqgi\nqzT2zPalOrTUVKuAxfqz28EjIju36Jxb7KP6+Ks6zxwkKPIEuTE=\n=hpxd\n-----END PGP SIGNATURE-----", "payload": "tree efe63d69bafb60a0abddb265401e2e9aa986b5cb\nparent cac15d24f9342a8eee2e7446ade2990c9414a8a1\nparent 03f238d35bb61dc76f7a8d9865a33656aeff556b\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1493109100 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1493109100 +0200\n\nMerge remote-tracking branch 'origin/master' into yati_master\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/68369e5d37f01665bdd4345d1990207aee1cc3d9", "html_url": "https://github.com/rust-lang/rust/commit/68369e5d37f01665bdd4345d1990207aee1cc3d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/68369e5d37f01665bdd4345d1990207aee1cc3d9/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cac15d24f9342a8eee2e7446ade2990c9414a8a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/cac15d24f9342a8eee2e7446ade2990c9414a8a1", "html_url": "https://github.com/rust-lang/rust/commit/cac15d24f9342a8eee2e7446ade2990c9414a8a1"}, {"sha": "03f238d35bb61dc76f7a8d9865a33656aeff556b", "url": "https://api.github.com/repos/rust-lang/rust/commits/03f238d35bb61dc76f7a8d9865a33656aeff556b", "html_url": "https://github.com/rust-lang/rust/commit/03f238d35bb61dc76f7a8d9865a33656aeff556b"}], "stats": {"total": 1406, "additions": 718, "deletions": 688}, "files": [{"sha": "8da893dededf2e2ff9997754586d94d4df13e6a5", "filename": "CHANGELOG.md", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/CHANGELOG.md", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/CHANGELOG.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CHANGELOG.md?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,6 +1,18 @@\n # Change Log\n All notable changes to this project will be documented in this file.\n \n+## 0.0.126 \u2014 2017-04-24\n+* Update to *rustc 1.18.0-nightly (2bd4b5c6d 2017-04-23)*\n+\n+## 0.0.125 \u2014 2017-04-19\n+* Update to *rustc 1.18.0-nightly (9f2abadca 2017-04-18)*\n+\n+## 0.0.124 \u2014 2017-04-16\n+* Update to *rustc 1.18.0-nightly (d5cf1cb64 2017-04-15)*\n+\n+## 0.0.123 \u2014 2017-04-07\n+* Fix various false positives\n+\n ## 0.0.122 \u2014 2017-04-07\n * Rustup to *rustc 1.18.0-nightly (91ae22a01 2017-04-05)*\n * New lint: [`op_ref`]"}, {"sha": "6b72881508bc4c0e2c6cccad40a5519541f95758", "filename": "Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/Cargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/Cargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.toml?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,6 +1,6 @@\n [package]\n name = \"clippy\"\n-version = \"0.0.122\"\n+version = \"0.0.126\"\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\",\n \t\"Andre Bogus <bogusandre@gmail.com>\",\n@@ -30,7 +30,7 @@ test = false\n \n [dependencies]\n # begin automatic update\n-clippy_lints = { version = \"0.0.122\", path = \"clippy_lints\" }\n+clippy_lints = { version = \"0.0.126\", path = \"clippy_lints\" }\n # end automatic update\n cargo_metadata = \"0.1.1\"\n "}, {"sha": "d3ad7e8c9178cd8ea689927d7b2c55ecc2eb5138", "filename": "clippy_lints/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2FCargo.toml?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,7 +1,7 @@\n [package]\n name = \"clippy_lints\"\n # begin automatic update\n-version = \"0.0.122\"\n+version = \"0.0.126\"\n # end automatic update\n authors = [\n \t\"Manish Goregaokar <manishsmail@gmail.com>\","}, {"sha": "c1207095140eda46c015e80d0a0c9a950497f185", "filename": "clippy_lints/src/bit_mask.rs", "status": "modified", "additions": 11, "deletions": 2, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fbit_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fbit_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fbit_mask.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,9 +1,10 @@\n use rustc::hir::*;\n use rustc::hir::def::Def;\n use rustc::lint::*;\n+use rustc::ty;\n use rustc_const_eval::lookup_const_by_id;\n use syntax::ast::LitKind;\n-use syntax::codemap::Span;\n+use syntax::codemap::{Span, DUMMY_SP};\n use utils::span_lint;\n \n /// **What it does:** Checks for incompatible bit masks in comparisons.\n@@ -249,7 +250,15 @@ fn fetch_int_literal(cx: &LateContext, lit: &Expr) -> Option<u128> {\n         ExprPath(ref qpath) => {\n             let def = cx.tables.qpath_def(qpath, lit.id);\n             if let Def::Const(def_id) = def {\n-                lookup_const_by_id(cx.tcx, def_id, Substs::empty()).and_then(|(l, _ty)| fetch_int_literal(cx, l))\n+                lookup_const_by_id(cx.tcx, def_id, Substs::empty()).and_then(|(l, _ty)| {\n+                    let body = if let Some(id) = cx.tcx.hir.as_local_node_id(l) {\n+                        ty::queries::mir_const_qualif::get(cx.tcx, DUMMY_SP, def_id);\n+                        cx.tcx.hir.body(cx.tcx.hir.body_owned_by(id))\n+                    } else {\n+                        cx.tcx.sess.cstore.item_body(cx.tcx, def_id)\n+                    };\n+                    fetch_int_literal(cx, &body.value)\n+                })\n             } else {\n                 None\n             }"}, {"sha": "3e2cbff3d82b5e8e8f0a566cb4c7befe0f9a438c", "filename": "clippy_lints/src/consts.rs", "status": "modified", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fconsts.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -13,6 +13,7 @@ use std::mem;\n use std::rc::Rc;\n use syntax::ast::{FloatTy, LitKind, StrStyle, NodeId};\n use syntax::ptr::P;\n+use syntax::codemap::DUMMY_SP;\n \n #[derive(Debug, Copy, Clone)]\n pub enum FloatWidth {\n@@ -286,13 +287,19 @@ impl<'c, 'cc> ConstEvalLateContext<'c, 'cc> {\n                 let substs = self.tables\n                     .node_id_item_substs(id)\n                     .unwrap_or_else(|| self.tcx.intern_substs(&[]));\n-                if let Some((const_expr, tables)) = lookup_const_by_id(self.tcx, def_id, substs) {\n+                if let Some((const_expr, _)) = lookup_const_by_id(self.tcx, def_id, substs) {\n                     let mut cx = ConstEvalLateContext {\n                         tcx: self.tcx,\n-                        tables: tables,\n+                        tables: self.tcx.item_tables(const_expr),\n                         needed_resolution: false,\n                     };\n-                    let ret = cx.expr(const_expr);\n+                    let body = if let Some(id) = self.tcx.hir.as_local_node_id(def_id) {\n+                        ty::queries::mir_const_qualif::get(self.tcx, DUMMY_SP, def_id);\n+                        self.tcx.hir.body(self.tcx.hir.body_owned_by(id))\n+                    } else {\n+                        self.tcx.sess.cstore.item_body(self.tcx, def_id)\n+                    };\n+                    let ret = cx.expr(&body.value);\n                     if ret.is_some() {\n                         self.needed_resolution = true;\n                     }"}, {"sha": "6fe089cf91657fa445e0124dd0c0d0defdc87e96", "filename": "clippy_lints/src/copies.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fcopies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fcopies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fcopies.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -223,7 +223,7 @@ fn lint_match_arms(cx: &LateContext, expr: &Expr) {\n /// `if a { c } else if b { d } else { e }`.\n fn if_sequence(mut expr: &Expr) -> (SmallVector<&Expr>, SmallVector<&Block>) {\n     let mut conds = SmallVector::new();\n-    let mut blocks : SmallVector<&Block> = SmallVector::new();\n+    let mut blocks: SmallVector<&Block> = SmallVector::new();\n \n     while let ExprIf(ref cond, ref then_expr, ref else_expr) = expr.node {\n         conds.push(&**cond);\n@@ -315,10 +315,10 @@ fn search_same<T, Hash, Eq>(exprs: &[T], hash: Hash, eq: Eq) -> Option<(&T, &T)>\n         return None;\n     } else if exprs.len() == 2 {\n         return if eq(&exprs[0], &exprs[1]) {\n-                   Some((&exprs[0], &exprs[1]))\n-               } else {\n-                   None\n-               };\n+            Some((&exprs[0], &exprs[1]))\n+        } else {\n+            None\n+        };\n     }\n \n     let mut map: HashMap<_, Vec<&_>> = HashMap::with_capacity(exprs.len());"}, {"sha": "73d9f8ba16171d51a883dfed295a1bcedb768bb5", "filename": "clippy_lints/src/entry.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fentry.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -46,11 +46,11 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for HashMapLint {\n                 if let Some((ty, map, key)) = check_cond(cx, check) {\n                     // in case of `if !m.contains_key(&k) { m.insert(k, v); }`\n                     // we can give a better error message\n-                    let sole_expr =  {\n+                    let sole_expr = {\n                         else_block.is_none() &&\n                         if let ExprBlock(ref then_block) = then_block.node {\n                             (then_block.expr.is_some() as usize) + then_block.stmts.len() == 1\n-                        }  else {\n+                        } else {\n                             true\n                         }\n                     };"}, {"sha": "9ca07e27406b8243039ec4a8df1f237133554876", "filename": "clippy_lints/src/enum_clike.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fenum_clike.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fenum_clike.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fenum_clike.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -44,7 +44,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for UnportableVariant {\n                 let variant = &var.node;\n                 if let Some(body_id) = variant.disr_expr {\n                     use rustc_const_eval::*;\n-                    let constcx = ConstContext::new(cx.tcx, body_id);\n+                    let constcx = ConstContext::with_tables(cx.tcx, cx.tcx.body_tables(body_id));\n                     let bad = match constcx.eval(&cx.tcx.hir.body(body_id).value) {\n                         Ok(ConstVal::Integral(Usize(Us64(i)))) => i as u32 as u64 != i,\n                         Ok(ConstVal::Integral(Isize(Is64(i)))) => i as i32 as i64 != i,"}, {"sha": "764bcded5ede10baa73ab7490fa8e76f7e42109c", "filename": "clippy_lints/src/eq_op.rs", "status": "modified", "additions": 45, "deletions": 52, "changes": 97, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Feq_op.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -56,29 +56,24 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for EqOp {\n             if is_valid_operator(op) {\n                 if SpanlessEq::new(cx).ignore_fn().eq_expr(left, right) {\n                     span_lint(cx,\n-                            EQ_OP,\n-                            e.span,\n-                            &format!(\"equal expressions as operands to `{}`\", op.node.as_str()));\n+                              EQ_OP,\n+                              e.span,\n+                              &format!(\"equal expressions as operands to `{}`\", op.node.as_str()));\n                 } else {\n                     let trait_id = match op.node {\n                         BiAdd => cx.tcx.lang_items.add_trait(),\n                         BiSub => cx.tcx.lang_items.sub_trait(),\n                         BiMul => cx.tcx.lang_items.mul_trait(),\n                         BiDiv => cx.tcx.lang_items.div_trait(),\n                         BiRem => cx.tcx.lang_items.rem_trait(),\n-                        BiAnd |\n-                        BiOr => None,\n+                        BiAnd | BiOr => None,\n                         BiBitXor => cx.tcx.lang_items.bitxor_trait(),\n                         BiBitAnd => cx.tcx.lang_items.bitand_trait(),\n                         BiBitOr => cx.tcx.lang_items.bitor_trait(),\n                         BiShl => cx.tcx.lang_items.shl_trait(),\n                         BiShr => cx.tcx.lang_items.shr_trait(),\n-                        BiNe |\n-                        BiEq => cx.tcx.lang_items.eq_trait(),\n-                        BiLt |\n-                        BiLe |\n-                        BiGe |\n-                        BiGt => cx.tcx.lang_items.ord_trait(),\n+                        BiNe | BiEq => cx.tcx.lang_items.eq_trait(),\n+                        BiLt | BiLe | BiGe | BiGt => cx.tcx.lang_items.ord_trait(),\n                     };\n                     if let Some(trait_id) = trait_id {\n                         #[allow(match_same_arms)]\n@@ -90,57 +85,55 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for EqOp {\n                             (&ExprAddrOf(_, ref l), &ExprAddrOf(_, ref r)) => {\n                                 if implements_trait(cx, cx.tables.expr_ty(l), trait_id, &[cx.tables.expr_ty(r)], None) {\n                                     span_lint_and_then(cx,\n-                                        OP_REF,\n-                                        e.span,\n-                                        \"taken reference of both operands, which is done automatically by the operator anyway\",\n-                                        |db| {\n-                                            let lsnip = snippet(cx, l.span, \"...\").to_string();\n-                                            let rsnip = snippet(cx, r.span, \"...\").to_string();\n-                                            multispan_sugg(db,\n-                                                        \"use the values directly\".to_string(),\n-                                                        vec![(left.span, lsnip),\n+                                                       OP_REF,\n+                                                       e.span,\n+                                                       \"taken reference of both operands, which is done automatically \\\n+                                                        by the operator anyway\",\n+                                                       |db| {\n+                                        let lsnip = snippet(cx, l.span, \"...\").to_string();\n+                                        let rsnip = snippet(cx, r.span, \"...\").to_string();\n+                                        multispan_sugg(db,\n+                                                       \"use the values directly\".to_string(),\n+                                                       vec![(left.span, lsnip),\n                                                             (right.span, rsnip)]);\n-                                        }\n-                                    )\n+                                    })\n                                 }\n-                            }\n+                            },\n                             // &foo == bar\n                             (&ExprAddrOf(_, ref l), _) => {\n-                                if implements_trait(cx, cx.tables.expr_ty(l), trait_id, &[cx.tables.expr_ty(right)], None) {\n-                                    span_lint_and_then(cx,\n-                                        OP_REF,\n-                                        e.span,\n-                                        \"taken reference of left operand\",\n-                                        |db| {\n-                                            let lsnip = snippet(cx, l.span, \"...\").to_string();\n-                                            let rsnip = Sugg::hir(cx, right, \"...\").deref().to_string();\n-                                            multispan_sugg(db,\n-                                                        \"dereference the right operand instead\".to_string(),\n-                                                        vec![(left.span, lsnip),\n+                                if implements_trait(cx,\n+                                                    cx.tables.expr_ty(l),\n+                                                    trait_id,\n+                                                    &[cx.tables.expr_ty(right)],\n+                                                    None) {\n+                                    span_lint_and_then(cx, OP_REF, e.span, \"taken reference of left operand\", |db| {\n+                                        let lsnip = snippet(cx, l.span, \"...\").to_string();\n+                                        let rsnip = Sugg::hir(cx, right, \"...\").deref().to_string();\n+                                        multispan_sugg(db,\n+                                                       \"dereference the right operand instead\".to_string(),\n+                                                       vec![(left.span, lsnip),\n                                                             (right.span, rsnip)]);\n-                                        }\n-                                    )\n+                                    })\n                                 }\n-                            }\n+                            },\n                             // foo == &bar\n                             (_, &ExprAddrOf(_, ref r)) => {\n-                                if implements_trait(cx, cx.tables.expr_ty(left), trait_id, &[cx.tables.expr_ty(r)], None) {\n-                                    span_lint_and_then(cx,\n-                                        OP_REF,\n-                                        e.span,\n-                                        \"taken reference of right operand\",\n-                                        |db| {\n-                                            let lsnip = Sugg::hir(cx, left, \"...\").deref().to_string();\n-                                            let rsnip = snippet(cx, r.span, \"...\").to_string();\n-                                            multispan_sugg(db,\n-                                                        \"dereference the left operand instead\".to_string(),\n-                                                        vec![(left.span, lsnip),\n+                                if implements_trait(cx,\n+                                                    cx.tables.expr_ty(left),\n+                                                    trait_id,\n+                                                    &[cx.tables.expr_ty(r)],\n+                                                    None) {\n+                                    span_lint_and_then(cx, OP_REF, e.span, \"taken reference of right operand\", |db| {\n+                                        let lsnip = Sugg::hir(cx, left, \"...\").deref().to_string();\n+                                        let rsnip = snippet(cx, r.span, \"...\").to_string();\n+                                        multispan_sugg(db,\n+                                                       \"dereference the left operand instead\".to_string(),\n+                                                       vec![(left.span, lsnip),\n                                                             (right.span, rsnip)]);\n-                                        }\n-                                    )\n+                                    })\n                                 }\n-                            }\n-                            _ => {}\n+                            },\n+                            _ => {},\n                         }\n                     }\n                 }"}, {"sha": "3a6a316226cb63c8c3c65b6baf7621db79edf7e7", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -98,8 +98,8 @@ pub fn get_argument_fmtstr_parts<'a, 'b>(cx: &LateContext<'a, 'b>, expr: &'a Exp\n }\n \n /// Checks if the expressions matches\n-/// ```rust\n-/// { static __STATIC_FMTSTR: s = &[\"a\", \"b\", c]; __STATIC_FMTSTR }\n+/// ```rust, ignore\n+/// { static __STATIC_FMTSTR: &'static[&'static str] = &[\"a\", \"b\", c]; __STATIC_FMTSTR }\n /// ```\n fn check_static_str(cx: &LateContext, expr: &Expr) -> bool {\n     if let Some(expr) = get_argument_fmtstr_parts(cx, expr) {"}, {"sha": "8f8c7db64cfd7faec8b6a4cd925343c449c5a399", "filename": "clippy_lints/src/formatting.rs", "status": "modified", "additions": 32, "deletions": 8, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformatting.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -100,11 +100,19 @@ impl EarlyLintPass for Formatting {\n fn check_assign(cx: &EarlyContext, expr: &ast::Expr) {\n     if let ast::ExprKind::Assign(ref lhs, ref rhs) = expr.node {\n         if !differing_macro_contexts(lhs.span, rhs.span) && !in_macro(lhs.span) {\n-            let eq_span = Span { lo: lhs.span.hi, hi: rhs.span.lo, ctxt: NO_EXPANSION };\n+            let eq_span = Span {\n+                lo: lhs.span.hi,\n+                hi: rhs.span.lo,\n+                ctxt: NO_EXPANSION,\n+            };\n             if let ast::ExprKind::Unary(op, ref sub_rhs) = rhs.node {\n                 if let Some(eq_snippet) = snippet_opt(cx, eq_span) {\n                     let op = ast::UnOp::to_string(op);\n-                    let eqop_span= Span { lo: lhs.span.hi, hi: sub_rhs.span.lo, ctxt: NO_EXPANSION };\n+                    let eqop_span = Span {\n+                        lo: lhs.span.hi,\n+                        hi: sub_rhs.span.lo,\n+                        ctxt: NO_EXPANSION,\n+                    };\n                     if eq_snippet.ends_with('=') {\n                         span_note_and_lint(cx,\n                                            SUSPICIOUS_ASSIGNMENT_FORMATTING,\n@@ -127,7 +135,11 @@ fn check_else_if(cx: &EarlyContext, expr: &ast::Expr) {\n         if unsugar_if(else_).is_some() && !differing_macro_contexts(then.span, else_.span) && !in_macro(then.span) {\n             // this will be a span from the closing \u2018}\u2019 of the \u201cthen\u201d block (excluding) to the\n             // \u201cif\u201d of the \u201celse if\u201d block (excluding)\n-            let else_span = Span { lo: then.span.hi, hi: else_.span.lo, ctxt: NO_EXPANSION };\n+            let else_span = Span {\n+                lo: then.span.hi,\n+                hi: else_.span.lo,\n+                ctxt: NO_EXPANSION,\n+            };\n \n             // the snippet should look like \" else \\n    \" with maybe comments anywhere\n             // it\u2019s bad when there is a \u2018\\n\u2019 after the \u201celse\u201d\n@@ -154,9 +166,17 @@ fn check_array(cx: &EarlyContext, expr: &ast::Expr) {\n         for element in array {\n             if let ast::ExprKind::Binary(ref op, ref lhs, _) = element.node {\n                 if !differing_macro_contexts(lhs.span, op.span) {\n-                    let space_span = Span { lo: lhs.span.hi, hi: op.span.lo, ctxt: NO_EXPANSION };\n+                    let space_span = Span {\n+                        lo: lhs.span.hi,\n+                        hi: op.span.lo,\n+                        ctxt: NO_EXPANSION,\n+                    };\n                     if let Some(space_snippet) = snippet_opt(cx, space_span) {\n-                        let lint_span = Span { lo: lhs.span.hi, hi: lhs.span.hi, ctxt: NO_EXPANSION };\n+                        let lint_span = Span {\n+                            lo: lhs.span.hi,\n+                            hi: lhs.span.hi,\n+                            ctxt: NO_EXPANSION,\n+                        };\n                         if space_snippet.contains('\\n') {\n                             span_note_and_lint(cx,\n                                                POSSIBLE_MISSING_COMMA,\n@@ -174,10 +194,14 @@ fn check_array(cx: &EarlyContext, expr: &ast::Expr) {\n \n /// Implementation of the `SUSPICIOUS_ELSE_FORMATTING` lint for consecutive ifs.\n fn check_consecutive_ifs(cx: &EarlyContext, first: &ast::Expr, second: &ast::Expr) {\n-    if !differing_macro_contexts(first.span, second.span) && !in_macro(first.span) &&\n-       unsugar_if(first).is_some() && unsugar_if(second).is_some() {\n+    if !differing_macro_contexts(first.span, second.span) && !in_macro(first.span) && unsugar_if(first).is_some() &&\n+       unsugar_if(second).is_some() {\n         // where the else would be\n-        let else_span = Span { lo: first.span.hi, hi: second.span.lo, ctxt: NO_EXPANSION };\n+        let else_span = Span {\n+            lo: first.span.hi,\n+            hi: second.span.lo,\n+            ctxt: NO_EXPANSION,\n+        };\n \n         if let Some(else_snippet) = snippet_opt(cx, else_span) {\n             if !else_snippet.contains('\\n') {"}, {"sha": "0c43f63d03bf3db189080682fae6b0a627baf90d", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -11,7 +11,6 @@\n #![feature(conservative_impl_trait)]\n \n #![allow(indexing_slicing, shadow_reuse, unknown_lints, missing_docs_in_private_items)]\n-#![allow(needless_lifetimes)]\n \n extern crate syntax;\n extern crate syntax_pos;"}, {"sha": "a691e228a77583aeca24dee6c7afbebb3a7e3a9a", "filename": "clippy_lints/src/lifetimes.rs", "status": "modified", "additions": 89, "deletions": 37, "changes": 126, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flifetimes.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -6,6 +6,7 @@ use rustc::hir::intravisit::{Visitor, walk_ty, walk_ty_param_bound, walk_fn_decl\n use std::collections::{HashSet, HashMap};\n use syntax::codemap::Span;\n use utils::{in_external_macro, span_lint, last_path_segment};\n+use syntax::symbol::keywords;\n \n /// **What it does:** Checks for lifetime annotations which can be removed by\n /// relying on lifetime elision.\n@@ -58,20 +59,24 @@ impl LintPass for LifetimePass {\n \n impl<'a, 'tcx> LateLintPass<'a, 'tcx> for LifetimePass {\n     fn check_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx Item) {\n-        if let ItemFn(ref decl, _, _, _, ref generics, _) = item.node {\n-            check_fn_inner(cx, decl, generics, item.span);\n+        if let ItemFn(ref decl, _, _, _, ref generics, id) = item.node {\n+            check_fn_inner(cx, decl, Some(id), generics, item.span);\n         }\n     }\n \n     fn check_impl_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx ImplItem) {\n-        if let ImplItemKind::Method(ref sig, _) = item.node {\n-            check_fn_inner(cx, &sig.decl, &sig.generics, item.span);\n+        if let ImplItemKind::Method(ref sig, id) = item.node {\n+            check_fn_inner(cx, &sig.decl, Some(id), &sig.generics, item.span);\n         }\n     }\n \n     fn check_trait_item(&mut self, cx: &LateContext<'a, 'tcx>, item: &'tcx TraitItem) {\n-        if let TraitItemKind::Method(ref sig, _) = item.node {\n-            check_fn_inner(cx, &sig.decl, &sig.generics, item.span);\n+        if let TraitItemKind::Method(ref sig, ref body) = item.node {\n+            let body = match *body {\n+                TraitMethod::Required(_) => None,\n+                TraitMethod::Provided(id) => Some(id),\n+            };\n+            check_fn_inner(cx, &sig.decl, body, &sig.generics, item.span);\n         }\n     }\n }\n@@ -84,30 +89,38 @@ enum RefLt {\n     Named(Name),\n }\n \n-fn bound_lifetimes(bound: &TyParamBound) -> HirVec<&Lifetime> {\n-    if let TraitTyParamBound(ref trait_ref, _) = *bound {\n-        trait_ref.trait_ref\n-            .path\n-            .segments\n-            .last()\n-            .expect(\"a path must have at least one segment\")\n-            .parameters\n-            .lifetimes()\n-    } else {\n-        HirVec::new()\n-    }\n-}\n-\n-fn check_fn_inner<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, decl: &'tcx FnDecl, generics: &'tcx Generics, span: Span) {\n+fn check_fn_inner<'a, 'tcx>(\n+    cx: &LateContext<'a, 'tcx>,\n+    decl: &'tcx FnDecl,\n+    body: Option<BodyId>,\n+    generics: &'tcx Generics,\n+    span: Span\n+) {\n     if in_external_macro(cx, span) || has_where_lifetimes(cx, &generics.where_clause) {\n         return;\n     }\n \n-    let bounds_lts = generics.ty_params\n-        .iter()\n-        .flat_map(|typ| typ.bounds.iter().flat_map(bound_lifetimes));\n-\n-    if could_use_elision(cx, decl, &generics.lifetimes, bounds_lts) {\n+    let mut bounds_lts = Vec::new();\n+    for typ in &generics.ty_params {\n+        for bound in &typ.bounds {\n+            if let TraitTyParamBound(ref trait_ref, _) = *bound {\n+                let bounds = trait_ref.trait_ref\n+                    .path\n+                    .segments\n+                    .last()\n+                    .expect(\"a path must have at least one segment\")\n+                    .parameters\n+                    .lifetimes();\n+                for bound in bounds {\n+                    if bound.name != \"'static\" && !bound.is_elided() {\n+                        return;\n+                    }\n+                    bounds_lts.push(bound);\n+                }\n+            }\n+        }\n+    }\n+    if could_use_elision(cx, decl, body, &generics.lifetimes, bounds_lts) {\n         span_lint(cx,\n                   NEEDLESS_LIFETIMES,\n                   span,\n@@ -116,11 +129,12 @@ fn check_fn_inner<'a, 'tcx>(cx: &LateContext<'a, 'tcx>, decl: &'tcx FnDecl, gene\n     report_extra_lifetimes(cx, decl, generics);\n }\n \n-fn could_use_elision<'a, 'tcx: 'a, T: Iterator<Item = &'tcx Lifetime>>(\n+fn could_use_elision<'a, 'tcx: 'a>(\n     cx: &LateContext<'a, 'tcx>,\n     func: &'tcx FnDecl,\n+    body: Option<BodyId>,\n     named_lts: &'tcx [LifetimeDef],\n-    bounds_lts: T\n+    bounds_lts: Vec<&'tcx Lifetime>\n ) -> bool {\n     // There are two scenarios where elision works:\n     // * no output references, all input references have different LT\n@@ -144,8 +158,22 @@ fn could_use_elision<'a, 'tcx: 'a, T: Iterator<Item = &'tcx Lifetime>>(\n         output_visitor.visit_ty(ty);\n     }\n \n-    let input_lts = lts_from_bounds(input_visitor.into_vec(), bounds_lts);\n-    let output_lts = output_visitor.into_vec();\n+    let input_lts = match input_visitor.into_vec() {\n+        Some(lts) => lts_from_bounds(lts, bounds_lts.into_iter()),\n+        None => return false,\n+    };\n+    let output_lts = match output_visitor.into_vec() {\n+        Some(val) => val,\n+        None => return false,\n+    };\n+\n+    if let Some(body_id) = body {\n+        let mut checker = BodyLifetimeChecker { lifetimes_used_in_body: false };\n+        checker.visit_expr(&cx.tcx.hir.body(body_id).value);\n+        if checker.lifetimes_used_in_body {\n+            return false;\n+        }\n+    }\n \n     // check for lifetimes from higher scopes\n     for lt in input_lts.iter().chain(output_lts.iter()) {\n@@ -216,13 +244,15 @@ fn unique_lifetimes(lts: &[RefLt]) -> usize {\n struct RefVisitor<'a, 'tcx: 'a> {\n     cx: &'a LateContext<'a, 'tcx>,\n     lts: Vec<RefLt>,\n+    abort: bool,\n }\n \n impl<'v, 't> RefVisitor<'v, 't> {\n     fn new(cx: &'v LateContext<'v, 't>) -> RefVisitor<'v, 't> {\n         RefVisitor {\n             cx: cx,\n             lts: Vec::new(),\n+            abort: false,\n         }\n     }\n \n@@ -240,8 +270,8 @@ impl<'v, 't> RefVisitor<'v, 't> {\n         }\n     }\n \n-    fn into_vec(self) -> Vec<RefLt> {\n-        self.lts\n+    fn into_vec(self) -> Option<Vec<RefLt>> {\n+        if self.abort { None } else { Some(self.lts) }\n     }\n \n     fn collect_anonymous_lifetimes(&mut self, qpath: &QPath, ty: &Ty) {\n@@ -292,7 +322,7 @@ impl<'a, 'tcx> Visitor<'tcx> for RefVisitor<'a, 'tcx> {\n             },\n             TyTraitObject(ref bounds, ref lt) => {\n                 if !lt.is_elided() {\n-                    self.record(&Some(*lt));\n+                    self.abort = true;\n                 }\n                 for bound in bounds {\n                     self.visit_poly_trait_ref(bound, TraitBoundModifier::None);\n@@ -329,10 +359,15 @@ fn has_where_lifetimes<'a, 'tcx: 'a>(cx: &LateContext<'a, 'tcx>, where_clause: &\n                     walk_ty_param_bound(&mut visitor, bound);\n                 }\n                 // and check that all lifetimes are allowed\n-                for lt in visitor.into_vec() {\n-                    if !allowed_lts.contains(&lt) {\n-                        return true;\n-                    }\n+                match visitor.into_vec() {\n+                    None => return false,\n+                    Some(lts) => {\n+                        for lt in lts {\n+                            if !allowed_lts.contains(&lt) {\n+                                return true;\n+                            }\n+                        }\n+                    },\n                 }\n             },\n             WherePredicate::EqPredicate(ref pred) => {\n@@ -384,3 +419,20 @@ fn report_extra_lifetimes<'a, 'tcx: 'a>(cx: &LateContext<'a, 'tcx>, func: &'tcx\n         span_lint(cx, UNUSED_LIFETIMES, v, \"this lifetime isn't used in the function definition\");\n     }\n }\n+\n+struct BodyLifetimeChecker {\n+    lifetimes_used_in_body: bool,\n+}\n+\n+impl<'tcx> Visitor<'tcx> for BodyLifetimeChecker {\n+    // for lifetimes as parameters of generics\n+    fn visit_lifetime(&mut self, lifetime: &'tcx Lifetime) {\n+        if lifetime.name != keywords::Invalid.name() && lifetime.name != \"'static\" {\n+            self.lifetimes_used_in_body = true;\n+        }\n+    }\n+\n+    fn nested_visit_map<'this>(&'this mut self) -> NestedVisitorMap<'this, 'tcx> {\n+        NestedVisitorMap::None\n+    }\n+}"}, {"sha": "7f0174fce5816494188195487bbdc37ac6dfaa1e", "filename": "clippy_lints/src/loops.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Floops.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -409,8 +409,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for Pass {\n     fn check_stmt(&mut self, cx: &LateContext<'a, 'tcx>, stmt: &'tcx Stmt) {\n         if let StmtSemi(ref expr, _) = stmt.node {\n             if let ExprMethodCall(ref method, _, ref args) = expr.node {\n-                if args.len() == 1 && method.node == \"collect\" &&\n-                   match_trait_method(cx, expr, &paths::ITERATOR) {\n+                if args.len() == 1 && method.node == \"collect\" && match_trait_method(cx, expr, &paths::ITERATOR) {\n                     span_lint(cx,\n                               UNUSED_COLLECT,\n                               expr.span,"}, {"sha": "c2fc932a67856a2c81bf67fc70f0ee92d555f8b3", "filename": "clippy_lints/src/misc.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmisc.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -499,9 +499,7 @@ fn is_used(cx: &LateContext, expr: &Expr) -> bool {\n /// Test whether an expression is in a macro expansion (e.g. something generated by\n /// `#[derive(...)`] or the like).\n fn in_attributes_expansion(expr: &Expr) -> bool {\n-    expr.span.ctxt.outer().expn_info().map_or(false, |info| {\n-        matches!(info.callee.format, ExpnFormat::MacroAttribute(_))\n-    })\n+    expr.span.ctxt.outer().expn_info().map_or(false, |info| matches!(info.callee.format, ExpnFormat::MacroAttribute(_)))\n }\n \n /// Test whether `def` is a variable defined outside a macro."}, {"sha": "c38402ad29c793c6017a84b028a96941da6a5db9", "filename": "clippy_lints/src/missing_doc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fmissing_doc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fmissing_doc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmissing_doc.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -122,6 +122,7 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for MissingDoc {\n             hir::ItemStatic(..) => \"a static\",\n             hir::ItemStruct(..) => \"a struct\",\n             hir::ItemTrait(..) => \"a trait\",\n+            hir::ItemGlobalAsm(..) => \"an assembly blob\",\n             hir::ItemTy(..) => \"a type alias\",\n             hir::ItemUnion(..) => \"a union\",\n             hir::ItemDefaultImpl(..) |"}, {"sha": "70ae9471babfd09765b99d3b3a2a739a7d84933b", "filename": "clippy_lints/src/needless_bool.rs", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fneedless_bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Fneedless_bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fneedless_bool.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -77,27 +77,27 @@ impl<'a, 'tcx> LateLintPass<'a, 'tcx> for NeedlessBool {\n                                    |db| { db.span_suggestion(e.span, \"you can reduce it to\", hint); });\n             };\n             if let ExprBlock(ref then_block) = then_block.node {\n-            match (fetch_bool_block(then_block), fetch_bool_expr(else_expr)) {\n-                (RetBool(true), RetBool(true)) |\n-                (Bool(true), Bool(true)) => {\n-                    span_lint(cx,\n-                              NEEDLESS_BOOL,\n-                              e.span,\n-                              \"this if-then-else expression will always return true\");\n-                },\n-                (RetBool(false), RetBool(false)) |\n-                (Bool(false), Bool(false)) => {\n-                    span_lint(cx,\n-                              NEEDLESS_BOOL,\n-                              e.span,\n-                              \"this if-then-else expression will always return false\");\n-                },\n-                (RetBool(true), RetBool(false)) => reduce(true, false),\n-                (Bool(true), Bool(false)) => reduce(false, false),\n-                (RetBool(false), RetBool(true)) => reduce(true, true),\n-                (Bool(false), Bool(true)) => reduce(false, true),\n-                _ => (),\n-            }\n+                match (fetch_bool_block(then_block), fetch_bool_expr(else_expr)) {\n+                    (RetBool(true), RetBool(true)) |\n+                    (Bool(true), Bool(true)) => {\n+                        span_lint(cx,\n+                                  NEEDLESS_BOOL,\n+                                  e.span,\n+                                  \"this if-then-else expression will always return true\");\n+                    },\n+                    (RetBool(false), RetBool(false)) |\n+                    (Bool(false), Bool(false)) => {\n+                        span_lint(cx,\n+                                  NEEDLESS_BOOL,\n+                                  e.span,\n+                                  \"this if-then-else expression will always return false\");\n+                    },\n+                    (RetBool(true), RetBool(false)) => reduce(true, false),\n+                    (Bool(true), Bool(false)) => reduce(false, false),\n+                    (RetBool(false), RetBool(true)) => reduce(true, true),\n+                    (Bool(false), Bool(true)) => reduce(false, true),\n+                    _ => (),\n+                }\n             } else {\n                 panic!(\"IfExpr 'then' node is not an ExprBlock\");\n             }"}, {"sha": "5820f600434883a74962746d2d596cad202be9ca", "filename": "clippy_lints/src/utils/hir.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Futils%2Fhir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Futils%2Fhir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -97,7 +97,7 @@ impl<'a, 'tcx: 'a> SpanlessEq<'a, 'tcx> {\n             },\n             (&ExprIndex(ref la, ref li), &ExprIndex(ref ra, ref ri)) => self.eq_expr(la, ra) && self.eq_expr(li, ri),\n             (&ExprIf(ref lc, ref lt, ref le), &ExprIf(ref rc, ref rt, ref re)) => {\n-                    self.eq_expr(lc, rc) && self.eq_expr(&**lt, &**rt) && both(le, re, |l, r| self.eq_expr(l, r))\n+                self.eq_expr(lc, rc) && self.eq_expr(&**lt, &**rt) && both(le, re, |l, r| self.eq_expr(l, r))\n             },\n             (&ExprLit(ref l), &ExprLit(ref r)) => l.node == r.node,\n             (&ExprLoop(ref lb, ref ll, ref lls), &ExprLoop(ref rb, ref rl, ref rls)) => {"}, {"sha": "b38cc8a15bed4d65be58476da70e03e0194d08fa", "filename": "clippy_lints/src/utils/inspector.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Futils%2Finspector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Finspector.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -372,6 +372,7 @@ fn print_item(cx: &LateContext, item: &hir::Item) {\n         },\n         hir::ItemMod(..) => println!(\"module\"),\n         hir::ItemForeignMod(ref fm) => println!(\"foreign module with abi: {}\", fm.abi),\n+        hir::ItemGlobalAsm(ref asm) => println!(\"global asm: {:?}\", asm),\n         hir::ItemTy(..) => {\n             println!(\"type alias for {:?}\", cx.tcx.item_type(did));\n         },"}, {"sha": "299404dcee415a5f95890776e5c8dee6b3a504dd", "filename": "clippy_lints/src/utils/mod.rs", "status": "modified", "additions": 10, "deletions": 5, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/clippy_lints%2Fsrc%2Futils%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fmod.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -690,8 +690,10 @@ fn parse_attrs<F: FnMut(u64)>(sess: &Session, attrs: &[ast::Attribute], name: &'\n /// See also `is_direct_expn_of`.\n pub fn is_expn_of(mut span: Span, name: &str) -> Option<Span> {\n     loop {\n-        let span_name_span = span.ctxt.outer()\n-            .expn_info().map(|ei| (ei.callee.name(), ei.call_site));\n+        let span_name_span = span.ctxt\n+            .outer()\n+            .expn_info()\n+            .map(|ei| (ei.callee.name(), ei.call_site));\n \n         match span_name_span {\n             Some((mac_name, new_span)) if mac_name == name => return Some(new_span),\n@@ -709,8 +711,10 @@ pub fn is_expn_of(mut span: Span, name: &str) -> Option<Span> {\n /// `42` is considered expanded from `foo!` and `bar!` by `is_expn_of` but only `bar!` by\n /// `is_direct_expn_of`.\n pub fn is_direct_expn_of(span: Span, name: &str) -> Option<Span> {\n-    let span_name_span = span.ctxt.outer()\n-        .expn_info().map(|ei| (ei.callee.name(), ei.call_site));\n+    let span_name_span = span.ctxt\n+        .outer()\n+        .expn_info()\n+        .map(|ei| (ei.callee.name(), ei.call_site));\n \n     match span_name_span {\n         Some((mac_name, new_span)) if mac_name == name => Some(new_span),\n@@ -900,7 +904,8 @@ pub fn opt_def_id(def: Def) -> Option<DefId> {\n         Def::AssociatedConst(id) |\n         Def::Local(id) |\n         Def::Upvar(id, ..) |\n-        Def::Macro(id, _) => Some(id),\n+        Def::Macro(id, ..) |\n+        Def::GlobalAsm(id) => Some(id),\n \n         Def::Label(..) | Def::PrimTy(..) | Def::SelfTy(..) | Def::Err => None,\n     }"}, {"sha": "a1e18ecc9b49061f4a06f81e39463f55f173d15a", "filename": "src/lib.rs", "status": "modified", "additions": 7, "deletions": 2, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/src%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/src%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -12,8 +12,13 @@ extern crate clippy_lints;\n #[plugin_registrar]\n pub fn plugin_registrar(reg: &mut Registry) {\n     if let Ok(lint_store) = reg.sess.lint_store.try_borrow() {\n-        if lint_store.get_lint_groups().iter().any(|&(s, _, _)| s == \"clippy\") {\n-            reg.sess.struct_warn(\"running cargo clippy on a crate that also imports the clippy plugin\").emit();\n+        if lint_store\n+               .get_lint_groups()\n+               .iter()\n+               .any(|&(s, _, _)| s == \"clippy\") {\n+            reg.sess\n+                .struct_warn(\"running cargo clippy on a crate that also imports the clippy plugin\")\n+                .emit();\n             return;\n         }\n     }"}, {"sha": "1b3dd4f05e0590db84fcfc3b82930a28dab39ab5", "filename": "src/main.rs", "status": "modified", "additions": 69, "deletions": 49, "changes": 118, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/src%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/src%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmain.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -43,9 +43,10 @@ impl<'a> CompilerCalls<'a> for ClippyCompilerCalls {\n         sopts: &config::Options,\n         cfg: &ast::CrateConfig,\n         descriptions: &rustc_errors::registry::Registry,\n-        output: ErrorOutputType\n+        output: ErrorOutputType,\n     ) -> Compilation {\n-        self.default.early_callback(matches, sopts, cfg, descriptions, output)\n+        self.default\n+            .early_callback(matches, sopts, cfg, descriptions, output)\n     }\n     fn no_input(\n         &mut self,\n@@ -54,19 +55,21 @@ impl<'a> CompilerCalls<'a> for ClippyCompilerCalls {\n         cfg: &ast::CrateConfig,\n         odir: &Option<PathBuf>,\n         ofile: &Option<PathBuf>,\n-        descriptions: &rustc_errors::registry::Registry\n+        descriptions: &rustc_errors::registry::Registry,\n     ) -> Option<(Input, Option<PathBuf>)> {\n-        self.default.no_input(matches, sopts, cfg, odir, ofile, descriptions)\n+        self.default\n+            .no_input(matches, sopts, cfg, odir, ofile, descriptions)\n     }\n     fn late_callback(\n         &mut self,\n         matches: &getopts::Matches,\n         sess: &Session,\n         input: &Input,\n         odir: &Option<PathBuf>,\n-        ofile: &Option<PathBuf>\n+        ofile: &Option<PathBuf>,\n     ) -> Compilation {\n-        self.default.late_callback(matches, sess, input, odir, ofile)\n+        self.default\n+            .late_callback(matches, sess, input, odir, ofile)\n     }\n     fn build_controller(&mut self, sess: &Session, matches: &getopts::Matches) -> driver::CompileController<'a> {\n         let mut control = self.default.build_controller(sess, matches);\n@@ -76,20 +79,23 @@ impl<'a> CompilerCalls<'a> for ClippyCompilerCalls {\n             control.after_parse.callback = Box::new(move |state| {\n                 {\n                     let mut registry = rustc_plugin::registry::Registry::new(state.session,\n-                                                                             state.krate\n+                                                                             state\n+                                                                                 .krate\n                                                                                  .as_ref()\n                                                                                  .expect(\"at this compilation stage \\\n                                                                                           the krate must be parsed\")\n                                                                                  .span);\n                     registry.args_hidden = Some(Vec::new());\n                     clippy_lints::register_plugins(&mut registry);\n \n-                    let rustc_plugin::registry::Registry { early_lint_passes,\n-                                                           late_lint_passes,\n-                                                           lint_groups,\n-                                                           llvm_passes,\n-                                                           attributes,\n-                                                           .. } = registry;\n+                    let rustc_plugin::registry::Registry {\n+                        early_lint_passes,\n+                        late_lint_passes,\n+                        lint_groups,\n+                        llvm_passes,\n+                        attributes,\n+                        ..\n+                    } = registry;\n                     let sess = &state.session;\n                     let mut ls = sess.lint_store.borrow_mut();\n                     for pass in early_lint_passes {\n@@ -172,29 +178,35 @@ pub fn main() {\n     if let Some(\"clippy\") = std::env::args().nth(1).as_ref().map(AsRef::as_ref) {\n         // this arm is executed on the initial call to `cargo clippy`\n \n-        let manifest_path_arg = std::env::args().skip(2).find(|val| val.starts_with(\"--manifest-path=\"));\n+        let manifest_path_arg = std::env::args()\n+            .skip(2)\n+            .find(|val| val.starts_with(\"--manifest-path=\"));\n \n-        let mut metadata = if let Ok(metadata) = cargo_metadata::metadata(manifest_path_arg.as_ref()\n-            .map(AsRef::as_ref)) {\n-            metadata\n-        } else {\n-            let _ = io::stderr().write_fmt(format_args!(\"error: Could not obtain cargo metadata.\\n\"));\n-            process::exit(101);\n-        };\n+        let mut metadata =\n+            if let Ok(metadata) = cargo_metadata::metadata(manifest_path_arg.as_ref().map(AsRef::as_ref)) {\n+                metadata\n+            } else {\n+                let _ = io::stderr().write_fmt(format_args!(\"error: Could not obtain cargo metadata.\\n\"));\n+                process::exit(101);\n+            };\n \n         let manifest_path = manifest_path_arg.map(|arg| PathBuf::from(Path::new(&arg[\"--manifest-path=\".len()..])));\n \n         let current_dir = std::env::current_dir();\n \n-        let package_index = metadata.packages\n+        let package_index = metadata\n+            .packages\n             .iter()\n             .position(|package| {\n                 let package_manifest_path = Path::new(&package.manifest_path);\n                 if let Some(ref manifest_path) = manifest_path {\n                     package_manifest_path == manifest_path\n                 } else {\n-                    let current_dir = current_dir.as_ref().expect(\"could not read current directory\");\n-                    let package_manifest_directory = package_manifest_path.parent()\n+                    let current_dir = current_dir\n+                        .as_ref()\n+                        .expect(\"could not read current directory\");\n+                    let package_manifest_directory = package_manifest_path\n+                        .parent()\n                         .expect(\"could not find parent directory of package manifest\");\n                     package_manifest_directory == current_dir\n                 }\n@@ -209,7 +221,9 @@ pub fn main() {\n                         std::process::exit(code);\n                     }\n                 } else if [\"bin\", \"example\", \"test\", \"bench\"].contains(&&**first) {\n-                    if let Err(code) = process(vec![format!(\"--{}\", first), target.name].into_iter().chain(args)) {\n+                    if let Err(code) = process(vec![format!(\"--{}\", first), target.name]\n+                                                   .into_iter()\n+                                                   .chain(args)) {\n                         std::process::exit(code);\n                     }\n                 }\n@@ -218,7 +232,8 @@ pub fn main() {\n             }\n         }\n     } else {\n-        // this arm is executed when cargo-clippy runs `cargo rustc` with the `RUSTC` env var set to itself\n+        // this arm is executed when cargo-clippy runs `cargo rustc` with the `RUSTC`\n+        // env var set to itself\n \n         let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n         let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n@@ -240,31 +255,36 @@ pub fn main() {\n         };\n \n         rustc_driver::in_rustc_thread(|| {\n-                // this conditional check for the --sysroot flag is there so users can call `cargo-clippy` directly\n-                // without having to pass --sysroot or anything\n-                let mut args: Vec<String> = if env::args().any(|s| s == \"--sysroot\") {\n-                    env::args().collect()\n-                } else {\n-                    env::args().chain(Some(\"--sysroot\".to_owned())).chain(Some(sys_root)).collect()\n-                };\n-\n-                // this check ensures that dependencies are built but not linted and the final crate is\n-                // linted but not built\n-                let clippy_enabled = env::args().any(|s| s == \"-Zno-trans\");\n+            // this conditional check for the --sysroot flag is there so users can call\n+            // `cargo-clippy` directly\n+            // without having to pass --sysroot or anything\n+            let mut args: Vec<String> = if env::args().any(|s| s == \"--sysroot\") {\n+                env::args().collect()\n+            } else {\n+                env::args()\n+                    .chain(Some(\"--sysroot\".to_owned()))\n+                    .chain(Some(sys_root))\n+                    .collect()\n+            };\n+\n+            // this check ensures that dependencies are built but not linted and the final\n+            // crate is\n+            // linted but not built\n+            let clippy_enabled = env::args().any(|s| s == \"-Zno-trans\");\n+\n+            if clippy_enabled {\n+                args.extend_from_slice(&[\"--cfg\".to_owned(), r#\"feature=\"cargo-clippy\"\"#.to_owned()]);\n+            }\n \n-                if clippy_enabled {\n-                    args.extend_from_slice(&[\"--cfg\".to_owned(), r#\"feature=\"cargo-clippy\"\"#.to_owned()]);\n+            let mut ccc = ClippyCompilerCalls::new(clippy_enabled);\n+            let (result, _) = rustc_driver::run_compiler(&args, &mut ccc, None, None);\n+            if let Err(err_count) = result {\n+                if err_count > 0 {\n+                    std::process::exit(1);\n                 }\n-\n-                let mut ccc = ClippyCompilerCalls::new(clippy_enabled);\n-                let (result, _) = rustc_driver::run_compiler(&args, &mut ccc, None, None);\n-                if let Err(err_count) = result {\n-                    if err_count > 0 {\n-                        std::process::exit(1);\n-                    }\n-                }\n-            })\n-            .expect(\"rustc_thread failed\");\n+            }\n+        })\n+                .expect(\"rustc_thread failed\");\n     }\n }\n "}, {"sha": "c81b32c54bcedfe67d8a236e44cb1d1d25906878", "filename": "tests/cc_seme.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fcc_seme.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fcc_seme.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcc_seme.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -14,14 +14,14 @@ struct Test {\n \n fn main() {\n     use Baz::*;\n-    let x = Test {\n-        t: Some(0),\n-        b: One,\n-    };\n+    let x = Test { t: Some(0), b: One };\n \n     match x {\n         Test { t: Some(_), b: One } => unreachable!(),\n-        Test { t: Some(42), b: Two } => unreachable!(),\n+        Test {\n+            t: Some(42),\n+            b: Two,\n+        } => unreachable!(),\n         Test { t: None, .. } => unreachable!(),\n         Test { .. } => unreachable!(),\n     }"}, {"sha": "ade8db2aa277d0cd5dae7f513ab2473c704f072d", "filename": "tests/matches.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fmatches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fmatches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmatches.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -20,9 +20,13 @@ fn test_overlapping() {\n     assert_eq!(None, overlapping(&[sp(1, Bound::Included(4))]));\n     assert_eq!(None, overlapping(&[sp(1, Bound::Included(4)), sp(5, Bound::Included(6))]));\n     assert_eq!(None,\n-               overlapping(&[sp(1, Bound::Included(4)), sp(5, Bound::Included(6)), sp(10, Bound::Included(11))]));\n+               overlapping(&[sp(1, Bound::Included(4)),\n+                             sp(5, Bound::Included(6)),\n+                             sp(10, Bound::Included(11))]));\n     assert_eq!(Some((&sp(1, Bound::Included(4)), &sp(3, Bound::Included(6)))),\n                overlapping(&[sp(1, Bound::Included(4)), sp(3, Bound::Included(6))]));\n     assert_eq!(Some((&sp(5, Bound::Included(6)), &sp(6, Bound::Included(11)))),\n-               overlapping(&[sp(1, Bound::Included(4)), sp(5, Bound::Included(6)), sp(6, Bound::Included(11))]));\n+               overlapping(&[sp(1, Bound::Included(4)),\n+                             sp(5, Bound::Included(6)),\n+                             sp(6, Bound::Included(11))]));\n }"}, {"sha": "c94ba02698b3e7469b15214cc3c7a91261629136", "filename": "tests/ui/arithmetic.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Farithmetic.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Farithmetic.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Farithmetic.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -19,10 +19,9 @@ error: integer arithmetic detected\n error: integer arithmetic detected\n   --> $DIR/arithmetic.rs:10:5\n    |\n-10 |       1 %\n-   |  _____^ starting here...\n+10 | /     1 %\n 11 | |     i / 2; // no error, this is part of the expression in the preceding line\n-   | |_________^ ...ending here\n+   | |_________^\n \n error: integer arithmetic detected\n   --> $DIR/arithmetic.rs:12:5"}, {"sha": "263193491b7ad18402bbc8a4737674663697c670", "filename": "tests/ui/block_in_if_condition.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fblock_in_if_condition.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fblock_in_if_condition.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fblock_in_if_condition.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -2,11 +2,11 @@ error: in an 'if' condition, avoid complex blocks or closures with blocks; inste\n   --> $DIR/block_in_if_condition.rs:30:8\n    |\n 30 |       if {\n-   |  ________^ starting here...\n+   |  ________^\n 31 | |         let x = 3;\n 32 | |         x == 3\n 33 | |     } {\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n note: lint level defined here\n   --> $DIR/block_in_if_condition.rs:5:9"}, {"sha": "e638727e902ec17ecd9ee3887ed1698de79d8d9f", "filename": "tests/ui/collapsible_if.stderr", "status": "modified", "additions": 26, "deletions": 32, "changes": 58, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fcollapsible_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fcollapsible_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcollapsible_if.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,15 +1,14 @@\n error: this if statement can be collapsed\n   --> $DIR/collapsible_if.rs:8:5\n    |\n-8  |       if x == \"hello\" {\n-   |  _____^ starting here...\n+8  | /     if x == \"hello\" {\n 9  | |\n 10 | |\n 11 | |\n ...  |\n 14 | |         }\n 15 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n note: lint level defined here\n   --> $DIR/collapsible_if.rs:4:8\n@@ -24,15 +23,14 @@ help: try\n error: this if statement can be collapsed\n   --> $DIR/collapsible_if.rs:17:5\n    |\n-17 |       if x == \"hello\" || x == \"world\" {\n-   |  _____^ starting here...\n+17 | /     if x == \"hello\" || x == \"world\" {\n 18 | |\n 19 | |\n 20 | |\n ...  |\n 23 | |         }\n 24 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: try\n    |     if (x == \"hello\" || x == \"world\") && (y == \"world\" || y == \"hello\") {\n@@ -42,15 +40,14 @@ help: try\n error: this if statement can be collapsed\n   --> $DIR/collapsible_if.rs:26:5\n    |\n-26 |       if x == \"hello\" && x == \"world\" {\n-   |  _____^ starting here...\n+26 | /     if x == \"hello\" && x == \"world\" {\n 27 | |\n 28 | |\n 29 | |\n ...  |\n 32 | |         }\n 33 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: try\n    |     if x == \"hello\" && x == \"world\" && (y == \"world\" || y == \"hello\") {\n@@ -60,15 +57,14 @@ help: try\n error: this if statement can be collapsed\n   --> $DIR/collapsible_if.rs:35:5\n    |\n-35 |       if x == \"hello\" || x == \"world\" {\n-   |  _____^ starting here...\n+35 | /     if x == \"hello\" || x == \"world\" {\n 36 | |\n 37 | |\n 38 | |\n ...  |\n 41 | |         }\n 42 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: try\n    |     if (x == \"hello\" || x == \"world\") && y == \"world\" && y == \"hello\" {\n@@ -78,15 +74,14 @@ help: try\n error: this if statement can be collapsed\n   --> $DIR/collapsible_if.rs:44:5\n    |\n-44 |       if x == \"hello\" && x == \"world\" {\n-   |  _____^ starting here...\n+44 | /     if x == \"hello\" && x == \"world\" {\n 45 | |\n 46 | |\n 47 | |\n ...  |\n 50 | |         }\n 51 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: try\n    |     if x == \"hello\" && x == \"world\" && y == \"world\" && y == \"hello\" {\n@@ -96,15 +91,14 @@ help: try\n error: this if statement can be collapsed\n   --> $DIR/collapsible_if.rs:53:5\n    |\n-53 |       if 42 == 1337 {\n-   |  _____^ starting here...\n+53 | /     if 42 == 1337 {\n 54 | |\n 55 | |\n 56 | |\n ...  |\n 59 | |         }\n 60 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: try\n    |     if 42 == 1337 && 'a' != 'A' {\n@@ -115,14 +109,14 @@ error: this `else { if .. }` block can be collapsed\n   --> $DIR/collapsible_if.rs:65:12\n    |\n 65 |       } else {\n-   |  ____________^ starting here...\n+   |  ____________^\n 66 | |\n 67 | |\n 68 | |\n ...  |\n 71 | |         }\n 72 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: try\n    |     } else if y == \"world\" {\n@@ -133,14 +127,14 @@ error: this `else { if .. }` block can be collapsed\n   --> $DIR/collapsible_if.rs:76:12\n    |\n 76 |       } else {\n-   |  ____________^ starting here...\n+   |  ____________^\n 77 | |\n 78 | |\n 79 | |\n ...  |\n 82 | |         }\n 83 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: try\n    |     } else if let Some(42) = Some(42) {\n@@ -151,14 +145,14 @@ error: this `else { if .. }` block can be collapsed\n   --> $DIR/collapsible_if.rs:87:12\n    |\n 87 |       } else {\n-   |  ____________^ starting here...\n+   |  ____________^\n 88 | |\n 89 | |\n 90 | |\n ...  |\n 96 | |         }\n 97 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: try\n    |     } else if y == \"world\" {\n@@ -172,14 +166,14 @@ error: this `else { if .. }` block can be collapsed\n    --> $DIR/collapsible_if.rs:101:12\n     |\n 101 |       } else {\n-    |  ____________^ starting here...\n+    |  ____________^\n 102 | |\n 103 | |\n 104 | |\n ...   |\n 110 | |         }\n 111 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: try\n     |     } else if let Some(42) = Some(42) {\n@@ -193,14 +187,14 @@ error: this `else { if .. }` block can be collapsed\n    --> $DIR/collapsible_if.rs:115:12\n     |\n 115 |       } else {\n-    |  ____________^ starting here...\n+    |  ____________^\n 116 | |\n 117 | |\n 118 | |\n ...   |\n 124 | |         }\n 125 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: try\n     |     } else if let Some(42) = Some(42) {\n@@ -214,14 +208,14 @@ error: this `else { if .. }` block can be collapsed\n    --> $DIR/collapsible_if.rs:129:12\n     |\n 129 |       } else {\n-    |  ____________^ starting here...\n+    |  ____________^\n 130 | |\n 131 | |\n 132 | |\n ...   |\n 138 | |         }\n 139 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: try\n     |     } else if x == \"hello\" {\n@@ -235,14 +229,14 @@ error: this `else { if .. }` block can be collapsed\n    --> $DIR/collapsible_if.rs:143:12\n     |\n 143 |       } else {\n-    |  ____________^ starting here...\n+    |  ____________^\n 144 | |\n 145 | |\n 146 | |\n ...   |\n 152 | |         }\n 153 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: try\n     |     } else if let Some(42) = Some(42) {"}, {"sha": "f0dd409e2b21e592bdb62738e759d4f70cda1b78", "filename": "tests/ui/copies.stderr", "status": "modified", "additions": 54, "deletions": 54, "changes": 108, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fcopies.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fcopies.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcopies.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -42,14 +42,14 @@ error: this `if` has identical blocks\n   --> $DIR/copies.rs:40:10\n    |\n 40 |       else {\n-   |  __________^ starting here...\n+   |  __________^\n 41 | |         Foo { bar: 42 };\n 42 | |         0..10;\n 43 | |         ..;\n ...  |\n 47 | |         foo();\n 48 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n note: lint level defined here\n   --> $DIR/copies.rs:27:8\n@@ -60,27 +60,27 @@ note: same as this\n   --> $DIR/copies.rs:30:13\n    |\n 30 |       if true {\n-   |  _____________^ starting here...\n+   |  _____________^\n 31 | |\n 32 | |         Foo { bar: 42 };\n 33 | |         0..10;\n ...  |\n 38 | |         foo();\n 39 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n \n error: this `match` has identical arm bodies\n   --> $DIR/copies.rs:91:14\n    |\n 91 |           _ => {\n-   |  ______________^ starting here...\n+   |  ______________^\n 92 | |             foo();\n 93 | |             let mut a = 42 + [23].len() as i32;\n 94 | |             if true {\n ...  |\n 98 | |             a\n 99 | |         }\n-   | |_________^ ...ending here\n+   | |_________^\n    |\n note: lint level defined here\n   --> $DIR/copies.rs:28:8\n@@ -91,26 +91,26 @@ note: same as this\n   --> $DIR/copies.rs:80:15\n    |\n 80 |           42 => {\n-   |  _______________^ starting here...\n+   |  _______________^\n 81 | |\n 82 | |\n 83 | |             foo();\n ...  |\n 89 | |             a\n 90 | |         }\n-   | |_________^ ...ending here\n+   | |_________^\n note: `42` has the same arm body as the `_` wildcard, consider removing it`\n   --> $DIR/copies.rs:80:15\n    |\n 80 |           42 => {\n-   |  _______________^ starting here...\n+   |  _______________^\n 81 | |\n 82 | |\n 83 | |             foo();\n ...  |\n 89 | |             a\n 90 | |         }\n-   | |_________^ ...ending here\n+   | |_________^\n \n error: this `match` has identical arm bodies\n    --> $DIR/copies.rs:107:14\n@@ -133,136 +133,136 @@ error: this `if` has identical blocks\n    --> $DIR/copies.rs:118:10\n     |\n 118 |       else {\n-    |  __________^ starting here...\n+    |  __________^\n 119 | |         42\n 120 | |     };\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n note: same as this\n    --> $DIR/copies.rs:114:21\n     |\n 114 |       let _ = if true {\n-    |  _____________________^ starting here...\n+    |  _____________________^\n 115 | |\n 116 | |         42\n 117 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: this `if` has identical blocks\n    --> $DIR/copies.rs:133:10\n     |\n 133 |       else {\n-    |  __________^ starting here...\n+    |  __________^\n 134 | |         for _ in &[42] {\n 135 | |             let foo: &Option<_> = &Some::<u8>(42);\n 136 | |             if true {\n ...   |\n 141 | |         }\n 142 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n note: same as this\n    --> $DIR/copies.rs:122:13\n     |\n 122 |       if true {\n-    |  _____________^ starting here...\n+    |  _____________^\n 123 | |\n 124 | |         for _ in &[42] {\n 125 | |             let foo: &Option<_> = &Some::<u8>(42);\n ...   |\n 131 | |         }\n 132 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: this `if` has identical blocks\n    --> $DIR/copies.rs:156:10\n     |\n 156 |       else {\n-    |  __________^ starting here...\n+    |  __________^\n 157 | |         let bar = if true {\n 158 | |             42\n 159 | |         }\n ...   |\n 165 | |         bar + 1;\n 166 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n note: same as this\n    --> $DIR/copies.rs:144:13\n     |\n 144 |       if true {\n-    |  _____________^ starting here...\n+    |  _____________^\n 145 | |\n 146 | |         let bar = if true {\n 147 | |             42\n ...   |\n 154 | |         bar + 1;\n 155 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: this `if` has identical blocks\n    --> $DIR/copies.rs:180:19\n     |\n 180 |       else if foo() {\n-    |  ___________________^ starting here...\n+    |  ___________________^\n 181 | |         let _ = match 42 {\n 182 | |             42 => 1,\n 183 | |             a if a > 0 => 2,\n ...   |\n 186 | |         };\n 187 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n note: same as this\n    --> $DIR/copies.rs:168:13\n     |\n 168 |       if true {\n-    |  _____________^ starting here...\n+    |  _____________^\n 169 | |\n 170 | |         let _ = match 42 {\n 171 | |             42 => 1,\n ...   |\n 175 | |         };\n 176 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: this `if` has identical blocks\n    --> $DIR/copies.rs:193:10\n     |\n 193 |       else {\n-    |  __________^ starting here...\n+    |  __________^\n 194 | |         if let Some(a) = Some(42) {}\n 195 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n note: same as this\n    --> $DIR/copies.rs:189:13\n     |\n 189 |       if true {\n-    |  _____________^ starting here...\n+    |  _____________^\n 190 | |\n 191 | |         if let Some(a) = Some(42) {}\n 192 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: this `if` has identical blocks\n    --> $DIR/copies.rs:201:10\n     |\n 201 |       else {\n-    |  __________^ starting here...\n+    |  __________^\n 202 | |         if let (1, .., 3) = (1, 2, 3) {}\n 203 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n note: same as this\n    --> $DIR/copies.rs:197:13\n     |\n 197 |       if true {\n-    |  _____________^ starting here...\n+    |  _____________^\n 198 | |\n 199 | |         if let (1, .., 3) = (1, 2, 3) {}\n 200 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: this `match` has identical arm bodies\n    --> $DIR/copies.rs:258:15\n@@ -353,98 +353,98 @@ error: this `if` has identical blocks\n    --> $DIR/copies.rs:313:12\n     |\n 313 |       } else {\n-    |  ____________^ starting here...\n+    |  ____________^\n 314 | |         0.0\n 315 | |     };\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n note: same as this\n    --> $DIR/copies.rs:310:21\n     |\n 310 |       let _ = if true {\n-    |  _____________________^ starting here...\n+    |  _____________________^\n 311 | |\n 312 | |         0.0\n 313 | |     } else {\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: this `if` has identical blocks\n    --> $DIR/copies.rs:320:12\n     |\n 320 |       } else {\n-    |  ____________^ starting here...\n+    |  ____________^\n 321 | |         -0.0\n 322 | |     };\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n note: same as this\n    --> $DIR/copies.rs:317:21\n     |\n 317 |       let _ = if true {\n-    |  _____________________^ starting here...\n+    |  _____________________^\n 318 | |\n 319 | |         -0.0\n 320 | |     } else {\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: this `if` has identical blocks\n    --> $DIR/copies.rs:341:12\n     |\n 341 |       } else {\n-    |  ____________^ starting here...\n+    |  ____________^\n 342 | |         std::f32::NAN\n 343 | |     };\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n note: same as this\n    --> $DIR/copies.rs:338:21\n     |\n 338 |       let _ = if true {\n-    |  _____________________^ starting here...\n+    |  _____________________^\n 339 | |\n 340 | |         std::f32::NAN\n 341 | |     } else {\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: this `if` has identical blocks\n    --> $DIR/copies.rs:360:10\n     |\n 360 |       else {\n-    |  __________^ starting here...\n+    |  __________^\n 361 | |         try!(Ok(\"foo\"));\n 362 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n note: same as this\n    --> $DIR/copies.rs:356:13\n     |\n 356 |       if true {\n-    |  _____________^ starting here...\n+    |  _____________^\n 357 | |\n 358 | |         try!(Ok(\"foo\"));\n 359 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: this `if` has identical blocks\n    --> $DIR/copies.rs:373:10\n     |\n 373 |       else {\n-    |  __________^ starting here...\n+    |  __________^\n 374 | |         let foo = \"\";\n 375 | |         return Ok(&foo[0..]);\n 376 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n note: same as this\n    --> $DIR/copies.rs:364:13\n     |\n 364 |       if true {\n-    |  _____________^ starting here...\n+    |  _____________^\n 365 | |\n 366 | |         let foo = \"\";\n 367 | |         return Ok(&foo[0..]);\n 368 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: this `if` has the same condition as a previous if\n    --> $DIR/copies.rs:388:13"}, {"sha": "fb42e14d5b0c99454eafedd47174c7a5ea5f3596", "filename": "tests/ui/cyclomatic_complexity.stderr", "status": "modified", "additions": 40, "deletions": 59, "changes": 99, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fcyclomatic_complexity.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fcyclomatic_complexity.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,15 +1,14 @@\n error: the function has a cyclomatic complexity of 28\n   --> $DIR/cyclomatic_complexity.rs:7:1\n    |\n-7  |   fn main() {\n-   |  _^ starting here...\n+7  | / fn main() {\n 8  | |     if true {\n 9  | |         println!(\"a\");\n 10 | |     }\n ...  |\n 88 | |     }\n 89 | | }\n-   | |_^ ...ending here\n+   | |_^\n    |\n note: lint level defined here\n   --> $DIR/cyclomatic_complexity.rs:4:9\n@@ -21,274 +20,256 @@ note: lint level defined here\n error: the function has a cyclomatic complexity of 7\n    --> $DIR/cyclomatic_complexity.rs:92:1\n     |\n-92  |   fn kaboom() {\n-    |  _^ starting here...\n+92  | / fn kaboom() {\n 93  | |     let n = 0;\n 94  | |     'a: for i in 0..20 {\n 95  | |         'b: for j in i..20 {\n ...   |\n 110 | |     }\n 111 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n    --> $DIR/cyclomatic_complexity.rs:138:1\n     |\n-138 |   fn lots_of_short_circuits() -> bool {\n-    |  _^ starting here...\n+138 | / fn lots_of_short_circuits() -> bool {\n 139 | |     true && false && true && false && true && false && true\n 140 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n    --> $DIR/cyclomatic_complexity.rs:143:1\n     |\n-143 |   fn lots_of_short_circuits2() -> bool {\n-    |  _^ starting here...\n+143 | / fn lots_of_short_circuits2() -> bool {\n 144 | |     true || false || true || false || true || false || true\n 145 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n    --> $DIR/cyclomatic_complexity.rs:148:1\n     |\n-148 |   fn baa() {\n-    |  _^ starting here...\n+148 | / fn baa() {\n 149 | |     let x = || match 99 {\n 150 | |         0 => 0,\n 151 | |         1 => 1,\n ...   |\n 162 | |     }\n 163 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n    --> $DIR/cyclomatic_complexity.rs:149:13\n     |\n 149 |       let x = || match 99 {\n-    |  _____________^ starting here...\n+    |  _____________^\n 150 | |         0 => 0,\n 151 | |         1 => 1,\n 152 | |         2 => 2,\n ...   |\n 156 | |         _ => 42,\n 157 | |     };\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n    --> $DIR/cyclomatic_complexity.rs:166:1\n     |\n-166 |   fn bar() {\n-    |  _^ starting here...\n+166 | / fn bar() {\n 167 | |     match 99 {\n 168 | |         0 => println!(\"hi\"),\n 169 | |         _ => println!(\"bye\"),\n 170 | |     }\n 171 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n    --> $DIR/cyclomatic_complexity.rs:185:1\n     |\n-185 |   fn barr() {\n-    |  _^ starting here...\n+185 | / fn barr() {\n 186 | |     match 99 {\n 187 | |         0 => println!(\"hi\"),\n 188 | |         1 => println!(\"bla\"),\n ...   |\n 191 | |     }\n 192 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 3\n    --> $DIR/cyclomatic_complexity.rs:195:1\n     |\n-195 |   fn barr2() {\n-    |  _^ starting here...\n+195 | / fn barr2() {\n 196 | |     match 99 {\n 197 | |         0 => println!(\"hi\"),\n 198 | |         1 => println!(\"bla\"),\n ...   |\n 207 | |     }\n 208 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n    --> $DIR/cyclomatic_complexity.rs:211:1\n     |\n-211 |   fn barrr() {\n-    |  _^ starting here...\n+211 | / fn barrr() {\n 212 | |     match 99 {\n 213 | |         0 => println!(\"hi\"),\n 214 | |         1 => panic!(\"bla\"),\n ...   |\n 217 | |     }\n 218 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 3\n    --> $DIR/cyclomatic_complexity.rs:221:1\n     |\n-221 |   fn barrr2() {\n-    |  _^ starting here...\n+221 | / fn barrr2() {\n 222 | |     match 99 {\n 223 | |         0 => println!(\"hi\"),\n 224 | |         1 => panic!(\"bla\"),\n ...   |\n 233 | |     }\n 234 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n    --> $DIR/cyclomatic_complexity.rs:237:1\n     |\n-237 |   fn barrrr() {\n-    |  _^ starting here...\n+237 | / fn barrrr() {\n 238 | |     match 99 {\n 239 | |         0 => println!(\"hi\"),\n 240 | |         1 => println!(\"bla\"),\n ...   |\n 243 | |     }\n 244 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 3\n    --> $DIR/cyclomatic_complexity.rs:247:1\n     |\n-247 |   fn barrrr2() {\n-    |  _^ starting here...\n+247 | / fn barrrr2() {\n 248 | |     match 99 {\n 249 | |         0 => println!(\"hi\"),\n 250 | |         1 => println!(\"bla\"),\n ...   |\n 259 | |     }\n 260 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 2\n    --> $DIR/cyclomatic_complexity.rs:263:1\n     |\n-263 |   fn cake() {\n-    |  _^ starting here...\n+263 | / fn cake() {\n 264 | |     if 4 == 5 {\n 265 | |         println!(\"yea\");\n 266 | |     } else {\n ...   |\n 269 | |     println!(\"whee\");\n 270 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 4\n    --> $DIR/cyclomatic_complexity.rs:274:1\n     |\n-274 |   pub fn read_file(input_path: &str) -> String {\n-    |  _^ starting here...\n+274 | / pub fn read_file(input_path: &str) -> String {\n 275 | |     use std::fs::File;\n 276 | |     use std::io::{Read, Write};\n 277 | |     use std::path::Path;\n ...   |\n 299 | |     }\n 300 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n    --> $DIR/cyclomatic_complexity.rs:305:1\n     |\n-305 |   fn void(void: Void) {\n-    |  _^ starting here...\n+305 | / fn void(void: Void) {\n 306 | |     if true {\n 307 | |         match void {\n 308 | |         }\n 309 | |     }\n 310 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n    --> $DIR/cyclomatic_complexity.rs:319:1\n     |\n-319 |   fn try() -> Result<i32, &'static str> {\n-    |  _^ starting here...\n+319 | / fn try() -> Result<i32, &'static str> {\n 320 | |     match 5 {\n 321 | |         5 => Ok(5),\n 322 | |         _ => return Err(\"bla\"),\n 323 | |     }\n 324 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n    --> $DIR/cyclomatic_complexity.rs:327:1\n     |\n-327 |   fn try_again() -> Result<i32, &'static str> {\n-    |  _^ starting here...\n+327 | / fn try_again() -> Result<i32, &'static str> {\n 328 | |     let _ = try!(Ok(42));\n 329 | |     let _ = try!(Ok(43));\n 330 | |     let _ = try!(Ok(44));\n ...   |\n 339 | |     }\n 340 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 1\n    --> $DIR/cyclomatic_complexity.rs:343:1\n     |\n-343 |   fn early() -> Result<i32, &'static str> {\n-    |  _^ starting here...\n+343 | / fn early() -> Result<i32, &'static str> {\n 344 | |     return Ok(5);\n 345 | |     return Ok(5);\n 346 | |     return Ok(5);\n ...   |\n 352 | |     return Ok(5);\n 353 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n \n error: the function has a cyclomatic complexity of 8\n    --> $DIR/cyclomatic_complexity.rs:356:1\n     |\n-356 |   fn early_ret() -> i32 {\n-    |  _^ starting here...\n+356 | / fn early_ret() -> i32 {\n 357 | |     let a = if true { 42 } else { return 0; };\n 358 | |     let a = if a < 99 { 42 } else { return 0; };\n 359 | |     let a = if a < 99 { 42 } else { return 0; };\n ...   |\n 372 | |     }\n 373 | | }\n-    | |_^ ...ending here\n+    | |_^\n     |\n     = help: you could split it up into multiple smaller functions\n "}, {"sha": "5086d5117539a74458241d0f16874782c2d5cb4d", "filename": "tests/ui/cyclomatic_complexity_attr_used.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcyclomatic_complexity_attr_used.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,15 +1,14 @@\n error: the function has a cyclomatic complexity of 3\n   --> $DIR/cyclomatic_complexity_attr_used.rs:11:1\n    |\n-11 |   fn kaboom() {\n-   |  _^ starting here...\n+11 | / fn kaboom() {\n 12 | |     if 42 == 43 {\n 13 | |         panic!();\n 14 | |     } else if \"cake\" == \"lie\" {\n 15 | |         println!(\"what?\");\n 16 | |     }\n 17 | | }\n-   | |_^ ...ending here\n+   | |_^\n    |\n note: lint level defined here\n   --> $DIR/cyclomatic_complexity_attr_used.rs:3:9"}, {"sha": "290ba68c5b3412d215641776ec13905655117f34", "filename": "tests/ui/derive.stderr", "status": "modified", "additions": 14, "deletions": 21, "changes": 35, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fderive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fderive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fderive.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -13,11 +13,10 @@ note: lint level defined here\n note: `PartialEq` implemented here\n   --> $DIR/derive.rs:22:1\n    |\n-22 |   impl PartialEq for Bar {\n-   |  _^ starting here...\n+22 | / impl PartialEq for Bar {\n 23 | |     fn eq(&self, _: &Bar) -> bool { true }\n 24 | | }\n-   | |_^ ...ending here\n+   | |_^\n \n error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n   --> $DIR/derive.rs:26:10\n@@ -29,21 +28,19 @@ error: you are deriving `Hash` but have implemented `PartialEq` explicitly\n note: `PartialEq` implemented here\n   --> $DIR/derive.rs:30:1\n    |\n-30 |   impl PartialEq<Baz> for Baz {\n-   |  _^ starting here...\n+30 | / impl PartialEq<Baz> for Baz {\n 31 | |     fn eq(&self, _: &Baz) -> bool { true }\n 32 | | }\n-   | |_^ ...ending here\n+   | |_^\n \n error: you are implementing `Hash` explicitly but have derived `PartialEq`\n   --> $DIR/derive.rs:37:1\n    |\n-37 |   impl Hash for Bah {\n-   |  _^ starting here...\n+37 | / impl Hash for Bah {\n 38 | |\n 39 | |     fn hash<H: Hasher>(&self, _: &mut H) {}\n 40 | | }\n-   | |_^ ...ending here\n+   | |_^\n    |\n    = note: #[deny(derive_hash_xor_eq)] implied by #[deny(warnings)]\n note: `PartialEq` implemented here\n@@ -55,12 +52,11 @@ note: `PartialEq` implemented here\n error: you are implementing `Clone` explicitly on a `Copy` type\n   --> $DIR/derive.rs:45:1\n    |\n-45 |   impl Clone for Qux {\n-   |  _^ starting here...\n+45 | / impl Clone for Qux {\n 46 | |\n 47 | |     fn clone(&self) -> Self { Qux }\n 48 | | }\n-   | |_^ ...ending here\n+   | |_^\n    |\n    = note: #[deny(expl_impl_clone_on_copy)] implied by #[deny(warnings)]\n note: lint level defined here\n@@ -71,33 +67,30 @@ note: lint level defined here\n note: consider deriving `Clone` or removing `Copy`\n   --> $DIR/derive.rs:45:1\n    |\n-45 |   impl Clone for Qux {\n-   |  _^ starting here...\n+45 | / impl Clone for Qux {\n 46 | |\n 47 | |     fn clone(&self) -> Self { Qux }\n 48 | | }\n-   | |_^ ...ending here\n+   | |_^\n \n error: you are implementing `Clone` explicitly on a `Copy` type\n   --> $DIR/derive.rs:70:1\n    |\n-70 |   impl<'a> Clone for Lt<'a> {\n-   |  _^ starting here...\n+70 | / impl<'a> Clone for Lt<'a> {\n 71 | |\n 72 | |     fn clone(&self) -> Self { unimplemented!() }\n 73 | | }\n-   | |_^ ...ending here\n+   | |_^\n    |\n    = note: #[deny(expl_impl_clone_on_copy)] implied by #[deny(warnings)]\n note: consider deriving `Clone` or removing `Copy`\n   --> $DIR/derive.rs:70:1\n    |\n-70 |   impl<'a> Clone for Lt<'a> {\n-   |  _^ starting here...\n+70 | / impl<'a> Clone for Lt<'a> {\n 71 | |\n 72 | |     fn clone(&self) -> Self { unimplemented!() }\n 73 | | }\n-   | |_^ ...ending here\n+   | |_^\n \n error: aborting due to 5 previous errors\n "}, {"sha": "876c4e827dc6480ccbf0956b0b83f8147463e3d4", "filename": "tests/ui/enum_variants.stderr", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fenum_variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fenum_variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fenum_variants.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -38,83 +38,77 @@ error: Variant name starts with the enum's name\n error: All variants have the same prefix: `Food`\n   --> $DIR/enum_variants.rs:24:1\n    |\n-24 |   enum Food {\n-   |  _^ starting here...\n+24 | / enum Food {\n 25 | |     FoodGood,\n 26 | |     FoodMiddle,\n 27 | |     FoodBad,\n 28 | | }\n-   | |_^ ...ending here\n+   | |_^\n    |\n    = note: #[deny(enum_variant_names)] implied by #[deny(clippy)]\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `CallType`\n   --> $DIR/enum_variants.rs:34:1\n    |\n-34 |   enum BadCallType {\n-   |  _^ starting here...\n+34 | / enum BadCallType {\n 35 | |     CallTypeCall,\n 36 | |     CallTypeCreate,\n 37 | |     CallTypeDestroy,\n 38 | | }\n-   | |_^ ...ending here\n+   | |_^\n    |\n    = note: #[deny(enum_variant_names)] implied by #[deny(clippy)]\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `Constant`\n   --> $DIR/enum_variants.rs:45:1\n    |\n-45 |   enum Consts {\n-   |  _^ starting here...\n+45 | / enum Consts {\n 46 | |     ConstantInt,\n 47 | |     ConstantCake,\n 48 | |     ConstantLie,\n 49 | | }\n-   | |_^ ...ending here\n+   | |_^\n    |\n    = note: #[deny(enum_variant_names)] implied by #[deny(clippy)]\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `With`\n   --> $DIR/enum_variants.rs:78:1\n    |\n-78 |   enum Seallll {\n-   |  _^ starting here...\n+78 | / enum Seallll {\n 79 | |     WithOutCake,\n 80 | |     WithOutTea,\n 81 | |     WithOut,\n 82 | | }\n-   | |_^ ...ending here\n+   | |_^\n    |\n    = note: #[deny(enum_variant_names)] implied by #[deny(clippy)]\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `Prefix`\n   --> $DIR/enum_variants.rs:84:1\n    |\n-84 |   enum NonCaps {\n-   |  _^ starting here...\n+84 | / enum NonCaps {\n 85 | |     Prefix\u7684,\n 86 | |     PrefixTea,\n 87 | |     PrefixCake,\n 88 | | }\n-   | |_^ ...ending here\n+   | |_^\n    |\n    = note: #[deny(enum_variant_names)] implied by #[deny(clippy)]\n    = help: remove the prefixes and use full paths to the variants instead of glob imports\n \n error: All variants have the same prefix: `With`\n   --> $DIR/enum_variants.rs:90:1\n    |\n-90 |   pub enum PubSeall {\n-   |  _^ starting here...\n+90 | / pub enum PubSeall {\n 91 | |     WithOutCake,\n 92 | |     WithOutTea,\n 93 | |     WithOut,\n 94 | | }\n-   | |_^ ...ending here\n+   | |_^\n    |\n note: lint level defined here\n   --> $DIR/enum_variants.rs:3:17"}, {"sha": "36b5a84c725a146f2643a7124b11574cac1b13f5", "filename": "tests/ui/filter_methods.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Ffilter_methods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Ffilter_methods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffilter_methods.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -2,10 +2,10 @@ error: called `filter(p).map(q)` on an `Iterator`. This is more succinctly expre\n   --> $DIR/filter_methods.rs:8:21\n    |\n 8  |       let _: Vec<_> = vec![5; 6].into_iter()\n-   |  _____________________^ starting here...\n+   |  _____________________^\n 9  | |                               .filter(|&x| x == 0)\n 10 | |                               .map(|x| x * 2)\n-   | |_____________________________________________^ ...ending here\n+   | |_____________________________________________^\n    |\n    = note: #[deny(filter_map)] implied by #[deny(clippy_pedantic)]\n note: lint level defined here\n@@ -18,32 +18,32 @@ error: called `filter(p).flat_map(q)` on an `Iterator`. This is more succinctly\n   --> $DIR/filter_methods.rs:13:21\n    |\n 13 |       let _: Vec<_> = vec![5_i8; 6].into_iter()\n-   |  _____________________^ starting here...\n+   |  _____________________^\n 14 | |                                 .filter(|&x| x == 0)\n 15 | |                                 .flat_map(|x| x.checked_mul(2))\n-   | |_______________________________________________________________^ ...ending here\n+   | |_______________________________________________________________^\n    |\n    = note: #[deny(filter_map)] implied by #[deny(clippy_pedantic)]\n \n error: called `filter_map(p).flat_map(q)` on an `Iterator`. This is more succinctly expressed by calling `.flat_map(..)` and filtering by returning an empty Iterator.\n   --> $DIR/filter_methods.rs:18:21\n    |\n 18 |       let _: Vec<_> = vec![5_i8; 6].into_iter()\n-   |  _____________________^ starting here...\n+   |  _____________________^\n 19 | |                                 .filter_map(|x| x.checked_mul(2))\n 20 | |                                 .flat_map(|x| x.checked_mul(2))\n-   | |_______________________________________________________________^ ...ending here\n+   | |_______________________________________________________________^\n    |\n    = note: #[deny(filter_map)] implied by #[deny(clippy_pedantic)]\n \n error: called `filter_map(p).map(q)` on an `Iterator`. This is more succinctly expressed by only calling `.filter_map(..)` instead.\n   --> $DIR/filter_methods.rs:23:21\n    |\n 23 |       let _: Vec<_> = vec![5_i8; 6].into_iter()\n-   |  _____________________^ starting here...\n+   |  _____________________^\n 24 | |                                 .filter_map(|x| x.checked_mul(2))\n 25 | |                                 .map(|x| x.checked_mul(2))\n-   | |__________________________________________________________^ ...ending here\n+   | |__________________________________________________________^\n    |\n    = note: #[deny(filter_map)] implied by #[deny(clippy_pedantic)]\n "}, {"sha": "aff2baeed0c9ed3056025b79e25c0b1cc3a16f36", "filename": "tests/ui/for_loop.stderr", "status": "modified", "additions": 50, "deletions": 75, "changes": 125, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Ffor_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Ffor_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffor_loop.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -38,12 +38,11 @@ error: for loop over `option.ok_or(\"x not found\")`, which is a `Result`. This is\n error: you are iterating over `Iterator::next()` which is an Option; this will compile but is probably not what you want\n   --> $DIR/for_loop.rs:40:5\n    |\n-40 |       for x in v.iter().next() {\n-   |  _____^ starting here...\n+40 | /     for x in v.iter().next() {\n 41 | |\n 42 | |         println!(\"{}\", x);\n 43 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n    = note: #[deny(iter_next_loop)] implied by #[deny(clippy)]\n note: lint level defined here\n@@ -73,15 +72,14 @@ error: for loop over `v.iter().next().ok_or(\"x not found\")`, which is a `Result`\n error: the loop variable `i` is only used to index `vec`.\n    --> $DIR/for_loop.rs:99:5\n     |\n-99  |       for i in 0..vec.len() {\n-    |  _____^ starting here...\n+99  | /     for i in 0..vec.len() {\n 100 | |\n 101 | |\n 102 | |\n 103 | |\n 104 | |         println!(\"{}\", vec[i]);\n 105 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n note: lint level defined here\n    --> $DIR/for_loop.rs:90:8\n@@ -111,190 +109,178 @@ help: consider using an iterator\n error: the loop variable `j` is only used to index `STATIC`.\n    --> $DIR/for_loop.rs:120:5\n     |\n-120 |       for j in 0..4 {\n-    |  _____^ starting here...\n+120 | /     for j in 0..4 {\n 121 | |\n 122 | |\n 123 | |\n 124 | |\n 125 | |         println!(\"{:?}\", STATIC[j]);\n 126 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in STATIC.iter().take(4) {\n \n error: the loop variable `j` is only used to index `CONST`.\n    --> $DIR/for_loop.rs:128:5\n     |\n-128 |       for j in 0..4 {\n-    |  _____^ starting here...\n+128 | /     for j in 0..4 {\n 129 | |\n 130 | |\n 131 | |\n 132 | |\n 133 | |         println!(\"{:?}\", CONST[j]);\n 134 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in CONST.iter().take(4) {\n \n error: the loop variable `i` is used to index `vec`\n    --> $DIR/for_loop.rs:136:5\n     |\n-136 |       for i in 0..vec.len() {\n-    |  _____^ starting here...\n+136 | /     for i in 0..vec.len() {\n 137 | |\n 138 | |\n 139 | |\n 140 | |\n 141 | |         println!(\"{} {}\", vec[i], i);\n 142 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using an iterator\n     |     for (i, <item>) in vec.iter().enumerate() {\n \n error: the loop variable `i` is only used to index `vec2`.\n    --> $DIR/for_loop.rs:147:5\n     |\n-147 |       for i in 0..vec.len() {\n-    |  _____^ starting here...\n+147 | /     for i in 0..vec.len() {\n 148 | |\n 149 | |\n 150 | |\n 151 | |\n 152 | |         println!(\"{}\", vec2[i]);\n 153 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in vec2.iter().take(vec.len()) {\n \n error: the loop variable `i` is only used to index `vec`.\n    --> $DIR/for_loop.rs:155:5\n     |\n-155 |       for i in 5..vec.len() {\n-    |  _____^ starting here...\n+155 | /     for i in 5..vec.len() {\n 156 | |\n 157 | |\n 158 | |\n 159 | |\n 160 | |         println!(\"{}\", vec[i]);\n 161 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in vec.iter().skip(5) {\n \n error: the loop variable `i` is only used to index `vec`.\n    --> $DIR/for_loop.rs:163:5\n     |\n-163 |       for i in 0..MAX_LEN {\n-    |  _____^ starting here...\n+163 | /     for i in 0..MAX_LEN {\n 164 | |\n 165 | |\n 166 | |\n 167 | |\n 168 | |         println!(\"{}\", vec[i]);\n 169 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in vec.iter().take(MAX_LEN) {\n \n error: the loop variable `i` is only used to index `vec`.\n    --> $DIR/for_loop.rs:171:5\n     |\n-171 |       for i in 0...MAX_LEN {\n-    |  _____^ starting here...\n+171 | /     for i in 0...MAX_LEN {\n 172 | |\n 173 | |\n 174 | |\n 175 | |\n 176 | |         println!(\"{}\", vec[i]);\n 177 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in vec.iter().take(MAX_LEN + 1) {\n \n error: the loop variable `i` is only used to index `vec`.\n    --> $DIR/for_loop.rs:179:5\n     |\n-179 |       for i in 5..10 {\n-    |  _____^ starting here...\n+179 | /     for i in 5..10 {\n 180 | |\n 181 | |\n 182 | |\n 183 | |\n 184 | |         println!(\"{}\", vec[i]);\n 185 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in vec.iter().take(10).skip(5) {\n \n error: the loop variable `i` is only used to index `vec`.\n    --> $DIR/for_loop.rs:187:5\n     |\n-187 |       for i in 5...10 {\n-    |  _____^ starting here...\n+187 | /     for i in 5...10 {\n 188 | |\n 189 | |\n 190 | |\n 191 | |\n 192 | |         println!(\"{}\", vec[i]);\n 193 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using an iterator\n     |     for <item> in vec.iter().take(10 + 1).skip(5) {\n \n error: the loop variable `i` is used to index `vec`\n    --> $DIR/for_loop.rs:195:5\n     |\n-195 |       for i in 5..vec.len() {\n-    |  _____^ starting here...\n+195 | /     for i in 5..vec.len() {\n 196 | |\n 197 | |\n 198 | |\n 199 | |\n 200 | |         println!(\"{} {}\", vec[i], i);\n 201 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using an iterator\n     |     for (i, <item>) in vec.iter().enumerate().skip(5) {\n \n error: the loop variable `i` is used to index `vec`\n    --> $DIR/for_loop.rs:203:5\n     |\n-203 |       for i in 5..10 {\n-    |  _____^ starting here...\n+203 | /     for i in 5..10 {\n 204 | |\n 205 | |\n 206 | |\n 207 | |\n 208 | |         println!(\"{} {}\", vec[i], i);\n 209 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using an iterator\n     |     for (i, <item>) in vec.iter().enumerate().take(10).skip(5) {\n \n error: this range is empty so this for loop will never run\n    --> $DIR/for_loop.rs:211:5\n     |\n-211 |       for i in 10..0 {\n-    |  _____^ starting here...\n+211 | /     for i in 10..0 {\n 212 | |\n 213 | |\n 214 | |\n 215 | |         println!(\"{}\", i);\n 216 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n note: lint level defined here\n    --> $DIR/for_loop.rs:90:90\n@@ -307,79 +293,73 @@ help: consider using the following if you are attempting to iterate over this ra\n error: this range is empty so this for loop will never run\n    --> $DIR/for_loop.rs:218:5\n     |\n-218 |       for i in 10...0 {\n-    |  _____^ starting here...\n+218 | /     for i in 10...0 {\n 219 | |\n 220 | |\n 221 | |\n 222 | |         println!(\"{}\", i);\n 223 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |     for i in (0...10).rev() {\n \n error: this range is empty so this for loop will never run\n    --> $DIR/for_loop.rs:225:5\n     |\n-225 |       for i in MAX_LEN..0 {\n-    |  _____^ starting here...\n+225 | /     for i in MAX_LEN..0 {\n 226 | |\n 227 | |\n 228 | |         println!(\"{}\", i);\n 229 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |     for i in (0..MAX_LEN).rev() {\n \n error: this range is empty so this for loop will never run\n    --> $DIR/for_loop.rs:231:5\n     |\n-231 |       for i in 5..5 {\n-    |  _____^ starting here...\n+231 | /     for i in 5..5 {\n 232 | |         println!(\"{}\", i);\n 233 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: this range is empty so this for loop will never run\n    --> $DIR/for_loop.rs:252:5\n     |\n-252 |       for i in 10..5+4 {\n-    |  _____^ starting here...\n+252 | /     for i in 10..5+4 {\n 253 | |\n 254 | |\n 255 | |\n 256 | |         println!(\"{}\", i);\n 257 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |     for i in (5+4..10).rev() {\n \n error: this range is empty so this for loop will never run\n    --> $DIR/for_loop.rs:259:5\n     |\n-259 |       for i in (5+2)..(3-1) {\n-    |  _____^ starting here...\n+259 | /     for i in (5+2)..(3-1) {\n 260 | |\n 261 | |\n 262 | |\n 263 | |         println!(\"{}\", i);\n 264 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: consider using the following if you are attempting to iterate over this range in reverse\n     |     for i in ((3-1)..(5+2)).rev() {\n \n error: this range is empty so this for loop will never run\n    --> $DIR/for_loop.rs:266:5\n     |\n-266 |       for i in (5+2)..(8-1) {\n-    |  _____^ starting here...\n+266 | /     for i in (5+2)..(8-1) {\n 267 | |         println!(\"{}\", i);\n 268 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: it is more idiomatic to loop over references to containers instead of using explicit iteration methods\n    --> $DIR/for_loop.rs:289:15\n@@ -553,15 +533,14 @@ error: the variable `_index` is used as a loop counter. Consider using `for (_in\n error: you seem to want to iterate on a map's values\n    --> $DIR/for_loop.rs:444:5\n     |\n-444 |       for (_, v) in &m {\n-    |  _____^ starting here...\n+444 | /     for (_, v) in &m {\n 445 | |\n 446 | |\n 447 | |\n 448 | |\n 449 | |         let _v = v;\n 450 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n note: lint level defined here\n    --> $DIR/for_loop.rs:90:133\n@@ -574,63 +553,59 @@ help: use the corresponding method\n error: you seem to want to iterate on a map's values\n    --> $DIR/for_loop.rs:453:5\n     |\n-453 |       for (_, v) in &*m {\n-    |  _____^ starting here...\n+453 | /     for (_, v) in &*m {\n 454 | |\n 455 | |\n 456 | |\n ...   |\n 460 | |         // `in *m.values()` as we used to\n 461 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: use the corresponding method\n     |     for v in (*m).values() {\n \n error: you seem to want to iterate on a map's values\n    --> $DIR/for_loop.rs:464:5\n     |\n-464 |       for (_, v) in &mut m {\n-    |  _____^ starting here...\n+464 | /     for (_, v) in &mut m {\n 465 | |\n 466 | |\n 467 | |\n 468 | |\n 469 | |         let _v = v;\n 470 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: use the corresponding method\n     |     for v in m.values_mut() {\n \n error: you seem to want to iterate on a map's values\n    --> $DIR/for_loop.rs:473:5\n     |\n-473 |       for (_, v) in &mut *m {\n-    |  _____^ starting here...\n+473 | /     for (_, v) in &mut *m {\n 474 | |\n 475 | |\n 476 | |\n 477 | |\n 478 | |         let _v = v;\n 479 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: use the corresponding method\n     |     for v in (*m).values_mut() {\n \n error: you seem to want to iterate on a map's keys\n    --> $DIR/for_loop.rs:483:5\n     |\n-483 |       for (k, _value) in rm {\n-    |  _____^ starting here...\n+483 | /     for (k, _value) in rm {\n 484 | |\n 485 | |\n 486 | |\n 487 | |\n 488 | |         let _k = k;\n 489 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: use the corresponding method\n     |     for k in rm.keys() {"}, {"sha": "a96901e4fbcc53f10f71c0ea75702f2fa0266ce6", "filename": "tests/ui/formatting.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fformatting.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fformatting.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformatting.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -34,11 +34,11 @@ error: this is an `else if` but the formatting might hide it\n   --> $DIR/formatting.rs:45:6\n    |\n 45 |       } else\n-   |  ______^ starting here...\n+   |  ______^\n 46 | |\n 47 | |\n 48 | |     if foo() { // the span of the above error should continue here\n-   | |____^ ...ending here\n+   | |____^\n    |\n    = note: #[deny(suspicious_else_formatting)] implied by #[deny(clippy)]\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`\n@@ -47,12 +47,12 @@ error: this is an `else if` but the formatting might hide it\n   --> $DIR/formatting.rs:52:6\n    |\n 52 |       }\n-   |  ______^ starting here...\n+   |  ______^\n 53 | |\n 54 | |\n 55 | |     else\n 56 | |     if foo() { // the span of the above error should continue here\n-   | |____^ ...ending here\n+   | |____^\n    |\n    = note: #[deny(suspicious_else_formatting)] implied by #[deny(clippy)]\n    = note: to remove this lint, remove the `else` or remove the new line between `else` and `if`"}, {"sha": "6e674ffb7b21594fef676a69e461eab79081b713", "filename": "tests/ui/functions.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Ffunctions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Ffunctions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffunctions.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,11 +1,10 @@\n error: this function has too many arguments (8/7)\n   --> $DIR/functions.rs:11:1\n    |\n-11 |   fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {\n-   |  _^ starting here...\n+11 | / fn bad(_one: u32, _two: u32, _three: &str, _four: bool, _five: f32, _six: f32, _seven: bool, _eight: ()) {\n 12 | |\n 13 | | }\n-   | |_^ ...ending here\n+   | |_^\n    |\n    = note: #[deny(too_many_arguments)] implied by #[deny(clippy)]\n note: lint level defined here"}, {"sha": "75e814ee0eec34e28d678a784e12021c77f46e3e", "filename": "tests/ui/if_not_else.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fif_not_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fif_not_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fif_not_else.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,13 +1,12 @@\n error: Unnecessary boolean `not` operation\n   --> $DIR/if_not_else.rs:9:5\n    |\n-9  |       if !bla() {\n-   |  _____^ starting here...\n+9  | /     if !bla() {\n 10 | |         println!(\"Bugs\");\n 11 | |     } else {\n 12 | |         println!(\"Bunny\");\n 13 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n note: lint level defined here\n   --> $DIR/if_not_else.rs:4:9\n@@ -19,13 +18,12 @@ note: lint level defined here\n error: Unnecessary `!=` operation\n   --> $DIR/if_not_else.rs:14:5\n    |\n-14 |       if 4 != 5 {\n-   |  _____^ starting here...\n+14 | /     if 4 != 5 {\n 15 | |         println!(\"Bugs\");\n 16 | |     } else {\n 17 | |         println!(\"Bunny\");\n 18 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n    = help: change to `==` and swap the blocks of the if/else\n "}, {"sha": "2961ae9e5b59ec5d0d060f2ad09802f0f2061292", "filename": "tests/ui/len_zero.stderr", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Flen_zero.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Flen_zero.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flen_zero.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,13 +1,12 @@\n error: item `PubOne` has a public `len` method but no corresponding `is_empty` method\n   --> $DIR/len_zero.rs:9:1\n    |\n-9  |   impl PubOne {\n-   |  _^ starting here...\n+9  | / impl PubOne {\n 10 | |     pub fn len(self: &Self) -> isize {\n 11 | |         1\n 12 | |     }\n 13 | | }\n-   | |_^ ...ending here\n+   | |_^\n    |\n note: lint level defined here\n   --> $DIR/len_zero.rs:4:9\n@@ -18,37 +17,34 @@ note: lint level defined here\n error: trait `PubTraitsToo` has a `len` method but no `is_empty` method\n   --> $DIR/len_zero.rs:55:1\n    |\n-55 |   pub trait PubTraitsToo {\n-   |  _^ starting here...\n+55 | / pub trait PubTraitsToo {\n 56 | |     fn len(self: &Self) -> isize;\n 57 | | }\n-   | |_^ ...ending here\n+   | |_^\n \n error: item `HasIsEmpty` has a public `len` method but a private `is_empty` method\n   --> $DIR/len_zero.rs:89:1\n    |\n-89 |   impl HasIsEmpty {\n-   |  _^ starting here...\n+89 | / impl HasIsEmpty {\n 90 | |     pub fn len(self: &Self) -> isize {\n 91 | |         1\n 92 | |     }\n ...  |\n 96 | |     }\n 97 | | }\n-   | |_^ ...ending here\n+   | |_^\n \n error: item `HasWrongIsEmpty` has a public `len` method but no corresponding `is_empty` method\n    --> $DIR/len_zero.rs:118:1\n     |\n-118 |   impl HasWrongIsEmpty {\n-    |  _^ starting here...\n+118 | / impl HasWrongIsEmpty {\n 119 | |     pub fn len(self: &Self) -> isize {\n 120 | |         1\n 121 | |     }\n ...   |\n 125 | |     }\n 126 | | }\n-    | |_^ ...ending here\n+    | |_^\n \n error: length comparison to zero\n    --> $DIR/len_zero.rs:130:8"}, {"sha": "65139c9ba92de90c42b6a3e2c33fb68d6986a2df", "filename": "tests/ui/let_if_seq.stderr", "status": "modified", "additions": 8, "deletions": 12, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Flet_if_seq.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Flet_if_seq.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_if_seq.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,15 +1,14 @@\n error: `if _ { .. } else { .. }` is an expression\n   --> $DIR/let_if_seq.rs:57:5\n    |\n-57 |       let mut foo = 0;\n-   |  _____^ starting here...\n+57 | /     let mut foo = 0;\n 58 | |\n 59 | |\n 60 | |\n 61 | |     if f() {\n 62 | |         foo = 42;\n 63 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n note: lint level defined here\n   --> $DIR/let_if_seq.rs:5:9\n@@ -23,15 +22,14 @@ help: it is more idiomatic to write\n error: `if _ { .. } else { .. }` is an expression\n   --> $DIR/let_if_seq.rs:65:5\n    |\n-65 |       let mut bar = 0;\n-   |  _____^ starting here...\n+65 | /     let mut bar = 0;\n 66 | |\n 67 | |\n 68 | |\n ...  |\n 74 | |         f();\n 75 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: it is more idiomatic to write\n    |     let <mut> bar = if f() { ..; 42 } else { ..; 0 };\n@@ -40,31 +38,29 @@ help: it is more idiomatic to write\n error: `if _ { .. } else { .. }` is an expression\n   --> $DIR/let_if_seq.rs:77:5\n    |\n-77 |       let quz;\n-   |  _____^ starting here...\n+77 | /     let quz;\n 78 | |\n 79 | |\n 80 | |\n ...  |\n 85 | |         quz = 0;\n 86 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: it is more idiomatic to write\n    |     let quz = if f() { 42 } else { 0 };\n \n error: `if _ { .. } else { .. }` is an expression\n    --> $DIR/let_if_seq.rs:111:5\n     |\n-111 |       let mut baz = 0;\n-    |  _____^ starting here...\n+111 | /     let mut baz = 0;\n 112 | |\n 113 | |\n 114 | |\n 115 | |     if f() {\n 116 | |         baz = 42;\n 117 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: it is more idiomatic to write\n     |     let <mut> baz = if f() { 42 } else { 0 };"}, {"sha": "ea8a483924fd9a9b558e447d4dca9755289dbce1", "filename": "tests/ui/lifetimes.rs", "status": "modified", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -128,5 +128,29 @@ fn elided_input_named_output<'a>(_arg: &str) -> &'a str { unimplemented!() }\n fn trait_bound_ok<'a, T: WithLifetime<'static>>(_: &'a u8, _: T) { unimplemented!() }\n fn trait_bound<'a, T: WithLifetime<'a>>(_: &'a u8, _: T) { unimplemented!() }\n \n+// don't warn on these, see #292\n+fn trait_bound_bug<'a, T: WithLifetime<'a>>() { unimplemented!() }\n+\n+// #740\n+struct Test {\n+    vec: Vec<usize>,\n+}\n+\n+impl Test {\n+    fn iter<'a>(&'a self) -> Box<Iterator<Item = usize> + 'a> {\n+        unimplemented!()\n+    }\n+}\n+\n+\n+trait LintContext<'a> {}\n+\n+fn f<'a, T: LintContext<'a>>(_: &T) {}\n+\n+fn test<'a>(x: &'a [u8]) -> u8 {\n+    let y: &'a u8 = &x[5];\n+    *y\n+}\n+\n fn main() {\n }"}, {"sha": "15306dfcc11e634197370bf0c043ecec9d085e25", "filename": "tests/ui/lifetimes.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Flifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Flifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flifetimes.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -43,11 +43,10 @@ error: explicit lifetimes given in parameter types where they could be elided\n error: explicit lifetimes given in parameter types where they could be elided\n   --> $DIR/lifetimes.rs:58:1\n    |\n-58 |   fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n-   |  _^ starting here...\n+58 | / fn fn_bound_2<'a, F, I>(_m: Lt<'a, I>, _f: F) -> Lt<'a, I>\n 59 | |     where for<'x> F: Fn(Lt<'x, I>) -> Lt<'x, I>\n 60 | | { unreachable!() }\n-   | |__________________^ ...ending here\n+   | |__________________^\n \n error: explicit lifetimes given in parameter types where they could be elided\n   --> $DIR/lifetimes.rs:67:5"}, {"sha": "25653b6aa5ac9fb64f88e8c0c1797b3a3bfc2735", "filename": "tests/ui/matches.stderr", "status": "modified", "additions": 34, "deletions": 51, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fmatches.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fmatches.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmatches.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,15 +1,14 @@\n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/matches.rs:26:5\n    |\n-26 |       match ExprNode::Butterflies {\n-   |  _____^ starting here...\n+26 | /     match ExprNode::Butterflies {\n 27 | |\n 28 | |\n 29 | |\n 30 | |         ExprNode::ExprAddrOf => Some(&NODE),\n 31 | |         _ => { let x = 5; None },\n 32 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n note: lint level defined here\n   --> $DIR/matches.rs:7:9\n@@ -22,15 +21,14 @@ help: try this\n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/matches.rs:38:5\n    |\n-38 |       match x {\n-   |  _____^ starting here...\n+38 | /     match x {\n 39 | |\n 40 | |\n 41 | |\n 42 | |         Some(y) => { println!(\"{:?}\", y); }\n 43 | |         _ => ()\n 44 | |     };\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n note: lint level defined here\n@@ -44,15 +42,14 @@ help: try this\n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/matches.rs:47:5\n    |\n-47 |       match z {\n-   |  _____^ starting here...\n+47 | /     match z {\n 48 | |\n 49 | |\n 50 | |\n 51 | |         (2...3, 7...9) => dummy(),\n 52 | |         _ => {}\n 53 | |     };\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n help: try this\n@@ -61,15 +58,14 @@ help: try this\n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/matches.rs:72:5\n    |\n-72 |       match x {\n-   |  _____^ starting here...\n+72 | /     match x {\n 73 | |\n 74 | |\n 75 | |\n 76 | |         Some(y) => dummy(),\n 77 | |         None => ()\n 78 | |     };\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n help: try this\n@@ -78,15 +74,14 @@ help: try this\n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/matches.rs:80:5\n    |\n-80 |       match y {\n-   |  _____^ starting here...\n+80 | /     match y {\n 81 | |\n 82 | |\n 83 | |\n 84 | |         Ok(y) => dummy(),\n 85 | |         Err(..) => ()\n 86 | |     };\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n help: try this\n@@ -95,15 +90,14 @@ help: try this\n error: you seem to be trying to use match for destructuring a single pattern. Consider using `if let`\n   --> $DIR/matches.rs:90:5\n    |\n-90 |       match c {\n-   |  _____^ starting here...\n+90 | /     match c {\n 91 | |\n 92 | |\n 93 | |\n 94 | |         Cow::Borrowed(..) => dummy(),\n 95 | |         Cow::Owned(..) => (),\n 96 | |     };\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n    = note: #[deny(single_match)] implied by #[deny(clippy)]\n help: try this\n@@ -112,15 +106,14 @@ help: try this\n error: you seem to be trying to match on a boolean expression\n    --> $DIR/matches.rs:114:5\n     |\n-114 |       match test {\n-    |  _____^ starting here...\n+114 | /     match test {\n 115 | |\n 116 | |\n 117 | |\n 118 | |         true => 0,\n 119 | |         false => 42,\n 120 | |     };\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n note: lint level defined here\n@@ -134,15 +127,14 @@ help: consider using an if/else expression\n error: you seem to be trying to match on a boolean expression\n    --> $DIR/matches.rs:123:5\n     |\n-123 |       match option == 1 {\n-    |  _____^ starting here...\n+123 | /     match option == 1 {\n 124 | |\n 125 | |\n 126 | |\n 127 | |         true => 1,\n 128 | |         false => 0,\n 129 | |     };\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n help: consider using an if/else expression\n@@ -151,15 +143,14 @@ help: consider using an if/else expression\n error: you seem to be trying to match on a boolean expression\n    --> $DIR/matches.rs:131:5\n     |\n-131 |       match test {\n-    |  _____^ starting here...\n+131 | /     match test {\n 132 | |\n 133 | |\n 134 | |\n 135 | |         true => (),\n 136 | |         false => { println!(\"Noooo!\"); }\n 137 | |     };\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n help: consider using an if/else expression\n@@ -168,15 +159,14 @@ help: consider using an if/else expression\n error: you seem to be trying to match on a boolean expression\n    --> $DIR/matches.rs:139:5\n     |\n-139 |       match test {\n-    |  _____^ starting here...\n+139 | /     match test {\n 140 | |\n 141 | |\n 142 | |\n 143 | |         false => { println!(\"Noooo!\"); }\n 144 | |         _ => (),\n 145 | |     };\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n help: consider using an if/else expression\n@@ -185,15 +175,14 @@ help: consider using an if/else expression\n error: you seem to be trying to match on a boolean expression\n    --> $DIR/matches.rs:147:5\n     |\n-147 |       match test && test {\n-    |  _____^ starting here...\n+147 | /     match test && test {\n 148 | |\n 149 | |\n 150 | |\n ...   |\n 153 | |         _ => (),\n 154 | |     };\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n help: consider using an if/else expression\n@@ -215,15 +204,14 @@ note: lint level defined here\n error: you seem to be trying to match on a boolean expression\n    --> $DIR/matches.rs:156:5\n     |\n-156 |       match test {\n-    |  _____^ starting here...\n+156 | /     match test {\n 157 | |\n 158 | |\n 159 | |\n 160 | |         false => { println!(\"Noooo!\"); }\n 161 | |         true => { println!(\"Yes!\"); }\n 162 | |     };\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n     = note: #[deny(match_bool)] implied by #[deny(clippy)]\n help: consider using an if/else expression\n@@ -232,15 +220,14 @@ help: consider using an if/else expression\n error: you don't need to add `&` to all patterns\n    --> $DIR/matches.rs:175:9\n     |\n-175 |           match v {\n-    |  _________^ starting here...\n+175 | /         match v {\n 176 | |\n 177 | |\n 178 | |\n 179 | |             &Some(v) => println!(\"{:?}\", v),\n 180 | |             &None => println!(\"none\"),\n 181 | |         }\n-    | |_________^ ...ending here\n+    | |_________^\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n note: lint level defined here\n@@ -254,15 +241,14 @@ help: instead of prefixing all patterns with `&`, you can dereference the expres\n error: you don't need to add `&` to all patterns\n    --> $DIR/matches.rs:188:5\n     |\n-188 |       match tup {\n-    |  _____^ starting here...\n+188 | /     match tup {\n 189 | |\n 190 | |\n 191 | |\n 192 | |         &(v, 1) => println!(\"{}\", v),\n 193 | |         _ => println!(\"none\"),\n 194 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n@@ -271,15 +257,14 @@ help: instead of prefixing all patterns with `&`, you can dereference the expres\n error: you don't need to add `&` to both the expression and the patterns\n    --> $DIR/matches.rs:197:5\n     |\n-197 |       match &w {\n-    |  _____^ starting here...\n+197 | /     match &w {\n 198 | |\n 199 | |\n 200 | |\n 201 | |         &Some(v) => println!(\"{:?}\", v),\n 202 | |         &None => println!(\"none\"),\n 203 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n help: try\n@@ -288,14 +273,13 @@ help: try\n error: you don't need to add `&` to all patterns\n    --> $DIR/matches.rs:211:5\n     |\n-211 |       if let &None = a {\n-    |  _____^ starting here...\n+211 | /     if let &None = a {\n 212 | |\n 213 | |\n 214 | |\n 215 | |         println!(\"none\");\n 216 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n help: instead of prefixing all patterns with `&`, you can dereference the expression\n@@ -304,14 +288,13 @@ help: instead of prefixing all patterns with `&`, you can dereference the expres\n error: you don't need to add `&` to both the expression and the patterns\n    --> $DIR/matches.rs:219:5\n     |\n-219 |       if let &None = &b {\n-    |  _____^ starting here...\n+219 | /     if let &None = &b {\n 220 | |\n 221 | |\n 222 | |\n 223 | |         println!(\"none\");\n 224 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n     = note: #[deny(match_ref_pats)] implied by #[deny(clippy)]\n help: try"}, {"sha": "3d5289d2c1d570b64eec48398706d4e40df79b38", "filename": "tests/ui/methods.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fmethods.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fmethods.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmethods.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -65,10 +65,10 @@ error: called `map(f).unwrap_or(a)` on an Option value. This can be done more di\n    --> $DIR/methods.rs:99:13\n     |\n 99  |       let _ = opt.map(|x| x + 1)\n-    |  _____________^ starting here...\n+    |  _____________^\n 100 | |\n 101 | |                .unwrap_or(0); // should lint even though this call is on a separate line\n-    | |____________________________^ ...ending here\n+    | |____________________________^\n     |\n     = note: #[deny(option_map_unwrap_or)] implied by #[deny(clippy_pedantic)]\n note: lint level defined here\n@@ -82,34 +82,34 @@ error: called `map(f).unwrap_or(a)` on an Option value. This can be done more di\n    --> $DIR/methods.rs:103:13\n     |\n 103 |       let _ = opt.map(|x| {\n-    |  _____________^ starting here...\n+    |  _____________^\n 104 | |                         x + 1\n 105 | |                     }\n 106 | |               ).unwrap_or(0);\n-    | |____________________________^ ...ending here\n+    | |____________________________^\n     |\n     = note: #[deny(option_map_unwrap_or)] implied by #[deny(clippy_pedantic)]\n \n error: called `map(f).unwrap_or(a)` on an Option value. This can be done more directly by calling `map_or(a, f)` instead\n    --> $DIR/methods.rs:107:13\n     |\n 107 |       let _ = opt.map(|x| x + 1)\n-    |  _____________^ starting here...\n+    |  _____________^\n 108 | |                .unwrap_or({\n 109 | |                     0\n 110 | |                 });\n-    | |__________________^ ...ending here\n+    | |__________________^\n     |\n     = note: #[deny(option_map_unwrap_or)] implied by #[deny(clippy_pedantic)]\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n    --> $DIR/methods.rs:116:13\n     |\n 116 |       let _ = opt.map(|x| x + 1)\n-    |  _____________^ starting here...\n+    |  _____________^\n 117 | |\n 118 | |                .unwrap_or_else(|| 0); // should lint even though this call is on a separate line\n-    | |____________________________________^ ...ending here\n+    | |____________________________________^\n     |\n     = note: #[deny(option_map_unwrap_or_else)] implied by #[deny(clippy_pedantic)]\n note: lint level defined here\n@@ -123,23 +123,23 @@ error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done mo\n    --> $DIR/methods.rs:120:13\n     |\n 120 |       let _ = opt.map(|x| {\n-    |  _____________^ starting here...\n+    |  _____________^\n 121 | |                         x + 1\n 122 | |                     }\n 123 | |               ).unwrap_or_else(|| 0);\n-    | |____________________________________^ ...ending here\n+    | |____________________________________^\n     |\n     = note: #[deny(option_map_unwrap_or_else)] implied by #[deny(clippy_pedantic)]\n \n error: called `map(f).unwrap_or_else(g)` on an Option value. This can be done more directly by calling `map_or_else(g, f)` instead\n    --> $DIR/methods.rs:124:13\n     |\n 124 |       let _ = opt.map(|x| x + 1)\n-    |  _____________^ starting here...\n+    |  _____________^\n 125 | |                .unwrap_or_else(||\n 126 | |                     0\n 127 | |                 );\n-    | |_________________^ ...ending here\n+    | |_________________^\n     |\n     = note: #[deny(option_map_unwrap_or_else)] implied by #[deny(clippy_pedantic)]\n \n@@ -161,11 +161,11 @@ error: called `filter(p).next()` on an `Iterator`. This is more succinctly expre\n    --> $DIR/methods.rs:201:13\n     |\n 201 |       let _ = v.iter().filter(|&x| {\n-    |  _____________^ starting here...\n+    |  _____________^\n 202 | |                                 *x < 0\n 203 | |                             }\n 204 | |                    ).next();\n-    | |___________________________^ ...ending here\n+    | |___________________________^\n     |\n     = note: #[deny(filter_next)] implied by #[deny(clippy)]\n \n@@ -187,11 +187,11 @@ error: called `is_some()` after searching an `Iterator` with find. This is more\n    --> $DIR/methods.rs:221:13\n     |\n 221 |       let _ = v.iter().find(|&x| {\n-    |  _____________^ starting here...\n+    |  _____________^\n 222 | |                               *x < 0\n 223 | |                           }\n 224 | |                    ).is_some();\n-    | |______________________________^ ...ending here\n+    | |______________________________^\n     |\n     = note: #[deny(search_is_some)] implied by #[deny(clippy)]\n \n@@ -208,11 +208,11 @@ error: called `is_some()` after searching an `Iterator` with position. This is m\n    --> $DIR/methods.rs:232:13\n     |\n 232 |       let _ = v.iter().position(|&x| {\n-    |  _____________^ starting here...\n+    |  _____________^\n 233 | |                                   x < 0\n 234 | |                               }\n 235 | |                    ).is_some();\n-    | |______________________________^ ...ending here\n+    | |______________________________^\n     |\n     = note: #[deny(search_is_some)] implied by #[deny(clippy)]\n \n@@ -229,11 +229,11 @@ error: called `is_some()` after searching an `Iterator` with rposition. This is\n    --> $DIR/methods.rs:243:13\n     |\n 243 |       let _ = v.iter().rposition(|&x| {\n-    |  _____________^ starting here...\n+    |  _____________^\n 244 | |                                    x < 0\n 245 | |                                }\n 246 | |                    ).is_some();\n-    | |______________________________^ ...ending here\n+    | |______________________________^\n     |\n     = note: #[deny(search_is_some)] implied by #[deny(clippy)]\n "}, {"sha": "3e1e7b0135ecc0b7e7de578eb1040702a61257eb", "filename": "tests/ui/missing-doc.stderr", "status": "modified", "additions": 16, "deletions": 24, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fmissing-doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fmissing-doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing-doc.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -19,12 +19,11 @@ error: missing documentation for a type alias\n error: missing documentation for a struct\n   --> $DIR/missing-doc.rs:29:1\n    |\n-29 |   struct Foo {\n-   |  _^ starting here...\n+29 | / struct Foo {\n 30 | |     a: isize,\n 31 | |     b: isize,\n 32 | | }\n-   | |_^ ...ending here\n+   | |_^\n \n error: missing documentation for a struct field\n   --> $DIR/missing-doc.rs:30:5\n@@ -41,12 +40,11 @@ error: missing documentation for a struct field\n error: missing documentation for a struct\n   --> $DIR/missing-doc.rs:34:1\n    |\n-34 |   pub struct PubFoo {\n-   |  _^ starting here...\n+34 | / pub struct PubFoo {\n 35 | |     pub a: isize,\n 36 | |     b: isize,\n 37 | | }\n-   | |_^ ...ending here\n+   | |_^\n \n error: missing documentation for a struct field\n   --> $DIR/missing-doc.rs:35:5\n@@ -87,12 +85,11 @@ error: missing documentation for a function\n error: missing documentation for a trait\n   --> $DIR/missing-doc.rs:68:1\n    |\n-68 |   pub trait C {\n-   |  _^ starting here...\n+68 | / pub trait C {\n 69 | |     fn foo(&self);\n 70 | |     fn foo_with_impl(&self) {}\n 71 | | }\n-   | |_^ ...ending here\n+   | |_^\n \n error: missing documentation for a trait method\n   --> $DIR/missing-doc.rs:69:5\n@@ -145,25 +142,23 @@ error: missing documentation for a method\n error: missing documentation for an enum\n    --> $DIR/missing-doc.rs:126:1\n     |\n-126 |   enum Baz {\n-    |  _^ starting here...\n+126 | / enum Baz {\n 127 | |     BazA {\n 128 | |         a: isize,\n 129 | |         b: isize\n 130 | |     },\n 131 | |     BarB\n 132 | | }\n-    | |_^ ...ending here\n+    | |_^\n \n error: missing documentation for a variant\n    --> $DIR/missing-doc.rs:127:5\n     |\n-127 |       BazA {\n-    |  _____^ starting here...\n+127 | /     BazA {\n 128 | |         a: isize,\n 129 | |         b: isize\n 130 | |     },\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: missing documentation for a struct field\n    --> $DIR/missing-doc.rs:128:9\n@@ -186,22 +181,20 @@ error: missing documentation for a variant\n error: missing documentation for an enum\n    --> $DIR/missing-doc.rs:134:1\n     |\n-134 |   pub enum PubBaz {\n-    |  _^ starting here...\n+134 | / pub enum PubBaz {\n 135 | |     PubBazA {\n 136 | |         a: isize,\n 137 | |     },\n 138 | | }\n-    | |_^ ...ending here\n+    | |_^\n \n error: missing documentation for a variant\n    --> $DIR/missing-doc.rs:135:5\n     |\n-135 |       PubBazA {\n-    |  _____^ starting here...\n+135 | /     PubBazA {\n 136 | |         a: isize,\n 137 | |     },\n-    | |_____^ ...ending here\n+    | |_____^\n \n error: missing documentation for a struct field\n    --> $DIR/missing-doc.rs:136:9\n@@ -236,15 +229,14 @@ error: missing documentation for a static\n error: missing documentation for a module\n    --> $DIR/missing-doc.rs:180:1\n     |\n-180 |   mod internal_impl {\n-    |  _^ starting here...\n+180 | / mod internal_impl {\n 181 | |     /// dox\n 182 | |     pub fn documented() {}\n 183 | |     pub fn undocumented1() {}\n ...   |\n 192 | |     }\n 193 | | }\n-    | |_^ ...ending here\n+    | |_^\n \n error: missing documentation for a function\n    --> $DIR/missing-doc.rs:183:5"}, {"sha": "44041eae000e8c7bb0f3630ff04b9d4f5088971d", "filename": "tests/ui/module_inception.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fmodule_inception.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fmodule_inception.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmodule_inception.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,11 +1,10 @@\n error: module has the same name as its containing module\n  --> $DIR/module_inception.rs:7:9\n   |\n-7 |           mod bar {\n-  |  _________^ starting here...\n+7 | /         mod bar {\n 8 | |             mod foo {}\n 9 | |         }\n-  | |_________^ ...ending here\n+  | |_________^\n   |\n note: lint level defined here\n  --> $DIR/module_inception.rs:3:9\n@@ -16,11 +15,10 @@ note: lint level defined here\n error: module has the same name as its containing module\n   --> $DIR/module_inception.rs:12:5\n    |\n-12 |       mod foo {\n-   |  _____^ starting here...\n+12 | /     mod foo {\n 13 | |         mod bar {}\n 14 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n \n error: aborting due to 2 previous errors\n "}, {"sha": "6f465716e5c348bd5a7a55c13f614e782b6f213b", "filename": "tests/ui/never_loop.stderr", "status": "modified", "additions": 6, "deletions": 9, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fnever_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fnever_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnever_loop.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,12 +1,11 @@\n error: this loop never actually loops\n   --> $DIR/never_loop.rs:8:5\n    |\n-8  |       loop {\n-   |  _____^ starting here...\n+8  | /     loop {\n 9  | |         println!(\"This is only ever printed once\");\n 10 | |         break;\n 11 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n note: lint level defined here\n   --> $DIR/never_loop.rs:4:9\n@@ -17,25 +16,23 @@ note: lint level defined here\n error: this loop never actually loops\n   --> $DIR/never_loop.rs:21:5\n    |\n-21 |       loop {\n-   |  _____^ starting here...\n+21 | /     loop {\n 22 | |         loop {\n 23 | |             // another one\n 24 | |             break;\n 25 | |         }\n 26 | |         break;\n 27 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n \n error: this loop never actually loops\n   --> $DIR/never_loop.rs:22:9\n    |\n-22 |           loop {\n-   |  _________^ starting here...\n+22 | /         loop {\n 23 | |             // another one\n 24 | |             break;\n 25 | |         }\n-   | |_________^ ...ending here\n+   | |_________^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "fdde6303b0849b5682734dca99cad566af48b038", "filename": "tests/ui/ok_if_let.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fok_if_let.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fok_if_let.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fok_if_let.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -4,7 +4,7 @@\n #![deny(if_let_some_result)]\n \n fn str_to_int(x: &str) -> i32 {\n-    if let Some(y) = x.parse().ok() { \n+    if let Some(y) = x.parse().ok() {\n \n         y\n     } else {"}, {"sha": "42f60d4097d8b2982a8398abbbd84b7af6b12cc3", "filename": "tests/ui/ok_if_let.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fok_if_let.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fok_if_let.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fok_if_let.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,14 +1,13 @@\n error: Matching on `Some` with `ok()` is redundant\n   --> $DIR/ok_if_let.rs:7:5\n    |\n-7  |       if let Some(y) = x.parse().ok() { \n-   |  _____^ starting here...\n+7  | /     if let Some(y) = x.parse().ok() {\n 8  | |\n 9  | |         y\n 10 | |     } else {\n 11 | |         0\n 12 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n note: lint level defined here\n   --> $DIR/ok_if_let.rs:4:9"}, {"sha": "b8b489165d0ad5bb04b6dd37aaff4471ca8a2441", "filename": "tests/ui/serde.stderr", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fserde.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fserde.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fserde.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,14 +1,13 @@\n error: you should not implement `visit_string` without also implementing `visit_str`\n   --> $DIR/serde.rs:39:5\n    |\n-39 |       fn visit_string<E>(self, _v: String) -> Result<Self::Value, E>\n-   |  _____^ starting here...\n+39 | /     fn visit_string<E>(self, _v: String) -> Result<Self::Value, E>\n 40 | |\n 41 | |         where E: serde::de::Error,\n 42 | |     {\n 43 | |         unimplemented!()\n 44 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n note: lint level defined here\n   --> $DIR/serde.rs:3:9"}, {"sha": "5aaf351b241603d7cdd649be50fb3727b32c7eaa", "filename": "tests/ui/swap.stderr", "status": "modified", "additions": 14, "deletions": 19, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fswap.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fswap.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fswap.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,11 +1,10 @@\n error: this looks like you are swapping elements of `foo` manually\n   --> $DIR/swap.rs:11:5\n    |\n-11 |       let temp = foo[0];\n-   |  _____^ starting here...\n+11 | /     let temp = foo[0];\n 12 | |     foo[0] = foo[1];\n 13 | |     foo[1] = temp;\n-   | |_________________^ ...ending here\n+   | |_________________^\n    |\n    = note: #[deny(manual_swap)] implied by #[deny(clippy)]\n note: lint level defined here\n@@ -19,11 +18,10 @@ help: try\n error: this looks like you are swapping elements of `foo` manually\n   --> $DIR/swap.rs:23:5\n    |\n-23 |       let temp = foo[0];\n-   |  _____^ starting here...\n+23 | /     let temp = foo[0];\n 24 | |     foo[0] = foo[1];\n 25 | |     foo[1] = temp;\n-   | |_________________^ ...ending here\n+   | |_________________^\n    |\n    = note: #[deny(manual_swap)] implied by #[deny(clippy)]\n help: try\n@@ -32,11 +30,10 @@ help: try\n error: this looks like you are swapping elements of `foo` manually\n   --> $DIR/swap.rs:35:5\n    |\n-35 |       let temp = foo[0];\n-   |  _____^ starting here...\n+35 | /     let temp = foo[0];\n 36 | |     foo[0] = foo[1];\n 37 | |     foo[1] = temp;\n-   | |_________________^ ...ending here\n+   | |_________________^\n    |\n    = note: #[deny(manual_swap)] implied by #[deny(clippy)]\n help: try\n@@ -46,10 +43,10 @@ error: this looks like you are swapping `a` and `b` manually\n   --> $DIR/swap.rs:60:7\n    |\n 60 |       ; let t = a;\n-   |  _______^ starting here...\n+   |  _______^\n 61 | |     a = b;\n 62 | |     b = t;\n-   | |_________^ ...ending here\n+   | |_________^\n    |\n    = note: #[deny(manual_swap)] implied by #[deny(clippy)]\n help: try\n@@ -60,10 +57,10 @@ error: this looks like you are swapping `c.0` and `a` manually\n   --> $DIR/swap.rs:77:7\n    |\n 77 |       ; let t = c.0;\n-   |  _______^ starting here...\n+   |  _______^\n 78 | |     c.0 = a;\n 79 | |     a = t;\n-   | |_________^ ...ending here\n+   | |_________^\n    |\n    = note: #[deny(manual_swap)] implied by #[deny(clippy)]\n help: try\n@@ -73,10 +70,9 @@ help: try\n error: this looks like you are trying to swap `a` and `b`\n   --> $DIR/swap.rs:53:5\n    |\n-53 |       a = b;\n-   |  _____^ starting here...\n+53 | /     a = b;\n 54 | |     b = a;\n-   | |_________^ ...ending here\n+   | |_________^\n    |\n    = note: #[deny(almost_swapped)] implied by #[deny(clippy)]\n note: lint level defined here\n@@ -91,10 +87,9 @@ help: try\n error: this looks like you are trying to swap `c.0` and `a`\n   --> $DIR/swap.rs:70:5\n    |\n-70 |       c.0 = a;\n-   |  _____^ starting here...\n+70 | /     c.0 = a;\n 71 | |     a = c.0;\n-   | |___________^ ...ending here\n+   | |___________^\n    |\n    = note: #[deny(almost_swapped)] implied by #[deny(clippy)]\n help: try"}, {"sha": "8dce245ecc02fe5d930e26a5f8dec9e60c7264c9", "filename": "tests/ui/unused_labels.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Funused_labels.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Funused_labels.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_labels.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,11 +1,10 @@\n error: unused label `'label`\n   --> $DIR/unused_labels.rs:8:5\n    |\n-8  |       'label: for i in 1..2 {\n-   |  _____^ starting here...\n+8  | /     'label: for i in 1..2 {\n 9  | |         if i > 4 { continue }\n 10 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n note: lint level defined here\n   --> $DIR/unused_labels.rs:5:9\n@@ -22,11 +21,10 @@ error: unused label `'a`\n error: unused label `'same_label_in_two_fns`\n   --> $DIR/unused_labels.rs:32:5\n    |\n-32 |       'same_label_in_two_fns: loop {\n-   |  _____^ starting here...\n+32 | /     'same_label_in_two_fns: loop {\n 33 | |         let _ = 1;\n 34 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n \n error: aborting due to 3 previous errors\n "}, {"sha": "221b6a249b0593ac358eaefe2bb4f76f4f3722ee", "filename": "tests/ui/while_loop.stderr", "status": "modified", "additions": 16, "deletions": 24, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fwhile_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fui%2Fwhile_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwhile_loop.stderr?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -1,15 +1,14 @@\n error: this loop could be written as a `while let` loop\n   --> $DIR/while_loop.rs:9:5\n    |\n-9  |       loop {\n-   |  _____^ starting here...\n+9  | /     loop {\n 10 | |\n 11 | |\n 12 | |\n ...  |\n 17 | |         }\n 18 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n note: lint level defined here\n   --> $DIR/while_loop.rs:4:9\n@@ -22,78 +21,73 @@ help: try\n error: this loop could be written as a `while let` loop\n   --> $DIR/while_loop.rs:25:5\n    |\n-25 |       loop {\n-   |  _____^ starting here...\n+25 | /     loop {\n 26 | |\n 27 | |\n 28 | |\n ...  |\n 32 | |         };\n 33 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: try\n    |     while let Some(_x) = y { .. }\n \n error: this loop could be written as a `while let` loop\n   --> $DIR/while_loop.rs:34:5\n    |\n-34 |       loop {\n-   |  _____^ starting here...\n+34 | /     loop {\n 35 | |\n 36 | |\n 37 | |\n ...  |\n 43 | |         let _str = \"foo\";\n 44 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: try\n    |     while let Some(x) = y { .. }\n \n error: this loop could be written as a `while let` loop\n   --> $DIR/while_loop.rs:45:5\n    |\n-45 |       loop {\n-   |  _____^ starting here...\n+45 | /     loop {\n 46 | |\n 47 | |\n 48 | |\n ...  |\n 54 | |         { let _b = \"foobar\"; }\n 55 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: try\n    |     while let Some(x) = y { .. }\n \n error: this loop could be written as a `while let` loop\n   --> $DIR/while_loop.rs:70:5\n    |\n-70 |       loop {\n-   |  _____^ starting here...\n+70 | /     loop {\n 71 | |\n 72 | |\n 73 | |\n ...  |\n 79 | |         let _ = (e, l);\n 80 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: try\n    |     while let Some(word) = \"\".split_whitespace().next() { .. }\n \n error: this loop could be written as a `for` loop\n   --> $DIR/while_loop.rs:83:5\n    |\n-83 |       while let Option::Some(x) = iter.next() {\n-   |  _____^ starting here...\n+83 | /     while let Option::Some(x) = iter.next() {\n 84 | |\n 85 | |\n 86 | |\n 87 | |         println!(\"{}\", x);\n 88 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n note: lint level defined here\n   --> $DIR/while_loop.rs:4:37\n@@ -106,14 +100,13 @@ help: try\n error: this loop could be written as a `for` loop\n   --> $DIR/while_loop.rs:91:5\n    |\n-91 |       while let Some(x) = iter.next() {\n-   |  _____^ starting here...\n+91 | /     while let Some(x) = iter.next() {\n 92 | |\n 93 | |\n 94 | |\n 95 | |         println!(\"{}\", x);\n 96 | |     }\n-   | |_____^ ...ending here\n+   | |_____^\n    |\n help: try\n    |     for x in iter { .. }\n@@ -130,15 +123,14 @@ help: try\n error: this loop could be written as a `while let` loop\n    --> $DIR/while_loop.rs:142:5\n     |\n-142 |       loop {\n-    |  _____^ starting here...\n+142 | /     loop {\n 143 | |\n 144 | |\n 145 | |\n ...   |\n 150 | |         loop {}\n 151 | |     }\n-    | |_____^ ...ending here\n+    | |_____^\n     |\n help: try\n     |     while let Some(ele) = iter.next() { .. }"}, {"sha": "b323cb5d25b495f19401df07151263b566e5a949", "filename": "tests/used_underscore_binding_macro.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fused_underscore_binding_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/68369e5d37f01665bdd4345d1990207aee1cc3d9/tests%2Fused_underscore_binding_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fused_underscore_binding_macro.rs?ref=68369e5d37f01665bdd4345d1990207aee1cc3d9", "patch": "@@ -4,7 +4,8 @@\n #[macro_use]\n extern crate serde_derive;\n \n-/// Test that we do not lint for unused underscores in a `MacroAttribute` expansion\n+/// Test that we do not lint for unused underscores in a `MacroAttribute`\n+/// expansion\n #[deny(used_underscore_binding)]\n #[derive(Deserialize)]\n struct MacroAttributesTest {"}]}