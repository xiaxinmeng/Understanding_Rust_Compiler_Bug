{"sha": "9c906bd60a251c2f537000f90ea708186d8c97f6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljOTA2YmQ2MGEyNTFjMmY1MzcwMDBmOTBlYTcwODE4NmQ4Yzk3ZjY=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-03-05T10:09:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-03-05T10:09:11Z"}, "message": "Merge #3469\n\n3469: Cleanup SourceAnalyzer r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "204f25916588700a2c1ab1724c932e399454c125", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/204f25916588700a2c1ab1724c932e399454c125"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c906bd60a251c2f537000f90ea708186d8c97f6", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJeYM/HCRBK7hj4Ov3rIwAAdHIIAKL/GakySy8t17dJnqUIMp6B\naaWvo+WLVcS6c7/sjWrNaxlK79aNOcuWRS+jEXxOyoQ3xvOV+Z1RtV/LNo8Rc4no\nc/fhb9yloDl6fGalaRwJhLCo7d72kqpC7ajVp4xDtHKe3Nmrf8fc5c7pBjrZVw+V\n6vsT9NHZPFbiL8ZTz8ulPotBfDoNFkuI9Lyj1ls5+Jy5+C9uqe1lHGJEK9rF5hWP\nJS71KQIrjvS9zMn4sFMh6ZIKQIB5Jn5/rV1OJTAPBAGhR9lV/rmobsREXZLBbAZw\nlN9AbBX2pWolG+iWgtJqXwfyaxUdrg82FWPBh2xS4HfBDBVG+kH0Lr4CVGjGuww=\n=V8cg\n-----END PGP SIGNATURE-----\n", "payload": "tree 204f25916588700a2c1ab1724c932e399454c125\nparent e15cef70db98681dc82201e6054cc89283e093e0\nparent 7d873fcfa1cb56cf6e9571ece4e70bef90772469\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1583402951 +0000\ncommitter GitHub <noreply@github.com> 1583402951 +0000\n\nMerge #3469\n\n3469: Cleanup SourceAnalyzer r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c906bd60a251c2f537000f90ea708186d8c97f6", "html_url": "https://github.com/rust-lang/rust/commit/9c906bd60a251c2f537000f90ea708186d8c97f6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c906bd60a251c2f537000f90ea708186d8c97f6/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e15cef70db98681dc82201e6054cc89283e093e0", "url": "https://api.github.com/repos/rust-lang/rust/commits/e15cef70db98681dc82201e6054cc89283e093e0", "html_url": "https://github.com/rust-lang/rust/commit/e15cef70db98681dc82201e6054cc89283e093e0"}, {"sha": "7d873fcfa1cb56cf6e9571ece4e70bef90772469", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d873fcfa1cb56cf6e9571ece4e70bef90772469", "html_url": "https://github.com/rust-lang/rust/commit/7d873fcfa1cb56cf6e9571ece4e70bef90772469"}], "stats": {"total": 45, "additions": 19, "deletions": 26}, "files": [{"sha": "9f59d590ce308c76a7e1d676af66da5f720be0d9", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/9c906bd60a251c2f537000f90ea708186d8c97f6/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c906bd60a251c2f537000f90ea708186d8c97f6/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=9c906bd60a251c2f537000f90ea708186d8c97f6", "patch": "@@ -45,8 +45,7 @@ pub use crate::{\n         StructField, Trait, Type, TypeAlias, TypeParam, Union, VariantDef,\n     },\n     has_source::HasSource,\n-    semantics::{original_range, Semantics, SemanticsScope},\n-    source_analyzer::PathResolution,\n+    semantics::{original_range, PathResolution, Semantics, SemanticsScope},\n };\n \n pub use hir_def::{"}, {"sha": "965d185a474add56b49a50b098812a0587b6d0d4", "filename": "crates/ra_hir/src/semantics.rs", "status": "modified", "additions": 15, "deletions": 2, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/9c906bd60a251c2f537000f90ea708186d8c97f6/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c906bd60a251c2f537000f90ea708186d8c97f6/crates%2Fra_hir%2Fsrc%2Fsemantics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsemantics.rs?ref=9c906bd60a251c2f537000f90ea708186d8c97f6", "patch": "@@ -20,10 +20,23 @@ use crate::{\n     db::HirDatabase,\n     semantics::source_to_def::{ChildContainer, SourceToDefCache, SourceToDefCtx},\n     source_analyzer::{resolve_hir_path, SourceAnalyzer},\n-    Function, HirFileId, InFile, Local, MacroDef, Module, ModuleDef, Name, Origin, Path,\n-    PathResolution, ScopeDef, StructField, Trait, Type, TypeParam, VariantDef,\n+    AssocItem, Function, HirFileId, ImplDef, InFile, Local, MacroDef, Module, ModuleDef, Name,\n+    Origin, Path, ScopeDef, StructField, Trait, Type, TypeParam, VariantDef,\n };\n \n+#[derive(Debug, Clone, PartialEq, Eq)]\n+pub enum PathResolution {\n+    /// An item\n+    Def(ModuleDef),\n+    /// A local binding (only value namespace)\n+    Local(Local),\n+    /// A generic parameter\n+    TypeParam(TypeParam),\n+    SelfType(ImplDef),\n+    Macro(MacroDef),\n+    AssocItem(AssocItem),\n+}\n+\n /// Primary API to get semantic information, like types, from syntax trees.\n pub struct Semantics<'db, DB> {\n     pub db: &'db DB,"}, {"sha": "f3f1ed05a3777f38c2874cbd38410bee5b794cfb", "filename": "crates/ra_hir/src/source_analyzer.rs", "status": "modified", "additions": 3, "deletions": 22, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/9c906bd60a251c2f537000f90ea708186d8c97f6/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c906bd60a251c2f537000f90ea708186d8c97f6/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fsource_analyzer.rs?ref=9c906bd60a251c2f537000f90ea708186d8c97f6", "patch": "@@ -20,12 +20,12 @@ use hir_expand::{hygiene::Hygiene, name::AsName, HirFileId, InFile};\n use hir_ty::{InEnvironment, InferenceResult, TraitEnvironment};\n use ra_syntax::{\n     ast::{self, AstNode},\n-    SyntaxNode, SyntaxNodePtr, TextRange, TextUnit,\n+    SyntaxNode, SyntaxNodePtr, TextUnit,\n };\n \n use crate::{\n-    db::HirDatabase, Adt, Const, EnumVariant, Function, Local, MacroDef, ModPath, ModuleDef, Path,\n-    PathKind, Static, Struct, Trait, Type, TypeAlias, TypeParam,\n+    db::HirDatabase, semantics::PathResolution, Adt, Const, EnumVariant, Function, Local, MacroDef,\n+    ModPath, ModuleDef, Path, PathKind, Static, Struct, Trait, Type, TypeAlias, TypeParam,\n };\n \n /// `SourceAnalyzer` is a convenience wrapper which exposes HIR API in terms of\n@@ -40,25 +40,6 @@ pub(crate) struct SourceAnalyzer {\n     scopes: Option<Arc<ExprScopes>>,\n }\n \n-#[derive(Debug, Clone, PartialEq, Eq)]\n-pub enum PathResolution {\n-    /// An item\n-    Def(crate::ModuleDef),\n-    /// A local binding (only value namespace)\n-    Local(Local),\n-    /// A generic parameter\n-    TypeParam(TypeParam),\n-    SelfType(crate::ImplDef),\n-    Macro(MacroDef),\n-    AssocItem(crate::AssocItem),\n-}\n-\n-#[derive(Debug)]\n-pub struct ReferenceDescriptor {\n-    pub range: TextRange,\n-    pub name: String,\n-}\n-\n impl SourceAnalyzer {\n     pub(crate) fn new_for_body(\n         db: &impl HirDatabase,"}]}