{"sha": "f73c4a47682870f7eabac63882da7255eca0b463", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY3M2M0YTQ3NjgyODcwZjdlYWJhYzYzODgyZGE3MjU1ZWNhMGI0NjM=", "commit": {"author": {"name": "John-John Tedro", "email": "udoprog@tedro.se", "date": "2018-05-14T02:32:27Z"}, "committer": {"name": "John-John Tedro", "email": "udoprog@tedro.se", "date": "2018-05-14T10:56:18Z"}, "message": "env: remove unwrap in examples in favor of try op", "tree": {"sha": "bea16d7a05c5d1d479c0230030e1377c8c3981f6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bea16d7a05c5d1d479c0230030e1377c8c3981f6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f73c4a47682870f7eabac63882da7255eca0b463", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f73c4a47682870f7eabac63882da7255eca0b463", "html_url": "https://github.com/rust-lang/rust/commit/f73c4a47682870f7eabac63882da7255eca0b463", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f73c4a47682870f7eabac63882da7255eca0b463/comments", "author": {"login": "udoprog", "id": 111092, "node_id": "MDQ6VXNlcjExMTA5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/111092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/udoprog", "html_url": "https://github.com/udoprog", "followers_url": "https://api.github.com/users/udoprog/followers", "following_url": "https://api.github.com/users/udoprog/following{/other_user}", "gists_url": "https://api.github.com/users/udoprog/gists{/gist_id}", "starred_url": "https://api.github.com/users/udoprog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/udoprog/subscriptions", "organizations_url": "https://api.github.com/users/udoprog/orgs", "repos_url": "https://api.github.com/users/udoprog/repos", "events_url": "https://api.github.com/users/udoprog/events{/privacy}", "received_events_url": "https://api.github.com/users/udoprog/received_events", "type": "User", "site_admin": false}, "committer": {"login": "udoprog", "id": 111092, "node_id": "MDQ6VXNlcjExMTA5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/111092?v=4", "gravatar_id": "", "url": "https://api.github.com/users/udoprog", "html_url": "https://github.com/udoprog", "followers_url": "https://api.github.com/users/udoprog/followers", "following_url": "https://api.github.com/users/udoprog/following{/other_user}", "gists_url": "https://api.github.com/users/udoprog/gists{/gist_id}", "starred_url": "https://api.github.com/users/udoprog/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/udoprog/subscriptions", "organizations_url": "https://api.github.com/users/udoprog/orgs", "repos_url": "https://api.github.com/users/udoprog/repos", "events_url": "https://api.github.com/users/udoprog/events{/privacy}", "received_events_url": "https://api.github.com/users/udoprog/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f39dbae8cdc4418d3f79c719bd91d8b4f09c86b", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f39dbae8cdc4418d3f79c719bd91d8b4f09c86b", "html_url": "https://github.com/rust-lang/rust/commit/8f39dbae8cdc4418d3f79c719bd91d8b4f09c86b"}], "stats": {"total": 33, "additions": 21, "deletions": 12}, "files": [{"sha": "91e417c64da6e9a314de21be4a0950dfa7272df3", "filename": "src/libstd/env.rs", "status": "modified", "additions": 21, "deletions": 12, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/f73c4a47682870f7eabac63882da7255eca0b463/src%2Flibstd%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f73c4a47682870f7eabac63882da7255eca0b463/src%2Flibstd%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fenv.rs?ref=f73c4a47682870f7eabac63882da7255eca0b463", "patch": "@@ -49,9 +49,11 @@ use sys::os as os_imp;\n /// ```\n /// use std::env;\n ///\n-/// // We assume that we are in a valid directory.\n-/// let path = env::current_dir().unwrap();\n-/// println!(\"The current directory is {}\", path.display());\n+/// fn main() -> std::io::Result<()> {\n+///     let path = env::current_dir()?;\n+///     println!(\"The current directory is {}\", path.display());\n+///     Ok(())\n+/// }\n /// ```\n #[stable(feature = \"env\", since = \"1.0.0\")]\n pub fn current_dir() -> io::Result<PathBuf> {\n@@ -441,15 +443,18 @@ pub struct JoinPathsError {\n /// Joining paths on a Unix-like platform:\n ///\n /// ```\n-/// # if cfg!(unix) {\n /// use std::env;\n /// use std::ffi::OsString;\n /// use std::path::Path;\n ///\n-/// let paths = [Path::new(\"/bin\"), Path::new(\"/usr/bin\")];\n-/// let path_os_string = env::join_paths(paths.iter()).unwrap();\n-/// assert_eq!(path_os_string, OsString::from(\"/bin:/usr/bin\"));\n+/// fn main() -> Result<(), env::JoinPathsError> {\n+/// # if cfg!(unix) {\n+///     let paths = [Path::new(\"/bin\"), Path::new(\"/usr/bin\")];\n+///     let path_os_string = env::join_paths(paths.iter())?;\n+///     assert_eq!(path_os_string, OsString::from(\"/bin:/usr/bin\"));\n /// # }\n+///     Ok(())\n+/// }\n /// ```\n ///\n /// Joining a path containing a colon on a Unix-like platform results in an error:\n@@ -471,11 +476,15 @@ pub struct JoinPathsError {\n /// use std::env;\n /// use std::path::PathBuf;\n ///\n-/// if let Some(path) = env::var_os(\"PATH\") {\n-///     let mut paths = env::split_paths(&path).collect::<Vec<_>>();\n-///     paths.push(PathBuf::from(\"/home/xyz/bin\"));\n-///     let new_path = env::join_paths(paths).unwrap();\n-///     env::set_var(\"PATH\", &new_path);\n+/// fn main() -> Result<(), env::JoinPathsError> {\n+///     if let Some(path) = env::var_os(\"PATH\") {\n+///         let mut paths = env::split_paths(&path).collect::<Vec<_>>();\n+///         paths.push(PathBuf::from(\"/home/xyz/bin\"));\n+///         let new_path = env::join_paths(paths)?;\n+///         env::set_var(\"PATH\", &new_path);\n+///     }\n+///\n+///     Ok(())\n /// }\n /// ```\n #[stable(feature = \"env\", since = \"1.0.0\")]"}]}