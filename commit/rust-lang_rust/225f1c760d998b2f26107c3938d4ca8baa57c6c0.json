{"sha": "225f1c760d998b2f26107c3938d4ca8baa57c6c0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIyNWYxYzc2MGQ5OThiMmYyNjEwN2MzOTM4ZDRjYThiYWE1N2M2YzA=", "commit": {"author": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-07-27T01:03:26Z"}, "committer": {"name": "Erick Tryzelaar", "email": "erick.tryzelaar@gmail.com", "date": "2013-07-28T06:41:09Z"}, "message": "cleanup get_ref", "tree": {"sha": "d7a20e3265a86f76bfb27ee6dd90c15aeda15bc0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d7a20e3265a86f76bfb27ee6dd90c15aeda15bc0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/225f1c760d998b2f26107c3938d4ca8baa57c6c0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/225f1c760d998b2f26107c3938d4ca8baa57c6c0", "html_url": "https://github.com/rust-lang/rust/commit/225f1c760d998b2f26107c3938d4ca8baa57c6c0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/225f1c760d998b2f26107c3938d4ca8baa57c6c0/comments", "author": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "erickt", "id": 84711, "node_id": "MDQ6VXNlcjg0NzEx", "avatar_url": "https://avatars.githubusercontent.com/u/84711?v=4", "gravatar_id": "", "url": "https://api.github.com/users/erickt", "html_url": "https://github.com/erickt", "followers_url": "https://api.github.com/users/erickt/followers", "following_url": "https://api.github.com/users/erickt/following{/other_user}", "gists_url": "https://api.github.com/users/erickt/gists{/gist_id}", "starred_url": "https://api.github.com/users/erickt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/erickt/subscriptions", "organizations_url": "https://api.github.com/users/erickt/orgs", "repos_url": "https://api.github.com/users/erickt/repos", "events_url": "https://api.github.com/users/erickt/events{/privacy}", "received_events_url": "https://api.github.com/users/erickt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3078e83c3f1a643ddbdefa78095e4fbda3cecc02", "url": "https://api.github.com/repos/rust-lang/rust/commits/3078e83c3f1a643ddbdefa78095e4fbda3cecc02", "html_url": "https://github.com/rust-lang/rust/commit/3078e83c3f1a643ddbdefa78095e4fbda3cecc02"}], "stats": {"total": 31, "additions": 14, "deletions": 17}, "files": [{"sha": "7b660ed86240f2e24994b770b2d66d1cebfd4ff2", "filename": "src/libstd/result.rs", "status": "modified", "additions": 14, "deletions": 17, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/225f1c760d998b2f26107c3938d4ca8baa57c6c0/src%2Flibstd%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/225f1c760d998b2f26107c3938d4ca8baa57c6c0/src%2Flibstd%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fresult.rs?ref=225f1c760d998b2f26107c3938d4ca8baa57c6c0", "patch": "@@ -47,22 +47,6 @@ pub fn get<T:Clone,U>(res: &Result<T, U>) -> T {\n     }\n }\n \n-/**\n- * Get a reference to the value out of a successful result\n- *\n- * # Failure\n- *\n- * If the result is an error\n- */\n-#[inline]\n-pub fn get_ref<'a, T, U>(res: &'a Result<T, U>) -> &'a T {\n-    match *res {\n-        Ok(ref t) => t,\n-        Err(ref the_err) =>\n-            fail!(\"get_ref called on error result: %?\", *the_err)\n-    }\n-}\n-\n /**\n  * Get the value out of an error result\n  *\n@@ -229,8 +213,21 @@ pub fn map_err<T:Clone,E,F:Clone>(res: &Result<T, E>, op: &fn(&E) -> F)\n }\n \n impl<T, E> Result<T, E> {\n+    /**\n+     * Get a reference to the value out of a successful result\n+     *\n+     * # Failure\n+     *\n+     * If the result is an error\n+     */\n     #[inline]\n-    pub fn get_ref<'a>(&'a self) -> &'a T { get_ref(self) }\n+    pub fn get_ref<'a>(&'a self) -> &'a T {\n+        match *self {\n+        Ok(ref t) => t,\n+        Err(ref the_err) =>\n+            fail!(\"get_ref called on error result: %?\", *the_err)\n+        }\n+    }\n \n     #[inline]\n     pub fn is_ok(&self) -> bool { is_ok(self) }"}]}