{"sha": "beb3b5d22c709c19600ca6514d94f9cf1be44dca", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlYjNiNWQyMmM3MDljMTk2MDBjYTY1MTRkOTRmOWNmMWJlNDRkY2E=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-09-08T19:19:53Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2018-09-13T11:48:50Z"}, "message": "resolve: Introduce two sub-namespaces in macro namespace", "tree": {"sha": "de1432273793bc9c6b2716d6f0f51344d265bcb1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/de1432273793bc9c6b2716d6f0f51344d265bcb1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/beb3b5d22c709c19600ca6514d94f9cf1be44dca", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/beb3b5d22c709c19600ca6514d94f9cf1be44dca", "html_url": "https://github.com/rust-lang/rust/commit/beb3b5d22c709c19600ca6514d94f9cf1be44dca", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/beb3b5d22c709c19600ca6514d94f9cf1be44dca/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "994cdd918589535d705177545bf503cd0c3c5148", "url": "https://api.github.com/repos/rust-lang/rust/commits/994cdd918589535d705177545bf503cd0c3c5148", "html_url": "https://github.com/rust-lang/rust/commit/994cdd918589535d705177545bf503cd0c3c5148"}], "stats": {"total": 99, "additions": 64, "deletions": 35}, "files": [{"sha": "cf5a53b63188b2f2c473209030aee4314728443b", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=beb3b5d22c709c19600ca6514d94f9cf1be44dca", "patch": "@@ -118,11 +118,21 @@ pub struct ProcMacError {\n     warn_msg: &'static str,\n }\n \n-// For compatibility bang macros are skipped when resolving potentially built-in attributes.\n-fn macro_kind_mismatch(name: Name, requirement: Option<MacroKind>, candidate: Option<MacroKind>)\n-                       -> bool {\n-    requirement == Some(MacroKind::Attr) && candidate == Some(MacroKind::Bang) &&\n-    (name == \"test\" || name == \"bench\" || is_builtin_attr_name(name))\n+// Macro namespace is separated into two sub-namespaces, one for bang macros and\n+// one for attribute-like macros (attributes, derives).\n+// We ignore resolutions from one sub-namespace when searching names in scope for another.\n+fn sub_namespace_mismatch(requirement: Option<MacroKind>, candidate: Option<MacroKind>) -> bool {\n+    #[derive(PartialEq)]\n+    enum SubNS { Bang, AttrLike }\n+    let sub_ns = |kind| match kind {\n+        MacroKind::Bang => Some(SubNS::Bang),\n+        MacroKind::Attr | MacroKind::Derive => Some(SubNS::AttrLike),\n+        MacroKind::ProcMacroStub => None,\n+    };\n+    let requirement = requirement.and_then(|kind| sub_ns(kind));\n+    let candidate = candidate.and_then(|kind| sub_ns(kind));\n+    // \"No specific sub-namespace\" means \"matches anything\" for both requirements and candidates.\n+    candidate.is_some() && requirement.is_some() && candidate != requirement\n }\n \n impl<'a, 'crateloader: 'a> base::Resolver for Resolver<'a, 'crateloader> {\n@@ -641,10 +651,7 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n                     }\n                 }\n                 WhereToResolve::BuiltinAttrs => {\n-                    // FIXME: Only built-in attributes are not considered as candidates for\n-                    // non-attributes to fight off regressions on stable channel (#53205).\n-                    // We need to come up with some more principled approach instead.\n-                    if kind == Some(MacroKind::Attr) && is_builtin_attr_name(ident.name) {\n+                    if is_builtin_attr_name(ident.name) {\n                         let binding = (Def::NonMacroAttr(NonMacroAttrKind::Builtin),\n                                        ty::Visibility::Public, ident.span, Mark::root())\n                                        .to_name_binding(self.arenas);\n@@ -765,7 +772,7 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n \n             match result {\n                 Ok(result) => {\n-                    if macro_kind_mismatch(ident.name, kind, result.0.macro_kind()) {\n+                    if sub_namespace_mismatch(kind, result.0.macro_kind()) {\n                         continue_search!();\n                     }\n \n@@ -829,7 +836,7 @@ impl<'a, 'cl> Resolver<'a, 'cl> {\n         parent_scope: &ParentScope<'a>,\n         record_used: bool,\n     ) -> Option<&'a NameBinding<'a>> {\n-        if macro_kind_mismatch(ident.name, kind, Some(MacroKind::Bang)) {\n+        if sub_namespace_mismatch(kind, Some(MacroKind::Bang)) {\n             return None;\n         }\n "}, {"sha": "9912a89dafb3f0e799725e740baf8b623cb1ab5d", "filename": "src/test/ui-fulldeps/proc-macro/auxiliary/derive-helper-shadowed-2.rs", "status": "added", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-helper-shadowed-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-helper-shadowed-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-helper-shadowed-2.rs?ref=beb3b5d22c709c19600ca6514d94f9cf1be44dca", "patch": "@@ -0,0 +1,2 @@\n+#[macro_export]\n+macro_rules! my_attr { () => () }"}, {"sha": "4e701710f4212426b42618c87d2a6d2b86494e6b", "filename": "src/test/ui-fulldeps/proc-macro/auxiliary/derive-helper-shadowed.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-helper-shadowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-helper-shadowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fauxiliary%2Fderive-helper-shadowed.rs?ref=beb3b5d22c709c19600ca6514d94f9cf1be44dca", "patch": "@@ -0,0 +1,11 @@\n+// no-prefer-dynamic\n+\n+#![crate_type = \"proc-macro\"]\n+\n+extern crate proc_macro;\n+use proc_macro::*;\n+\n+#[proc_macro_derive(MyTrait, attributes(my_attr))]\n+pub fn foo(_: TokenStream) -> TokenStream {\n+    TokenStream::new()\n+}"}, {"sha": "792b54b3b945ae4a5f8e043934334b055896f912", "filename": "src/test/ui-fulldeps/proc-macro/derive-helper-shadowed.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fderive-helper-shadowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fderive-helper-shadowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fproc-macro%2Fderive-helper-shadowed.rs?ref=beb3b5d22c709c19600ca6514d94f9cf1be44dca", "patch": "@@ -0,0 +1,16 @@\n+// compile-pass\n+// aux-build:derive-helper-shadowed.rs\n+// aux-build:derive-helper-shadowed-2.rs\n+\n+#[macro_use]\n+extern crate derive_helper_shadowed;\n+#[macro_use(my_attr)]\n+extern crate derive_helper_shadowed_2;\n+\n+macro_rules! my_attr { () => () }\n+\n+#[derive(MyTrait)]\n+#[my_attr] // OK\n+struct S;\n+\n+fn main() {}"}, {"sha": "a4b8b48384d7aa59213dd67d81ca73053fb6ed70", "filename": "src/test/ui/issues/issue-11692-2.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui%2Fissues%2Fissue-11692-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui%2Fissues%2Fissue-11692-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11692-2.rs?ref=beb3b5d22c709c19600ca6514d94f9cf1be44dca", "patch": "@@ -9,5 +9,5 @@\n // except according to those terms.\n \n fn main() {\n-    concat!(test!()); //~ ERROR `test` can only be used in attributes\n+    concat!(test!()); //~ ERROR cannot find macro `test!` in this scope\n }"}, {"sha": "85f600dbff24e85712d7d16a428242cbe33e4459", "filename": "src/test/ui/issues/issue-11692-2.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui%2Fissues%2Fissue-11692-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui%2Fissues%2Fissue-11692-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-11692-2.stderr?ref=beb3b5d22c709c19600ca6514d94f9cf1be44dca", "patch": "@@ -1,7 +1,7 @@\n-error: `test` can only be used in attributes\n+error: cannot find macro `test!` in this scope\n   --> $DIR/issue-11692-2.rs:12:13\n    |\n-LL |     concat!(test!()); //~ ERROR `test` can only be used in attributes\n+LL |     concat!(test!()); //~ ERROR cannot find macro `test!` in this scope\n    |             ^^^^\n \n error: aborting due to previous error"}, {"sha": "597053d625134d831fa6f6c73a2a97ba1d670a51", "filename": "src/test/ui/macros/macro-path-prelude-fail-3.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.rs?ref=beb3b5d22c709c19600ca6514d94f9cf1be44dca", "patch": "@@ -1,16 +1,3 @@\n-// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-#[derive(inline)] //~ ERROR cannot find derive macro `inline` in this scope\n-struct S;\n-\n fn main() {\n     inline!(); //~ ERROR cannot find macro `inline!` in this scope\n }"}, {"sha": "1772325118174e88fd2c4051f33d1976b0302659", "filename": "src/test/ui/macros/macro-path-prelude-fail-3.stderr", "status": "modified", "additions": 2, "deletions": 8, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-3.stderr?ref=beb3b5d22c709c19600ca6514d94f9cf1be44dca", "patch": "@@ -1,14 +1,8 @@\n-error: cannot find derive macro `inline` in this scope\n-  --> $DIR/macro-path-prelude-fail-3.rs:11:10\n-   |\n-LL | #[derive(inline)] //~ ERROR cannot find derive macro `inline` in this scope\n-   |          ^^^^^^\n-\n error: cannot find macro `inline!` in this scope\n-  --> $DIR/macro-path-prelude-fail-3.rs:15:5\n+  --> $DIR/macro-path-prelude-fail-3.rs:2:5\n    |\n LL |     inline!(); //~ ERROR cannot find macro `inline!` in this scope\n    |     ^^^^^^ help: you could try the macro: `line`\n \n-error: aborting due to 2 previous errors\n+error: aborting due to previous error\n "}, {"sha": "283427b9acefed06708c98e5ef9265e7bb522556", "filename": "src/test/ui/macros/macro-path-prelude-fail-4.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-4.rs", "raw_url": "https://github.com/rust-lang/rust/raw/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-4.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-4.rs?ref=beb3b5d22c709c19600ca6514d94f9cf1be44dca", "patch": "@@ -0,0 +1,4 @@\n+#[derive(inline)] //~ ERROR expected a macro, found built-in attribute\n+struct S;\n+\n+fn main() {}"}, {"sha": "e354f345a4c2f437208482c7baa1d4d86ccbfc07", "filename": "src/test/ui/macros/macro-path-prelude-fail-4.stderr", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/beb3b5d22c709c19600ca6514d94f9cf1be44dca/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-path-prelude-fail-4.stderr?ref=beb3b5d22c709c19600ca6514d94f9cf1be44dca", "patch": "@@ -0,0 +1,8 @@\n+error: expected a macro, found built-in attribute\n+  --> $DIR/macro-path-prelude-fail-4.rs:1:10\n+   |\n+LL | #[derive(inline)] //~ ERROR expected a macro, found built-in attribute\n+   |          ^^^^^^\n+\n+error: aborting due to previous error\n+"}]}