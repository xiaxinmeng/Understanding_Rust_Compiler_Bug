{"sha": "d9e18ada39b52518c70df7801be564e58f4e8a66", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ5ZTE4YWRhMzliNTI1MThjNzBkZjc4MDFiZTU2NGU1OGY0ZThhNjY=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T03:50:58Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "astrauv@amazon.com", "date": "2020-04-27T21:26:36Z"}, "message": "Make sure to remove thread local data only if we have destructor.", "tree": {"sha": "25f9bf1c4cc7906bb6b3bd3718f733f1b6432162", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25f9bf1c4cc7906bb6b3bd3718f733f1b6432162"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d9e18ada39b52518c70df7801be564e58f4e8a66", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d9e18ada39b52518c70df7801be564e58f4e8a66", "html_url": "https://github.com/rust-lang/rust/commit/d9e18ada39b52518c70df7801be564e58f4e8a66", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d9e18ada39b52518c70df7801be564e58f4e8a66/comments", "author": null, "committer": null, "parents": [{"sha": "911ff7eade22e7bd15e79167a22845005f29b3fb", "url": "https://api.github.com/repos/rust-lang/rust/commits/911ff7eade22e7bd15e79167a22845005f29b3fb", "html_url": "https://github.com/rust-lang/rust/commit/911ff7eade22e7bd15e79167a22845005f29b3fb"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "7d4aae3670829f906accfb795656a0aaf60c28c0", "filename": "src/shims/tls.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d9e18ada39b52518c70df7801be564e58f4e8a66/src%2Fshims%2Ftls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d9e18ada39b52518c70df7801be564e58f4e8a66/src%2Fshims%2Ftls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Ftls.rs?ref=d9e18ada39b52518c70df7801be564e58f4e8a66", "patch": "@@ -181,8 +181,8 @@ impl<'tcx> TlsData<'tcx> {\n         {\n             match data.entry(thread_id) {\n                 Entry::Occupied(entry) => {\n-                    let data_scalar = entry.remove();\n                     if let Some(dtor) = dtor {\n+                        let data_scalar = entry.remove();\n                         let ret = Some((*dtor, data_scalar, key));\n                         return ret;\n                     }"}]}