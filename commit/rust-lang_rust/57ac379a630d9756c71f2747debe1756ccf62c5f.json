{"sha": "57ac379a630d9756c71f2747debe1756ccf62c5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU3YWMzNzlhNjMwZDk3NTZjNzFmMjc0N2RlYmUxNzU2Y2NmNjJjNWY=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-03-24T12:03:43Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-03-24T12:03:43Z"}, "message": "Correct overly broad definition of `'static` kind bound.\n\nWhile double-checking my understanding of the meaning of `'static`,\nI made the following test program:\n\n```rust\nfn foo<X:'static>(_x: X) { }\n\n#[cfg(not(acceptable))]\nfn bar() {\n    let a = 3;\n    let b = &a;\n    foo(b);\n}\n\n#[cfg(acceptable)]\nfn bar() {\n    static c : int = 4;;\n    let d : &'static int = &c;\n    foo(d);\n}\n\nfn main() {\n    bar();\n}\n```\n\nTranscript of compiling above program, illustrating that the `--cfg\nacceptable` variant of `bar` compiles successfully, showing that the\n`'static` kind bound only disallows non-`static` references, not *all*\nreferences:\n\n```\n% rustc --version\n/Users/fklock/opt/rust-dbg/bin/rustc 0.10-pre (caf17fe 2014-03-21 02:21:50 -0700)\nhost: x86_64-apple-darwin\n% rustc /tmp/s.rs\n/tmp/s.rs:7:5: 7:8 error: instantiating a type parameter with an incompatible type `&int`, which does not fulfill `'static`\n/tmp/s.rs:7     foo(b);\n                ^~~\nerror: aborting due to previous error\n% rustc --cfg acceptable /tmp/s.rs\n% ./s\n%\n```\n\n(Note that the explicit type annotation on `let d : &'static int` is\nnecessary; it did not suffice for me to just write `let d = &'static\nc;`.  That might be a latent bug, I am not sure yet.)\n\nAnyway, a fix to the documentation seemed prudent.", "tree": {"sha": "926afffd210b1f877fe604da9df4efb9f514b384", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/926afffd210b1f877fe604da9df4efb9f514b384"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57ac379a630d9756c71f2747debe1756ccf62c5f", "comment_count": 9, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57ac379a630d9756c71f2747debe1756ccf62c5f", "html_url": "https://github.com/rust-lang/rust/commit/57ac379a630d9756c71f2747debe1756ccf62c5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57ac379a630d9756c71f2747debe1756ccf62c5f/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c7f3b850ce11c70d5bef2b2d5155a1f0fdaa421", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c7f3b850ce11c70d5bef2b2d5155a1f0fdaa421", "html_url": "https://github.com/rust-lang/rust/commit/2c7f3b850ce11c70d5bef2b2d5155a1f0fdaa421"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "ef66fc7abe2e154ae422acd78c2cca421dd1cc4e", "filename": "src/doc/rust.md", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/57ac379a630d9756c71f2747debe1756ccf62c5f/src%2Fdoc%2Frust.md", "raw_url": "https://github.com/rust-lang/rust/raw/57ac379a630d9756c71f2747debe1756ccf62c5f/src%2Fdoc%2Frust.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Frust.md?ref=57ac379a630d9756c71f2747debe1756ccf62c5f", "patch": "@@ -3446,8 +3446,9 @@ The kinds are:\n     This kind includes scalars and immutable references,\n     as well as structural types containing other `Pod` types.\n `'static`\n-  : Types of this kind do not contain any references;\n-    this can be a useful guarantee for code\n+  : Types of this kind do not contain any references (except for\n+    references with the `static` lifetime, which are allowed).\n+    This can be a useful guarantee for code\n     that breaks borrowing assumptions\n     using [`unsafe` operations](#unsafe-functions).\n `Drop`"}]}