{"sha": "ce8abc63a7e1fcac4b69574e00a70352e583cec8", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlOGFiYzYzYTdlMWZjYWM0YjY5NTc0ZTAwYTcwMzUyZTU4M2NlYzg=", "commit": {"author": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-04-07T23:58:52Z"}, "committer": {"name": "Josh Stone", "email": "jistone@redhat.com", "date": "2020-04-07T23:58:52Z"}, "message": "Avoid extra &mut in Chain::fold and try_fold", "tree": {"sha": "140c01566c45282b0a019d5df75c7e90dd3595a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/140c01566c45282b0a019d5df75c7e90dd3595a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce8abc63a7e1fcac4b69574e00a70352e583cec8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce8abc63a7e1fcac4b69574e00a70352e583cec8", "html_url": "https://github.com/rust-lang/rust/commit/ce8abc63a7e1fcac4b69574e00a70352e583cec8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce8abc63a7e1fcac4b69574e00a70352e583cec8/comments", "author": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cuviper", "id": 36186, "node_id": "MDQ6VXNlcjM2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/36186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cuviper", "html_url": "https://github.com/cuviper", "followers_url": "https://api.github.com/users/cuviper/followers", "following_url": "https://api.github.com/users/cuviper/following{/other_user}", "gists_url": "https://api.github.com/users/cuviper/gists{/gist_id}", "starred_url": "https://api.github.com/users/cuviper/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cuviper/subscriptions", "organizations_url": "https://api.github.com/users/cuviper/orgs", "repos_url": "https://api.github.com/users/cuviper/repos", "events_url": "https://api.github.com/users/cuviper/events{/privacy}", "received_events_url": "https://api.github.com/users/cuviper/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2c4cffde3bdc36d9634ebf24e512f19aa6fe1ccb", "url": "https://api.github.com/repos/rust-lang/rust/commits/2c4cffde3bdc36d9634ebf24e512f19aa6fe1ccb", "html_url": "https://github.com/rust-lang/rust/commit/2c4cffde3bdc36d9634ebf24e512f19aa6fe1ccb"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "2dd405ced20e1577bdbe77ea7a86927a076b0862", "filename": "src/libcore/iter/adapters/chain.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ce8abc63a7e1fcac4b69574e00a70352e583cec8/src%2Flibcore%2Fiter%2Fadapters%2Fchain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce8abc63a7e1fcac4b69574e00a70352e583cec8/src%2Flibcore%2Fiter%2Fadapters%2Fchain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter%2Fadapters%2Fchain.rs?ref=ce8abc63a7e1fcac4b69574e00a70352e583cec8", "patch": "@@ -84,7 +84,7 @@ where\n             self.a = None;\n         }\n         if let Some(ref mut b) = self.b {\n-            acc = b.try_fold(acc, &mut f)?;\n+            acc = b.try_fold(acc, f)?;\n             self.b = None;\n         }\n         Try::from_ok(acc)\n@@ -98,7 +98,7 @@ where\n             acc = a.fold(acc, &mut f);\n         }\n         if let Some(b) = self.b {\n-            acc = b.fold(acc, &mut f);\n+            acc = b.fold(acc, f);\n         }\n         acc\n     }"}]}