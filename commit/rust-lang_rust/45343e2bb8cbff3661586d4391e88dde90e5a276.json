{"sha": "45343e2bb8cbff3661586d4391e88dde90e5a276", "node_id": "C_kwDOAAsO6NoAKDQ1MzQzZTJiYjhjYmZmMzY2MTU4NmQ0MzkxZTg4ZGRlOTBlNWEyNzY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-06T12:56:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-10-06T12:56:27Z"}, "message": "Auto merge of #9598 - nyurik:fix-comment, r=Alexendoo\n\nlint: fix a few comments\n\nminor cleanup per `@Alexendoo` [comment](https://github.com/rust-lang/rust-clippy/pull/9586#discussion_r988991976)\n\nchangelog: none", "tree": {"sha": "ad360971522cc6ce34dd2060913a8c43fccc57d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ad360971522cc6ce34dd2060913a8c43fccc57d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/45343e2bb8cbff3661586d4391e88dde90e5a276", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/45343e2bb8cbff3661586d4391e88dde90e5a276", "html_url": "https://github.com/rust-lang/rust/commit/45343e2bb8cbff3661586d4391e88dde90e5a276", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/45343e2bb8cbff3661586d4391e88dde90e5a276/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ac0e10aa68325235069a842f47499852b2dee79e", "url": "https://api.github.com/repos/rust-lang/rust/commits/ac0e10aa68325235069a842f47499852b2dee79e", "html_url": "https://github.com/rust-lang/rust/commit/ac0e10aa68325235069a842f47499852b2dee79e"}, {"sha": "c251f8d8dd010ac454deec0a39e7a6f3c19204c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c251f8d8dd010ac454deec0a39e7a6f3c19204c3", "html_url": "https://github.com/rust-lang/rust/commit/c251f8d8dd010ac454deec0a39e7a6f3c19204c3"}], "stats": {"total": 14, "additions": 1, "deletions": 13}, "files": [{"sha": "d4bb357fb4f5760a66c9bcdbe420f32f80576acd", "filename": "clippy_lints/src/format_args.rs", "status": "modified", "additions": 0, "deletions": 12, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/45343e2bb8cbff3661586d4391e88dde90e5a276/clippy_lints%2Fsrc%2Fformat_args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45343e2bb8cbff3661586d4391e88dde90e5a276/clippy_lints%2Fsrc%2Fformat_args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat_args.rs?ref=45343e2bb8cbff3661586d4391e88dde90e5a276", "patch": "@@ -173,18 +173,6 @@ fn check_uninlined_args(cx: &LateContext<'_>, args: &FormatArgsExpn<'_>, call_si\n         return;\n     }\n \n-    // FIXME: Properly ignore a rare case where the format string is wrapped in a macro.\n-    // Example:  `format!(indoc!(\"{}\"), foo);`\n-    // If inlined, they will cause a compilation error:\n-    //     > to avoid ambiguity, `format_args!` cannot capture variables\n-    //     > when the format string is expanded from a macro\n-    // @Alexendoo explanation:\n-    //     > indoc! is a proc macro that is producing a string literal with its span\n-    //     > set to its input it's not marked as from expansion, and since it's compatible\n-    //     > tokenization wise clippy_utils::is_from_proc_macro wouldn't catch it either\n-    // This might be a relatively expensive test, so do it only we are ready to replace.\n-    // See more examples in tests/ui/uninlined_format_args.rs\n-\n     span_lint_and_then(\n         cx,\n         UNINLINED_FORMAT_ARGS,"}, {"sha": "5a63c290a315fccffd9fbcad2071c7280cbc5e19", "filename": "clippy_utils/src/macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/45343e2bb8cbff3661586d4391e88dde90e5a276/clippy_utils%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/45343e2bb8cbff3661586d4391e88dde90e5a276/clippy_utils%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fmacros.rs?ref=45343e2bb8cbff3661586d4391e88dde90e5a276", "patch": "@@ -414,7 +414,7 @@ impl FormatString {\n \n struct FormatArgsValues<'tcx> {\n     /// Values passed after the format string and implicit captures. `[1, z + 2, x]` for\n-    /// `format!(\"{x} {} {y}\", 1, z + 2)`.\n+    /// `format!(\"{x} {} {}\", 1, z + 2)`.\n     value_args: Vec<&'tcx Expr<'tcx>>,\n     /// Maps an `rt::v1::Argument::position` or an `rt::v1::Count::Param` to its index in\n     /// `value_args`"}]}