{"sha": "64025bb168f3ae37428387ca37ba89eb80be6544", "node_id": "C_kwDOAAsO6NoAKDY0MDI1YmIxNjhmM2FlMzc0MjgzODdjYTM3YmE4OWViODBiZTY1NDQ", "commit": {"author": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-05-01T17:05:44Z"}, "committer": {"name": "Michael Howell", "email": "michael@notriddle.com", "date": "2023-05-25T15:13:23Z"}, "message": "bootstrap: enable Cargo `public-dependency` feature for `libstd`", "tree": {"sha": "f7a893a42b5bc4f1283db549ff7107980a583e1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f7a893a42b5bc4f1283db549ff7107980a583e1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/64025bb168f3ae37428387ca37ba89eb80be6544", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/64025bb168f3ae37428387ca37ba89eb80be6544", "html_url": "https://github.com/rust-lang/rust/commit/64025bb168f3ae37428387ca37ba89eb80be6544", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/64025bb168f3ae37428387ca37ba89eb80be6544/comments", "author": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "committer": {"login": "notriddle", "id": 1593513, "node_id": "MDQ6VXNlcjE1OTM1MTM=", "avatar_url": "https://avatars.githubusercontent.com/u/1593513?v=4", "gravatar_id": "", "url": "https://api.github.com/users/notriddle", "html_url": "https://github.com/notriddle", "followers_url": "https://api.github.com/users/notriddle/followers", "following_url": "https://api.github.com/users/notriddle/following{/other_user}", "gists_url": "https://api.github.com/users/notriddle/gists{/gist_id}", "starred_url": "https://api.github.com/users/notriddle/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/notriddle/subscriptions", "organizations_url": "https://api.github.com/users/notriddle/orgs", "repos_url": "https://api.github.com/users/notriddle/repos", "events_url": "https://api.github.com/users/notriddle/events{/privacy}", "received_events_url": "https://api.github.com/users/notriddle/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d300bffa4f0036e9138ef752610d08fc63f87a77", "url": "https://api.github.com/repos/rust-lang/rust/commits/d300bffa4f0036e9138ef752610d08fc63f87a77", "html_url": "https://github.com/rust-lang/rust/commit/d300bffa4f0036e9138ef752610d08fc63f87a77"}], "stats": {"total": 17, "additions": 13, "deletions": 4}, "files": [{"sha": "4765bb5d25a939fd1ac09cb1a2e94c99f8ee30b6", "filename": "library/std/Cargo.toml", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/64025bb168f3ae37428387ca37ba89eb80be6544/library%2Fstd%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/64025bb168f3ae37428387ca37ba89eb80be6544/library%2Fstd%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2FCargo.toml?ref=64025bb168f3ae37428387ca37ba89eb80be6544", "patch": "@@ -1,3 +1,5 @@\n+cargo-features = [\"public-dependency\"]\n+\n [package]\n name = \"std\"\n version = \"0.0.0\"\n@@ -10,12 +12,12 @@ edition = \"2021\"\n crate-type = [\"dylib\", \"rlib\"]\n \n [dependencies]\n-alloc = { path = \"../alloc\" }\n+alloc = { path = \"../alloc\", public = true }\n cfg-if = { version = \"1.0\", features = ['rustc-dep-of-std'] }\n panic_unwind = { path = \"../panic_unwind\", optional = true }\n panic_abort = { path = \"../panic_abort\" }\n-core = { path = \"../core\" }\n-libc = { version = \"0.2.143\", default-features = false, features = ['rustc-dep-of-std'] }\n+core = { path = \"../core\", public = true }\n+libc = { version = \"0.2.143\", default-features = false, features = ['rustc-dep-of-std'], public = true }\n compiler_builtins = { version = \"0.1.92\" }\n profiler_builtins = { path = \"../profiler_builtins\", optional = true }\n unwind = { path = \"../unwind\" }\n@@ -25,7 +27,7 @@ std_detect = { path = \"../stdarch/crates/std_detect\", default-features = false,\n # Dependencies of the `backtrace` crate\n addr2line = { version = \"0.19.0\", optional = true, default-features = false }\n rustc-demangle = { version = \"0.1.21\", features = ['rustc-dep-of-std'] }\n-miniz_oxide = { version = \"0.6.0\", optional = true, default-features = false }\n+miniz_oxide = { version = \"0.6.0\", optional = true, default-features = false, public = false }\n [dependencies.object]\n version = \"0.30.0\"\n optional = true"}, {"sha": "37336e1c08ff8f7309207173cfdb1a9871e99cbd", "filename": "library/std/tests/common/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/64025bb168f3ae37428387ca37ba89eb80be6544/library%2Fstd%2Ftests%2Fcommon%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64025bb168f3ae37428387ca37ba89eb80be6544/library%2Fstd%2Ftests%2Fcommon%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Ftests%2Fcommon%2Fmod.rs?ref=64025bb168f3ae37428387ca37ba89eb80be6544", "patch": "@@ -1,5 +1,7 @@\n #![allow(unused)]\n \n+#![allow(exported_private_dependencies)]\n+\n use std::env;\n use std::fs;\n use std::path::{Path, PathBuf};"}, {"sha": "d8671ef2639f31e67e5351b05b847a9863c6de6e", "filename": "src/bootstrap/metadata.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/64025bb168f3ae37428387ca37ba89eb80be6544/src%2Fbootstrap%2Fmetadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64025bb168f3ae37428387ca37ba89eb80be6544/src%2Fbootstrap%2Fmetadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmetadata.rs?ref=64025bb168f3ae37428387ca37ba89eb80be6544", "patch": "@@ -74,6 +74,7 @@ fn workspace_members(build: &Build) -> impl Iterator<Item = Package> {\n     let collect_metadata = |manifest_path| {\n         let mut cargo = Command::new(&build.initial_cargo);\n         cargo\n+            .env(\"RUSTC_BOOTSTRAP\", \"1\")\n             .arg(\"metadata\")\n             .arg(\"--format-version\")\n             .arg(\"1\")"}, {"sha": "2ad0ae527ac677ada930241e1e5911d92d6d8f2b", "filename": "src/tools/tidy/src/main.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/64025bb168f3ae37428387ca37ba89eb80be6544/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/64025bb168f3ae37428387ca37ba89eb80be6544/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fmain.rs?ref=64025bb168f3ae37428387ca37ba89eb80be6544", "patch": "@@ -16,6 +16,10 @@ use std::sync::atomic::{AtomicBool, Ordering};\n use std::thread::{self, scope, ScopedJoinHandle};\n \n fn main() {\n+    // Allow using unstable cargo features in the standard library.\n+    // `setenv` might not be thread safe, so run it before using multiple threads.\n+    env::set_var(\"RUSTC_BOOTSTRAP\", \"1\");\n+\n     let root_path: PathBuf = env::args_os().nth(1).expect(\"need path to root of repo\").into();\n     let cargo: PathBuf = env::args_os().nth(2).expect(\"need path to cargo\").into();\n     let output_directory: PathBuf ="}]}