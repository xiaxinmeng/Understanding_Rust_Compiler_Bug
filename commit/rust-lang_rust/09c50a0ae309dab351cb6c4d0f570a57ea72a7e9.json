{"sha": "09c50a0ae309dab351cb6c4d0f570a57ea72a7e9", "node_id": "C_kwDOAAsO6NoAKDA5YzUwYTBhZTMwOWRhYjM1MWNiNmM0ZDBmNTcwYTU3ZWE3MmE3ZTk", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-05-01T14:39:54Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2023-05-01T14:41:06Z"}, "message": "Explicitly document how Send and Sync relate to references\n\nSome of these relations were already mentioned in the text, but that\nSend is implemented for &mut impl Send was not mentioned,\nneither did the docs list when &T is Sync.", "tree": {"sha": "f8c075e3c45ae39b96665aeb5735d0e6f396273c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f8c075e3c45ae39b96665aeb5735d0e6f396273c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/09c50a0ae309dab351cb6c4d0f570a57ea72a7e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/09c50a0ae309dab351cb6c4d0f570a57ea72a7e9", "html_url": "https://github.com/rust-lang/rust/commit/09c50a0ae309dab351cb6c4d0f570a57ea72a7e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/09c50a0ae309dab351cb6c4d0f570a57ea72a7e9/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f2eb9f85b9b52e6538c3c7fc160725963272d471", "url": "https://api.github.com/repos/rust-lang/rust/commits/f2eb9f85b9b52e6538c3c7fc160725963272d471", "html_url": "https://github.com/rust-lang/rust/commit/f2eb9f85b9b52e6538c3c7fc160725963272d471"}], "stats": {"total": 7, "additions": 6, "deletions": 1}, "files": [{"sha": "82e4c6489745d803ae6217666b28693e55014ce8", "filename": "library/core/src/marker.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/09c50a0ae309dab351cb6c4d0f570a57ea72a7e9/library%2Fcore%2Fsrc%2Fmarker.rs", "raw_url": "https://github.com/rust-lang/rust/raw/09c50a0ae309dab351cb6c4d0f570a57ea72a7e9/library%2Fcore%2Fsrc%2Fmarker.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmarker.rs?ref=09c50a0ae309dab351cb6c4d0f570a57ea72a7e9", "patch": "@@ -24,7 +24,7 @@ use crate::hash::Hasher;\n /// operations. Its cousin [`sync::Arc`][arc] does use atomic operations (incurring\n /// some overhead) and thus is `Send`.\n ///\n-/// See [the Nomicon](../../nomicon/send-and-sync.html) for more details.\n+/// See [the Nomicon](../../nomicon/send-and-sync.html) and the [`Sync`] trait for more details.\n ///\n /// [`Rc`]: ../../std/rc/struct.Rc.html\n /// [arc]: ../../std/sync/struct.Arc.html\n@@ -426,6 +426,11 @@ pub macro Copy($item:item) {\n /// becomes read-only, as if it were a `& &T`. Hence there is no risk\n /// of a data race.\n ///\n+/// A shorter overview of how [`Sync`] and [`Send`] relate to referencing:\n+/// * `&T` is [`Send`] if and only if `T` is [`Sync`]\n+/// * `&mut T` is [`Send`] if and only if `T` is [`Send`]\n+/// * `&T` and `&mut T` are [`Sync`] if and only if `T` is [`Sync`]\n+///\n /// Types that are not `Sync` are those that have \"interior\n /// mutability\" in a non-thread-safe form, such as [`Cell`][cell]\n /// and [`RefCell`][refcell]. These types allow for mutation of"}]}