{"sha": "cb8df45333786fc89cd566bbaa71447bb4b105bd", "node_id": "C_kwDOAAsO6NoAKGNiOGRmNDUzMzM3ODZmYzg5Y2Q1NjZiYmFhNzE0NDdiYjRiMTA1YmQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-04T01:58:43Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-12-04T01:58:43Z"}, "message": "Auto merge of #10027 - smoelius:fix-10021, r=dswij\n\nFix 10021\n\nThis PR proposes a fix for #10021.\n\nThe problem is similar to the one that `@mikerite` described in #9505. The compiler is generating an empty substitution for a call, even though the type of `Self` seems to be needed for a predicate. In `@mikerite's` case, the call was to [`IntoFuture::into_future`](https://doc.rust-lang.org/std/future/trait.IntoFuture.html#tymethod.into_future). In this case, the call is to [`Try::branch`](https://doc.rust-lang.org/std/ops/trait.Try.html#tymethod.branch).\n\nThe proposed fix is to verify that the parameter whose type is changing has an index within the substitution. The strikes me as a reasonable approach, since if the check were to fail, the following code would be a no-op:\n\nhttps://github.com/rust-lang/rust-clippy/blob/4c123a06ba3c2ec17d3a4dfa251dccdc5368b712/clippy_lints/src/methods/unnecessary_to_owned.rs#L420-L428\n\nLike `@mikerite's` original solution, this solution turns ICEs into false negatives.\n\nchangelog: fix `unnecessary_to_owned` false positive involving `Try::branch`", "tree": {"sha": "129c61f85a65dedda7e80e19e38ba438867a8586", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/129c61f85a65dedda7e80e19e38ba438867a8586"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb8df45333786fc89cd566bbaa71447bb4b105bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb8df45333786fc89cd566bbaa71447bb4b105bd", "html_url": "https://github.com/rust-lang/rust/commit/cb8df45333786fc89cd566bbaa71447bb4b105bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb8df45333786fc89cd566bbaa71447bb4b105bd/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4c123a06ba3c2ec17d3a4dfa251dccdc5368b712", "url": "https://api.github.com/repos/rust-lang/rust/commits/4c123a06ba3c2ec17d3a4dfa251dccdc5368b712", "html_url": "https://github.com/rust-lang/rust/commit/4c123a06ba3c2ec17d3a4dfa251dccdc5368b712"}, {"sha": "2701a4076f3d18edc06781d7a9b3091ee5dbd05f", "url": "https://api.github.com/repos/rust-lang/rust/commits/2701a4076f3d18edc06781d7a9b3091ee5dbd05f", "html_url": "https://github.com/rust-lang/rust/commit/2701a4076f3d18edc06781d7a9b3091ee5dbd05f"}], "stats": {"total": 46, "additions": 42, "deletions": 4}, "files": [{"sha": "9263f0519724bcaa58d30f45ef2c05d6569ec230", "filename": "clippy_lints/src/methods/unnecessary_to_owned.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cb8df45333786fc89cd566bbaa71447bb4b105bd/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb8df45333786fc89cd566bbaa71447bb4b105bd/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fmethods%2Funnecessary_to_owned.rs?ref=cb8df45333786fc89cd566bbaa71447bb4b105bd", "patch": "@@ -386,14 +386,12 @@ fn can_change_type<'a>(cx: &LateContext<'a>, mut expr: &'a Expr<'a>, mut ty: Ty<\n             Node::Expr(parent_expr) => {\n                 if let Some((callee_def_id, call_substs, recv, call_args)) = get_callee_substs_and_args(cx, parent_expr)\n                 {\n-                    if Some(callee_def_id) == cx.tcx.lang_items().into_future_fn() {\n-                        return false;\n-                    }\n-\n                     let fn_sig = cx.tcx.fn_sig(callee_def_id).skip_binder();\n                     if let Some(arg_index) = recv.into_iter().chain(call_args).position(|arg| arg.hir_id == expr.hir_id)\n                         && let Some(param_ty) = fn_sig.inputs().get(arg_index)\n                         && let ty::Param(ParamTy { index: param_index , ..}) = param_ty.kind()\n+                        // https://github.com/rust-lang/rust-clippy/issues/9504 and https://github.com/rust-lang/rust-clippy/issues/10021\n+                        && (*param_index as usize) < call_substs.len()\n                     {\n                         if fn_sig\n                             .inputs()"}, {"sha": "345f6d604c4f005028cfda81242cbc275ba6923b", "filename": "tests/ui/unnecessary_to_owned.fixed", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/cb8df45333786fc89cd566bbaa71447bb4b105bd/tests%2Fui%2Funnecessary_to_owned.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/cb8df45333786fc89cd566bbaa71447bb4b105bd/tests%2Fui%2Funnecessary_to_owned.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_to_owned.fixed?ref=cb8df45333786fc89cd566bbaa71447bb4b105bd", "patch": "@@ -454,3 +454,23 @@ mod issue_9771b {\n         Key(v.to_vec())\n     }\n }\n+\n+// This is a watered down version of the code in: https://github.com/oxigraph/rio\n+// The ICE is triggered by the call to `to_owned` on this line:\n+// https://github.com/oxigraph/rio/blob/66635b9ff8e5423e58932353fa40d6e64e4820f7/testsuite/src/parser_evaluator.rs#L116\n+mod issue_10021 {\n+    #![allow(unused)]\n+\n+    pub struct Iri<T>(T);\n+\n+    impl<T: AsRef<str>> Iri<T> {\n+        pub fn parse(iri: T) -> Result<Self, ()> {\n+            unimplemented!()\n+        }\n+    }\n+\n+    pub fn parse_w3c_rdf_test_file(url: &str) -> Result<(), ()> {\n+        let base_iri = Iri::parse(url.to_owned())?;\n+        Ok(())\n+    }\n+}"}, {"sha": "7eb53df39e5b7dace2e82dd95030c53282b01919", "filename": "tests/ui/unnecessary_to_owned.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/cb8df45333786fc89cd566bbaa71447bb4b105bd/tests%2Fui%2Funnecessary_to_owned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cb8df45333786fc89cd566bbaa71447bb4b105bd/tests%2Fui%2Funnecessary_to_owned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funnecessary_to_owned.rs?ref=cb8df45333786fc89cd566bbaa71447bb4b105bd", "patch": "@@ -454,3 +454,23 @@ mod issue_9771b {\n         Key(v.to_vec())\n     }\n }\n+\n+// This is a watered down version of the code in: https://github.com/oxigraph/rio\n+// The ICE is triggered by the call to `to_owned` on this line:\n+// https://github.com/oxigraph/rio/blob/66635b9ff8e5423e58932353fa40d6e64e4820f7/testsuite/src/parser_evaluator.rs#L116\n+mod issue_10021 {\n+    #![allow(unused)]\n+\n+    pub struct Iri<T>(T);\n+\n+    impl<T: AsRef<str>> Iri<T> {\n+        pub fn parse(iri: T) -> Result<Self, ()> {\n+            unimplemented!()\n+        }\n+    }\n+\n+    pub fn parse_w3c_rdf_test_file(url: &str) -> Result<(), ()> {\n+        let base_iri = Iri::parse(url.to_owned())?;\n+        Ok(())\n+    }\n+}"}]}