{"sha": "677da1c4e5110805d66f576d5831c330da860521", "node_id": "C_kwDOAAsO6NoAKDY3N2RhMWM0ZTUxMTA4MDVkNjZmNTc2ZDU4MzFjMzMwZGE4NjA1MjE", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2023-05-18T05:22:33Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-18T05:22:33Z"}, "message": "Rollup merge of #110884 - korran:unaligned-scalar-mem, r=wesleywiser\n\nSupport RISC-V unaligned-scalar-mem target feature\n\nThis adds `unaligned-scalar-mem` as an allowed RISC-V target feature. Some RISC-V cores support unaligned access to memory without trapping. On such cores, the compiler could significantly improve code-size and performance when using functions like core::ptr::read_unaligned<u32> by emitting a single load or store instruction with an unaligned address, rather than a long sequence of byte load/store/bitmanip instructions.\n\nEnabling the `unaligned-scalar-mem` target feature allows LLVM to do this optimization.\n\nFixes #110883", "tree": {"sha": "f5b18fdbcd98f29df29b7c2d56863e2120150918", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5b18fdbcd98f29df29b7c2d56863e2120150918"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/677da1c4e5110805d66f576d5831c330da860521", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkZbYZCRBK7hj4Ov3rIwAAYpMIACjw2E4mn4XFTjhI4u1Bfz+/\npFLR5kdqYHgKhs98sIVWV3rtZF66E11YcCD+uFjuHdM8UR6Msa25LPp6cL6NEeJv\nARi/G6BcT3eJTMx1v4gir+1BWr01+NANn2B5ui9iiWGup5ZX6i0iV7F3Tr3b/rah\nk7ZgwnQN/kcXrInqBLxdsT71dr2sGeSaIsrkRE28rOxobWD/WS7f1Z6iodJNDJKi\nkWMdpNxAjnOoFExqqqzpvftTnnCRI0MXCqcGVziJZDWqRNJcQxZPxfT+JUHZa9qy\nvstL4eC/Zze2/8K3dFoHAH8taRgVMq63HOdeG5hKLHRFyOj9z/wwLCBBtnDSYv0=\n=wjOv\n-----END PGP SIGNATURE-----\n", "payload": "tree f5b18fdbcd98f29df29b7c2d56863e2120150918\nparent 77fb0cd3aa276919e00397f526616c5036562ea1\nparent 08f7e32a6ec132649aee2b586a9356a95320c5d8\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1684387353 +0530\ncommitter GitHub <noreply@github.com> 1684387353 +0530\n\nRollup merge of #110884 - korran:unaligned-scalar-mem, r=wesleywiser\n\nSupport RISC-V unaligned-scalar-mem target feature\n\nThis adds `unaligned-scalar-mem` as an allowed RISC-V target feature. Some RISC-V cores support unaligned access to memory without trapping. On such cores, the compiler could significantly improve code-size and performance when using functions like core::ptr::read_unaligned<u32> by emitting a single load or store instruction with an unaligned address, rather than a long sequence of byte load/store/bitmanip instructions.\n\nEnabling the `unaligned-scalar-mem` target feature allows LLVM to do this optimization.\n\nFixes #110883\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/677da1c4e5110805d66f576d5831c330da860521", "html_url": "https://github.com/rust-lang/rust/commit/677da1c4e5110805d66f576d5831c330da860521", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/677da1c4e5110805d66f576d5831c330da860521/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77fb0cd3aa276919e00397f526616c5036562ea1", "url": "https://api.github.com/repos/rust-lang/rust/commits/77fb0cd3aa276919e00397f526616c5036562ea1", "html_url": "https://github.com/rust-lang/rust/commit/77fb0cd3aa276919e00397f526616c5036562ea1"}, {"sha": "08f7e32a6ec132649aee2b586a9356a95320c5d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/08f7e32a6ec132649aee2b586a9356a95320c5d8", "html_url": "https://github.com/rust-lang/rust/commit/08f7e32a6ec132649aee2b586a9356a95320c5d8"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "c5976a65411fdd739afe6170077beb04099c4b67", "filename": "compiler/rustc_codegen_ssa/src/target_features.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/677da1c4e5110805d66f576d5831c330da860521/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "raw_url": "https://github.com/rust-lang/rust/raw/677da1c4e5110805d66f576d5831c330da860521/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Ftarget_features.rs?ref=677da1c4e5110805d66f576d5831c330da860521", "patch": "@@ -250,6 +250,7 @@ const RISCV_ALLOWED_FEATURES: &[(&str, Option<Symbol>)] = &[\n     (\"f\", Some(sym::riscv_target_feature)),\n     (\"m\", Some(sym::riscv_target_feature)),\n     (\"relax\", Some(sym::riscv_target_feature)),\n+    (\"unaligned-scalar-mem\", Some(sym::riscv_target_feature)),\n     (\"v\", Some(sym::riscv_target_feature)),\n     (\"zba\", Some(sym::riscv_target_feature)),\n     (\"zbb\", Some(sym::riscv_target_feature)),"}]}