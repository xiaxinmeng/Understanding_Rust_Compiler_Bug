{"sha": "cf840069f3975ad628c3e7cfa8353cbfa9e40cf7", "node_id": "C_kwDOAAsO6NoAKGNmODQwMDY5ZjM5NzVhZDYyOGMzZTdjZmE4MzUzY2JmYTllNDBjZjc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-12-10T08:24:44Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-12-10T08:24:44Z"}, "message": "Rollup merge of #105514 - estebank:is_visible, r=oli-obk\n\nIntroduce `Span::is_visible`\n\nr? `@oli-obk`", "tree": {"sha": "346297e2d15dab0abf6a6a5afcb4687914363efb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/346297e2d15dab0abf6a6a5afcb4687914363efb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cf840069f3975ad628c3e7cfa8353cbfa9e40cf7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJjlEJMCRBK7hj4Ov3rIwAAVQEIAKQaNHc9QlolfoAwQekNnEoy\n9kDGdpryLIrvX5Yy2QLXLqv1mMu0CaQgVvVAXqWcfyMk9min+c+zF0DW4qsWx0Ot\niiRsCsEPWSYnsN8vvsKGMT86M9yxrHHB2KKbJFSiL2iC9mBeHTP0ejc43lxt8wMv\n1DZhs/n/CU3DpI+4TaBYMYY2lIF6JdpTb8RbG74XGdqtnNWG7EgpoJ0ALZYjBnUy\ngTrLJLnHhLO5Sj4GNMQaL+xQcpEqAodTPi9dIEXo0+ARpF06iR4OfsCLOxa+2Rw1\neNdgd6x7luawOXjOnMWhCzvBizcHVn/DjHTFytVXKHLPB2iT3gGPOsHXKOkn3Kk=\n=MMpi\n-----END PGP SIGNATURE-----\n", "payload": "tree 346297e2d15dab0abf6a6a5afcb4687914363efb\nparent 9e87dd907e1cb29ca77a18f3888ee6980b625647\nparent b9da55afb5c2773b6fb50141aa71305891583526\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1670660684 +0100\ncommitter GitHub <noreply@github.com> 1670660684 +0100\n\nRollup merge of #105514 - estebank:is_visible, r=oli-obk\n\nIntroduce `Span::is_visible`\n\nr? `@oli-obk`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cf840069f3975ad628c3e7cfa8353cbfa9e40cf7", "html_url": "https://github.com/rust-lang/rust/commit/cf840069f3975ad628c3e7cfa8353cbfa9e40cf7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cf840069f3975ad628c3e7cfa8353cbfa9e40cf7/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9e87dd907e1cb29ca77a18f3888ee6980b625647", "url": "https://api.github.com/repos/rust-lang/rust/commits/9e87dd907e1cb29ca77a18f3888ee6980b625647", "html_url": "https://github.com/rust-lang/rust/commit/9e87dd907e1cb29ca77a18f3888ee6980b625647"}, {"sha": "b9da55afb5c2773b6fb50141aa71305891583526", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9da55afb5c2773b6fb50141aa71305891583526", "html_url": "https://github.com/rust-lang/rust/commit/b9da55afb5c2773b6fb50141aa71305891583526"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "335bfc3302f27c34bd0dada4f2e93840574a55f0", "filename": "compiler/rustc_span/src/lib.rs", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/cf840069f3975ad628c3e7cfa8353cbfa9e40cf7/compiler%2Frustc_span%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf840069f3975ad628c3e7cfa8353cbfa9e40cf7/compiler%2Frustc_span%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_span%2Fsrc%2Flib.rs?ref=cf840069f3975ad628c3e7cfa8353cbfa9e40cf7", "patch": "@@ -491,6 +491,10 @@ impl SpanData {\n     pub fn is_dummy(self) -> bool {\n         self.lo.0 == 0 && self.hi.0 == 0\n     }\n+    #[inline]\n+    pub fn is_visible(self, sm: &SourceMap) -> bool {\n+        !self.is_dummy() && sm.is_span_accessible(self.span())\n+    }\n     /// Returns `true` if `self` fully encloses `other`.\n     pub fn contains(self, other: Self) -> bool {\n         self.lo <= other.lo && other.hi <= self.hi\n@@ -556,6 +560,11 @@ impl Span {\n         self.data_untracked().is_dummy()\n     }\n \n+    #[inline]\n+    pub fn is_visible(self, sm: &SourceMap) -> bool {\n+        self.data_untracked().is_visible(sm)\n+    }\n+\n     /// Returns `true` if this span comes from any kind of macro, desugaring or inlining.\n     #[inline]\n     pub fn from_expansion(self) -> bool {"}, {"sha": "443d57aaf3dce8cc63b9606b1786b5be6d963e14", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/cf840069f3975ad628c3e7cfa8353cbfa9e40cf7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cf840069f3975ad628c3e7cfa8353cbfa9e40cf7/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=cf840069f3975ad628c3e7cfa8353cbfa9e40cf7", "patch": "@@ -2413,19 +2413,19 @@ impl<'tcx> TypeErrCtxtExt<'tcx> for TypeErrCtxt<'_, 'tcx> {\n             | ObligationCauseCode::ExprBindingObligation(item_def_id, span, ..) => {\n                 let item_name = tcx.def_path_str(item_def_id);\n                 let mut multispan = MultiSpan::from(span);\n+                let sm = tcx.sess.source_map();\n                 if let Some(ident) = tcx.opt_item_ident(item_def_id) {\n-                    let sm = tcx.sess.source_map();\n                     let same_line =\n                         match (sm.lookup_line(ident.span.hi()), sm.lookup_line(span.lo())) {\n                             (Ok(l), Ok(r)) => l.line == r.line,\n                             _ => true,\n                         };\n-                    if !ident.span.is_dummy() && !ident.span.overlaps(span) && !same_line {\n+                    if ident.span.is_visible(sm) && !ident.span.overlaps(span) && !same_line {\n                         multispan.push_span_label(ident.span, \"required by a bound in this\");\n                     }\n                 }\n                 let descr = format!(\"required by a bound in `{}`\", item_name);\n-                if !span.is_dummy() {\n+                if span.is_visible(sm) {\n                     let msg = format!(\"required by this bound in `{}`\", item_name);\n                     multispan.push_span_label(span, msg);\n                     err.span_note(multispan, &descr);"}, {"sha": "6c7ea007ee03e4cb6fa00d649597517d10c3c8ad", "filename": "src/test/ui/span/issue-71363.stderr", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/cf840069f3975ad628c3e7cfa8353cbfa9e40cf7/src%2Ftest%2Fui%2Fspan%2Fissue-71363.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/cf840069f3975ad628c3e7cfa8353cbfa9e40cf7/src%2Ftest%2Fui%2Fspan%2Fissue-71363.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-71363.stderr?ref=cf840069f3975ad628c3e7cfa8353cbfa9e40cf7", "patch": "@@ -8,8 +8,6 @@ error[E0277]: `MyError` doesn't implement `std::fmt::Display`\n   = note: in format strings you may be able to use `{:?}` (or {:#?} for pretty-print) instead\n note: required by a bound in `std::error::Error`\n  --> $SRC_DIR/core/src/error.rs:LL:COL\n-  |\n-  = note: required by this bound in `std::error::Error`\n \n error[E0277]: `MyError` doesn't implement `Debug`\n  --> $DIR/issue-71363.rs:4:6\n@@ -21,8 +19,6 @@ error[E0277]: `MyError` doesn't implement `Debug`\n   = note: add `#[derive(Debug)]` to `MyError` or manually `impl Debug for MyError`\n note: required by a bound in `std::error::Error`\n  --> $SRC_DIR/core/src/error.rs:LL:COL\n-  |\n-  = note: required by this bound in `std::error::Error`\n help: consider annotating `MyError` with `#[derive(Debug)]`\n   |\n 3 | #[derive(Debug)]"}]}