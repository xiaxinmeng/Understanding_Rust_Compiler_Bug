{"sha": "de362d88ea17ab23ca2483cb798bc7aeb81a48f5", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMzYyZDg4ZWExN2FiMjNjYTI0ODNjYjc5OGJjN2FlYjgxYTQ4ZjU=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-20T05:18:18Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2020-02-20T05:18:18Z"}, "message": "Auto merge of #67925 - petertodd:2020-fromstr-infallible, r=LukasKalbertodt\n\nChange FromStr for String to use Infallible directly\n\nFixes the confusing documentation on `ParseError` by making it irrelevant.\n\nIt might be fine to mark it as depreciated right now too - I can't imagine much code uses `ParseError` directly.", "tree": {"sha": "8dd6303cefd9491298b85fb2a01c45b001368051", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8dd6303cefd9491298b85fb2a01c45b001368051"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de362d88ea17ab23ca2483cb798bc7aeb81a48f5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de362d88ea17ab23ca2483cb798bc7aeb81a48f5", "html_url": "https://github.com/rust-lang/rust/commit/de362d88ea17ab23ca2483cb798bc7aeb81a48f5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de362d88ea17ab23ca2483cb798bc7aeb81a48f5/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "183e893aaae581bd0ab499ba56b6c5e118557dc7", "url": "https://api.github.com/repos/rust-lang/rust/commits/183e893aaae581bd0ab499ba56b6c5e118557dc7", "html_url": "https://github.com/rust-lang/rust/commit/183e893aaae581bd0ab499ba56b6c5e118557dc7"}, {"sha": "883e69db950522afb73fc9ad8ea122bacdd42ee4", "url": "https://api.github.com/repos/rust-lang/rust/commits/883e69db950522afb73fc9ad8ea122bacdd42ee4", "html_url": "https://github.com/rust-lang/rust/commit/883e69db950522afb73fc9ad8ea122bacdd42ee4"}], "stats": {"total": 15, "additions": 4, "deletions": 11}, "files": [{"sha": "f5afea15d655ee76ffc4587a28f22dd1fda46e84", "filename": "src/liballoc/string.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/de362d88ea17ab23ca2483cb798bc7aeb81a48f5/src%2Fliballoc%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de362d88ea17ab23ca2483cb798bc7aeb81a48f5/src%2Fliballoc%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fstring.rs?ref=de362d88ea17ab23ca2483cb798bc7aeb81a48f5", "patch": "@@ -2106,26 +2106,19 @@ impl ops::DerefMut for String {\n     }\n }\n \n-/// An error when parsing a `String`.\n+/// A type alias for [`Infallible`].\n ///\n-/// This `enum` is slightly awkward: it will never actually exist. This error is\n-/// part of the type signature of the implementation of [`FromStr`] on\n-/// [`String`]. The return type of [`from_str`], requires that an error be\n-/// defined, but, given that a [`String`] can always be made into a new\n-/// [`String`] without error, this type will never actually be returned. As\n-/// such, it is only here to satisfy said signature, and is useless otherwise.\n+/// This alias exists for backwards compatibility, and may be eventually deprecated.\n ///\n-/// [`FromStr`]: ../../std/str/trait.FromStr.html\n-/// [`String`]: struct.String.html\n-/// [`from_str`]: ../../std/str/trait.FromStr.html#tymethod.from_str\n+/// [`Infallible`]: ../../core/convert/enum.Infallible.html\n #[stable(feature = \"str_parse_error\", since = \"1.5.0\")]\n pub type ParseError = core::convert::Infallible;\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n impl FromStr for String {\n     type Err = core::convert::Infallible;\n     #[inline]\n-    fn from_str(s: &str) -> Result<String, ParseError> {\n+    fn from_str(s: &str) -> Result<String, Self::Err> {\n         Ok(String::from(s))\n     }\n }"}]}