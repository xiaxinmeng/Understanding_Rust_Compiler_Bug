{"sha": "143b8816a3cc478ec8d214efade98245eb5b3c82", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE0M2I4ODE2YTNjYzQ3OGVjOGQyMTRlZmFkZTk4MjQ1ZWI1YjNjODI=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-04-01T12:29:55Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2020-04-28T09:34:53Z"}, "message": "Stop leaking memory.", "tree": {"sha": "cba395dadf793c995a4524fadabfbf74c607f4ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cba395dadf793c995a4524fadabfbf74c607f4ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/143b8816a3cc478ec8d214efade98245eb5b3c82", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/143b8816a3cc478ec8d214efade98245eb5b3c82", "html_url": "https://github.com/rust-lang/rust/commit/143b8816a3cc478ec8d214efade98245eb5b3c82", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/143b8816a3cc478ec8d214efade98245eb5b3c82/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e56c4004326cb83ec433788fa8f2fc6cd4dd391a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e56c4004326cb83ec433788fa8f2fc6cd4dd391a", "html_url": "https://github.com/rust-lang/rust/commit/e56c4004326cb83ec433788fa8f2fc6cd4dd391a"}], "stats": {"total": 13, "additions": 6, "deletions": 7}, "files": [{"sha": "e2fe6f7207ba6792cbdb7f4ef68897372b398b88", "filename": "src/librustc_query_system/query/caches.rs", "status": "modified", "additions": 6, "deletions": 7, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/143b8816a3cc478ec8d214efade98245eb5b3c82/src%2Flibrustc_query_system%2Fquery%2Fcaches.rs", "raw_url": "https://github.com/rust-lang/rust/raw/143b8816a3cc478ec8d214efade98245eb5b3c82/src%2Flibrustc_query_system%2Fquery%2Fcaches.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_query_system%2Fquery%2Fcaches.rs?ref=143b8816a3cc478ec8d214efade98245eb5b3c82", "patch": "@@ -143,16 +143,13 @@ impl<'tcx, K: Eq + Hash, V: 'tcx> CacheSelector<K, V> for ArenaCacheSelector<'tc\n }\n \n pub struct ArenaCache<'tcx, K, V> {\n-    arena: WorkerLocal<&'tcx TypedArena<(V, DepNodeIndex)>>,\n-    phantom: PhantomData<K>,\n+    arena: WorkerLocal<TypedArena<(V, DepNodeIndex)>>,\n+    phantom: PhantomData<(K, &'tcx V)>,\n }\n \n impl<'tcx, K, V> Default for ArenaCache<'tcx, K, V> {\n     fn default() -> Self {\n-        ArenaCache {\n-            arena: WorkerLocal::new(|_| &*Box::leak(Box::new(TypedArena::default()))),\n-            phantom: PhantomData,\n-        }\n+        ArenaCache { arena: WorkerLocal::new(|_| TypedArena::default()), phantom: PhantomData }\n     }\n }\n \n@@ -162,7 +159,8 @@ impl<'tcx, K: Eq + Hash, V: 'tcx> QueryStorage for ArenaCache<'tcx, K, V> {\n \n     fn store_nocache(&self, value: Self::Value) -> Self::Stored {\n         let value = self.arena.alloc((value, DepNodeIndex::INVALID));\n-        &value.0\n+        let value = unsafe { &*(&value.0 as *const _) };\n+        &value\n     }\n }\n \n@@ -204,6 +202,7 @@ impl<'tcx, K: Eq + Hash, V: 'tcx> QueryCache for ArenaCache<'tcx, K, V> {\n         index: DepNodeIndex,\n     ) -> Self::Stored {\n         let value = self.arena.alloc((value, index));\n+        let value = unsafe { &*(value as *const _) };\n         lock_sharded_storage.insert(key, value);\n         &value.0\n     }"}]}