{"sha": "ef5a545f9860fbbea3f6c94bad60ab87f384d458", "node_id": "C_kwDOAAsO6NoAKGVmNWE1NDVmOTg2MGZiYmVhM2Y2Yzk0YmFkNjBhYjg3ZjM4NGQ0NTg", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-07T00:28:00Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-07T00:28:00Z"}, "message": "Auto merge of #10164 - khuey:default_enum_unit_variant_msrv, r=llogiq\n\nRestrict suggestion of deriving Default for enums to MSRV 1.62.\n\nSee https://blog.rust-lang.org/2022/06/30/Rust-1.62.0.html#default-enum-variants\n\n---\n\nchangelog: none", "tree": {"sha": "1f04c6deb4ccb24648f29f8c700440ba52ab7546", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f04c6deb4ccb24648f29f8c700440ba52ab7546"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ef5a545f9860fbbea3f6c94bad60ab87f384d458", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ef5a545f9860fbbea3f6c94bad60ab87f384d458", "html_url": "https://github.com/rust-lang/rust/commit/ef5a545f9860fbbea3f6c94bad60ab87f384d458", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ef5a545f9860fbbea3f6c94bad60ab87f384d458/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19b79c485e30f0fe3f782ad6138ace7db820f2c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/19b79c485e30f0fe3f782ad6138ace7db820f2c8", "html_url": "https://github.com/rust-lang/rust/commit/19b79c485e30f0fe3f782ad6138ace7db820f2c8"}, {"sha": "6433d796a1e22ea37f9b51bda5248b9ac82df578", "url": "https://api.github.com/repos/rust-lang/rust/commits/6433d796a1e22ea37f9b51bda5248b9ac82df578", "html_url": "https://github.com/rust-lang/rust/commit/6433d796a1e22ea37f9b51bda5248b9ac82df578"}], "stats": {"total": 26, "additions": 20, "deletions": 6}, "files": [{"sha": "bc18e2e5ed5fdcd25e1d824dc79547e0efa8a738", "filename": "clippy_lints/src/derivable_impls.rs", "status": "modified", "additions": 17, "deletions": 3, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ef5a545f9860fbbea3f6c94bad60ab87f384d458/clippy_lints%2Fsrc%2Fderivable_impls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef5a545f9860fbbea3f6c94bad60ab87f384d458/clippy_lints%2Fsrc%2Fderivable_impls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fderivable_impls.rs?ref=ef5a545f9860fbbea3f6c94bad60ab87f384d458", "patch": "@@ -1,4 +1,5 @@\n use clippy_utils::diagnostics::span_lint_and_then;\n+use clippy_utils::msrvs::{self, Msrv};\n use clippy_utils::source::indent_of;\n use clippy_utils::{is_default_equivalent, peel_blocks};\n use rustc_errors::Applicability;\n@@ -8,7 +9,7 @@ use rustc_hir::{\n };\n use rustc_lint::{LateContext, LateLintPass};\n use rustc_middle::ty::{AdtDef, DefIdTree};\n-use rustc_session::{declare_lint_pass, declare_tool_lint};\n+use rustc_session::{declare_tool_lint, impl_lint_pass};\n use rustc_span::sym;\n \n declare_clippy_lint! {\n@@ -53,7 +54,18 @@ declare_clippy_lint! {\n     \"manual implementation of the `Default` trait which is equal to a derive\"\n }\n \n-declare_lint_pass!(DerivableImpls => [DERIVABLE_IMPLS]);\n+pub struct DerivableImpls {\n+    msrv: Msrv,\n+}\n+\n+impl DerivableImpls {\n+    #[must_use]\n+    pub fn new(msrv: Msrv) -> Self {\n+        DerivableImpls { msrv }\n+    }\n+}\n+\n+impl_lint_pass!(DerivableImpls => [DERIVABLE_IMPLS]);\n \n fn is_path_self(e: &Expr<'_>) -> bool {\n     if let ExprKind::Path(QPath::Resolved(_, p)) = e.kind {\n@@ -181,10 +193,12 @@ impl<'tcx> LateLintPass<'tcx> for DerivableImpls {\n             then {\n                 if adt_def.is_struct() {\n                     check_struct(cx, item, self_ty, func_expr, adt_def);\n-                } else if adt_def.is_enum() {\n+                } else if adt_def.is_enum() && self.msrv.meets(msrvs::DEFAULT_ENUM_ATTRIBUTE) {\n                     check_enum(cx, item, func_expr, adt_def);\n                 }\n             }\n         }\n     }\n+\n+    extract_msrv_attr!(LateContext);\n }"}, {"sha": "d8e2ae02c5a65cf1467d0cfee62e5edbf87c14dc", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ef5a545f9860fbbea3f6c94bad60ab87f384d458/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef5a545f9860fbbea3f6c94bad60ab87f384d458/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=ef5a545f9860fbbea3f6c94bad60ab87f384d458", "patch": "@@ -639,7 +639,7 @@ pub fn register_plugins(store: &mut rustc_lint::LintStore, sess: &Session, conf:\n     store.register_late_pass(|_| Box::new(panic_unimplemented::PanicUnimplemented));\n     store.register_late_pass(|_| Box::new(strings::StringLitAsBytes));\n     store.register_late_pass(|_| Box::new(derive::Derive));\n-    store.register_late_pass(|_| Box::new(derivable_impls::DerivableImpls));\n+    store.register_late_pass(move |_| Box::new(derivable_impls::DerivableImpls::new(msrv())));\n     store.register_late_pass(|_| Box::new(drop_forget_ref::DropForgetRef));\n     store.register_late_pass(|_| Box::new(empty_enum::EmptyEnum));\n     store.register_late_pass(|_| Box::new(invalid_upcast_comparisons::InvalidUpcastComparisons));"}, {"sha": "dbf9f3b621d7aaa3c4c5531f64a4eb4b09a702e1", "filename": "clippy_utils/src/msrvs.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/ef5a545f9860fbbea3f6c94bad60ab87f384d458/clippy_utils%2Fsrc%2Fmsrvs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ef5a545f9860fbbea3f6c94bad60ab87f384d458/clippy_utils%2Fsrc%2Fmsrvs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_utils%2Fsrc%2Fmsrvs.rs?ref=ef5a545f9860fbbea3f6c94bad60ab87f384d458", "patch": "@@ -20,8 +20,9 @@ macro_rules! msrv_aliases {\n // names may refer to stabilized feature flags or library items\n msrv_aliases! {\n     1,65,0 { LET_ELSE }\n-    1,62,0 { BOOL_THEN_SOME }\n+    1,62,0 { BOOL_THEN_SOME, DEFAULT_ENUM_ATTRIBUTE }\n     1,58,0 { FORMAT_ARGS_CAPTURE, PATTERN_TRAIT_CHAR_ARRAY }\n+    1,55,0 { SEEK_REWIND }\n     1,53,0 { OR_PATTERNS, MANUAL_BITS, BTREE_MAP_RETAIN, BTREE_SET_RETAIN, ARRAY_INTO_ITERATOR }\n     1,52,0 { STR_SPLIT_ONCE, REM_EUCLID_CONST }\n     1,51,0 { BORROW_AS_PTR, SEEK_FROM_CURRENT, UNSIGNED_ABS }\n@@ -45,7 +46,6 @@ msrv_aliases! {\n     1,18,0 { HASH_MAP_RETAIN, HASH_SET_RETAIN }\n     1,17,0 { FIELD_INIT_SHORTHAND, STATIC_IN_CONST, EXPECT_ERR }\n     1,16,0 { STR_REPEAT }\n-    1,55,0 { SEEK_REWIND }\n }\n \n fn parse_msrv(msrv: &str, sess: Option<&Session>, span: Option<Span>) -> Option<RustcVersion> {"}]}