{"sha": "26a79e3c204496f55b8c6ff9db741672554f1705", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2YTc5ZTNjMjA0NDk2ZjU1YjhjNmZmOWRiNzQxNjcyNTU0ZjE3MDU=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-03-21T12:20:12Z"}, "committer": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2015-03-24T21:27:22Z"}, "message": "Added `Write` bounds to avoid a specialized Drop impl for `BufWriter`.", "tree": {"sha": "bda3a756d699c9b683ed9f416c998ec2cbcb9c3d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bda3a756d699c9b683ed9f416c998ec2cbcb9c3d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/26a79e3c204496f55b8c6ff9db741672554f1705", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/26a79e3c204496f55b8c6ff9db741672554f1705", "html_url": "https://github.com/rust-lang/rust/commit/26a79e3c204496f55b8c6ff9db741672554f1705", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/26a79e3c204496f55b8c6ff9db741672554f1705/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0adab507bbb0b04fe389a00af19fc17753b76343", "url": "https://api.github.com/repos/rust-lang/rust/commits/0adab507bbb0b04fe389a00af19fc17753b76343", "html_url": "https://github.com/rust-lang/rust/commit/0adab507bbb0b04fe389a00af19fc17753b76343"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "2a1294f23b20e9a33384abf6d83f14b5ab548a12", "filename": "src/libstd/io/buffered.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/26a79e3c204496f55b8c6ff9db741672554f1705/src%2Flibstd%2Fio%2Fbuffered.rs", "raw_url": "https://github.com/rust-lang/rust/raw/26a79e3c204496f55b8c6ff9db741672554f1705/src%2Flibstd%2Fio%2Fbuffered.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fbuffered.rs?ref=26a79e3c204496f55b8c6ff9db741672554f1705", "patch": "@@ -120,7 +120,7 @@ impl<R> fmt::Debug for BufReader<R> where R: fmt::Debug {\n ///\n /// The buffer will be written out when the writer is dropped.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub struct BufWriter<W> {\n+pub struct BufWriter<W: Write> {\n     inner: Option<W>,\n     buf: Vec<u8>,\n }\n@@ -220,7 +220,7 @@ impl<W: Write> Write for BufWriter<W> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<W> fmt::Debug for BufWriter<W> where W: fmt::Debug {\n+impl<W: Write> fmt::Debug for BufWriter<W> where W: fmt::Debug {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n         write!(fmt, \"BufWriter {{ writer: {:?}, buffer: {}/{} }}\",\n                self.inner.as_ref().unwrap(), self.buf.len(), self.buf.capacity())\n@@ -276,7 +276,7 @@ impl<W> fmt::Display for IntoInnerError<W> {\n ///\n /// The buffer will be written out when the writer is dropped.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub struct LineWriter<W> {\n+pub struct LineWriter<W: Write> {\n     inner: BufWriter<W>,\n }\n \n@@ -335,24 +335,24 @@ impl<W: Write> Write for LineWriter<W> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<W> fmt::Debug for LineWriter<W> where W: fmt::Debug {\n+impl<W: Write> fmt::Debug for LineWriter<W> where W: fmt::Debug {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n         write!(fmt, \"LineWriter {{ writer: {:?}, buffer: {}/{} }}\",\n                self.inner.inner, self.inner.buf.len(),\n                self.inner.buf.capacity())\n     }\n }\n \n-struct InternalBufWriter<W>(BufWriter<W>);\n+struct InternalBufWriter<W: Write>(BufWriter<W>);\n \n-impl<W> InternalBufWriter<W> {\n+impl<W: Read + Write> InternalBufWriter<W> {\n     fn get_mut(&mut self) -> &mut BufWriter<W> {\n         let InternalBufWriter(ref mut w) = *self;\n         return w;\n     }\n }\n \n-impl<W: Read> Read for InternalBufWriter<W> {\n+impl<W: Read + Write> Read for InternalBufWriter<W> {\n     fn read(&mut self, buf: &mut [u8]) -> io::Result<usize> {\n         self.get_mut().inner.as_mut().unwrap().read(buf)\n     }\n@@ -367,7 +367,7 @@ impl<W: Read> Read for InternalBufWriter<W> {\n ///\n /// The output buffer will be written out when this stream is dropped.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-pub struct BufStream<S> {\n+pub struct BufStream<S: Write> {\n     inner: BufReader<InternalBufWriter<S>>\n }\n \n@@ -448,7 +448,7 @@ impl<S: Read + Write> Write for BufStream<S> {\n }\n \n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n-impl<S> fmt::Debug for BufStream<S> where S: fmt::Debug {\n+impl<S: Write> fmt::Debug for BufStream<S> where S: fmt::Debug {\n     fn fmt(&self, fmt: &mut fmt::Formatter) -> fmt::Result {\n         let reader = &self.inner;\n         let writer = &self.inner.inner.0;"}]}