{"sha": "cb4f081b5e8278e0445ae67320fb80d274cd8e11", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiNGYwODFiNWU4Mjc4ZTA0NDVhZTY3MzIwZmI4MGQyNzRjZDhlMTE=", "commit": {"author": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-06-19T22:42:30Z"}, "committer": {"name": "Alexis Beingessner", "email": "a.beingessner@gmail.com", "date": "2015-06-19T22:42:30Z"}, "message": "remove ffi and no_std, TRPL's got it", "tree": {"sha": "405fb11d589aaa1798838e4f60a018c59ddce829", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/405fb11d589aaa1798838e4f60a018c59ddce829"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cb4f081b5e8278e0445ae67320fb80d274cd8e11", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cb4f081b5e8278e0445ae67320fb80d274cd8e11", "html_url": "https://github.com/rust-lang/rust/commit/cb4f081b5e8278e0445ae67320fb80d274cd8e11", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cb4f081b5e8278e0445ae67320fb80d274cd8e11/comments", "author": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Gankra", "id": 1136864, "node_id": "MDQ6VXNlcjExMzY4NjQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1136864?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Gankra", "html_url": "https://github.com/Gankra", "followers_url": "https://api.github.com/users/Gankra/followers", "following_url": "https://api.github.com/users/Gankra/following{/other_user}", "gists_url": "https://api.github.com/users/Gankra/gists{/gist_id}", "starred_url": "https://api.github.com/users/Gankra/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Gankra/subscriptions", "organizations_url": "https://api.github.com/users/Gankra/orgs", "repos_url": "https://api.github.com/users/Gankra/repos", "events_url": "https://api.github.com/users/Gankra/events{/privacy}", "received_events_url": "https://api.github.com/users/Gankra/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fabbd4e8630ca1087fb69dca978ab7916d2d1adf", "url": "https://api.github.com/repos/rust-lang/rust/commits/fabbd4e8630ca1087fb69dca978ab7916d2d1adf", "html_url": "https://github.com/rust-lang/rust/commit/fabbd4e8630ca1087fb69dca978ab7916d2d1adf"}], "stats": {"total": 49, "additions": 0, "deletions": 49}, "files": [{"sha": "668befb4bf5fb4a8d8a1cd70d01d736952e73423", "filename": "ffi.md", "status": "removed", "additions": 0, "deletions": 45, "changes": 45, "blob_url": "https://github.com/rust-lang/rust/blob/fabbd4e8630ca1087fb69dca978ab7916d2d1adf/ffi.md", "raw_url": "https://github.com/rust-lang/rust/raw/fabbd4e8630ca1087fb69dca978ab7916d2d1adf/ffi.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ffi.md?ref=fabbd4e8630ca1087fb69dca978ab7916d2d1adf", "patch": "@@ -1,45 +0,0 @@\n-% Interfacing with other Languages (FFI)\n-\n-*Obviously* we'd all love to live in a **glorious** world where everything is\n-written in Rust, Rust, and More Rust. Tragically, programs have been written\n-in Not Rust for over 50 years. Crufty enterprises are doomed to\n-support ancient code bases, and greybeard programmers stuck in their ways\n-*insist* on writing programs in other languages, even to this day!\n-\n-In all seriousness, there's a myriad of reasons for your codebase to be a\n-hybrid of different languages, and Rust is well-designed to interface with\n-all of them as painlessly as possible. It does this through the tried and\n-true strategy of all languages: pretend to be C, and understand C.\n-\n-Thanks to Rust's minimal runtime and C-like semantics, this is about as\n-painless as FFI with C++. Obviously, most of Rust's features are completely\n-incompatible with other languages: tagged unions, zero-sized-types, dynamically-\n-sized types, destructors, methods, traits, references, and lifetimes are all\n-concepts that you won't be able to expose or accept in your foreign function\n-interface.\n-\n-All mapping through C will give you is functions, structs, globals, raw pointers,\n-and C-like enums. That's it. Rust's default data layouts are also incompatible\n-with the C layout. See [the section on data layout][data.html] for details.\n-Long story short: mark FFI structs and enums with `#[repr(C)]`, mark FFI\n-functions as `extern`.\n-\n-## Runtime\n-\n-Rust's runtime is sufficiently minimal that it requires *no* special handling.\n-You don't need to set anything up. You don't need to tear anything down.\n-Awesome.\n-\n-The only runtime detail you *really* need to worry about is unwinding. Rust's\n-unwinding model is not defined to be incompatible with any particular language.\n-That means that if you call Rust from another language and it unwinds into the\n-calling language, this will cause Undefined Behaviour. Similarly, if another\n-language unwinds into Rust, it will also cause Undefined Behaviour.\n-\n-Rust can't really do anything about other languages unwinding into it (FFI is unsafe\n-for a reason!), but you can be a good FFI citizen by catching panics in any\n-FFI functions you export. Rust provides `thread::catch_panic` for exactly this.\n-Unfortunately, this API is still unstable.\n-\n-## libc\n-"}, {"sha": "12b105db80677b7c9f6dd3d9600d493c89e2bccc", "filename": "intro.md", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/cb4f081b5e8278e0445ae67320fb80d274cd8e11/intro.md", "raw_url": "https://github.com/rust-lang/rust/raw/cb4f081b5e8278e0445ae67320fb80d274cd8e11/intro.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/intro.md?ref=cb4f081b5e8278e0445ae67320fb80d274cd8e11", "patch": "@@ -15,8 +15,6 @@ stack or heap, we will not explain the syntax.\n * [Uninitialized Memory](uninitialized.html)\n * [Ownership-oriented resource management (RAII)](raii.html)\n * [Concurrency](concurrency.html)\n-* [Interfacing with other languages (FFI)](ffi.html)\n-* [Eliminating the Runtime (no_std)](no_std.html)\n \n ## A Tale Of Two Languages\n "}, {"sha": "8da5b78cadb40a81d0816c1e7facd60ce2bba6da", "filename": "no_std.md", "status": "removed", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fabbd4e8630ca1087fb69dca978ab7916d2d1adf/no_std.md", "raw_url": "https://github.com/rust-lang/rust/raw/fabbd4e8630ca1087fb69dca978ab7916d2d1adf/no_std.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/no_std.md?ref=fabbd4e8630ca1087fb69dca978ab7916d2d1adf", "patch": "@@ -1,2 +0,0 @@\n-% Eliminating the Runtime (no_std)\n-"}]}