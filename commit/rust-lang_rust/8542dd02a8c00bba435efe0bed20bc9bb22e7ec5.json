{"sha": "8542dd02a8c00bba435efe0bed20bc9bb22e7ec5", "node_id": "C_kwDOAAsO6NoAKDg1NDJkZDAyYThjMDBiYmE0MzVlZmUwYmVkMjBiYzliYjIyZTdlYzU", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-06-07T20:39:21Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2022-06-07T20:39:21Z"}, "message": "Use more targeted suggestion when confusing i8 with std::i8", "tree": {"sha": "893f7fbe53a65294038ad5bc86e9f6ce84460941", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/893f7fbe53a65294038ad5bc86e9f6ce84460941"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8542dd02a8c00bba435efe0bed20bc9bb22e7ec5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8542dd02a8c00bba435efe0bed20bc9bb22e7ec5", "html_url": "https://github.com/rust-lang/rust/commit/8542dd02a8c00bba435efe0bed20bc9bb22e7ec5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8542dd02a8c00bba435efe0bed20bc9bb22e7ec5/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "357bc27904d4a99c83d4b01272c34e0e54934fa5", "url": "https://api.github.com/repos/rust-lang/rust/commits/357bc27904d4a99c83d4b01272c34e0e54934fa5", "html_url": "https://github.com/rust-lang/rust/commit/357bc27904d4a99c83d4b01272c34e0e54934fa5"}], "stats": {"total": 47, "additions": 21, "deletions": 26}, "files": [{"sha": "b1e180c701f5087c17f3fb271df6e49bd7b02fcf", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 9, "deletions": 10, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/8542dd02a8c00bba435efe0bed20bc9bb22e7ec5/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8542dd02a8c00bba435efe0bed20bc9bb22e7ec5/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=8542dd02a8c00bba435efe0bed20bc9bb22e7ec5", "patch": "@@ -1575,18 +1575,17 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         name: Symbol,\n     ) -> ErrorGuaranteed {\n         let mut err = struct_span_err!(self.tcx().sess, span, E0223, \"ambiguous associated type\");\n-        if let (true, Ok(snippet)) = (\n-            self.tcx()\n-                .resolutions(())\n-                .confused_type_with_std_module\n-                .keys()\n-                .any(|full_span| full_span.contains(span)),\n-            self.tcx().sess.source_map().span_to_snippet(span),\n-        ) {\n+        if self\n+            .tcx()\n+            .resolutions(())\n+            .confused_type_with_std_module\n+            .keys()\n+            .any(|full_span| full_span.contains(span))\n+        {\n             err.span_suggestion(\n-                span,\n+                span.shrink_to_lo(),\n                 \"you are looking for the module in `std`, not the primitive type\",\n-                format!(\"std::{}\", snippet),\n+                \"std::\".to_string(),\n                 Applicability::MachineApplicable,\n             );\n         } else {"}, {"sha": "4071c389266d3b1cfcb2bd8d0965e118eeadad65", "filename": "compiler/rustc_typeck/src/check/method/suggest.rs", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/8542dd02a8c00bba435efe0bed20bc9bb22e7ec5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8542dd02a8c00bba435efe0bed20bc9bb22e7ec5/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fmethod%2Fsuggest.rs?ref=8542dd02a8c00bba435efe0bed20bc9bb22e7ec5", "patch": "@@ -327,26 +327,22 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                     );\n                 }\n                 if let Some(span) = tcx.resolutions(()).confused_type_with_std_module.get(&span) {\n-                    if let Ok(snippet) = tcx.sess.source_map().span_to_snippet(*span) {\n-                        err.span_suggestion(\n-                            *span,\n-                            \"you are looking for the module in `std`, \\\n-                                     not the primitive type\",\n-                            format!(\"std::{}\", snippet),\n-                            Applicability::MachineApplicable,\n-                        );\n-                    }\n+                    err.span_suggestion(\n+                        span.shrink_to_lo(),\n+                        \"you are looking for the module in `std`, not the primitive type\",\n+                        \"std::\".to_string(),\n+                        Applicability::MachineApplicable,\n+                    );\n                 }\n                 if let ty::RawPtr(_) = &actual.kind() {\n                     err.note(\n                         \"try using `<*const T>::as_ref()` to get a reference to the \\\n-                                      type behind the pointer: https://doc.rust-lang.org/std/\\\n-                                      primitive.pointer.html#method.as_ref\",\n+                         type behind the pointer: https://doc.rust-lang.org/std/\\\n+                         primitive.pointer.html#method.as_ref\",\n                     );\n                     err.note(\n-                        \"using `<*const T>::as_ref()` on a pointer \\\n-                                      which is unaligned or points to invalid \\\n-                                      or uninitialized memory is undefined behavior\",\n+                        \"using `<*const T>::as_ref()` on a pointer which is unaligned or points \\\n+                         to invalid or uninitialized memory is undefined behavior\",\n                     );\n                 }\n "}, {"sha": "2840fa121a75f630ab5a944d1c43a39662a4fe2e", "filename": "src/test/ui/suggestions/suggest-std-when-using-type.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8542dd02a8c00bba435efe0bed20bc9bb22e7ec5/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-std-when-using-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8542dd02a8c00bba435efe0bed20bc9bb22e7ec5/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-std-when-using-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-std-when-using-type.stderr?ref=8542dd02a8c00bba435efe0bed20bc9bb22e7ec5", "patch": "@@ -7,7 +7,7 @@ LL |     let pi = f32::consts::PI;\n help: you are looking for the module in `std`, not the primitive type\n    |\n LL |     let pi = std::f32::consts::PI;\n-   |              ~~~~~~~~~~~~~~~~\n+   |              +++++\n \n error[E0599]: no function or associated item named `from_utf8` found for type `str` in the current scope\n   --> $DIR/suggest-std-when-using-type.rs:5:14\n@@ -18,7 +18,7 @@ LL |         str::from_utf8(bytes)\n help: you are looking for the module in `std`, not the primitive type\n    |\n LL |         std::str::from_utf8(bytes)\n-   |         ~~~~~~~~~~~~~~~~~~~\n+   |         +++++\n \n error: aborting due to 2 previous errors\n "}]}