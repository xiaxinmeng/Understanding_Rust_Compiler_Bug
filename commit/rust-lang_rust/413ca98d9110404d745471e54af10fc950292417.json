{"sha": "413ca98d9110404d745471e54af10fc950292417", "node_id": "C_kwDOAAsO6NoAKDQxM2NhOThkOTExMDQwNGQ3NDU0NzFlNTRhZjEwZmM5NTAyOTI0MTc", "commit": {"author": {"name": "Eugene Talagrand", "email": "git@talagrand.org", "date": "2021-10-17T04:23:42Z"}, "committer": {"name": "Eugene Talagrand", "email": "git@talagrand.org", "date": "2021-10-19T06:33:07Z"}, "message": "Update std::env::temp_dir to use GetTempPath2 on Windows when available.\n\nAs a security measure, Windows 11 introduces a new temporary directory API, GetTempPath2.\nWhen the calling process is running as SYSTEM, a separate temporary directory\nwill be returned inaccessible to non-SYSTEM processes. For non-SYSTEM processes\nthe behavior will be the same as before.", "tree": {"sha": "56dd34f759ba06a0c1bb8eede72d639d6110af2c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56dd34f759ba06a0c1bb8eede72d639d6110af2c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/413ca98d9110404d745471e54af10fc950292417", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/413ca98d9110404d745471e54af10fc950292417", "html_url": "https://github.com/rust-lang/rust/commit/413ca98d9110404d745471e54af10fc950292417", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/413ca98d9110404d745471e54af10fc950292417/comments", "author": {"login": "talagrand", "id": 126276, "node_id": "MDQ6VXNlcjEyNjI3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/126276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/talagrand", "html_url": "https://github.com/talagrand", "followers_url": "https://api.github.com/users/talagrand/followers", "following_url": "https://api.github.com/users/talagrand/following{/other_user}", "gists_url": "https://api.github.com/users/talagrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/talagrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/talagrand/subscriptions", "organizations_url": "https://api.github.com/users/talagrand/orgs", "repos_url": "https://api.github.com/users/talagrand/repos", "events_url": "https://api.github.com/users/talagrand/events{/privacy}", "received_events_url": "https://api.github.com/users/talagrand/received_events", "type": "User", "site_admin": false}, "committer": {"login": "talagrand", "id": 126276, "node_id": "MDQ6VXNlcjEyNjI3Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/126276?v=4", "gravatar_id": "", "url": "https://api.github.com/users/talagrand", "html_url": "https://github.com/talagrand", "followers_url": "https://api.github.com/users/talagrand/followers", "following_url": "https://api.github.com/users/talagrand/following{/other_user}", "gists_url": "https://api.github.com/users/talagrand/gists{/gist_id}", "starred_url": "https://api.github.com/users/talagrand/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/talagrand/subscriptions", "organizations_url": "https://api.github.com/users/talagrand/orgs", "repos_url": "https://api.github.com/users/talagrand/repos", "events_url": "https://api.github.com/users/talagrand/events{/privacy}", "received_events_url": "https://api.github.com/users/talagrand/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4e89811b46323f432544f9c4006e40d5e5d7663f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4e89811b46323f432544f9c4006e40d5e5d7663f", "html_url": "https://github.com/rust-lang/rust/commit/4e89811b46323f432544f9c4006e40d5e5d7663f"}], "stats": {"total": 29, "additions": 16, "deletions": 13}, "files": [{"sha": "6b5801850933e8f39dfd4cdebed19ee4c138360d", "filename": "library/std/src/env.rs", "status": "modified", "additions": 9, "deletions": 12, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/413ca98d9110404d745471e54af10fc950292417/library%2Fstd%2Fsrc%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/413ca98d9110404d745471e54af10fc950292417/library%2Fstd%2Fsrc%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fenv.rs?ref=413ca98d9110404d745471e54af10fc950292417", "patch": "@@ -578,28 +578,25 @@ pub fn home_dir() -> Option<PathBuf> {\n /// may result in \"insecure temporary file\" security vulnerabilities. Consider\n /// using a crate that securely creates temporary files or directories.\n ///\n-/// # Unix\n+/// # Platform-specific behavior\n ///\n-/// Returns the value of the `TMPDIR` environment variable if it is\n+/// On Unix, returns the value of the `TMPDIR` environment variable if it is\n /// set, otherwise for non-Android it returns `/tmp`. If Android, since there\n /// is no global temporary folder (it is usually allocated per-app), it returns\n /// `/data/local/tmp`.\n+/// On Windows, the behavior is equivalent to that of [`GetTempPath2`][GetTempPath2] /\n+/// [`GetTempPath`][GetTempPath], which this function uses internally.\n+/// Note that, this [may change in the future][changes].\n ///\n-/// # Windows\n-///\n-/// Returns the value of, in order, the `TMP`, `TEMP`,\n-/// `USERPROFILE` environment variable if any are set and not the empty\n-/// string. Otherwise, `temp_dir` returns the path of the Windows directory.\n-/// This behavior is identical to that of [`GetTempPath`][msdn], which this\n-/// function uses internally.\n-///\n-/// [msdn]: https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-gettemppatha\n+/// [changes]: io#platform-specific-behavior\n+/// [GetTempPath2]: https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-gettemppath2a\n+/// [GetTempPath]: https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-gettemppatha\n ///\n /// ```no_run\n /// use std::env;\n ///\n /// fn main() {\n-///     let mut dir = env::temp_dir();\n+///     let dir = env::temp_dir();\n ///     println!(\"Temporary directory: {}\", dir.display());\n /// }\n /// ```"}, {"sha": "87add8b08749bc5392fbe8ccb454d301d47ee521", "filename": "library/std/src/sys/windows/c.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/413ca98d9110404d745471e54af10fc950292417/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/413ca98d9110404d745471e54af10fc950292417/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fc.rs?ref=413ca98d9110404d745471e54af10fc950292417", "patch": "@@ -1102,6 +1102,12 @@ compat_fn! {\n                                           -> () {\n         GetSystemTimeAsFileTime(lpSystemTimeAsFileTime)\n     }\n+\n+    // >= Win11\n+    // https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-gettemppath2a\n+    pub fn GetTempPath2W(nBufferLength: DWORD, lpBuffer: LPCWSTR) -> DWORD {\n+        GetTempPathW(nBufferLength, lpBuffer)\n+    }\n }\n \n compat_fn! {"}, {"sha": "0c26321c47d08df163779fdf57ccb13bd43cb96e", "filename": "library/std/src/sys/windows/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/413ca98d9110404d745471e54af10fc950292417/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/413ca98d9110404d745471e54af10fc950292417/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Fsys%2Fwindows%2Fos.rs?ref=413ca98d9110404d745471e54af10fc950292417", "patch": "@@ -275,7 +275,7 @@ pub fn unsetenv(n: &OsStr) -> io::Result<()> {\n }\n \n pub fn temp_dir() -> PathBuf {\n-    super::fill_utf16_buf(|buf, sz| unsafe { c::GetTempPathW(sz, buf) }, super::os2path).unwrap()\n+    super::fill_utf16_buf(|buf, sz| unsafe { c::GetTempPath2W(sz, buf) }, super::os2path).unwrap()\n }\n \n #[cfg(not(target_vendor = \"uwp\"))]"}]}