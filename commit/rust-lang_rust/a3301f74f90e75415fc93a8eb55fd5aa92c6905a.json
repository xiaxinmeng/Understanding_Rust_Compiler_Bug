{"sha": "a3301f74f90e75415fc93a8eb55fd5aa92c6905a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEzMzAxZjc0ZjkwZTc1NDE1ZmM5M2E4ZWI1NWZkNWFhOTJjNjkwNWE=", "commit": {"author": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-14T23:33:37Z"}, "committer": {"name": "Michael Sullivan", "email": "sully@msully.net", "date": "2011-07-15T00:18:56Z"}, "message": "Generalize collect_upvars to work over any type of ast node.", "tree": {"sha": "c5571d1313f0b8f3e121970cbd7432bc78fc44c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5571d1313f0b8f3e121970cbd7432bc78fc44c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a3301f74f90e75415fc93a8eb55fd5aa92c6905a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a3301f74f90e75415fc93a8eb55fd5aa92c6905a", "html_url": "https://github.com/rust-lang/rust/commit/a3301f74f90e75415fc93a8eb55fd5aa92c6905a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a3301f74f90e75415fc93a8eb55fd5aa92c6905a/comments", "author": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "committer": {"login": "msullivan", "id": 340349, "node_id": "MDQ6VXNlcjM0MDM0OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/340349?v=4", "gravatar_id": "", "url": "https://api.github.com/users/msullivan", "html_url": "https://github.com/msullivan", "followers_url": "https://api.github.com/users/msullivan/followers", "following_url": "https://api.github.com/users/msullivan/following{/other_user}", "gists_url": "https://api.github.com/users/msullivan/gists{/gist_id}", "starred_url": "https://api.github.com/users/msullivan/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/msullivan/subscriptions", "organizations_url": "https://api.github.com/users/msullivan/orgs", "repos_url": "https://api.github.com/users/msullivan/repos", "events_url": "https://api.github.com/users/msullivan/events{/privacy}", "received_events_url": "https://api.github.com/users/msullivan/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20e94de3925af29bd73a0f0f0b0706da72271115", "url": "https://api.github.com/repos/rust-lang/rust/commits/20e94de3925af29bd73a0f0f0b0706da72271115", "html_url": "https://github.com/rust-lang/rust/commit/20e94de3925af29bd73a0f0f0b0706da72271115"}], "stats": {"total": 19, "additions": 12, "deletions": 7}, "files": [{"sha": "fc47fad6c9682d8bbc247bd819303d70504420a7", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 12, "deletions": 7, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/a3301f74f90e75415fc93a8eb55fd5aa92c6905a/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a3301f74f90e75415fc93a8eb55fd5aa92c6905a/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=a3301f74f90e75415fc93a8eb55fd5aa92c6905a", "patch": "@@ -4073,10 +4073,13 @@ fn trans_for(&@block_ctxt cx, &@ast::local local, &@ast::expr seq,\n \n // Iterator translation\n \n-// Searches through a block for all references to locals or upvars in this\n-// frame and returns the list of definition IDs thus found.\n-fn collect_upvars(&@block_ctxt cx, &ast::block bloc,\n-                  ast::node_id initial_decl) -> ast::node_id[] {\n+// Searches through part of the AST for all references to locals or\n+// upvars in this frame and returns the list of definition IDs thus found.\n+// Since we want to be able to collect upvars in some arbitrary piece\n+// of the AST, we take a walker function that we invoke with a visitor\n+// in order to start the search.\n+fn collect_upvars(&@block_ctxt cx, &fn (&walk::ast_visitor) walker,\n+                  ast::node_id[] initial_decls) -> ast::node_id[] {\n     type env =\n         @rec(mutable ast::node_id[] refs,\n              hashmap[ast::node_id, ()] decls,\n@@ -4112,7 +4115,8 @@ fn collect_upvars(&@block_ctxt cx, &ast::block bloc,\n         }\n     }\n     let hashmap[ast::node_id, ()] decls = new_int_hash[()]();\n-    decls.insert(initial_decl, ());\n+    for (ast::node_id decl in initial_decls) { decls.insert(decl, ()); }\n+\n     let env e =\n         @rec(mutable refs=~[],\n              decls=decls,\n@@ -4123,7 +4127,7 @@ fn collect_upvars(&@block_ctxt cx, &ast::block bloc,\n              visit_expr_pre=bind walk_expr(e, _),\n              visit_pat_pre=bind walk_pat(e, _)\n              with walk::default_visitor());\n-    walk::walk_block(*visitor, bloc);\n+    walker(*visitor);\n     // Calculate (refs - decls). This is the set of captured upvars.\n \n     let ast::node_id[] result = ~[];\n@@ -4310,7 +4314,8 @@ fn trans_for_each(&@block_ctxt cx, &@ast::local local, &@ast::expr seq,\n     // FIXME: possibly support alias-mode here?\n     auto decl_ty = node_id_type(lcx.ccx, local.node.id);\n     auto decl_id = local.node.id;\n-    auto upvars = collect_upvars(cx, body, decl_id);\n+    auto upvars = collect_upvars(cx, bind walk::walk_block(_, body),\n+                                 ~[decl_id]);\n \n     auto environment_data = build_environment(cx, upvars);\n     auto llenvptr = environment_data._0;"}]}