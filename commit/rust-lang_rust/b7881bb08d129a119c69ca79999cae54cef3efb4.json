{"sha": "b7881bb08d129a119c69ca79999cae54cef3efb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3ODgxYmIwOGQxMjlhMTE5YzY5Y2E3OTk5OWNhZTU0Y2VmM2VmYjQ=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-07-28T16:31:27Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-07-28T16:31:27Z"}, "message": "Remove CPlace::no_place\n\nIt is never the right function", "tree": {"sha": "eb5d45b75131e3612ba5dc535ea2f49b89c67546", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb5d45b75131e3612ba5dc535ea2f49b89c67546"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7881bb08d129a119c69ca79999cae54cef3efb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7881bb08d129a119c69ca79999cae54cef3efb4", "html_url": "https://github.com/rust-lang/rust/commit/b7881bb08d129a119c69ca79999cae54cef3efb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7881bb08d129a119c69ca79999cae54cef3efb4/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8704a66922e9fbe3fafb4d27eeb13b34e8cebd82", "url": "https://api.github.com/repos/rust-lang/rust/commits/8704a66922e9fbe3fafb4d27eeb13b34e8cebd82", "html_url": "https://github.com/rust-lang/rust/commit/8704a66922e9fbe3fafb4d27eeb13b34e8cebd82"}], "stats": {"total": 12, "additions": 5, "deletions": 7}, "files": [{"sha": "f9fc3992ae2122c04477ce5dbb976bde1bc20280", "filename": "src/abi/returning.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b7881bb08d129a119c69ca79999cae54cef3efb4/src%2Fabi%2Freturning.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7881bb08d129a119c69ca79999cae54cef3efb4/src%2Fabi%2Freturning.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fabi%2Freturning.rs?ref=b7881bb08d129a119c69ca79999cae54cef3efb4", "patch": "@@ -58,8 +58,7 @@ pub(super) fn codegen_return_param<'tcx>(\n     block_params_iter: &mut impl Iterator<Item = Value>,\n ) -> CPlace<'tcx> {\n     let (ret_place, ret_param): (_, SmallVec<[_; 2]>) = match fx.fn_abi.as_ref().unwrap().ret.mode {\n-        PassMode::Ignore => (CPlace::no_place(fx.fn_abi.as_ref().unwrap().ret.layout), smallvec![]),\n-        PassMode::Direct(_) | PassMode::Pair(_, _) | PassMode::Cast(_) => {\n+        PassMode::Ignore | PassMode::Direct(_) | PassMode::Pair(_, _) | PassMode::Cast(_) => {\n             let is_ssa = ssa_analyzed[RETURN_PLACE] == crate::analyze::SsaKind::Ssa;\n             (\n                 super::make_local_place("}, {"sha": "364b3da92b88822fe614904ce75ed44582d2a288", "filename": "src/value_and_place.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/b7881bb08d129a119c69ca79999cae54cef3efb4/src%2Fvalue_and_place.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7881bb08d129a119c69ca79999cae54cef3efb4/src%2Fvalue_and_place.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvalue_and_place.rs?ref=b7881bb08d129a119c69ca79999cae54cef3efb4", "patch": "@@ -318,17 +318,16 @@ impl<'tcx> CPlace<'tcx> {\n         &self.inner\n     }\n \n-    pub(crate) fn no_place(layout: TyAndLayout<'tcx>) -> CPlace<'tcx> {\n-        CPlace { inner: CPlaceInner::Addr(Pointer::dangling(layout.align.pref), None), layout }\n-    }\n-\n     pub(crate) fn new_stack_slot(\n         fx: &mut FunctionCx<'_, '_, 'tcx>,\n         layout: TyAndLayout<'tcx>,\n     ) -> CPlace<'tcx> {\n         assert!(!layout.is_unsized());\n         if layout.size.bytes() == 0 {\n-            return CPlace::no_place(layout);\n+            return CPlace {\n+                inner: CPlaceInner::Addr(Pointer::dangling(layout.align.pref), None),\n+                layout,\n+            };\n         }\n \n         let stack_slot = fx.bcx.create_stack_slot(StackSlotData {"}]}