{"sha": "4172756c80abb79ccd8b6f43d37a797691414bcf", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQxNzI3NTZjODBhYmI3OWNjZDhiNmY0M2QzN2E3OTc2OTE0MTRiY2Y=", "commit": {"author": {"name": "Mara Bos", "email": "m-ou.se@m-ou.se", "date": "2021-01-02T11:29:15Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-02T11:29:15Z"}, "message": "Rollup merge of #80613 - bugadani:issue-80607, r=matthewjasper\n\nDiag: print enum variant instead of enum type\n\nCloses #80607", "tree": {"sha": "df34f75201ef0961a4cc6f6909c2c2c1acca39ad", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/df34f75201ef0961a4cc6f6909c2c2c1acca39ad"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4172756c80abb79ccd8b6f43d37a797691414bcf", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf8FkMCRBK7hj4Ov3rIwAAdHIIAG4XodZyyUohEHcY17AIE6kR\nO28II/R1DtOhttcARqU0PgsEjXxfYu9Pid/9nvubIgigXO7Ilz9h7Hql6AitBje8\nzOSGStsZEiR44lJ5TwfAxo5dOEgfqMt4ACEY4QTgOfo7TbaYFengjp37WT3NG/gP\ntqeVsbqpTRDg0WI5AWFGuVSTltvYSsZE60vjmrAijnODOFl4lebkQwg+pLVrmZIR\nuNpgEuHavo06i+bP9f8cSlEmfgZ/ACHr9o596tYY3z1BRsw+M1MmlWZvTcRu8RMy\naQvIw1rOJ6ft7KeyG40nlnEaFMkpnCX90FqIVtcHNWpGIs0AM4t3zC/sQugBEE4=\n=HXQS\n-----END PGP SIGNATURE-----\n", "payload": "tree df34f75201ef0961a4cc6f6909c2c2c1acca39ad\nparent 7a1b01ec025c686efae215321bc7f4544c2ed7ea\nparent e0300716efc88a0b11f7121f8a15f5f385265b5d\nauthor Mara Bos <m-ou.se@m-ou.se> 1609586955 +0000\ncommitter GitHub <noreply@github.com> 1609586955 +0000\n\nRollup merge of #80613 - bugadani:issue-80607, r=matthewjasper\n\nDiag: print enum variant instead of enum type\n\nCloses #80607\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4172756c80abb79ccd8b6f43d37a797691414bcf", "html_url": "https://github.com/rust-lang/rust/commit/4172756c80abb79ccd8b6f43d37a797691414bcf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4172756c80abb79ccd8b6f43d37a797691414bcf/comments", "author": {"login": "m-ou-se", "id": 783247, "node_id": "MDQ6VXNlcjc4MzI0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/783247?v=4", "gravatar_id": "", "url": "https://api.github.com/users/m-ou-se", "html_url": "https://github.com/m-ou-se", "followers_url": "https://api.github.com/users/m-ou-se/followers", "following_url": "https://api.github.com/users/m-ou-se/following{/other_user}", "gists_url": "https://api.github.com/users/m-ou-se/gists{/gist_id}", "starred_url": "https://api.github.com/users/m-ou-se/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/m-ou-se/subscriptions", "organizations_url": "https://api.github.com/users/m-ou-se/orgs", "repos_url": "https://api.github.com/users/m-ou-se/repos", "events_url": "https://api.github.com/users/m-ou-se/events{/privacy}", "received_events_url": "https://api.github.com/users/m-ou-se/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a1b01ec025c686efae215321bc7f4544c2ed7ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a1b01ec025c686efae215321bc7f4544c2ed7ea", "html_url": "https://github.com/rust-lang/rust/commit/7a1b01ec025c686efae215321bc7f4544c2ed7ea"}, {"sha": "e0300716efc88a0b11f7121f8a15f5f385265b5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0300716efc88a0b11f7121f8a15f5f385265b5d", "html_url": "https://github.com/rust-lang/rust/commit/e0300716efc88a0b11f7121f8a15f5f385265b5d"}], "stats": {"total": 73, "additions": 60, "deletions": 13}, "files": [{"sha": "e84d813ffbcc01506ae20b46a8f84ba2379ac891", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 36, "deletions": 13, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/4172756c80abb79ccd8b6f43d37a797691414bcf/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4172756c80abb79ccd8b6f43d37a797691414bcf/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=4172756c80abb79ccd8b6f43d37a797691414bcf", "patch": "@@ -1381,19 +1381,42 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             ty,\n         );\n         match variant.ctor_kind {\n-            CtorKind::Fn => {\n-                err.span_label(variant.ident.span, format!(\"`{adt}` defined here\", adt = ty));\n-                err.span_label(field.ident.span, \"field does not exist\");\n-                err.span_label(\n-                    ty_span,\n-                    format!(\n-                        \"`{adt}` is a tuple {kind_name}, \\\n-                         use the appropriate syntax: `{adt}(/* fields */)`\",\n-                        adt = ty,\n-                        kind_name = kind_name\n-                    ),\n-                );\n-            }\n+            CtorKind::Fn => match ty.kind() {\n+                ty::Adt(adt, ..) if adt.is_enum() => {\n+                    err.span_label(\n+                        variant.ident.span,\n+                        format!(\n+                            \"`{adt}::{variant}` defined here\",\n+                            adt = ty,\n+                            variant = variant.ident,\n+                        ),\n+                    );\n+                    err.span_label(field.ident.span, \"field does not exist\");\n+                    err.span_label(\n+                        ty_span,\n+                        format!(\n+                            \"`{adt}::{variant}` is a tuple {kind_name}, \\\n+                             use the appropriate syntax: `{adt}::{variant}(/* fields */)`\",\n+                            adt = ty,\n+                            variant = variant.ident,\n+                            kind_name = kind_name\n+                        ),\n+                    );\n+                }\n+                _ => {\n+                    err.span_label(variant.ident.span, format!(\"`{adt}` defined here\", adt = ty));\n+                    err.span_label(field.ident.span, \"field does not exist\");\n+                    err.span_label(\n+                        ty_span,\n+                        format!(\n+                            \"`{adt}` is a tuple {kind_name}, \\\n+                                 use the appropriate syntax: `{adt}(/* fields */)`\",\n+                            adt = ty,\n+                            kind_name = kind_name\n+                        ),\n+                    );\n+                }\n+            },\n             _ => {\n                 // prevent all specified fields from being suggested\n                 let skip_fields = skip_fields.iter().map(|ref x| x.ident.name);"}, {"sha": "63f4df359b831ed2b9fe1cb8a5768c29d6ad8af7", "filename": "src/test/ui/issues/issue-80607.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/4172756c80abb79ccd8b6f43d37a797691414bcf/src%2Ftest%2Fui%2Fissues%2Fissue-80607.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4172756c80abb79ccd8b6f43d37a797691414bcf/src%2Ftest%2Fui%2Fissues%2Fissue-80607.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-80607.rs?ref=4172756c80abb79ccd8b6f43d37a797691414bcf", "patch": "@@ -0,0 +1,10 @@\n+// This tests makes sure the diagnostics print the offending enum variant, not just the type.\n+pub enum Enum {\n+    V1(i32),\n+}\n+\n+pub fn foo(x: i32) -> Enum {\n+    Enum::V1 { x } //~ ERROR `Enum::V1` has no field named `x`\n+}\n+\n+fn main() {}"}, {"sha": "5375478942b18e1609feb2646cebde8eb805c8c3", "filename": "src/test/ui/issues/issue-80607.stderr", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/4172756c80abb79ccd8b6f43d37a797691414bcf/src%2Ftest%2Fui%2Fissues%2Fissue-80607.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4172756c80abb79ccd8b6f43d37a797691414bcf/src%2Ftest%2Fui%2Fissues%2Fissue-80607.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-80607.stderr?ref=4172756c80abb79ccd8b6f43d37a797691414bcf", "patch": "@@ -0,0 +1,14 @@\n+error[E0559]: variant `Enum::V1` has no field named `x`\n+  --> $DIR/issue-80607.rs:7:16\n+   |\n+LL |     V1(i32),\n+   |     -- `Enum::V1` defined here\n+...\n+LL |     Enum::V1 { x }\n+   |     --------   ^ field does not exist\n+   |     |\n+   |     `Enum::V1` is a tuple variant, use the appropriate syntax: `Enum::V1(/* fields */)`\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0559`."}]}