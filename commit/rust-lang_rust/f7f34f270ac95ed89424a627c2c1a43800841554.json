{"sha": "f7f34f270ac95ed89424a627c2c1a43800841554", "node_id": "C_kwDOAAsO6NoAKGY3ZjM0ZjI3MGFjOTVlZDg5NDI0YTYyN2MyYzFhNDM4MDA4NDE1NTQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-12T15:14:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-12T15:14:25Z"}, "message": "Auto merge of #2017 - RalfJung:rustup, r=RalfJung\n\nrustup\n\nCc https://github.com/rust-lang/rust/issues/94871", "tree": {"sha": "2ba6225c0ed0260deaf8334451ce68114ef920b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ba6225c0ed0260deaf8334451ce68114ef920b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f7f34f270ac95ed89424a627c2c1a43800841554", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f7f34f270ac95ed89424a627c2c1a43800841554", "html_url": "https://github.com/rust-lang/rust/commit/f7f34f270ac95ed89424a627c2c1a43800841554", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f7f34f270ac95ed89424a627c2c1a43800841554/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c58298ce225f3748575a8b5ea93a3908444ec1f6", "url": "https://api.github.com/repos/rust-lang/rust/commits/c58298ce225f3748575a8b5ea93a3908444ec1f6", "html_url": "https://github.com/rust-lang/rust/commit/c58298ce225f3748575a8b5ea93a3908444ec1f6"}, {"sha": "27d5b846eed9f92990f4fc47f0e35f514cfc66f0", "url": "https://api.github.com/repos/rust-lang/rust/commits/27d5b846eed9f92990f4fc47f0e35f514cfc66f0", "html_url": "https://github.com/rust-lang/rust/commit/27d5b846eed9f92990f4fc47f0e35f514cfc66f0"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "9885aba102934b2fdcb7ad64cfd096d241da4697", "filename": "rust-version", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7f34f270ac95ed89424a627c2c1a43800841554/rust-version", "raw_url": "https://github.com/rust-lang/rust/raw/f7f34f270ac95ed89424a627c2c1a43800841554/rust-version", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/rust-version?ref=f7f34f270ac95ed89424a627c2c1a43800841554", "patch": "@@ -1 +1 @@\n-2c6a29af35a81e20f8af4c32bf1b55c59b89eccd\n+258256697b8550860be0f6194dec532ac616c2c1"}, {"sha": "e733ea8062dcd6811c84a0563531f28c701cb584", "filename": "src/helpers.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7f34f270ac95ed89424a627c2c1a43800841554/src%2Fhelpers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7f34f270ac95ed89424a627c2c1a43800841554/src%2Fhelpers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fhelpers.rs?ref=f7f34f270ac95ed89424a627c2c1a43800841554", "patch": "@@ -298,7 +298,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n                 trace!(\"UnsafeCellVisitor: {:?} {:?}\", *v, v.layout.ty);\n                 let is_unsafe_cell = match v.layout.ty.kind() {\n                     ty::Adt(adt, _) =>\n-                        Some(adt.did) == self.ecx.tcx.lang_items().unsafe_cell_type(),\n+                        Some(adt.did()) == self.ecx.tcx.lang_items().unsafe_cell_type(),\n                     _ => false,\n                 };\n                 if is_unsafe_cell {"}, {"sha": "7d069611e2684924e9764b50436a279f84048b68", "filename": "src/shims/backtrace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f7f34f270ac95ed89424a627c2c1a43800841554/src%2Fshims%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f7f34f270ac95ed89424a627c2c1a43800841554/src%2Fshims%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fshims%2Fbacktrace.rs?ref=f7f34f270ac95ed89424a627c2c1a43800841554", "patch": "@@ -134,7 +134,7 @@ pub trait EvalContextExt<'mir, 'tcx: 'mir>: crate::MiriEvalContextExt<'mir, 'tcx\n \n         let dest = this.force_allocation(dest)?;\n         if let ty::Adt(adt, _) = dest.layout.ty.kind() {\n-            if !adt.repr.c() {\n+            if !adt.repr().c() {\n                 throw_ub_format!(\n                     \"miri_resolve_frame must be declared with a `#[repr(C)]` return type\"\n                 );"}]}