{"sha": "cbe93359545611a34bb1a6a8e99ff4621deb1197", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNiZTkzMzU5NTQ1NjExYTM0YmIxYTZhOGU5OWZmNDYyMWRlYjExOTc=", "commit": {"author": {"name": "unexge", "email": "unexge@gmail.com", "date": "2021-01-15T19:57:10Z"}, "committer": {"name": "unexge", "email": "unexge@gmail.com", "date": "2021-01-15T19:57:10Z"}, "message": "Add test mark for skipping single use item", "tree": {"sha": "6f205fb2242311173f8ac21c8e896b1da35b7b44", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f205fb2242311173f8ac21c8e896b1da35b7b44"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cbe93359545611a34bb1a6a8e99ff4621deb1197", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cbe93359545611a34bb1a6a8e99ff4621deb1197", "html_url": "https://github.com/rust-lang/rust/commit/cbe93359545611a34bb1a6a8e99ff4621deb1197", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cbe93359545611a34bb1a6a8e99ff4621deb1197/comments", "author": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "committer": {"login": "unexge", "id": 16212576, "node_id": "MDQ6VXNlcjE2MjEyNTc2", "avatar_url": "https://avatars.githubusercontent.com/u/16212576?v=4", "gravatar_id": "", "url": "https://api.github.com/users/unexge", "html_url": "https://github.com/unexge", "followers_url": "https://api.github.com/users/unexge/followers", "following_url": "https://api.github.com/users/unexge/following{/other_user}", "gists_url": "https://api.github.com/users/unexge/gists{/gist_id}", "starred_url": "https://api.github.com/users/unexge/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/unexge/subscriptions", "organizations_url": "https://api.github.com/users/unexge/orgs", "repos_url": "https://api.github.com/users/unexge/repos", "events_url": "https://api.github.com/users/unexge/events{/privacy}", "received_events_url": "https://api.github.com/users/unexge/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c303014f3923e46ae63fbcdc6cf6f166bb040b1e", "url": "https://api.github.com/repos/rust-lang/rust/commits/c303014f3923e46ae63fbcdc6cf6f166bb040b1e", "html_url": "https://github.com/rust-lang/rust/commit/c303014f3923e46ae63fbcdc6cf6f166bb040b1e"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "3dbef8e51addb7101d09537c315bf69c9eb73ca0", "filename": "crates/assists/src/handlers/unmerge_use.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/cbe93359545611a34bb1a6a8e99ff4621deb1197/crates%2Fassists%2Fsrc%2Fhandlers%2Funmerge_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cbe93359545611a34bb1a6a8e99ff4621deb1197/crates%2Fassists%2Fsrc%2Fhandlers%2Funmerge_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Fhandlers%2Funmerge_use.rs?ref=cbe93359545611a34bb1a6a8e99ff4621deb1197", "patch": "@@ -3,6 +3,7 @@ use syntax::{\n     ast::{self, edit::AstNodeEdit, VisibilityOwner},\n     AstNode, SyntaxKind,\n };\n+use test_utils::mark;\n \n use crate::{\n     assist_context::{AssistContext, Assists},\n@@ -26,6 +27,7 @@ pub(crate) fn unmerge_use(acc: &mut Assists, ctx: &AssistContext) -> Option<()>\n \n     let tree_list = tree.syntax().parent().and_then(ast::UseTreeList::cast)?;\n     if tree_list.use_trees().count() < 2 {\n+        mark::hit!(skip_single_use_item);\n         return None;\n     }\n \n@@ -87,6 +89,7 @@ mod tests {\n \n     #[test]\n     fn skip_single_use_item() {\n+        mark::check!(skip_single_use_item);\n         check_assist_not_applicable(\n             unmerge_use,\n             r\""}]}