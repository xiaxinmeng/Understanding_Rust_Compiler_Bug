{"sha": "a85c8f33ff0da5192bb44ac52cb838f638ad7c03", "node_id": "C_kwDOAAsO6NoAKGE4NWM4ZjMzZmYwZGE1MTkyYmI0NGFjNTJjYjgzOGY2MzhhZDdjMDM", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-20T22:09:25Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-11-20T22:09:25Z"}, "message": "Auto merge of #9870 - koka831:unformat-unused-rounding, r=Jarcho\n\nKeep original literal notation in suggestion\n\nWhile I did some investigation of https://github.com/rust-lang/rust-clippy/issues/9866 (I couldn't reproduce it though) I found that `unused_rounding` formats as follows:\n\n```rust\n3.0_f64.round() // => 3.0f64\n```\n\nThis PR makes them preserve as the original notation.\n\n```rust\n3.0_f64.round() // => 3.0_f64\n```\n\nchangelog: Suggestion Enhancement: [`unused_rounding`]: The suggestion now preserves the original float literal notation", "tree": {"sha": "8089b25578eb7df3d65cfad47d5451740fecab76", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8089b25578eb7df3d65cfad47d5451740fecab76"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a85c8f33ff0da5192bb44ac52cb838f638ad7c03", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a85c8f33ff0da5192bb44ac52cb838f638ad7c03", "html_url": "https://github.com/rust-lang/rust/commit/a85c8f33ff0da5192bb44ac52cb838f638ad7c03", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a85c8f33ff0da5192bb44ac52cb838f638ad7c03/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d445ced166b57f304b19d9e2bcd45336a96a8705", "url": "https://api.github.com/repos/rust-lang/rust/commits/d445ced166b57f304b19d9e2bcd45336a96a8705", "html_url": "https://github.com/rust-lang/rust/commit/d445ced166b57f304b19d9e2bcd45336a96a8705"}, {"sha": "1baa6cd591982471475895fc3256d5162a651628", "url": "https://api.github.com/repos/rust-lang/rust/commits/1baa6cd591982471475895fc3256d5162a651628", "html_url": "https://github.com/rust-lang/rust/commit/1baa6cd591982471475895fc3256d5162a651628"}], "stats": {"total": 34, "additions": 23, "deletions": 11}, "files": [{"sha": "cf34a57f91d12643e63203341dbdd7f280fcc42c", "filename": "clippy_lints/src/unused_rounding.rs", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/a85c8f33ff0da5192bb44ac52cb838f638ad7c03/clippy_lints%2Fsrc%2Funused_rounding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a85c8f33ff0da5192bb44ac52cb838f638ad7c03/clippy_lints%2Fsrc%2Funused_rounding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funused_rounding.rs?ref=a85c8f33ff0da5192bb44ac52cb838f638ad7c03", "patch": "@@ -1,5 +1,5 @@\n-use clippy_utils::diagnostics::span_lint_and_sugg;\n-use rustc_ast::ast::{Expr, ExprKind, LitFloatType, LitKind};\n+use clippy_utils::{diagnostics::span_lint_and_sugg, source::snippet};\n+use rustc_ast::ast::{Expr, ExprKind, LitKind};\n use rustc_errors::Applicability;\n use rustc_lint::{EarlyContext, EarlyLintPass};\n use rustc_session::{declare_lint_pass, declare_tool_lint};\n@@ -29,19 +29,15 @@ declare_clippy_lint! {\n }\n declare_lint_pass!(UnusedRounding => [UNUSED_ROUNDING]);\n \n-fn is_useless_rounding(expr: &Expr) -> Option<(&str, String)> {\n+fn is_useless_rounding<'a>(cx: &EarlyContext<'a>, expr: &'a Expr) -> Option<(&'a str, String)> {\n     if let ExprKind::MethodCall(name_ident, receiver, _, _) = &expr.kind\n         && let method_name = name_ident.ident.name.as_str()\n         && (method_name == \"ceil\" || method_name == \"round\" || method_name == \"floor\")\n         && let ExprKind::Lit(spanned) = &receiver.kind\n-        && let LitKind::Float(symbol, ty) = spanned.kind {\n+        && let LitKind::Float(symbol, _) = spanned.kind {\n             let f = symbol.as_str().parse::<f64>().unwrap();\n-            let f_str = symbol.to_string() + if let LitFloatType::Suffixed(ty) = ty {\n-                ty.name_str()\n-            } else {\n-                \"\"\n-            };\n             if f.fract() == 0.0 {\n+                let f_str = snippet(cx, receiver.span, \"..\").to_string();\n                 Some((method_name, f_str))\n             } else {\n                 None\n@@ -53,7 +49,7 @@ fn is_useless_rounding(expr: &Expr) -> Option<(&str, String)> {\n \n impl EarlyLintPass for UnusedRounding {\n     fn check_expr(&mut self, cx: &EarlyContext<'_>, expr: &Expr) {\n-        if let Some((method_name, float)) = is_useless_rounding(expr) {\n+        if let Some((method_name, float)) = is_useless_rounding(cx, expr) {\n             span_lint_and_sugg(\n                 cx,\n                 UNUSED_ROUNDING,"}, {"sha": "38fe6c34cfec177e90a1f644cc215a200e476ceb", "filename": "tests/ui/unused_rounding.fixed", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a85c8f33ff0da5192bb44ac52cb838f638ad7c03/tests%2Fui%2Funused_rounding.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/a85c8f33ff0da5192bb44ac52cb838f638ad7c03/tests%2Fui%2Funused_rounding.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_rounding.fixed?ref=a85c8f33ff0da5192bb44ac52cb838f638ad7c03", "patch": "@@ -6,4 +6,9 @@ fn main() {\n     let _ = 1.0f64;\n     let _ = 1.00f32;\n     let _ = 2e-54f64.floor();\n+\n+    // issue9866\n+    let _ = 3.3_f32.round();\n+    let _ = 3.3_f64.round();\n+    let _ = 3.0_f32;\n }"}, {"sha": "a5cac64d023ae1db417a8ac95f61436cee6e5cb8", "filename": "tests/ui/unused_rounding.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/a85c8f33ff0da5192bb44ac52cb838f638ad7c03/tests%2Fui%2Funused_rounding.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a85c8f33ff0da5192bb44ac52cb838f638ad7c03/tests%2Fui%2Funused_rounding.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_rounding.rs?ref=a85c8f33ff0da5192bb44ac52cb838f638ad7c03", "patch": "@@ -6,4 +6,9 @@ fn main() {\n     let _ = 1.0f64.floor();\n     let _ = 1.00f32.round();\n     let _ = 2e-54f64.floor();\n+\n+    // issue9866\n+    let _ = 3.3_f32.round();\n+    let _ = 3.3_f64.round();\n+    let _ = 3.0_f32.round();\n }"}, {"sha": "1eeb5d1de883212f1dcc1aa25a3a4c21defbca5d", "filename": "tests/ui/unused_rounding.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a85c8f33ff0da5192bb44ac52cb838f638ad7c03/tests%2Fui%2Funused_rounding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/a85c8f33ff0da5192bb44ac52cb838f638ad7c03/tests%2Fui%2Funused_rounding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funused_rounding.stderr?ref=a85c8f33ff0da5192bb44ac52cb838f638ad7c03", "patch": "@@ -18,5 +18,11 @@ error: used the `round` method with a whole number float\n LL |     let _ = 1.00f32.round();\n    |             ^^^^^^^^^^^^^^^ help: remove the `round` method call: `1.00f32`\n \n-error: aborting due to 3 previous errors\n+error: used the `round` method with a whole number float\n+  --> $DIR/unused_rounding.rs:13:13\n+   |\n+LL |     let _ = 3.0_f32.round();\n+   |             ^^^^^^^^^^^^^^^ help: remove the `round` method call: `3.0_f32`\n+\n+error: aborting due to 4 previous errors\n "}]}