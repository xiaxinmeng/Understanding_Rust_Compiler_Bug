{"sha": "585e51aabdcab2ec0b43fabfdd169d4a81ff39fa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4NWU1MWFhYmRjYWIyZWMwYjQzZmFiZmRkMTY5ZDRhODFmZjM5ZmE=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-03-25T11:44:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-03-25T11:44:30Z"}, "message": "disable MIR opts for ZST-related tests", "tree": {"sha": "88b69772ae54ab2e561e62b6cdcddc1f18bb772a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88b69772ae54ab2e561e62b6cdcddc1f18bb772a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa", "html_url": "https://github.com/rust-lang/rust/commit/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "726495f48965b81ff5462e535bb1a5a4c2b0c0a5", "url": "https://api.github.com/repos/rust-lang/rust/commits/726495f48965b81ff5462e535bb1a5a4c2b0c0a5", "html_url": "https://github.com/rust-lang/rust/commit/726495f48965b81ff5462e535bb1a5a4c2b0c0a5"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "01e864213df796f23b658f65a423134345296e3d", "filename": "tests/compile-fail/dangling_pointers/dangling_zst_deref.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Fdangling_pointers%2Fdangling_zst_deref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Fdangling_pointers%2Fdangling_zst_deref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdangling_pointers%2Fdangling_zst_deref.rs?ref=585e51aabdcab2ec0b43fabfdd169d4a81ff39fa", "patch": "@@ -1,5 +1,6 @@\n // Make sure we find these even with many checks disabled.\n-// compile-flags: -Zmiri-disable-alignment-check -Zmiri-disable-stacked-borrows -Zmiri-disable-validation\n+// Some optimizations remove ZST accesses, thus masking this UB.\n+// compile-flags: -Zmir-opt-level=0 -Zmiri-disable-alignment-check -Zmiri-disable-stacked-borrows -Zmiri-disable-validation\n \n fn main() {\n     let p = {"}, {"sha": "9db8a7dcba982b1e1483273e199c373513b6b0f7", "filename": "tests/compile-fail/dangling_pointers/maybe_null_pointer_deref_zst.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Fdangling_pointers%2Fmaybe_null_pointer_deref_zst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Fdangling_pointers%2Fmaybe_null_pointer_deref_zst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdangling_pointers%2Fmaybe_null_pointer_deref_zst.rs?ref=585e51aabdcab2ec0b43fabfdd169d4a81ff39fa", "patch": "@@ -1,3 +1,6 @@\n+// Some optimizations remove ZST accesses, thus masking this UB.\n+// compile-flags: -Zmir-opt-level=0\n+\n fn main() {\n     // This pointer *could* be NULL so we cannot load from it, not even at ZST\n     let ptr = (&0u8 as *const u8).wrapping_sub(0x800) as *const ();"}, {"sha": "79eff2507ceb2d7e99417dc9f64d0b0d34580e31", "filename": "tests/compile-fail/dangling_pointers/maybe_null_pointer_write_zst.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Fdangling_pointers%2Fmaybe_null_pointer_write_zst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Fdangling_pointers%2Fmaybe_null_pointer_write_zst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fdangling_pointers%2Fmaybe_null_pointer_write_zst.rs?ref=585e51aabdcab2ec0b43fabfdd169d4a81ff39fa", "patch": "@@ -1,3 +1,6 @@\n+// Some optimizations remove ZST accesses, thus masking this UB.\n+// compile-flags: -Zmir-opt-level=0\n+\n fn main() {\n     // This pointer *could* be NULL so we cannot load from it, not even at ZST.\n     // Not using the () type here, as writes of that type do not even have MIR generated."}, {"sha": "d0f21a04d364ef3b6b9fba1be5ed752508f736d3", "filename": "tests/compile-fail/null_pointer_deref_zst.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Fnull_pointer_deref_zst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Fnull_pointer_deref_zst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fnull_pointer_deref_zst.rs?ref=585e51aabdcab2ec0b43fabfdd169d4a81ff39fa", "patch": "@@ -1,3 +1,6 @@\n+// Some optimizations remove ZST accesses, thus masking this UB.\n+// compile-flags: -Zmir-opt-level=0\n+\n fn main() {\n     let x: () = unsafe { *std::ptr::null() }; //~ ERROR memory access failed: 0x0 is not a valid pointer\n     panic!(\"this should never print: {:?}\", x);"}, {"sha": "1ee1a4b8a303580934358b472443c2a80c42c89f", "filename": "tests/compile-fail/null_pointer_write_zst.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Fnull_pointer_write_zst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Fnull_pointer_write_zst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fnull_pointer_write_zst.rs?ref=585e51aabdcab2ec0b43fabfdd169d4a81ff39fa", "patch": "@@ -1,3 +1,6 @@\n+// Some optimizations remove ZST accesses, thus masking this UB.\n+// compile-flags: -Zmir-opt-level=0\n+\n fn main() {\n     // Not using the () type here, as writes of that type do not even have MIR generated.\n     // Also not assigning directly as that's array initialization, not assignment."}, {"sha": "27403c11abc7466281a4780642f74e9cbcc6fc4d", "filename": "tests/compile-fail/unaligned_pointers/unaligned_ptr_zst.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr_zst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr_zst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Funaligned_pointers%2Funaligned_ptr_zst.rs?ref=585e51aabdcab2ec0b43fabfdd169d4a81ff39fa", "patch": "@@ -1,5 +1,6 @@\n // This should fail even without validation\n-// compile-flags: -Zmiri-disable-validation\n+// Some optimizations remove ZST accesses, thus masking this UB.\n+// compile-flags: -Zmir-opt-level=0 -Zmiri-disable-validation\n \n fn main() {\n     for i in 0..10 { // Try many times as this might work by chance."}, {"sha": "a602cb731e402e2b43e8dbf1dc6150ab756259ff", "filename": "tests/compile-fail/zst2.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Fzst2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Fzst2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fzst2.rs?ref=585e51aabdcab2ec0b43fabfdd169d4a81ff39fa", "patch": "@@ -1,3 +1,6 @@\n+// Some optimizations remove ZST accesses, thus masking this UB.\n+// compile-flags: -Zmir-opt-level=0\n+\n fn main() {\n     // Not using the () type here, as writes of that type do not even have MIR generated.\n     // Also not assigning directly as that's array initialization, not assignment."}, {"sha": "734c4b8ac4b8f956b779e06fbcee30c48fce8e3b", "filename": "tests/compile-fail/zst3.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Fzst3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/585e51aabdcab2ec0b43fabfdd169d4a81ff39fa/tests%2Fcompile-fail%2Fzst3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompile-fail%2Fzst3.rs?ref=585e51aabdcab2ec0b43fabfdd169d4a81ff39fa", "patch": "@@ -1,3 +1,6 @@\n+// Some optimizations remove ZST accesses, thus masking this UB.\n+// compile-flags: -Zmir-opt-level=0\n+\n fn main() {\n     // Not using the () type here, as writes of that type do not even have MIR generated.\n     // Also not assigning directly as that's array initialization, not assignment."}]}