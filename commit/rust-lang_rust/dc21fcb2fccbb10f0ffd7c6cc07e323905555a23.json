{"sha": "dc21fcb2fccbb10f0ffd7c6cc07e323905555a23", "node_id": "C_kwDOAAsO6NoAKGRjMjFmY2IyZmNjYmIxMGYwZmZkN2M2Y2MwN2UzMjM5MDU1NTVhMjM", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-10T10:32:35Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-05-10T10:32:35Z"}, "message": "Remove another use of clone_code", "tree": {"sha": "69350beb5d930edf2ca68b4a0fc838d1b487da9e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69350beb5d930edf2ca68b4a0fc838d1b487da9e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc21fcb2fccbb10f0ffd7c6cc07e323905555a23", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc21fcb2fccbb10f0ffd7c6cc07e323905555a23", "html_url": "https://github.com/rust-lang/rust/commit/dc21fcb2fccbb10f0ffd7c6cc07e323905555a23", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc21fcb2fccbb10f0ffd7c6cc07e323905555a23/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "063795ce4aa58c91cb1f927ca95188c9b0f35608", "url": "https://api.github.com/repos/rust-lang/rust/commits/063795ce4aa58c91cb1f927ca95188c9b0f35608", "html_url": "https://github.com/rust-lang/rust/commit/063795ce4aa58c91cb1f927ca95188c9b0f35608"}], "stats": {"total": 24, "additions": 11, "deletions": 13}, "files": [{"sha": "ed8a39948014515734757d9f6df50e274329784d", "filename": "compiler/rustc_middle/src/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dc21fcb2fccbb10f0ffd7c6cc07e323905555a23/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc21fcb2fccbb10f0ffd7c6cc07e323905555a23/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs?ref=dc21fcb2fccbb10f0ffd7c6cc07e323905555a23", "patch": "@@ -183,7 +183,7 @@ impl<'tcx> ObligationCause<'tcx> {\n     pub fn derived_cause(\n         mut self,\n         parent_trait_pred: ty::PolyTraitPredicate<'tcx>,\n-        variant: fn(DerivedObligationCause<'tcx>) -> ObligationCauseCode<'tcx>,\n+        variant: impl FnOnce(DerivedObligationCause<'tcx>) -> ObligationCauseCode<'tcx>,\n     ) -> ObligationCause<'tcx> {\n         /*!\n          * Creates a cause for obligations that are derived from"}, {"sha": "0683f61b471011b7eb822fee50249063cfa6173a", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 10, "deletions": 12, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/dc21fcb2fccbb10f0ffd7c6cc07e323905555a23/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc21fcb2fccbb10f0ffd7c6cc07e323905555a23/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=dc21fcb2fccbb10f0ffd7c6cc07e323905555a23", "patch": "@@ -14,9 +14,9 @@ use super::util;\n use super::util::{closure_trait_ref_and_return_type, predicate_for_trait_def};\n use super::wf;\n use super::{\n-    DerivedObligationCause, ErrorReporting, ImplDerivedObligation, ImplDerivedObligationCause,\n-    Normalized, Obligation, ObligationCause, ObligationCauseCode, Overflow, PredicateObligation,\n-    Selection, SelectionError, SelectionResult, TraitObligation, TraitQueryMode,\n+    ErrorReporting, ImplDerivedObligation, ImplDerivedObligationCause, Normalized, Obligation,\n+    ObligationCause, ObligationCauseCode, Overflow, PredicateObligation, Selection, SelectionError,\n+    SelectionResult, TraitObligation, TraitQueryMode,\n };\n \n use crate::infer::{InferCtxt, InferOk, TypeFreshener};\n@@ -2316,17 +2316,15 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n         debug!(?predicates);\n         assert_eq!(predicates.parent, None);\n         let mut obligations = Vec::with_capacity(predicates.predicates.len());\n-        let parent_code = cause.clone_code();\n         for (predicate, span) in predicates.predicates {\n             let span = *span;\n-            let derived =\n-                DerivedObligationCause { parent_trait_pred, parent_code: parent_code.clone() };\n-            let code = ImplDerivedObligation(Box::new(ImplDerivedObligationCause {\n-                derived,\n-                impl_def_id: def_id,\n-                span,\n-            }));\n-            let cause = ObligationCause::new(cause.span, cause.body_id, code);\n+            let cause = cause.clone().derived_cause(parent_trait_pred, |derived| {\n+                ImplDerivedObligation(Box::new(ImplDerivedObligationCause {\n+                    derived,\n+                    impl_def_id: def_id,\n+                    span,\n+                }))\n+            });\n             let predicate = normalize_with_depth_to(\n                 self,\n                 param_env,"}]}