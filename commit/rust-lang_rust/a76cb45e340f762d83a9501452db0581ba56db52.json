{"sha": "a76cb45e340f762d83a9501452db0581ba56db52", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3NmNiNDVlMzQwZjc2MmQ4M2E5NTAxNDUyZGIwNTgxYmE1NmRiNTI=", "commit": {"author": {"name": "Robin Kruppe", "email": "robin.kruppe@gmail.com", "date": "2016-02-04T15:18:20Z"}, "committer": {"name": "Robin Kruppe", "email": "robin.kruppe@gmail.com", "date": "2016-02-04T22:06:50Z"}, "message": "ICE more gracefully in constant evaluation when float parsing fails\n\nIdeally float parsing wouldn't fail at all, but for the moment let's give a helpful message.\n\nFixes #31109", "tree": {"sha": "f99d628624815c2a2944eec713c005b2a2ded6e8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f99d628624815c2a2944eec713c005b2a2ded6e8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a76cb45e340f762d83a9501452db0581ba56db52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a76cb45e340f762d83a9501452db0581ba56db52", "html_url": "https://github.com/rust-lang/rust/commit/a76cb45e340f762d83a9501452db0581ba56db52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a76cb45e340f762d83a9501452db0581ba56db52/comments", "author": null, "committer": null, "parents": [{"sha": "33713bca490ca217b587b8841252b5adb6cbaf5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/33713bca490ca217b587b8841252b5adb6cbaf5d", "html_url": "https://github.com/rust-lang/rust/commit/33713bca490ca217b587b8841252b5adb6cbaf5d"}], "stats": {"total": 27, "additions": 24, "deletions": 3}, "files": [{"sha": "e5fc83cc5f35cc2891a8f7123c42695e32cd8c16", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 9, "deletions": 3, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/a76cb45e340f762d83a9501452db0581ba56db52/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a76cb45e340f762d83a9501452db0581ba56db52/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=a76cb45e340f762d83a9501452db0581ba56db52", "patch": "@@ -26,6 +26,7 @@ use middle::ty::{self, Ty};\n use middle::astconv_util::ast_ty_to_prim_ty;\n use util::num::ToPrimitive;\n use util::nodemap::NodeMap;\n+use session::Session;\n \n use graphviz::IntoCow;\n use syntax::ast;\n@@ -1117,7 +1118,7 @@ pub fn eval_const_expr_partial<'tcx>(tcx: &ty::ctxt<'tcx>,\n           debug!(\"const call({:?})\", call_args);\n           try!(eval_const_expr_partial(tcx, &**result, ty_hint, Some(&call_args)))\n       },\n-      hir::ExprLit(ref lit) => lit_to_const(&**lit, ety),\n+      hir::ExprLit(ref lit) => lit_to_const(tcx.sess, e.span, &**lit, ety),\n       hir::ExprBlock(ref block) => {\n         match block.expr {\n             Some(ref expr) => try!(eval_const_expr_partial(tcx, &**expr, ty_hint, fn_args)),\n@@ -1319,7 +1320,7 @@ fn cast_const<'tcx>(tcx: &ty::ctxt<'tcx>, val: ConstVal, ty: Ty) -> CastResult {\n     }\n }\n \n-fn lit_to_const(lit: &ast::Lit, ty_hint: Option<Ty>) -> ConstVal {\n+fn lit_to_const(sess: &Session, span: Span, lit: &ast::Lit, ty_hint: Option<Ty>) -> ConstVal {\n     match lit.node {\n         ast::LitStr(ref s, _) => Str((*s).clone()),\n         ast::LitByteStr(ref data) => {\n@@ -1339,7 +1340,12 @@ fn lit_to_const(lit: &ast::Lit, ty_hint: Option<Ty>) -> ConstVal {\n         ast::LitInt(n, ast::UnsignedIntLit(_)) => Uint(n),\n         ast::LitFloat(ref n, _) |\n         ast::LitFloatUnsuffixed(ref n) => {\n-            Float(n.parse::<f64>().unwrap() as f64)\n+            if let Ok(x) = n.parse::<f64>() {\n+                Float(x)\n+            } else {\n+                // FIXME(#31407) this is only necessary because float parsing is buggy\n+                sess.span_bug(span, \"could not evaluate float literal (see issue #31407)\");\n+            }\n         }\n         ast::LitBool(b) => Bool(b)\n     }"}, {"sha": "63b3d58b8231bf349f9b70d3120ff84a79c06099", "filename": "src/test/compile-fail/issue-31109.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/a76cb45e340f762d83a9501452db0581ba56db52/src%2Ftest%2Fcompile-fail%2Fissue-31109.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a76cb45e340f762d83a9501452db0581ba56db52/src%2Ftest%2Fcompile-fail%2Fissue-31109.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-31109.rs?ref=a76cb45e340f762d83a9501452db0581ba56db52", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+fn main() {\n+    // FIXME(#31407) this error should go away, but in the meantime we test that it\n+    // is accompanied by a somewhat useful error message.\n+    let _: f64 = 1234567890123456789012345678901234567890e-340; //~ ERROR could not evaluate float\n+}"}]}