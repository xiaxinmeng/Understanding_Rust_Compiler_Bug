{"sha": "f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c", "node_id": "C_kwDOAAsO6NoAKGY0YzkyY2M0ZDFjNTIxYWM1ZjdkOGU2ZGJiNTViZjBmYWZjYjg4MGM", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-05-24T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2022-05-25T08:34:35Z"}, "message": "rustc_codegen_ssa: cleanup `AtomicOrdering`\n\n* Remove unused `NotAtomic` ordering.\n* Rename `Monotonic` to `Relaxed` - a Rust specific name.", "tree": {"sha": "be2de34a9bb0abb3513e996e1b1a099c86f63038", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be2de34a9bb0abb3513e996e1b1a099c86f63038"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c", "html_url": "https://github.com/rust-lang/rust/commit/f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa70b89d19a52be0dea03022d807a3e615763727", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa70b89d19a52be0dea03022d807a3e615763727", "html_url": "https://github.com/rust-lang/rust/commit/fa70b89d19a52be0dea03022d807a3e615763727"}], "stats": {"total": 23, "additions": 9, "deletions": 14}, "files": [{"sha": "62eeb373821ad297eb5c3e1ae4599c09de97d485", "filename": "compiler/rustc_codegen_gcc/src/builder.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c/compiler%2Frustc_codegen_gcc%2Fsrc%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c/compiler%2Frustc_codegen_gcc%2Fsrc%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_gcc%2Fsrc%2Fbuilder.rs?ref=f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c", "patch": "@@ -68,9 +68,8 @@ trait EnumClone {\n impl EnumClone for AtomicOrdering {\n     fn clone(&self) -> Self {\n         match *self {\n-            AtomicOrdering::NotAtomic => AtomicOrdering::NotAtomic,\n             AtomicOrdering::Unordered => AtomicOrdering::Unordered,\n-            AtomicOrdering::Monotonic => AtomicOrdering::Monotonic,\n+            AtomicOrdering::Relaxed => AtomicOrdering::Relaxed,\n             AtomicOrdering::Acquire => AtomicOrdering::Acquire,\n             AtomicOrdering::Release => AtomicOrdering::Release,\n             AtomicOrdering::AcquireRelease => AtomicOrdering::AcquireRelease,\n@@ -1384,9 +1383,8 @@ impl ToGccOrdering for AtomicOrdering {\n \n         let ordering =\n             match self {\n-                AtomicOrdering::NotAtomic => __ATOMIC_RELAXED, // TODO(antoyo): check if that's the same.\n                 AtomicOrdering::Unordered => __ATOMIC_RELAXED,\n-                AtomicOrdering::Monotonic => __ATOMIC_RELAXED, // TODO(antoyo): check if that's the same.\n+                AtomicOrdering::Relaxed => __ATOMIC_RELAXED, // TODO(antoyo): check if that's the same.\n                 AtomicOrdering::Acquire => __ATOMIC_ACQUIRE,\n                 AtomicOrdering::Release => __ATOMIC_RELEASE,\n                 AtomicOrdering::AcquireRelease => __ATOMIC_ACQ_REL,"}, {"sha": "1d9a4655db637ba148f5f371fd2df9b06576fa1b", "filename": "compiler/rustc_codegen_llvm/src/llvm/ffi.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_llvm%2Fsrc%2Fllvm%2Fffi.rs?ref=f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c", "patch": "@@ -381,9 +381,8 @@ pub enum AtomicOrdering {\n impl AtomicOrdering {\n     pub fn from_generic(ao: rustc_codegen_ssa::common::AtomicOrdering) -> Self {\n         match ao {\n-            rustc_codegen_ssa::common::AtomicOrdering::NotAtomic => AtomicOrdering::NotAtomic,\n             rustc_codegen_ssa::common::AtomicOrdering::Unordered => AtomicOrdering::Unordered,\n-            rustc_codegen_ssa::common::AtomicOrdering::Monotonic => AtomicOrdering::Monotonic,\n+            rustc_codegen_ssa::common::AtomicOrdering::Relaxed => AtomicOrdering::Monotonic,\n             rustc_codegen_ssa::common::AtomicOrdering::Acquire => AtomicOrdering::Acquire,\n             rustc_codegen_ssa::common::AtomicOrdering::Release => AtomicOrdering::Release,\n             rustc_codegen_ssa::common::AtomicOrdering::AcquireRelease => {"}, {"sha": "517cdd1e8debe2c77ef87b9137c7e87dfee49361", "filename": "compiler/rustc_codegen_ssa/src/common.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fcommon.rs?ref=f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c", "patch": "@@ -58,10 +58,8 @@ pub enum AtomicRmwBinOp {\n }\n \n pub enum AtomicOrdering {\n-    NotAtomic,\n     Unordered,\n-    Monotonic,\n-    // Consume,  // Not specified yet.\n+    Relaxed,\n     Acquire,\n     Release,\n     AcquireRelease,"}, {"sha": "0ed4c3f1d9430652f529e9c8c0d404545e0c1a56", "filename": "compiler/rustc_codegen_ssa/src/mir/intrinsic.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fintrinsic.rs?ref=f4c92cc4d1c521ac5f7d8e6dbb55bf0fafcb880c", "patch": "@@ -388,17 +388,17 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                     2 => (SequentiallyConsistent, SequentiallyConsistent),\n                     3 => match split[2] {\n                         \"unordered\" => (Unordered, Unordered),\n-                        \"relaxed\" => (Monotonic, Monotonic),\n+                        \"relaxed\" => (Relaxed, Relaxed),\n                         \"acq\" => (Acquire, Acquire),\n-                        \"rel\" => (Release, Monotonic),\n+                        \"rel\" => (Release, Relaxed),\n                         \"acqrel\" => (AcquireRelease, Acquire),\n-                        \"failrelaxed\" if is_cxchg => (SequentiallyConsistent, Monotonic),\n+                        \"failrelaxed\" if is_cxchg => (SequentiallyConsistent, Relaxed),\n                         \"failacq\" if is_cxchg => (SequentiallyConsistent, Acquire),\n                         _ => bx.sess().fatal(\"unknown ordering in atomic intrinsic\"),\n                     },\n                     4 => match (split[2], split[3]) {\n-                        (\"acq\", \"failrelaxed\") if is_cxchg => (Acquire, Monotonic),\n-                        (\"acqrel\", \"failrelaxed\") if is_cxchg => (AcquireRelease, Monotonic),\n+                        (\"acq\", \"failrelaxed\") if is_cxchg => (Acquire, Relaxed),\n+                        (\"acqrel\", \"failrelaxed\") if is_cxchg => (AcquireRelease, Relaxed),\n                         _ => bx.sess().fatal(\"unknown ordering in atomic intrinsic\"),\n                     },\n                     _ => bx.sess().fatal(\"Atomic intrinsic not in correct format\"),"}]}