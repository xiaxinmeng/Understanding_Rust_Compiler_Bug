{"sha": "98dbce4fe4a6f63a4d1f9e2fdd6b2752ed097af4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4ZGJjZTRmZTRhNmY2M2E0ZDFmOWUyZmRkNmIyNzUyZWQwOTdhZjQ=", "commit": {"author": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2018-08-01T04:32:36Z"}, "committer": {"name": "Michael Wright", "email": "mikerite@lavabit.com", "date": "2018-08-01T04:33:08Z"}, "message": "Fix E0502 warnings\n\nFixes #2982", "tree": {"sha": "b90db1302f1ef3988f7bf8c4fe0bcadf5040041a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b90db1302f1ef3988f7bf8c4fe0bcadf5040041a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98dbce4fe4a6f63a4d1f9e2fdd6b2752ed097af4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98dbce4fe4a6f63a4d1f9e2fdd6b2752ed097af4", "html_url": "https://github.com/rust-lang/rust/commit/98dbce4fe4a6f63a4d1f9e2fdd6b2752ed097af4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98dbce4fe4a6f63a4d1f9e2fdd6b2752ed097af4/comments", "author": null, "committer": null, "parents": [{"sha": "9c53b1560cf5fdbd899df2696b40ca548c67dd53", "url": "https://api.github.com/repos/rust-lang/rust/commits/9c53b1560cf5fdbd899df2696b40ca548c67dd53", "html_url": "https://github.com/rust-lang/rust/commit/9c53b1560cf5fdbd899df2696b40ca548c67dd53"}], "stats": {"total": 10, "additions": 7, "deletions": 3}, "files": [{"sha": "4a23de3b8fd234a863d44ab740e11875ea5d1313", "filename": "clippy_lints/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/98dbce4fe4a6f63a4d1f9e2fdd6b2752ed097af4/clippy_lints%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98dbce4fe4a6f63a4d1f9e2fdd6b2752ed097af4/clippy_lints%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.rs?ref=98dbce4fe4a6f63a4d1f9e2fdd6b2752ed097af4", "patch": "@@ -366,9 +366,11 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry<'_>) {\n     reg.register_late_lint_pass(box large_enum_variant::LargeEnumVariant::new(conf.enum_variant_size_threshold));\n     reg.register_late_lint_pass(box explicit_write::Pass);\n     reg.register_late_lint_pass(box needless_pass_by_value::NeedlessPassByValue);\n+\n+    let target = &reg.sess.target;\n     reg.register_late_lint_pass(box trivially_copy_pass_by_ref::TriviallyCopyPassByRef::new(\n             conf.trivial_copy_size_limit,\n-            &reg.sess.target,\n+            target,\n     ));\n     reg.register_early_lint_pass(box literal_representation::LiteralDigitGrouping);\n     reg.register_early_lint_pass(box literal_representation::LiteralRepresentation::new("}, {"sha": "57486b30d349324a40e02ad7971cdb11afe0d20b", "filename": "clippy_lints/src/utils/hir_utils.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/98dbce4fe4a6f63a4d1f9e2fdd6b2752ed097af4/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98dbce4fe4a6f63a4d1f9e2fdd6b2752ed097af4/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Futils%2Fhir_utils.rs?ref=98dbce4fe4a6f63a4d1f9e2fdd6b2752ed097af4", "patch": "@@ -448,7 +448,8 @@ impl<'a, 'tcx: 'a> SpanlessHash<'a, 'tcx> {\n                     CaptureClause::CaptureByValue => 0,\n                     CaptureClause::CaptureByRef => 1,\n                 }.hash(&mut self.s);\n-                self.hash_expr(&self.cx.tcx.hir.body(eid).value);\n+                let value = &self.cx.tcx.hir.body(eid).value;\n+                self.hash_expr(value);\n             },\n             ExprKind::Field(ref e, ref f) => {\n                 let c: fn(_, _) -> _ = ExprKind::Field;\n@@ -515,7 +516,8 @@ impl<'a, 'tcx: 'a> SpanlessHash<'a, 'tcx> {\n                 self.hash_expr(e);\n                 let full_table = self.tables;\n                 self.tables = self.cx.tcx.body_tables(l_id.body);\n-                self.hash_expr(&self.cx.tcx.hir.body(l_id.body).value);\n+                let value = &self.cx.tcx.hir.body(l_id.body).value;\n+                self.hash_expr(value);\n                 self.tables = full_table;\n             },\n             ExprKind::Ret(ref e) => {"}]}