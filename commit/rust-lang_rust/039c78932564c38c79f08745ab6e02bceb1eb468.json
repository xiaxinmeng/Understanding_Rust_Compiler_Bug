{"sha": "039c78932564c38c79f08745ab6e02bceb1eb468", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzOWM3ODkzMjU2NGMzOGM3OWYwODc0NWFiNmUwMmJjZWIxZWI0Njg=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-13T22:31:08Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-13T22:31:08Z"}, "message": "typeck: extract suggest_first_deref_field", "tree": {"sha": "7064edafef5684378508ba14bfcb6b097d849b88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7064edafef5684378508ba14bfcb6b097d849b88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/039c78932564c38c79f08745ab6e02bceb1eb468", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/039c78932564c38c79f08745ab6e02bceb1eb468", "html_url": "https://github.com/rust-lang/rust/commit/039c78932564c38c79f08745ab6e02bceb1eb468", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/039c78932564c38c79f08745ab6e02bceb1eb468/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98058468815a62be36875ed0e990bbcbcd4a42b4", "url": "https://api.github.com/repos/rust-lang/rust/commits/98058468815a62be36875ed0e990bbcbcd4a42b4", "html_url": "https://github.com/rust-lang/rust/commit/98058468815a62be36875ed0e990bbcbcd4a42b4"}], "stats": {"total": 32, "additions": 21, "deletions": 11}, "files": [{"sha": "2b696613c8b5522c95075dafa17e7adeb744a44d", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 21, "deletions": 11, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/039c78932564c38c79f08745ab6e02bceb1eb468/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/039c78932564c38c79f08745ab6e02bceb1eb468/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=039c78932564c38c79f08745ab6e02bceb1eb468", "patch": "@@ -1373,17 +1373,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         self.maybe_suggest_array_indexing(&mut err, expr, base, field, len);\n                     }\n                     ty::RawPtr(..) => {\n-                        let base = self.tcx.sess.source_map()\n-                            .span_to_snippet(base.span)\n-                            .unwrap_or_else(|_| self.tcx.hir().hir_to_pretty_string(base.hir_id));\n-                        let msg = format!(\"`{}` is a raw pointer; try dereferencing it\", base);\n-                        let suggestion = format!(\"(*{}).{}\", base, field);\n-                        err.span_suggestion(\n-                            expr.span,\n-                            &msg,\n-                            suggestion,\n-                            Applicability::MaybeIncorrect,\n-                        );\n+                        self.suggest_first_deref_field(&mut err, expr, base, field);\n                     }\n                     _ => {}\n                 }\n@@ -1480,6 +1470,26 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n         }\n     }\n \n+    fn suggest_first_deref_field(\n+        &self,\n+        err: &mut DiagnosticBuilder<'_>,\n+        expr: &hir::Expr,\n+        base: &hir::Expr,\n+        field: ast::Ident,\n+    ) {\n+        let base = self.tcx.sess.source_map()\n+            .span_to_snippet(base.span)\n+            .unwrap_or_else(|_| self.tcx.hir().hir_to_pretty_string(base.hir_id));\n+        let msg = format!(\"`{}` is a raw pointer; try dereferencing it\", base);\n+        let suggestion = format!(\"(*{}).{}\", base, field);\n+        err.span_suggestion(\n+            expr.span,\n+            &msg,\n+            suggestion,\n+            Applicability::MaybeIncorrect,\n+        );\n+    }\n+\n     fn no_such_field_err<T: Display>(&self, span: Span, field: T, expr_t: &ty::TyS<'_>)\n         -> DiagnosticBuilder<'_> {\n         type_error_struct!(self.tcx().sess, span, expr_t, E0609,"}]}