{"sha": "76ea56667703ac06689ff1d6fba5d170fa7392a7", "node_id": "C_kwDOAAsO6NoAKDc2ZWE1NjY2NzcwM2FjMDY2ODlmZjFkNmZiYTVkMTcwZmE3MzkyYTc", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-02-21T07:27:24Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2022-02-21T07:59:39Z"}, "message": "Better error if the user tries to do assignment ... else", "tree": {"sha": "9ac376f716daa1c81e1285bc7bdf837b0a064617", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9ac376f716daa1c81e1285bc7bdf837b0a064617"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76ea56667703ac06689ff1d6fba5d170fa7392a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76ea56667703ac06689ff1d6fba5d170fa7392a7", "html_url": "https://github.com/rust-lang/rust/commit/76ea56667703ac06689ff1d6fba5d170fa7392a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76ea56667703ac06689ff1d6fba5d170fa7392a7/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c1aa85475cf5623caf50f7ef3b62903bb084e518", "url": "https://api.github.com/repos/rust-lang/rust/commits/c1aa85475cf5623caf50f7ef3b62903bb084e518", "html_url": "https://github.com/rust-lang/rust/commit/c1aa85475cf5623caf50f7ef3b62903bb084e518"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "965e6a6ca3f2727c8a8ec50019c6ea94e68ed695", "filename": "compiler/rustc_parse/src/parser/stmt.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/76ea56667703ac06689ff1d6fba5d170fa7392a7/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76ea56667703ac06689ff1d6fba5d170fa7392a7/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fstmt.rs?ref=76ea56667703ac06689ff1d6fba5d170fa7392a7", "patch": "@@ -103,6 +103,16 @@ impl<'a> Parser<'a> {\n             } else {\n                 self.parse_expr_res(Restrictions::STMT_EXPR, Some(attrs))\n             }?;\n+            if matches!(e.kind, ExprKind::Assign(..)) && self.eat_keyword(kw::Else) {\n+                let bl = self.parse_block()?;\n+                // Destructuring assignment ... else.\n+                // This is not allowed, but point it out in a nice way.\n+                let mut err = self.struct_span_err(\n+                    e.span.to(bl.span),\n+                    \"<assignment> ... else { ... } is not allowed\",\n+                );\n+                err.emit();\n+            }\n             self.mk_stmt(lo.to(e.span), StmtKind::Expr(e))\n         } else {\n             self.error_outer_attrs(&attrs.take_for_recovery());"}, {"sha": "9a09c414ac80fb1790d17cb3ad85400dc2051055", "filename": "src/test/ui/let-else/let-else-destructuring.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/76ea56667703ac06689ff1d6fba5d170fa7392a7/src%2Ftest%2Fui%2Flet-else%2Flet-else-destructuring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76ea56667703ac06689ff1d6fba5d170fa7392a7/src%2Ftest%2Fui%2Flet-else%2Flet-else-destructuring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flet-else%2Flet-else-destructuring.rs?ref=76ea56667703ac06689ff1d6fba5d170fa7392a7", "patch": "@@ -0,0 +1,18 @@\n+#![feature(let_else)]\n+#[derive(Debug)]\n+enum Foo {\n+    Done,\n+    Nested(Option<&'static Foo>),\n+}\n+\n+fn walk(mut value: &Foo) {\n+    loop {\n+        println!(\"{:?}\", value);\n+        &Foo::Nested(Some(value)) = value else { break }; //~ ERROR invalid left-hand side of assignment\n+        //~^ERROR <assignment> ... else { ... } is not allowed\n+    }\n+}\n+\n+fn main() {\n+    walk(&Foo::Done);\n+}"}, {"sha": "95efb7116829e6252303834987765942dd2a8167", "filename": "src/test/ui/let-else/let-else-destructuring.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/76ea56667703ac06689ff1d6fba5d170fa7392a7/src%2Ftest%2Fui%2Flet-else%2Flet-else-destructuring.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/76ea56667703ac06689ff1d6fba5d170fa7392a7/src%2Ftest%2Fui%2Flet-else%2Flet-else-destructuring.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flet-else%2Flet-else-destructuring.stderr?ref=76ea56667703ac06689ff1d6fba5d170fa7392a7", "patch": "@@ -0,0 +1,17 @@\n+error: <assignment> ... else { ... } is not allowed\n+  --> $DIR/let-else-destructuring.rs:11:9\n+   |\n+LL |         &Foo::Nested(Some(value)) = value else { break };\n+   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error[E0070]: invalid left-hand side of assignment\n+  --> $DIR/let-else-destructuring.rs:11:35\n+   |\n+LL |         &Foo::Nested(Some(value)) = value else { break };\n+   |         ------------------------- ^\n+   |         |\n+   |         cannot assign to this expression\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0070`."}]}