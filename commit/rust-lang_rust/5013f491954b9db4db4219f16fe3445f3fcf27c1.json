{"sha": "5013f491954b9db4db4219f16fe3445f3fcf27c1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwMTNmNDkxOTU0YjlkYjRkYjQyMTlmMTZmZTM0NDVmM2ZjZjI3YzE=", "commit": {"author": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T11:03:39Z"}, "committer": {"name": "Luis de Bethencourt", "email": "luisbg@osg.samsung.com", "date": "2017-05-11T15:22:32Z"}, "message": "clean tests/ui/entry.rs\n\nCleaning the empty lines for clarity.", "tree": {"sha": "64ff3897036e4a5511295bb5207980b7e43982a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64ff3897036e4a5511295bb5207980b7e43982a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5013f491954b9db4db4219f16fe3445f3fcf27c1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5013f491954b9db4db4219f16fe3445f3fcf27c1", "html_url": "https://github.com/rust-lang/rust/commit/5013f491954b9db4db4219f16fe3445f3fcf27c1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5013f491954b9db4db4219f16fe3445f3fcf27c1/comments", "author": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "committer": {"login": "luisbg", "id": 303663, "node_id": "MDQ6VXNlcjMwMzY2Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/303663?v=4", "gravatar_id": "", "url": "https://api.github.com/users/luisbg", "html_url": "https://github.com/luisbg", "followers_url": "https://api.github.com/users/luisbg/followers", "following_url": "https://api.github.com/users/luisbg/following{/other_user}", "gists_url": "https://api.github.com/users/luisbg/gists{/gist_id}", "starred_url": "https://api.github.com/users/luisbg/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/luisbg/subscriptions", "organizations_url": "https://api.github.com/users/luisbg/orgs", "repos_url": "https://api.github.com/users/luisbg/repos", "events_url": "https://api.github.com/users/luisbg/events{/privacy}", "received_events_url": "https://api.github.com/users/luisbg/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "856d64d43e6bc732e149e63e6e0b952f3a7d8184", "url": "https://api.github.com/repos/rust-lang/rust/commits/856d64d43e6bc732e149e63e6e0b952f3a7d8184", "html_url": "https://github.com/rust-lang/rust/commit/856d64d43e6bc732e149e63e6e0b952f3a7d8184"}], "stats": {"total": 46, "additions": 12, "deletions": 34}, "files": [{"sha": "941f0e73c0a71f828257c9ab555c7020398b97ae", "filename": "tests/ui/empty_enum.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5013f491954b9db4db4219f16fe3445f3fcf27c1/tests%2Fui%2Fempty_enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5013f491954b9db4db4219f16fe3445f3fcf27c1/tests%2Fui%2Fempty_enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fempty_enum.rs?ref=5013f491954b9db4db4219f16fe3445f3fcf27c1", "patch": "@@ -6,6 +6,5 @@\n \n enum Empty {}\n \n-\n fn main() {\n }"}, {"sha": "c7ee18409044bd97d4775fc3d8e3b7dfb402aa83", "filename": "tests/ui/entry.rs", "status": "modified", "additions": 0, "deletions": 21, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/5013f491954b9db4db4219f16fe3445f3fcf27c1/tests%2Fui%2Fentry.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5013f491954b9db4db4219f16fe3445f3fcf27c1/tests%2Fui%2Fentry.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.rs?ref=5013f491954b9db4db4219f16fe3445f3fcf27c1", "patch": "@@ -11,51 +11,30 @@ fn foo() {}\n \n fn insert_if_absent0<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n     if !m.contains_key(&k) { m.insert(k, v); }\n-\n-\n-\n }\n \n fn insert_if_absent1<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n     if !m.contains_key(&k) { foo(); m.insert(k, v); }\n-\n-\n-\n }\n \n fn insert_if_absent2<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n     if !m.contains_key(&k) { m.insert(k, v) } else { None };\n-\n-\n-\n }\n \n fn insert_if_present2<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n     if m.contains_key(&k) { None } else { m.insert(k, v) };\n-\n-\n-\n }\n \n fn insert_if_absent3<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n-\n-\n-\n }\n \n fn insert_if_present3<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, v: V) {\n     if m.contains_key(&k) { None } else { foo(); m.insert(k, v) };\n-\n-\n-\n }\n \n fn insert_in_btreemap<K: Ord, V>(m: &mut BTreeMap<K, V>, k: K, v: V) {\n     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n-\n-\n-\n }\n \n fn insert_other_if_absent<K: Eq + Hash, V>(m: &mut HashMap<K, V>, k: K, o: K, v: V) {"}, {"sha": "838eb88737019b7a6c4dfe79c57ebab2168e1b36", "filename": "tests/ui/entry.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/5013f491954b9db4db4219f16fe3445f3fcf27c1/tests%2Fui%2Fentry.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/5013f491954b9db4db4219f16fe3445f3fcf27c1/tests%2Fui%2Fentry.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fentry.stderr?ref=5013f491954b9db4db4219f16fe3445f3fcf27c1", "patch": "@@ -11,39 +11,39 @@ note: lint level defined here\n    |         ^^^^^^^^^\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:20:5\n+  --> $DIR/entry.rs:17:5\n    |\n-20 |     if !m.contains_key(&k) { foo(); m.insert(k, v); }\n+17 |     if !m.contains_key(&k) { foo(); m.insert(k, v); }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:27:5\n+  --> $DIR/entry.rs:21:5\n    |\n-27 |     if !m.contains_key(&k) { m.insert(k, v) } else { None };\n+21 |     if !m.contains_key(&k) { m.insert(k, v) } else { None };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:34:5\n+  --> $DIR/entry.rs:25:5\n    |\n-34 |     if m.contains_key(&k) { None } else { m.insert(k, v) };\n+25 |     if m.contains_key(&k) { None } else { m.insert(k, v) };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:41:5\n+  --> $DIR/entry.rs:29:5\n    |\n-41 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n+29 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `HashMap`\n-  --> $DIR/entry.rs:48:5\n+  --> $DIR/entry.rs:33:5\n    |\n-48 |     if m.contains_key(&k) { None } else { foo(); m.insert(k, v) };\n+33 |     if m.contains_key(&k) { None } else { foo(); m.insert(k, v) };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: usage of `contains_key` followed by `insert` on a `BTreeMap`\n-  --> $DIR/entry.rs:55:5\n+  --> $DIR/entry.rs:37:5\n    |\n-55 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n+37 |     if !m.contains_key(&k) { foo(); m.insert(k, v) } else { None };\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `m.entry(k)`\n \n error: aborting due to 7 previous errors"}]}