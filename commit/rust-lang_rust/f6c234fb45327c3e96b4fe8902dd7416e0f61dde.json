{"sha": "f6c234fb45327c3e96b4fe8902dd7416e0f61dde", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2YzIzNGZiNDUzMjdjM2U5NmI0ZmU4OTAyZGQ3NDE2ZTBmNjFkZGU=", "commit": {"author": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-03-28T20:06:37Z"}, "committer": {"name": "Steve Klabnik", "email": "steve@steveklabnik.com", "date": "2015-03-28T20:06:37Z"}, "message": "Document properties for Eq + Hash\n\nFixes #23320", "tree": {"sha": "6210ee2fa3b827021baed86b07a42176a289fbe2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6210ee2fa3b827021baed86b07a42176a289fbe2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6c234fb45327c3e96b4fe8902dd7416e0f61dde", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6c234fb45327c3e96b4fe8902dd7416e0f61dde", "html_url": "https://github.com/rust-lang/rust/commit/f6c234fb45327c3e96b4fe8902dd7416e0f61dde", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6c234fb45327c3e96b4fe8902dd7416e0f61dde/comments", "author": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "steveklabnik", "id": 27786, "node_id": "MDQ6VXNlcjI3Nzg2", "avatar_url": "https://avatars.githubusercontent.com/u/27786?v=4", "gravatar_id": "", "url": "https://api.github.com/users/steveklabnik", "html_url": "https://github.com/steveklabnik", "followers_url": "https://api.github.com/users/steveklabnik/followers", "following_url": "https://api.github.com/users/steveklabnik/following{/other_user}", "gists_url": "https://api.github.com/users/steveklabnik/gists{/gist_id}", "starred_url": "https://api.github.com/users/steveklabnik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/steveklabnik/subscriptions", "organizations_url": "https://api.github.com/users/steveklabnik/orgs", "repos_url": "https://api.github.com/users/steveklabnik/repos", "events_url": "https://api.github.com/users/steveklabnik/events{/privacy}", "received_events_url": "https://api.github.com/users/steveklabnik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "242ed0b7c0f6a21096f2cc3e1ad1bdb176d02545", "url": "https://api.github.com/repos/rust-lang/rust/commits/242ed0b7c0f6a21096f2cc3e1ad1bdb176d02545", "html_url": "https://github.com/rust-lang/rust/commit/242ed0b7c0f6a21096f2cc3e1ad1bdb176d02545"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "2375ae896500586799867ef4cd6ab5d23d76380a", "filename": "src/libcore/hash/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/f6c234fb45327c3e96b4fe8902dd7416e0f61dde/src%2Flibcore%2Fhash%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6c234fb45327c3e96b4fe8902dd7416e0f61dde/src%2Flibcore%2Fhash%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fhash%2Fmod.rs?ref=f6c234fb45327c3e96b4fe8902dd7416e0f61dde", "patch": "@@ -73,6 +73,16 @@ mod sip;\n ///\n /// The `H` type parameter is an abstract hash state that is used by the `Hash`\n /// to compute the hash.\n+///\n+/// If you are also implementing `Eq`, there is an additional property that\n+/// is important:\n+///\n+/// ```text\n+/// k1 == k2 -> hash(k1) == hash(k2)\n+/// ```\n+///\n+/// In other words, if two keys are equal, their hashes should also be equal.\n+/// `HashMap` and `HashSet` both rely on this behavior.\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Hash {\n     /// Feeds this value into the state given, updating the hasher as necessary."}, {"sha": "30ccb05cdf0ee7bdd3056c0bbcd7c73cde68b00a", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f6c234fb45327c3e96b4fe8902dd7416e0f61dde/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6c234fb45327c3e96b4fe8902dd7416e0f61dde/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=f6c234fb45327c3e96b4fe8902dd7416e0f61dde", "patch": "@@ -214,7 +214,14 @@ fn test_resize_policy() {\n /// overridden with one of the constructors.\n ///\n /// It is required that the keys implement the `Eq` and `Hash` traits, although\n-/// this can frequently be achieved by using `#[derive(Eq, Hash)]`.\n+/// this can frequently be achieved by using `#[derive(Eq, Hash)]`. If you\n+/// implement these yourself, it is important that the following property holds:\n+///\n+/// ```text\n+/// k1 == k2 -> hash(k1) == hash(k2)\n+/// ```\n+///\n+/// In other words, if two keys are equal, their hashes must be equal.\n ///\n /// It is a logic error for a key to be modified in such a way that the key's\n /// hash, as determined by the `Hash` trait, or its equality, as determined by"}, {"sha": "9bb969c4042670d8fb2089b29e1f06efd116b2f9", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f6c234fb45327c3e96b4fe8902dd7416e0f61dde/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6c234fb45327c3e96b4fe8902dd7416e0f61dde/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=f6c234fb45327c3e96b4fe8902dd7416e0f61dde", "patch": "@@ -36,7 +36,16 @@ use super::state::HashState;\n \n /// An implementation of a hash set using the underlying representation of a\n /// HashMap where the value is (). As with the `HashMap` type, a `HashSet`\n-/// requires that the elements implement the `Eq` and `Hash` traits.\n+/// requires that the elements implement the `Eq` and `Hash` traits. This can\n+/// frequently be achieved by using `#[derive(Eq, Hash)]`. If you implement\n+/// these yourself, it is important that the following property holds:\n+///\n+/// ```text\n+/// k1 == k2 -> hash(k1) == hash(k2)\n+/// ```\n+///\n+/// In other words, if two keys are equal, their hashes must be equal.\n+///\n ///\n /// It is a logic error for an item to be modified in such a way that the\n /// item's hash, as determined by the `Hash` trait, or its equality, as"}]}