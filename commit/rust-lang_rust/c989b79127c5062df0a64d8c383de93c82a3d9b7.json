{"sha": "c989b79127c5062df0a64d8c383de93c82a3d9b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5ODliNzkxMjdjNTA2MmRmMGE2NGQ4YzM4M2RlOTNjODJhM2Q5Yjc=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-15T23:13:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-06-15T23:13:09Z"}, "message": "auto merge of #7132 : thestinger/rust/rpath, r=brson\n\nThis is a bad default, because the binaries will point at an absolute\r\npath regardless of where they are moved. This opens up a security issue\r\nfor packages, because they will attempt to load libraries from a path\r\nthat's often owned by a regular user.\r\n\r\nEvery Rust binary is currently flagged by Debian, Fedora and Arch lint\r\ncheckers as having dangerous rpaths. They don't meet the requirements to\r\nbe placed in the repositories without manually stripping this from each\r\nbinary.\r\n\r\nThe relative rpath is still enough to keep the binaries working until\r\nthey are moved relative to the crates they're linked against.\r\n\r\nhttp://wiki.debian.org/RpathIssue\r\nhttps://fedoraproject.org/wiki/Packaging:Guidelines#Beware_of_Rpath", "tree": {"sha": "3055673da5765574cac59582305a7b1aec37df3c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3055673da5765574cac59582305a7b1aec37df3c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c989b79127c5062df0a64d8c383de93c82a3d9b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c989b79127c5062df0a64d8c383de93c82a3d9b7", "html_url": "https://github.com/rust-lang/rust/commit/c989b79127c5062df0a64d8c383de93c82a3d9b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c989b79127c5062df0a64d8c383de93c82a3d9b7/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "579c614e38303434bdb2926e192f69db041aec78", "url": "https://api.github.com/repos/rust-lang/rust/commits/579c614e38303434bdb2926e192f69db041aec78", "html_url": "https://github.com/rust-lang/rust/commit/579c614e38303434bdb2926e192f69db041aec78"}, {"sha": "708395d65d689080cc96dd091adab3fc4c5c3f27", "url": "https://api.github.com/repos/rust-lang/rust/commits/708395d65d689080cc96dd091adab3fc4c5c3f27", "html_url": "https://github.com/rust-lang/rust/commit/708395d65d689080cc96dd091adab3fc4c5c3f27"}], "stats": {"total": 26, "additions": 1, "deletions": 25}, "files": [{"sha": "85fc0575170bc8b76ae4065d51df8167d582f413", "filename": "src/librustc/back/rpath.rs", "status": "modified", "additions": 1, "deletions": 25, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/c989b79127c5062df0a64d8c383de93c82a3d9b7/src%2Flibrustc%2Fback%2Frpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c989b79127c5062df0a64d8c383de93c82a3d9b7/src%2Flibrustc%2Fback%2Frpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Frpath.rs?ref=c989b79127c5062df0a64d8c383de93c82a3d9b7", "patch": "@@ -77,10 +77,6 @@ fn get_rpaths(os: session::os,\n     // crates they depend on.\n     let rel_rpaths = get_rpaths_relative_to_output(os, output, libs);\n \n-    // Make backup absolute paths to the libraries. Binaries can\n-    // be moved as long as the crates they link against don't move.\n-    let abs_rpaths = get_absolute_rpaths(libs);\n-\n     // And a final backup rpath to the global library location.\n     let fallback_rpaths = ~[get_install_prefix_rpath(target_triple)];\n \n@@ -92,11 +88,9 @@ fn get_rpaths(os: session::os,\n     }\n \n     log_rpaths(\"relative\", rel_rpaths);\n-    log_rpaths(\"absolute\", abs_rpaths);\n     log_rpaths(\"fallback\", fallback_rpaths);\n \n     let mut rpaths = rel_rpaths;\n-    rpaths.push_all(abs_rpaths);\n     rpaths.push_all(fallback_rpaths);\n \n     // Remove duplicates\n@@ -166,14 +160,6 @@ pub fn get_relative_to(abs1: &Path, abs2: &Path) -> Path {\n     }\n }\n \n-fn get_absolute_rpaths(libs: &[Path]) -> ~[Path] {\n-    vec::map(libs, |a| get_absolute_rpath(a) )\n-}\n-\n-pub fn get_absolute_rpath(lib: &Path) -> Path {\n-    os::make_absolute(lib).dir_path()\n-}\n-\n #[cfg(stage0)]\n pub fn get_install_prefix_rpath(target_triple: &str) -> Path {\n     let install_prefix = env!(\"CFG_PREFIX\");\n@@ -220,7 +206,7 @@ mod test {\n     // these redundant #[cfg(test)] blocks can be removed\n     #[cfg(test)]\n     #[cfg(test)]\n-    use back::rpath::{get_absolute_rpath, get_install_prefix_rpath};\n+    use back::rpath::{get_install_prefix_rpath};\n     use back::rpath::{get_relative_to, get_rpath_relative_to_output};\n     use back::rpath::{minimize_rpaths, rpaths_to_flags};\n     use driver::session;\n@@ -364,14 +350,4 @@ mod test {\n                                                &Path(\"lib/libstd.so\"));\n         assert_eq!(res.to_str(), ~\"@executable_path/../lib\");\n     }\n-\n-    #[test]\n-    fn test_get_absolute_rpath() {\n-        let res = get_absolute_rpath(&Path(\"lib/libstd.so\"));\n-        debug!(\"test_get_absolute_rpath: %s vs. %s\",\n-               res.to_str(),\n-               os::make_absolute(&Path(\"lib\")).to_str());\n-\n-        assert_eq!(res, os::make_absolute(&Path(\"lib\")));\n-    }\n }"}]}