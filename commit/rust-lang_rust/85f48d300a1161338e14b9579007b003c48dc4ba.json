{"sha": "85f48d300a1161338e14b9579007b003c48dc4ba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1ZjQ4ZDMwMGExMTYxMzM4ZTE0Yjk1NzkwMDdiMDAzYzQ4ZGM0YmE=", "commit": {"author": {"name": "Amit Aryeh Levy", "email": "amit@amitlevy.com", "date": "2015-09-19T19:33:34Z"}, "committer": {"name": "Amit Aryeh Levy", "email": "amit@amitlevy.com", "date": "2015-09-19T19:33:34Z"}, "message": "Make FixedSizeArray an unsafe trait", "tree": {"sha": "15ee8e108f1a1e10e87278a980cc99646bdbbfbf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/15ee8e108f1a1e10e87278a980cc99646bdbbfbf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85f48d300a1161338e14b9579007b003c48dc4ba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85f48d300a1161338e14b9579007b003c48dc4ba", "html_url": "https://github.com/rust-lang/rust/commit/85f48d300a1161338e14b9579007b003c48dc4ba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85f48d300a1161338e14b9579007b003c48dc4ba/comments", "author": {"login": "alevy", "id": 4689, "node_id": "MDQ6VXNlcjQ2ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/4689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alevy", "html_url": "https://github.com/alevy", "followers_url": "https://api.github.com/users/alevy/followers", "following_url": "https://api.github.com/users/alevy/following{/other_user}", "gists_url": "https://api.github.com/users/alevy/gists{/gist_id}", "starred_url": "https://api.github.com/users/alevy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alevy/subscriptions", "organizations_url": "https://api.github.com/users/alevy/orgs", "repos_url": "https://api.github.com/users/alevy/repos", "events_url": "https://api.github.com/users/alevy/events{/privacy}", "received_events_url": "https://api.github.com/users/alevy/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alevy", "id": 4689, "node_id": "MDQ6VXNlcjQ2ODk=", "avatar_url": "https://avatars.githubusercontent.com/u/4689?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alevy", "html_url": "https://github.com/alevy", "followers_url": "https://api.github.com/users/alevy/followers", "following_url": "https://api.github.com/users/alevy/following{/other_user}", "gists_url": "https://api.github.com/users/alevy/gists{/gist_id}", "starred_url": "https://api.github.com/users/alevy/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alevy/subscriptions", "organizations_url": "https://api.github.com/users/alevy/orgs", "repos_url": "https://api.github.com/users/alevy/repos", "events_url": "https://api.github.com/users/alevy/events{/privacy}", "received_events_url": "https://api.github.com/users/alevy/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72a10fa1d324609d6d946cd7437b1dd0d9dfe0a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/72a10fa1d324609d6d946cd7437b1dd0d9dfe0a3", "html_url": "https://github.com/rust-lang/rust/commit/72a10fa1d324609d6d946cd7437b1dd0d9dfe0a3"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "976689beccd110e2dd0b19a8865db1513c210775", "filename": "src/libcore/array.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/85f48d300a1161338e14b9579007b003c48dc4ba/src%2Flibcore%2Farray.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85f48d300a1161338e14b9579007b003c48dc4ba/src%2Flibcore%2Farray.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Farray.rs?ref=85f48d300a1161338e14b9579007b003c48dc4ba", "patch": "@@ -35,14 +35,14 @@ use slice::{Iter, IterMut, SliceExt};\n ///\n /// This trait can be used to implement other traits on fixed-size arrays\n /// without causing much metadata bloat.\n-pub trait FixedSizeArray<T> {\n+pub unsafe trait FixedSizeArray<T> {\n     /// Converts the array to immutable slice\n     fn as_slice(&self) -> &[T];\n     /// Converts the array to mutable slice\n     fn as_mut_slice(&mut self) -> &mut [T];\n }\n \n-impl<T, A: Unsize<[T]>> FixedSizeArray<T> for A {\n+unsafe impl<T, A: Unsize<[T]>> FixedSizeArray<T> for A {\n     #[inline]\n     fn as_slice(&self) -> &[T] {\n         self"}]}