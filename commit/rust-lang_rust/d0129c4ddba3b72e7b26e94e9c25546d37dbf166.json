{"sha": "d0129c4ddba3b72e7b26e94e9c25546d37dbf166", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwMTI5YzRkZGJhM2I3MmU3YjI2ZTk0ZTljMjU1NDZkMzdkYmYxNjY=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-05-08T17:48:03Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2020-05-08T17:48:03Z"}, "message": "Add diagnostic for break outside of loop", "tree": {"sha": "465c1af378252ce1fea0f47e30f69892332761a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/465c1af378252ce1fea0f47e30f69892332761a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0129c4ddba3b72e7b26e94e9c25546d37dbf166", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0129c4ddba3b72e7b26e94e9c25546d37dbf166", "html_url": "https://github.com/rust-lang/rust/commit/d0129c4ddba3b72e7b26e94e9c25546d37dbf166", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0129c4ddba3b72e7b26e94e9c25546d37dbf166/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8bf94a4b94074eb344e495dfb4dab4bec6bc20e", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8bf94a4b94074eb344e495dfb4dab4bec6bc20e", "html_url": "https://github.com/rust-lang/rust/commit/f8bf94a4b94074eb344e495dfb4dab4bec6bc20e"}], "stats": {"total": 63, "additions": 62, "deletions": 1}, "files": [{"sha": "41ac702724e845ec68845a20b4e8357a32beb65c", "filename": "crates/ra_hir_ty/src/diagnostics.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/d0129c4ddba3b72e7b26e94e9c25546d37dbf166/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0129c4ddba3b72e7b26e94e9c25546d37dbf166/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs?ref=d0129c4ddba3b72e7b26e94e9c25546d37dbf166", "patch": "@@ -131,3 +131,31 @@ impl AstDiagnostic for MissingOkInTailExpr {\n         ast::Expr::cast(node).unwrap()\n     }\n }\n+\n+#[derive(Debug)]\n+pub struct BreakOutsideOfLoop {\n+    pub file: HirFileId,\n+    pub expr: AstPtr<ast::Expr>,\n+}\n+\n+impl Diagnostic for BreakOutsideOfLoop {\n+    fn message(&self) -> String {\n+        \"break outside of loop\".to_string()\n+    }\n+    fn source(&self) -> InFile<SyntaxNodePtr> {\n+        InFile { file_id: self.file, value: self.expr.clone().into() }\n+    }\n+    fn as_any(&self) -> &(dyn Any + Send + 'static) {\n+        self\n+    }\n+}\n+\n+impl AstDiagnostic for BreakOutsideOfLoop {\n+    type AST = ast::Expr;\n+\n+    fn ast(&self, db: &impl AstDatabase) -> Self::AST {\n+        let root = db.parse_or_expand(self.file).unwrap();\n+        let node = self.source().value.to_node(&root);\n+        ast::Expr::cast(node).unwrap()\n+    }\n+}"}, {"sha": "a21ad8d86416b4dab68c78b7d734bb0e704e693a", "filename": "crates/ra_hir_ty/src/infer.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/d0129c4ddba3b72e7b26e94e9c25546d37dbf166/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0129c4ddba3b72e7b26e94e9c25546d37dbf166/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer.rs?ref=d0129c4ddba3b72e7b26e94e9c25546d37dbf166", "patch": "@@ -717,11 +717,15 @@ mod diagnostics {\n     use hir_def::{expr::ExprId, FunctionId};\n     use hir_expand::diagnostics::DiagnosticSink;\n \n-    use crate::{db::HirDatabase, diagnostics::NoSuchField};\n+    use crate::{\n+        db::HirDatabase,\n+        diagnostics::{BreakOutsideOfLoop, NoSuchField},\n+    };\n \n     #[derive(Debug, PartialEq, Eq, Clone)]\n     pub(super) enum InferenceDiagnostic {\n         NoSuchField { expr: ExprId, field: usize },\n+        BreakOutsideOfLoop { expr: ExprId },\n     }\n \n     impl InferenceDiagnostic {\n@@ -737,6 +741,13 @@ mod diagnostics {\n                     let field = source_map.field_syntax(*expr, *field);\n                     sink.push(NoSuchField { file: field.file_id, field: field.value })\n                 }\n+                InferenceDiagnostic::BreakOutsideOfLoop { expr } => {\n+                    let (_, source_map) = db.body_with_source_map(owner.into());\n+                    let ptr = source_map\n+                        .expr_syntax(*expr)\n+                        .expect(\"break outside of loop in synthetic syntax\");\n+                    sink.push(BreakOutsideOfLoop { file: ptr.file_id, expr: ptr.value })\n+                }\n             }\n         }\n     }"}, {"sha": "0b67d216a8bf3ee4570d49a1eace14a775e6315b", "filename": "crates/ra_hir_ty/src/infer/expr.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d0129c4ddba3b72e7b26e94e9c25546d37dbf166/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0129c4ddba3b72e7b26e94e9c25546d37dbf166/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=d0129c4ddba3b72e7b26e94e9c25546d37dbf166", "patch": "@@ -235,6 +235,10 @@ impl<'a> InferenceContext<'a> {\n                 }\n                 if let Some(ctxt) = self.breakables.last_mut() {\n                     ctxt.may_break = true;\n+                } else {\n+                    self.push_diagnostic(InferenceDiagnostic::BreakOutsideOfLoop {\n+                        expr: tgt_expr,\n+                    });\n                 }\n                 Ty::simple(TypeCtor::Never)\n             }"}, {"sha": "5af88b368467670e8f64ddb3c848a15e0f66bff6", "filename": "crates/ra_hir_ty/src/tests.rs", "status": "modified", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d0129c4ddba3b72e7b26e94e9c25546d37dbf166/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0129c4ddba3b72e7b26e94e9c25546d37dbf166/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftests.rs?ref=d0129c4ddba3b72e7b26e94e9c25546d37dbf166", "patch": "@@ -518,3 +518,21 @@ fn missing_record_pat_field_no_diagnostic_if_not_exhaustive() {\n \n     assert_snapshot!(diagnostics, @\"\");\n }\n+\n+#[test]\n+fn break_outside_of_loop() {\n+    let diagnostics = TestDB::with_files(\n+        r\"\n+        //- /lib.rs\n+        fn foo() {\n+            break;\n+        }\n+        \",\n+    )\n+    .diagnostics()\n+    .0;\n+\n+    assert_snapshot!(diagnostics, @r###\"\"break\": break outside of loop\n+    \"###\n+    );\n+}"}]}