{"sha": "97d693a19a001a38f18cfd49a89ddfb8b7d3fa94", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk3ZDY5M2ExOWEwMDFhMzhmMThjZmQ0OWE4OWRkZmI4YjdkM2ZhOTQ=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-30T09:39:40Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2018-08-30T09:39:40Z"}, "message": "assert sanity in memory", "tree": {"sha": "c5254de5439f28034255fb7d86e04199bc58b1c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c5254de5439f28034255fb7d86e04199bc58b1c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/97d693a19a001a38f18cfd49a89ddfb8b7d3fa94", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/97d693a19a001a38f18cfd49a89ddfb8b7d3fa94", "html_url": "https://github.com/rust-lang/rust/commit/97d693a19a001a38f18cfd49a89ddfb8b7d3fa94", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/97d693a19a001a38f18cfd49a89ddfb8b7d3fa94/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b06a8db26e660505601b764e5d702fc17d7d73ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/b06a8db26e660505601b764e5d702fc17d7d73ee", "html_url": "https://github.com/rust-lang/rust/commit/b06a8db26e660505601b764e5d702fc17d7d73ee"}], "stats": {"total": 9, "additions": 4, "deletions": 5}, "files": [{"sha": "91fc6453446a89dc5ab566289ce42ca9c0e7e098", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/97d693a19a001a38f18cfd49a89ddfb8b7d3fa94/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/97d693a19a001a38f18cfd49a89ddfb8b7d3fa94/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=97d693a19a001a38f18cfd49a89ddfb8b7d3fa94", "patch": "@@ -258,13 +258,12 @@ impl<'a, 'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'a, 'mir, 'tcx, M> {\n             }\n             Scalar::Bits { bits, size } => {\n                 assert_eq!(size as u64, self.pointer_size().bytes());\n-                // FIXME: what on earth does this line do? docs or fix needed!\n-                let v = ((bits as u128) % (1 << self.pointer_size().bytes())) as u64;\n-                if v == 0 {\n+                assert!(bits < (1u128 << self.pointer_size().bits()));\n+                if bits == 0 {\n                     return err!(InvalidNullPointerUsage);\n                 }\n-                // the base address if the \"integer allocation\" is 0 and hence always aligned\n-                (v, required_align)\n+                // the \"base address\" is 0 and hence always aligned\n+                (bits as u64, required_align)\n             }\n         };\n         // Check alignment"}]}