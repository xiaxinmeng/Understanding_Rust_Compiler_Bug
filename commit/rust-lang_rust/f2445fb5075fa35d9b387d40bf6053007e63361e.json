{"sha": "f2445fb5075fa35d9b387d40bf6053007e63361e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyNDQ1ZmI1MDc1ZmEzNWQ5YjM4N2Q0MGJmNjA1MzAwN2U2MzM2MWU=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-07-22T01:47:02Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2018-08-19T23:30:53Z"}, "message": "Rename `Catch` variants to `TryBlock`\n\n(Not `Try` since `QuestionMark` is using that.)", "tree": {"sha": "82c5b10a462c2a0ab686b5913d7c8a1c564f8bf9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/82c5b10a462c2a0ab686b5913d7c8a1c564f8bf9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2445fb5075fa35d9b387d40bf6053007e63361e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2445fb5075fa35d9b387d40bf6053007e63361e", "html_url": "https://github.com/rust-lang/rust/commit/f2445fb5075fa35d9b387d40bf6053007e63361e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2445fb5075fa35d9b387d40bf6053007e63361e/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f28f648a9699db67b86735f97d609c3dd06f9ded", "url": "https://api.github.com/repos/rust-lang/rust/commits/f28f648a9699db67b86735f97d609c3dd06f9ded", "html_url": "https://github.com/rust-lang/rust/commit/f28f648a9699db67b86735f97d609c3dd06f9ded"}], "stats": {"total": 32, "additions": 16, "deletions": 16}, "files": [{"sha": "6ca18ae1847d94a7265ec9eeb1c38829bdc77b0c", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=f2445fb5075fa35d9b387d40bf6053007e63361e", "patch": "@@ -3613,10 +3613,10 @@ impl<'a> LoweringContext<'a> {\n                     hir::LoopSource::Loop,\n                 )\n             }),\n-            ExprKind::Catch(ref body) => {\n+            ExprKind::TryBlock(ref body) => {\n                 self.with_catch_scope(body.id, |this| {\n                     let unstable_span =\n-                        this.allow_internal_unstable(CompilerDesugaringKind::Catch, body.span);\n+                        this.allow_internal_unstable(CompilerDesugaringKind::TryBlock, body.span);\n                     let mut block = this.lower_block(body, true).into_inner();\n                     let tail = block.expr.take().map_or_else(\n                         || {"}, {"sha": "cb90d2d12770403ca0aaf37ebdec82e9ef80f245", "filename": "src/librustc/ich/impls_syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibrustc%2Fich%2Fimpls_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fich%2Fimpls_syntax.rs?ref=f2445fb5075fa35d9b387d40bf6053007e63361e", "patch": "@@ -412,7 +412,7 @@ impl_stable_hash_for!(enum ::syntax_pos::hygiene::CompilerDesugaringKind {\n     QuestionMark,\n     ExistentialReturnType,\n     ForLoop,\n-    Catch\n+    TryBlock\n });\n \n impl_stable_hash_for!(enum ::syntax_pos::FileName {"}, {"sha": "0f2afde8f9e03f3e476561ecbdf790da9be724fc", "filename": "src/libsyntax/ast.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast.rs?ref=f2445fb5075fa35d9b387d40bf6053007e63361e", "patch": "@@ -987,7 +987,7 @@ impl Expr {\n             ExprKind::Match(..) => ExprPrecedence::Match,\n             ExprKind::Closure(..) => ExprPrecedence::Closure,\n             ExprKind::Block(..) => ExprPrecedence::Block,\n-            ExprKind::Catch(..) => ExprPrecedence::Catch,\n+            ExprKind::TryBlock(..) => ExprPrecedence::TryBlock,\n             ExprKind::Async(..) => ExprPrecedence::Async,\n             ExprKind::Assign(..) => ExprPrecedence::Assign,\n             ExprKind::AssignOp(..) => ExprPrecedence::AssignOp,\n@@ -1108,8 +1108,8 @@ pub enum ExprKind {\n     /// created during lowering cannot be made the parent of any other\n     /// preexisting defs.\n     Async(CaptureBy, NodeId, P<Block>),\n-    /// A catch block (`catch { ... }`)\n-    Catch(P<Block>),\n+    /// A try block (`try { ... }`)\n+    TryBlock(P<Block>),\n \n     /// An assignment (`a = foo()`)\n     Assign(P<Expr>, P<Expr>),"}, {"sha": "327691309404976701cd9ee552b767f59ebbfe7b", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=f2445fb5075fa35d9b387d40bf6053007e63361e", "patch": "@@ -1734,7 +1734,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                                   e.span,\n                                   \"yield syntax is experimental\");\n             }\n-            ast::ExprKind::Catch(_) => {\n+            ast::ExprKind::TryBlock(_) => {\n                 gate_feature_post!(&self, catch_expr, e.span, \"`catch` expression is experimental\");\n             }\n             ast::ExprKind::IfLet(ref pats, ..) | ast::ExprKind::WhileLet(ref pats, ..) => {"}, {"sha": "632dd5c330977e6e0fc9983b6a3edce1bc60c5ed", "filename": "src/libsyntax/fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Ffold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Ffold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffold.rs?ref=f2445fb5075fa35d9b387d40bf6053007e63361e", "patch": "@@ -1351,7 +1351,7 @@ pub fn noop_fold_expr<T: Folder>(Expr {id, node, span, attrs}: Expr, folder: &mu\n             }\n             ExprKind::Yield(ex) => ExprKind::Yield(ex.map(|x| folder.fold_expr(x))),\n             ExprKind::Try(ex) => ExprKind::Try(folder.fold_expr(ex)),\n-            ExprKind::Catch(body) => ExprKind::Catch(folder.fold_block(body)),\n+            ExprKind::TryBlock(body) => ExprKind::TryBlock(folder.fold_block(body)),\n         },\n         id: folder.new_id(id),\n         span: folder.new_span(span),"}, {"sha": "99f9d0511fe5e406046be5588594818d66c36089", "filename": "src/libsyntax/parse/classify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Fparse%2Fclassify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Fparse%2Fclassify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fclassify.rs?ref=f2445fb5075fa35d9b387d40bf6053007e63361e", "patch": "@@ -31,7 +31,7 @@ pub fn expr_requires_semi_to_be_stmt(e: &ast::Expr) -> bool {\n         ast::ExprKind::WhileLet(..) |\n         ast::ExprKind::Loop(..) |\n         ast::ExprKind::ForLoop(..) |\n-        ast::ExprKind::Catch(..) => false,\n+        ast::ExprKind::TryBlock(..) => false,\n         _ => true,\n     }\n }"}, {"sha": "fdb9f80b7c6923aef0caf226f50a719cdb6b3fcd", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=f2445fb5075fa35d9b387d40bf6053007e63361e", "patch": "@@ -3458,7 +3458,7 @@ impl<'a> Parser<'a> {\n     {\n         let (iattrs, body) = self.parse_inner_attrs_and_block()?;\n         attrs.extend(iattrs);\n-        Ok(self.mk_expr(span_lo.to(body.span), ExprKind::Catch(body), attrs))\n+        Ok(self.mk_expr(span_lo.to(body.span), ExprKind::TryBlock(body), attrs))\n     }\n \n     // `match` token already eaten"}, {"sha": "f8d01fee950c5630f6dbe6e8b91d6b24926453ed", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=f2445fb5075fa35d9b387d40bf6053007e63361e", "patch": "@@ -2379,7 +2379,7 @@ impl<'a> State<'a> {\n                 self.print_expr_maybe_paren(e, parser::PREC_POSTFIX)?;\n                 self.s.word(\"?\")?\n             }\n-            ast::ExprKind::Catch(ref blk) => {\n+            ast::ExprKind::TryBlock(ref blk) => {\n                 self.head(\"do catch\")?;\n                 self.s.space()?;\n                 self.print_block_with_attrs(blk, attrs)?"}, {"sha": "6866806cd7c669d0f19af0ce25c8efb3855cfed1", "filename": "src/libsyntax/util/parser.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Futil%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Futil%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Futil%2Fparser.rs?ref=f2445fb5075fa35d9b387d40bf6053007e63361e", "patch": "@@ -273,7 +273,7 @@ pub enum ExprPrecedence {\n     Loop,\n     Match,\n     Block,\n-    Catch,\n+    TryBlock,\n     Struct,\n     Async,\n }\n@@ -332,7 +332,7 @@ impl ExprPrecedence {\n             ExprPrecedence::Loop |\n             ExprPrecedence::Match |\n             ExprPrecedence::Block |\n-            ExprPrecedence::Catch |\n+            ExprPrecedence::TryBlock |\n             ExprPrecedence::Async |\n             ExprPrecedence::Struct => PREC_PAREN,\n         }"}, {"sha": "e57d692faae53de63a428a61c17342beb98459d9", "filename": "src/libsyntax/visit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fvisit.rs?ref=f2445fb5075fa35d9b387d40bf6053007e63361e", "patch": "@@ -809,7 +809,7 @@ pub fn walk_expr<'a, V: Visitor<'a>>(visitor: &mut V, expression: &'a Expr) {\n         ExprKind::Try(ref subexpression) => {\n             visitor.visit_expr(subexpression)\n         }\n-        ExprKind::Catch(ref body) => {\n+        ExprKind::TryBlock(ref body) => {\n             visitor.visit_block(body)\n         }\n     }"}, {"sha": "569019174507b965a7049502ea800d162f4e0e7d", "filename": "src/libsyntax_pos/hygiene.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax_pos%2Fhygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2445fb5075fa35d9b387d40bf6053007e63361e/src%2Flibsyntax_pos%2Fhygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fhygiene.rs?ref=f2445fb5075fa35d9b387d40bf6053007e63361e", "patch": "@@ -595,7 +595,7 @@ impl ExpnFormat {\n #[derive(Clone, Copy, Hash, Debug, PartialEq, Eq, RustcEncodable, RustcDecodable)]\n pub enum CompilerDesugaringKind {\n     QuestionMark,\n-    Catch,\n+    TryBlock,\n     /// Desugaring of an `impl Trait` in return type position\n     /// to an `existential type Foo: Trait;` + replacing the\n     /// `impl Trait` with `Foo`.\n@@ -609,7 +609,7 @@ impl CompilerDesugaringKind {\n         Symbol::intern(match self {\n             CompilerDesugaringKind::Async => \"async\",\n             CompilerDesugaringKind::QuestionMark => \"?\",\n-            CompilerDesugaringKind::Catch => \"do catch\",\n+            CompilerDesugaringKind::TryBlock => \"do catch\",\n             CompilerDesugaringKind::ExistentialReturnType => \"existential type\",\n             CompilerDesugaringKind::ForLoop => \"for loop\",\n         })"}]}