{"sha": "5b40342d2d5bc19445e6abccef6931bdd3a03c3b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjViNDAzNDJkMmQ1YmMxOTQ0NWU2YWJjY2VmNjkzMWJkZDNhMDNjM2I=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2021-04-10T23:42:26Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-04-10T23:42:26Z"}, "message": "Merge #8465\n\n8465: Include more info in assert r=jonas-schievink a=jonas-schievink\n\nThis helped find https://github.com/rust-analyzer/rust-analyzer/issues/8464\r\n\r\nchangelog skip\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>", "tree": {"sha": "89f408685e6da02074817c49af1d1f02fb39e6eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/89f408685e6da02074817c49af1d1f02fb39e6eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5b40342d2d5bc19445e6abccef6931bdd3a03c3b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgcjfiCRBK7hj4Ov3rIwAAdHIIAIjdu/QdDSqmR0ZnQ/TeNOkT\nk/VIXGENQL7t4VJq1114DnQ68E2gWhV6VkHv9vfH8laApklGSTlzXH9xWZaKfD8Z\nGE0cpEBhAqokmCjqnYs16D5CLJFyxwuLulLq1rqjF74WSUirlwADaECfpuDzKSUL\ntmj2joRL/Mu7gH23uXCVwpYLMycMyVf+r/gPDC9EPXylmcU6z9tpXH3mYi+PgTWN\n7qFHULmKkEnFBWBo2pB6EnflXs+iXHerS75Gubt7WuEH17bEE9c5hPi61ruBwkoE\nLC+0LZai0wXCNgFy7DVYX3Bg3IzYMGv2vwZ7hv8PAmU3JHpct0v4XOUJyhn3CQU=\n=v23/\n-----END PGP SIGNATURE-----\n", "payload": "tree 89f408685e6da02074817c49af1d1f02fb39e6eb\nparent eccd0efedb230985c582edbf9d272bf5f0224acf\nparent 5f2efae3ba29df77ef481cdda10b337a8f91d153\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1618098146 +0000\ncommitter GitHub <noreply@github.com> 1618098146 +0000\n\nMerge #8465\n\n8465: Include more info in assert r=jonas-schievink a=jonas-schievink\n\nThis helped find https://github.com/rust-analyzer/rust-analyzer/issues/8464\r\n\r\nchangelog skip\r\n\r\nbors r+\n\nCo-authored-by: Jonas Schievink <jonasschievink@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5b40342d2d5bc19445e6abccef6931bdd3a03c3b", "html_url": "https://github.com/rust-lang/rust/commit/5b40342d2d5bc19445e6abccef6931bdd3a03c3b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5b40342d2d5bc19445e6abccef6931bdd3a03c3b/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eccd0efedb230985c582edbf9d272bf5f0224acf", "url": "https://api.github.com/repos/rust-lang/rust/commits/eccd0efedb230985c582edbf9d272bf5f0224acf", "html_url": "https://github.com/rust-lang/rust/commit/eccd0efedb230985c582edbf9d272bf5f0224acf"}, {"sha": "5f2efae3ba29df77ef481cdda10b337a8f91d153", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f2efae3ba29df77ef481cdda10b337a8f91d153", "html_url": "https://github.com/rust-lang/rust/commit/5f2efae3ba29df77ef481cdda10b337a8f91d153"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "6178b36c8abdacc3f5615fca243bd25713254094", "filename": "crates/hir_ty/src/method_resolution.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/5b40342d2d5bc19445e6abccef6931bdd3a03c3b/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5b40342d2d5bc19445e6abccef6931bdd3a03c3b/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs?ref=5b40342d2d5bc19445e6abccef6931bdd3a03c3b", "patch": "@@ -22,8 +22,8 @@ use crate::{\n     primitive::{self, FloatTy, IntTy, UintTy},\n     static_lifetime,\n     utils::all_super_traits,\n-    AdtId, Canonical, CanonicalVarKinds, DebruijnIndex, ForeignDefId, InEnvironment, Interner,\n-    Scalar, Substitution, TraitEnvironment, TraitRefExt, Ty, TyBuilder, TyExt, TyKind,\n+    AdtId, Canonical, CanonicalVarKinds, DebruijnIndex, ForeignDefId, HirDisplay, InEnvironment,\n+    Interner, Scalar, Substitution, TraitEnvironment, TraitRefExt, Ty, TyBuilder, TyExt, TyKind,\n };\n \n /// This is used as a key for indexing impls.\n@@ -259,7 +259,7 @@ impl InherentImpls {\n \n                 let self_ty = db.impl_self_ty(impl_id);\n                 let fp = TyFingerprint::for_inherent_impl(self_ty.skip_binders());\n-                always!(fp.is_some());\n+                always!(fp.is_some(), \"no fingerprint for {}\", self_ty.skip_binders().display(db));\n                 if let Some(fp) = fp {\n                     map.entry(fp).or_default().push(impl_id);\n                 }"}]}