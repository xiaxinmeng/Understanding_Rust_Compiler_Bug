{"sha": "7bf56df4c8bf40a16f2743447b7688343642f370", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiZjU2ZGY0YzhiZjQwYTE2ZjI3NDM0NDdiNzY4ODM0MzY0MmYzNzA=", "commit": {"author": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-10-02T18:47:51Z"}, "committer": {"name": "Aaron Turon", "email": "aturon@mozilla.com", "date": "2014-10-02T18:47:51Z"}, "message": "Revert \"Put slicing syntax behind a feature gate.\"\n\nThis reverts commit 95cfc35607ccf5f02f02de56a35a9ef50fa23a82.", "tree": {"sha": "a3854d324e66cf84cc78d1a89faff4a6265a9058", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3854d324e66cf84cc78d1a89faff4a6265a9058"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bf56df4c8bf40a16f2743447b7688343642f370", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bf56df4c8bf40a16f2743447b7688343642f370", "html_url": "https://github.com/rust-lang/rust/commit/7bf56df4c8bf40a16f2743447b7688343642f370", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bf56df4c8bf40a16f2743447b7688343642f370/comments", "author": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "aturon", "id": 709807, "node_id": "MDQ6VXNlcjcwOTgwNw==", "avatar_url": "https://avatars.githubusercontent.com/u/709807?v=4", "gravatar_id": "", "url": "https://api.github.com/users/aturon", "html_url": "https://github.com/aturon", "followers_url": "https://api.github.com/users/aturon/followers", "following_url": "https://api.github.com/users/aturon/following{/other_user}", "gists_url": "https://api.github.com/users/aturon/gists{/gist_id}", "starred_url": "https://api.github.com/users/aturon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/aturon/subscriptions", "organizations_url": "https://api.github.com/users/aturon/orgs", "repos_url": "https://api.github.com/users/aturon/repos", "events_url": "https://api.github.com/users/aturon/events{/privacy}", "received_events_url": "https://api.github.com/users/aturon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2f365ffdad40475e8f70f7af7f210d6c597b60f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2f365ffdad40475e8f70f7af7f210d6c597b60f5", "html_url": "https://github.com/rust-lang/rust/commit/2f365ffdad40475e8f70f7af7f210d6c597b60f5"}], "stats": {"total": 148, "additions": 43, "deletions": 105}, "files": [{"sha": "0a486ef03055606620796c1317764a08dec24cfe", "filename": "src/compiletest/compiletest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Fcompiletest%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Fcompiletest%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcompiletest%2Fcompiletest.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n #![crate_type = \"bin\"]\n-#![feature(phase, slicing_syntax)]\n+#![feature(phase)]\n \n #![deny(warnings)]\n "}, {"sha": "3da3d4c580755e6a0fb0a2bbb434ff169b355366", "filename": "src/doc/reference.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Fdoc%2Freference.md", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Fdoc%2Freference.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Freference.md?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -3828,7 +3828,7 @@ type signature of `print`, and the cast expression in `main`.\n Within the body of an item that has type parameter declarations, the names of\n its type parameters are types:\n \n-```ignore\n+```\n fn map<A: Clone, B: Clone>(f: |A| -> B, xs: &[A]) -> Vec<B> {\n     if xs.len() == 0 {\n        return vec![];"}, {"sha": "8b9a0ec796e27eba11ba9bd161a72cfdc7a35cdd", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -19,9 +19,8 @@\n        html_root_url = \"http://doc.rust-lang.org/master/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n-#![allow(unknown_features)]\n #![feature(macro_rules, managed_boxes, default_type_params, phase, globs)]\n-#![feature(unsafe_destructor, import_shadowing, slicing_syntax)]\n+#![feature(unsafe_destructor, import_shadowing)]\n #![no_std]\n \n #[phase(plugin, link)] extern crate core;"}, {"sha": "9cd0161791658e18c9ef17fe0f05dd0e3d95ddc8", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 3, "deletions": 6, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -51,12 +51,9 @@\n //! interval `[a, b)`:\n //!\n //! ```rust\n-//! #![feature(slicing_syntax)]\n-//! fn main() {\n-//!     let numbers = [0i, 1i, 2i];\n-//!     let last_numbers = numbers[1..3];\n-//!     // last_numbers is now &[1i, 2i]\n-//! }\n+//! let numbers = [0i, 1i, 2i];\n+//! let last_numbers = numbers[1..3];\n+//! // last_numbers is now &[1i, 2i]\n //! ```\n //!\n //! ## Implementations of other traits"}, {"sha": "31bd377a8dedf137fde4f2a1a90012324f32eb52", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -160,7 +160,7 @@ impl String {\n \n         if i > 0 {\n             unsafe {\n-                res.as_mut_vec().push_all(v[..i])\n+                res.as_mut_vec().push_all(v.[..i])\n             };\n         }\n \n@@ -177,7 +177,7 @@ impl String {\n             macro_rules! error(() => ({\n                 unsafe {\n                     if subseqidx != i_ {\n-                        res.as_mut_vec().push_all(v[subseqidx..i_]);\n+                        res.as_mut_vec().push_all(vv[subseqidx..i_]);\n                     }\n                     subseqidx = i;\n                     res.as_mut_vec().push_all(REPLACEMENT);"}, {"sha": "7e2ea492d4ccfc77e1506374adae623b38809270", "filename": "src/libcore/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibcore%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibcore%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -57,9 +57,8 @@\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n #![no_std]\n-#![allow(unknown_features)]\n #![feature(globs, intrinsics, lang_items, macro_rules, managed_boxes, phase)]\n-#![feature(simd, unsafe_destructor, slicing_syntax)]\n+#![feature(simd, unsafe_destructor)]\n #![deny(missing_doc)]\n \n mod macros;"}, {"sha": "77cee2b9863460de55d6da1bb73ef89ee175807c", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -684,7 +684,7 @@ pub trait IndexMut<Index, Result> {\n  * A trivial implementation of `Slice`. When `Foo[..Foo]` happens, it ends up\n  * calling `slice_to`, and therefore, `main` prints `Slicing!`.\n  *\n- * ```ignore\n+ * ```\n  * struct Foo;\n  *\n  * impl ::core::ops::Slice<Foo, Foo> for Foo {\n@@ -749,7 +749,7 @@ pub trait Slice<Idx, Sized? Result> for Sized? {\n  * A trivial implementation of `SliceMut`. When `Foo[Foo..]` happens, it ends up\n  * calling `slice_from_mut`, and therefore, `main` prints `Slicing!`.\n  *\n- * ```ignore\n+ * ```\n  * struct Foo;\n  *\n  * impl ::core::ops::SliceMut<Foo, Foo> for Foo {\n@@ -771,7 +771,7 @@ pub trait Slice<Idx, Sized? Result> for Sized? {\n  *     }\n  * }\n  *\n- * pub fn main() {\n+ * fn main() {\n  *     Foo[mut Foo..];\n  * }\n  * ```"}, {"sha": "68b3a3199df5787347cb91195148118017cbbf6f", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -814,13 +814,13 @@ impl<'a,T> MutableSlice<'a, T> for &'a mut [T] {\n     #[inline]\n     fn tail_mut(self) -> &'a mut [T] {\n         let len = self.len();\n-        self[mut 1..len]\n+        self.slice_mut(1, len)\n     }\n \n     #[inline]\n     fn init_mut(self) -> &'a mut [T] {\n         let len = self.len();\n-        self[mut 0..len - 1]\n+        self.slice_mut(0, len - 1)\n     }\n \n     #[inline]"}, {"sha": "7866d2f4a111ca75ad997df8d978ace23650ecef", "filename": "src/libcoretest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibcoretest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibcoretest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcoretest%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -7,7 +7,7 @@\n // <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n-#![feature(globs, unsafe_destructor, macro_rules, slicing_syntax)]\n+#![feature(globs, unsafe_destructor, macro_rules)]\n \n extern crate core;\n extern crate test;"}, {"sha": "267ff3d2a81742542cd3ee61c5538d6635042b35", "filename": "src/libnative/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibnative%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibnative%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnative%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -57,8 +57,7 @@\n \n #![deny(unused_result, unused_must_use)]\n #![allow(non_camel_case_types, deprecated)]\n-#![allow(unknown_features)]\n-#![feature(default_type_params, lang_items, slicing_syntax)]\n+#![feature(default_type_params, lang_items)]\n \n // NB this crate explicitly does *not* allow glob imports, please seriously\n //    consider whether they're needed before adding that feature here (the"}, {"sha": "17071d22deed82d555045324c4ee01e2c285c158", "filename": "src/libnum/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibnum%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibnum%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibnum%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -43,8 +43,7 @@\n //!\n //! [newt]: https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method\n \n-#![allow(unknown_features)]\n-#![feature(macro_rules, slicing_syntax)]\n+#![feature(macro_rules)]\n #![feature(default_type_params)]\n \n #![crate_name = \"num\"]"}, {"sha": "fa327fb3b4c5d14f4fa232b672746b46dbc35190", "filename": "src/librbml/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibrbml%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibrbml%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrbml%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -24,8 +24,7 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/master/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n-#![allow(unknown_features)]\n-#![feature(macro_rules, phase, slicing_syntax)]\n+#![feature(macro_rules, phase)]\n #![allow(missing_doc)]\n \n extern crate serialize;"}, {"sha": "9ff65fe3e2ad79a1b9a6fe31ee50b5d09a8c4c1e", "filename": "src/libregex/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibregex%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibregex%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -368,8 +368,7 @@\n        html_root_url = \"http://doc.rust-lang.org/master/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n-#![allow(unknown_features)]\n-#![feature(macro_rules, phase, slicing_syntax)]\n+#![feature(macro_rules, phase)]\n #![deny(missing_doc)]\n \n #[cfg(test)]"}, {"sha": "b807be422be99a014e216b93657136fbfe8e66d5", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -29,9 +29,8 @@ This API is completely unstable and subject to change.\n       html_root_url = \"http://doc.rust-lang.org/master/\")]\n \n #![allow(deprecated)]\n-#![allow(unknown_features)]\n #![feature(macro_rules, globs, struct_variant, quote)]\n-#![feature(default_type_params, phase, unsafe_destructor, slicing_syntax)]\n+#![feature(default_type_params, phase, unsafe_destructor)]\n \n #![feature(rustc_diagnostic_macros)]\n #![feature(import_shadowing)]"}, {"sha": "e48f9df75648f75fab9f982c68825d5a8bb2c29d", "filename": "src/librustc_back/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibrustc_back%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibrustc_back%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_back%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -31,8 +31,7 @@\n       html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n       html_root_url = \"http://doc.rust-lang.org/\")]\n \n-#![allow(unknown_features)]\n-#![feature(globs, phase, macro_rules, slicing_syntax)]\n+#![feature(globs, phase, macro_rules)]\n \n #[phase(plugin, link)]\n extern crate log;"}, {"sha": "71d00e50af83d20ab900305b78741fb5955c8988", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -15,8 +15,7 @@\n #![crate_type = \"dylib\"]\n #![crate_type = \"rlib\"]\n \n-#![allow(unknown_features)]\n-#![feature(globs, struct_variant, managed_boxes, macro_rules, phase, slicing_syntax)]\n+#![feature(globs, struct_variant, managed_boxes, macro_rules, phase)]\n \n extern crate arena;\n extern crate debug;"}, {"sha": "72c7d89a3b98b701c007b106436e088bc8ce6d9c", "filename": "src/librustrt/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibrustrt%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibrustrt%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -16,10 +16,9 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/master/\")]\n \n-#![allow(unknown_features)]\n #![feature(macro_rules, phase, globs, thread_local, managed_boxes, asm)]\n #![feature(linkage, lang_items, unsafe_destructor, default_type_params)]\n-#![feature(import_shadowing, slicing_syntax)]\n+#![feature(import_shadowing)]\n #![no_std]\n #![experimental]\n "}, {"sha": "5c35ad8523382cef363099662becabdac6c3a677", "filename": "src/libserialize/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibserialize%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibserialize%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -23,8 +23,7 @@ Core encoding and decoding interfaces.\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/master/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n-#![allow(unknown_features)]\n-#![feature(macro_rules, managed_boxes, default_type_params, phase, slicing_syntax)]\n+#![feature(macro_rules, managed_boxes, default_type_params, phase)]\n \n // test harness access\n #[cfg(test)]"}, {"sha": "4dd6f448ee504dd6f94030306c0874280c01210f", "filename": "src/libstd/io/net/udp.rs", "status": "modified", "additions": 15, "deletions": 18, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibstd%2Fio%2Fnet%2Fudp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibstd%2Fio%2Fnet%2Fudp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Fudp.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -35,29 +35,26 @@ use rt::rtio;\n ///\n /// ```rust,no_run\n /// # #![allow(unused_must_use)]\n-/// #![feature(slicing_syntax)]\n-///\n /// use std::io::net::udp::UdpSocket;\n /// use std::io::net::ip::{Ipv4Addr, SocketAddr};\n-/// fn main() {\n-///     let addr = SocketAddr { ip: Ipv4Addr(127, 0, 0, 1), port: 34254 };\n-///     let mut socket = match UdpSocket::bind(addr) {\n-///         Ok(s) => s,\n-///         Err(e) => fail!(\"couldn't bind socket: {}\", e),\n-///     };\n ///\n-///     let mut buf = [0, ..10];\n-///     match socket.recv_from(buf) {\n-///         Ok((amt, src)) => {\n-///             // Send a reply to the socket we received data from\n-///             let buf = buf[mut ..amt];\n-///             buf.reverse();\n-///             socket.send_to(buf, src);\n-///         }\n-///         Err(e) => println!(\"couldn't receive a datagram: {}\", e)\n+/// let addr = SocketAddr { ip: Ipv4Addr(127, 0, 0, 1), port: 34254 };\n+/// let mut socket = match UdpSocket::bind(addr) {\n+///     Ok(s) => s,\n+///     Err(e) => fail!(\"couldn't bind socket: {}\", e),\n+/// };\n+///\n+/// let mut buf = [0, ..10];\n+/// match socket.recv_from(buf) {\n+///     Ok((amt, src)) => {\n+///         // Send a reply to the socket we received data from\n+///         let buf = buf[mut ..amt];\n+///         buf.reverse();\n+///         socket.send_to(buf, src);\n ///     }\n-///     drop(socket); // close the socket\n+///     Err(e) => println!(\"couldn't receive a datagram: {}\", e)\n /// }\n+/// drop(socket); // close the socket\n /// ```\n pub struct UdpSocket {\n     obj: Box<RtioUdpSocket + Send>,"}, {"sha": "7304871cf214c5447389c1166c4015f5a788de90", "filename": "src/libstd/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibstd%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibstd%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -105,10 +105,9 @@\n        html_root_url = \"http://doc.rust-lang.org/master/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n-#![allow(unknown_features)]\n #![feature(macro_rules, globs, managed_boxes, linkage)]\n #![feature(default_type_params, phase, lang_items, unsafe_destructor)]\n-#![feature(import_shadowing, slicing_syntax)]\n+#![feature(import_shadowing)]\n \n // Don't link to std. We are std.\n #![no_std]"}, {"sha": "ca6d488772c613b520e641fb0f7887c63250c577", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -70,7 +70,6 @@ static KNOWN_FEATURES: &'static [(&'static str, Status)] = &[\n     (\"tuple_indexing\", Active),\n     (\"associated_types\", Active),\n     (\"visible_private_types\", Active),\n-    (\"slicing_syntax\", Active),\n \n     (\"if_let\", Active),\n \n@@ -363,11 +362,6 @@ impl<'a, 'v> Visitor<'v> for Context<'a> {\n                 self.gate_feature(\"if_let\", e.span,\n                                   \"`if let` syntax is experimental\");\n             }\n-            ast::ExprSlice(..) => {\n-                self.gate_feature(\"slicing_syntax\",\n-                                  e.span,\n-                                  \"slicing syntax is experimental\");\n-            }\n             _ => {}\n         }\n         visit::walk_expr(self, e);"}, {"sha": "a42715441465470b6516b5392e10f0e8bd31bd0a", "filename": "src/libsyntax/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibsyntax%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibsyntax%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -23,8 +23,7 @@\n        html_favicon_url = \"http://www.rust-lang.org/favicon.ico\",\n        html_root_url = \"http://doc.rust-lang.org/master/\")]\n \n-#![allow(unknown_features)]\n-#![feature(macro_rules, globs, default_type_params, phase, slicing_syntax)]\n+#![feature(macro_rules, globs, default_type_params, phase)]\n #![feature(quote, struct_variant, unsafe_destructor, import_shadowing)]\n #![allow(deprecated)]\n "}, {"sha": "3fc631422d5f3a3e78cba2a5400ca0119f83c635", "filename": "src/libterm/lib.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibterm%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Flibterm%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibterm%2Flib.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -49,8 +49,7 @@\n        html_root_url = \"http://doc.rust-lang.org/master/\",\n        html_playground_url = \"http://play.rust-lang.org/\")]\n \n-#![allow(unknown_features)]\n-#![feature(macro_rules, phase, slicing_syntax)]\n+#![feature(macro_rules, phase)]\n \n #![deny(missing_doc)]\n "}, {"sha": "1260cc33725f592b27b9c3d789997d401db293af", "filename": "src/test/bench/shootout-fannkuch-redux.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fannkuch-redux.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -38,8 +38,6 @@\n // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n // OF THE POSSIBILITY OF SUCH DAMAGE.\n \n-#![feature(slicing_syntax)]\n-\n use std::{cmp, iter, mem};\n use std::sync::Future;\n "}, {"sha": "3f8c929aecf89440d30cd722e5e30b8e7f7cd745", "filename": "src/test/bench/shootout-fasta-redux.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta-redux.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -38,8 +38,6 @@\n // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n // OF THE POSSIBILITY OF SUCH DAMAGE.\n \n-#![feature(slicing_syntax)]\n-\n use std::cmp::min;\n use std::io::{stdout, IoResult};\n use std::os;"}, {"sha": "ed8ddcaa0ed5fd1f1c7dfdb9d625f351372219fe", "filename": "src/test/bench/shootout-fasta.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fbench%2Fshootout-fasta.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-fasta.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -38,8 +38,6 @@\n // ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED\n // OF THE POSSIBILITY OF SUCH DAMAGE.\n \n-#![feature(slicing_syntax)]\n-\n use std::io;\n use std::io::{BufferedWriter, File};\n use std::cmp::min;"}, {"sha": "80d623bbeb1247043337b3a1b318381d8d222ef3", "filename": "src/test/bench/shootout-k-nucleotide-pipes.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -13,8 +13,6 @@\n \n // multi tasking k-nucleotide\n \n-#![feature(slicing_syntax)]\n-\n extern crate collections;\n \n use std::collections::HashMap;"}, {"sha": "70fd937d2a388eb8283f46e25161f4f944dc68db", "filename": "src/test/bench/shootout-k-nucleotide.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -40,8 +40,6 @@\n \n // ignore-android see #10393 #13206\n \n-#![feature(slicing_syntax)]\n-\n use std::string::String;\n use std::slice;\n use std::sync::{Arc, Future};"}, {"sha": "0adb80c2689ba64a360700768729bb8738bfdbf6", "filename": "src/test/bench/shootout-regex-dna.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-regex-dna.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -41,7 +41,7 @@\n // ignore-stage1\n // ignore-cross-compile #12102\n \n-#![feature(macro_rules, phase, slicing_syntax)]\n+#![feature(macro_rules, phase)]\n \n extern crate regex;\n #[phase(plugin)]extern crate regex_macros;"}, {"sha": "e5f22a3d07c2cf12a90dcb1486906acee43ed14c", "filename": "src/test/bench/shootout-reverse-complement.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-reverse-complement.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -41,8 +41,6 @@\n // ignore-pretty very bad with line comments\n // ignore-android doesn't terminate?\n \n-#![feature(slicing_syntax)]\n-\n use std::iter::range_step;\n use std::io::{stdin, stdout, File};\n "}, {"sha": "fc8c4e36075fa6c8ba6274ac9d36ed8e5dcc29a8", "filename": "src/test/compile-fail/issue-15730.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fcompile-fail%2Fissue-15730.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fcompile-fail%2Fissue-15730.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-15730.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(slicing_syntax)]\n-\n fn main() {\n     let mut array = [1, 2, 3];\n //~^ ERROR cannot determine a type for this local variable: cannot determine the type of this integ"}, {"sha": "fbfc438321c8e4ab22dea549b83bc52af85cb958", "filename": "src/test/compile-fail/slice-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fcompile-fail%2Fslice-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fcompile-fail%2Fslice-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslice-2.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -10,8 +10,6 @@\n \n // Test that slicing syntax gives errors if we have not implemented the trait.\n \n-#![feature(slicing_syntax)]\n-\n struct Foo;\n \n fn main() {"}, {"sha": "3d12511134fa003d869babf982460a1a79ff9ea3", "filename": "src/test/compile-fail/slice-borrow.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fcompile-fail%2Fslice-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fcompile-fail%2Fslice-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslice-borrow.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -10,8 +10,6 @@\n \n // Test slicing expressions doesn't defeat the borrow checker.\n \n-#![feature(slicing_syntax)]\n-\n fn main() {\n     let y;\n     {"}, {"sha": "1176b637cece091337be1faa8eceef0644442c63", "filename": "src/test/compile-fail/slice-mut-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fcompile-fail%2Fslice-mut-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fcompile-fail%2Fslice-mut-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslice-mut-2.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -10,8 +10,6 @@\n \n // Test mutability and slicing syntax.\n \n-#![feature(slicing_syntax)]\n-\n fn main() {\n     let x: &[int] = &[1, 2, 3, 4, 5];\n     // Can't mutably slice an immutable slice"}, {"sha": "8cd7c4ed0bb077d4808c382fa5c3df76807fe454", "filename": "src/test/compile-fail/slice-mut.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fcompile-fail%2Fslice-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fcompile-fail%2Fslice-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fslice-mut.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -10,8 +10,6 @@\n \n // Test mutability and slicing syntax.\n \n-#![feature(slicing_syntax)]\n-\n fn main() {\n     let x: &[int] = &[1, 2, 3, 4, 5];\n     // Immutable slices are not mutable."}, {"sha": "392a025b1f0bc31bb0d405d59eb09fa4b3ebe537", "filename": "src/test/debuginfo/vec-slices.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Fvec-slices.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -80,7 +80,6 @@\n // lldb-check:[...]$5 = &[AStruct { x: 10, y: 11, z: 12 }, AStruct { x: 13, y: 14, z: 15 }]\n \n #![allow(unused_variable)]\n-#![feature(slicing_syntax)]\n \n struct AStruct {\n     x: i16,"}, {"sha": "2062967361906e89c7e291d13299f7c679a8bb8b", "filename": "src/test/run-pass/issue-3888-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Frun-pass%2Fissue-3888-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Frun-pass%2Fissue-3888-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-3888-2.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(slicing_syntax)]\n-\n fn vec_peek<'r, T>(v: &'r [T]) -> &'r [T] {\n     v[1..5]\n }"}, {"sha": "0f3f9149536764beb2fcb9bf5225fabb1eeaa6af", "filename": "src/test/run-pass/issue-4464.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Frun-pass%2Fissue-4464.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Frun-pass%2Fissue-4464.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-4464.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(slicing_syntax)]\n-\n fn broken(v: &[u8], i: uint, j: uint) -> &[u8] { v[i..j] }\n \n pub fn main() {}"}, {"sha": "1838f34a9ab8b670f71d77b9cf016a9c4aa3773c", "filename": "src/test/run-pass/issue-8898.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Frun-pass%2Fissue-8898.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Frun-pass%2Fissue-8898.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissue-8898.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(slicing_syntax)]\n \n extern crate debug;\n "}, {"sha": "3c0933a055cba7e788d85cadfecbb85327f43da4", "filename": "src/test/run-pass/slice-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Frun-pass%2Fslice-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Frun-pass%2Fslice-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice-2.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -10,8 +10,6 @@\n \n // Test slicing expressions on slices and Vecs.\n \n-#![feature(slicing_syntax)]\n-\n fn main() {\n     let x: &[int] = &[1, 2, 3, 4, 5];\n     let cmp: &[int] = &[1, 2, 3, 4, 5];"}, {"sha": "f6972023a72a5830653b58c5adf5d429951fce83", "filename": "src/test/run-pass/slice-fail-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Frun-pass%2Fslice-fail-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Frun-pass%2Fslice-fail-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice-fail-1.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -10,8 +10,6 @@\n \n // Test that is a slicing expr[..] fails, the correct cleanups happen.\n \n-#![feature(slicing_syntax)]\n-\n use std::task;\n \n struct Foo;"}, {"sha": "cbe65fcd83d2dcaa1c44c4fd487e5b5e52049e11", "filename": "src/test/run-pass/slice-fail-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Frun-pass%2Fslice-fail-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Frun-pass%2Fslice-fail-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice-fail-2.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -10,8 +10,6 @@\n \n // Test that is a slicing expr[..] fails, the correct cleanups happen.\n \n-#![feature(slicing_syntax)]\n-\n use std::task;\n \n struct Foo;"}, {"sha": "661ff055dc289b9253f8672fc92bf24c2cf34b08", "filename": "src/test/run-pass/slice.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Frun-pass%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bf56df4c8bf40a16f2743447b7688343642f370/src%2Ftest%2Frun-pass%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fslice.rs?ref=7bf56df4c8bf40a16f2743447b7688343642f370", "patch": "@@ -10,8 +10,6 @@\n \n // Test slicing sugar.\n \n-#![feature(slicing_syntax)]\n-\n extern crate core;\n use core::ops::{Slice,SliceMut};\n "}]}