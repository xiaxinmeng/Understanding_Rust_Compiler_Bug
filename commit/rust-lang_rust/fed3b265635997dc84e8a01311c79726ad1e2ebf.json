{"sha": "fed3b265635997dc84e8a01311c79726ad1e2ebf", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZlZDNiMjY1NjM1OTk3ZGM4NGU4YTAxMzExYzc5NzI2YWQxZTJlYmY=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-01-11T13:20:55Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2020-01-11T13:28:18Z"}, "message": "Don't panic on reported const eval errors", "tree": {"sha": "cb963b74d892aa3b3e59110b1c28cf3673ac36af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cb963b74d892aa3b3e59110b1c28cf3673ac36af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fed3b265635997dc84e8a01311c79726ad1e2ebf", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fed3b265635997dc84e8a01311c79726ad1e2ebf", "html_url": "https://github.com/rust-lang/rust/commit/fed3b265635997dc84e8a01311c79726ad1e2ebf", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fed3b265635997dc84e8a01311c79726ad1e2ebf/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2a082209a68703915ffe10c913d30f274bf76fa7", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a082209a68703915ffe10c913d30f274bf76fa7", "html_url": "https://github.com/rust-lang/rust/commit/2a082209a68703915ffe10c913d30f274bf76fa7"}], "stats": {"total": 5, "additions": 4, "deletions": 1}, "files": [{"sha": "686147aa594bbb55ee79e1d0bd363c05852d5ac4", "filename": "src/constant.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/fed3b265635997dc84e8a01311c79726ad1e2ebf/src%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fed3b265635997dc84e8a01311c79726ad1e2ebf/src%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconstant.rs?ref=fed3b265635997dc84e8a01311c79726ad1e2ebf", "patch": "@@ -85,7 +85,10 @@ pub fn force_eval_const<'tcx>(\n     match const_.val {\n         ConstKind::Unevaluated(def_id, ref substs) => {\n             let substs = fx.monomorphize(substs);\n-            fx.tcx.const_eval_resolve(ParamEnv::reveal_all(), def_id, substs, None).unwrap()\n+            fx.tcx.const_eval_resolve(ParamEnv::reveal_all(), def_id, substs, None).unwrap_or_else(|_| {\n+                fx.tcx.sess.abort_if_errors();\n+                unreachable!();\n+            })\n         }\n         _ => fx.monomorphize(&const_),\n     }"}]}