{"sha": "8c8fc6af33c0a10340535fb9eb6ab9b7648bf742", "node_id": "C_kwDOAAsO6NoAKDhjOGZjNmFmMzNjMGExMDM0MDUzNWZiOWViNmFiOWI3NjQ4YmY3NDI", "commit": {"author": {"name": "Afonso Bordado", "email": "afonsobordado@az8.co", "date": "2022-08-02T07:08:45Z"}, "committer": {"name": "Afonso Bordado", "email": "afonsobordado@az8.co", "date": "2022-08-03T12:36:50Z"}, "message": "Use native cranelift instructions when lowering float intrinsics", "tree": {"sha": "3214141cfc39aaa19b5b4508e72b85e2932bd449", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3214141cfc39aaa19b5b4508e72b85e2932bd449"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c8fc6af33c0a10340535fb9eb6ab9b7648bf742", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c8fc6af33c0a10340535fb9eb6ab9b7648bf742", "html_url": "https://github.com/rust-lang/rust/commit/8c8fc6af33c0a10340535fb9eb6ab9b7648bf742", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c8fc6af33c0a10340535fb9eb6ab9b7648bf742/comments", "author": {"login": "afonso360", "id": 1357143, "node_id": "MDQ6VXNlcjEzNTcxNDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1357143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afonso360", "html_url": "https://github.com/afonso360", "followers_url": "https://api.github.com/users/afonso360/followers", "following_url": "https://api.github.com/users/afonso360/following{/other_user}", "gists_url": "https://api.github.com/users/afonso360/gists{/gist_id}", "starred_url": "https://api.github.com/users/afonso360/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afonso360/subscriptions", "organizations_url": "https://api.github.com/users/afonso360/orgs", "repos_url": "https://api.github.com/users/afonso360/repos", "events_url": "https://api.github.com/users/afonso360/events{/privacy}", "received_events_url": "https://api.github.com/users/afonso360/received_events", "type": "User", "site_admin": false}, "committer": {"login": "afonso360", "id": 1357143, "node_id": "MDQ6VXNlcjEzNTcxNDM=", "avatar_url": "https://avatars.githubusercontent.com/u/1357143?v=4", "gravatar_id": "", "url": "https://api.github.com/users/afonso360", "html_url": "https://github.com/afonso360", "followers_url": "https://api.github.com/users/afonso360/followers", "following_url": "https://api.github.com/users/afonso360/following{/other_user}", "gists_url": "https://api.github.com/users/afonso360/gists{/gist_id}", "starred_url": "https://api.github.com/users/afonso360/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/afonso360/subscriptions", "organizations_url": "https://api.github.com/users/afonso360/orgs", "repos_url": "https://api.github.com/users/afonso360/repos", "events_url": "https://api.github.com/users/afonso360/events{/privacy}", "received_events_url": "https://api.github.com/users/afonso360/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0c5b61fca892bfa2cd032d28254aaf8acaa76d66", "url": "https://api.github.com/repos/rust-lang/rust/commits/0c5b61fca892bfa2cd032d28254aaf8acaa76d66", "html_url": "https://github.com/rust-lang/rust/commit/0c5b61fca892bfa2cd032d28254aaf8acaa76d66"}], "stats": {"total": 33, "additions": 32, "deletions": 1}, "files": [{"sha": "77caf741acf3b28b387706fe3f1ca42cade0b1b2", "filename": "src/intrinsics/mod.rs", "status": "modified", "additions": 32, "deletions": 1, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/8c8fc6af33c0a10340535fb9eb6ab9b7648bf742/src%2Fintrinsics%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c8fc6af33c0a10340535fb9eb6ab9b7648bf742/src%2Fintrinsics%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fintrinsics%2Fmod.rs?ref=8c8fc6af33c0a10340535fb9eb6ab9b7648bf742", "patch": "@@ -301,7 +301,38 @@ fn codegen_float_intrinsic_call<'tcx>(\n         _ => unreachable!(),\n     };\n \n-    let res = fx.easy_call(name, &args, ty);\n+    let layout = fx.layout_of(ty);\n+    let res = match intrinsic {\n+        sym::copysignf32 | sym::copysignf64 => {\n+            let a = args[0].load_scalar(fx);\n+            let b = args[1].load_scalar(fx);\n+            CValue::by_val(fx.bcx.ins().fcopysign(a, b), layout)\n+        }\n+        sym::fabsf32\n+        | sym::fabsf64\n+        | sym::floorf32\n+        | sym::floorf64\n+        | sym::ceilf32\n+        | sym::ceilf64\n+        | sym::truncf32\n+        | sym::truncf64 => {\n+            let a = args[0].load_scalar(fx);\n+\n+            let val = match intrinsic {\n+                sym::fabsf32 | sym::fabsf64 => fx.bcx.ins().fabs(a),\n+                sym::floorf32 | sym::floorf64 => fx.bcx.ins().floor(a),\n+                sym::ceilf32 | sym::ceilf64 => fx.bcx.ins().ceil(a),\n+                sym::truncf32 | sym::truncf64 => fx.bcx.ins().trunc(a),\n+                _ => unreachable!(),\n+            };\n+\n+            CValue::by_val(val, layout)\n+        }\n+        // These intrinsics aren't supported natively by Cranelift.\n+        // Lower them to a libcall.\n+        _ => fx.easy_call(name, &args, ty),\n+    };\n+\n     ret.write_cvalue(fx, res);\n \n     true"}]}