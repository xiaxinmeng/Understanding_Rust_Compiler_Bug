{"sha": "f2ccc54468348af96d6167da5971749ef0f4ab5e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmYyY2NjNTQ0NjgzNDhhZjk2ZDYxNjdkYTU5NzE3NDllZjBmNGFiNWU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-11T14:25:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-06-11T15:28:51Z"}, "message": "use Source for TypeAlias", "tree": {"sha": "87de4b002bcdca775ff339b81236dea1eb4ed8c9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/87de4b002bcdca775ff339b81236dea1eb4ed8c9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f2ccc54468348af96d6167da5971749ef0f4ab5e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f2ccc54468348af96d6167da5971749ef0f4ab5e", "html_url": "https://github.com/rust-lang/rust/commit/f2ccc54468348af96d6167da5971749ef0f4ab5e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f2ccc54468348af96d6167da5971749ef0f4ab5e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "647c8f3df8e5f798f940ce0b93e5e0ccd59b0e7f", "url": "https://api.github.com/repos/rust-lang/rust/commits/647c8f3df8e5f798f940ce0b93e5e0ccd59b0e7f", "html_url": "https://github.com/rust-lang/rust/commit/647c8f3df8e5f798f940ce0b93e5e0ccd59b0e7f"}], "stats": {"total": 60, "additions": 22, "deletions": 38}, "files": [{"sha": "20a8d7d80616f5b8dfb3083ee5e536fbd95c5cbd", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/f2ccc54468348af96d6167da5971749ef0f4ab5e/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2ccc54468348af96d6167da5971749ef0f4ab5e/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=f2ccc54468348af96d6167da5971749ef0f4ab5e", "patch": "@@ -932,12 +932,19 @@ pub struct TypeAlias {\n     pub(crate) id: TypeAliasId,\n }\n \n+impl HasSource for TypeAlias {\n+    type Ast = TreeArc<ast::TypeAliasDef>;\n+    fn source(self, db: &(impl DefDatabase + AstDatabase)) -> Source<TreeArc<ast::TypeAliasDef>> {\n+        self.id.source(db).into()\n+    }\n+}\n+\n impl TypeAlias {\n     pub fn source(\n         self,\n         db: &(impl DefDatabase + AstDatabase),\n-    ) -> (HirFileId, TreeArc<ast::TypeAliasDef>) {\n-        self.id.source(db)\n+    ) -> Source<TreeArc<ast::TypeAliasDef>> {\n+        self.id.source(db).into()\n     }\n \n     pub fn module(self, db: &impl DefDatabase) -> Module {"}, {"sha": "1c6b4f2051f18608d5ef12ad700ed5b5e8972151", "filename": "crates/ra_hir/src/docs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2ccc54468348af96d6167da5971749ef0f4ab5e/crates%2Fra_hir%2Fsrc%2Fdocs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2ccc54468348af96d6167da5971749ef0f4ab5e/crates%2Fra_hir%2Fsrc%2Fdocs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdocs.rs?ref=f2ccc54468348af96d6167da5971749ef0f4ab5e", "patch": "@@ -84,7 +84,7 @@ pub(crate) fn documentation_query(\n         DocDef::Function(it) => docs_from_ast(&*it.source(db).ast),\n         DocDef::Union(it) => docs_from_ast(&*it.source(db).1),\n         DocDef::Trait(it) => docs_from_ast(&*it.source(db).1),\n-        DocDef::TypeAlias(it) => docs_from_ast(&*it.source(db).1),\n+        DocDef::TypeAlias(it) => docs_from_ast(&*it.source(db).ast),\n         DocDef::MacroDef(it) => docs_from_ast(&*it.source(db).1),\n     }\n }"}, {"sha": "b7e255c1758bc74bc1eff3e6f02c1e7686b28d28", "filename": "crates/ra_hir/src/generics.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2ccc54468348af96d6167da5971749ef0f4ab5e/crates%2Fra_hir%2Fsrc%2Fgenerics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2ccc54468348af96d6167da5971749ef0f4ab5e/crates%2Fra_hir%2Fsrc%2Fgenerics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fgenerics.rs?ref=f2ccc54468348af96d6167da5971749ef0f4ab5e", "patch": "@@ -81,7 +81,7 @@ impl GenericParams {\n                 });\n                 generics.fill(&*it.source(db).1, start + 1);\n             }\n-            GenericDef::TypeAlias(it) => generics.fill(&*it.source(db).1, start),\n+            GenericDef::TypeAlias(it) => generics.fill(&*it.source(db).ast, start),\n             GenericDef::ImplBlock(it) => generics.fill(&*it.source(db).1, start),\n         }\n "}, {"sha": "c449d734662047ba1e68610fbc18070419323763", "filename": "crates/ra_hir/src/type_alias.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/f2ccc54468348af96d6167da5971749ef0f4ab5e/crates%2Fra_hir%2Fsrc%2Ftype_alias.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2ccc54468348af96d6167da5971749ef0f4ab5e/crates%2Fra_hir%2Fsrc%2Ftype_alias.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Ftype_alias.rs?ref=f2ccc54468348af96d6167da5971749ef0f4ab5e", "patch": "@@ -8,6 +8,6 @@ pub(crate) fn type_alias_ref_query(\n     db: &(impl DefDatabase + AstDatabase),\n     typ: TypeAlias,\n ) -> Arc<TypeRef> {\n-    let (_, node) = typ.source(db);\n+    let node = typ.source(db).ast;\n     Arc::new(TypeRef::from_ast_opt(node.type_ref()))\n }"}, {"sha": "495899262f62c5c74b546693ee845e4080ac708c", "filename": "crates/ra_ide_api/src/completion/presentation.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/f2ccc54468348af96d6167da5971749ef0f4ab5e/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2ccc54468348af96d6167da5971749ef0f4ab5e/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fcompletion%2Fpresentation.rs?ref=f2ccc54468348af96d6167da5971749ef0f4ab5e", "patch": "@@ -141,13 +141,12 @@ impl Completions {\n     }\n \n     pub(crate) fn add_type_alias(&mut self, ctx: &CompletionContext, type_alias: hir::TypeAlias) {\n-        let (_file_id, type_def) = type_alias.source(ctx.db);\n+        let type_def = type_alias.source(ctx.db).ast;\n         let name = match type_def.name() {\n             Some(name) => name,\n             _ => return,\n         };\n-        let (_, ast_node) = type_alias.source(ctx.db);\n-        let detail = type_label(&ast_node);\n+        let detail = type_label(&type_def);\n \n         CompletionItem::new(CompletionKind::Reference, ctx.source_range(), name.text().to_string())\n             .kind(CompletionItemKind::TypeAlias)"}, {"sha": "19a64f3007171471348743c4c406c8b65095d4f5", "filename": "crates/ra_ide_api/src/display/navigation_target.rs", "status": "modified", "additions": 2, "deletions": 18, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/f2ccc54468348af96d6167da5971749ef0f4ab5e/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2ccc54468348af96d6167da5971749ef0f4ab5e/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fdisplay%2Fnavigation_target.rs?ref=f2ccc54468348af96d6167da5971749ef0f4ab5e", "patch": "@@ -232,15 +232,7 @@ impl NavigationTarget {\n                     node.short_label(),\n                 )\n             }\n-            hir::ModuleDef::TypeAlias(e) => {\n-                let (file_id, node) = e.source(db);\n-                NavigationTarget::from_named(\n-                    file_id.original_file(db),\n-                    &*node,\n-                    node.doc_comment_text(),\n-                    node.short_label(),\n-                )\n-            }\n+            hir::ModuleDef::TypeAlias(it) => NavigationTarget::from_def_source(db, it),\n             hir::ModuleDef::BuiltinType(..) => {\n                 return None;\n             }\n@@ -267,15 +259,7 @@ impl NavigationTarget {\n         match impl_item {\n             ImplItem::Method(it) => NavigationTarget::from_function(db, it),\n             ImplItem::Const(it) => NavigationTarget::from_def_source(db, it),\n-            ImplItem::TypeAlias(a) => {\n-                let (file_id, node) = a.source(db);\n-                NavigationTarget::from_named(\n-                    file_id.original_file(db),\n-                    &*node,\n-                    node.doc_comment_text(),\n-                    node.short_label(),\n-                )\n-            }\n+            ImplItem::TypeAlias(it) => NavigationTarget::from_def_source(db, it),\n         }\n     }\n "}, {"sha": "c4826e515b8e3b66e42ee2f4cdf085d7bf319a1c", "filename": "crates/ra_ide_api/src/hover.rs", "status": "modified", "additions": 6, "deletions": 12, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/f2ccc54468348af96d6167da5971749ef0f4ab5e/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f2ccc54468348af96d6167da5971749ef0f4ab5e/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=f2ccc54468348af96d6167da5971749ef0f4ab5e", "patch": "@@ -107,14 +107,11 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n                     res.extend(hover_text(it.doc_comment_text(), it.short_label()));\n                 }\n             }\n-            Some(AssocItem(it)) => match it {\n-                hir::ImplItem::Method(it) => res.extend(from_def_source(db, it)),\n-                hir::ImplItem::Const(it) => res.extend(from_def_source(db, it)),\n-                hir::ImplItem::TypeAlias(it) => {\n-                    let it = it.source(db).1;\n-                    res.extend(hover_text(it.doc_comment_text(), it.short_label()))\n-                }\n-            },\n+            Some(AssocItem(it)) => res.extend(match it {\n+                hir::ImplItem::Method(it) => from_def_source(db, it),\n+                hir::ImplItem::Const(it) => from_def_source(db, it),\n+                hir::ImplItem::TypeAlias(it) => from_def_source(db, it),\n+            }),\n             Some(Def(it)) => {\n                 match it {\n                     hir::ModuleDef::Module(it) => {\n@@ -137,10 +134,7 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n                         let it = it.source(db).1;\n                         res.extend(hover_text(it.doc_comment_text(), it.short_label()))\n                     }\n-                    hir::ModuleDef::TypeAlias(it) => {\n-                        let it = it.source(db).1;\n-                        res.extend(hover_text(it.doc_comment_text(), it.short_label()))\n-                    }\n+                    hir::ModuleDef::TypeAlias(it) => res.extend(from_def_source(db, it)),\n                     hir::ModuleDef::BuiltinType(_) => {\n                         // FIXME: hover for builtin Type ?\n                     }"}]}