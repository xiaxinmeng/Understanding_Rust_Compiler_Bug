{"sha": "0fbbcae92d868c047d3cbab43434404c7b0c8c2c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmYmJjYWU5MmQ4NjhjMDQ3ZDNjYmFiNDM0MzQ0MDRjN2IwYzhjMmM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-13T21:18:26Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2017-07-13T21:18:26Z"}, "message": "packed structs: test unsize coercions", "tree": {"sha": "ed8e4487298c3394b964161722dad92178d98095", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ed8e4487298c3394b964161722dad92178d98095"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fbbcae92d868c047d3cbab43434404c7b0c8c2c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fbbcae92d868c047d3cbab43434404c7b0c8c2c", "html_url": "https://github.com/rust-lang/rust/commit/0fbbcae92d868c047d3cbab43434404c7b0c8c2c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fbbcae92d868c047d3cbab43434404c7b0c8c2c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "da5538f0b26605948c6bd57918526fd007dc8bc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/da5538f0b26605948c6bd57918526fd007dc8bc5", "html_url": "https://github.com/rust-lang/rust/commit/da5538f0b26605948c6bd57918526fd007dc8bc5"}], "stats": {"total": 23, "additions": 23, "deletions": 0}, "files": [{"sha": "7219649e728c91a6135bf4c438d7ff72cc12eafa", "filename": "tests/run-pass/packed_struct.rs", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/0fbbcae92d868c047d3cbab43434404c7b0c8c2c/tests%2Frun-pass%2Fpacked_struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fbbcae92d868c047d3cbab43434404c7b0c8c2c/tests%2Frun-pass%2Fpacked_struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Frun-pass%2Fpacked_struct.rs?ref=0fbbcae92d868c047d3cbab43434404c7b0c8c2c", "patch": "@@ -1,4 +1,6 @@\n #![allow(dead_code)]\n+#![feature(unsize, coerce_unsized)]\n+\n #[repr(packed)]\n struct S {\n     a: i32,\n@@ -22,6 +24,25 @@ fn test(t: Test2) {\n     assert_eq!(x, 42);\n }\n \n+fn test_unsizing() {\n+    #[repr(packed)]\n+    struct UnalignedPtr<'a, T: ?Sized>\n+    where T: 'a,\n+    {\n+        data: &'a T,\n+    }\n+\n+    impl<'a, T, U> std::ops::CoerceUnsized<UnalignedPtr<'a, U>> for UnalignedPtr<'a, T>\n+    where\n+        T: std::marker::Unsize<U> + ?Sized,\n+        U: ?Sized,\n+    { }\n+\n+    let arr = [1, 2, 3];\n+    let arr_unaligned: UnalignedPtr<[i32; 3]> = UnalignedPtr { data: &arr };\n+    let _uns: UnalignedPtr<[i32]> = arr_unaligned;\n+}\n+\n fn main() {\n     let mut x = S {\n         a: 42,\n@@ -39,4 +60,6 @@ fn main() {\n     assert_eq!({x.b}, 77);\n \n     test(Test2 { x: 0, other: &Test1 { x: 0, other: &42 }});\n+\n+    test_unsizing();\n }"}]}