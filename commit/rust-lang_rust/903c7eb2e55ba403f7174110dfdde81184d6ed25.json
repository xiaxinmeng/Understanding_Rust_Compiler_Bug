{"sha": "903c7eb2e55ba403f7174110dfdde81184d6ed25", "node_id": "MDY6Q29tbWl0NzI0NzEyOjkwM2M3ZWIyZTU1YmE0MDNmNzE3NDExMGRmZGRlODExODRkNmVkMjU=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-09-02T13:50:29Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-09-03T16:36:07Z"}, "message": "Add more import insertion tests", "tree": {"sha": "26cdbb2137ae9c279fde545625c1bc0e8ecfafc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26cdbb2137ae9c279fde545625c1bc0e8ecfafc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/903c7eb2e55ba403f7174110dfdde81184d6ed25", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/903c7eb2e55ba403f7174110dfdde81184d6ed25", "html_url": "https://github.com/rust-lang/rust/commit/903c7eb2e55ba403f7174110dfdde81184d6ed25", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/903c7eb2e55ba403f7174110dfdde81184d6ed25/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ed37335c012a66f5d028a160221b1ca152a61325", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed37335c012a66f5d028a160221b1ca152a61325", "html_url": "https://github.com/rust-lang/rust/commit/ed37335c012a66f5d028a160221b1ca152a61325"}], "stats": {"total": 71, "additions": 68, "deletions": 3}, "files": [{"sha": "8563b16abec5eede3818c7c4c14306ddf6656518", "filename": "crates/assists/src/utils/insert_use.rs", "status": "modified", "additions": 68, "deletions": 3, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/903c7eb2e55ba403f7174110dfdde81184d6ed25/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "raw_url": "https://github.com/rust-lang/rust/raw/903c7eb2e55ba403f7174110dfdde81184d6ed25/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fassists%2Fsrc%2Futils%2Finsert_use.rs?ref=903c7eb2e55ba403f7174110dfdde81184d6ed25", "patch": "@@ -114,8 +114,7 @@ pub fn try_merge_trees(\n     let lhs_tl = lhs.use_tree_list()?;\n     let rhs_tl = rhs.use_tree_list()?;\n \n-    // if we are only allowed to merge the last level check if the paths are only one level deep\n-    // FIXME: This shouldn't work yet i think\n+    // if we are only allowed to merge the last level check if the split off paths are only one level deep\n     if merge_behaviour == MergeBehaviour::Last && use_tree_list_is_nested(&lhs_tl)\n         || use_tree_list_is_nested(&rhs_tl)\n     {\n@@ -463,14 +462,69 @@ use std::io;\",\n     }\n \n     #[test]\n-    fn merges_groups2() {\n+    fn merges_groups_full() {\n         check_full(\n             \"std::io\",\n             r\"use std::fmt::{Result, Display};\",\n             r\"use std::{fmt::{Result, Display}, io};\",\n         )\n     }\n \n+    #[test]\n+    fn merges_groups_long_full() {\n+        check_full(\n+            \"std::foo::bar::Baz\",\n+            r\"use std::foo::bar::Qux;\",\n+            r\"use std::foo::bar::{Baz, Qux};\",\n+        )\n+    }\n+\n+    #[test]\n+    fn merges_groups_long_last() {\n+        check_last(\n+            \"std::foo::bar::Baz\",\n+            r\"use std::foo::bar::Qux;\",\n+            r\"use std::foo::bar::{Baz, Qux};\",\n+        )\n+    }\n+\n+    #[test]\n+    fn merges_groups_long_full_list() {\n+        check_full(\n+            \"std::foo::bar::Baz\",\n+            r\"use std::foo::bar::{Qux, Quux};\",\n+            r\"use std::foo::bar::{Baz, Quux, Qux};\",\n+        )\n+    }\n+\n+    #[test]\n+    fn merges_groups_long_last_list() {\n+        check_last(\n+            \"std::foo::bar::Baz\",\n+            r\"use std::foo::bar::{Qux, Quux};\",\n+            r\"use std::foo::bar::{Baz, Quux, Qux};\",\n+        )\n+    }\n+\n+    #[test]\n+    fn merges_groups_long_full_nested() {\n+        check_full(\n+            \"std::foo::bar::Baz\",\n+            r\"use std::foo::bar::{Qux, quux::{Fez, Fizz}};\",\n+            r\"use std::foo::bar::{Baz, quux::{Fez, Fizz}, Qux};\",\n+        )\n+    }\n+\n+    #[test]\n+    fn merges_groups_long_last_nested() {\n+        check_last(\n+            \"std::foo::bar::Baz\",\n+            r\"use std::foo::bar::{Qux, quux::{Fez, Fizz}};\",\n+            r\"use std::foo::bar::Baz;\n+use std::foo::bar::{quux::{Fez, Fizz}, Qux};\",\n+        )\n+    }\n+\n     #[test]\n     fn skip_merges_groups_pub() {\n         check_full(\n@@ -481,6 +535,17 @@ use std::io;\",\n         )\n     }\n \n+    // should this be a thing?\n+    #[test]\n+    fn split_merge() {\n+        check_last(\n+            \"std::fmt::Result\",\n+            r\"use std::{fmt, io};\",\n+            r\"use std::fmt::Result;\n+use std::io;\",\n+        )\n+    }\n+\n     #[test]\n     fn merges_groups_self() {\n         check_full(\"std::fmt::Debug\", r\"use std::fmt;\", r\"use std::fmt::{self, Debug};\")"}]}