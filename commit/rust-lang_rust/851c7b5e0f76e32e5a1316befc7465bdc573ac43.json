{"sha": "851c7b5e0f76e32e5a1316befc7465bdc573ac43", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1MWM3YjVlMGY3NmUzMmU1YTEzMTZiZWZjNzQ2NWJkYzU3M2FjNDM=", "commit": {"author": {"name": "Clark Gaebel", "email": "cgaebel@mozilla.com", "date": "2014-12-03T01:32:37Z"}, "committer": {"name": "Clark Gaebel", "email": "cgaebel@mozilla.com", "date": "2014-12-03T01:50:26Z"}, "message": "Fixed out of date comment on `copy_memory`", "tree": {"sha": "d01298f02499545666694418e99e8b4e687465cf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d01298f02499545666694418e99e8b4e687465cf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/851c7b5e0f76e32e5a1316befc7465bdc573ac43", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/851c7b5e0f76e32e5a1316befc7465bdc573ac43", "html_url": "https://github.com/rust-lang/rust/commit/851c7b5e0f76e32e5a1316befc7465bdc573ac43", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/851c7b5e0f76e32e5a1316befc7465bdc573ac43/comments", "author": null, "committer": null, "parents": [{"sha": "3a325c666d2cb7e297bf3057ff2442f96a79428b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a325c666d2cb7e297bf3057ff2442f96a79428b", "html_url": "https://github.com/rust-lang/rust/commit/3a325c666d2cb7e297bf3057ff2442f96a79428b"}], "stats": {"total": 5, "additions": 3, "deletions": 2}, "files": [{"sha": "906cbd72104e9dc03f668ce6ece5426bdf20c37b", "filename": "src/libcore/slice.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/851c7b5e0f76e32e5a1316befc7465bdc573ac43/src%2Flibcore%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/851c7b5e0f76e32e5a1316befc7465bdc573ac43/src%2Flibcore%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice.rs?ref=851c7b5e0f76e32e5a1316befc7465bdc573ac43", "patch": "@@ -1781,12 +1781,13 @@ pub mod bytes {\n \n     /// Copies data from `src` to `dst`\n     ///\n-    /// `src` and `dst` must not overlap. Panics if the length of `dst`\n-    /// is less than the length of `src`.\n+    /// Panics if the length of `dst` is less than the length of `src`.\n     #[inline]\n     pub fn copy_memory(dst: &mut [u8], src: &[u8]) {\n         let len_src = src.len();\n         assert!(dst.len() >= len_src);\n+        // `dst` is unaliasable, so we know statically it doesn't overlap\n+        // with `src`.\n         unsafe {\n             ptr::copy_nonoverlapping_memory(dst.as_mut_ptr(),\n                                             src.as_ptr(),"}]}