{"sha": "4402412b7838173c91cdfd26d066b40c02b981a7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0MDI0MTJiNzgzODE3M2M5MWNkZmQyNmQwNjZiNDBjMDJiOTgxYTc=", "commit": {"author": {"name": "Seiichi Uchida", "email": "topecongiro@localhost.localdomain", "date": "2017-05-27T14:59:29Z"}, "committer": {"name": "Seiichi Uchida", "email": "topecongiro@localhost.localdomain", "date": "2017-05-27T14:59:29Z"}, "message": "Allow attributes in generics of impl", "tree": {"sha": "dac78061414b203cd4920a2380c0e4d19a44f8a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dac78061414b203cd4920a2380c0e4d19a44f8a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4402412b7838173c91cdfd26d066b40c02b981a7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4402412b7838173c91cdfd26d066b40c02b981a7", "html_url": "https://github.com/rust-lang/rust/commit/4402412b7838173c91cdfd26d066b40c02b981a7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4402412b7838173c91cdfd26d066b40c02b981a7/comments", "author": null, "committer": null, "parents": [{"sha": "8ac3fc36cc98f66381759ae4b8ef08021ec102a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ac3fc36cc98f66381759ae4b8ef08021ec102a2", "html_url": "https://github.com/rust-lang/rust/commit/8ac3fc36cc98f66381759ae4b8ef08021ec102a2"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "644837bd30b00917a6a66fef8c99371b57925dd4", "filename": "src/items.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/4402412b7838173c91cdfd26d066b40c02b981a7/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4402412b7838173c91cdfd26d066b40c02b981a7/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=4402412b7838173c91cdfd26d066b40c02b981a7", "patch": "@@ -1512,12 +1512,16 @@ fn span_for_return(ret: &ast::FunctionRetTy) -> Span {\n \n fn span_for_ty_param(ty: &ast::TyParam) -> Span {\n     // Note that ty.span is the span for ty.ident, not the whole item.\n-    let lo = ty.span.lo;\n+    let lo = if ty.attrs.is_empty() {\n+        ty.span.lo\n+    } else {\n+        ty.attrs[0].span.lo\n+    };\n     if let Some(ref def) = ty.default {\n         return mk_sp(lo, def.span.hi);\n     }\n     if ty.bounds.is_empty() {\n-        return ty.span;\n+        return mk_sp(lo, ty.span.hi);\n     }\n     let hi = match ty.bounds[ty.bounds.len() - 1] {\n         ast::TyParamBound::TraitTyParamBound(ref ptr, _) => ptr.span.hi,"}, {"sha": "adade8910751efb46a40899ab653eaf5a1395b98", "filename": "src/types.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/4402412b7838173c91cdfd26d066b40c02b981a7/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4402412b7838173c91cdfd26d066b40c02b981a7/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=4402412b7838173c91cdfd26d066b40c02b981a7", "patch": "@@ -509,6 +509,12 @@ impl Rewrite for ast::TyParamBounds {\n impl Rewrite for ast::TyParam {\n     fn rewrite(&self, context: &RewriteContext, shape: Shape) -> Option<String> {\n         let mut result = String::with_capacity(128);\n+        // FIXME: If there are more than one attributes, this will force multiline.\n+        let attr_str = match (&*self.attrs).rewrite(context, shape) {\n+            Some(ref rw) if !rw.is_empty() => format!(\"{} \", rw),\n+            _ => String::new(),\n+        };\n+        result.push_str(&attr_str);\n         result.push_str(&self.ident.to_string());\n         if !self.bounds.is_empty() {\n             if context.config.space_before_bound() {"}, {"sha": "1c38a2ff28474d0dd8fd7ec1f8d1ea5fe4aa5b42", "filename": "tests/source/impls.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4402412b7838173c91cdfd26d066b40c02b981a7/tests%2Fsource%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4402412b7838173c91cdfd26d066b40c02b981a7/tests%2Fsource%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fimpls.rs?ref=4402412b7838173c91cdfd26d066b40c02b981a7", "patch": "@@ -117,3 +117,8 @@ impl<ConcreteThreadSafeLayoutNode: ThreadSafeLayoutNodeFoo> Issue1249<ConcreteTh\n     // Creates a new flow constructor.\n    fn foo() {}\n }\n+\n+// #1600\n+impl<#[may_dangle] K, #[may_dangle] V> Drop for RawTable<K, V> {\n+    fn drop() {}\n+}"}, {"sha": "f8b9f43aeb00d7418b7bb0f545e7590bbcfdbfc1", "filename": "tests/target/impls.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/4402412b7838173c91cdfd26d066b40c02b981a7/tests%2Ftarget%2Fimpls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4402412b7838173c91cdfd26d066b40c02b981a7/tests%2Ftarget%2Fimpls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fimpls.rs?ref=4402412b7838173c91cdfd26d066b40c02b981a7", "patch": "@@ -149,3 +149,8 @@ impl<ConcreteThreadSafeLayoutNode: ThreadSafeLayoutNodeFoo>\n     // Creates a new flow constructor.\n     fn foo() {}\n }\n+\n+// #1600\n+impl<#[may_dangle] K, #[may_dangle] V> Drop for RawTable<K, V> {\n+    fn drop() {}\n+}"}]}