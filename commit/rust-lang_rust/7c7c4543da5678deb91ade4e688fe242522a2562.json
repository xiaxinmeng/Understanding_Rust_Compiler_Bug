{"sha": "7c7c4543da5678deb91ade4e688fe242522a2562", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjN2M0NTQzZGE1Njc4ZGViOTFhZGU0ZTY4OGZlMjQyNTIyYTI1NjI=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-31T12:29:15Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2021-07-31T12:29:15Z"}, "message": "Replace useless types", "tree": {"sha": "c2d5ed88b1a89532145268b9c011445c9e3f5844", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2d5ed88b1a89532145268b9c011445c9e3f5844"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c7c4543da5678deb91ade4e688fe242522a2562", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c7c4543da5678deb91ade4e688fe242522a2562", "html_url": "https://github.com/rust-lang/rust/commit/7c7c4543da5678deb91ade4e688fe242522a2562", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c7c4543da5678deb91ade4e688fe242522a2562/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0cf28cedef889483c1922e890005a10bd4738b5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/0cf28cedef889483c1922e890005a10bd4738b5d", "html_url": "https://github.com/rust-lang/rust/commit/0cf28cedef889483c1922e890005a10bd4738b5d"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "25a9e71502396b68e2bf51173859ea298dfd6071", "filename": "crates/ide_assists/src/handlers/replace_if_let_with_match.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7c7c4543da5678deb91ade4e688fe242522a2562/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c7c4543da5678deb91ade4e688fe242522a2562/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_assists%2Fsrc%2Fhandlers%2Freplace_if_let_with_match.rs?ref=7c7c4543da5678deb91ade4e688fe242522a2562", "patch": "@@ -86,7 +86,7 @@ pub(crate) fn replace_if_let_with_match(acc: &mut Assists, ctx: &AssistContext)\n         target,\n         move |edit| {\n             let match_expr = {\n-                let else_arm = make_else_arm(else_block, &cond_bodies, ctx);\n+                let else_arm = make_else_arm(ctx, else_block, &cond_bodies);\n                 let make_match_arm = |(pat, body): (_, ast::BlockExpr)| {\n                     let body = body.reset_indent().indent(IndentLevel(1));\n                     match pat {\n@@ -119,12 +119,12 @@ pub(crate) fn replace_if_let_with_match(acc: &mut Assists, ctx: &AssistContext)\n }\n \n fn make_else_arm(\n-    else_block: Option<ast::BlockExpr>,\n-    cond_bodies: &Vec<(Either<ast::Pat, ast::Expr>, ast::BlockExpr)>,\n     ctx: &AssistContext,\n+    else_block: Option<ast::BlockExpr>,\n+    conditionals: &[(Either<ast::Pat, ast::Expr>, ast::BlockExpr)],\n ) -> ast::MatchArm {\n     if let Some(else_block) = else_block {\n-        let pattern = if let [(Either::Left(pat), _)] = &**cond_bodies {\n+        let pattern = if let [(Either::Left(pat), _)] = conditionals {\n             ctx.sema\n                 .type_of_pat(&pat)\n                 .and_then(|ty| TryEnum::from_ty(&ctx.sema, &ty))"}, {"sha": "980abae93c43e175bbc5515123c32878942dec4f", "filename": "crates/ide_db/src/search.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/7c7c4543da5678deb91ade4e688fe242522a2562/crates%2Fide_db%2Fsrc%2Fsearch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c7c4543da5678deb91ade4e688fe242522a2562/crates%2Fide_db%2Fsrc%2Fsearch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide_db%2Fsrc%2Fsearch.rs?ref=7c7c4543da5678deb91ade4e688fe242522a2562", "patch": "@@ -34,8 +34,8 @@ impl UsageSearchResult {\n         self.references.len()\n     }\n \n-    pub fn iter(&self) -> impl Iterator<Item = (&FileId, &Vec<FileReference>)> + '_ {\n-        self.references.iter()\n+    pub fn iter(&self) -> impl Iterator<Item = (&FileId, &[FileReference])> + '_ {\n+        self.references.iter().map(|(file_id, refs)| (file_id, &**refs))\n     }\n \n     pub fn file_ranges(&self) -> impl Iterator<Item = FileRange> + '_ {"}, {"sha": "9fc220cf3fe1f790cace5a3d3cb7fb3afeca659f", "filename": "crates/proc_macro_api/src/rpc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7c7c4543da5678deb91ade4e688fe242522a2562/crates%2Fproc_macro_api%2Fsrc%2Frpc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c7c4543da5678deb91ade4e688fe242522a2562/crates%2Fproc_macro_api%2Fsrc%2Frpc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fproc_macro_api%2Fsrc%2Frpc.rs?ref=7c7c4543da5678deb91ade4e688fe242522a2562", "patch": "@@ -218,7 +218,7 @@ mod vec_token_tree {\n     use super::{TokenTree, TokenTreeDef};\n     use serde::{ser::SerializeSeq, Deserialize, Deserializer, Serialize, Serializer};\n \n-    pub(super) fn serialize<S>(value: &Vec<TokenTree>, serializer: S) -> Result<S::Ok, S::Error>\n+    pub(super) fn serialize<S>(value: &[TokenTree], serializer: S) -> Result<S::Ok, S::Error>\n     where\n         S: Serializer,\n     {"}]}