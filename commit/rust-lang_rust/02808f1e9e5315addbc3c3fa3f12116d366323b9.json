{"sha": "02808f1e9e5315addbc3c3fa3f12116d366323b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyODA4ZjFlOWU1MzE1YWRkYmMzYzNmYTNmMTIxMTZkMzY2MzIzYjk=", "commit": {"author": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-11-29T16:55:45Z"}, "committer": {"name": "Esteban K\u00fcber", "email": "esteban@kuber.com.ar", "date": "2017-11-29T16:55:45Z"}, "message": "Include lifetime on highlighted ref type mismatch", "tree": {"sha": "4386c04519271802d912232e47bf6c8809c981e1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4386c04519271802d912232e47bf6c8809c981e1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/02808f1e9e5315addbc3c3fa3f12116d366323b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/02808f1e9e5315addbc3c3fa3f12116d366323b9", "html_url": "https://github.com/rust-lang/rust/commit/02808f1e9e5315addbc3c3fa3f12116d366323b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/02808f1e9e5315addbc3c3fa3f12116d366323b9/comments", "author": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "committer": {"login": "estebank", "id": 1606434, "node_id": "MDQ6VXNlcjE2MDY0MzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1606434?v=4", "gravatar_id": "", "url": "https://api.github.com/users/estebank", "html_url": "https://github.com/estebank", "followers_url": "https://api.github.com/users/estebank/followers", "following_url": "https://api.github.com/users/estebank/following{/other_user}", "gists_url": "https://api.github.com/users/estebank/gists{/gist_id}", "starred_url": "https://api.github.com/users/estebank/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/estebank/subscriptions", "organizations_url": "https://api.github.com/users/estebank/orgs", "repos_url": "https://api.github.com/users/estebank/repos", "events_url": "https://api.github.com/users/estebank/events{/privacy}", "received_events_url": "https://api.github.com/users/estebank/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "677381a0c1788d459c010b891fbf21e80b4a28a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/677381a0c1788d459c010b891fbf21e80b4a28a3", "html_url": "https://github.com/rust-lang/rust/commit/677381a0c1788d459c010b891fbf21e80b4a28a3"}], "stats": {"total": 54, "additions": 26, "deletions": 28}, "files": [{"sha": "514b29120a96aa438897ec84ebf01a707528d287", "filename": "src/librustc/infer/error_reporting/mod.rs", "status": "modified", "additions": 26, "deletions": 28, "changes": 54, "blob_url": "https://github.com/rust-lang/rust/blob/02808f1e9e5315addbc3c3fa3f12116d366323b9/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/02808f1e9e5315addbc3c3fa3f12116d366323b9/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Finfer%2Ferror_reporting%2Fmod.rs?ref=02808f1e9e5315addbc3c3fa3f12116d366323b9", "patch": "@@ -569,6 +569,25 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             }\n         }\n \n+        fn push_ty_ref<'tcx>(r: &ty::Region<'tcx>,\n+                             tnm: &ty::TypeAndMut<'tcx>,\n+                             s: &mut DiagnosticStyledString) {\n+            let r = &format!(\"{}\", r);\n+            s.push_highlighted(format!(\"&{}{}{}\",\n+                                       r,\n+                                       if r == \"\" {\n+                                           \"\"\n+                                       } else {\n+                                           \" \"\n+                                       },\n+                                       if tnm.mutbl == hir::MutMutable {\n+                                          \"mut \"\n+                                       } else {\n+                                           \"\"\n+                                       }));\n+            s.push_normal(format!(\"{}\", tnm.ty));\n+        }\n+\n         match (&t1.sty, &t2.sty) {\n             (&ty::TyAdt(def1, sub1), &ty::TyAdt(def2, sub2)) => {\n                 let mut values = (DiagnosticStyledString::new(), DiagnosticStyledString::new());\n@@ -688,45 +707,24 @@ impl<'a, 'gcx, 'tcx> InferCtxt<'a, 'gcx, 'tcx> {\n             }\n \n             // When finding T != &T, hightlight only the borrow\n-            (&ty::TyRef(_, ref tnm1), _) if equals(&tnm1.ty, &t2) => {\n+            (&ty::TyRef(r1, ref tnm1), _) if equals(&tnm1.ty, &t2) => {\n                 let mut values = (DiagnosticStyledString::new(), DiagnosticStyledString::new());\n-                values.0.push_highlighted(format!(\"&{}\", if tnm1.mutbl == hir::MutMutable {\n-                    \"mut \"\n-                 } else {\n-                     \"\"\n-                 }));\n-                values.0.push_normal(format!(\"{}\", tnm1.ty));\n+                push_ty_ref(&r1, tnm1, &mut values.0);\n                 values.1.push_normal(format!(\"{}\", t2));\n                 values\n             }\n-            (_, &ty::TyRef(_, ref tnm2)) if equals(&t1, &tnm2.ty) => {\n+            (_, &ty::TyRef(r2, ref tnm2)) if equals(&t1, &tnm2.ty) => {\n                 let mut values = (DiagnosticStyledString::new(), DiagnosticStyledString::new());\n-                values.1.push_highlighted(format!(\"&{}\", if tnm2.mutbl == hir::MutMutable {\n-                    \"mut \"\n-                 } else {\n-                     \"\"\n-                 }));\n                 values.0.push_normal(format!(\"{}\", t1));\n-                values.1.push_normal(format!(\"{}\", tnm2.ty));\n+                push_ty_ref(&r2, tnm2, &mut values.1);\n                 values\n             }\n \n             // When encountering &T != &mut T, highlight only the borrow\n-            (&ty::TyRef(_, ref tnm1), &ty::TyRef(_, ref tnm2)) if equals(&tnm1.ty, &tnm2.ty) => {\n+            (&ty::TyRef(r1, ref tnm1), &ty::TyRef(r2, ref tnm2)) if equals(&tnm1.ty, &tnm2.ty) => {\n                 let mut values = (DiagnosticStyledString::new(), DiagnosticStyledString::new());\n-                values.0.push_highlighted(format!(\"&{}\", if tnm1.mutbl == hir::MutMutable {\n-                    \"mut \"\n-                 } else {\n-                     \"\"\n-                 }));\n-                values.1.push_highlighted(format!(\"&{}\", if tnm2.mutbl == hir::MutMutable {\n-                    \"mut \"\n-                 } else {\n-                     \"\"\n-                 }));\n-\n-                values.0.push_normal(format!(\"{}\", tnm1.ty));\n-                values.1.push_normal(format!(\"{}\", tnm2.ty));\n+                push_ty_ref(&r1, tnm1, &mut values.0);\n+                push_ty_ref(&r2, tnm2, &mut values.1);\n                 values\n             }\n "}]}