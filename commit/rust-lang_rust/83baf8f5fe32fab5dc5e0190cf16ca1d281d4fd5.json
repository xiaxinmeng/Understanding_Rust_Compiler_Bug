{"sha": "83baf8f5fe32fab5dc5e0190cf16ca1d281d4fd5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgzYmFmOGY1ZmUzMmZhYjVkYzVlMDE5MGNmMTZjYTFkMjgxZDRmZDU=", "commit": {"author": {"name": "flip1995", "email": "9744647+flip1995@users.noreply.github.com", "date": "2018-07-28T15:35:24Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-08-29T18:08:29Z"}, "message": "Adapt documentation to the tool_lints", "tree": {"sha": "35285e106fa21249e2a0ce4eac4024fefca540b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35285e106fa21249e2a0ce4eac4024fefca540b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/83baf8f5fe32fab5dc5e0190cf16ca1d281d4fd5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/83baf8f5fe32fab5dc5e0190cf16ca1d281d4fd5", "html_url": "https://github.com/rust-lang/rust/commit/83baf8f5fe32fab5dc5e0190cf16ca1d281d4fd5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/83baf8f5fe32fab5dc5e0190cf16ca1d281d4fd5/comments", "author": {"login": "flip1995", "id": 9744647, "node_id": "MDQ6VXNlcjk3NDQ2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/9744647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flip1995", "html_url": "https://github.com/flip1995", "followers_url": "https://api.github.com/users/flip1995/followers", "following_url": "https://api.github.com/users/flip1995/following{/other_user}", "gists_url": "https://api.github.com/users/flip1995/gists{/gist_id}", "starred_url": "https://api.github.com/users/flip1995/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flip1995/subscriptions", "organizations_url": "https://api.github.com/users/flip1995/orgs", "repos_url": "https://api.github.com/users/flip1995/repos", "events_url": "https://api.github.com/users/flip1995/events{/privacy}", "received_events_url": "https://api.github.com/users/flip1995/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8c07772dbb817114f338692188dd7733bcd741cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/8c07772dbb817114f338692188dd7733bcd741cb", "html_url": "https://github.com/rust-lang/rust/commit/8c07772dbb817114f338692188dd7733bcd741cb"}], "stats": {"total": 34, "additions": 13, "deletions": 21}, "files": [{"sha": "3d1385244a6f89033bf2709088b1a5f346c77776", "filename": "CONTRIBUTING.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/83baf8f5fe32fab5dc5e0190cf16ca1d281d4fd5/CONTRIBUTING.md", "raw_url": "https://github.com/rust-lang/rust/raw/83baf8f5fe32fab5dc5e0190cf16ca1d281d4fd5/CONTRIBUTING.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/CONTRIBUTING.md?ref=83baf8f5fe32fab5dc5e0190cf16ca1d281d4fd5", "patch": "@@ -170,7 +170,7 @@ pub fn register_plugins(reg: &mut rustc_plugin::Registry) {\n     reg.register_early_lint_pass(box else_if_without_else::ElseIfWithoutElse);\n     // ...\n \n-    reg.register_lint_group(\"clippy_restriction\", vec![\n+    reg.register_lint_group(\"clippy::restriction\", vec![\n         // ...\n         else_if_without_else::ELSE_IF_WITHOUT_ELSE,\n         // ..."}, {"sha": "98f712c28d82176c4ba9cbd4fba680918d8cf2c1", "filename": "README.md", "status": "modified", "additions": 12, "deletions": 20, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/83baf8f5fe32fab5dc5e0190cf16ca1d281d4fd5/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/83baf8f5fe32fab5dc5e0190cf16ca1d281d4fd5/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=83baf8f5fe32fab5dc5e0190cf16ca1d281d4fd5", "patch": "@@ -13,14 +13,14 @@ A collection of lints to catch common mistakes and improve your [Rust](https://g\n \n We have a bunch of lint categories to allow you to choose how much Clippy is supposed to ~~annoy~~ help you:\n \n-* `clippy` (everything that has no false positives)\n-* `clippy_pedantic` (everything)\n-* `clippy_nursery` (new lints that aren't quite ready yet)\n-* `clippy_style` (code that should be written in a more idiomatic way)\n-* `clippy_complexity` (code that does something simple but in a complex way)\n-* `clippy_perf` (code that can be written in a faster way)\n-* `clippy_cargo` (checks against the cargo manifest)\n-* **`clippy_correctness`** (code that is just outright wrong or very very useless)\n+* `clippy::all` (everything that has no false positives)\n+* `clippy::pedantic` (everything)\n+* `clippy::nursery` (new lints that aren't quite ready yet)\n+* `clippy::style` (code that should be written in a more idiomatic way)\n+* `clippy::complexity` (code that does something simple but in a complex way)\n+* `clippy::perf` (code that can be written in a faster way)\n+* `clippy::cargo` (checks against the cargo manifest)\n+* **`clippy::correctness`** (code that is just outright wrong or very very useless)\n \n More to come, please [file an issue](https://github.com/rust-lang-nursery/rust-clippy/issues) if you have ideas!\n \n@@ -106,26 +106,18 @@ define the `CLIPPY_DISABLE_DOCS_LINKS` environment variable.\n \n You can add options  to `allow`/`warn`/`deny`:\n \n-*   the whole set of `Warn` lints using the `clippy` lint group (`#![deny(clippy)]`)\n+*   the whole set of `Warn` lints using the `clippy` lint group (`#![deny(clippy::all)]`)\n \n-*   all lints using both the `clippy` and `clippy_pedantic` lint groups (`#![deny(clippy)]`,\n-    `#![deny(clippy_pedantic)]`). Note that `clippy_pedantic` contains some very aggressive\n+*   all lints using both the `clippy` and `clippy::pedantic` lint groups (`#![deny(clippy::all)]`,\n+    `#![deny(clippy::pedantic)]`). Note that `clippy::pedantic` contains some very aggressive\n     lints prone to false positives.\n \n-*   only some lints (`#![deny(single_match, box_vec)]`, etc)\n+*   only some lints (`#![deny(clippy::single_match, clippy::box_vec)]`, etc)\n \n *   `allow`/`warn`/`deny` can be limited to a single function or module using `#[allow(...)]`, etc\n \n Note: `deny` produces errors instead of warnings.\n \n-For convenience, `cargo clippy` automatically defines a `cargo-clippy`\n-feature. This lets you set lint levels and compile with or without Clippy\n-transparently:\n-\n-```rust\n-#[cfg_attr(feature = \"cargo-clippy\", allow(needless_lifetimes))]\n-```\n-\n ## Updating rustc\n \n Sometimes, rustc moves forward without Clippy catching up. Therefore updating"}]}