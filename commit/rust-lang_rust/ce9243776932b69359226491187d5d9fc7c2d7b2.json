{"sha": "ce9243776932b69359226491187d5d9fc7c2d7b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlOTI0Mzc3NjkzMmI2OTM1OTIyNjQ5MTE4N2Q1ZDlmYzdjMmQ3YjI=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-15T04:34:08Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2014-12-19T15:51:01Z"}, "message": "libtest: use `#[deriving(Copy)]`", "tree": {"sha": "471e95238e95caae352dca2c865b8a89e37020ce", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/471e95238e95caae352dca2c865b8a89e37020ce"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce9243776932b69359226491187d5d9fc7c2d7b2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce9243776932b69359226491187d5d9fc7c2d7b2", "html_url": "https://github.com/rust-lang/rust/commit/ce9243776932b69359226491187d5d9fc7c2d7b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce9243776932b69359226491187d5d9fc7c2d7b2/comments", "author": null, "committer": null, "parents": [{"sha": "64234b3541e032302206056e075d500eacec5f35", "url": "https://api.github.com/repos/rust-lang/rust/commits/64234b3541e032302206056e075d500eacec5f35", "html_url": "https://github.com/rust-lang/rust/commit/64234b3541e032302206056e075d500eacec5f35"}], "stats": {"total": 15, "additions": 4, "deletions": 11}, "files": [{"sha": "5b04a1fed896c8f8a1470ec1d145e65133fab5e7", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 4, "deletions": 11, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/ce9243776932b69359226491187d5d9fc7c2d7b2/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce9243776932b69359226491187d5d9fc7c2d7b2/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=ce9243776932b69359226491187d5d9fc7c2d7b2", "patch": "@@ -110,15 +110,13 @@ impl Show for TestName {\n     }\n }\n \n-#[deriving(Clone)]\n+#[deriving(Clone, Copy)]\n enum NamePadding {\n     PadNone,\n     PadOnLeft,\n     PadOnRight,\n }\n \n-impl Copy for NamePadding {}\n-\n impl TestDesc {\n     fn padded_name(&self, column_count: uint, align: NamePadding) -> String {\n         let mut name = String::from_str(self.name.as_slice());\n@@ -215,14 +213,12 @@ pub struct TestDescAndFn {\n     pub testfn: TestFn,\n }\n \n-#[deriving(Clone, Encodable, Decodable, PartialEq, Show)]\n+#[deriving(Clone, Copy, Encodable, Decodable, PartialEq, Show)]\n pub struct Metric {\n     value: f64,\n     noise: f64\n }\n \n-impl Copy for Metric {}\n-\n impl Metric {\n     pub fn new(value: f64, noise: f64) -> Metric {\n         Metric {value: value, noise: noise}\n@@ -240,7 +236,7 @@ impl Clone for MetricMap {\n }\n \n /// Analysis of a single change in metric\n-#[deriving(PartialEq, Show)]\n+#[deriving(Copy, PartialEq, Show)]\n pub enum MetricChange {\n     LikelyNoise,\n     MetricAdded,\n@@ -249,8 +245,6 @@ pub enum MetricChange {\n     Regression(f64)\n }\n \n-impl Copy for MetricChange {}\n-\n pub type MetricDiff = BTreeMap<String,MetricChange>;\n \n // The default console test runner. It accepts the command line\n@@ -287,14 +281,13 @@ pub fn test_main_static(args: &[String], tests: &[TestDescAndFn]) {\n     test_main(args, owned_tests)\n }\n \n+#[deriving(Copy)]\n pub enum ColorConfig {\n     AutoColor,\n     AlwaysColor,\n     NeverColor,\n }\n \n-impl Copy for ColorConfig {}\n-\n pub struct TestOpts {\n     pub filter: Option<Regex>,\n     pub run_ignored: bool,"}]}