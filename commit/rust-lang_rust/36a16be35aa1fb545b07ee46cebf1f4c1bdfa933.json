{"sha": "36a16be35aa1fb545b07ee46cebf1f4c1bdfa933", "node_id": "C_kwDOAAsO6NoAKDM2YTE2YmUzNWFhMWZiNTQ1YjA3ZWU0NmNlYmYxZjRjMWJkZmE5MzM", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-06-04T21:42:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-04T21:42:01Z"}, "message": "Rollup merge of #97688 - RalfJung:test-const-cpy, r=Mark-Simulacrum\n\ntest const_copy to make sure bytewise pointer copies are working\n\nThis is non-trivial; for `swap_nonoverlapping`, this is [not working](https://github.com/rust-lang/rust/issues/83163#issuecomment-1145917372).", "tree": {"sha": "071b525c20941ceaa29c84f4535aa44a099f1a58", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/071b525c20941ceaa29c84f4535aa44a099f1a58"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36a16be35aa1fb545b07ee46cebf1f4c1bdfa933", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJim9GpCRBK7hj4Ov3rIwAAMN0IAHYcAYi6YVnuu4dgXI1vj3qA\nrXXZIoequ48YuhzmGZz2DjNt1n/BZzdsvdPHnvpqFvICVizGZ81/Xs1oBFAhQfXE\neW+IpILUxMB4DaO944QMabIomzAt41isdi71q6d8tXiO6tuG7TJupeWZOIsi6kdF\nmMydKuf1b+E+EkjL62BGkZCrpqai02cxK4ESBbxb50Ajb9hODT594kEKQrG9Ah0F\nPNqu2f4QCNkz22gKDMdSp3/QyduxKzAGG6zoXsHOnvV6Kr0+/Vrd4r0259xKW8WQ\naZ0vzFJKIG1YDKZzW0d0+Qgt4S5N/N1S2A6SxARf6ffzvGDBC0CS6J8qMwyuKEM=\n=lyCU\n-----END PGP SIGNATURE-----\n", "payload": "tree 071b525c20941ceaa29c84f4535aa44a099f1a58\nparent 326315bf5499d2ff59ebd2bdd0e22576bef25b44\nparent 4990021082b329d628134e42d65680f4e7195b3b\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1654378921 +0200\ncommitter GitHub <noreply@github.com> 1654378921 +0200\n\nRollup merge of #97688 - RalfJung:test-const-cpy, r=Mark-Simulacrum\n\ntest const_copy to make sure bytewise pointer copies are working\n\nThis is non-trivial; for `swap_nonoverlapping`, this is [not working](https://github.com/rust-lang/rust/issues/83163#issuecomment-1145917372).\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36a16be35aa1fb545b07ee46cebf1f4c1bdfa933", "html_url": "https://github.com/rust-lang/rust/commit/36a16be35aa1fb545b07ee46cebf1f4c1bdfa933", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36a16be35aa1fb545b07ee46cebf1f4c1bdfa933/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "326315bf5499d2ff59ebd2bdd0e22576bef25b44", "url": "https://api.github.com/repos/rust-lang/rust/commits/326315bf5499d2ff59ebd2bdd0e22576bef25b44", "html_url": "https://github.com/rust-lang/rust/commit/326315bf5499d2ff59ebd2bdd0e22576bef25b44"}, {"sha": "4990021082b329d628134e42d65680f4e7195b3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/4990021082b329d628134e42d65680f4e7195b3b", "html_url": "https://github.com/rust-lang/rust/commit/4990021082b329d628134e42d65680f4e7195b3b"}], "stats": {"total": 41, "additions": 41, "deletions": 0}, "files": [{"sha": "9505ec31609f5a7ffcf6a07a157c71e129e3a58d", "filename": "library/core/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/36a16be35aa1fb545b07ee46cebf1f4c1bdfa933/library%2Fcore%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36a16be35aa1fb545b07ee46cebf1f4c1bdfa933/library%2Fcore%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Flib.rs?ref=36a16be35aa1fb545b07ee46cebf1f4c1bdfa933", "patch": "@@ -84,6 +84,7 @@\n #![feature(const_option)]\n #![feature(const_option_ext)]\n #![feature(const_result)]\n+#![feature(const_intrinsic_copy)]\n #![feature(integer_atomics)]\n #![feature(int_roundings)]\n #![feature(slice_group_by)]"}, {"sha": "40b2b49bdbd7d96c6dcbc6a144acf7d77abe1945", "filename": "library/core/tests/ptr.rs", "status": "modified", "additions": 40, "deletions": 0, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/36a16be35aa1fb545b07ee46cebf1f4c1bdfa933/library%2Fcore%2Ftests%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36a16be35aa1fb545b07ee46cebf1f4c1bdfa933/library%2Fcore%2Ftests%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Ftests%2Fptr.rs?ref=36a16be35aa1fb545b07ee46cebf1f4c1bdfa933", "patch": "@@ -1,4 +1,5 @@\n use core::cell::RefCell;\n+use core::mem::{self, MaybeUninit};\n use core::num::NonZeroUsize;\n use core::ptr;\n use core::ptr::*;\n@@ -781,3 +782,42 @@ fn nonnull_tagged_pointer_with_provenance() {\n         }\n     }\n }\n+\n+#[test]\n+fn test_const_copy() {\n+    const {\n+        let ptr1 = &1;\n+        let mut ptr2 = &666;\n+\n+        // Copy ptr1 to ptr2, bytewise.\n+        unsafe {\n+            ptr::copy(\n+                &ptr1 as *const _ as *const MaybeUninit<u8>,\n+                &mut ptr2 as *mut _ as *mut MaybeUninit<u8>,\n+                mem::size_of::<&i32>(),\n+            );\n+        }\n+\n+        // Make sure they still work.\n+        assert!(*ptr1 == 1);\n+        assert!(*ptr2 == 1);\n+    };\n+\n+    const {\n+        let ptr1 = &1;\n+        let mut ptr2 = &666;\n+\n+        // Copy ptr1 to ptr2, bytewise.\n+        unsafe {\n+            ptr::copy_nonoverlapping(\n+                &ptr1 as *const _ as *const MaybeUninit<u8>,\n+                &mut ptr2 as *mut _ as *mut MaybeUninit<u8>,\n+                mem::size_of::<&i32>(),\n+            );\n+        }\n+\n+        // Make sure they still work.\n+        assert!(*ptr1 == 1);\n+        assert!(*ptr2 == 1);\n+    };\n+}"}]}