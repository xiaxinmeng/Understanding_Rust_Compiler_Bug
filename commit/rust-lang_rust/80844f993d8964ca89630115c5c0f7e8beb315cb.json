{"sha": "80844f993d8964ca89630115c5c0f7e8beb315cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwODQ0Zjk5M2Q4OTY0Y2E4OTYzMDExNWM1YzBmN2U4YmViMzE1Y2I=", "commit": {"author": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-02-24T21:15:05Z"}, "committer": {"name": "Jed Davis", "email": "jld@panix.com", "date": "2013-03-07T04:41:57Z"}, "message": "Add regression tests for a subtle aspect of expr_struct translation.\n\nThe first is reduced from a case in rustdoc (originally involving an\nARC); the other is related.  No committed version has gotten these\nwrong, but when I broke them it showed up only in rustdoc; there was\nnothing in the test suite (or the compiler!) that failed.\n\nThe general issue is that the statics and trans have to agree on order\nof evaluation, or else you get use-after-move-out-of errors at runtime.", "tree": {"sha": "37139ecd0ee207141c78edd63a25be128f09d8a3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/37139ecd0ee207141c78edd63a25be128f09d8a3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80844f993d8964ca89630115c5c0f7e8beb315cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80844f993d8964ca89630115c5c0f7e8beb315cb", "html_url": "https://github.com/rust-lang/rust/commit/80844f993d8964ca89630115c5c0f7e8beb315cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80844f993d8964ca89630115c5c0f7e8beb315cb/comments", "author": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jld", "id": 254973, "node_id": "MDQ6VXNlcjI1NDk3Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/254973?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jld", "html_url": "https://github.com/jld", "followers_url": "https://api.github.com/users/jld/followers", "following_url": "https://api.github.com/users/jld/following{/other_user}", "gists_url": "https://api.github.com/users/jld/gists{/gist_id}", "starred_url": "https://api.github.com/users/jld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jld/subscriptions", "organizations_url": "https://api.github.com/users/jld/orgs", "repos_url": "https://api.github.com/users/jld/repos", "events_url": "https://api.github.com/users/jld/events{/privacy}", "received_events_url": "https://api.github.com/users/jld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c7325c417257646afdd93fd3cc10ef891d167643", "url": "https://api.github.com/repos/rust-lang/rust/commits/c7325c417257646afdd93fd3cc10ef891d167643", "html_url": "https://github.com/rust-lang/rust/commit/c7325c417257646afdd93fd3cc10ef891d167643"}], "stats": {"total": 32, "additions": 32, "deletions": 0}, "files": [{"sha": "db7c73cbfc5eab3c5c2ea71b2ac67abdbec9e792", "filename": "src/test/run-pass/struct-order-of-eval-1.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/80844f993d8964ca89630115c5c0f7e8beb315cb/src%2Ftest%2Frun-pass%2Fstruct-order-of-eval-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80844f993d8964ca89630115c5c0f7e8beb315cb/src%2Ftest%2Frun-pass%2Fstruct-order-of-eval-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-order-of-eval-1.rs?ref=80844f993d8964ca89630115c5c0f7e8beb315cb", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct S { f0: ~str, f1: int }\n+\n+pub fn main() {\n+    let s = ~\"Hello, world!\";\n+    let _s = S { f0: str::from_slice(s), ..S { f0: s, f1: 23 } };\n+}"}, {"sha": "413f185659a6f1fb862d5418f9e02811b3875082", "filename": "src/test/run-pass/struct-order-of-eval-2.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/80844f993d8964ca89630115c5c0f7e8beb315cb/src%2Ftest%2Frun-pass%2Fstruct-order-of-eval-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80844f993d8964ca89630115c5c0f7e8beb315cb/src%2Ftest%2Frun-pass%2Fstruct-order-of-eval-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fstruct-order-of-eval-2.rs?ref=80844f993d8964ca89630115c5c0f7e8beb315cb", "patch": "@@ -0,0 +1,16 @@\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+struct S { f0: ~str, f1: ~str }\n+\n+pub fn main() {\n+    let s = ~\"Hello, world!\";\n+    let _s = S { f1: str::from_slice(s), f0: s };\n+}"}]}