{"sha": "b7c12f3aab940cf3b75a1e195989c0722f9ffe46", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3YzEyZjNhYWI5NDBjZjNiNzVhMWUxOTU5ODljMDcyMmY5ZmZlNDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-19T23:06:21Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2021-04-19T23:06:21Z"}, "message": "Auto merge of #7092 - basavesh:fix#7066, r=giraffate\n\nuseless use of format! should return function directly\n\nfixes #7066\n\nchangelog: [`useless_format`] wraps the content in the braces when it's needed.\n\nr? `@giraffate`", "tree": {"sha": "c44114e6807c819d8fd564d115b3f7f65e07a635", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c44114e6807c819d8fd564d115b3f7f65e07a635"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b7c12f3aab940cf3b75a1e195989c0722f9ffe46", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b7c12f3aab940cf3b75a1e195989c0722f9ffe46", "html_url": "https://github.com/rust-lang/rust/commit/b7c12f3aab940cf3b75a1e195989c0722f9ffe46", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b7c12f3aab940cf3b75a1e195989c0722f9ffe46/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8f77e2067f5255fb1acba99dcfa0d06cdeb7cf78", "url": "https://api.github.com/repos/rust-lang/rust/commits/8f77e2067f5255fb1acba99dcfa0d06cdeb7cf78", "html_url": "https://github.com/rust-lang/rust/commit/8f77e2067f5255fb1acba99dcfa0d06cdeb7cf78"}, {"sha": "c6b381c59bffe8ce62fcf9569fb1a39189234dcc", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6b381c59bffe8ce62fcf9569fb1a39189234dcc", "html_url": "https://github.com/rust-lang/rust/commit/c6b381c59bffe8ce62fcf9569fb1a39189234dcc"}], "stats": {"total": 27, "additions": 21, "deletions": 6}, "files": [{"sha": "c2b055ed6488e4e9bdeb0d34e1980a16c8e09fdc", "filename": "clippy_lints/src/format.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b7c12f3aab940cf3b75a1e195989c0722f9ffe46/clippy_lints%2Fsrc%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7c12f3aab940cf3b75a1e195989c0722f9ffe46/clippy_lints%2Fsrc%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fformat.rs?ref=b7c12f3aab940cf3b75a1e195989c0722f9ffe46", "patch": "@@ -1,6 +1,7 @@\n use clippy_utils::diagnostics::span_lint_and_then;\n use clippy_utils::paths;\n use clippy_utils::source::{snippet, snippet_opt};\n+use clippy_utils::sugg::Sugg;\n use clippy_utils::ty::is_type_diagnostic_item;\n use clippy_utils::{is_expn_of, last_path_segment, match_def_path, match_function_call};\n use if_chain::if_chain;\n@@ -100,15 +101,15 @@ fn on_argumentv1_new<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>, arms: &\n                     return Some(format!(\"{:?}.to_string()\", s.as_str()));\n                 }\n             } else {\n-                let snip = snippet(cx, format_args.span, \"<arg>\");\n+                let sugg = Sugg::hir(cx, format_args, \"<arg>\");\n                 if let ExprKind::MethodCall(path, _, _, _) = format_args.kind {\n                     if path.ident.name == sym!(to_string) {\n-                        return Some(format!(\"{}\", snip));\n+                        return Some(format!(\"{}\", sugg));\n                     }\n                 } else if let ExprKind::Binary(..) = format_args.kind {\n-                    return Some(format!(\"{}\", snip));\n+                    return Some(format!(\"{}\", sugg));\n                 }\n-                return Some(format!(\"{}.to_string()\", snip));\n+                return Some(format!(\"{}.to_string()\", sugg.maybe_par()));\n             }\n         }\n     }\n@@ -136,7 +137,7 @@ fn on_new_v1<'tcx>(cx: &LateContext<'tcx>, expr: &'tcx Expr<'_>) -> Option<Strin\n                 if let Some(s_src) = snippet_opt(cx, lit.span) {\n                     // Simulate macro expansion, converting {{ and }} to { and }.\n                     let s_expand = s_src.replace(\"{{\", \"{\").replace(\"}}\", \"}\");\n-                    return Some(format!(\"{}.to_string()\", s_expand))\n+                    return Some(format!(\"{}.to_string()\", s_expand));\n                 }\n             } else if s.as_str().is_empty() {\n                 return on_argumentv1_new(cx, &tup[0], arms);"}, {"sha": "e4cfb005fd1d0d8e8a0ac4bd42392dddb56df35c", "filename": "tests/ui/format.fixed", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7c12f3aab940cf3b75a1e195989c0722f9ffe46/tests%2Fui%2Fformat.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/b7c12f3aab940cf3b75a1e195989c0722f9ffe46/tests%2Fui%2Fformat.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.fixed?ref=b7c12f3aab940cf3b75a1e195989c0722f9ffe46", "patch": "@@ -65,4 +65,8 @@ fn main() {\n     // False positive\n     let a = \"foo\".to_string();\n     let _ = Some(a + \"bar\");\n+\n+    // Wrap it with braces\n+    let v: Vec<String> = vec![\"foo\".to_string(), \"bar\".to_string()];\n+    let _s: String = (&*v.join(\"\\n\")).to_string();\n }"}, {"sha": "683957f0ff0f79cb452811b66b0db83d90f55c8b", "filename": "tests/ui/format.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b7c12f3aab940cf3b75a1e195989c0722f9ffe46/tests%2Fui%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b7c12f3aab940cf3b75a1e195989c0722f9ffe46/tests%2Fui%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.rs?ref=b7c12f3aab940cf3b75a1e195989c0722f9ffe46", "patch": "@@ -67,4 +67,8 @@ fn main() {\n     // False positive\n     let a = \"foo\".to_string();\n     let _ = Some(format!(\"{}\", a + \"bar\"));\n+\n+    // Wrap it with braces\n+    let v: Vec<String> = vec![\"foo\".to_string(), \"bar\".to_string()];\n+    let _s: String = format!(\"{}\", &*v.join(\"\\n\"));\n }"}, {"sha": "2017eb2b3838fc46208b13ec268f6248bdb21d54", "filename": "tests/ui/format.stderr", "status": "modified", "additions": 7, "deletions": 1, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/b7c12f3aab940cf3b75a1e195989c0722f9ffe46/tests%2Fui%2Fformat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b7c12f3aab940cf3b75a1e195989c0722f9ffe46/tests%2Fui%2Fformat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fformat.stderr?ref=b7c12f3aab940cf3b75a1e195989c0722f9ffe46", "patch": "@@ -87,5 +87,11 @@ error: useless use of `format!`\n LL |     let _ = Some(format!(\"{}\", a + \"bar\"));\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `a + \"bar\"`\n \n-error: aborting due to 13 previous errors\n+error: useless use of `format!`\n+  --> $DIR/format.rs:73:22\n+   |\n+LL |     let _s: String = format!(\"{}\", &*v.join(\"/n\"));\n+   |                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: consider using `.to_string()`: `(&*v.join(\"/n\")).to_string()`\n+\n+error: aborting due to 14 previous errors\n "}]}