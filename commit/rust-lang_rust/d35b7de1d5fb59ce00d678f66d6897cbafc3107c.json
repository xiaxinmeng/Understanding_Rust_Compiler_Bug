{"sha": "d35b7de1d5fb59ce00d678f66d6897cbafc3107c", "node_id": "C_kwDOAAsO6NoAKGQzNWI3ZGUxZDVmYjU5Y2UwMGQ2NzhmNjZkNjg5N2NiYWZjMzEwN2M", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-11-02T11:47:46Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-11-02T11:47:46Z"}, "message": "shrink `missing_{safety,errors,panics}_doc` spans", "tree": {"sha": "5a6b87d43a394312b58436378492d4dea8cb30e6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a6b87d43a394312b58436378492d4dea8cb30e6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d35b7de1d5fb59ce00d678f66d6897cbafc3107c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d35b7de1d5fb59ce00d678f66d6897cbafc3107c", "html_url": "https://github.com/rust-lang/rust/commit/d35b7de1d5fb59ce00d678f66d6897cbafc3107c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d35b7de1d5fb59ce00d678f66d6897cbafc3107c/comments", "author": null, "committer": null, "parents": [{"sha": "7600535511a0b8c76bf28f40e1b5c4a45a57b28f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7600535511a0b8c76bf28f40e1b5c4a45a57b28f", "html_url": "https://github.com/rust-lang/rust/commit/7600535511a0b8c76bf28f40e1b5c4a45a57b28f"}], "stats": {"total": 148, "additions": 45, "deletions": 103}, "files": [{"sha": "fbc00836b390f4d6d6b19e596717646415c1b0c9", "filename": "clippy_lints/src/doc.rs", "status": "modified", "additions": 7, "deletions": 22, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/d35b7de1d5fb59ce00d678f66d6897cbafc3107c/clippy_lints%2Fsrc%2Fdoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d35b7de1d5fb59ce00d678f66d6897cbafc3107c/clippy_lints%2Fsrc%2Fdoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdoc.rs?ref=d35b7de1d5fb59ce00d678f66d6897cbafc3107c", "patch": "@@ -11,7 +11,7 @@ use rustc_ast::token::CommentKind;\n use rustc_data_structures::fx::FxHashSet;\n use rustc_data_structures::sync::Lrc;\n use rustc_errors::emitter::EmitterWriter;\n-use rustc_errors::{Applicability, Handler, MultiSpan, SuggestionStyle};\n+use rustc_errors::{Applicability, Handler, SuggestionStyle};\n use rustc_hir as hir;\n use rustc_hir::intravisit::{self, Visitor};\n use rustc_hir::{AnonConst, Expr};\n@@ -265,15 +265,7 @@ impl<'tcx> LateLintPass<'tcx> for DocMarkdown {\n                         panic_span: None,\n                     };\n                     fpu.visit_expr(body.value);\n-                    lint_for_missing_headers(\n-                        cx,\n-                        item.def_id.def_id,\n-                        item.span,\n-                        sig,\n-                        headers,\n-                        Some(body_id),\n-                        fpu.panic_span,\n-                    );\n+                    lint_for_missing_headers(cx, item.def_id.def_id, sig, headers, Some(body_id), fpu.panic_span);\n                 }\n             },\n             hir::ItemKind::Impl(impl_) => {\n@@ -284,7 +276,7 @@ impl<'tcx> LateLintPass<'tcx> for DocMarkdown {\n                     span_lint(\n                         cx,\n                         MISSING_SAFETY_DOC,\n-                        item.span,\n+                        cx.tcx.def_span(item.def_id),\n                         \"docs for unsafe trait missing `# Safety` section\",\n                     );\n                 }\n@@ -304,7 +296,7 @@ impl<'tcx> LateLintPass<'tcx> for DocMarkdown {\n         let headers = check_attrs(cx, &self.valid_idents, attrs);\n         if let hir::TraitItemKind::Fn(ref sig, ..) = item.kind {\n             if !in_external_macro(cx.tcx.sess, item.span) {\n-                lint_for_missing_headers(cx, item.def_id.def_id, item.span, sig, headers, None, None);\n+                lint_for_missing_headers(cx, item.def_id.def_id, sig, headers, None, None);\n             }\n         }\n     }\n@@ -323,23 +315,14 @@ impl<'tcx> LateLintPass<'tcx> for DocMarkdown {\n                 panic_span: None,\n             };\n             fpu.visit_expr(body.value);\n-            lint_for_missing_headers(\n-                cx,\n-                item.def_id.def_id,\n-                item.span,\n-                sig,\n-                headers,\n-                Some(body_id),\n-                fpu.panic_span,\n-            );\n+            lint_for_missing_headers(cx, item.def_id.def_id, sig, headers, Some(body_id), fpu.panic_span);\n         }\n     }\n }\n \n fn lint_for_missing_headers(\n     cx: &LateContext<'_>,\n     def_id: LocalDefId,\n-    span: impl Into<MultiSpan> + Copy,\n     sig: &hir::FnSig<'_>,\n     headers: DocHeaders,\n     body_id: Option<hir::BodyId>,\n@@ -359,6 +342,8 @@ fn lint_for_missing_headers(\n         return;\n     }\n \n+    let span = cx.tcx.def_span(def_id);\n+\n     if !headers.safety && sig.header.unsafety == hir::Unsafety::Unsafe {\n         span_lint(\n             cx,"}, {"sha": "d74f2dbfe1baa1b463afec53091b8ac01b815511", "filename": "tests/ui/doc_errors.stderr", "status": "modified", "additions": 12, "deletions": 24, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/d35b7de1d5fb59ce00d678f66d6897cbafc3107c/tests%2Fui%2Fdoc_errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d35b7de1d5fb59ce00d678f66d6897cbafc3107c/tests%2Fui%2Fdoc_errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc_errors.stderr?ref=d35b7de1d5fb59ce00d678f66d6897cbafc3107c", "patch": "@@ -1,52 +1,40 @@\n error: docs for function returning `Result` missing `# Errors` section\n   --> $DIR/doc_errors.rs:7:1\n    |\n-LL | / pub fn pub_fn_missing_errors_header() -> Result<(), ()> {\n-LL | |     unimplemented!();\n-LL | | }\n-   | |_^\n+LL | pub fn pub_fn_missing_errors_header() -> Result<(), ()> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::missing-errors-doc` implied by `-D warnings`\n \n error: docs for function returning `Result` missing `# Errors` section\n   --> $DIR/doc_errors.rs:11:1\n    |\n-LL | / pub async fn async_pub_fn_missing_errors_header() -> Result<(), ()> {\n-LL | |     unimplemented!();\n-LL | | }\n-   | |_^\n+LL | pub async fn async_pub_fn_missing_errors_header() -> Result<(), ()> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: docs for function returning `Result` missing `# Errors` section\n   --> $DIR/doc_errors.rs:16:1\n    |\n-LL | / pub fn pub_fn_returning_io_result() -> io::Result<()> {\n-LL | |     unimplemented!();\n-LL | | }\n-   | |_^\n+LL | pub fn pub_fn_returning_io_result() -> io::Result<()> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: docs for function returning `Result` missing `# Errors` section\n   --> $DIR/doc_errors.rs:21:1\n    |\n-LL | / pub async fn async_pub_fn_returning_io_result() -> io::Result<()> {\n-LL | |     unimplemented!();\n-LL | | }\n-   | |_^\n+LL | pub async fn async_pub_fn_returning_io_result() -> io::Result<()> {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: docs for function returning `Result` missing `# Errors` section\n   --> $DIR/doc_errors.rs:51:5\n    |\n-LL | /     pub fn pub_method_missing_errors_header() -> Result<(), ()> {\n-LL | |         unimplemented!();\n-LL | |     }\n-   | |_____^\n+LL |     pub fn pub_method_missing_errors_header() -> Result<(), ()> {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: docs for function returning `Result` missing `# Errors` section\n   --> $DIR/doc_errors.rs:56:5\n    |\n-LL | /     pub async fn async_pub_method_missing_errors_header() -> Result<(), ()> {\n-LL | |         unimplemented!();\n-LL | |     }\n-   | |_____^\n+LL |     pub async fn async_pub_method_missing_errors_header() -> Result<(), ()> {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: docs for function returning `Result` missing `# Errors` section\n   --> $DIR/doc_errors.rs:85:5"}, {"sha": "a86e191370e3e95f5e62ad2ccccedbbd87f544c3", "filename": "tests/ui/doc_unsafe.stderr", "status": "modified", "additions": 12, "deletions": 22, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/d35b7de1d5fb59ce00d678f66d6897cbafc3107c/tests%2Fui%2Fdoc_unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d35b7de1d5fb59ce00d678f66d6897cbafc3107c/tests%2Fui%2Fdoc_unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc_unsafe.stderr?ref=d35b7de1d5fb59ce00d678f66d6897cbafc3107c", "patch": "@@ -1,20 +1,16 @@\n error: unsafe function's docs miss `# Safety` section\n   --> $DIR/doc_unsafe.rs:9:1\n    |\n-LL | / pub unsafe fn destroy_the_planet() {\n-LL | |     unimplemented!();\n-LL | | }\n-   | |_^\n+LL | pub unsafe fn destroy_the_planet() {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `-D clippy::missing-safety-doc` implied by `-D warnings`\n \n error: unsafe function's docs miss `# Safety` section\n   --> $DIR/doc_unsafe.rs:32:5\n    |\n-LL | /     pub unsafe fn republished() {\n-LL | |         unimplemented!();\n-LL | |     }\n-   | |_____^\n+LL |     pub unsafe fn republished() {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: unsafe function's docs miss `# Safety` section\n   --> $DIR/doc_unsafe.rs:40:5\n@@ -25,29 +21,23 @@ LL |     unsafe fn woefully_underdocumented(self);\n error: docs for unsafe trait missing `# Safety` section\n   --> $DIR/doc_unsafe.rs:46:1\n    |\n-LL | / pub unsafe trait UnsafeTrait {\n-LL | |     fn method();\n-LL | | }\n-   | |_^\n+LL | pub unsafe trait UnsafeTrait {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: unsafe function's docs miss `# Safety` section\n   --> $DIR/doc_unsafe.rs:76:5\n    |\n-LL | /     pub unsafe fn more_undocumented_unsafe() -> Self {\n-LL | |         unimplemented!();\n-LL | |     }\n-   | |_____^\n+LL |     pub unsafe fn more_undocumented_unsafe() -> Self {\n+   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: unsafe function's docs miss `# Safety` section\n   --> $DIR/doc_unsafe.rs:92:9\n    |\n-LL | /         pub unsafe fn whee() {\n-LL | |             unimplemented!()\n-LL | |         }\n-   | |_________^\n+LL |         pub unsafe fn whee() {\n+   |         ^^^^^^^^^^^^^^^^^^^^\n ...\n-LL |   very_unsafe!();\n-   |   -------------- in this macro invocation\n+LL | very_unsafe!();\n+   | -------------- in this macro invocation\n    |\n    = note: this error originates in the macro `very_unsafe` (in Nightly builds, run with -Z macro-backtrace for more info)\n "}, {"sha": "183c262ce0b519072d38d33506a729e5bb927387", "filename": "tests/ui/missing_panics_doc.stderr", "status": "modified", "additions": 14, "deletions": 35, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/d35b7de1d5fb59ce00d678f66d6897cbafc3107c/tests%2Fui%2Fmissing_panics_doc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d35b7de1d5fb59ce00d678f66d6897cbafc3107c/tests%2Fui%2Fmissing_panics_doc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fmissing_panics_doc.stderr?ref=d35b7de1d5fb59ce00d678f66d6897cbafc3107c", "patch": "@@ -1,11 +1,8 @@\n error: docs for function which may panic missing `# Panics` section\n   --> $DIR/missing_panics_doc.rs:6:1\n    |\n-LL | / pub fn unwrap() {\n-LL | |     let result = Err(\"Hi\");\n-LL | |     result.unwrap()\n-LL | | }\n-   | |_^\n+LL | pub fn unwrap() {\n+   | ^^^^^^^^^^^^^^^\n    |\n note: first possible panic found here\n   --> $DIR/missing_panics_doc.rs:8:5\n@@ -17,10 +14,8 @@ LL |     result.unwrap()\n error: docs for function which may panic missing `# Panics` section\n   --> $DIR/missing_panics_doc.rs:12:1\n    |\n-LL | / pub fn panic() {\n-LL | |     panic!(\"This function panics\")\n-LL | | }\n-   | |_^\n+LL | pub fn panic() {\n+   | ^^^^^^^^^^^^^^\n    |\n note: first possible panic found here\n   --> $DIR/missing_panics_doc.rs:13:5\n@@ -31,10 +26,8 @@ LL |     panic!(\"This function panics\")\n error: docs for function which may panic missing `# Panics` section\n   --> $DIR/missing_panics_doc.rs:17:1\n    |\n-LL | / pub fn todo() {\n-LL | |     todo!()\n-LL | | }\n-   | |_^\n+LL | pub fn todo() {\n+   | ^^^^^^^^^^^^^\n    |\n note: first possible panic found here\n   --> $DIR/missing_panics_doc.rs:18:5\n@@ -45,14 +38,8 @@ LL |     todo!()\n error: docs for function which may panic missing `# Panics` section\n   --> $DIR/missing_panics_doc.rs:22:1\n    |\n-LL | / pub fn inner_body(opt: Option<u32>) {\n-LL | |     opt.map(|x| {\n-LL | |         if x == 10 {\n-LL | |             panic!()\n-LL | |         }\n-LL | |     });\n-LL | | }\n-   | |_^\n+LL | pub fn inner_body(opt: Option<u32>) {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: first possible panic found here\n   --> $DIR/missing_panics_doc.rs:25:13\n@@ -63,10 +50,8 @@ LL |             panic!()\n error: docs for function which may panic missing `# Panics` section\n   --> $DIR/missing_panics_doc.rs:31:1\n    |\n-LL | / pub fn unreachable_and_panic() {\n-LL | |     if true { unreachable!() } else { panic!() }\n-LL | | }\n-   | |_^\n+LL | pub fn unreachable_and_panic() {\n+   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: first possible panic found here\n   --> $DIR/missing_panics_doc.rs:32:39\n@@ -77,11 +62,8 @@ LL |     if true { unreachable!() } else { panic!() }\n error: docs for function which may panic missing `# Panics` section\n   --> $DIR/missing_panics_doc.rs:36:1\n    |\n-LL | / pub fn assert_eq() {\n-LL | |     let x = 0;\n-LL | |     assert_eq!(x, 0);\n-LL | | }\n-   | |_^\n+LL | pub fn assert_eq() {\n+   | ^^^^^^^^^^^^^^^^^^\n    |\n note: first possible panic found here\n   --> $DIR/missing_panics_doc.rs:38:5\n@@ -92,11 +74,8 @@ LL |     assert_eq!(x, 0);\n error: docs for function which may panic missing `# Panics` section\n   --> $DIR/missing_panics_doc.rs:42:1\n    |\n-LL | / pub fn assert_ne() {\n-LL | |     let x = 0;\n-LL | |     assert_ne!(x, 0);\n-LL | | }\n-   | |_^\n+LL | pub fn assert_ne() {\n+   | ^^^^^^^^^^^^^^^^^^\n    |\n note: first possible panic found here\n   --> $DIR/missing_panics_doc.rs:44:5"}]}