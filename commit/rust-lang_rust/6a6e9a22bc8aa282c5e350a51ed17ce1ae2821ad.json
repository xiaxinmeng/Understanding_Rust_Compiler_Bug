{"sha": "6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhNmU5YTIyYmM4YWEyODJjNWUzNTBhNTFlZDE3Y2UxYWUyODIxYWQ=", "commit": {"author": {"name": "Nick Cameron", "email": "nrc@ncameron.org", "date": "2017-11-14T03:57:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2017-11-14T03:57:09Z"}, "message": "Merge pull request #2148 from topecongiro/audit-option/brace_style\n\nCombine fn_brace_style and item_brace_style", "tree": {"sha": "0c75946de6c1b84039fc6d673bff256741c5fa92", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c75946de6c1b84039fc6d673bff256741c5fa92"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaCmmVCRBK7hj4Ov3rIwAAdHIIAHrejx4h62wdN3hPcDUmq3Y0\n66dytmkjo4w/FLmpufl+Z6AaKHmbcJGNkUSll3QyqHhY69hltxsF1e1EM0lvyc2E\na0jb5iXJIHORLg/Rgzuq8DQ4gq1AaoBOmaraximNMtfZMTnzYPk7/0nm4wmZsvUs\nG5+/Wb4XkVLxw9P0Rdj8oDrJENcPVHB0Gz56tyiq733IY9HkVwLVbe2BgiWh9Svv\nA6sk3a8qXZ+YJCQwtIOBFPXijopEa/nkJZl2fJrdFL3QFABt4TqK2rZxXHu9omlK\nbJE+I3UmewBzI15Y1Zzhu/C7FDuyn5U/QqzPOLAWPJFv9m4J+AW1x6A90EWbvyo=\n=gfl6\n-----END PGP SIGNATURE-----\n", "payload": "tree 0c75946de6c1b84039fc6d673bff256741c5fa92\nparent be76476421bfa2d38cd9de3d3d7b188ac4adee0a\nparent 707a2963772e655fbf2231aa27c5a83c330f90c0\nauthor Nick Cameron <nrc@ncameron.org> 1510631829 +1300\ncommitter GitHub <noreply@github.com> 1510631829 +1300\n\nMerge pull request #2148 from topecongiro/audit-option/brace_style\n\nCombine fn_brace_style and item_brace_style "}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "html_url": "https://github.com/rust-lang/rust/commit/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/comments", "author": {"login": "nrc", "id": 762626, "node_id": "MDQ6VXNlcjc2MjYyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/762626?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nrc", "html_url": "https://github.com/nrc", "followers_url": "https://api.github.com/users/nrc/followers", "following_url": "https://api.github.com/users/nrc/following{/other_user}", "gists_url": "https://api.github.com/users/nrc/gists{/gist_id}", "starred_url": "https://api.github.com/users/nrc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nrc/subscriptions", "organizations_url": "https://api.github.com/users/nrc/orgs", "repos_url": "https://api.github.com/users/nrc/repos", "events_url": "https://api.github.com/users/nrc/events{/privacy}", "received_events_url": "https://api.github.com/users/nrc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be76476421bfa2d38cd9de3d3d7b188ac4adee0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/be76476421bfa2d38cd9de3d3d7b188ac4adee0a", "html_url": "https://github.com/rust-lang/rust/commit/be76476421bfa2d38cd9de3d3d7b188ac4adee0a"}, {"sha": "707a2963772e655fbf2231aa27c5a83c330f90c0", "url": "https://api.github.com/repos/rust-lang/rust/commits/707a2963772e655fbf2231aa27c5a83c330f90c0", "html_url": "https://github.com/rust-lang/rust/commit/707a2963772e655fbf2231aa27c5a83c330f90c0"}], "stats": {"total": 200, "additions": 99, "deletions": 101}, "files": [{"sha": "31e5855bfaa8dcd4e15b9710acac9429198100b8", "filename": "Configurations.md", "status": "modified", "additions": 49, "deletions": 52, "changes": 101, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/Configurations.md", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/Configurations.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Configurations.md?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -840,13 +840,15 @@ fn lorem\n }\n ```\n \n-## `fn_brace_style`\n+## `brace_style`\n \n-Brace style for functions\n+Brace style for items\n \n - **Default value**: `\"SameLineWhere\"`\n - **Possible values**: `\"AlwaysNextLine\"`, `\"PreferSameLine\"`, `\"SameLineWhere\"`\n \n+### Functions\n+\n #### `\"SameLineWhere\"` (default):\n \n ```rust\n@@ -905,6 +907,50 @@ where\n }\n ```\n \n+### Structs and enums\n+\n+#### `\"SameLineWhere\"` (default):\n+\n+```rust\n+struct Lorem {\n+    ipsum: bool,\n+}\n+\n+struct Dolor<T>\n+    where T: Eq\n+{\n+    sit: T,\n+}\n+```\n+\n+#### `\"AlwaysNextLine\"`:\n+\n+```rust\n+struct Lorem\n+{\n+    ipsum: bool,\n+}\n+\n+struct Dolor<T>\n+    where T: Eq\n+{\n+    sit: T,\n+}\n+```\n+\n+#### `\"PreferSameLine\"`:\n+\n+```rust\n+struct Lorem {\n+    ipsum: bool,\n+}\n+\n+struct Dolor<T>\n+    where T: Eq {\n+    sit: T,\n+}\n+```\n+\n ## `fn_call_width`\n \n Maximum width of the args of a function call before falling back to vertical formatting\n@@ -1125,7 +1171,7 @@ impl Lorem {\n }\n ```\n \n-See also [`item_brace_style`](#item_brace_style).\n+See also [`brace_style`](#brace_style).\n \n ## `indent_match_arms`\n \n@@ -1239,55 +1285,6 @@ use foo::{aaa,\n           fff};\n ```\n \n-## `item_brace_style`\n-\n-Brace style for structs and enums\n-\n-- **Default value**: `\"SameLineWhere\"`\n-- **Possible values**: `\"AlwaysNextLine\"`, `\"PreferSameLine\"`, `\"SameLineWhere\"`\n-\n-#### `\"SameLineWhere\"` (default):\n-\n-```rust\n-struct Lorem {\n-    ipsum: bool,\n-}\n-\n-struct Dolor<T>\n-    where T: Eq\n-{\n-    sit: T,\n-}\n-```\n-\n-#### `\"AlwaysNextLine\"`:\n-\n-```rust\n-struct Lorem\n-{\n-    ipsum: bool,\n-}\n-\n-struct Dolor<T>\n-    where T: Eq\n-{\n-    sit: T,\n-}\n-```\n-\n-#### `\"PreferSameLine\"`:\n-\n-```rust\n-struct Lorem {\n-    ipsum: bool,\n-}\n-\n-struct Dolor<T>\n-    where T: Eq {\n-    sit: T,\n-}\n-```\n-\n ## `match_arm_forces_newline`\n \n Consistently put match arms (block based or not) in a newline."}, {"sha": "555a6a207fa300552c6fdc666ab971a0f363c173", "filename": "src/config.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/src%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/src%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fconfig.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -547,9 +547,7 @@ create_config! {\n         \"Maximum width in the body of a struct variant before falling back to vertical formatting\";\n     force_explicit_abi: bool, true, false, \"Always print the abi for extern items\";\n     newline_style: NewlineStyle, NewlineStyle::Unix, false, \"Unix or Windows line endings\";\n-    fn_brace_style: BraceStyle, BraceStyle::SameLineWhere, false, \"Brace style for functions\";\n-    item_brace_style: BraceStyle, BraceStyle::SameLineWhere, false,\n-        \"Brace style for structs and enums\";\n+    brace_style: BraceStyle, BraceStyle::SameLineWhere, false, \"Brace style for items\";\n     control_brace_style: ControlBraceStyle, ControlBraceStyle::AlwaysSameLine, false,\n         \"Brace style for control flow constructs\";\n     impl_empty_single_line: bool, true, false, \"Put empty-body implementations on a single line\";"}, {"sha": "cd3cb48c4dbd0af3b74c72b1cca51ab88f4710ec", "filename": "src/items.rs", "status": "modified", "additions": 15, "deletions": 16, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/src%2Fitems.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/src%2Fitems.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fitems.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -314,7 +314,7 @@ impl<'a> FmtVisitor<'a> {\n             rewrite_fn_base(&context, indent, ident, fn_sig, span, newline_brace, true)?;\n \n         // 2 = ` {`\n-        if self.config.fn_brace_style() == BraceStyle::AlwaysNextLine || force_newline_brace\n+        if self.config.brace_style() == BraceStyle::AlwaysNextLine || force_newline_brace\n             || last_line_width(&result) + 2 > self.shape().width\n         {\n             newline_brace = true;\n@@ -440,7 +440,7 @@ impl<'a> FmtVisitor<'a> {\n         let generics_str = format_generics(\n             &self.get_context(),\n             generics,\n-            self.config.item_brace_style(),\n+            self.config.brace_style(),\n             if enum_def.variants.is_empty() {\n                 BracePos::ForceSameLine\n             } else {\n@@ -595,7 +595,7 @@ pub fn format_impl(\n         let where_clause_str = rewrite_where_clause(\n             context,\n             &generics.where_clause,\n-            context.config.item_brace_style(),\n+            context.config.brace_style(),\n             Shape::legacy(where_budget, offset.block_only()),\n             context.config.where_density(),\n             \"{\",\n@@ -641,7 +641,7 @@ pub fn format_impl(\n         }\n         result.push_str(&where_clause_str);\n \n-        match context.config.item_brace_style() {\n+        match context.config.brace_style() {\n             _ if last_line_contains_single_line_comment(&result) => result.push_str(&sep),\n             BraceStyle::AlwaysNextLine => result.push_str(&sep),\n             BraceStyle::PreferSameLine => result.push(' '),\n@@ -784,7 +784,7 @@ fn format_impl_ref_and_type(\n         let curly_brace_overhead = if generics.where_clause.predicates.is_empty() {\n             // If there is no where clause adapt budget for type formatting to take space and curly\n             // brace into account.\n-            match context.config.item_brace_style() {\n+            match context.config.brace_style() {\n                 BraceStyle::AlwaysNextLine => 0,\n                 _ => 2,\n             }\n@@ -994,7 +994,7 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n         let where_clause_str = rewrite_where_clause(\n             context,\n             &generics.where_clause,\n-            context.config.item_brace_style(),\n+            context.config.brace_style(),\n             Shape::legacy(where_budget, offset.block_only()),\n             where_density,\n             \"{\",\n@@ -1038,7 +1038,7 @@ pub fn format_trait(context: &RewriteContext, item: &ast::Item, offset: Indent)\n             }\n         }\n \n-        match context.config.item_brace_style() {\n+        match context.config.brace_style() {\n             _ if last_line_contains_single_line_comment(&result) => {\n                 result.push('\\n');\n                 result.push_str(&offset.to_string(context.config));\n@@ -1103,7 +1103,7 @@ fn format_unit_struct(context: &RewriteContext, p: &StructParts, offset: Indent)\n         format_generics(\n             context,\n             generics,\n-            context.config.item_brace_style(),\n+            context.config.brace_style(),\n             BracePos::None,\n             offset,\n             mk_sp(generics.span.lo(), hi),\n@@ -1135,7 +1135,7 @@ pub fn format_struct_struct(\n         Some(g) => format_generics(\n             context,\n             g,\n-            context.config.item_brace_style(),\n+            context.config.brace_style(),\n             if fields.is_empty() {\n                 BracePos::ForceSameLine\n             } else {\n@@ -1148,8 +1148,7 @@ pub fn format_struct_struct(\n         None => {\n             // 3 = ` {}`, 2 = ` {`.\n             let overhead = if fields.is_empty() { 3 } else { 2 };\n-            if (context.config.item_brace_style() == BraceStyle::AlwaysNextLine\n-                && !fields.is_empty())\n+            if (context.config.brace_style() == BraceStyle::AlwaysNextLine && !fields.is_empty())\n                 || context.config.max_width() < overhead + result.len()\n             {\n                 format!(\"\\n{}{{\", offset.block_only().to_string(context.config))\n@@ -1279,7 +1278,7 @@ fn format_tuple_struct(\n             rewrite_where_clause(\n                 context,\n                 &generics.where_clause,\n-                context.config.item_brace_style(),\n+                context.config.brace_style(),\n                 Shape::legacy(where_budget, offset.block_only()),\n                 Density::Compressed,\n                 \";\",\n@@ -1365,7 +1364,7 @@ pub fn rewrite_type_alias(\n     let where_clause_str = rewrite_where_clause(\n         context,\n         &generics.where_clause,\n-        context.config.item_brace_style(),\n+        context.config.brace_style(),\n         Shape::legacy(where_budget, indent),\n         context.config.where_density(),\n         \"=\",\n@@ -2071,7 +2070,7 @@ fn rewrite_fn_base(\n         if let Some(where_clause_str) = rewrite_where_clause(\n             context,\n             where_clause,\n-            context.config.fn_brace_style(),\n+            context.config.brace_style(),\n             Shape::legacy(budget, indent),\n             Density::Compressed,\n             \"{\",\n@@ -2090,7 +2089,7 @@ fn rewrite_fn_base(\n     let where_clause_str = rewrite_where_clause(\n         context,\n         where_clause,\n-        context.config.fn_brace_style(),\n+        context.config.brace_style(),\n         Shape::indented(indent, context.config),\n         Density::Tall,\n         \"{\",\n@@ -2386,7 +2385,7 @@ fn newline_for_brace(config: &Config, where_clause: &ast::WhereClause, has_body:\n     if config.where_single_line() && predicate_count == 1 {\n         return false;\n     }\n-    match (config.fn_brace_style(), config.where_density()) {\n+    match (config.brace_style(), config.where_density()) {\n         (BraceStyle::AlwaysNextLine, _) => true,\n         (_, Density::Compressed) if predicate_count == 1 => false,\n         (_, Density::CompressedIfEmpty) if predicate_count == 1 && !has_body => false,"}, {"sha": "159f73452bd83a51b56bddb738f4bda4501a583c", "filename": "src/visitor.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/src%2Fvisitor.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/src%2Fvisitor.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fvisitor.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -666,7 +666,7 @@ impl<'a> FmtVisitor<'a> {\n         self.buffer.push_str(&ident.to_string());\n \n         if is_internal {\n-            match self.config.item_brace_style() {\n+            match self.config.brace_style() {\n                 BraceStyle::AlwaysNextLine => self.buffer\n                     .push_str(&format!(\"\\n{}{{\", self.block_indent.to_string(self.config))),\n                 _ => self.buffer.push_str(\" {\"),"}, {"sha": "298094a7bc946eb0be165ad0017ebae9ff9aff97", "filename": "tests/config/small_tabs.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fconfig%2Fsmall_tabs.toml", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fconfig%2Fsmall_tabs.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fconfig%2Fsmall_tabs.toml?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -2,7 +2,7 @@ max_width = 100\n comment_width = 80\n tab_spaces = 2\n newline_style = \"Unix\"\n-fn_brace_style = \"SameLineWhere\"\n+brace_style = \"SameLineWhere\"\n fn_return_indent = \"WithArgs\"\n fn_args_paren_newline = true\n fn_args_density = \"Tall\""}, {"sha": "d3bd9ac09aa6d6a0e105e5cb1a3d02fd1a23f8b8", "filename": "tests/source/configs-fn_brace_style-always_next_line.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fconfigs-fn_brace_style-always_next_line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fconfigs-fn_brace_style-always_next_line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_brace_style-always_next_line.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_brace_style: AlwaysNextLine\n+// rustfmt-brace_style: AlwaysNextLine\n // Function brace style\n \n fn lorem() {"}, {"sha": "78a4495243d882925383b56056050086de3b4ada", "filename": "tests/source/configs-fn_brace_style-prefer_same_line.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fconfigs-fn_brace_style-prefer_same_line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fconfigs-fn_brace_style-prefer_same_line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_brace_style-prefer_same_line.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_brace_style: PreferSameLine\n+// rustfmt-brace_style: PreferSameLine\n // Function brace style\n \n fn lorem() {"}, {"sha": "3b78932e1776ab10ba75e274ee0337cfbc40e511", "filename": "tests/source/configs-fn_brace_style-same_line_where.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fconfigs-fn_brace_style-same_line_where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fconfigs-fn_brace_style-same_line_where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-fn_brace_style-same_line_where.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_brace_style: SameLineWhere\n+// rustfmt-brace_style: SameLineWhere\n // Function brace style\n \n fn lorem() {"}, {"sha": "0cc19b34da7ef8dc726d95f7dcb50e204ca3a052", "filename": "tests/source/configs-item_brace_style-always_next_line.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fconfigs-item_brace_style-always_next_line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fconfigs-item_brace_style-always_next_line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-item_brace_style-always_next_line.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-item_brace_style: AlwaysNextLine\n+// rustfmt-brace_style: AlwaysNextLine\n // Item brace style\n \n enum Foo {}"}, {"sha": "4412bc869a268bb230eafec8a83637f5d28bf32b", "filename": "tests/source/configs-item_brace_style-prefer_same_line.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fconfigs-item_brace_style-prefer_same_line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fconfigs-item_brace_style-prefer_same_line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-item_brace_style-prefer_same_line.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-item_brace_style: PreferSameLine\n+// rustfmt-brace_style: PreferSameLine\n // Item brace style\n \n struct Lorem {"}, {"sha": "b8e69147dc5a8159600c1ae6c3304a9d8086483c", "filename": "tests/source/configs-item_brace_style-same_line_where.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fconfigs-item_brace_style-same_line_where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fconfigs-item_brace_style-same_line_where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fconfigs-item_brace_style-same_line_where.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-item_brace_style: SameLineWhere\n+// rustfmt-brace_style: SameLineWhere\n // Item brace style\n \n struct Lorem {"}, {"sha": "8e8bb6c274e05b997bffd13af3e086e898eee372", "filename": "tests/source/fn-custom-6.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Ffn-custom-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Ffn-custom-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-6.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-indent_style: Block\n-// rustfmt-fn_brace_style: PreferSameLine\n+// rustfmt-brace_style: PreferSameLine\n // Test different indents.\n \n fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) {"}, {"sha": "f7670e07fc8ce11eb5604e107da9021107d8ca0e", "filename": "tests/source/fn-custom-7.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Ffn-custom-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Ffn-custom-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-7.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,7 +1,7 @@\n // rustfmt-normalize_comments: true\n // rustfmt-indent_style: Block\n // rustfmt-fn_args_density: Vertical\n-// rustfmt-fn_brace_style: AlwaysNextLine\n+// rustfmt-brace_style: AlwaysNextLine\n \n // Case with only one variable.\n fn foo(a: u8) -> u8 {"}, {"sha": "d3deb20a51c18bf021fd38eb589118b9289a65e5", "filename": "tests/source/fn-custom-8.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Ffn-custom-8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Ffn-custom-8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Ffn-custom-8.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-indent_style: Block\n-// rustfmt-fn_brace_style: PreferSameLine\n+// rustfmt-brace_style: PreferSameLine\n // Test different indents.\n \n fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) {"}, {"sha": "38094d67a77374b289a06cae9e0fbdf5e49c29a8", "filename": "tests/source/item-brace-style-always-next-line.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fitem-brace-style-always-next-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fitem-brace-style-always-next-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fitem-brace-style-always-next-line.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-item_brace_style: AlwaysNextLine\n+// rustfmt-brace_style: AlwaysNextLine\n \n mod M {\n     enum A {"}, {"sha": "dff89b8b66b59ffb266a296684e94ed3c2a2ff86", "filename": "tests/source/item-brace-style-prefer-same-line.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fitem-brace-style-prefer-same-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fitem-brace-style-prefer-same-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fitem-brace-style-prefer-same-line.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-item_brace_style: PreferSameLine\n+// rustfmt-brace_style: PreferSameLine\n \n mod M {\n     enum A"}, {"sha": "ee4a7c5daad1f9a833140880d28884ff78ff3dd6", "filename": "tests/source/item-brace-style-same-line-where.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fitem-brace-style-same-line-where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Fsource%2Fitem-brace-style-same-line-where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fitem-brace-style-same-line-where.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-item_brace_style: SameLineWhere\n+// rustfmt-brace_style: SameLineWhere\n \n mod M {\n     enum A"}, {"sha": "2755a264689fbc59d6911f900a80c6c66fb7c55f", "filename": "tests/target/configs-fn_brace_style-always_next_line.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fconfigs-fn_brace_style-always_next_line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fconfigs-fn_brace_style-always_next_line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_brace_style-always_next_line.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_brace_style: AlwaysNextLine\n+// rustfmt-brace_style: AlwaysNextLine\n // Function brace style\n \n fn lorem()"}, {"sha": "23f98b6dd7a6289347ea8a449bfd4612c1cbdf57", "filename": "tests/target/configs-fn_brace_style-prefer_same_line.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fconfigs-fn_brace_style-prefer_same_line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fconfigs-fn_brace_style-prefer_same_line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_brace_style-prefer_same_line.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_brace_style: PreferSameLine\n+// rustfmt-brace_style: PreferSameLine\n // Function brace style\n \n fn lorem() {"}, {"sha": "2afe59943a30cc4777c97d838bb4b932c5fa971f", "filename": "tests/target/configs-fn_brace_style-same_line_where.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fconfigs-fn_brace_style-same_line_where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fconfigs-fn_brace_style-same_line_where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-fn_brace_style-same_line_where.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-fn_brace_style: SameLineWhere\n+// rustfmt-brace_style: SameLineWhere\n // Function brace style\n \n fn lorem() {"}, {"sha": "38ed449d178a2c00d54b9c7059eb546538644dcd", "filename": "tests/target/configs-item_brace_style-always_next_line.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fconfigs-item_brace_style-always_next_line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fconfigs-item_brace_style-always_next_line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-item_brace_style-always_next_line.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-item_brace_style: AlwaysNextLine\n+// rustfmt-brace_style: AlwaysNextLine\n // Item brace style\n \n enum Foo {}\n@@ -21,5 +21,7 @@ where\n mod tests\n {\n     #[test]\n-    fn it_works() {}\n+    fn it_works()\n+    {\n+    }\n }"}, {"sha": "5143d7517c75ee0048120cbb0b0e5b32fcdb034b", "filename": "tests/target/configs-item_brace_style-prefer_same_line.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fconfigs-item_brace_style-prefer_same_line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fconfigs-item_brace_style-prefer_same_line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-item_brace_style-prefer_same_line.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-item_brace_style: PreferSameLine\n+// rustfmt-brace_style: PreferSameLine\n // Item brace style\n \n struct Lorem {"}, {"sha": "8a3b2852654795dfc2d3e704545ab1f641cd25ae", "filename": "tests/target/configs-item_brace_style-same_line_where.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fconfigs-item_brace_style-same_line_where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fconfigs-item_brace_style-same_line_where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fconfigs-item_brace_style-same_line_where.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-item_brace_style: SameLineWhere\n+// rustfmt-brace_style: SameLineWhere\n // Item brace style\n \n struct Lorem {"}, {"sha": "720d4288c41a6860704dde0d518313597f0ea6f5", "filename": "tests/target/fn-custom-6.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Ffn-custom-6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Ffn-custom-6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-6.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-indent_style: Block\n-// rustfmt-fn_brace_style: PreferSameLine\n+// rustfmt-brace_style: PreferSameLine\n // Test different indents.\n \n fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) {"}, {"sha": "ec113c30d53f803841ebcabf5308c4cdadd959e3", "filename": "tests/target/fn-custom-7.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Ffn-custom-7.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Ffn-custom-7.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-7.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,7 +1,7 @@\n // rustfmt-normalize_comments: true\n // rustfmt-indent_style: Block\n // rustfmt-fn_args_density: Vertical\n-// rustfmt-fn_brace_style: AlwaysNextLine\n+// rustfmt-brace_style: AlwaysNextLine\n \n // Case with only one variable.\n fn foo(a: u8) -> u8\n@@ -29,7 +29,8 @@ fn foo(\n     bar()\n }\n \n-trait Test {\n+trait Test\n+{\n     fn foo(a: u8)\n     {\n     }"}, {"sha": "290557b979d5d7f7a72d5fa2e9bd208475960d5d", "filename": "tests/target/fn-custom-8.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Ffn-custom-8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Ffn-custom-8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Ffn-custom-8.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,5 +1,5 @@\n // rustfmt-indent_style: Block\n-// rustfmt-fn_brace_style: PreferSameLine\n+// rustfmt-brace_style: PreferSameLine\n // Test different indents.\n \n fn foo(a: Aaaaaaaaaaaaaa, b: Bbbbbbbbbbbbbb) {"}, {"sha": "eff579dddac710571bf6123333870c612c582952", "filename": "tests/target/indented-impl.rs", "status": "modified", "additions": 3, "deletions": 2, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Findented-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Findented-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Findented-impl.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,11 +1,12 @@\n-// rustfmt-item_brace_style: AlwaysNextLine\n+// rustfmt-brace_style: AlwaysNextLine\n mod x\n {\n     struct X(i8);\n \n     impl Y for X\n     {\n-        fn y(self) -> () {\n+        fn y(self) -> ()\n+        {\n             println!(\"ok\");\n         }\n     }"}, {"sha": "531ac59868314054c6ef5d36707f7f08f64613b7", "filename": "tests/target/item-brace-style-always-next-line.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fitem-brace-style-always-next-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fitem-brace-style-always-next-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fitem-brace-style-always-next-line.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-item_brace_style: AlwaysNextLine\n+// rustfmt-brace_style: AlwaysNextLine\n \n mod M\n {"}, {"sha": "ef8dc028c2d01a423ec7fa0d85807489b3f634ef", "filename": "tests/target/item-brace-style-prefer-same-line.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fitem-brace-style-prefer-same-line.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fitem-brace-style-prefer-same-line.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fitem-brace-style-prefer-same-line.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-item_brace_style: PreferSameLine\n+// rustfmt-brace_style: PreferSameLine\n \n mod M {\n     enum A {"}, {"sha": "9a275efc96e224db9eb360b494050923aec2bc18", "filename": "tests/target/item-brace-style-same-line-where.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fitem-brace-style-same-line-where.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad/tests%2Ftarget%2Fitem-brace-style-same-line-where.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fitem-brace-style-same-line-where.rs?ref=6a6e9a22bc8aa282c5e350a51ed17ce1ae2821ad", "patch": "@@ -1,4 +1,4 @@\n-// rustfmt-item_brace_style: SameLineWhere\n+// rustfmt-brace_style: SameLineWhere\n \n mod M {\n     enum A {"}]}