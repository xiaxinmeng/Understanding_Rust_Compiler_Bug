{"sha": "e3747722fbb8a44f9053922e4c39338a3a1f9597", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzNzQ3NzIyZmJiOGE0NGY5MDUzOTIyZTRjMzkzMzhhM2ExZjk1OTc=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-24T21:10:46Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-08-24T21:10:46Z"}, "message": "parser: extract recover_inner_leading_vert.", "tree": {"sha": "a8bcf2d7989a7b8cbf4ed6cb73e95739c41d9ff6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a8bcf2d7989a7b8cbf4ed6cb73e95739c41d9ff6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3747722fbb8a44f9053922e4c39338a3a1f9597", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3747722fbb8a44f9053922e4c39338a3a1f9597", "html_url": "https://github.com/rust-lang/rust/commit/e3747722fbb8a44f9053922e4c39338a3a1f9597", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3747722fbb8a44f9053922e4c39338a3a1f9597/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a405421e7c1437416e225ea8d2f0fdfb501df7b", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a405421e7c1437416e225ea8d2f0fdfb501df7b", "html_url": "https://github.com/rust-lang/rust/commit/3a405421e7c1437416e225ea8d2f0fdfb501df7b"}], "stats": {"total": 11, "additions": 7, "deletions": 4}, "files": [{"sha": "dc6632cf10da91e8a8ae7c72270d84211761190f", "filename": "src/libsyntax/parse/parser/pat.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/e3747722fbb8a44f9053922e4c39338a3a1f9597/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3747722fbb8a44f9053922e4c39338a3a1f9597/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser%2Fpat.rs?ref=e3747722fbb8a44f9053922e4c39338a3a1f9597", "patch": "@@ -178,8 +178,13 @@ impl<'a> Parser<'a> {\n     /// Recursive possibly-or-pattern parser with recovery for an erroneous leading `|`.\n     /// See `parse_pat_with_or` for details on parsing or-patterns.\n     fn parse_pat_with_or_inner(&mut self, expected: Expected) -> PResult<'a, P<Pat>> {\n-        // Recover if `|` or `||` is here.\n-        // The user is thinking that a leading `|` is allowed in this position.\n+        self.recover_inner_leading_vert();\n+        self.parse_pat_with_or(expected, GateOr::Yes, TopLevel::No)\n+    }\n+\n+    /// Recover if `|` or `||` is here.\n+    /// The user is thinking that a leading `|` is allowed in this position.\n+    fn recover_inner_leading_vert(&mut self) {\n         if let token::BinOp(token::Or) | token::OrOr = self.token.kind {\n             let span = self.token.span;\n             let rm_msg = format!(\"remove the `{}`\", pprust::token_to_string(&self.token));\n@@ -190,8 +195,6 @@ impl<'a> Parser<'a> {\n \n             self.bump();\n         }\n-\n-        self.parse_pat_with_or(expected, GateOr::Yes, TopLevel::No)\n     }\n \n     /// Parses a pattern, with a setting whether modern range patterns (e.g., `a..=b`, `a..b` are"}]}