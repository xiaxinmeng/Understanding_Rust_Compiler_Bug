{"sha": "bfb6e3fd836650dd477c55e6642d831028f30b22", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJmYjZlM2ZkODM2NjUwZGQ0NzdjNTVlNjY0MmQ4MzEwMjhmMzBiMjI=", "commit": {"author": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-03-22T13:45:32Z"}, "committer": {"name": "veetaha", "email": "veetaha2@gmail.com", "date": "2020-03-22T13:45:32Z"}, "message": "ra_hir: migrate some stuff to matches!()", "tree": {"sha": "e44e5ee3c2ba058e3d155fe4bcba8d4f46c1d510", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e44e5ee3c2ba058e3d155fe4bcba8d4f46c1d510"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bfb6e3fd836650dd477c55e6642d831028f30b22", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bfb6e3fd836650dd477c55e6642d831028f30b22", "html_url": "https://github.com/rust-lang/rust/commit/bfb6e3fd836650dd477c55e6642d831028f30b22", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bfb6e3fd836650dd477c55e6642d831028f30b22/comments", "author": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veetaha", "id": 36276403, "node_id": "MDQ6VXNlcjM2Mjc2NDAz", "avatar_url": "https://avatars.githubusercontent.com/u/36276403?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veetaha", "html_url": "https://github.com/Veetaha", "followers_url": "https://api.github.com/users/Veetaha/followers", "following_url": "https://api.github.com/users/Veetaha/following{/other_user}", "gists_url": "https://api.github.com/users/Veetaha/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veetaha/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veetaha/subscriptions", "organizations_url": "https://api.github.com/users/Veetaha/orgs", "repos_url": "https://api.github.com/users/Veetaha/repos", "events_url": "https://api.github.com/users/Veetaha/events{/privacy}", "received_events_url": "https://api.github.com/users/Veetaha/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a8e5da8a70c0487d3325573596219f14a6baa7aa", "url": "https://api.github.com/repos/rust-lang/rust/commits/a8e5da8a70c0487d3325573596219f14a6baa7aa", "html_url": "https://github.com/rust-lang/rust/commit/a8e5da8a70c0487d3325573596219f14a6baa7aa"}], "stats": {"total": 24, "additions": 6, "deletions": 18}, "files": [{"sha": "4b150ef061f8cb2bbb29a23d13c7a53d3e9270de", "filename": "crates/ra_hir/src/code_model.rs", "status": "modified", "additions": 6, "deletions": 18, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bfb6e3fd836650dd477c55e6642d831028f30b22/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bfb6e3fd836650dd477c55e6642d831028f30b22/crates%2Fra_hir%2Fsrc%2Fcode_model.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fcode_model.rs?ref=bfb6e3fd836650dd477c55e6642d831028f30b22", "patch": "@@ -1042,30 +1042,18 @@ impl Type {\n     }\n \n     pub fn is_bool(&self) -> bool {\n-        match &self.ty.value {\n-            Ty::Apply(a_ty) => match a_ty.ctor {\n-                TypeCtor::Bool => true,\n-                _ => false,\n-            },\n-            _ => false,\n-        }\n+        matches!(self.ty.value, Ty::Apply(ApplicationTy { ctor: TypeCtor::Bool, .. }))\n     }\n \n     pub fn is_mutable_reference(&self) -> bool {\n-        match &self.ty.value {\n-            Ty::Apply(a_ty) => match a_ty.ctor {\n-                TypeCtor::Ref(Mutability::Mut) => true,\n-                _ => false,\n-            },\n-            _ => false,\n-        }\n+        matches!(\n+            self.ty.value,\n+            Ty::Apply(ApplicationTy { ctor: TypeCtor::Ref(Mutability::Mut), .. })\n+        )\n     }\n \n     pub fn is_unknown(&self) -> bool {\n-        match &self.ty.value {\n-            Ty::Unknown => true,\n-            _ => false,\n-        }\n+        matches!(self.ty.value, Ty::Unknown)\n     }\n \n     /// Checks that particular type `ty` implements `std::future::Future`."}]}