{"sha": "e1704f76efdb265dc852f6fbac0452cb2a862e02", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUxNzA0Zjc2ZWZkYjI2NWRjODUyZjZmYmFjMDQ1MmNiMmE4NjJlMDI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-09T07:34:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2016-03-09T07:34:34Z"}, "message": "Auto merge of #32023 - matklad:diamonds-and-rust, r=nikomatsakis\n\ntests: add test for empty <>\n\nRust allows to specify an empty list of type and lifetime parameters, but there are no tests for it:\n\n```\nuser@UNIT-326 [12:53:45] [~/projects/rust] [diamonds-and-rust]\n-> % grep \"<>\" -R src/test\nsrc/test/compile-fail/generic-type-params-name-repr.rs:    // And don't print <> at all when there's just defaults.\nsrc/test/debuginfo/issue22656.rs:// when trying to handle a Vec<> or anything else that contains zero-sized\n```\n\nSo let's add them! Besides it's such a wonderful opportunity to put a reference to Judas Priest band into the branch name ;)", "tree": {"sha": "6e0ecc835dd8c1d887e59dcc965f9f4f44e80c1b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6e0ecc835dd8c1d887e59dcc965f9f4f44e80c1b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e1704f76efdb265dc852f6fbac0452cb2a862e02", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e1704f76efdb265dc852f6fbac0452cb2a862e02", "html_url": "https://github.com/rust-lang/rust/commit/e1704f76efdb265dc852f6fbac0452cb2a862e02", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e1704f76efdb265dc852f6fbac0452cb2a862e02/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d289e1a145436fb691f5dfe9d8caa738fb319800", "url": "https://api.github.com/repos/rust-lang/rust/commits/d289e1a145436fb691f5dfe9d8caa738fb319800", "html_url": "https://github.com/rust-lang/rust/commit/d289e1a145436fb691f5dfe9d8caa738fb319800"}, {"sha": "4844f01babbd8846ef0ba1d92580cd65178e3d2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/4844f01babbd8846ef0ba1d92580cd65178e3d2e", "html_url": "https://github.com/rust-lang/rust/commit/4844f01babbd8846ef0ba1d92580cd65178e3d2e"}], "stats": {"total": 33, "additions": 33, "deletions": 0}, "files": [{"sha": "7af2844d5646e4a647e2a709bdf64a9f4b9ed94f", "filename": "src/test/run-pass/empty-type-parameter-list.rs", "status": "added", "additions": 33, "deletions": 0, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/e1704f76efdb265dc852f6fbac0452cb2a862e02/src%2Ftest%2Frun-pass%2Fempty-type-parameter-list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e1704f76efdb265dc852f6fbac0452cb2a862e02/src%2Ftest%2Frun-pass%2Fempty-type-parameter-list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fempty-type-parameter-list.rs?ref=e1704f76efdb265dc852f6fbac0452cb2a862e02", "patch": "@@ -0,0 +1,33 @@\n+// Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that empty type parameter list (<>) is synonymous with\n+// no type parameters at all\n+\n+struct S<>;\n+trait T<> {}\n+enum E<> { V }\n+impl<> T<> for S<> {}\n+impl T for E {}\n+fn foo<>() {}\n+fn bar() {}\n+\n+fn main() {\n+    let _ = S;\n+    let _ = S::<>;\n+    let _ = E::V;\n+    let _ = E::<>::V;\n+    foo();\n+    foo::<>();\n+\n+    // Test that we can supply <> to non generic things\n+    bar::<>();\n+    let _: i32<>;\n+}"}]}