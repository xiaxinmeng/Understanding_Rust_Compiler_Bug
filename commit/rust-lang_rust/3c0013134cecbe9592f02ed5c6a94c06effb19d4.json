{"sha": "3c0013134cecbe9592f02ed5c6a94c06effb19d4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjMDAxMzEzNGNlY2JlOTU5MmYwMmVkNWM2YTk0YzA2ZWZmYjE5ZDQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-19T05:15:59Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2013-09-19T05:15:59Z"}, "message": "auto merge of #9280 : alexcrichton/rust/less-c++, r=brson\n\nSome of the functions could be converted to rust, but the functions dealing with\r\nsignals were moved to rust_builtin.cpp instead (no reason to keep the original\r\nfile around for one function).\r\n\r\nCloses #2674\r\n\r\nBecause less C++ is better C++!", "tree": {"sha": "4c4db2e7638a0b3549108ff2aa9692ba5f6c826f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4c4db2e7638a0b3549108ff2aa9692ba5f6c826f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3c0013134cecbe9592f02ed5c6a94c06effb19d4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3c0013134cecbe9592f02ed5c6a94c06effb19d4", "html_url": "https://github.com/rust-lang/rust/commit/3c0013134cecbe9592f02ed5c6a94c06effb19d4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3c0013134cecbe9592f02ed5c6a94c06effb19d4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4dacd736510b2ae28a54489fe88571f1a6de019f", "url": "https://api.github.com/repos/rust-lang/rust/commits/4dacd736510b2ae28a54489fe88571f1a6de019f", "html_url": "https://github.com/rust-lang/rust/commit/4dacd736510b2ae28a54489fe88571f1a6de019f"}, {"sha": "c3ad785d83b583ad693424d9f0f993e36f0990f5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c3ad785d83b583ad693424d9f0f993e36f0990f5", "html_url": "https://github.com/rust-lang/rust/commit/c3ad785d83b583ad693424d9f0f993e36f0990f5"}], "stats": {"total": 117, "additions": 40, "deletions": 77}, "files": [{"sha": "d1a4b2bc87a2c9f9f5af109d8008c47237b38056", "filename": "mk/rt.mk", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c0013134cecbe9592f02ed5c6a94c06effb19d4/mk%2Frt.mk", "raw_url": "https://github.com/rust-lang/rust/raw/3c0013134cecbe9592f02ed5c6a94c06effb19d4/mk%2Frt.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Frt.mk?ref=3c0013134cecbe9592f02ed5c6a94c06effb19d4", "patch": "@@ -71,7 +71,6 @@ RUNTIME_CXXS_$(1)_$(2) := \\\n               rt/sync/lock_and_signal.cpp \\\n               rt/sync/rust_thread.cpp \\\n               rt/rust_builtin.cpp \\\n-              rt/rust_run_program.cpp \\\n               rt/rust_rng.cpp \\\n               rt/rust_upcall.cpp \\\n               rt/rust_uv.cpp \\"}, {"sha": "362eab17fe70acffa8886547584a1f24451bfac9", "filename": "src/libstd/run.rs", "status": "modified", "additions": 17, "deletions": 4, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/3c0013134cecbe9592f02ed5c6a94c06effb19d4/src%2Flibstd%2Frun.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3c0013134cecbe9592f02ed5c6a94c06effb19d4/src%2Flibstd%2Frun.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frun.rs?ref=3c0013134cecbe9592f02ed5c6a94c06effb19d4", "patch": "@@ -643,15 +643,28 @@ fn spawn_process_os(prog: &str, args: &[~str],\n     use libc::funcs::bsd44::getdtablesize;\n \n     mod rustrt {\n-        use libc::c_void;\n-\n         #[abi = \"cdecl\"]\n         extern {\n             pub fn rust_unset_sigprocmask();\n-            pub fn rust_set_environ(envp: *c_void);\n         }\n     }\n \n+    #[cfg(windows)]\n+    unsafe fn set_environ(_envp: *c_void) {}\n+    #[cfg(target_os = \"macos\")]\n+    unsafe fn set_environ(envp: *c_void) {\n+        externfn!(fn _NSGetEnviron() -> *mut *c_void);\n+\n+        *_NSGetEnviron() = envp;\n+    }\n+    #[cfg(not(target_os = \"macos\"), not(windows))]\n+    unsafe fn set_environ(envp: *c_void) {\n+        extern {\n+            static mut environ: *c_void;\n+        }\n+        environ = envp;\n+    }\n+\n     unsafe {\n \n         let pid = fork();\n@@ -685,7 +698,7 @@ fn spawn_process_os(prog: &str, args: &[~str],\n \n         do with_envp(env) |envp| {\n             if !envp.is_null() {\n-                rustrt::rust_set_environ(envp);\n+                set_environ(envp);\n             }\n             do with_argv(prog, args) |argv| {\n                 execvp(*argv, argv);"}, {"sha": "8877b082588284a063508a283efd81db6bb66d8b", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/3c0013134cecbe9592f02ed5c6a94c06effb19d4/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/3c0013134cecbe9592f02ed5c6a94c06effb19d4/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=3c0013134cecbe9592f02ed5c6a94c06effb19d4", "patch": "@@ -643,6 +643,29 @@ rust_valgrind_stack_deregister(unsigned int id) {\n   VALGRIND_STACK_DEREGISTER(id);\n }\n \n+#if defined(__WIN32__)\n+\n+extern \"C\" CDECL void\n+rust_unset_sigprocmask() {\n+    // empty stub for windows to keep linker happy\n+}\n+\n+#else\n+\n+#include <signal.h>\n+#include <unistd.h>\n+\n+extern \"C\" CDECL void\n+rust_unset_sigprocmask() {\n+    // this can't be safely converted to rust code because the\n+    // representation of sigset_t is platform-dependent\n+    sigset_t sset;\n+    sigemptyset(&sset);\n+    sigprocmask(SIG_SETMASK, &sset, NULL);\n+}\n+\n+#endif\n+\n //\n // Local Variables:\n // mode: C++"}, {"sha": "25cbaf822f04f80e98433fec9031eb06213fd31e", "filename": "src/rt/rust_run_program.cpp", "status": "removed", "additions": 0, "deletions": 71, "changes": 71, "blob_url": "https://github.com/rust-lang/rust/blob/4dacd736510b2ae28a54489fe88571f1a6de019f/src%2Frt%2Frust_run_program.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/4dacd736510b2ae28a54489fe88571f1a6de019f/src%2Frt%2Frust_run_program.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_run_program.cpp?ref=4dacd736510b2ae28a54489fe88571f1a6de019f", "patch": "@@ -1,71 +0,0 @@\n-// Copyright 2012 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-\n-#include \"rust_globals.h\"\n-\n-#ifdef __APPLE__\n-#include <crt_externs.h>\n-#endif\n-\n-#if defined(__WIN32__)\n-\n-extern \"C\" CDECL void\n-rust_unset_sigprocmask() {\n-    // empty stub for windows to keep linker happy\n-}\n-\n-extern \"C\" CDECL void\n-rust_set_environ(void* envp) {\n-    // empty stub for windows to keep linker happy\n-}\n-\n-#elif defined(__GNUC__)\n-\n-#include <signal.h>\n-#include <unistd.h>\n-\n-#ifdef __FreeBSD__\n-extern char **environ;\n-#endif\n-\n-extern \"C\" CDECL void\n-rust_unset_sigprocmask() {\n-    // this can't be safely converted to rust code because the\n-    // representation of sigset_t is platform-dependent\n-    sigset_t sset;\n-    sigemptyset(&sset);\n-    sigprocmask(SIG_SETMASK, &sset, NULL);\n-}\n-\n-extern \"C\" CDECL void\n-rust_set_environ(void* envp) {\n-    // FIXME: this could actually be converted to rust (see issue #2674)\n-#ifdef __APPLE__\n-    *_NSGetEnviron() = (char **) envp;\n-#else\n-    environ = (char **) envp;\n-#endif\n-}\n-\n-#else\n-#error \"Platform not supported.\"\n-#endif\n-\n-//\n-// Local Variables:\n-// mode: C++\n-// fill-column: 78;\n-// indent-tabs-mode: nil\n-// c-basic-offset: 4\n-// buffer-file-coding-system: utf-8-unix\n-// compile-command: \"make -k -C $RBUILD 2>&1 | sed -e 's/\\\\/x\\\\//x:\\\\//g'\";\n-// End:\n-//"}, {"sha": "7a9149187d8c711792a01e290eb26f02d734d6a2", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/3c0013134cecbe9592f02ed5c6a94c06effb19d4/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/3c0013134cecbe9592f02ed5c6a94c06effb19d4/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=3c0013134cecbe9592f02ed5c6a94c06effb19d4", "patch": "@@ -25,7 +25,6 @@ rust_list_dir_wfd_fp_buf\n rust_log_console_on\n rust_log_console_off\n rust_should_log_console\n-rust_set_environ\n rust_unset_sigprocmask\n rust_env_pairs\n upcall_rust_personality"}]}