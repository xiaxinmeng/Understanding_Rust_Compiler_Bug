{"sha": "1ebaae8a158d414c23c83298135cdfa12c8b980a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlYmFhZThhMTU4ZDQxNGMyM2M4MzI5ODEzNWNkZmExMmM4Yjk4MGE=", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-28T11:36:56Z"}, "committer": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2021-02-28T22:07:09Z"}, "message": "lintcheck: make download path and source path consts, move source directory from traget/lintcheck/crates to target/lintcheck/sources\n\nalso update logfile with the dtolnay crates", "tree": {"sha": "9d9a5d40261cd161e1479b1c21a3a6e8b0609630", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d9a5d40261cd161e1479b1c21a3a6e8b0609630"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ebaae8a158d414c23c83298135cdfa12c8b980a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ebaae8a158d414c23c83298135cdfa12c8b980a", "html_url": "https://github.com/rust-lang/rust/commit/1ebaae8a158d414c23c83298135cdfa12c8b980a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ebaae8a158d414c23c83298135cdfa12c8b980a/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "70d952e75123b9c0a935be77d1c58d5c1ed71af6", "url": "https://api.github.com/repos/rust-lang/rust/commits/70d952e75123b9c0a935be77d1c58d5c1ed71af6", "html_url": "https://github.com/rust-lang/rust/commit/70d952e75123b9c0a935be77d1c58d5c1ed71af6"}], "stats": {"total": 75, "additions": 59, "deletions": 16}, "files": [{"sha": "60cccfe2a6398cc4865f6b6e764c9caae6a34cf5", "filename": "clippy_dev/src/lintcheck.rs", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/1ebaae8a158d414c23c83298135cdfa12c8b980a/clippy_dev%2Fsrc%2Flintcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ebaae8a158d414c23c83298135cdfa12c8b980a/clippy_dev%2Fsrc%2Flintcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flintcheck.rs?ref=1ebaae8a158d414c23c83298135cdfa12c8b980a", "patch": "@@ -22,6 +22,9 @@ use serde_json::Value;\n const CLIPPY_DRIVER_PATH: &str = \"target/debug/clippy-driver\";\n const CARGO_CLIPPY_PATH: &str = \"target/debug/cargo-clippy\";\n \n+const LINTCHECK_DOWNLOADS: &str = \"target/lintcheck/downloads\";\n+const LINTCHECK_SOURCES: &str = \"target/lintcheck/sources\";\n+\n /// List of sources to check, loaded from a .toml file\n #[derive(Debug, Serialize, Deserialize)]\n struct SourceList {\n@@ -102,8 +105,8 @@ impl CrateSource {\n     fn download_and_extract(&self) -> Crate {\n         match self {\n             CrateSource::CratesIo { name, version, options } => {\n-                let extract_dir = PathBuf::from(\"target/lintcheck/crates\");\n-                let krate_download_dir = PathBuf::from(\"target/lintcheck/downloads\");\n+                let extract_dir = PathBuf::from(LINTCHECK_SOURCES);\n+                let krate_download_dir = PathBuf::from(LINTCHECK_DOWNLOADS);\n \n                 // url to download the crate from crates.io\n                 let url = format!(\"https://crates.io/api/v1/crates/{}/{}/download\", name, version);\n@@ -143,7 +146,7 @@ impl CrateSource {\n                 options,\n             } => {\n                 let repo_path = {\n-                    let mut repo_path = PathBuf::from(\"target/lintcheck/crates\");\n+                    let mut repo_path = PathBuf::from(LINTCHECK_SOURCES);\n                     // add a -git suffix in case we have the same crate from crates.io and a git repo\n                     repo_path.push(format!(\"{}-git\", name));\n                     repo_path\n@@ -185,7 +188,7 @@ impl CrateSource {\n                 use fs_extra::dir;\n \n                 // simply copy the entire directory into our target dir\n-                let copy_dest = PathBuf::from(\"target/lintcheck/crates/\");\n+                let copy_dest = PathBuf::from(format!(\"{}/\", LINTCHECK_SOURCES));\n \n                 // the source path of the crate we copied,  ${copy_dest}/crate_name\n                 let crate_root = copy_dest.join(name); // .../crates/local_crate"}, {"sha": "449af904efe5bfc48581c21cdff178be50b2c25d", "filename": "lintcheck-logs/lintcheck_crates_logs.txt", "status": "modified", "additions": 52, "deletions": 12, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/1ebaae8a158d414c23c83298135cdfa12c8b980a/lintcheck-logs%2Flintcheck_crates_logs.txt", "raw_url": "https://github.com/rust-lang/rust/raw/1ebaae8a158d414c23c83298135cdfa12c8b980a/lintcheck-logs%2Flintcheck_crates_logs.txt", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lintcheck-logs%2Flintcheck_crates_logs.txt?ref=1ebaae8a158d414c23c83298135cdfa12c8b980a", "patch": "@@ -1,5 +1,26 @@\n-clippy 0.1.52 (e3386041a 2021-02-28)\n+clippy 0.1.52 (70d952e75 2021-02-28)\n \n+target/lintcheck/sources/anyhow-1.0.38/build.rs:1:null clippy::cargo_common_metadata \"package `anyhow` is missing `package.keywords` metadata\"\n+target/lintcheck/sources/anyhow-1.0.38/src/error.rs:350:5 clippy::missing_panics_doc \"docs for function which may panic missing `# Panics` section\"\n+target/lintcheck/sources/anyhow-1.0.38/src/lib.rs:1:null clippy::cargo_common_metadata \"package `anyhow` is missing `package.keywords` metadata\"\n+target/lintcheck/sources/async-trait-0.1.42/src/expand.rs:130:1 clippy::too_many_lines \"this function has too many lines (104/100)\"\n+target/lintcheck/sources/async-trait-0.1.42/src/expand.rs:156:26 clippy::default_trait_access \"calling `syn::token::Where::default()` is more clear than this expression\"\n+target/lintcheck/sources/async-trait-0.1.42/src/expand.rs:259:1 clippy::too_many_lines \"this function has too many lines (204/100)\"\n+target/lintcheck/sources/async-trait-0.1.42/src/expand.rs:414:35 clippy::shadow_unrelated \"`generics` is being shadowed\"\n+target/lintcheck/sources/async-trait-0.1.42/src/expand.rs:464:32 clippy::if_not_else \"unnecessary `!=` operation\"\n+target/lintcheck/sources/async-trait-0.1.42/src/lib.rs:102:7 clippy::doc_markdown \"you should put `async_trait` between ticks in the documentation\"\n+target/lintcheck/sources/async-trait-0.1.42/src/lib.rs:159:64 clippy::doc_markdown \"you should put `async_trait` between ticks in the documentation\"\n+target/lintcheck/sources/async-trait-0.1.42/src/lib.rs:1:null clippy::cargo_common_metadata \"package `async-trait` is missing `package.categories` metadata\"\n+target/lintcheck/sources/async-trait-0.1.42/src/lib.rs:1:null clippy::cargo_common_metadata \"package `async-trait` is missing `package.keywords` metadata\"\n+target/lintcheck/sources/async-trait-0.1.42/src/lib.rs:240:15 clippy::doc_markdown \"you should put `async_trait` between ticks in the documentation\"\n+target/lintcheck/sources/async-trait-0.1.42/src/lifetime.rs:5:1 clippy::module_name_repetitions \"item name ends with its containing module's name\"\n+target/lintcheck/sources/async-trait-0.1.42/src/receiver.rs:102:34 clippy::similar_names \"binding's name is too similar to existing binding\"\n+target/lintcheck/sources/async-trait-0.1.42/src/receiver.rs:107:29 clippy::similar_names \"binding's name is too similar to existing binding\"\n+target/lintcheck/sources/async-trait-0.1.42/src/receiver.rs:137:38 clippy::default_trait_access \"calling `syn::token::Colon2::default()` is more clear than this expression\"\n+target/lintcheck/sources/async-trait-0.1.42/src/receiver.rs:162:55 clippy::default_trait_access \"calling `syn::token::Colon2::default()` is more clear than this expression\"\n+target/lintcheck/sources/async-trait-0.1.42/src/receiver.rs:167:42 clippy::default_trait_access \"calling `syn::token::Colon2::default()` is more clear than this expression\"\n+target/lintcheck/sources/async-trait-0.1.42/src/receiver.rs:73:1 clippy::module_name_repetitions \"item name ends with its containing module's name\"\n+target/lintcheck/sources/async-trait-0.1.42/src/receiver.rs:97:34 clippy::similar_names \"binding's name is too similar to existing binding\"\n target/lintcheck/sources/cargo-0.49.0/build.rs:1:null clippy::cargo_common_metadata \"package `cargo` is missing `package.categories` metadata\"\n target/lintcheck/sources/cargo-0.49.0/build.rs:1:null clippy::cargo_common_metadata \"package `cargo` is missing `package.keywords` metadata\"\n target/lintcheck/sources/cargo-0.49.0/src/bin/cargo/cli.rs:104:34 clippy::single_match_else \"you seem to be trying to use `match` for destructuring a single pattern. Consider using `if let`\"\n@@ -1427,6 +1448,23 @@ target/lintcheck/sources/cargo-0.49.0/src/cargo/util/workspace.rs:52:1 clippy::m\n target/lintcheck/sources/cargo-0.49.0/src/cargo/util/workspace.rs:56:1 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n target/lintcheck/sources/cargo-0.49.0/src/cargo/util/workspace.rs:60:1 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n target/lintcheck/sources/cargo-0.49.0/src/cargo/util/workspace.rs:64:1 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n+target/lintcheck/sources/cxx-1.0.32/src/rust_string.rs:15:20 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n+target/lintcheck/sources/cxx-1.0.32/src/rust_string.rs:19:24 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n+target/lintcheck/sources/cxx-1.0.32/src/rust_vec.rs:21:20 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n+target/lintcheck/sources/cxx-1.0.32/src/rust_vec.rs:25:24 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n+target/lintcheck/sources/cxx-1.0.32/src/rust_vec.rs:74:35 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n+target/lintcheck/sources/cxx-1.0.32/src/rust_vec.rs:78:39 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n+target/lintcheck/sources/cxx-1.0.32/src/rust_vec.rs:90:20 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n+target/lintcheck/sources/cxx-1.0.32/src/rust_vec.rs:94:24 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n+target/lintcheck/sources/cxx-1.0.32/src/shared_ptr.rs:108:20 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n+target/lintcheck/sources/cxx-1.0.32/src/shared_ptr.rs:165:9 clippy::let_underscore_drop \"non-binding `let` on a type that implements `Drop`\"\n+target/lintcheck/sources/cxx-1.0.32/src/shared_ptr.rs:54:20 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n+target/lintcheck/sources/cxx-1.0.32/src/shared_ptr.rs:62:20 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n+target/lintcheck/sources/cxx-1.0.32/src/shared_ptr.rs:75:20 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n+target/lintcheck/sources/cxx-1.0.32/src/unique_ptr.rs:185:9 clippy::let_underscore_drop \"non-binding `let` on a type that implements `Drop`\"\n+target/lintcheck/sources/cxx-1.0.32/src/unwind.rs:22:5 clippy::let_underscore_drop \"non-binding `let` on a type that implements `Drop`\"\n+target/lintcheck/sources/cxx-1.0.32/src/weak_ptr.rs:47:20 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n+target/lintcheck/sources/cxx-1.0.32/src/weak_ptr.rs:80:20 clippy::ptr_as_ptr \"`as` casting between raw pointers without changing its mutability\"\n target/lintcheck/sources/iron-0.6.1/src/error.rs:24:1 clippy::module_name_repetitions \"item name ends with its containing module's name\"\n target/lintcheck/sources/iron-0.6.1/src/iron.rs:105:13 clippy::redundant_field_names \"redundant field names in struct initialization\"\n target/lintcheck/sources/iron-0.6.1/src/iron.rs:119:5 clippy::missing_errors_doc \"docs for function returning `Result` missing `# Errors` section\"\n@@ -3176,12 +3214,14 @@ target/lintcheck/sources/serde-1.0.118/src/de/mod.rs:1638:9 clippy::let_undersco\n target/lintcheck/sources/serde-1.0.118/src/de/mod.rs:1649:9 clippy::let_underscore_drop \"non-binding `let` on a type that implements `Drop`\"\n target/lintcheck/sources/serde-1.0.118/src/de/mod.rs:952:13 clippy::let_underscore_drop \"non-binding `let` on a type that implements `Drop`\"\n target/lintcheck/sources/serde-1.0.118/src/de/mod.rs:986:13 clippy::let_underscore_drop \"non-binding `let` on a type that implements `Drop`\"\n+target/lintcheck/sources/serde_yaml-0.8.17/src/lib.rs:1:null clippy::cargo_common_metadata \"package `serde_yaml` is missing `package.categories` metadata\"\n target/lintcheck/sources/syn-1.0.54/build.rs:1:null clippy::cargo_common_metadata \"package `syn` is missing `package.keywords` metadata\"\n target/lintcheck/sources/syn-1.0.54/src/lib.rs:1:null clippy::cargo_common_metadata \"package `syn` is missing `package.keywords` metadata\"\n target/lintcheck/sources/syn-1.0.54/src/lit.rs:1397:40 clippy::redundant_else \"redundant else block\"\n target/lintcheck/sources/syn-1.0.54/src/lit.rs:1405:28 clippy::redundant_else \"redundant else block\"\n target/lintcheck/sources/syn-1.0.54/src/lit.rs:1485:32 clippy::redundant_else \"redundant else block\"\n target/lintcheck/sources/syn-1.0.54/src/token.rs:974:5 clippy::missing_panics_doc \"docs for function which may panic missing `# Panics` section\"\n+target/lintcheck/sources/thiserror-1.0.24/src/lib.rs:1:null clippy::cargo_common_metadata \"package `thiserror` is missing `package.keywords` metadata\"\n target/lintcheck/sources/unicode-xid-0.2.1/src/lib.rs:1:null clippy::cargo_common_metadata \"package `unicode-xid` is missing `package.categories` metadata\"\n target/lintcheck/sources/unicode-xid-0.2.1/src/lib.rs:57:64 clippy::doc_markdown \"you should put `XID_Start` between ticks in the documentation\"\n target/lintcheck/sources/unicode-xid-0.2.1/src/lib.rs:60:10 clippy::doc_markdown \"you should put `XID_Start` between ticks in the documentation\"\n@@ -3426,7 +3466,6 @@ clippy::len_without_is_empty 5\n clippy::match_like_matches_macro 5\n clippy::needless_return 5\n clippy::new_without_default 5\n-clippy::ptr_as_ptr 5\n clippy::collapsible_else_if 6\n clippy::manual_strip 6\n clippy::non_ascii_literal 6\n@@ -3446,42 +3485,43 @@ clippy::match_wildcard_for_single_variants 10\n clippy::missing_safety_doc 10\n clippy::needless_doctest_main 10\n clippy::needless_lifetimes 12\n-clippy::cargo_common_metadata 13\n-clippy::shadow_unrelated 13\n clippy::linkedlist 14\n+clippy::shadow_unrelated 14\n clippy::single_char_add_str 14\n clippy::option_if_let_else 15\n clippy::needless_pass_by_value 18\n+clippy::cargo_common_metadata 19\n clippy::cast_possible_wrap 19\n clippy::cast_sign_loss 19\n+clippy::ptr_as_ptr 19\n clippy::unnecessary_wraps 19\n clippy::unused_self 19\n clippy::unusual_byte_groupings 19\n clippy::map_unwrap_or 20\n clippy::struct_excessive_bools 20\n clippy::redundant_static_lifetimes 21\n-clippy::default_trait_access 22\n clippy::cast_lossless 23\n-clippy::let_underscore_drop 23\n+clippy::default_trait_access 26\n+clippy::let_underscore_drop 26\n clippy::trivially_copy_pass_by_ref 26\n clippy::redundant_else 29\n-clippy::too_many_lines 32\n-clippy::if_not_else 35\n+clippy::too_many_lines 34\n+clippy::if_not_else 36\n clippy::enum_glob_use 40\n clippy::unseparated_literal_suffix 41\n clippy::cast_precision_loss 44\n clippy::single_match_else 45\n-clippy::missing_panics_doc 56\n+clippy::missing_panics_doc 57\n clippy::inline_always 59\n clippy::match_same_arms 60\n-clippy::similar_names 78\n+clippy::similar_names 81\n clippy::cast_possible_truncation 95\n clippy::redundant_field_names 111\n clippy::redundant_closure_for_method_calls 135\n clippy::items_after_statements 139\n-clippy::module_name_repetitions 142\n+clippy::module_name_repetitions 144\n clippy::wildcard_imports 163\n-clippy::doc_markdown 178\n+clippy::doc_markdown 181\n clippy::missing_errors_doc 343\n clippy::unreadable_literal 365\n clippy::must_use_candidate 565"}]}