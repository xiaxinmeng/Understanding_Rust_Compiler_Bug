{"sha": "49adc99aed258c36d2dd072327c7256ea9c7b476", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ5YWRjOTlhZWQyNThjMzZkMmRkMDcyMzI3YzcyNTZlYTljN2I0NzY=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-20T05:54:16Z"}, "committer": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2019-09-20T14:21:37Z"}, "message": "op_ref: Move tests out of eq_op file", "tree": {"sha": "412c2cb2eacfee9ca0066a07d6e601db1ee23c12", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/412c2cb2eacfee9ca0066a07d6e601db1ee23c12"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/49adc99aed258c36d2dd072327c7256ea9c7b476", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/49adc99aed258c36d2dd072327c7256ea9c7b476", "html_url": "https://github.com/rust-lang/rust/commit/49adc99aed258c36d2dd072327c7256ea9c7b476", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/49adc99aed258c36d2dd072327c7256ea9c7b476/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d513a0b0a157ea2503e3b226440a835403cb0100", "url": "https://api.github.com/repos/rust-lang/rust/commits/d513a0b0a157ea2503e3b226440a835403cb0100", "html_url": "https://github.com/rust-lang/rust/commit/d513a0b0a157ea2503e3b226440a835403cb0100"}], "stats": {"total": 168, "additions": 84, "deletions": 84}, "files": [{"sha": "2d2689075a1fc0416a3751ff1e09b360d9408714", "filename": "tests/ui/eq_op.rs", "status": "modified", "additions": 1, "deletions": 36, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/49adc99aed258c36d2dd072327c7256ea9c7b476/tests%2Fui%2Feq_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49adc99aed258c36d2dd072327c7256ea9c7b476/tests%2Fui%2Feq_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.rs?ref=49adc99aed258c36d2dd072327c7256ea9c7b476", "patch": "@@ -3,6 +3,7 @@\n #[allow(clippy::identity_op, clippy::double_parens, clippy::many_single_char_names)]\n #[allow(clippy::no_effect, unused_variables, clippy::unnecessary_operation, clippy::short_circuit_statement)]\n #[warn(clippy::nonminimal_bool)]\n+#[allow(unused)]\n fn main() {\n     // simple values and comparisons\n     1 == 1;\n@@ -50,42 +51,6 @@ fn main() {\n     2*a.len() == 2*a.len(); // ok, functions\n     a.pop() == a.pop(); // ok, functions\n \n-    use std::ops::BitAnd;\n-    struct X(i32);\n-    impl BitAnd for X {\n-        type Output = X;\n-        fn bitand(self, rhs: X) -> X {\n-            X(self.0 & rhs.0)\n-        }\n-    }\n-    impl<'a> BitAnd<&'a X> for X {\n-        type Output = X;\n-        fn bitand(self, rhs: &'a X) -> X {\n-            X(self.0 & rhs.0)\n-        }\n-    }\n-    let x = X(1);\n-    let y = X(2);\n-    let z = x & &y;\n-\n-    #[derive(Copy, Clone)]\n-    struct Y(i32);\n-    impl BitAnd for Y {\n-        type Output = Y;\n-        fn bitand(self, rhs: Y) -> Y {\n-            Y(self.0 & rhs.0)\n-        }\n-    }\n-    impl<'a> BitAnd<&'a Y> for Y {\n-        type Output = Y;\n-        fn bitand(self, rhs: &'a Y) -> Y {\n-            Y(self.0 & rhs.0)\n-        }\n-    }\n-    let x = Y(1);\n-    let y = Y(2);\n-    let z = x & &y;\n-\n     check_ignore_macro();\n \n     // named constants"}, {"sha": "2a2f95c677c0428c2c5c99d253262c23b99ca63b", "filename": "tests/ui/eq_op.stderr", "status": "modified", "additions": 34, "deletions": 44, "changes": 78, "blob_url": "https://github.com/rust-lang/rust/blob/49adc99aed258c36d2dd072327c7256ea9c7b476/tests%2Fui%2Feq_op.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49adc99aed258c36d2dd072327c7256ea9c7b476/tests%2Fui%2Feq_op.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Feq_op.stderr?ref=49adc99aed258c36d2dd072327c7256ea9c7b476", "patch": "@@ -1,214 +1,204 @@\n error: this boolean expression can be simplified\n-  --> $DIR/eq_op.rs:35:5\n+  --> $DIR/eq_op.rs:36:5\n    |\n LL |     true && true;\n    |     ^^^^^^^^^^^^ help: try: `true`\n    |\n    = note: `-D clippy::nonminimal-bool` implied by `-D warnings`\n \n error: this boolean expression can be simplified\n-  --> $DIR/eq_op.rs:37:5\n+  --> $DIR/eq_op.rs:38:5\n    |\n LL |     true || true;\n    |     ^^^^^^^^^^^^ help: try: `true`\n \n error: this boolean expression can be simplified\n-  --> $DIR/eq_op.rs:43:5\n+  --> $DIR/eq_op.rs:44:5\n    |\n LL |     a == b && b == a;\n    |     ^^^^^^^^^^^^^^^^ help: try: `a == b`\n \n error: this boolean expression can be simplified\n-  --> $DIR/eq_op.rs:44:5\n+  --> $DIR/eq_op.rs:45:5\n    |\n LL |     a != b && b != a;\n    |     ^^^^^^^^^^^^^^^^ help: try: `a != b`\n \n error: this boolean expression can be simplified\n-  --> $DIR/eq_op.rs:45:5\n+  --> $DIR/eq_op.rs:46:5\n    |\n LL |     a < b && b > a;\n    |     ^^^^^^^^^^^^^^ help: try: `a < b`\n \n error: this boolean expression can be simplified\n-  --> $DIR/eq_op.rs:46:5\n+  --> $DIR/eq_op.rs:47:5\n    |\n LL |     a <= b && b >= a;\n    |     ^^^^^^^^^^^^^^^^ help: try: `a <= b`\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:8:5\n+  --> $DIR/eq_op.rs:9:5\n    |\n LL |     1 == 1;\n    |     ^^^^^^\n    |\n    = note: `-D clippy::eq-op` implied by `-D warnings`\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:9:5\n+  --> $DIR/eq_op.rs:10:5\n    |\n LL |     \"no\" == \"no\";\n    |     ^^^^^^^^^^^^\n \n error: equal expressions as operands to `!=`\n-  --> $DIR/eq_op.rs:11:5\n+  --> $DIR/eq_op.rs:12:5\n    |\n LL |     false != false;\n    |     ^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `<`\n-  --> $DIR/eq_op.rs:12:5\n+  --> $DIR/eq_op.rs:13:5\n    |\n LL |     1.5 < 1.5;\n    |     ^^^^^^^^^\n \n error: equal expressions as operands to `>=`\n-  --> $DIR/eq_op.rs:13:5\n+  --> $DIR/eq_op.rs:14:5\n    |\n LL |     1u64 >= 1u64;\n    |     ^^^^^^^^^^^^\n \n error: equal expressions as operands to `&`\n-  --> $DIR/eq_op.rs:16:5\n+  --> $DIR/eq_op.rs:17:5\n    |\n LL |     (1 as u64) & (1 as u64);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `^`\n-  --> $DIR/eq_op.rs:17:5\n+  --> $DIR/eq_op.rs:18:5\n    |\n LL |     1 ^ ((((((1))))));\n    |     ^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `<`\n-  --> $DIR/eq_op.rs:20:5\n+  --> $DIR/eq_op.rs:21:5\n    |\n LL |     (-(2) < -(2));\n    |     ^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:21:5\n+  --> $DIR/eq_op.rs:22:5\n    |\n LL |     ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&`\n-  --> $DIR/eq_op.rs:21:6\n+  --> $DIR/eq_op.rs:22:6\n    |\n LL |     ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n    |      ^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&`\n-  --> $DIR/eq_op.rs:21:27\n+  --> $DIR/eq_op.rs:22:27\n    |\n LL |     ((1 + 1) & (1 + 1) == (1 + 1) & (1 + 1));\n    |                           ^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:22:5\n+  --> $DIR/eq_op.rs:23:5\n    |\n LL |     (1 * 2) + (3 * 4) == 1 * 2 + 3 * 4;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `!=`\n-  --> $DIR/eq_op.rs:25:5\n+  --> $DIR/eq_op.rs:26:5\n    |\n LL |     ([1] != [1]);\n    |     ^^^^^^^^^^^^\n \n error: equal expressions as operands to `!=`\n-  --> $DIR/eq_op.rs:26:5\n+  --> $DIR/eq_op.rs:27:5\n    |\n LL |     ((1, 2) != (1, 2));\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:30:5\n+  --> $DIR/eq_op.rs:31:5\n    |\n LL |     1 + 1 == 2;\n    |     ^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:31:5\n+  --> $DIR/eq_op.rs:32:5\n    |\n LL |     1 - 1 == 0;\n    |     ^^^^^^^^^^\n \n error: equal expressions as operands to `-`\n-  --> $DIR/eq_op.rs:31:5\n+  --> $DIR/eq_op.rs:32:5\n    |\n LL |     1 - 1 == 0;\n    |     ^^^^^\n \n error: equal expressions as operands to `-`\n-  --> $DIR/eq_op.rs:33:5\n+  --> $DIR/eq_op.rs:34:5\n    |\n LL |     1 - 1;\n    |     ^^^^^\n \n error: equal expressions as operands to `/`\n-  --> $DIR/eq_op.rs:34:5\n+  --> $DIR/eq_op.rs:35:5\n    |\n LL |     1 / 1;\n    |     ^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:35:5\n+  --> $DIR/eq_op.rs:36:5\n    |\n LL |     true && true;\n    |     ^^^^^^^^^^^^\n \n error: equal expressions as operands to `||`\n-  --> $DIR/eq_op.rs:37:5\n+  --> $DIR/eq_op.rs:38:5\n    |\n LL |     true || true;\n    |     ^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:43:5\n+  --> $DIR/eq_op.rs:44:5\n    |\n LL |     a == b && b == a;\n    |     ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:44:5\n+  --> $DIR/eq_op.rs:45:5\n    |\n LL |     a != b && b != a;\n    |     ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:45:5\n+  --> $DIR/eq_op.rs:46:5\n    |\n LL |     a < b && b > a;\n    |     ^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `&&`\n-  --> $DIR/eq_op.rs:46:5\n+  --> $DIR/eq_op.rs:47:5\n    |\n LL |     a <= b && b >= a;\n    |     ^^^^^^^^^^^^^^^^\n \n error: equal expressions as operands to `==`\n-  --> $DIR/eq_op.rs:49:5\n+  --> $DIR/eq_op.rs:50:5\n    |\n LL |     a == a;\n    |     ^^^^^^\n \n-error: taken reference of right operand\n-  --> $DIR/eq_op.rs:87:13\n-   |\n-LL |     let z = x & &y;\n-   |             ^^^^--\n-   |                 |\n-   |                 help: use the right value directly: `y`\n-   |\n-   = note: `-D clippy::op-ref` implied by `-D warnings`\n-\n error: equal expressions as operands to `/`\n-  --> $DIR/eq_op.rs:95:20\n+  --> $DIR/eq_op.rs:60:20\n    |\n LL |     const D: u32 = A / A;\n    |                    ^^^^^\n \n-error: aborting due to 34 previous errors\n+error: aborting due to 33 previous errors\n "}, {"sha": "6605c967c8e7e6323d659f0a7c645e0cd59832c2", "filename": "tests/ui/op_ref.rs", "status": "modified", "additions": 38, "deletions": 1, "changes": 39, "blob_url": "https://github.com/rust-lang/rust/blob/49adc99aed258c36d2dd072327c7256ea9c7b476/tests%2Fui%2Fop_ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/49adc99aed258c36d2dd072327c7256ea9c7b476/tests%2Fui%2Fop_ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fop_ref.rs?ref=49adc99aed258c36d2dd072327c7256ea9c7b476", "patch": "@@ -1,6 +1,8 @@\n #![allow(unused_variables, clippy::blacklisted_name)]\n-\n+#![warn(clippy::op_ref)]\n+#![allow(clippy::many_single_char_names)]\n use std::collections::HashSet;\n+use std::ops::BitAnd;\n \n fn main() {\n     let tracked_fds: HashSet<i32> = HashSet::new();\n@@ -18,4 +20,39 @@ fn main() {\n     if b < &a {\n         println!(\"OK\");\n     }\n+\n+    struct X(i32);\n+    impl BitAnd for X {\n+        type Output = X;\n+        fn bitand(self, rhs: X) -> X {\n+            X(self.0 & rhs.0)\n+        }\n+    }\n+    impl<'a> BitAnd<&'a X> for X {\n+        type Output = X;\n+        fn bitand(self, rhs: &'a X) -> X {\n+            X(self.0 & rhs.0)\n+        }\n+    }\n+    let x = X(1);\n+    let y = X(2);\n+    let z = x & &y;\n+\n+    #[derive(Copy, Clone)]\n+    struct Y(i32);\n+    impl BitAnd for Y {\n+        type Output = Y;\n+        fn bitand(self, rhs: Y) -> Y {\n+            Y(self.0 & rhs.0)\n+        }\n+    }\n+    impl<'a> BitAnd<&'a Y> for Y {\n+        type Output = Y;\n+        fn bitand(self, rhs: &'a Y) -> Y {\n+            Y(self.0 & rhs.0)\n+        }\n+    }\n+    let x = Y(1);\n+    let y = Y(2);\n+    let z = x & &y;\n }"}, {"sha": "0f6a45f905c8e15ced40977c9403fb3dbfdc64d6", "filename": "tests/ui/op_ref.stderr", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/49adc99aed258c36d2dd072327c7256ea9c7b476/tests%2Fui%2Fop_ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/49adc99aed258c36d2dd072327c7256ea9c7b476/tests%2Fui%2Fop_ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fop_ref.stderr?ref=49adc99aed258c36d2dd072327c7256ea9c7b476", "patch": "@@ -1,5 +1,5 @@\n error: needlessly taken reference of both operands\n-  --> $DIR/op_ref.rs:10:15\n+  --> $DIR/op_ref.rs:12:15\n    |\n LL |     let foo = &5 - &6;\n    |               ^^^^^^^\n@@ -11,12 +11,20 @@ LL |     let foo = 5 - 6;\n    |               ^   ^\n \n error: taken reference of right operand\n-  --> $DIR/op_ref.rs:18:8\n+  --> $DIR/op_ref.rs:20:8\n    |\n LL |     if b < &a {\n    |        ^^^^--\n    |            |\n    |            help: use the right value directly: `a`\n \n-error: aborting due to 2 previous errors\n+error: taken reference of right operand\n+  --> $DIR/op_ref.rs:57:13\n+   |\n+LL |     let z = x & &y;\n+   |             ^^^^--\n+   |                 |\n+   |                 help: use the right value directly: `y`\n+\n+error: aborting due to 3 previous errors\n "}]}