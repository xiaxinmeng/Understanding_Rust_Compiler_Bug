{"sha": "b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0M2RjODA2YWUzZDVmZDExZmYwYmRlYTI4OGNmMTZmNGIxZTRjMTM=", "commit": {"author": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-19T07:17:21Z"}, "committer": {"name": "Dylan MacKenzie", "email": "ecstaticmorse@gmail.com", "date": "2020-02-19T07:36:09Z"}, "message": "Add `#[rustc_args_required_const]` to `simd_shuffle` tests", "tree": {"sha": "41792b5ef4fae877da399687876a957ddbaa5b9f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41792b5ef4fae877da399687876a957ddbaa5b9f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13", "html_url": "https://github.com/rust-lang/rust/commit/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/comments", "author": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ecstatic-morse", "id": 29463364, "node_id": "MDQ6VXNlcjI5NDYzMzY0", "avatar_url": "https://avatars.githubusercontent.com/u/29463364?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ecstatic-morse", "html_url": "https://github.com/ecstatic-morse", "followers_url": "https://api.github.com/users/ecstatic-morse/followers", "following_url": "https://api.github.com/users/ecstatic-morse/following{/other_user}", "gists_url": "https://api.github.com/users/ecstatic-morse/gists{/gist_id}", "starred_url": "https://api.github.com/users/ecstatic-morse/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ecstatic-morse/subscriptions", "organizations_url": "https://api.github.com/users/ecstatic-morse/orgs", "repos_url": "https://api.github.com/users/ecstatic-morse/repos", "events_url": "https://api.github.com/users/ecstatic-morse/events{/privacy}", "received_events_url": "https://api.github.com/users/ecstatic-morse/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f581b559a3c9f0c33df09312678dad836334ae22", "url": "https://api.github.com/repos/rust-lang/rust/commits/f581b559a3c9f0c33df09312678dad836334ae22", "html_url": "https://github.com/rust-lang/rust/commit/f581b559a3c9f0c33df09312678dad836334ae22"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "c9c600efed8906faa4ba7d0c7099ed6ea1f2202c", "filename": "src/test/incremental/issue-61530.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/src%2Ftest%2Fincremental%2Fissue-61530.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/src%2Ftest%2Fincremental%2Fissue-61530.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fincremental%2Fissue-61530.rs?ref=b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13", "patch": "@@ -1,11 +1,12 @@\n-#![feature(repr_simd, platform_intrinsics)]\n+#![feature(repr_simd, platform_intrinsics, rustc_attrs)]\n \n // revisions:rpass1 rpass2\n \n #[repr(simd)]\n struct I32x2(i32, i32);\n \n extern \"platform-intrinsic\" {\n+    #[rustc_args_required_const(2)]\n     fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;\n }\n "}, {"sha": "8f7905b31ecde4866b8460f51ec5fa74a101c573", "filename": "src/test/ui/issues/issue-38074.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/src%2Ftest%2Fui%2Fissues%2Fissue-38074.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/src%2Ftest%2Fui%2Fissues%2Fissue-38074.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-38074.rs?ref=b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13", "patch": "@@ -1,9 +1,10 @@\n // run-pass\n // ignore-emscripten FIXME(#45351)\n \n-#![feature(platform_intrinsics, repr_simd)]\n+#![feature(platform_intrinsics, repr_simd, rustc_attrs)]\n \n extern \"platform-intrinsic\" {\n+    #[rustc_args_required_const(2)]\n     fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;\n }\n "}, {"sha": "c9c9ab879f27e5594a1b96baa9dc1277b4aefc85", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-generic-elements.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-elements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-elements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-elements.rs?ref=b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13", "patch": "@@ -42,9 +42,13 @@ extern \"platform-intrinsic\" {\n     fn simd_insert<T, E>(x: T, idx: u32, y: E) -> T;\n     fn simd_extract<T, E>(x: T, idx: u32) -> E;\n \n+    #[rustc_args_required_const(2)]\n     fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;\n+    #[rustc_args_required_const(2)]\n     fn simd_shuffle3<T, U>(x: T, y: T, idx: [u32; 3]) -> U;\n+    #[rustc_args_required_const(2)]\n     fn simd_shuffle4<T, U>(x: T, y: T, idx: [u32; 4]) -> U;\n+    #[rustc_args_required_const(2)]\n     fn simd_shuffle8<T, U>(x: T, y: T, idx: [u32; 8]) -> U;\n }\n "}, {"sha": "29916f85902b255abc9941d196f6f39bd62f73a3", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-generic-elements.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-elements.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-elements.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-generic-elements.stderr?ref=b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13", "patch": "@@ -1,89 +1,89 @@\n error[E0511]: invalid monomorphization of `simd_insert` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:55:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:59:9\n    |\n LL |         simd_insert(0, 0, 0);\n    |         ^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_insert` intrinsic: expected inserted type `i32` (element of input `i32x4`), found `f64`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:57:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:61:9\n    |\n LL |         simd_insert(x, 0, 1.0);\n    |         ^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_extract` intrinsic: expected return type `i32` (element of input `i32x4`), found `f32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:59:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:63:9\n    |\n LL |         simd_extract::<_, f32>(x, 0);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle2` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:62:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:66:9\n    |\n LL |         simd_shuffle2::<i32, i32>(0, 0, [0; 2]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle3` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:64:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:68:9\n    |\n LL |         simd_shuffle3::<i32, i32>(0, 0, [0; 3]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle4` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:66:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:70:9\n    |\n LL |         simd_shuffle4::<i32, i32>(0, 0, [0; 4]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle8` intrinsic: expected SIMD input type, found non-SIMD `i32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:68:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:72:9\n    |\n LL |         simd_shuffle8::<i32, i32>(0, 0, [0; 8]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle2` intrinsic: expected return element type `i32` (element of input `i32x4`), found `f32x2` with element type `f32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:71:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:75:9\n    |\n LL |         simd_shuffle2::<_, f32x2>(x, x, [0; 2]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle3` intrinsic: expected return element type `i32` (element of input `i32x4`), found `f32x3` with element type `f32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:73:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:77:9\n    |\n LL |         simd_shuffle3::<_, f32x3>(x, x, [0; 3]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle4` intrinsic: expected return element type `i32` (element of input `i32x4`), found `f32x4` with element type `f32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:75:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:79:9\n    |\n LL |         simd_shuffle4::<_, f32x4>(x, x, [0; 4]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle8` intrinsic: expected return element type `i32` (element of input `i32x4`), found `f32x8` with element type `f32`\n-  --> $DIR/simd-intrinsic-generic-elements.rs:77:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:81:9\n    |\n LL |         simd_shuffle8::<_, f32x8>(x, x, [0; 8]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle2` intrinsic: expected return type of length 2, found `i32x8` with length 8\n-  --> $DIR/simd-intrinsic-generic-elements.rs:80:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:84:9\n    |\n LL |         simd_shuffle2::<_, i32x8>(x, x, [0; 2]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle3` intrinsic: expected return type of length 3, found `i32x4` with length 4\n-  --> $DIR/simd-intrinsic-generic-elements.rs:82:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:86:9\n    |\n LL |         simd_shuffle3::<_, i32x4>(x, x, [0; 3]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle4` intrinsic: expected return type of length 4, found `i32x3` with length 3\n-  --> $DIR/simd-intrinsic-generic-elements.rs:84:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:88:9\n    |\n LL |         simd_shuffle4::<_, i32x3>(x, x, [0; 4]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error[E0511]: invalid monomorphization of `simd_shuffle8` intrinsic: expected return type of length 8, found `i32x2` with length 2\n-  --> $DIR/simd-intrinsic-generic-elements.rs:86:9\n+  --> $DIR/simd-intrinsic-generic-elements.rs:90:9\n    |\n LL |         simd_shuffle8::<_, i32x2>(x, x, [0; 8]);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "b03b0ef50895b34603e4f96afd4b7b10b84a7d0a", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-inlining-issue67557-ice.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557-ice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557-ice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557-ice.rs?ref=b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13", "patch": "@@ -3,9 +3,10 @@\n //\n // run-pass\n // compile-flags: -Zmir-opt-level=3\n-#![feature(platform_intrinsics, repr_simd)]\n+#![feature(platform_intrinsics, repr_simd, rustc_attrs)]\n \n extern \"platform-intrinsic\" {\n+    #[rustc_args_required_const(2)]\n     fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;\n }\n "}, {"sha": "2741dc1333696a254b85c4c54434075ee880808e", "filename": "src/test/ui/simd-intrinsic/simd-intrinsic-inlining-issue67557.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd-intrinsic%2Fsimd-intrinsic-inlining-issue67557.rs?ref=b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13", "patch": "@@ -3,9 +3,10 @@\n //\n // run-pass\n // compile-flags: -Zmir-opt-level=3\n-#![feature(platform_intrinsics, repr_simd)]\n+#![feature(platform_intrinsics, repr_simd, rustc_attrs)]\n \n extern \"platform-intrinsic\" {\n+    #[rustc_args_required_const(2)]\n     fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;\n }\n "}, {"sha": "abff59fea78e559495d7e5f1a68b82f8d720236a", "filename": "src/test/ui/simd/simd-intrinsic-generic-elements.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/src%2Ftest%2Fui%2Fsimd%2Fsimd-intrinsic-generic-elements.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13/src%2Ftest%2Fui%2Fsimd%2Fsimd-intrinsic-generic-elements.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsimd%2Fsimd-intrinsic-generic-elements.rs?ref=b43dc806ae3d5fd11ff0bdea288cf16f4b1e4c13", "patch": "@@ -1,7 +1,7 @@\n // run-pass\n // ignore-emscripten FIXME(#45351) hits an LLVM assert\n \n-#![feature(repr_simd, platform_intrinsics)]\n+#![feature(repr_simd, platform_intrinsics, rustc_attrs)]\n \n #[repr(simd)]\n #[derive(Copy, Clone, Debug, PartialEq)]\n@@ -25,9 +25,13 @@ extern \"platform-intrinsic\" {\n     fn simd_insert<T, E>(x: T, idx: u32, y: E) -> T;\n     fn simd_extract<T, E>(x: T, idx: u32) -> E;\n \n+    #[rustc_args_required_const(2)]\n     fn simd_shuffle2<T, U>(x: T, y: T, idx: [u32; 2]) -> U;\n+    #[rustc_args_required_const(2)]\n     fn simd_shuffle3<T, U>(x: T, y: T, idx: [u32; 3]) -> U;\n+    #[rustc_args_required_const(2)]\n     fn simd_shuffle4<T, U>(x: T, y: T, idx: [u32; 4]) -> U;\n+    #[rustc_args_required_const(2)]\n     fn simd_shuffle8<T, U>(x: T, y: T, idx: [u32; 8]) -> U;\n }\n "}]}