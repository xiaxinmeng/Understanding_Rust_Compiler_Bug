{"sha": "aef169b4e637fe417f05fa50450b90e403023a5f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFlZjE2OWI0ZTYzN2ZlNDE3ZjA1ZmE1MDQ1MGI5MGU0MDMwMjNhNWY=", "commit": {"author": {"name": "AnthonyMikh", "email": "anthony.mikh@yandex.ru", "date": "2019-09-25T20:41:27Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-25T20:41:27Z"}, "message": "Use Option::map_or where applicable", "tree": {"sha": "b7fd6dc81a62f343ed77cb5beddab350bf80cc10", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b7fd6dc81a62f343ed77cb5beddab350bf80cc10"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/aef169b4e637fe417f05fa50450b90e403023a5f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdi9D3CRBK7hj4Ov3rIwAAdHIIACdaX7MuoIRJNmcd1LOH6L02\nkNiSnXCvyp03n/xFoEtRllh+3sT2DUAI9s6AgIdhk0e0fxXbAJhQDhBY8ZZew3tp\nK/z9/+M+DnvW7gyG/csRAKtYfSblNE7Wig0owLEIogramm0z6RHosrI0XU9Igb5r\nTvP59cJelflyfnj1zyGySqoYmY2Je83qcIT9cUBiwzVlLDXO9LM1tqDy0iw+3cCL\nZDhyF5p8IQdjMvHdc75m/In+mUAJP+Nk04ALRpjpobDqd9nMEAZeKFX+tSprADhA\nCANAVMSzDKIv6iGDrzLjyi3R8hhyzzBlCdVZX5crLb6GrzIZuKvp3hZC8XgjT8I=\n=kYhG\n-----END PGP SIGNATURE-----\n", "payload": "tree b7fd6dc81a62f343ed77cb5beddab350bf80cc10\nparent d6327e8f12cc51254d62e6755f67ea580fc4dd21\nauthor AnthonyMikh <anthony.mikh@yandex.ru> 1569444087 +0300\ncommitter GitHub <noreply@github.com> 1569444087 +0300\n\nUse Option::map_or where applicable"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/aef169b4e637fe417f05fa50450b90e403023a5f", "html_url": "https://github.com/rust-lang/rust/commit/aef169b4e637fe417f05fa50450b90e403023a5f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/aef169b4e637fe417f05fa50450b90e403023a5f/comments", "author": {"login": "AnthonyMikh", "id": 19252795, "node_id": "MDQ6VXNlcjE5MjUyNzk1", "avatar_url": "https://avatars.githubusercontent.com/u/19252795?v=4", "gravatar_id": "", "url": "https://api.github.com/users/AnthonyMikh", "html_url": "https://github.com/AnthonyMikh", "followers_url": "https://api.github.com/users/AnthonyMikh/followers", "following_url": "https://api.github.com/users/AnthonyMikh/following{/other_user}", "gists_url": "https://api.github.com/users/AnthonyMikh/gists{/gist_id}", "starred_url": "https://api.github.com/users/AnthonyMikh/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/AnthonyMikh/subscriptions", "organizations_url": "https://api.github.com/users/AnthonyMikh/orgs", "repos_url": "https://api.github.com/users/AnthonyMikh/repos", "events_url": "https://api.github.com/users/AnthonyMikh/events{/privacy}", "received_events_url": "https://api.github.com/users/AnthonyMikh/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d6327e8f12cc51254d62e6755f67ea580fc4dd21", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6327e8f12cc51254d62e6755f67ea580fc4dd21", "html_url": "https://github.com/rust-lang/rust/commit/d6327e8f12cc51254d62e6755f67ea580fc4dd21"}], "stats": {"total": 11, "additions": 3, "deletions": 8}, "files": [{"sha": "61bd4899f3c5455fe8941a161c2a613ad71689a8", "filename": "src/librustc_errors/emitter.rs", "status": "modified", "additions": 3, "deletions": 8, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/aef169b4e637fe417f05fa50450b90e403023a5f/src%2Flibrustc_errors%2Femitter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/aef169b4e637fe417f05fa50450b90e403023a5f/src%2Flibrustc_errors%2Femitter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Femitter.rs?ref=aef169b4e637fe417f05fa50450b90e403023a5f", "patch": "@@ -764,11 +764,7 @@ impl EmitterWriter {\n             annotations_position.push((p, annotation));\n             for (j, next) in annotations.iter().enumerate() {\n                 if j > i  {\n-                    let l = if let Some(ref label) = next.label {\n-                        label.len() + 2\n-                    } else {\n-                        0\n-                    };\n+                    let l = next.label.map_or(0, |label| label.len() + 2);\n                     if (overlaps(next, annotation, l) // Do not allow two labels to be in the same\n                                                      // line if they overlap including padding, to\n                                                      // avoid situations like:\n@@ -1311,13 +1307,12 @@ impl EmitterWriter {\n                 for line in &annotated_file.lines {\n                     max_line_len = max(max_line_len, annotated_file.file\n                         .get_line(line.line_index - 1)\n-                        .map(|s| s.len())\n-                        .unwrap_or(0));\n+                        .map_or(0, |s| s.len());\n                     for ann in &line.annotations {\n                         span_right_margin = max(span_right_margin, ann.start_col);\n                         span_right_margin = max(span_right_margin, ann.end_col);\n                         // FIXME: account for labels not in the same line\n-                        let label_right = ann.label.as_ref().map(|l| l.len() + 1).unwrap_or(0);\n+                        let label_right = ann.label.as_ref().map_or(0, |l| l.len() + 1);\n                         label_right_margin = max(label_right_margin, ann.end_col + label_right);\n                     }\n                 }"}]}