{"sha": "f8a236394c4d90f9053e3f1a58e96ab7df52cb12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4YTIzNjM5NGM0ZDkwZjkwNTNlM2YxYTU4ZTk2YWI3ZGY1MmNiMTI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-06-04T02:48:21Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-06-04T02:48:21Z"}, "message": "Rollup merge of #61446 - czipperz:nll-unused_mut, r=matthewjasper\n\nOn TerminatorKind::DropAndReplace still handle unused_mut correctly\n\nCloses #61424\n\n- [x] Todo add regression test", "tree": {"sha": "2ab2bd0ada51c4a62a0c2bb9e347102294dc9013", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2ab2bd0ada51c4a62a0c2bb9e347102294dc9013"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8a236394c4d90f9053e3f1a58e96ab7df52cb12", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJc9dv1CRBK7hj4Ov3rIwAAdHIIAIwUiW70XwuVK0STVoDtwMtT\nL3rXw3v92IxVRqgmuxTtnQ7XNmJjp/nrTKNjxQtcC/nov1kaXpQzlNMIM2PBROpc\nnSBrpm+aEcadI/NyHaSbN8UlwAskROTUnTEg4Io8XjGxQLdsIayKDKPM4fonfE1i\nAad6YauDaPWVpcarK9zQ4Q+RJOft1bdkoamwjtnHitmy8LX6FMiYVtB00tVmVVew\nqKRK/SmBIbZyXL+6T5HdlUwovbbflJPRbRXJ/tAEP5nXLOzl5b8pspng+HUgpt5J\n/zOdgx4Bo4Yp3U/AEtszvR71mc/S8OlahijeK5OOBq2jlcjhdc/Oy4DbSMEkfOY=\n=bkBj\n-----END PGP SIGNATURE-----\n", "payload": "tree 2ab2bd0ada51c4a62a0c2bb9e347102294dc9013\nparent 28ce2b1fdb53562ab3ed4e3b1f6b62a57c68f3e9\nparent fea2cdb0a48e0cc6119d036a2ff4954e71bb8670\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1559616501 +0200\ncommitter GitHub <noreply@github.com> 1559616501 +0200\n\nRollup merge of #61446 - czipperz:nll-unused_mut, r=matthewjasper\n\nOn TerminatorKind::DropAndReplace still handle unused_mut correctly\n\nCloses #61424\n\n- [x] Todo add regression test\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8a236394c4d90f9053e3f1a58e96ab7df52cb12", "html_url": "https://github.com/rust-lang/rust/commit/f8a236394c4d90f9053e3f1a58e96ab7df52cb12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8a236394c4d90f9053e3f1a58e96ab7df52cb12/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "28ce2b1fdb53562ab3ed4e3b1f6b62a57c68f3e9", "url": "https://api.github.com/repos/rust-lang/rust/commits/28ce2b1fdb53562ab3ed4e3b1f6b62a57c68f3e9", "html_url": "https://github.com/rust-lang/rust/commit/28ce2b1fdb53562ab3ed4e3b1f6b62a57c68f3e9"}, {"sha": "fea2cdb0a48e0cc6119d036a2ff4954e71bb8670", "url": "https://api.github.com/repos/rust-lang/rust/commits/fea2cdb0a48e0cc6119d036a2ff4954e71bb8670", "html_url": "https://github.com/rust-lang/rust/commit/fea2cdb0a48e0cc6119d036a2ff4954e71bb8670"}], "stats": {"total": 55, "additions": 41, "deletions": 14}, "files": [{"sha": "4a4787337ab582d92b2fffc82fafc21d0c22a59a", "filename": "src/librustc_mir/borrow_check/used_muts.rs", "status": "modified", "additions": 18, "deletions": 14, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/f8a236394c4d90f9053e3f1a58e96ab7df52cb12/src%2Flibrustc_mir%2Fborrow_check%2Fused_muts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8a236394c4d90f9053e3f1a58e96ab7df52cb12/src%2Flibrustc_mir%2Fborrow_check%2Fused_muts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fused_muts.rs?ref=f8a236394c4d90f9053e3f1a58e96ab7df52cb12", "patch": "@@ -52,6 +52,19 @@ struct GatherUsedMutsVisitor<'visit, 'cx: 'visit, 'gcx: 'tcx, 'tcx: 'cx> {\n     mbcx: &'visit mut MirBorrowckCtxt<'cx, 'gcx, 'tcx>,\n }\n \n+impl GatherUsedMutsVisitor<'_, '_, '_, '_> {\n+    fn remove_never_initialized_mut_locals(&mut self, into: &Place<'_>) {\n+        // Remove any locals that we found were initialized from the\n+        // `never_initialized_mut_locals` set. At the end, the only remaining locals will\n+        // be those that were never initialized - we will consider those as being used as\n+        // they will either have been removed by unreachable code optimizations; or linted\n+        // as unused variables.\n+        if let Some(local) = into.base_local() {\n+            let _ = self.never_initialized_mut_locals.remove(&local);\n+        }\n+    }\n+}\n+\n impl<'visit, 'cx, 'gcx, 'tcx> Visitor<'tcx> for GatherUsedMutsVisitor<'visit, 'cx, 'gcx, 'tcx> {\n     fn visit_terminator_kind(\n         &mut self,\n@@ -61,14 +74,10 @@ impl<'visit, 'cx, 'gcx, 'tcx> Visitor<'tcx> for GatherUsedMutsVisitor<'visit, 'c\n         debug!(\"visit_terminator_kind: kind={:?}\", kind);\n         match &kind {\n             TerminatorKind::Call { destination: Some((into, _)), .. } => {\n-                if let Some(local) = into.base_local() {\n-                    debug!(\n-                        \"visit_terminator_kind: kind={:?} local={:?} \\\n-                         never_initialized_mut_locals={:?}\",\n-                        kind, local, self.never_initialized_mut_locals\n-                    );\n-                    let _ = self.never_initialized_mut_locals.remove(&local);\n-                }\n+                self.remove_never_initialized_mut_locals(&into);\n+            },\n+            TerminatorKind::DropAndReplace { location, .. } => {\n+                self.remove_never_initialized_mut_locals(&location);\n             },\n             _ => {},\n         }\n@@ -81,19 +90,14 @@ impl<'visit, 'cx, 'gcx, 'tcx> Visitor<'tcx> for GatherUsedMutsVisitor<'visit, 'c\n     ) {\n         match &statement.kind {\n             StatementKind::Assign(into, _) => {\n-                // Remove any locals that we found were initialized from the\n-                // `never_initialized_mut_locals` set. At the end, the only remaining locals will\n-                // be those that were never initialized - we will consider those as being used as\n-                // they will either have been removed by unreachable code optimizations; or linted\n-                // as unused variables.\n                 if let Some(local) = into.base_local() {\n                     debug!(\n                         \"visit_statement: statement={:?} local={:?} \\\n                          never_initialized_mut_locals={:?}\",\n                         statement, local, self.never_initialized_mut_locals\n                     );\n-                    let _ = self.never_initialized_mut_locals.remove(&local);\n                 }\n+                self.remove_never_initialized_mut_locals(into);\n             },\n             _ => {},\n         }"}, {"sha": "44c8e9f7256f54d89141ba98eaa169c1a40786d9", "filename": "src/test/ui/nll/issue-61424.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/f8a236394c4d90f9053e3f1a58e96ab7df52cb12/src%2Ftest%2Fui%2Fnll%2Fissue-61424.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8a236394c4d90f9053e3f1a58e96ab7df52cb12/src%2Ftest%2Fui%2Fnll%2Fissue-61424.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-61424.rs?ref=f8a236394c4d90f9053e3f1a58e96ab7df52cb12", "patch": "@@ -0,0 +1,7 @@\n+#![deny(unused_mut)]\n+\n+fn main() {\n+    let mut x; //~ ERROR: variable does not need to be mutable\n+    x = String::new();\n+    dbg!(x);\n+}"}, {"sha": "ae336b2fe1c03d9194baedac8ec8761255e81d68", "filename": "src/test/ui/nll/issue-61424.stderr", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/f8a236394c4d90f9053e3f1a58e96ab7df52cb12/src%2Ftest%2Fui%2Fnll%2Fissue-61424.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/f8a236394c4d90f9053e3f1a58e96ab7df52cb12/src%2Ftest%2Fui%2Fnll%2Fissue-61424.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fissue-61424.stderr?ref=f8a236394c4d90f9053e3f1a58e96ab7df52cb12", "patch": "@@ -0,0 +1,16 @@\n+error: variable does not need to be mutable\n+  --> $DIR/issue-61424.rs:4:9\n+   |\n+LL |     let mut x;\n+   |         ----^\n+   |         |\n+   |         help: remove this `mut`\n+   |\n+note: lint level defined here\n+  --> $DIR/issue-61424.rs:1:9\n+   |\n+LL | #![deny(unused_mut)]\n+   |         ^^^^^^^^^^\n+\n+error: aborting due to previous error\n+"}]}