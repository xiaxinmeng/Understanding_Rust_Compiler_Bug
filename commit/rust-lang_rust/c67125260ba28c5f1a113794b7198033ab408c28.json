{"sha": "c67125260ba28c5f1a113794b7198033ab408c28", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM2NzEyNTI2MGJhMjhjNWYxYTExMzc5NGI3MTk4MDMzYWI0MDhjMjg=", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-08T22:12:17Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2019-11-12T19:50:46Z"}, "message": "Rename in librustc_codegen_utils.", "tree": {"sha": "d27116a522a4db1c14aab499635e92b6e70cd11e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d27116a522a4db1c14aab499635e92b6e70cd11e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c67125260ba28c5f1a113794b7198033ab408c28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c67125260ba28c5f1a113794b7198033ab408c28", "html_url": "https://github.com/rust-lang/rust/commit/c67125260ba28c5f1a113794b7198033ab408c28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c67125260ba28c5f1a113794b7198033ab408c28/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7378c25f2593086a496e66e638c305ded2e39e7a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7378c25f2593086a496e66e638c305ded2e39e7a", "html_url": "https://github.com/rust-lang/rust/commit/7378c25f2593086a496e66e638c305ded2e39e7a"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "1597f98771c0ae74904a5771e6ba4a20ddec1fab", "filename": "src/librustc_codegen_utils/symbol_names/legacy.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c67125260ba28c5f1a113794b7198033ab408c28/src%2Flibrustc_codegen_utils%2Fsymbol_names%2Flegacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c67125260ba28c5f1a113794b7198033ab408c28/src%2Flibrustc_codegen_utils%2Fsymbol_names%2Flegacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_utils%2Fsymbol_names%2Flegacy.rs?ref=c67125260ba28c5f1a113794b7198033ab408c28", "patch": "@@ -253,7 +253,7 @@ impl Printer<'tcx> for SymbolPrinter<'tcx> {\n         ct: &'tcx ty::Const<'tcx>,\n     ) -> Result<Self::Const, Self::Error> {\n         // only print integers\n-        if let ConstValue::Scalar(Scalar::Raw { .. }) = ct.val {\n+        if let ty::ConstKind::Value(ConstValue::Scalar(Scalar::Raw { .. })) = ct.val {\n             if ct.ty.is_integral() {\n                 return self.pretty_print_const(ct);\n             }"}]}