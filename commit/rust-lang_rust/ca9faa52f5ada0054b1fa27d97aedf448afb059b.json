{"sha": "ca9faa52f5ada0054b1fa27d97aedf448afb059b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNhOWZhYTUyZjVhZGEwMDU0YjFmYTI3ZDk3YWVkZjQ0OGFmYjA1OWI=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-26T21:54:25Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-27T15:56:13Z"}, "message": "tests: Add missing run-pass annotations", "tree": {"sha": "9913a609bd4690854ffb69816602dbb020ed6a99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9913a609bd4690854ffb69816602dbb020ed6a99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ca9faa52f5ada0054b1fa27d97aedf448afb059b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ca9faa52f5ada0054b1fa27d97aedf448afb059b", "html_url": "https://github.com/rust-lang/rust/commit/ca9faa52f5ada0054b1fa27d97aedf448afb059b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ca9faa52f5ada0054b1fa27d97aedf448afb059b/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e9b465d729d07101b29b4d096d83edf9be82df0", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e9b465d729d07101b29b4d096d83edf9be82df0", "html_url": "https://github.com/rust-lang/rust/commit/0e9b465d729d07101b29b4d096d83edf9be82df0"}], "stats": {"total": 1094, "additions": 1090, "deletions": 4}, "files": [{"sha": "c90fe0014326e3d4c9e64f878d7178d599023a0f", "filename": "src/test/run-pass-fulldeps/ast_stmt_expr_attr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fast_stmt_expr_attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fast_stmt_expr_attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fast_stmt_expr_attr.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_imports)]\n // ignore-cross-compile\n "}, {"sha": "ea24f5809d52adb40de6104c1ebcc098e4e9b741", "filename": "src/test/run-pass-fulldeps/compiler-calls.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fcompiler-calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fcompiler-calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fcompiler-calls.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Test that the Callbacks interface to the compiler works.\n \n // ignore-cross-compile"}, {"sha": "4554680ec2470adcde055d03b783e55efa1aeb4f", "filename": "src/test/run-pass-fulldeps/create-dir-all-bare.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fcreate-dir-all-bare.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fcreate-dir-all-bare.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fcreate-dir-all-bare.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n use std::env;\n use std::fs;\n use std::path::PathBuf;"}, {"sha": "d09b1922a7ba539b597fbfaae07dfb20e306e6f1", "filename": "src/test/run-pass-fulldeps/derive-no-std-not-supported.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fderive-no-std-not-supported.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fderive-no-std-not-supported.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fderive-no-std-not-supported.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n #![feature(rustc_private)]\n #![no_std]"}, {"sha": "877fb57a25132cb1791b95f0a1723028251e3b3f", "filename": "src/test/run-pass-fulldeps/deriving-encodable-decodable-box.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-encodable-decodable-box.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-encodable-decodable-box.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-encodable-decodable-box.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_imports)]\n \n #![feature(box_syntax)]"}, {"sha": "a35b681641a4bde867cf07eb4f2bafb030bc0e65", "filename": "src/test/run-pass-fulldeps/deriving-encodable-decodable-cell-refcell.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-encodable-decodable-cell-refcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-encodable-decodable-cell-refcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-encodable-decodable-cell-refcell.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_imports)]\n // This briefly tests the capability of `Cell` and `RefCell` to implement the\n // `Encodable` and `Decodable` traits via `#[derive(Encodable, Decodable)]`"}, {"sha": "b59d55ff213ce97191a4a1e596c2c1be5ab79392", "filename": "src/test/run-pass-fulldeps/deriving-global.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-global.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-global.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-global.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(rustc_private)]\n \n extern crate serialize;"}, {"sha": "0d7439ef872467a3e074f2c1484e9498ec7d8b7b", "filename": "src/test/run-pass-fulldeps/deriving-hygiene.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fderiving-hygiene.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_upper_case_globals)]\n #![feature(rustc_private)]\n extern crate serialize;"}, {"sha": "cf188d9efa3b2700580c94ce85ffdfabb2d74594", "filename": "src/test/run-pass-fulldeps/dropck_tarena_sound_drop.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fdropck_tarena_sound_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fdropck_tarena_sound_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fdropck_tarena_sound_drop.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unknown_lints)]\n // Check that an arena (TypedArena) can carry elements whose drop\n // methods might access borrowed data, as long as the borrowed data"}, {"sha": "68b407423aa685b7cf60c0fee4ba22aa58f0bd3a", "filename": "src/test/run-pass-fulldeps/empty-struct-braces-derive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fempty-struct-braces-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fempty-struct-braces-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fempty-struct-braces-derive.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // `#[derive(Trait)]` works for empty structs/variants with braces or parens.\n \n #![feature(rustc_private)]"}, {"sha": "258ab0dbe95628c1fc394aaac8f5f181534b5844", "filename": "src/test/run-pass-fulldeps/extern-mod-syntax.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fextern-mod-syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fextern-mod-syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fextern-mod-syntax.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_imports)]\n #![feature(rustc_private)]\n "}, {"sha": "c8893e629418a9227a07c61182fdde34dd5de42f", "filename": "src/test/run-pass-fulldeps/issue-11881.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-11881.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-11881.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-11881.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_must_use)]\n #![allow(dead_code)]\n #![allow(unused_imports)]"}, {"sha": "5f7d647e2301fbd52cbea116505f5e6444e6f40d", "filename": "src/test/run-pass-fulldeps/issue-13560.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-13560.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-13560.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-13560.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:issue-13560-1.rs\n // aux-build:issue-13560-2.rs\n // aux-build:issue-13560-3.rs"}, {"sha": "49fa4492fa1eea64361f6e787ffc25ef7336aa5e", "filename": "src/test/run-pass-fulldeps/issue-14021.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-14021.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-14021.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-14021.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_mut)]\n #![allow(unused_imports)]\n #![feature(rustc_private)]"}, {"sha": "c80628aabc83f5d51ae55d64a0d4c85f3c57ba41", "filename": "src/test/run-pass-fulldeps/issue-15149.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-15149.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-15149.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-15149.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_variables)]\n // no-prefer-dynamic\n // ignore-cross-compile"}, {"sha": "91cf5dde0fb36df1822bc19373a5072d47a76993", "filename": "src/test/run-pass-fulldeps/issue-15778-pass.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-15778-pass.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-15778-pass.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-15778-pass.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:lint-for-crate.rs\n // ignore-stage1\n // compile-flags: -D crate-not-okay"}, {"sha": "ec33de12ebbeeffbda53becbc8e32d237337546e", "filename": "src/test/run-pass-fulldeps/issue-15924.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-15924.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-15924.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-15924.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_imports)]\n #![allow(unused_must_use)]\n // pretty-expanded FIXME #23616"}, {"sha": "c611c33affd751a2cff76edadbf8da7577fc2c60", "filename": "src/test/run-pass-fulldeps/issue-16822.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-16822.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-16822.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-16822.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:issue-16822.rs\n \n extern crate issue_16822 as lib;"}, {"sha": "2082ae7a991521c2306f713cc543c2db5b62c401", "filename": "src/test/run-pass-fulldeps/issue-18502.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-18502.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-18502.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-18502.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:issue-18502.rs\n \n extern crate issue_18502 as fmt;"}, {"sha": "45f0bd5b6796bb33ba62938e56294a73fcd64386", "filename": "src/test/run-pass-fulldeps/issue-24106.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-24106.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-24106.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-24106.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:issue-24106.rs\n \n extern crate issue_24106;"}, {"sha": "0d354aac13787d40f4aaf51f0cf6ab472768270f", "filename": "src/test/run-pass-fulldeps/issue-24972.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-24972.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-24972.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-24972.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n #![feature(rustc_private)]\n "}, {"sha": "a5345bbcd1465b313939f29d1ddd920d179d9e67", "filename": "src/test/run-pass-fulldeps/issue-2804.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-2804.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-2804.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-2804.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_camel_case_types)]\n #![allow(dead_code)]\n #![feature(rustc_private)]"}, {"sha": "65e188ed1b64336d91dbf9df9da51d41edc9edf1", "filename": "src/test/run-pass-fulldeps/issue-40001.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-40001.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-40001.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-40001.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:issue-40001-plugin.rs\n // ignore-stage1\n "}, {"sha": "fb84acbe645259f02c008fc97a939f12ef80b9ad", "filename": "src/test/run-pass-fulldeps/issue-4016.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-4016.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-4016.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-4016.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n \n #![feature(rustc_private)]"}, {"sha": "9c9d39142681a44bf57afbf185677a06962562c5", "filename": "src/test/run-pass-fulldeps/issue-4036.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-4036.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fissue-4036.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fissue-4036.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Issue #4036: Test for an issue that arose around fixing up type inference\n // byproducts in vtable records.\n "}, {"sha": "ae46fbc4e8a03b9ad82980559173c64df63506c4", "filename": "src/test/run-pass-fulldeps/linkage-visibility.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Flinkage-visibility.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Flinkage-visibility.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flinkage-visibility.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:linkage-visibility.rs\n // ignore-android: FIXME(#10356)\n // ignore-windows: std::dynamic_lib does not work on Windows well"}, {"sha": "a9b53fa8c7424258120e839221407bee6075f850", "filename": "src/test/run-pass-fulldeps/llvm-pass-plugin.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fllvm-pass-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fllvm-pass-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fllvm-pass-plugin.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:llvm-pass-plugin.rs\n // ignore-stage1\n "}, {"sha": "135861dd772821d4bcee8cda38b6bdf18ec59b25", "filename": "src/test/run-pass-fulldeps/lto-syntax-extension.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Flto-syntax-extension.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Flto-syntax-extension.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Flto-syntax-extension.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:lto-syntax-extension-lib.rs\n // aux-build:lto-syntax-extension-plugin.rs\n // compile-flags:-C lto"}, {"sha": "e396cf016155746082db7b5ee41e626601620779", "filename": "src/test/run-pass-fulldeps/macro-crate-multi-decorator.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-multi-decorator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-multi-decorator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmacro-crate-multi-decorator.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(plugin_as_library)]\n #![allow(dead_code)]\n #![allow(unused_variables)]"}, {"sha": "8631bcca6d27eae581ec9d3f5ae0a4b256310ff8", "filename": "src/test/run-pass-fulldeps/mod_dir_path_canonicalized.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_path_canonicalized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_path_canonicalized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_path_canonicalized.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Testing that a libsyntax can parse modules with canonicalized base path\n // ignore-cross-compile\n "}, {"sha": "35e26093a2d6233fc67c74073ad1d05b2f983094", "filename": "src/test/run-pass-fulldeps/mod_dir_simple/test.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_simple%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_simple%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmod_dir_simple%2Ftest.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1 +1,3 @@\n+// run-pass\n+\n pub fn foo() -> isize { 10 }"}, {"sha": "310351f50cbc54d9dcb3b995115b81d99fb4960c", "filename": "src/test/run-pass-fulldeps/myriad-closures.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fmyriad-closures.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fmyriad-closures.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fmyriad-closures.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // This test case tests whether we can handle code bases that contain a high\n // number of closures, something that needs special handling in the MingGW\n // toolchain."}, {"sha": "336b584768fadb7e9464c392845c27a35490ff96", "filename": "src/test/run-pass-fulldeps/newtype_index.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fnewtype_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fnewtype_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fnewtype_index.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(rustc_private)]\n \n extern crate rustc_data_structures;"}, {"sha": "752f1da7377cdec8f891551f9a35e05407084307", "filename": "src/test/run-pass-fulldeps/outlive-expansion-phase.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Foutlive-expansion-phase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Foutlive-expansion-phase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Foutlive-expansion-phase.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:outlive-expansion-phase.rs\n // ignore-stage1\n "}, {"sha": "d6437146775fc153e026ba03faacb2e3a7b5c2c5", "filename": "src/test/run-pass-fulldeps/plugin-args-1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fplugin-args-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fplugin-args-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fplugin-args-1.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:plugin-args.rs\n // ignore-stage1\n "}, {"sha": "949f8440379be80e710fd711751f37a190ea05d9", "filename": "src/test/run-pass-fulldeps/plugin-args-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fplugin-args-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fplugin-args-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fplugin-args-2.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:plugin-args.rs\n // ignore-stage1\n "}, {"sha": "efdbcd0bf0d0a63a406e335cbb0e25483f034554", "filename": "src/test/run-pass-fulldeps/plugin-args-3.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fplugin-args-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fplugin-args-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fplugin-args-3.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:plugin-args.rs\n // ignore-stage1\n "}, {"sha": "09f58521e5d5c4ba84300e5e8d91e8cfbc848f9b", "filename": "src/test/run-pass-fulldeps/pprust-expr-roundtrip.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fpprust-expr-roundtrip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fpprust-expr-roundtrip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fpprust-expr-roundtrip.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-cross-compile\n \n // The general idea of this test is to enumerate all \"interesting\" expressions and check that"}, {"sha": "524c94a8555ecad5302767c08477e0a456203152", "filename": "src/test/run-pass-fulldeps/regions-mock-tcx.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fregions-mock-tcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fregions-mock-tcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fregions-mock-tcx.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n #![allow(unused_imports)]\n "}, {"sha": "8fc340cb9187214794c071230ae4f8eab2910baf", "filename": "src/test/run-pass-fulldeps/rename-directory.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Frename-directory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Frename-directory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Frename-directory.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_must_use)]\n #![allow(unused_imports)]\n // This test can't be a unit test in std,"}, {"sha": "5c4ba3158dbd4f51c5cc3a3a9806d91668065c35", "filename": "src/test/run-pass-fulldeps/roman-numerals-macro.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Froman-numerals-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Froman-numerals-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Froman-numerals-macro.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:roman-numerals.rs\n // ignore-stage1\n "}, {"sha": "42a6153465c295a0c301698bf938b685a8310fac", "filename": "src/test/run-pass-fulldeps/rustc_encodable_hygiene.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Frustc_encodable_hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Frustc_encodable_hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Frustc_encodable_hygiene.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(rustc_private)]\n \n #[allow(dead_code)]"}, {"sha": "fef9f27fcdffd0addc7ce13de50668ba6e766519", "filename": "src/test/run-pass-fulldeps/stdio-from.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fstdio-from.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fstdio-from.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fstdio-from.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-cross-compile\n \n use std::env;"}, {"sha": "e105637c3da4f358a3266ad9ff5f0bfcc0b9a265", "filename": "src/test/run-pass-fulldeps/switch-stdout.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fswitch-stdout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fswitch-stdout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fswitch-stdout.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n use std::env;\n use std::fs::File;\n use std::io::{Read, Write};"}, {"sha": "0caccad622957d6f536c52d0f7936c64ee527c6c", "filename": "src/test/run-pass-fulldeps/undef_mask.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fundef_mask.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass-fulldeps%2Fundef_mask.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass-fulldeps%2Fundef_mask.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-cross-compile\n // ignore-stage1\n "}, {"sha": "d40006eb9b68d462a397ea4cd2cd684548641dae", "filename": "src/test/run-pass/abi-sysv64-arg-passing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fabi-sysv64-arg-passing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fabi-sysv64-arg-passing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fabi-sysv64-arg-passing.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Checks if the \"sysv64\" calling convention behaves the same as the\n // \"C\" calling convention on platforms where both should be the same\n "}, {"sha": "0c7e2d906b7c1d67e1c0bbc2ff2cfa9b92822589", "filename": "src/test/run-pass/abi-sysv64-register-usage.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fabi-sysv64-register-usage.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fabi-sysv64-register-usage.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fabi-sysv64-register-usage.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Checks if the correct registers are being used to pass arguments\n // when the sysv64 ABI is specified.\n "}, {"sha": "cd7dd1b6a452fdc5d50e18820278bc08061a457e", "filename": "src/test/run-pass/abort-on-c-abi.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fabort-on-c-abi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fabort-on-c-abi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fabort-on-c-abi.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_must_use)]\n // Since we mark some ABIs as \"nounwind\" to LLVM, we must make sure that\n // we never unwind through them."}, {"sha": "932c93245e6f98411145d5117cd8f224eaf712a3", "filename": "src/test/run-pass/alias-uninit-value.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Falias-uninit-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Falias-uninit-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falias-uninit-value.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_camel_case_types)]\n #![allow(dead_code)]\n "}, {"sha": "09abe4fbf7e095f96d245879ecd47a4e4f8d4bb7", "filename": "src/test/run-pass/align-with-extern-c-fn.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Falign-with-extern-c-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Falign-with-extern-c-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falign-with-extern-c-fn.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(stable_features)]\n #![allow(unused_variables)]\n "}, {"sha": "c51c56b08992618171b902bf53459b47d9be0426", "filename": "src/test/run-pass/alignment-gep-tup-like-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Falignment-gep-tup-like-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Falignment-gep-tup-like-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falignment-gep-tup-like-1.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_camel_case_types)]\n #![allow(dead_code)]\n "}, {"sha": "c7f7fbad435eeea9d015061cc54127ea997a9d89", "filename": "src/test/run-pass/alloca-from-derived-tydesc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Falloca-from-derived-tydesc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Falloca-from-derived-tydesc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falloca-from-derived-tydesc.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_camel_case_types)]\n #![allow(dead_code)]\n "}, {"sha": "312d5f13b1a4272174fcb26f28a998ecd5b64714", "filename": "src/test/run-pass/allocator-alloc-one.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fallocator-alloc-one.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fallocator-alloc-one.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fallocator-alloc-one.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(stable_features)]\n \n #![feature(allocator_api, nonnull)]"}, {"sha": "37a67876c9170ba7939bf233c0cb067a181937ac", "filename": "src/test/run-pass/anon-extern-mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fanon-extern-mod.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n // ignore-wasm32-bare no libc to test ffi with\n "}, {"sha": "74759a4a6bdff0f138627bb2e5580d5ab71844aa", "filename": "src/test/run-pass/argument-passing.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fargument-passing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fargument-passing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fargument-passing.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n struct X {\n     x: isize\n }"}, {"sha": "2e383e1a7c685d0317d28ced00e0b6960a3cbc93", "filename": "src/test/run-pass/artificial-block.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fartificial-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fartificial-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fartificial-block.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn f() -> isize { { return 3; } }\n \n pub fn main() { assert_eq!(f(), 3); }"}, {"sha": "a9f6fceb08ff093a10ca1bd3328e216ad717e905", "filename": "src/test/run-pass/as-precedence.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fas-precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fas-precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fas-precedence.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn main() {\n     assert_eq!(3 as usize * 3, 9);\n     assert_eq!(3 as (usize) * 3, 9);"}, {"sha": "c4160bfeca10521220b22d126a34ec0e5c8ec9c7", "filename": "src/test/run-pass/asm-concat-src.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fasm-concat-src.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n // ignore-emscripten no asm\n "}, {"sha": "6525d2f53b099040ecf8fa80bd9ad3d7fbf42141", "filename": "src/test/run-pass/asm-in-moved.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fasm-in-moved.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fasm-in-moved.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fasm-in-moved.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(asm)]\n #![allow(dead_code)]\n "}, {"sha": "13d0363a6a070ca1e0f5d83ad5db35de2d7bba71", "filename": "src/test/run-pass/asm-in-out-operand.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fasm-in-out-operand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fasm-in-out-operand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fasm-in-out-operand.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(asm)]\n \n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]"}, {"sha": "2e8011af5029517a7d8541a38e5d1fbb51b50ec9", "filename": "src/test/run-pass/asm-indirect-memory.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fasm-indirect-memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fasm-indirect-memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fasm-indirect-memory.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(asm)]\n \n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]"}, {"sha": "ed63d1b4d492a68e252b1c791b5ee7ee5e6ab3ff", "filename": "src/test/run-pass/asm-out-assign.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fasm-out-assign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fasm-out-assign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fasm-out-assign.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(asm)]\n \n #[cfg(any(target_arch = \"x86\", target_arch = \"x86_64\"))]"}, {"sha": "7071f80d7f7babc5131db864b7a9f14cb9749251", "filename": "src/test/run-pass/assert-eq-trailing-comma.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fassert-eq-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fassert-eq-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassert-eq-trailing-comma.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn main() {\n     assert_eq!(1, 1,);\n }"}, {"sha": "00e51d42cab9e06a1992e73d5cfdc836dd94f26f", "filename": "src/test/run-pass/assert-escape.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fassert-escape.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fassert-escape.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassert-escape.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn main() {\n     assert!(r#\"\u2603\\backslash\"#.contains(\"\\\\\"));\n }"}, {"sha": "03308db9a1feec614f266d4d32fb88e0384683b5", "filename": "src/test/run-pass/assert-ne-trailing-comma.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fassert-ne-trailing-comma.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fassert-ne-trailing-comma.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassert-ne-trailing-comma.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn main() {\n     assert_ne!(1, 2,);\n }"}, {"sha": "bcf506b398b9e9e6f8b1164c8b4ab3346d5eade6", "filename": "src/test/run-pass/assign-assign.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fassign-assign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fassign-assign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassign-assign.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Issue 483 - Assignment expressions result in nil\n \n fn test_assign() {"}, {"sha": "cd025dc8beecb73da018230a3611cff42765d772", "filename": "src/test/run-pass/assoc-oddities-3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fassoc-oddities-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fassoc-oddities-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassoc-oddities-3.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn that_odd_parse(c: bool, n: usize) -> u32 {\n     let x = 2;\n     let a = [1, 2, 3, 4];"}, {"sha": "aad8c487c5a0a7fe666a1531b608617b8a89d097", "filename": "src/test/run-pass/associated-item-long-paths.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fassociated-item-long-paths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fassociated-item-long-paths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-item-long-paths.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n use std::mem::size_of;\n \n // The main point of this test is to ensure that we can parse and resolve"}, {"sha": "8f40b94c0999241c4924cac7d81210b3f7d2ac66", "filename": "src/test/run-pass/associated-types/associated-types-from-supertrait.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fassociated-types%2Fassociated-types-from-supertrait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fassociated-types%2Fassociated-types-from-supertrait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fassociated-types%2Fassociated-types-from-supertrait.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n trait Foo: Iterator<Item = i32> {}\n trait Bar: Foo {}\n "}, {"sha": "e9d48bb3b43d82057c1210bbdbeea984b208a171", "filename": "src/test/run-pass/atomic-access-bool.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fatomic-access-bool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fatomic-access-bool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fatomic-access-bool.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(stable_features)]\n #![feature(atomic_access)]\n use std::sync::atomic::AtomicBool;"}, {"sha": "5bda90d2eab02a36e9c4685f225a4674ff2ea3ad", "filename": "src/test/run-pass/atomic-alignment.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fatomic-alignment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fatomic-alignment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fatomic-alignment.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(cfg_target_has_atomic)]\n #![feature(integer_atomics)]\n "}, {"sha": "9b327eef3c8946be9c4815b7870e679be9073e5a", "filename": "src/test/run-pass/atomic-compare_exchange.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fatomic-compare_exchange.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fatomic-compare_exchange.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fatomic-compare_exchange.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(stable_features)]\n \n #![feature(extended_compare_and_swap)]"}, {"sha": "ef3453da6891fb51e3362ce6494b39a24c610969", "filename": "src/test/run-pass/atomic-print.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fatomic-print.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fatomic-print.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fatomic-print.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_must_use)]\n #![allow(deprecated)]\n // ignore-cloudabi no process support"}, {"sha": "3a51f83ba3b182024f2f04570c06729ef0960c8f", "filename": "src/test/run-pass/attr-main-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fattr-main-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fattr-main-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-main-2.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(main)]\n \n pub fn main() {"}, {"sha": "9c4caaa4a42eb8f29bb4f75dede382dac70be994", "filename": "src/test/run-pass/attr-main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fattr-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fattr-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-main.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n #![feature(main)]"}, {"sha": "cce31c9bb7b6b51761bac7442aa0ac39ca111711", "filename": "src/test/run-pass/attr-shebang.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fattr-shebang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fattr-shebang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-shebang.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(stable_features)]\n #![feature(rust1)]\n pub fn main() { }"}, {"sha": "6777631484b792b7105d2b85369e5315be1f645d", "filename": "src/test/run-pass/attr-start.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fattr-start.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fattr-start.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr-start.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n #![feature(start)]"}, {"sha": "9c4caaa4a42eb8f29bb4f75dede382dac70be994", "filename": "src/test/run-pass/attr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fattr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fattr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fattr.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n #![feature(main)]"}, {"sha": "84988feb6f574f1f7783a8df773ee1874415b400", "filename": "src/test/run-pass/augmented-assignments-feature-gate-cross.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Faugmented-assignments-feature-gate-cross.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Faugmented-assignments-feature-gate-cross.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faugmented-assignments-feature-gate-cross.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:augmented_assignments.rs\n \n extern crate augmented_assignments;"}, {"sha": "8e686796fee9bc69002192e2c60a4d3a45c03834", "filename": "src/test/run-pass/augmented-assignments-feature-gate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Faugmented-assignments-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Faugmented-assignments-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faugmented-assignments-feature-gate.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n use std::ops::AddAssign;\n \n struct Int(i32);"}, {"sha": "fb383cc57a693925d9dbf458cae674373da7059b", "filename": "src/test/run-pass/augmented-assignments.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Faugmented-assignments.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Faugmented-assignments.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Faugmented-assignments.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_imports)]\n #![deny(unused_assignments)]\n "}, {"sha": "a58b178287fbaca77ec8906b090de6109915a2bc", "filename": "src/test/run-pass/auto-instantiate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fauto-instantiate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fauto-instantiate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-instantiate.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n #[derive(Debug)]\n struct Pair<T, U> { a: T, b: U }"}, {"sha": "a2ddd5374c08bdb01c08b72ee28b6c23a7252211", "filename": "src/test/run-pass/auto-is-contextual.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fauto-is-contextual.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fauto-is-contextual.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fauto-is-contextual.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(path_statements)]\n #![allow(dead_code)]\n macro_rules! auto {"}, {"sha": "70606a2a200de3a090e07986a8c219ab462677b3", "filename": "src/test/run-pass/autobind.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fautobind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fautobind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fautobind.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn f<T>(x: Vec<T>) -> T { return x.into_iter().next().unwrap(); }\n \n fn g<F>(act: F) -> isize where F: FnOnce(Vec<isize>) -> isize { return act(vec![1, 2, 3]); }"}, {"sha": "1411bcf89e87f942a8da33e2da9567cc1309aeac", "filename": "src/test/run-pass/backtrace-debuginfo-aux.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo-aux.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo-aux.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo-aux.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-test: not a test, used by backtrace-debuginfo.rs to test file!()\n \n #[inline(never)]"}, {"sha": "8668ec82bfda1a588e64627ec042589329271068", "filename": "src/test/run-pass/backtrace-debuginfo.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbacktrace-debuginfo.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // We disable tail merging here because it can't preserve debuginfo and thus\n // potentially breaks the backtraces. Also, subtle changes can decide whether\n // tail merging succeeds, so the test might work today but fail tomorrow due to a"}, {"sha": "82519332d64822a66e6617b86088f36d63cebbf7", "filename": "src/test/run-pass/backtrace.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbacktrace.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-android FIXME #17520\n // ignore-cloudabi spawning processes is not supported\n // ignore-emscripten spawning processes is not supported"}, {"sha": "dfead48893e550075917b09e25806ca949d5b3db", "filename": "src/test/run-pass/bare-fn-implements-fn-mut.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbare-fn-implements-fn-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbare-fn-implements-fn-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbare-fn-implements-fn-mut.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n use std::ops::FnMut;\n \n fn call_f<F:FnMut()>(mut f: F) {"}, {"sha": "d336dc7c6a083fbac95ba60b9cc4982c96864d43", "filename": "src/test/run-pass/bare-static-string.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbare-static-string.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbare-static-string.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbare-static-string.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn main() {\n     let x: &'static str = \"foo\";\n     println!(\"{}\", x);"}, {"sha": "131de5439b7d465da5caab18c23d6d252ce4eccb", "filename": "src/test/run-pass/big-literals.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbig-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbig-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbig-literals.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Catch mistakes in the overflowing literals lint.\n #![deny(overflowing_literals)]\n "}, {"sha": "2fbd5300dd1a9afacfd9b71bbae0983da0ffb092", "filename": "src/test/run-pass/binary-minus-without-space.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbinary-minus-without-space.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbinary-minus-without-space.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinary-minus-without-space.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Check that issue #954 stays fixed\n \n "}, {"sha": "f0a9ebdd08c4dd55d50f98733f634f9cf005c147", "filename": "src/test/run-pass/bind-by-move.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbind-by-move.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbind-by-move.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbind-by-move.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n use std::sync::Arc;\n fn dispose(_x: Arc<bool>) { }\n "}, {"sha": "ea4a9e5afa50157279c76ac8d737e16e329f2ab7", "filename": "src/test/run-pass/binding/fn-arg-incomplete-pattern-drop-order.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbinding%2Ffn-arg-incomplete-pattern-drop-order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbinding%2Ffn-arg-incomplete-pattern-drop-order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinding%2Ffn-arg-incomplete-pattern-drop-order.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Check that partially moved from function parameters are dropped after the\n // named bindings that move from them.\n "}, {"sha": "393ba0a56cbc06f37bf7b8615e43c1ff8140ebf2", "filename": "src/test/run-pass/binops-issue-22743.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbinops-issue-22743.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbinops-issue-22743.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinops-issue-22743.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n use std::ops::Mul;\n \n #[derive(Copy, Clone)]"}, {"sha": "a7abf6087b303ef692481c35ea4ce791dc3e45ee", "filename": "src/test/run-pass/binops.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbinops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbinops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbinops.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_camel_case_types)]\n // Binop corner cases\n "}, {"sha": "f79ff3c6efb6964d593efc808071fa8c5361987e", "filename": "src/test/run-pass/bitwise.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbitwise.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbitwise.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbitwise.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #[cfg(any(target_pointer_width = \"32\"))]\n fn target() {\n     assert_eq!(-1000isize as usize >> 3_usize, 536870787_usize);"}, {"sha": "942aeb6fdf4019a7e821dc87a5d67bea11562394", "filename": "src/test/run-pass/blind-item-local-shadow.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblind-item-local-shadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblind-item-local-shadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblind-item-local-shadow.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n #![allow(unused_imports)]\n mod bar {"}, {"sha": "36d8ab151e4fc2dc9dbd1fbdd087ee3640fad352", "filename": "src/test/run-pass/blind-item-mixed-crate-use-item.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblind-item-mixed-crate-use-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblind-item-mixed-crate-use-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblind-item-mixed-crate-use-item.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:blind-item-mixed-crate-use-item-foo.rs\n // aux-build:blind-item-mixed-crate-use-item-foo2.rs\n "}, {"sha": "4a39054967b4a78b90d9b5bbba23e50bc6271659", "filename": "src/test/run-pass/blind-item-mixed-use-item.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblind-item-mixed-use-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblind-item-mixed-use-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblind-item-mixed-use-item.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n mod m {"}, {"sha": "87cf3a487bf433a635dd59f6503e37623cf596cb", "filename": "src/test/run-pass/block-arg-call-as.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblock-arg-call-as.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblock-arg-call-as.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-arg-call-as.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_snake_case)]\n \n fn asBlock<F>(f: F) -> usize where F: FnOnce() -> usize {"}, {"sha": "bd1385e5c33477bb74f546864814f694dec8d620", "filename": "src/test/run-pass/block-arg.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblock-arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblock-arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-arg.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Check usage and precedence of block arguments in expressions:\n pub fn main() {\n     let v = vec![-1.0f64, 0.0, 1.0, 2.0, 3.0];"}, {"sha": "860fcc8df2101a412828f1296d73deb5a39ae729", "filename": "src/test/run-pass/block-explicit-types.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblock-explicit-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblock-explicit-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-explicit-types.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn main() {\n     fn as_buf<T, F>(s: String, f: F) -> T where F: FnOnce(String) -> T { f(s) }\n     as_buf(\"foo\".to_string(), |foo: String| -> () { println!(\"{}\", foo) });"}, {"sha": "d31eecda9bb3d1c8f959142183f96b6b444505b9", "filename": "src/test/run-pass/block-expr-precedence.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblock-expr-precedence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblock-expr-precedence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-expr-precedence.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_must_use)]\n #![allow(unused_parens)]\n // This test has some extra semis in it that the pretty-printer won't"}, {"sha": "fc5f51d46b255ced8bc646a52a669ba84b424f2f", "filename": "src/test/run-pass/block-fn-coerce.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblock-fn-coerce.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblock-fn-coerce.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-fn-coerce.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn force<F>(f: F) -> isize where F: FnOnce() -> isize { return f(); }\n \n pub fn main() {"}, {"sha": "caf0266cff15521509271af78dbe2f06a643fd8e", "filename": "src/test/run-pass/block-iter-1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblock-iter-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblock-iter-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-iter-1.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn iter_vec<T, F>(v: Vec<T> , mut f: F) where F: FnMut(&T) { for x in &v { f(x); } }\n \n pub fn main() {"}, {"sha": "e90c1ee815aaea4fee81fd4032ba1d01e1fb12da", "filename": "src/test/run-pass/block-iter-2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblock-iter-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fblock-iter-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fblock-iter-2.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn iter_vec<T, F>(v: Vec<T>, mut f: F) where F: FnMut(&T) { for x in &v { f(x); } }\n \n pub fn main() {"}, {"sha": "84713d6818a3ecc30e8be933d91b54842c5f8f79", "filename": "src/test/run-pass/bool-not.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbool-not.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbool-not.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbool-not.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn main() {\n     if !false { assert!((true)); } else { assert!((false)); }\n     if !true { assert!((false)); } else { assert!((true)); }"}, {"sha": "92f36c8fd25ad418aa33dbe011a5b5df0609246f", "filename": "src/test/run-pass/bool.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbool.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Basic boolean tests\n \n "}, {"sha": "465bef1614d43f63da85d775c653043f373c8b32", "filename": "src/test/run-pass/borrow-by-val-method-receiver.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fborrow-by-val-method-receiver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fborrow-by-val-method-receiver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fborrow-by-val-method-receiver.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n trait Foo {\n     fn foo(self);\n }"}, {"sha": "be1a40cf779dab2b6774c0cc3f22d67121964936", "filename": "src/test/run-pass/box-new.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbox-new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbox-new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbox-new.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n fn main() {"}, {"sha": "f53a1736127432c3802de76ea7495bbe25f5452d", "filename": "src/test/run-pass/bug-7183-generics.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbug-7183-generics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbug-7183-generics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbug-7183-generics.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n trait Speak : Sized {\n     fn say(&self, s:&str) -> String;\n     fn hi(&self) -> String { hello(self) }"}, {"sha": "156ff2ee82f47668cf325f7e09b3f03e2ffaa6e4", "filename": "src/test/run-pass/bug-7295.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbug-7295.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbug-7295.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbug-7295.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n pub trait Foo<T> {"}, {"sha": "339bcfa1060a48e6a3c560176a987535317c2230", "filename": "src/test/run-pass/builtin-clone-unwind.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-clone-unwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-clone-unwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-clone-unwind.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_variables)]\n #![allow(unused_imports)]\n // ignore-wasm32-bare compiled with panic=abort by default"}, {"sha": "0874d5bc39038d70fe09142cd6aeb29a873996ca", "filename": "src/test/run-pass/builtin-clone.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-clone.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Test that `Clone` is correctly implemented for builtin types.\n // Also test that cloning an array or a tuple is done right, i.e.\n // each component is cloned."}, {"sha": "1f997d37122c473a56a4a61b63fbff71708a152b", "filename": "src/test/run-pass/builtin-superkinds-capabilities-transitive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities-transitive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities-transitive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities-transitive.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Tests \"transitivity\" of super-builtin-kinds on traits. Here, if\n // we have a Foo, we know we have a Bar, and if we have a Bar, we\n // know we have a Send. So if we have a Foo we should know we have"}, {"sha": "8416bb3a3773f8bf347d0d35f25afefb7ae5ba82", "filename": "src/test/run-pass/builtin-superkinds-capabilities-xc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities-xc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities-xc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities-xc.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:trait_superkinds_in_metadata.rs\n \n // Tests \"capabilities\" granted by traits with super-builtin-kinds,"}, {"sha": "e936f921a8203e802f971040a3c7c850d030357e", "filename": "src/test/run-pass/builtin-superkinds-capabilities.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-capabilities.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Tests \"capabilities\" granted by traits that inherit from super-\n // builtin-kinds, e.g., if a trait requires Send to implement, then\n // at usage site of that trait, we know we have the Send capability."}, {"sha": "117014b44ee117ca8892aedfab66ac4824751f1e", "filename": "src/test/run-pass/builtin-superkinds-in-metadata.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-in-metadata.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_imports)]\n \n // aux-build:trait_superkinds_in_metadata.rs"}, {"sha": "9b80664b04e17b2fa99bdc74a8b5b1dfbbd5c935", "filename": "src/test/run-pass/builtin-superkinds-phantom-typaram.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-phantom-typaram.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-phantom-typaram.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-phantom-typaram.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n // Tests that even when a type parameter doesn't implement a required\n // super-builtin-kind of a trait, if the type parameter is never used,"}, {"sha": "8d247715784444cedddc70f7e12a438942b419fa", "filename": "src/test/run-pass/builtin-superkinds-simple.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-simple.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Simple test case of implementing a trait with super-builtin-kinds.\n \n // pretty-expanded FIXME #23616"}, {"sha": "f999dfff786eb757b037ed57de5651db9f626ac5", "filename": "src/test/run-pass/builtin-superkinds-typaram.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-typaram.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-typaram.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbuiltin-superkinds-typaram.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Tests correct implementation of traits with super-builtin-kinds\n // using a bounded type parameter.\n "}, {"sha": "2649c2eac33db057a8166fa85a4fffb30c6c7e56", "filename": "src/test/run-pass/byte-literals.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbyte-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fbyte-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fbyte-literals.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n //\n \n "}, {"sha": "7595b76fb3fe7c64fa586e26ce76823f8ec30b88", "filename": "src/test/run-pass/c-stack-as-value.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fc-stack-as-value.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fc-stack-as-value.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fc-stack-as-value.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n // ignore-wasm32-bare no libc to test ffi with\n "}, {"sha": "388d280b831b4e551fc11759d4e7b0238676953f", "filename": "src/test/run-pass/c-stack-returning-int64.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fc-stack-returning-int64.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-wasm32-bare no libc to test with\n // ignore-sgx no libc\n "}, {"sha": "240eaebf3d6855575175db37c5c24509c0cbeac9", "filename": "src/test/run-pass/cabi-int-widening.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcabi-int-widening.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcabi-int-widening.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcabi-int-widening.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-wasm32-bare no libc to test ffi with\n \n #[link(name = \"rust_test_helpers\", kind = \"static\")]"}, {"sha": "e6c57ca3f71168c32359c87e532bca0bc637f223", "filename": "src/test/run-pass/can-copy-pod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcan-copy-pod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcan-copy-pod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcan-copy-pod.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n /* Any copyright is dedicated to the Public Domain."}, {"sha": "781d5c14abe9cbfb32ee976ebb4da40e20ef2410", "filename": "src/test/run-pass/cancel-clean-via-immediate-rvalue-ref.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcancel-clean-via-immediate-rvalue-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcancel-clean-via-immediate-rvalue-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcancel-clean-via-immediate-rvalue-ref.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n #![feature(box_syntax)]"}, {"sha": "770f7a31c7642e1c1efc18483f7611b7638da0be", "filename": "src/test/run-pass/cast-does-fallback.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcast-does-fallback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcast-does-fallback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcast-does-fallback.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn main() {\n     // Test that these type check correctly.\n     (&42u8 >> 4) as usize;"}, {"sha": "33ec2d27610e44c883daffb4ee49585c30380e01", "filename": "src/test/run-pass/cast-region-to-uint.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcast-region-to-uint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcast-region-to-uint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcast-region-to-uint.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn main() {\n     let x: isize = 3;\n     println!(\"&x={:x}\", (&x as *const isize as usize));"}, {"sha": "249481467e6467cec1de497bafaa60e8130adec3", "filename": "src/test/run-pass/cast-rfc0401-vtable-kinds.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcast-rfc0401-vtable-kinds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcast-rfc0401-vtable-kinds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcast-rfc0401-vtable-kinds.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Check that you can cast between different pointers to trait objects\n // whose vtable have the same kind (both lengths, or both trait pointers).\n "}, {"sha": "996fa013feddca2dd953acbf68cc962561a27216", "filename": "src/test/run-pass/cast-rfc0401.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcast-rfc0401.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcast-rfc0401.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcast-rfc0401.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n \n use std::vec;"}, {"sha": "053ebb621a7fe58012786e2f25f5a8374a2d10c1", "filename": "src/test/run-pass/cast-to-infer-ty.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcast-to-infer-ty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcast-to-infer-ty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcast-to-infer-ty.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Check that we allow a cast to `_` so long as the target type can be\n // inferred elsewhere.\n "}, {"sha": "218275c4d99ae7df6c57a37ab097c98038ed9aa3", "filename": "src/test/run-pass/cast.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcast.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_assignments)]\n #![allow(unused_variables)]\n "}, {"sha": "f181991713b2cd3fb4add9cec8f6f0db83a35bfb", "filename": "src/test/run-pass/catch-unwind-bang.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcatch-unwind-bang.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcatch-unwind-bang.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcatch-unwind-bang.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-wasm32-bare compiled with panic=abort by default\n \n fn worker() -> ! {"}, {"sha": "587447b54b7fdc038eced045ea862bf0108ed87d", "filename": "src/test/run-pass/cell-does-not-clone.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcell-does-not-clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcell-does-not-clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcell-does-not-clone.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n \n use std::cell::Cell;"}, {"sha": "d403514b553b079d4ac6c1cb782c6e6742a9dadc", "filename": "src/test/run-pass/chalkify/builtin-copy-clone.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchalkify%2Fbuiltin-copy-clone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchalkify%2Fbuiltin-copy-clone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchalkify%2Fbuiltin-copy-clone.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // compile-flags: -Z chalk\n \n // Test that `Clone` is correctly implemented for builtin types."}, {"sha": "44e120c1eebbaabfd4bd162118ff3943199b5303", "filename": "src/test/run-pass/chalkify/inherent_impl.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchalkify%2Finherent_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchalkify%2Finherent_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchalkify%2Finherent_impl.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // compile-flags: -Z chalk\n \n trait Foo { }"}, {"sha": "d6a8dd7a4a20317ddadfd00f2659683b1cd8bbae", "filename": "src/test/run-pass/chalkify/projection.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchalkify%2Fprojection.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchalkify%2Fprojection.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchalkify%2Fprojection.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // compile-flags: -Z chalk\n \n trait Foo { }"}, {"sha": "eeff9fd9b80a36098d7f90944fab6d08f56ab092", "filename": "src/test/run-pass/chalkify/super_trait.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchalkify%2Fsuper_trait.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchalkify%2Fsuper_trait.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchalkify%2Fsuper_trait.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // compile-flags: -Z chalk\n \n trait Foo { }"}, {"sha": "8a2e1cf599008acd80bcb98765711110013d3642", "filename": "src/test/run-pass/chalkify/trait_implied_bound.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchalkify%2Ftrait_implied_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchalkify%2Ftrait_implied_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchalkify%2Ftrait_implied_bound.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // compile-flags: -Z chalk\n \n trait Foo { }"}, {"sha": "8673f5319bdf05c55bf580eb1fb33967590b1ed6", "filename": "src/test/run-pass/chalkify/type_implied_bound.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchalkify%2Ftype_implied_bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchalkify%2Ftype_implied_bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchalkify%2Ftype_implied_bound.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // compile-flags: -Z chalk\n \n trait Eq { }"}, {"sha": "cfb7a37af01115b6a7965e75fb21cd31c0642772", "filename": "src/test/run-pass/char.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchar.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn main() {\n     let c: char = 'x';\n     let d: char = 'x';"}, {"sha": "93e5300e36fe9ec66552a9b68162b8ab970f3123", "filename": "src/test/run-pass/char_unicode.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchar_unicode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchar_unicode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchar_unicode.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(unicode_version)]\n \n /// Tests access to the internal Unicode Version type and value."}, {"sha": "8ca0af8e47a729b1bac9bd56b8f3c0db3fc23fd8", "filename": "src/test/run-pass/check-static-recursion-foreign.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcheck-static-recursion-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcheck-static-recursion-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcheck-static-recursion-foreign.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n // Static recursion check shouldn't fail when given a foreign item (#18279)\n "}, {"sha": "f4faab1abc287738cbe9948ba63f7c9afe790f82", "filename": "src/test/run-pass/check_const-feature-gated.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcheck_const-feature-gated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcheck_const-feature-gated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcheck_const-feature-gated.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n const ARR: [usize; 1] = [2];\n \n fn main() {"}, {"sha": "e3a39a44bb82194194d6fe310972149f39e9a5cf", "filename": "src/test/run-pass/child-outlives-parent.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fchild-outlives-parent.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Reported as issue #126, child leaks the string.\n \n // pretty-expanded FIXME #23616"}, {"sha": "915842f3e85f243ba03ee8d6c5604a8b5f42b785", "filename": "src/test/run-pass/cleanup-arm-conditional.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcleanup-arm-conditional.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcleanup-arm-conditional.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-arm-conditional.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(stable_features)]\n #![allow(unused_imports)]\n // Test that cleanup scope for temporaries created in a match"}, {"sha": "6fecb4e76da3222f7a5e9e97e8b4ec052bad3056", "filename": "src/test/run-pass/cleanup-rvalue-during-if-and-while.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-during-if-and-while.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-during-if-and-while.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-during-if-and-while.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // This test verifies that temporaries created for `while`'s and `if`\n // conditions are dropped after the condition is evaluated.\n "}, {"sha": "b6582c01fbada480eb0ec659194d16277ebb4a50", "filename": "src/test/run-pass/cleanup-rvalue-for-scope.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-for-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-for-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-for-scope.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_snake_case)]\n #![allow(dead_code)]\n #![allow(unused_variables)]"}, {"sha": "f51f13abf792f3dc6793e3c7b9d3d32265b0fecd", "filename": "src/test/run-pass/cleanup-rvalue-scopes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-scopes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-scopes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-scopes.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_snake_case)]\n #![allow(unused_variables)]\n // Test that destructors for rvalue temporaries run either at end of"}, {"sha": "62f8b81385aa3b2d1b77449742217d365682abaf", "filename": "src/test/run-pass/cleanup-rvalue-temp-during-incomplete-alloc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-temp-during-incomplete-alloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-temp-during-incomplete-alloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-rvalue-temp-during-incomplete-alloc.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_must_use)]\n #![allow(dead_code)]\n #![allow(unused_variables)]"}, {"sha": "19d774079ab7f9e9563ab7638808880b0eec37cf", "filename": "src/test/run-pass/cleanup-shortcircuit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcleanup-shortcircuit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcleanup-shortcircuit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcleanup-shortcircuit.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Test that cleanups for the RHS of shortcircuiting operators work.\n \n // pretty-expanded FIXME #23616"}, {"sha": "1ef2971926796d6023207765746b753884014ff4", "filename": "src/test/run-pass/clone-with-exterior.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclone-with-exterior.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_must_use)]\n // ignore-emscripten no threads support\n "}, {"sha": "40e5f500df4a833131639aab8755d0406f46f1a9", "filename": "src/test/run-pass/close-over-big-then-small-data.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fclose-over-big-then-small-data.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fclose-over-big-then-small-data.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fclose-over-big-then-small-data.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n // If we use GEPi rather than GEP_tup_like when\n // storing closure data (as we used to do), the u64 would"}, {"sha": "bb5c39f5cdea9737b078f0b35cfa19846c89a958", "filename": "src/test/run-pass/cmp-default.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcmp-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcmp-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcmp-default.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n use std::cmp::Ordering;\n \n // Test default methods in PartialOrd and PartialEq"}, {"sha": "9a85a50ebd9b1eaaccadce9d9442b3d57c71d2b5", "filename": "src/test/run-pass/codegen-object-shim.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcodegen-object-shim.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcodegen-object-shim.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcodegen-object-shim.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn main() {\n     assert_eq!((ToString::to_string as fn(&(dyn ToString+'static)) -> String)(&\"foo\"),\n         String::from(\"foo\"));"}, {"sha": "e01b0dfa14d6e73751e6000ecd9e7d1501f76c3b", "filename": "src/test/run-pass/collections-const-new.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcollections-const-new.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcollections-const-new.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcollections-const-new.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n // Test several functions can be used for constants\n // 1. Vec::new()"}, {"sha": "568be67abe372bf106e50f3ca9b4b598abf8d75c", "filename": "src/test/run-pass/command-exec.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcommand-exec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcommand-exec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcommand-exec.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(stable_features)]\n // ignore-windows - this is a unix-specific test\n // ignore-pretty issue #37199"}, {"sha": "c0fc554183a43fa1262d94c5eeeed7d2590a50fa", "filename": "src/test/run-pass/command-pre-exec.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcommand-pre-exec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcommand-pre-exec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcommand-pre-exec.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(stable_features)]\n // ignore-windows - this is a unix-specific test\n // ignore-cloudabi no processes"}, {"sha": "f867106c35d0789f289f9e8482fb8f7ce2dd9373", "filename": "src/test/run-pass/command-uid-gid.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcommand-uid-gid.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcommand-uid-gid.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcommand-uid-gid.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-android\n // ignore-cloudabi\n // ignore-emscripten"}, {"sha": "9b11ca67e477d70ea3ea81a93818ff8f31e977cf", "filename": "src/test/run-pass/complex.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcomplex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcomplex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcomplex.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unconditional_recursion)]\n #![allow(non_camel_case_types)]\n #![allow(dead_code)]"}, {"sha": "0c30a39d6a2550cbebb7da244d1a17d9f3d5de26", "filename": "src/test/run-pass/concat.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconcat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconcat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconcat.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn main() {\n     assert_eq!(format!(concat!(\"foo\", \"bar\", \"{}\"), \"baz\"), \"foobarbaz\".to_string());\n     assert_eq!(format!(concat!()), \"\".to_string());"}, {"sha": "d52dbbae1e7b5359e9ae8895131e45fcaac43a39", "filename": "src/test/run-pass/consts/const-int-conversion.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-conversion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-conversion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-conversion.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(const_int_conversion)]\n \n const REVERSE: u32 = 0x12345678_u32.reverse_bits();"}, {"sha": "b619c7908aa22d67193e0f126e6c635a9f1073e8", "filename": "src/test/run-pass/consts/const-int-overflowing.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-overflowing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-overflowing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-overflowing.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n const ADD_A: (u32, bool) = 5u32.overflowing_add(2);\n const ADD_B: (u32, bool) = u32::max_value().overflowing_add(1);\n "}, {"sha": "14f34f76cea534c7481666b45b65dd6339c6ec85", "filename": "src/test/run-pass/consts/const-int-rotate.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-rotate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-rotate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-rotate.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n const LEFT: u32 = 0x10000b3u32.rotate_left(8);\n const RIGHT: u32 = 0xb301u32.rotate_right(8);\n "}, {"sha": "394d6c17f5adfcb69b760274be4e062a50be7a91", "filename": "src/test/run-pass/consts/const-int-saturating-arith.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-saturating-arith.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-saturating-arith.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-saturating-arith.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-emscripten no i128 support\n #![feature(const_saturating_int_methods)]\n "}, {"sha": "05726cb228647b9abeece423bddefac084cdf3d7", "filename": "src/test/run-pass/consts/const-int-sign.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-sign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-sign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-sign.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(const_int_sign)]\n \n const NEGATIVE_A: bool = (-10i32).is_negative();"}, {"sha": "73147d7912d19ab16f15792b958f74de8a89a643", "filename": "src/test/run-pass/consts/const-int-wrapping.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-wrapping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-wrapping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-int-wrapping.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n const ADD_A: u32 = 200u32.wrapping_add(55);\n const ADD_B: u32 = 200u32.wrapping_add(u32::max_value());\n "}, {"sha": "58e801164428f68de70ece0efa8a9479158a2cba", "filename": "src/test/run-pass/consts/const-needs_drop.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-needs_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-needs_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fconsts%2Fconst-needs_drop.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n use std::mem;\n \n struct Trivial(u8, f32);"}, {"sha": "225b2ca8f4d2aa85dab1cc1b679b1e0ef4da8e19", "filename": "src/test/run-pass/core-run-destroy.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcore-run-destroy.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_must_use)]\n #![allow(stable_features)]\n #![allow(deprecated)]"}, {"sha": "ca5905fab41ffa5ca3d7028668d7cc2709b4dca5", "filename": "src/test/run-pass/crate-leading-sep.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcrate-leading-sep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcrate-leading-sep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrate-leading-sep.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n fn main() {"}, {"sha": "eefcf7738ada779adf96a0d414c88ce9bb978433", "filename": "src/test/run-pass/crate-method-reexport-grrrrrrr.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcrate-method-reexport-grrrrrrr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcrate-method-reexport-grrrrrrr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrate-method-reexport-grrrrrrr.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n #![feature(box_syntax)]"}, {"sha": "ad53a53143ee6f50c6909c9322db6c637b72d07a", "filename": "src/test/run-pass/crate-name-attr-used.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcrate-name-attr-used.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcrate-name-attr-used.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrate-name-attr-used.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // compile-flags:--crate-name crate_name_attr_used -F unused-attributes\n \n // pretty-expanded FIXME #23616"}, {"sha": "911467ee54ea7e03f9f0e5c845fbf78848e7d516", "filename": "src/test/run-pass/crt-static-off-works.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcrt-static-off-works.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcrt-static-off-works.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrt-static-off-works.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(stable_features)]\n // compile-flags:-C target-feature=-crt-static -Z unstable-options\n // ignore-musl - requires changing the linker which is hard"}, {"sha": "21407b1b9118ce28422d0121532f0fdfa180dc64", "filename": "src/test/run-pass/crt-static-on-works.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcrt-static-on-works.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcrt-static-on-works.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcrt-static-on-works.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(stable_features)]\n // compile-flags:-C target-feature=+crt-static -Z unstable-options\n "}, {"sha": "9241f3789d72a92e4e6ef130cd99fbd234372279", "filename": "src/test/run-pass/cycle-generic-bound.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcycle-generic-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fcycle-generic-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fcycle-generic-bound.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Regression test for #15477. This test just needs to compile.\n \n // pretty-expanded FIXME #23616"}, {"sha": "69d455f3b60e0a60077b00e75f5722143704b413", "filename": "src/test/run-pass/dead-code-alias-in-pat.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdead-code-alias-in-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdead-code-alias-in-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdead-code-alias-in-pat.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![deny(dead_code)]\n \n fn main() {"}, {"sha": "1b6e03ab8874d2608a31d0b576be781e753ed90c", "filename": "src/test/run-pass/dead-code-leading-underscore.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdead-code-leading-underscore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdead-code-leading-underscore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdead-code-leading-underscore.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n #![deny(dead_code)]"}, {"sha": "e4beee9e737ba3cc0e6d0773ddc45143b30f5344", "filename": "src/test/run-pass/debuginfo-lto.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdebuginfo-lto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdebuginfo-lto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdebuginfo-lto.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // This test case makes sure that we don't run into LLVM's dreaded\n // \"possible ODR violation\" assertion when compiling with LTO + Debuginfo.\n // It covers cases that have traditionally been prone to cause this error."}, {"sha": "2bb109c0e3f0ff7a0b2277fd8cc03ab557bb9839", "filename": "src/test/run-pass/deep.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdeep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdeep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdeep.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-emscripten apparently blows the stack\n \n fn f(x: isize) -> isize {"}, {"sha": "40f61c2b7d5ba80ab6047e4b1f87d1c3972d09d0", "filename": "src/test/run-pass/default-alloc-error-hook.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdefault-alloc-error-hook.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdefault-alloc-error-hook.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefault-alloc-error-hook.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-cloudabi no processes\n // ignore-emscripten no processes\n // ignore-sgx no processes"}, {"sha": "aae70bffa3837d41d365cf8110d792e120f9690b", "filename": "src/test/run-pass/default-associated-types.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdefault-associated-types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdefault-associated-types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefault-associated-types.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(associated_type_defaults)]\n \n trait Foo<T: Default + ToString> {"}, {"sha": "9ffb8d94a59b3f9c1e6b9272291b12de33602e4c", "filename": "src/test/run-pass/default-method-parsing.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdefault-method-parsing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdefault-method-parsing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefault-method-parsing.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n trait Foo {"}, {"sha": "6f7ae6a3e0b5eace14e55e9d0a489e51eb7096db", "filename": "src/test/run-pass/default-method-simple.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdefault-method-simple.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdefault-method-simple.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefault-method-simple.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n \n trait Foo {"}, {"sha": "3275890616b7566dd5eca53cb01dd1006020c67e", "filename": "src/test/run-pass/defaults-well-formedness.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdefaults-well-formedness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdefaults-well-formedness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdefaults-well-formedness.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n trait Trait<T> {}\n struct Foo<U, V=i32>(U, V) where U: Trait<V>;"}, {"sha": "4df9b802d45a95b313aa3696a3a9f03652e42292", "filename": "src/test/run-pass/deprecation-in-force-unstable.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdeprecation-in-force-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdeprecation-in-force-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdeprecation-in-force-unstable.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // compile-flags:-Zforce-unstable-if-unmarked\n \n #[deprecated] // should work even with -Zforce-unstable-if-unmarked"}, {"sha": "f57872f80e02504789e94b1deda3f70eea44902b", "filename": "src/test/run-pass/deref-lval.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fderef-lval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fderef-lval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderef-lval.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(box_syntax)]\n \n use std::cell::Cell;"}, {"sha": "a6df5495a27758ae20c696438dd1875c6b2740ff", "filename": "src/test/run-pass/deref-mut-on-ref.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fderef-mut-on-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fderef-mut-on-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderef-mut-on-ref.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Test that `&mut T` implements `DerefMut<T>`\n \n "}, {"sha": "973e61c9d59fa4ff8f11e0f8ed3287b10db9c7da", "filename": "src/test/run-pass/deref-on-ref.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fderef-on-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fderef-on-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderef-on-ref.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Test that `&T` and `&mut T` implement `Deref<T>`\n \n "}, {"sha": "9b4c63b1925654c75e6f3243c0406a006286e003", "filename": "src/test/run-pass/deref-rc.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fderef-rc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fderef-rc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderef-rc.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n use std::rc::Rc;\n \n fn main() {"}, {"sha": "cad4ede06a56175050055610cde6d60d52858039", "filename": "src/test/run-pass/deref.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fderef.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n #![feature(box_syntax)]"}, {"sha": "764f58ce9e805e34328e1c467ddc91ba10be3bb4", "filename": "src/test/run-pass/dispatch_from_dyn_zst.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdispatch_from_dyn_zst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdispatch_from_dyn_zst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdispatch_from_dyn_zst.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(unsize, dispatch_from_dyn, never_type)]\n \n #![allow(dead_code)]"}, {"sha": "0f0f787b407d2221c711463c3b009fd03ad678c1", "filename": "src/test/run-pass/diverging-fallback-control-flow.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdiverging-fallback-control-flow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdiverging-fallback-control-flow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdiverging-fallback-control-flow.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n #![allow(unused_assignments)]\n #![allow(unused_variables)]"}, {"sha": "ba9f05c64e44233b3b982e8d22b3faa25787dda2", "filename": "src/test/run-pass/diverging-fallback-method-chain.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdiverging-fallback-method-chain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdiverging-fallback-method-chain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdiverging-fallback-method-chain.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_imports)]\n // Test a regression found when building compiler. The `produce()`\n // error type `T` winds up getting unified with result of `x.parse()`;"}, {"sha": "46bdfc96dbe22206b888dee8611d4a918578a952", "filename": "src/test/run-pass/diverging-fallback-option.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdiverging-fallback-option.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdiverging-fallback-option.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdiverging-fallback-option.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(warnings)]\n \n // Here the type of `c` is `Option<?T>`, where `?T` is unconstrained."}, {"sha": "e68b86833764fdd80390b389e3a5b5582fbd70d7", "filename": "src/test/run-pass/double-ref.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdouble-ref.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fdouble-ref.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fdouble-ref.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n // pretty-expanded FIXME #23616\n "}, {"sha": "05a279a3014ba75558713371e750f4e25d34dac7", "filename": "src/test/run-pass/duplicated-external-mods.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fduplicated-external-mods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fduplicated-external-mods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fduplicated-external-mods.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:anon-extern-mod-cross-crate-1.rs\n // aux-build:anon-extern-mod-cross-crate-1.rs\n // pretty-expanded FIXME #23616"}, {"sha": "2b5df52a51c36181abdf6b70f0537544f7220f37", "filename": "src/test/run-pass/early-ret-binop-add.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fearly-ret-binop-add.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fearly-ret-binop-add.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fearly-ret-binop-add.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n #![allow(unreachable_code)]\n // pretty-expanded FIXME #23616"}, {"sha": "f4b69c1409561ca70a719acc2e787955f639fdf7", "filename": "src/test/run-pass/early-vtbl-resolution.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fearly-vtbl-resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fearly-vtbl-resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fearly-vtbl-resolution.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_camel_case_types)]\n #![allow(dead_code)]\n // pretty-expanded FIXME #23616"}, {"sha": "943d203b806f44bdfe3be870b16bc32b7b281aae", "filename": "src/test/run-pass/edition-keywords-2015-2015.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2015.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_mut)]\n #![allow(unused_assignments)]\n #![allow(unused_variables)]"}, {"sha": "8c3397c951db6d4b35c65150461ceda9868592fe", "filename": "src/test/run-pass/edition-keywords-2015-2018.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fedition-keywords-2015-2018.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_mut)]\n #![allow(unused_assignments)]\n #![allow(unused_variables)]"}, {"sha": "2cb2dfb18a023191f6dda6e83c39ee8c2aa977c2", "filename": "src/test/run-pass/edition-keywords-2018-2015.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fedition-keywords-2018-2015.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fedition-keywords-2018-2015.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fedition-keywords-2018-2015.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_assignments)]\n // edition:2018\n // aux-build:edition-kw-macro-2015.rs"}, {"sha": "5043440aa167a3b34450b70f8050fd12fe796c26", "filename": "src/test/run-pass/edition-keywords-2018-2018.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fedition-keywords-2018-2018.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fedition-keywords-2018-2018.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fedition-keywords-2018-2018.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_assignments)]\n // edition:2018\n // aux-build:edition-kw-macro-2018.rs"}, {"sha": "77d8d1abfaf3d2752bd1ca626b4bccb923c9e4d3", "filename": "src/test/run-pass/else-if.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Felse-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Felse-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Felse-if.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn main() {\n     if 1 == 2 {\n         assert!((false));"}, {"sha": "925bddd5edd9c2c38da6d15cb8b7729c593e0912", "filename": "src/test/run-pass/empty-allocation-non-null.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fempty-allocation-non-null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fempty-allocation-non-null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fempty-allocation-non-null.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn main() {\n     assert!(Some(Box::new(())).is_some());\n "}, {"sha": "2f5a5c4bbc6db0dcbf63a8b0d13960b6aadb0397", "filename": "src/test/run-pass/empty-allocation-rvalue-non-null.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fempty-allocation-rvalue-non-null.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fempty-allocation-rvalue-non-null.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fempty-allocation-rvalue-non-null.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_variables)]\n // pretty-expanded FIXME #23616\n "}, {"sha": "e168cd03b2746bc69b232af3fcf1c038096147b7", "filename": "src/test/run-pass/empty-type-parameter-list.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fempty-type-parameter-list.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fempty-type-parameter-list.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fempty-type-parameter-list.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Test that empty type parameter list (<>) is synonymous with\n // no type parameters at all\n "}, {"sha": "efbe2b2eb670d435668f117500f519042689cd65", "filename": "src/test/run-pass/empty_global_asm.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fempty_global_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fempty_global_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fempty_global_asm.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(global_asm)]\n \n #[cfg(target_arch = \"x86\")]"}, {"sha": "0ffd74f87ab6c0bc6ea84a747ce8f3e42841506d", "filename": "src/test/run-pass/env-args-reverse-iterator.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fenv-args-reverse-iterator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fenv-args-reverse-iterator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenv-args-reverse-iterator.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-cloudabi no processes\n // ignore-emscripten no processes\n // ignore-sgx no processes"}, {"sha": "4faceb53266c75e351b24cd342bce7868823c5aa", "filename": "src/test/run-pass/env-funky-keys.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fenv-funky-keys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fenv-funky-keys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenv-funky-keys.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Ignore this test on Android, because it segfaults there.\n \n // ignore-android"}, {"sha": "a75be48fd5532380c7baa71e178eba94fb4ed5a3", "filename": "src/test/run-pass/env-home-dir.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenv-home-dir.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_variables)]\n #![allow(deprecated)]\n // ignore-cloudabi no environment variables present"}, {"sha": "10582a8a514617d529b74cbf8945f2ecbfc6cf77", "filename": "src/test/run-pass/env-null-vars.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fenv-null-vars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fenv-null-vars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenv-null-vars.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_imports)]\n \n // ignore-windows"}, {"sha": "2ea906788e802924a8df40c20ed09e8b907381ba", "filename": "src/test/run-pass/env-vars.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fenv-vars.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fenv-vars.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fenv-vars.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-cloudabi no env vars\n // ignore-wasm32-bare no env vars\n "}, {"sha": "5f7feb5347beace827491d926e5742ca35a193e9", "filename": "src/test/run-pass/epoch-gate-feature.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fepoch-gate-feature.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fepoch-gate-feature.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fepoch-gate-feature.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n #![allow(unused_variables)]\n // Checks if the correct registers are being used to pass arguments"}, {"sha": "69d83f496b392aab83b5dcb29ae663b234f9640f", "filename": "src/test/run-pass/eq-multidispatch.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Feq-multidispatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Feq-multidispatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Feq-multidispatch.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #[derive(PartialEq, Debug)]\n struct Bar;\n #[derive(Debug)]"}, {"sha": "1d0a427395317f1fca6d53986d5cc6b209c9e54e", "filename": "src/test/run-pass/estr-uniq.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Festr-uniq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Festr-uniq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Festr-uniq.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_assignments)]\n #![allow(unknown_lints)]\n "}, {"sha": "230fac10d3357fe0c890162819a8ce06d8a44e06", "filename": "src/test/run-pass/exec-env.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexec-env.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexec-env.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexec-env.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // exec-env:TEST_EXEC_ENV=22\n // ignore-cloudabi no env vars\n // ignore-emscripten FIXME: issue #31622"}, {"sha": "c2cf0eeed3d9e6fc08fe65039bc87d2e09769713", "filename": "src/test/run-pass/existential_type.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexistential_type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexistential_type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexistential_type.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n #![allow(unused_assignments)]\n #![allow(unused_variables)]"}, {"sha": "40c7e4751048580baf385d3f0b815f81a39a7dcf", "filename": "src/test/run-pass/explicit-i-suffix.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexplicit-i-suffix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexplicit-i-suffix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexplicit-i-suffix.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_must_use)]\n // pretty-expanded FIXME #23616\n "}, {"sha": "4df807ea4c932ed2b6fa61cc2a17937d139dd8c7", "filename": "src/test/run-pass/export-glob-imports-target.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexport-glob-imports-target.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_upper_case_globals)]\n #![allow(dead_code)]\n // Test that a glob-export functions as an import"}, {"sha": "02bdbe8afff0fe41a27d6c6d98d95841118f72c0", "filename": "src/test/run-pass/export-multi.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexport-multi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexport-multi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexport-multi.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n use m::f;"}, {"sha": "6d18b03891a37f3931147b2230f280d98d5b2c0a", "filename": "src/test/run-pass/export-non-interference2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexport-non-interference2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexport-non-interference2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexport-non-interference2.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n mod foo {\n     pub mod bar {\n         pub fn y() { super::super::foo::x(); }"}, {"sha": "0d6b6369f9471d6fcb15b42ceac851c82c4fadf4", "filename": "src/test/run-pass/export-non-interference3.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexport-non-interference3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexport-non-interference3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexport-non-interference3.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub mod foo {\n     pub fn x() { ::bar::x(); }\n }"}, {"sha": "1cac2cac0ac5dcce24b071bd9f7565d68f2dd236", "filename": "src/test/run-pass/expr-block-fn.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-block-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-block-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block-fn.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn test_fn() {\n     fn ten() -> isize { return 10; }\n     let rs = ten;"}, {"sha": "c14191f2ffcb5fe1f0d16ef4b36bea424d758cfc", "filename": "src/test/run-pass/expr-block-generic-unique1.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-block-generic-unique1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-block-generic-unique1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block-generic-unique1.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(box_syntax)]\n \n fn test_generic<T, F>(expected: Box<T>, eq: F) where T: Clone, F: FnOnce(Box<T>, Box<T>) -> bool {"}, {"sha": "90ebc02931ad1a7e7ca90e565a1b16d99678eee2", "filename": "src/test/run-pass/expr-block-generic-unique2.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-block-generic-unique2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-block-generic-unique2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block-generic-unique2.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(box_syntax)]\n \n fn test_generic<T, F>(expected: T, eq: F) where T: Clone, F: FnOnce(T, T) -> bool {"}, {"sha": "ec93f59722d0cf83f57ae35d029fbf1335b3586e", "filename": "src/test/run-pass/expr-block-generic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-block-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-block-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block-generic.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn test_generic<T: Clone, F>(expected: T, eq: F) where F: FnOnce(T, T) -> bool {\n     let actual: T = { expected.clone() };\n     assert!(eq(expected, actual));"}, {"sha": "54bcbb328b038a1ec762fa1399608b0986ae0c42", "filename": "src/test/run-pass/expr-block-slot.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-block-slot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-block-slot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block-slot.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Regression test for issue #377\n \n "}, {"sha": "fe1a7d9f1fb319b411118faf04b26e51281c7981", "filename": "src/test/run-pass/expr-block-unique.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-block-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-block-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block-unique.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(box_syntax)]\n \n pub fn main() { let x: Box<_> = { box 100 }; assert_eq!(*x, 100); }"}, {"sha": "549ccf9774f43b956191efe6949605b02bc382ad", "filename": "src/test/run-pass/expr-block.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-block.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-block.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-block.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n \n "}, {"sha": "1c6ae03810f08c410f8b846b1fdd268916969a6f", "filename": "src/test/run-pass/expr-copy.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-copy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-copy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-copy.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn f(arg: &mut A) {\n     arg.a = 100;\n }"}, {"sha": "ce8ffaf94d063e53d72d1b426442dc6b544797b3", "filename": "src/test/run-pass/expr-empty-ret.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-empty-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-empty-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-empty-ret.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n // Issue #521\n "}, {"sha": "af809f563fc0431523f2a9c4b02bc152f67dec6a", "filename": "src/test/run-pass/expr-fn.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-fn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-fn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-fn.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn test_int() {\n     fn f() -> isize { 10 }\n     assert_eq!(f(), 10);"}, {"sha": "32ed6d9bee0cfc3d61aa21e41b5725a6fea11d80", "filename": "src/test/run-pass/expr-if-generic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-if-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-if-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-if-generic.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn test_generic<T, F>(expected: T, not_expected: T, eq: F) where\n     T: Clone,\n     F: FnOnce(T, T) -> bool,"}, {"sha": "f915a7d9da0683a8344f22a5decfa416fad766c1", "filename": "src/test/run-pass/expr-if-panic-all.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-if-panic-all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-if-panic-all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-if-panic-all.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // When all branches of an if expression result in panic, the entire if\n // expression results in panic.\n "}, {"sha": "6069cd835e14c9d00980ecaba1b872b7f9c6ce65", "filename": "src/test/run-pass/expr-if-panic.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-if-panic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-if-panic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-if-panic.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn test_if_panic() {\n     let x = if false { panic!() } else { 10 };\n     assert_eq!(x, 10);"}, {"sha": "509d069d40fecd73c38ff369e61adfcc80fbdb60", "filename": "src/test/run-pass/expr-if-unique.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-if-unique.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-if-unique.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-if-unique.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(box_syntax)]\n \n // Tests for if as expressions returning boxed types"}, {"sha": "2b8474ff4539ff8c1ef03336648fd777f0d09143", "filename": "src/test/run-pass/expr-if.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-if.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-if.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-if.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Tests for if as expressions\n \n fn test_if() { let rs: bool = if true { true } else { false }; assert!((rs)); }"}, {"sha": "9976b6814c00d143a6875360421e1c8dd46ee7c7", "filename": "src/test/run-pass/expr-scope.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexpr-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexpr-scope.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Regression test for issue #762\n \n // pretty-expanded FIXME #23616"}, {"sha": "5bbdf5ec956085fd5523f29874084a8ee61bdafd", "filename": "src/test/run-pass/ext-expand-inner-exprs.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fext-expand-inner-exprs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fext-expand-inner-exprs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fext-expand-inner-exprs.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n static FOO : &'static str = concat!(concat!(\"hel\", \"lo\"), \"world\");\n \n pub fn main() {"}, {"sha": "01d743f70bc0a72472b0117304a893fa3a1288ac", "filename": "src/test/run-pass/extend-for-unit.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fextend-for-unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fextend-for-unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextend-for-unit.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn main() {\n     let mut x = 0;\n     {"}, {"sha": "6f2c37926bea65167b0952d2aa3f804df25fa472", "filename": "src/test/run-pass/exterior.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexterior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fexterior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fexterior.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n \n "}, {"sha": "4014902ffed59ff1b90a1deebdbd1146c46c390b", "filename": "src/test/run-pass/extoption_env-not-defined.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fextoption_env-not-defined.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fextoption_env-not-defined.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fextoption_env-not-defined.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn main() {\n     assert!(option_env!(\"__HOPEFULLY_DOESNT_EXIST__\").is_none());\n }"}, {"sha": "c6c2f57e75c553751d60ed09a1c0ad57acdb2fe5", "filename": "src/test/run-pass/fact.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffact.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffact.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffact.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn f(x: isize) -> isize {\n     // println!(\"in f:\");\n "}, {"sha": "c8d8095a265d5cfaf0d8414a48f8a908fc574289", "filename": "src/test/run-pass/fat-lto.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffat-lto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffat-lto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffat-lto.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // compile-flags: -Clto=fat\n // no-prefer-dynamic\n "}, {"sha": "5f5e621d762dfc67c703a04d75de1a4ece607f82", "filename": "src/test/run-pass/fat-ptr-cast.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffat-ptr-cast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffat-ptr-cast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffat-ptr-cast.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(raw)]\n \n use std::mem;"}, {"sha": "2010b5b668074027a9fdec05b62b760dcd0f683f", "filename": "src/test/run-pass/fds-are-cloexec.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffds-are-cloexec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffds-are-cloexec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffds-are-cloexec.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-windows\n // ignore-android\n // ignore-cloudabi no processes"}, {"sha": "e63aa91577bc9ee37802f22128275cdddd2c7529", "filename": "src/test/run-pass/filter-block-view-items.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffilter-block-view-items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffilter-block-view-items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffilter-block-view-items.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n pub fn main() {"}, {"sha": "6b2fd72b89553abfd53812585af3668127d7a700", "filename": "src/test/run-pass/fixup-deref-mut.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffixup-deref-mut.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffixup-deref-mut.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffixup-deref-mut.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n // pretty-expanded FIXME #23616\n "}, {"sha": "6bf5ae8beaddb91a9984df5187eab1198443f79e", "filename": "src/test/run-pass/format-hygiene.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fformat-hygiene.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fformat-hygiene.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fformat-hygiene.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_upper_case_globals)]\n pub const arg0: u8 = 1;\n "}, {"sha": "e4a134fa2fbe074fd9a2caa2192902125406a60e", "filename": "src/test/run-pass/format-nan.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fformat-nan.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fformat-nan.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fformat-nan.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn main() {\n     use std::f64;\n     let x = \"NaN\".to_string();"}, {"sha": "c9b7651bfda05c5e66e20a4d810fdb0c0c336df2", "filename": "src/test/run-pass/format-no-std.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fformat-no-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fformat-no-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fformat-no-std.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-emscripten no no_std executables\n \n #![feature(lang_items, start)]"}, {"sha": "afb2f8488b82aface3710befbc68562149b5542b", "filename": "src/test/run-pass/format-ref-cell.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fformat-ref-cell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fformat-ref-cell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fformat-ref-cell.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n use std::cell::RefCell;\n \n pub fn main() {"}, {"sha": "c41bcc73fa50611b3301e8f1509bb8c2295913f1", "filename": "src/test/run-pass/fsu-moves-and-copies.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffsu-moves-and-copies.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffsu-moves-and-copies.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffsu-moves-and-copies.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_camel_case_types)]\n #![allow(stable_features)]\n // Issue 4691: Ensure that functional-struct-updates operates"}, {"sha": "5b83e2620d8442f3bccfb9bb2d692725df1136f6", "filename": "src/test/run-pass/fun-call-variants.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffun-call-variants.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffun-call-variants.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffun-call-variants.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn ho<F>(f: F) -> isize where F: FnOnce(isize) -> isize { let n: isize = f(3); return n; }\n \n fn direct(x: isize) -> isize { return x + 1; }"}, {"sha": "49da3d83f4a2719722776123f0d1a7a799fe7c46", "filename": "src/test/run-pass/fun-indirect-call.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffun-indirect-call.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Ffun-indirect-call.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ffun-indirect-call.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn f() -> isize { return 42; }\n \n pub fn main() {"}, {"sha": "66f22bf31fc40696666afd30baf57f7d2b0e8a59", "filename": "src/test/run-pass/generator/addassign-yield.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fgenerator%2Faddassign-yield.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fgenerator%2Faddassign-yield.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgenerator%2Faddassign-yield.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Regression test for broken MIR error (#61442)\n // Due to the two possible evaluation orders for\n // a '+=' expression (depending on whether or not the 'AddAssign' trait"}, {"sha": "bb33502815bf8dd8ea11c4b4457016ee01d1f43b", "filename": "src/test/run-pass/generator/drop-and-replace.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fgenerator%2Fdrop-and-replace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fgenerator%2Fdrop-and-replace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgenerator%2Fdrop-and-replace.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Regression test for incorrect DropAndReplace behavior introduced in #60840\n // and fixed in #61373. When combined with the optimization implemented in\n // #60187, this produced incorrect code for generators when a saved local was"}, {"sha": "101c8714fa8707b5e972959e5ed185d423cdca44", "filename": "src/test/run-pass/generator/overlap-locals.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fgenerator%2Foverlap-locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fgenerator%2Foverlap-locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgenerator%2Foverlap-locals.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(generators)]\n \n fn main() {"}, {"sha": "01db971434bbc8c9e0e36ab34cdd41dbc854ba33", "filename": "src/test/run-pass/generator/size-moved-locals.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fgenerator%2Fsize-moved-locals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fgenerator%2Fsize-moved-locals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fgenerator%2Fsize-moved-locals.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Test that we don't duplicate storage for a variable that is moved to another\n // binding. This used to happen in the presence of unwind and drop edges (see\n // `complex` below.)"}, {"sha": "944eee5afc307e7ee99ebbc901b3b7a40639bdf6", "filename": "src/test/run-pass/global-scope.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fglobal-scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fglobal-scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fglobal-scope.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn f() -> isize { return 1; }\n \n pub mod foo {"}, {"sha": "b74f162c0c62225cb8dcb9c0fe0bea3148d9f3f6", "filename": "src/test/run-pass/guards-not-exhaustive.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fguards-not-exhaustive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fguards-not-exhaustive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fguards-not-exhaustive.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_snake_case)]\n \n #[derive(Copy, Clone)]"}, {"sha": "10a4bb6738781681e4d9e9b995379d9f4e75a116", "filename": "src/test/run-pass/guards.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fguards.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fguards.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fguards.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_shorthand_field_patterns)]\n \n #[derive(Copy, Clone)]"}, {"sha": "3129eb0da82f9a5f89528be675b5e796b5363fdf", "filename": "src/test/run-pass/hashmap-memory.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhashmap-memory.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_camel_case_types)]\n #![allow(dead_code)]\n #![allow(unused_mut)]"}, {"sha": "c207c25545eca6b80e4656a0371f98a6f8c41e5c", "filename": "src/test/run-pass/hello.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fhello.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fhello.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhello.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn main() {\n     println!(\"hello, world\");\n }"}, {"sha": "ae45e97c8b07070aac07e01fa68c54800ccfe289", "filename": "src/test/run-pass/html-literals.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fhtml-literals.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fhtml-literals.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fhtml-literals.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_camel_case_types)]\n // A test of the macro system. Can we do HTML literals?\n "}, {"sha": "0f09db530d45e626a8265384ed022ce575c431d8", "filename": "src/test/run-pass/if-bot.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fif-bot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fif-bot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fif-bot.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub fn main() {\n     let i: isize = if false { panic!() } else { 5 };\n     println!(\"{}\", i);"}, {"sha": "6593225e7dd95ab549ab69c91c185a79bbde2be8", "filename": "src/test/run-pass/if-check.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fif-check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fif-check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fif-check.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n fn even(x: usize) -> bool {\n     if x < 2 {\n         return false;"}, {"sha": "e1e795d83bea2f586efbd2b41c1eed4bce2e151b", "filename": "src/test/run-pass/if-ret.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fif-ret.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fif-ret.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fif-ret.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_parens)]\n // pretty-expanded FIXME #23616\n "}, {"sha": "73402e55a4fd835f0f08086b800d611f9b9546e5", "filename": "src/test/run-pass/if-ret.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fif-ret.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fif-ret.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fif-ret.stderr?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,5 +1,5 @@\n warning: unreachable block in `if` expression\n-  --> $DIR/if-ret.rs:4:24\n+  --> $DIR/if-ret.rs:6:24\n    |\n LL | fn foo() { if (return) { } }\n    |                        ^^^"}, {"sha": "841be20ef8645c17e6dbc1e342ee71b376b15c6b", "filename": "src/test/run-pass/ifmt.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fifmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fifmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fifmt.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![deny(warnings)]\n #![allow(unused_must_use)]\n #![allow(unused_features)]"}, {"sha": "8c046a289fad2f16f79ac65a5f320d789c92b289", "filename": "src/test/run-pass/ignore-all-the-things.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fignore-all-the-things.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fignore-all-the-things.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fignore-all-the-things.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_shorthand_field_patterns)]\n #![allow(dead_code)]\n #![allow(unused_variables)]"}, {"sha": "c5f12981ecc26487ec8b77b61c6c93c20bd81942", "filename": "src/test/run-pass/impl-for-never.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fimpl-for-never.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fimpl-for-never.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-for-never.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Test that we can call static methods on ! both directly and when it appears in a generic\n \n #![feature(never_type)]"}, {"sha": "be524f87c9fb1303111f63924df4a140b48585e3", "filename": "src/test/run-pass/impl-inherent-non-conflict.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fimpl-inherent-non-conflict.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fimpl-inherent-non-conflict.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-inherent-non-conflict.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Ensure that a user-defined type admits multiple inherent methods\n // with the same name, which can be called on values that have a\n // precise enough type to allow distinguishing between the methods."}, {"sha": "97caf908387784e094af4d65edd355a97ac9eb25", "filename": "src/test/run-pass/impl-not-adjacent-to-type.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fimpl-not-adjacent-to-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fimpl-not-adjacent-to-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-not-adjacent-to-type.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n mod foo {\n     pub struct Point {\n         pub x: i32,"}, {"sha": "c9f7f09c7bd0e9fbbf70e1be60643f683245e903", "filename": "src/test/run-pass/impl-privacy-xc-1.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-1.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:impl_privacy_xc_1.rs\n \n // pretty-expanded FIXME #23616"}, {"sha": "390764588fc87a369b7d39515dfb5ea255331496", "filename": "src/test/run-pass/impl-privacy-xc-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-2.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:impl_privacy_xc_2.rs\n \n extern crate impl_privacy_xc_2;"}, {"sha": "2e9b6cd5c78d445e5cc3a617a0817f0c61375b9a", "filename": "src/test/run-pass/impl-trait-in-bindings.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fimpl-trait-in-bindings.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fimpl-trait-in-bindings.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait-in-bindings.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(impl_trait_in_bindings)]\n //~^ WARN the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n "}, {"sha": "54b42a102fa1ec141dedfedfd38069584df852d9", "filename": "src/test/run-pass/impl-trait-in-bindings.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fimpl-trait-in-bindings.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fimpl-trait-in-bindings.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-trait-in-bindings.stderr?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,5 +1,5 @@\n warning: the feature `impl_trait_in_bindings` is incomplete and may cause the compiler to crash\n-  --> $DIR/impl-trait-in-bindings.rs:1:12\n+  --> $DIR/impl-trait-in-bindings.rs:3:12\n    |\n LL | #![feature(impl_trait_in_bindings)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "c9f7d28699e0eaf6a7d43403665a8eb54a28967d", "filename": "src/test/run-pass/in-band-lifetimes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fin-band-lifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fin-band-lifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fin-band-lifetimes.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(warnings)]\n #![feature(in_band_lifetimes)]\n "}, {"sha": "1eb7dd0aa3e7a08ff1b9b01c4519ed59b99db591", "filename": "src/test/run-pass/inc-range-pat.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finc-range-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finc-range-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finc-range-pat.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // Test old and new syntax for inclusive range patterns.\n \n #![allow(ellipsis_inclusive_range_patterns)]"}, {"sha": "413b1877a29fd117f0eeb1b2280e23d4d66cf59a", "filename": "src/test/run-pass/infer-fn-tail-expr.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finfer-fn-tail-expr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finfer-fn-tail-expr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finfer-fn-tail-expr.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n // issue #680\n "}, {"sha": "e29fa04bbd50ba58d6daee9a5e591b1bdf6eecc7", "filename": "src/test/run-pass/inherit-env.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finherit-env.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finherit-env.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finherit-env.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // ignore-emscripten\n // ignore-wasm32\n // ignore-sgx no processes"}, {"sha": "a304fc9356b510fdf4f5fdec972f095aa8215e77", "filename": "src/test/run-pass/init-large-type.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finit-large-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finit-large-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finit-large-type.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_must_use)]\n // Makes sure that zero-initializing large types is reasonably fast,\n // Doing it incorrectly causes massive slowdown in LLVM during"}, {"sha": "ed0c600c1d2e75e4044fd53665f04708487ae5db", "filename": "src/test/run-pass/init-res-into-things.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finit-res-into-things.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_camel_case_types)]\n #![allow(dead_code)]\n #![feature(box_syntax)]"}, {"sha": "75ff4c87dc618123630783aeb710a90395baf632", "filename": "src/test/run-pass/inlined-main.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finlined-main.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finlined-main.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finlined-main.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,2 +1,4 @@\n+// run-pass\n+\n #[inline(always)]\n fn main() {}"}, {"sha": "636e8c4885e6f2ab9736bbf30f602ca8ceae7dbc", "filename": "src/test/run-pass/inner-attrs-on-impl.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finner-attrs-on-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finner-attrs-on-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finner-attrs-on-impl.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n struct Foo;\n \n impl Foo {"}, {"sha": "363f753e248729829c5dafb3547c69a99e30ee98", "filename": "src/test/run-pass/inner-module.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finner-module.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finner-module.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finner-module.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n mod inner {\n     pub mod inner2 {\n         pub fn hello() { println!(\"hello, modular world\"); }"}, {"sha": "adba299ebe22df8512c455cd8a567583d0e9c24f", "filename": "src/test/run-pass/inner-static.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finner-static.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finner-static.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finner-static.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:inner_static.rs\n \n "}, {"sha": "ad0cf3f4ac9179b314ca9fe6dab7b67130ea1577", "filename": "src/test/run-pass/instantiable.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finstantiable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finstantiable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finstantiable.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(non_camel_case_types)]\n #![allow(dead_code)]\n // pretty-expanded FIXME #23616"}, {"sha": "6d59bb385dc7d416dca539241d55d92c79e0af86", "filename": "src/test/run-pass/invalid_const_promotion.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finvalid_const_promotion.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(unused_mut)]\n // ignore-wasm32\n // ignore-emscripten"}, {"sha": "dbd2b4ad8655ed133ea9061064d08bcce235dd04", "filename": "src/test/run-pass/invoke-external-foreign.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Finvoke-external-foreign.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // aux-build:foreign_lib.rs\n // ignore-wasm32-bare no libc to test ffi with\n "}, {"sha": "dd8f03b6dbd591b9892e8c3c924395bfd43b4f16", "filename": "src/test/run-pass/irrefutable-unit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Firrefutable-unit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Firrefutable-unit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Firrefutable-unit.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // pretty-expanded FIXME #23616\n \n pub fn main() {"}, {"sha": "f1818533487f61c0d2cefce10cb54a41b8c200cb", "filename": "src/test/run-pass/issues/issue-24010.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fissues%2Fissue-24010.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fissues%2Fissue-24010.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-24010.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n trait Foo: Fn(i32) -> i32 + Send {}\n \n impl<T: ?Sized + Fn(i32) -> i32 + Send> Foo for T {}"}, {"sha": "3a862ace55eccdf71da59d61ef7fd6307f275fcc", "filename": "src/test/run-pass/issues/issue-48006.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fissues%2Fissue-48006.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fissues%2Fissue-48006.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-48006.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![feature(step_trait)]\n \n use std::iter::Step;"}, {"sha": "77b5010f77675e7e86c38ac6482a018179907466", "filename": "src/test/run-pass/issues/issue-53728.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fissues%2Fissue-53728.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fissues%2Fissue-53728.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-53728.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n #![allow(dead_code)]\n #[repr(u16)]\n enum DeviceKind {"}, {"sha": "f305b370ce62a1bf3c8916f1ca38c14c9e497e49", "filename": "src/test/run-pass/issues/issue-53843.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fissues%2Fissue-53843.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fissues%2Fissue-53843.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-53843.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n use std::ops::Deref;\n \n pub struct Pin<P>(P);"}, {"sha": "412028bdcdcbb402404cd1af12f5bf44c1c99eae", "filename": "src/test/run-pass/issues/issue-54462-mutable-noalias-correctness.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fissues%2Fissue-54462-mutable-noalias-correctness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fissues%2Fissue-54462-mutable-noalias-correctness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-54462-mutable-noalias-correctness.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n //\n // compile-flags: -Ccodegen-units=1 -O\n "}, {"sha": "734bf2768c2a35506bfbfbb8ddb8bd9c74542efe", "filename": "src/test/run-pass/issues/issue-54467.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fissues%2Fissue-54467.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fissues%2Fissue-54467.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-54467.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,5 @@\n+// run-pass\n+\n pub trait Stream {\n     type Item;\n     type Error;"}, {"sha": "199d69b45404cf37444951b402e0f025c10a435c", "filename": "src/test/run-pass/issues/issue-54477-reduced-2.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fissues%2Fissue-54477-reduced-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ca9faa52f5ada0054b1fa27d97aedf448afb059b/src%2Ftest%2Frun-pass%2Fissues%2Fissue-54477-reduced-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fissues%2Fissue-54477-reduced-2.rs?ref=ca9faa52f5ada0054b1fa27d97aedf448afb059b", "patch": "@@ -1,3 +1,4 @@\n+// run-pass\n // rust-lang/rust#54477: runtime bug in the VecDeque library that was\n // exposed by this test case, derived from test suite of crates.io\n // `collection` crate."}]}