{"sha": "f6c40c09e0b5afa1b341ab7675c815862e07d22a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2YzQwYzA5ZTBiNWFmYTFiMzQxYWI3Njc1YzgxNTg2MmUwN2QyMmE=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-09T09:49:35Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-11-09T09:49:35Z"}, "message": "Minor cleanup", "tree": {"sha": "72c427f5cf233cc7dc94f3f6bfc7eef178270edf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/72c427f5cf233cc7dc94f3f6bfc7eef178270edf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6c40c09e0b5afa1b341ab7675c815862e07d22a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6c40c09e0b5afa1b341ab7675c815862e07d22a", "html_url": "https://github.com/rust-lang/rust/commit/f6c40c09e0b5afa1b341ab7675c815862e07d22a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6c40c09e0b5afa1b341ab7675c815862e07d22a/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "561bb979cecd786f5d311ea7bddb1e15d77a3848", "url": "https://api.github.com/repos/rust-lang/rust/commits/561bb979cecd786f5d311ea7bddb1e15d77a3848", "html_url": "https://github.com/rust-lang/rust/commit/561bb979cecd786f5d311ea7bddb1e15d77a3848"}], "stats": {"total": 14, "additions": 8, "deletions": 6}, "files": [{"sha": "151d1d7858ed881459f464af6a3eae26339fc6d3", "filename": "crates/ra_hir_expand/src/lib.rs", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/f6c40c09e0b5afa1b341ab7675c815862e07d22a/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6c40c09e0b5afa1b341ab7675c815862e07d22a/crates%2Fra_hir_expand%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Flib.rs?ref=f6c40c09e0b5afa1b341ab7675c815862e07d22a", "patch": "@@ -151,19 +151,21 @@ pub struct ExpansionInfo {\n \n impl ExpansionInfo {\n     pub fn find_range(&self, from: TextRange) -> Option<(HirFileId, TextRange)> {\n-        fn look_in_rev_map(exp_map: &mbe::RevTokenMap, from: TextRange) -> Option<tt::TokenId> {\n-            exp_map.ranges.iter().find(|&it| it.0.is_subrange(&from)).map(|it| it.1)\n-        }\n-\n         let token_id = look_in_rev_map(&self.exp_map, from)?;\n-        let (token_map, file_offset, token_id) = if token_id.0 >= self.shift {\n+\n+        let (token_map, (file_id, start_offset), token_id) = if token_id.0 >= self.shift {\n             (&self.macro_arg.1, self.arg_start, tt::TokenId(token_id.0 - self.shift).into())\n         } else {\n             (&self.macro_def.1, self.def_start, token_id)\n         };\n \n         let range = token_map.relative_range_of(token_id)?;\n-        Some((file_offset.0, TextRange::offset_len(range.start() + file_offset.1, range.len())))\n+\n+        return Some((file_id, range + start_offset));\n+\n+        fn look_in_rev_map(exp_map: &mbe::RevTokenMap, from: TextRange) -> Option<tt::TokenId> {\n+            exp_map.ranges.iter().find(|&it| it.0.is_subrange(&from)).map(|it| it.1)\n+        }\n     }\n }\n "}]}