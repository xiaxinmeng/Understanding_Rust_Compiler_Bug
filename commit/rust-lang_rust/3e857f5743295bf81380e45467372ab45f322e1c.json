{"sha": "3e857f5743295bf81380e45467372ab45f322e1c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlODU3ZjU3NDMyOTViZjgxMzgwZTQ1NDY3MzcyYWI0NWYzMjJlMWM=", "commit": {"author": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-07-19T12:21:27Z"}, "committer": {"name": "Santiago Pastorino", "email": "spastorino@gmail.com", "date": "2021-07-19T13:19:58Z"}, "message": "Improve impl trait disallowed context error text", "tree": {"sha": "8806bb921b9250ffd55cc7cef7833751d6578748", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8806bb921b9250ffd55cc7cef7833751d6578748"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3e857f5743295bf81380e45467372ab45f322e1c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEF0ntrgrd9qf9uuThgTGiTgx5768FAmD1fAAACgkQgTGiTgx5\n7688mRAAuNVcyNzNOQz9njAXpRnx0QAZIgVy4roOgef+TNGQzk2qNyiuxW+EyPve\nXh4V+q982AE6LAurYAUk4XgkyACdGKRFfUHoH7GqLYePTnSgjwuPdI/En7uNtPMr\nUYBYruL7bc4XwLBJdnmAY4Qtl1U+x1G86ZYTTEtIs01TB4n5KOTKjtU67Rq8kba5\nUy4pZ/CXpX5FzwhDe+G3DiGKBGd03Toa9DpH/umpNLmQPyZmnPUeMoSBo3BIOVRU\njo+9SY5SqVcZ1HRP+Re6b9fGtUGdOLI/cfM/2KsBpNhh/W6tJivZUhhroZxz4ZEu\nf7MzZK9TJl13fDHmeALU+ddG390lwrHmz63W6XkZn4DsrmZSWrYKyaLQi8R9oPhc\njCGGt0TMGRAsIht6pwb7ZIHD70EyH3czIwSjxpwGmCoeV28Gfj/zlvY9ekFJ0Ri9\nWiBkcho7PSeXY3pPvyZGLcC6qyTV5RnCThkmmE6x6tmg4zR6u+W4jyQvAkegx0nt\nReTc29e4XiYBAzlJdvWe0vUz77wVwhGTg+ur4tdBmU6Ua2DIn5A9hHT3QY7MSRor\nEnIMgOJ4h8PFuVwCHT17DsQJHbKNa1NbiyTS7eM7U7LGdnE0qLJmP3wjOz/3Zh+6\nS9vAcZbpyRM2oPl5z9tNWfCRImsyxIXxwJm+Eth/WJCNibEaSqs=\n=eOmz\n-----END PGP SIGNATURE-----", "payload": "tree 8806bb921b9250ffd55cc7cef7833751d6578748\nparent e0745e8f5d40626a4fa7a82d396c50d879f5dc0a\nauthor Santiago Pastorino <spastorino@gmail.com> 1626697287 -0300\ncommitter Santiago Pastorino <spastorino@gmail.com> 1626700798 -0300\n\nImprove impl trait disallowed context error text\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3e857f5743295bf81380e45467372ab45f322e1c", "html_url": "https://github.com/rust-lang/rust/commit/3e857f5743295bf81380e45467372ab45f322e1c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3e857f5743295bf81380e45467372ab45f322e1c/comments", "author": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "committer": {"login": "spastorino", "id": 52642, "node_id": "MDQ6VXNlcjUyNjQy", "avatar_url": "https://avatars.githubusercontent.com/u/52642?v=4", "gravatar_id": "", "url": "https://api.github.com/users/spastorino", "html_url": "https://github.com/spastorino", "followers_url": "https://api.github.com/users/spastorino/followers", "following_url": "https://api.github.com/users/spastorino/following{/other_user}", "gists_url": "https://api.github.com/users/spastorino/gists{/gist_id}", "starred_url": "https://api.github.com/users/spastorino/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/spastorino/subscriptions", "organizations_url": "https://api.github.com/users/spastorino/orgs", "repos_url": "https://api.github.com/users/spastorino/repos", "events_url": "https://api.github.com/users/spastorino/events{/privacy}", "received_events_url": "https://api.github.com/users/spastorino/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e0745e8f5d40626a4fa7a82d396c50d879f5dc0a", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0745e8f5d40626a4fa7a82d396c50d879f5dc0a", "html_url": "https://github.com/rust-lang/rust/commit/e0745e8f5d40626a4fa7a82d396c50d879f5dc0a"}], "stats": {"total": 200, "additions": 100, "deletions": 100}, "files": [{"sha": "d4caba924160088c892f4e487b172ef809bd3a51", "filename": "compiler/rustc_ast_lowering/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e857f5743295bf81380e45467372ab45f322e1c/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e857f5743295bf81380e45467372ab45f322e1c/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_lowering%2Fsrc%2Flib.rs?ref=3e857f5743295bf81380e45467372ab45f322e1c", "patch": "@@ -1466,7 +1466,7 @@ impl<'a, 'hir> LoweringContext<'a, 'hir> {\n                             t.span,\n                             E0562,\n                             \"`impl Trait` not allowed outside of {}\",\n-                            \"function and inherent method return types\",\n+                            \"function and method return types\",\n                         );\n                         err.emit();\n                         hir::TyKind::Err"}, {"sha": "1e48996acb83346f9cd4390423146d6b2601a428", "filename": "src/test/ui/feature-gates/feature-gate-associated_type_bounds.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.rs?ref=3e857f5743295bf81380e45467372ab45f322e1c", "patch": "@@ -57,20 +57,20 @@ fn _rpit_dyn() -> Box<dyn Tr1<As1: Copy>> { Box::new(S1) }\n \n const _cdef: impl Tr1<As1: Copy> = S1;\n //~^ ERROR associated type bounds are unstable\n-//~| ERROR `impl Trait` not allowed outside of function and inherent method return types [E0562]\n+//~| ERROR `impl Trait` not allowed outside of function and method return types [E0562]\n // FIXME: uncomment when `impl_trait_in_bindings` feature is fixed.\n // const _cdef_dyn: &dyn Tr1<As1: Copy> = &S1;\n \n static _sdef: impl Tr1<As1: Copy> = S1;\n //~^ ERROR associated type bounds are unstable\n-//~| ERROR `impl Trait` not allowed outside of function and inherent method return types [E0562]\n+//~| ERROR `impl Trait` not allowed outside of function and method return types [E0562]\n // FIXME: uncomment when `impl_trait_in_bindings` feature is fixed.\n // static _sdef_dyn: &dyn Tr1<As1: Copy> = &S1;\n \n fn main() {\n     let _: impl Tr1<As1: Copy> = S1;\n     //~^ ERROR associated type bounds are unstable\n-    //~| ERROR `impl Trait` not allowed outside of function and inherent method return types [E0562]\n+    //~| ERROR `impl Trait` not allowed outside of function and method return types [E0562]\n     // FIXME: uncomment when `impl_trait_in_bindings` feature is fixed.\n     // let _: &dyn Tr1<As1: Copy> = &S1;\n }"}, {"sha": "2dacb94bcc07a7dad743f01c0b6674f888abec0a", "filename": "src/test/ui/feature-gates/feature-gate-associated_type_bounds.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-associated_type_bounds.stderr?ref=3e857f5743295bf81380e45467372ab45f322e1c", "patch": "@@ -115,19 +115,19 @@ LL |     let _: impl Tr1<As1: Copy> = S1;\n    = note: see issue #52662 <https://github.com/rust-lang/rust/issues/52662> for more information\n    = help: add `#![feature(associated_type_bounds)]` to the crate attributes to enable\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/feature-gate-associated_type_bounds.rs:58:14\n    |\n LL | const _cdef: impl Tr1<As1: Copy> = S1;\n    |              ^^^^^^^^^^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/feature-gate-associated_type_bounds.rs:64:15\n    |\n LL | static _sdef: impl Tr1<As1: Copy> = S1;\n    |               ^^^^^^^^^^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/feature-gate-associated_type_bounds.rs:71:12\n    |\n LL |     let _: impl Tr1<As1: Copy> = S1;"}, {"sha": "07857289aaeb55a34488bdbd049e110f80153a62", "filename": "src/test/ui/feature-gates/feature-gate-min_type_alias_impl_trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_type_alias_impl_trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_type_alias_impl_trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-min_type_alias_impl_trait.stderr?ref=3e857f5743295bf81380e45467372ab45f322e1c", "patch": "@@ -106,7 +106,7 @@ LL |     type Baa = (Vec<impl Debug>, impl Debug, impl Iterator<Item = impl Debu\n    = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\n    = help: add `#![feature(min_type_alias_impl_trait)]` to the crate attributes to enable\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/feature-gate-min_type_alias_impl_trait.rs:23:18\n    |\n LL |     type Assoc = impl Debug;"}, {"sha": "773cd0b81cc53ff6a2960ebee538d402a094ce3b", "filename": "src/test/ui/impl-trait/issues/issue-83929-impl-trait-in-generic-default.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-83929-impl-trait-in-generic-default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-83929-impl-trait-in-generic-default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-83929-impl-trait-in-generic-default.rs?ref=3e857f5743295bf81380e45467372ab45f322e1c", "patch": "@@ -1,8 +1,8 @@\n struct Foo<T = impl Copy>(T);\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n type Result<T, E = impl std::error::Error> = std::result::Result<T, E>;\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // should not cause ICE\n fn x() -> Foo {"}, {"sha": "d44dcf1f7fa2377c70220369bcab8dc95cb071de", "filename": "src/test/ui/impl-trait/issues/issue-83929-impl-trait-in-generic-default.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-83929-impl-trait-in-generic-default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-83929-impl-trait-in-generic-default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fissues%2Fissue-83929-impl-trait-in-generic-default.stderr?ref=3e857f5743295bf81380e45467372ab45f322e1c", "patch": "@@ -1,10 +1,10 @@\n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/issue-83929-impl-trait-in-generic-default.rs:1:16\n    |\n LL | struct Foo<T = impl Copy>(T);\n    |                ^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/issue-83929-impl-trait-in-generic-default.rs:4:20\n    |\n LL | type Result<T, E = impl std::error::Error> = std::result::Result<T, E>;"}, {"sha": "59c7e4d5f4e92b8aa0a8867f5e04120567f9a026", "filename": "src/test/ui/impl-trait/nested_impl_trait.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Fimpl-trait%2Fnested_impl_trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Fimpl-trait%2Fnested_impl_trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fnested_impl_trait.stderr?ref=3e857f5743295bf81380e45467372ab45f322e1c", "patch": "@@ -34,13 +34,13 @@ LL |     fn bad(x: impl Into<u32>) -> impl Into<impl Debug> { x }\n    |                                  |         nested `impl Trait` here\n    |                                  outer `impl Trait`\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/nested_impl_trait.rs:8:32\n    |\n LL | fn bad_in_fn_syntax(x: fn() -> impl Into<impl Debug>) {}\n    |                                ^^^^^^^^^^^^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/nested_impl_trait.rs:25:42\n    |\n LL | fn allowed_in_ret_type() -> impl Fn() -> impl Into<u32> {"}, {"sha": "4605e76ac96d28a44cb50f3563daee0b2be0d873", "filename": "src/test/ui/impl-trait/where-allowed.rs", "status": "modified", "additions": 41, "deletions": 41, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.rs?ref=3e857f5743295bf81380e45467372ab45f322e1c", "patch": "@@ -13,61 +13,61 @@ fn in_adt_in_parameters(_: Vec<impl Debug>) { panic!() }\n \n // Disallowed\n fn in_fn_parameter_in_parameters(_: fn(impl Debug)) { panic!() }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n fn in_fn_return_in_parameters(_: fn() -> impl Debug) { panic!() }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n fn in_fn_parameter_in_return() -> fn(impl Debug) { panic!() }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n fn in_fn_return_in_return() -> fn() -> impl Debug { panic!() }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n fn in_dyn_Fn_parameter_in_parameters(_: &dyn Fn(impl Debug)) { panic!() }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n fn in_dyn_Fn_return_in_parameters(_: &dyn Fn() -> impl Debug) { panic!() }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n fn in_dyn_Fn_parameter_in_return() -> &'static dyn Fn(impl Debug) { panic!() }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n fn in_dyn_Fn_return_in_return() -> &'static dyn Fn() -> impl Debug { panic!() }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n fn in_impl_Fn_parameter_in_parameters(_: &impl Fn(impl Debug)) { panic!() }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n //~^^ ERROR nested `impl Trait` is not allowed\n \n // Disallowed\n fn in_impl_Fn_return_in_parameters(_: &impl Fn() -> impl Debug) { panic!() }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n fn in_impl_Fn_parameter_in_return() -> &'static impl Fn(impl Debug) { panic!() }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n //~| ERROR nested `impl Trait` is not allowed\n \n // Disallowed\n fn in_impl_Fn_return_in_return() -> &'static impl Fn() -> impl Debug { panic!() }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n fn in_Fn_parameter_in_generics<F: Fn(impl Debug)> (_: F) { panic!() }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n fn in_Fn_return_in_generics<F: Fn() -> impl Debug> (_: F) { panic!() }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n \n // Allowed\n@@ -80,22 +80,22 @@ fn in_impl_Trait_in_return() -> impl IntoIterator<Item = impl IntoIterator> {\n \n // Disallowed\n struct InBraceStructField { x: impl Debug }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n struct InAdtInBraceStructField { x: Vec<impl Debug> }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n struct InTupleStructField(impl Debug);\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n enum InEnum {\n     InBraceVariant { x: impl Debug },\n-    //~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+    //~^ ERROR `impl Trait` not allowed outside of function and method return types\n     InTupleVariant(impl Debug),\n-    //~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+    //~^ ERROR `impl Trait` not allowed outside of function and method return types\n }\n \n // Allowed\n@@ -106,7 +106,7 @@ trait InTraitDefnParameters {\n // Disallowed\n trait InTraitDefnReturn {\n     fn in_return() -> impl Debug;\n-    //~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+    //~^ ERROR `impl Trait` not allowed outside of function and method return types\n }\n \n // Allowed and disallowed in trait impls\n@@ -123,7 +123,7 @@ impl DummyTrait for () {\n     // Allowed\n \n     fn in_trait_impl_return() -> impl Debug { () }\n-    //~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+    //~^ ERROR `impl Trait` not allowed outside of function and method return types\n }\n \n // Allowed\n@@ -136,10 +136,10 @@ impl DummyType {\n // Disallowed\n extern \"C\" {\n     fn in_foreign_parameters(_: impl Debug);\n-    //~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+    //~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n     fn in_foreign_return() -> impl Debug;\n-    //~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+    //~^ ERROR `impl Trait` not allowed outside of function and method return types\n }\n \n // Allowed\n@@ -155,96 +155,96 @@ type InTypeAlias<R> = impl Debug;\n //~^ ERROR `impl Trait` in type aliases is unstable\n \n type InReturnInTypeAlias<R> = fn() -> impl Debug;\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n //~| ERROR `impl Trait` in type aliases is unstable\n \n // Disallowed in impl headers\n impl PartialEq<impl Debug> for () {\n-    //~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+    //~^ ERROR `impl Trait` not allowed outside of function and method return types\n }\n \n // Disallowed in impl headers\n impl PartialEq<()> for impl Debug {\n-    //~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+    //~^ ERROR `impl Trait` not allowed outside of function and method return types\n }\n \n // Disallowed in inherent impls\n impl impl Debug {\n-    //~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+    //~^ ERROR `impl Trait` not allowed outside of function and method return types\n }\n \n // Disallowed in inherent impls\n struct InInherentImplAdt<T> { t: T }\n impl InInherentImplAdt<impl Debug> {\n-    //~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+    //~^ ERROR `impl Trait` not allowed outside of function and method return types\n }\n \n // Disallowed in where clauses\n fn in_fn_where_clause()\n     where impl Debug: Debug\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n {\n }\n \n // Disallowed in where clauses\n fn in_adt_in_fn_where_clause()\n     where Vec<impl Debug>: Debug\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n {\n }\n \n // Disallowed\n fn in_trait_parameter_in_fn_where_clause<T>()\n     where T: PartialEq<impl Debug>\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n {\n }\n \n // Disallowed\n fn in_Fn_parameter_in_fn_where_clause<T>()\n     where T: Fn(impl Debug)\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n {\n }\n \n // Disallowed\n fn in_Fn_return_in_fn_where_clause<T>()\n     where T: Fn() -> impl Debug\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n {\n }\n \n // Disallowed\n struct InStructGenericParamDefault<T = impl Debug>(T);\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n enum InEnumGenericParamDefault<T = impl Debug> { Variant(T) }\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n trait InTraitGenericParamDefault<T = impl Debug> {}\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n type InTypeAliasGenericParamDefault<T = impl Debug> = T;\n-//~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~^ ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n impl <T = impl Debug> T {}\n //~^ ERROR defaults for type parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions\n //~| WARNING this was previously accepted by the compiler but is being phased out\n-//~| ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~| ERROR `impl Trait` not allowed outside of function and method return types\n \n // Disallowed\n fn in_method_generic_param_default<T = impl Debug>(_: T) {}\n //~^ ERROR defaults for type parameters are only allowed in `struct`, `enum`, `type`, or `trait` definitions\n //~| WARNING this was previously accepted by the compiler but is being phased out\n-//~| ERROR `impl Trait` not allowed outside of function and inherent method return types\n+//~| ERROR `impl Trait` not allowed outside of function and method return types\n \n fn main() {\n     let _in_local_variable: impl Fn() = || {};\n-    //~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+    //~^ ERROR `impl Trait` not allowed outside of function and method return types\n     let _in_return_in_local_variable = || -> impl Fn() { || {} };\n-    //~^ ERROR `impl Trait` not allowed outside of function and inherent method return types\n+    //~^ ERROR `impl Trait` not allowed outside of function and method return types\n }"}, {"sha": "93a3de61ccf8aeb2f79a8ccfb5aeb9a164cc9a11", "filename": "src/test/ui/impl-trait/where-allowed.stderr", "status": "modified", "additions": 41, "deletions": 41, "changes": 82, "blob_url": "https://github.com/rust-lang/rust/blob/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fwhere-allowed.stderr?ref=3e857f5743295bf81380e45467372ab45f322e1c", "patch": "@@ -43,247 +43,247 @@ LL | type InReturnInTypeAlias<R> = fn() -> impl Debug;\n    = note: see issue #63063 <https://github.com/rust-lang/rust/issues/63063> for more information\n    = help: add `#![feature(min_type_alias_impl_trait)]` to the crate attributes to enable\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:15:40\n    |\n LL | fn in_fn_parameter_in_parameters(_: fn(impl Debug)) { panic!() }\n    |                                        ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:19:42\n    |\n LL | fn in_fn_return_in_parameters(_: fn() -> impl Debug) { panic!() }\n    |                                          ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:23:38\n    |\n LL | fn in_fn_parameter_in_return() -> fn(impl Debug) { panic!() }\n    |                                      ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:27:40\n    |\n LL | fn in_fn_return_in_return() -> fn() -> impl Debug { panic!() }\n    |                                        ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:31:49\n    |\n LL | fn in_dyn_Fn_parameter_in_parameters(_: &dyn Fn(impl Debug)) { panic!() }\n    |                                                 ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:35:51\n    |\n LL | fn in_dyn_Fn_return_in_parameters(_: &dyn Fn() -> impl Debug) { panic!() }\n    |                                                   ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:39:55\n    |\n LL | fn in_dyn_Fn_parameter_in_return() -> &'static dyn Fn(impl Debug) { panic!() }\n    |                                                       ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:43:57\n    |\n LL | fn in_dyn_Fn_return_in_return() -> &'static dyn Fn() -> impl Debug { panic!() }\n    |                                                         ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:47:51\n    |\n LL | fn in_impl_Fn_parameter_in_parameters(_: &impl Fn(impl Debug)) { panic!() }\n    |                                                   ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:52:53\n    |\n LL | fn in_impl_Fn_return_in_parameters(_: &impl Fn() -> impl Debug) { panic!() }\n    |                                                     ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:56:57\n    |\n LL | fn in_impl_Fn_parameter_in_return() -> &'static impl Fn(impl Debug) { panic!() }\n    |                                                         ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:61:59\n    |\n LL | fn in_impl_Fn_return_in_return() -> &'static impl Fn() -> impl Debug { panic!() }\n    |                                                           ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:65:38\n    |\n LL | fn in_Fn_parameter_in_generics<F: Fn(impl Debug)> (_: F) { panic!() }\n    |                                      ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:69:40\n    |\n LL | fn in_Fn_return_in_generics<F: Fn() -> impl Debug> (_: F) { panic!() }\n    |                                        ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:82:32\n    |\n LL | struct InBraceStructField { x: impl Debug }\n    |                                ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:86:41\n    |\n LL | struct InAdtInBraceStructField { x: Vec<impl Debug> }\n    |                                         ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:90:27\n    |\n LL | struct InTupleStructField(impl Debug);\n    |                           ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:95:25\n    |\n LL |     InBraceVariant { x: impl Debug },\n    |                         ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:97:20\n    |\n LL |     InTupleVariant(impl Debug),\n    |                    ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:108:23\n    |\n LL |     fn in_return() -> impl Debug;\n    |                       ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:125:34\n    |\n LL |     fn in_trait_impl_return() -> impl Debug { () }\n    |                                  ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:138:33\n    |\n LL |     fn in_foreign_parameters(_: impl Debug);\n    |                                 ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:141:31\n    |\n LL |     fn in_foreign_return() -> impl Debug;\n    |                               ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:157:39\n    |\n LL | type InReturnInTypeAlias<R> = fn() -> impl Debug;\n    |                                       ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:162:16\n    |\n LL | impl PartialEq<impl Debug> for () {\n    |                ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:167:24\n    |\n LL | impl PartialEq<()> for impl Debug {\n    |                        ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:172:6\n    |\n LL | impl impl Debug {\n    |      ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:178:24\n    |\n LL | impl InInherentImplAdt<impl Debug> {\n    |                        ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:184:11\n    |\n LL |     where impl Debug: Debug\n    |           ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:191:15\n    |\n LL |     where Vec<impl Debug>: Debug\n    |               ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:198:24\n    |\n LL |     where T: PartialEq<impl Debug>\n    |                        ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:205:17\n    |\n LL |     where T: Fn(impl Debug)\n    |                 ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:212:22\n    |\n LL |     where T: Fn() -> impl Debug\n    |                      ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:218:40\n    |\n LL | struct InStructGenericParamDefault<T = impl Debug>(T);\n    |                                        ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:222:36\n    |\n LL | enum InEnumGenericParamDefault<T = impl Debug> { Variant(T) }\n    |                                    ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:226:38\n    |\n LL | trait InTraitGenericParamDefault<T = impl Debug> {}\n    |                                      ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:230:41\n    |\n LL | type InTypeAliasGenericParamDefault<T = impl Debug> = T;\n    |                                         ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:234:11\n    |\n LL | impl <T = impl Debug> T {}\n    |           ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:240:40\n    |\n LL | fn in_method_generic_param_default<T = impl Debug>(_: T) {}\n    |                                        ^^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:246:29\n    |\n LL |     let _in_local_variable: impl Fn() = || {};\n    |                             ^^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/where-allowed.rs:248:46\n    |\n LL |     let _in_return_in_local_variable = || -> impl Fn() { || {} };"}, {"sha": "63a28d997e11a04be36bc02d32df4544a2fc00f8", "filename": "src/test/ui/issues/issue-47715.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Fissues%2Fissue-47715.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3e857f5743295bf81380e45467372ab45f322e1c/src%2Ftest%2Fui%2Fissues%2Fissue-47715.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-47715.stderr?ref=3e857f5743295bf81380e45467372ab45f322e1c", "patch": "@@ -1,22 +1,22 @@\n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/issue-47715.rs:9:37\n    |\n LL | struct Container<T: Iterable<Item = impl Foo>> {\n    |                                     ^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/issue-47715.rs:14:30\n    |\n LL | enum Enum<T: Iterable<Item = impl Foo>> {\n    |                              ^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/issue-47715.rs:19:32\n    |\n LL | union Union<T: Iterable<Item = impl Foo> + Copy> {\n    |                                ^^^^^^^^\n \n-error[E0562]: `impl Trait` not allowed outside of function and inherent method return types\n+error[E0562]: `impl Trait` not allowed outside of function and method return types\n   --> $DIR/issue-47715.rs:24:30\n    |\n LL | type Type<T: Iterable<Item = impl Foo>> = T;"}]}