{"sha": "dae63e98ce0c5d4f40c4c350e58e813057e88213", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhZTYzZTk4Y2UwYzVkNGY0MGM0YzM1MGU1OGU4MTMwNTdlODgyMTM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-06-07T05:55:41Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2019-06-07T05:55:41Z"}, "message": "Ignore sub-modules when skip-children is used", "tree": {"sha": "f09d6c90a20c3abae596daa2cb870d7ad0d712c5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f09d6c90a20c3abae596daa2cb870d7ad0d712c5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dae63e98ce0c5d4f40c4c350e58e813057e88213", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEvad8glYxF0mBkb3vPBMiIxeGBCYFAlz5/HcACgkQPBMiIxeG\nBCZdYw/7BjyTlz3PLsX8ZoNw28QNNlKg6BQaB/xc4WQEOUjUfOlFCeGS0BZUwjkb\nwKDQyHda8Xhh2/Y20KcnnB0icIB0vGG1aG+xt2A8OyHl98AcXxbTiBqYTD/Np9NG\n2+Ph570pklNSwiqTVbtYvt5i6Ar7w/1E/UuThMbm+vhSJ0R2QzWEOGu9In4Ud4xt\nntVUK87KRwDESBJKcfS1osZRgSv6kAg09Kum8FxzcEg5yC6q7+molOr1qg20iA+E\nHuGtJ1JZqDBqW0g5XCimOrknYoCCunL3xv3P2Xuzatwlp9rJs2PsN9rCr1WNVSPp\nhcOhbrFHR2WHypxMqx8K3K/FDehlIDVJ0iLjIGZft+nRNI+mLkacKOc0meV8s0j4\nSa/+evwL2LIHVd9MPWQfXdlEbYY7JK5wT0CqemmaI7FR9/qhTkPHG2iEE7u69Kra\nn2kkYzyFWeN955j+gT7430QBGc/An+v2K2RAYc8VeVJ2k52UsNCOeVgJ0vIXGOJB\nOhYZCcO70wDpplHjT7xArvNh63Iich+SHKHO6pruRDK9oL+u4bkldKWlqR4gaps3\ntMz5r6Rt6FPemBglUbir9iORRnPy0UWzWlncLXMpL2b2Ops4r6dtjLZCTfG77DTr\nsqc0NNb+SEebSjD217kSag5/siOhGSqLK+ZBD/4LLQCnWVERESg=\n=GTQP\n-----END PGP SIGNATURE-----", "payload": "tree f09d6c90a20c3abae596daa2cb870d7ad0d712c5\nparent 1c210eb3c673cea0479ec1307a91b4b36245dfa1\nauthor topecongiro <seuchida@gmail.com> 1559886941 +0900\ncommitter topecongiro <seuchida@gmail.com> 1559886941 +0900\n\nIgnore sub-modules when skip-children is used\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dae63e98ce0c5d4f40c4c350e58e813057e88213", "html_url": "https://github.com/rust-lang/rust/commit/dae63e98ce0c5d4f40c4c350e58e813057e88213", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dae63e98ce0c5d4f40c4c350e58e813057e88213/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1c210eb3c673cea0479ec1307a91b4b36245dfa1", "url": "https://api.github.com/repos/rust-lang/rust/commits/1c210eb3c673cea0479ec1307a91b4b36245dfa1", "html_url": "https://github.com/rust-lang/rust/commit/1c210eb3c673cea0479ec1307a91b4b36245dfa1"}], "stats": {"total": 10, "additions": 5, "deletions": 5}, "files": [{"sha": "06bffd4dad8bbd707f706cdb5cb87ee4f6763d63", "filename": "src/formatting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/dae63e98ce0c5d4f40c4c350e58e813057e88213/src%2Fformatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dae63e98ce0c5d4f40c4c350e58e813057e88213/src%2Fformatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fformatting.rs?ref=dae63e98ce0c5d4f40c4c350e58e813057e88213", "patch": "@@ -105,7 +105,7 @@ fn format_project<T: FormatHandler>(\n     let files = modules::ModResolver::new(\n         context.parse_session.source_map(),\n         directory_ownership.unwrap_or(parse::DirectoryOwnership::UnownedViaMod(false)),\n-        input_is_stdin,\n+        !(input_is_stdin || config.skip_children()),\n     )\n     .visit_crate(&krate)\n     .map_err(|e| io::Error::new(io::ErrorKind::Other, e))?;"}, {"sha": "f8496b9566a24335dda9e803cd91a78b65a408a3", "filename": "src/modules.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/dae63e98ce0c5d4f40c4c350e58e813057e88213/src%2Fmodules.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dae63e98ce0c5d4f40c4c350e58e813057e88213/src%2Fmodules.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmodules.rs?ref=dae63e98ce0c5d4f40c4c350e58e813057e88213", "patch": "@@ -17,7 +17,7 @@ pub(crate) struct ModResolver<'a, 'b> {\n     source_map: &'b source_map::SourceMap,\n     directory: Directory,\n     file_map: FileModMap<'a>,\n-    is_input_stdin: bool,\n+    recursive: bool,\n }\n \n #[derive(Clone)]\n@@ -31,7 +31,7 @@ impl<'a, 'b> ModResolver<'a, 'b> {\n     pub(crate) fn new(\n         source_map: &'b source_map::SourceMap,\n         directory_ownership: DirectoryOwnership,\n-        is_input_stdin: bool,\n+        recursive: bool,\n     ) -> Self {\n         ModResolver {\n             directory: Directory {\n@@ -40,7 +40,7 @@ impl<'a, 'b> ModResolver<'a, 'b> {\n             },\n             file_map: BTreeMap::new(),\n             source_map,\n-            is_input_stdin,\n+            recursive,\n         }\n     }\n \n@@ -56,7 +56,7 @@ impl<'a, 'b> ModResolver<'a, 'b> {\n         };\n \n         // Skip visiting sub modules when the input is from stdin.\n-        if !self.is_input_stdin {\n+        if self.recursive {\n             self.visit_mod(&krate.module)?;\n         }\n "}]}