{"sha": "0cd55e52ff6e22560ef53071128af49c4df12d49", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBjZDU1ZTUyZmY2ZTIyNTYwZWY1MzA3MTEyOGFmNDljNGRmMTJkNDk=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-02-29T18:27:38Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2016-02-29T18:28:33Z"}, "message": "Add HashMap stabilizations to 1.7 relnotes", "tree": {"sha": "8bd3503f2c6ef7c3d85275d009dd290918d06190", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8bd3503f2c6ef7c3d85275d009dd290918d06190"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0cd55e52ff6e22560ef53071128af49c4df12d49", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0cd55e52ff6e22560ef53071128af49c4df12d49", "html_url": "https://github.com/rust-lang/rust/commit/0cd55e52ff6e22560ef53071128af49c4df12d49", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0cd55e52ff6e22560ef53071128af49c4df12d49/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "287eb2ac756bfe42fe2b8659ecb5d0547676a0b9", "url": "https://api.github.com/repos/rust-lang/rust/commits/287eb2ac756bfe42fe2b8659ecb5d0547676a0b9", "html_url": "https://github.com/rust-lang/rust/commit/287eb2ac756bfe42fe2b8659ecb5d0547676a0b9"}], "stats": {"total": 25, "additions": 23, "deletions": 2}, "files": [{"sha": "c3d7ce90e6916b03a6c7f74371cedb94257cd822", "filename": "RELEASES.md", "status": "modified", "additions": 23, "deletions": 2, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/0cd55e52ff6e22560ef53071128af49c4df12d49/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/0cd55e52ff6e22560ef53071128af49c4df12d49/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=0cd55e52ff6e22560ef53071128af49c4df12d49", "patch": "@@ -59,6 +59,17 @@ Libraries\n     * [`IntoStringError::into_cstring`]\n     * [`IntoStringError::utf8_error`]\n     * `Error for IntoStringError`\n+  * Hashing\n+    * [`std::hash::BuildHasher`]\n+    * [`BuildHasher::Hasher`]\n+    * [`BuildHasher::build_hasher`]\n+    * [`std::hash::BuildHasherDefault`]\n+    * [`HashMap::with_hasher`]\n+    * [`HashMap::with_capacity_and_hasher`]\n+    * [`HashSet::with_hasher`]\n+    * [`HashSet::with_capacity_and_hasher`]\n+    * [`std::collections::hash_map::RandomState`]\n+    * [`RandomState::new`]\n * [Validating UTF-8 is faster by a factor of between 7 and 14x for\n   ASCII input][1.7utf8]. This means that creating `String`s and `str`s\n   from bytes is faster.\n@@ -137,11 +148,15 @@ Compatibility Notes\n [1.7utf8]: https://github.com/rust-lang/rust/pull/30740\n [1.7v]: https://github.com/rust-lang/rust/pull/29973\n [RFC 1214]: https://github.com/rust-lang/rfcs/blob/master/text/1214-projections-lifetimes-and-wf.md\n-[`clone_from_slice`]: http://doc.rust-lang.org/nightly/std/primitive.slice.html#method.clone_from_slice\n-[`sort_by_key`]: http://doc.rust-lang.org/nightly/std/primitive.slice.html#method.sort_by_key\n+[`BuildHasher::Hasher`]: http://doc.rust-lang.org/nightly/std/hash/trait.Hasher.html\n+[`BuildHasher::build_hasher`]: http://doc.rust-lang.org/nightly/std/hash/trait.BuildHasher.html#tymethod.build_hasher\n [`CString::into_bytes_with_nul`]: http://doc.rust-lang.org/nightly/std/ffi/struct.CString.html#method.into_bytes_with_nul\n [`CString::into_bytes`]: http://doc.rust-lang.org/nightly/std/ffi/struct.CString.html#method.into_bytes\n [`CString::into_string`]: http://doc.rust-lang.org/nightly/std/ffi/struct.CString.html#method.into_string\n+[`HashMap::with_capacity_and_hasher`]: http://doc.rust-lang.org/nightly/std/collections/struct.HashMap.html#method.with_capacity_and_hasher\n+[`HashMap::with_hasher`]: http://doc.rust-lang.org/nightly/std/collections/struct.HashMap.html#method.with_hasher\n+[`HashSet::with_capacity_and_hasher`]: http://doc.rust-lang.org/nightly/std/collections/struct.HashSet.html#method.with_capacity_and_hasher\n+[`HashSet::with_hasher`]: http://doc.rust-lang.org/nightly/std/collections/struct.HashSet.html#method.with_hasher\n [`IntoStringError::into_cstring`]: http://doc.rust-lang.org/nightly/std/ffi/struct.IntoStringError.html#method.into_cstring\n [`IntoStringError::utf8_error`]: http://doc.rust-lang.org/nightly/std/ffi/struct.IntoStringError.html#method.utf8_error\n [`Ipv4Addr::is_broadcast`]: http://doc.rust-lang.org/nightly/std/net/struct.Ipv4Addr.html#method.is_broadcast\n@@ -154,10 +169,12 @@ Compatibility Notes\n [`Ipv6Addr::is_multicast`]: http://doc.rust-lang.org/nightly/std/net/struct.Ipv6Addr.html#method.is_multicast\n [`Ipv6Addr::is_unspecified`]: http://doc.rust-lang.org/nightly/std/net/struct.Ipv6Addr.html#method.is_unspecified\n [`Path::strip_prefix`]: http://doc.rust-lang.org/nightly/std/path/struct.Path.html#method.strip_prefix\n+[`RandomState::new`]: http://doc.rust-lang.org/nightly/std/collections/hash_map/struct.RandomState.html#method.new\n [`String::as_mut_str`]: http://doc.rust-lang.org/nightly/std/string/struct.String.html#method.as_mut_str\n [`String::as_str`]: http://doc.rust-lang.org/nightly/std/string/struct.String.html#method.as_str\n [`Vec::as_mut_slice`]: http://doc.rust-lang.org/nightly/std/vec/struct.Vec.html#method.as_mut_slice\n [`Vec::as_slice`]: http://doc.rust-lang.org/nightly/std/vec/struct.Vec.html#method.as_slice\n+[`clone_from_slice`]: http://doc.rust-lang.org/nightly/std/primitive.slice.html#method.clone_from_slice\n [`ffi::IntoStringError`]: http://doc.rust-lang.org/nightly/std/ffi/struct.IntoStringError.html\n [`i32::checked_neg`]: http://doc.rust-lang.org/nightly/std/primitive.i32.html#method.checked_neg\n [`i32::checked_rem`]: http://doc.rust-lang.org/nightly/std/primitive.i32.html#method.checked_rem\n@@ -173,6 +190,10 @@ Compatibility Notes\n [`i32::overflowing_sub`]: http://doc.rust-lang.org/nightly/std/primitive.i32.html#method.overflowing_sub\n [`i32::saturating_mul`]: http://doc.rust-lang.org/nightly/std/primitive.i32.html#method.saturating_mul\n [`path::StripPrefixError`]: http://doc.rust-lang.org/nightly/std/path/struct.StripPrefixError.html\n+[`sort_by_key`]: http://doc.rust-lang.org/nightly/std/primitive.slice.html#method.sort_by_key\n+[`std::collections::hash_map::RandomState`]: http://doc.rust-lang.org/nightly/std/collections/hash_map/struct.RandomState.html\n+[`std::hash::BuildHasherDefault`]: http://doc.rust-lang.org/nightly/std/hash/struct.BuildHasherDefault.html\n+[`std::hash::BuildHasher`]: http://doc.rust-lang.org/nightly/std/hash/trait.BuildHasher.html\n [`u32::checked_neg`]: http://doc.rust-lang.org/nightly/std/primitive.u32.html#method.checked_neg\n [`u32::checked_rem`]: http://doc.rust-lang.org/nightly/std/primitive.u32.html#method.checked_rem\n [`u32::checked_shl`]: http://doc.rust-lang.org/nightly/std/primitive.u32.html#method.checked_shl"}]}