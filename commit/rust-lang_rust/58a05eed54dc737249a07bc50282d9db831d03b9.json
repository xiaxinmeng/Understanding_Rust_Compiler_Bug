{"sha": "58a05eed54dc737249a07bc50282d9db831d03b9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU4YTA1ZWVkNTRkYzczNzI0OWEwN2JjNTAyODJkOWRiODMxZDAzYjk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-08T08:48:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-12-08T08:48:02Z"}, "message": "Auto merge of #46549 - alexcrichton:thinlto-weak, r=michaelwoerister\n\nrustc: Further tweak linkage in ThinLTO\n\nIn #46382 the logic around linkage preservation with ThinLTO ws tweaked but the\nloop that registered all otherwise exported GUID values as \"don't internalize\nme please\" was erroneously too conservative and only asking \"external\" linkage\nitems to not be internalized. Instead we actually want the inversion of that\ncondition, everything *without* \"local\" linkage to be internalized.\n\nThis commit updates the condition there, adds a test, and...\n\nCloses #46543", "tree": {"sha": "b3afaf2b9e1b0695690b6025ff72615661c03c1d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b3afaf2b9e1b0695690b6025ff72615661c03c1d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/58a05eed54dc737249a07bc50282d9db831d03b9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/58a05eed54dc737249a07bc50282d9db831d03b9", "html_url": "https://github.com/rust-lang/rust/commit/58a05eed54dc737249a07bc50282d9db831d03b9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/58a05eed54dc737249a07bc50282d9db831d03b9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5f4b09ee480aab38e466700563e2a6276f9a73e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/5f4b09ee480aab38e466700563e2a6276f9a73e7", "html_url": "https://github.com/rust-lang/rust/commit/5f4b09ee480aab38e466700563e2a6276f9a73e7"}, {"sha": "17fb43bdc61481ff754fe53e8e8fa589fb8789ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/17fb43bdc61481ff754fe53e8e8fa589fb8789ee", "html_url": "https://github.com/rust-lang/rust/commit/17fb43bdc61481ff754fe53e8e8fa589fb8789ee"}], "stats": {"total": 39, "additions": 38, "deletions": 1}, "files": [{"sha": "072a9144f17a18ab3bca4e777128ef1dc60abbb8", "filename": "src/rustllvm/PassWrapper.cpp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/58a05eed54dc737249a07bc50282d9db831d03b9/src%2Frustllvm%2FPassWrapper.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/58a05eed54dc737249a07bc50282d9db831d03b9/src%2Frustllvm%2FPassWrapper.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustllvm%2FPassWrapper.cpp?ref=58a05eed54dc737249a07bc50282d9db831d03b9", "patch": "@@ -970,7 +970,7 @@ LLVMRustCreateThinLTOData(LLVMRustThinLTOModule *modules,\n   std::set<GlobalValue::GUID> ExportedGUIDs;\n   for (auto &List : Ret->Index) {\n     for (auto &GVS: List.second) {\n-      if (!GlobalValue::isExternalLinkage(GVS->linkage()))\n+      if (GlobalValue::isLocalLinkage(GVS->linkage()))\n         continue;\n       auto GUID = GVS->getOriginalName();\n       if (!DeadSymbols.count(GUID))"}, {"sha": "b9719e04f34470b6e67804bf5e95a58be11a7a2f", "filename": "src/test/run-pass/thinlto/weak-works.rs", "status": "added", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/58a05eed54dc737249a07bc50282d9db831d03b9/src%2Ftest%2Frun-pass%2Fthinlto%2Fweak-works.rs", "raw_url": "https://github.com/rust-lang/rust/raw/58a05eed54dc737249a07bc50282d9db831d03b9/src%2Ftest%2Frun-pass%2Fthinlto%2Fweak-works.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fthinlto%2Fweak-works.rs?ref=58a05eed54dc737249a07bc50282d9db831d03b9", "patch": "@@ -0,0 +1,37 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// compile-flags: -C codegen-units=8 -Z thinlto\n+// ignore-windows\n+// min-llvm-version 4.0\n+\n+#![feature(linkage)]\n+\n+pub mod foo {\n+    #[linkage = \"weak\"]\n+    #[no_mangle]\n+    pub extern \"C\" fn FOO() -> i32 {\n+        0\n+    }\n+}\n+\n+mod bar {\n+    extern \"C\" {\n+        fn FOO() -> i32;\n+    }\n+\n+    pub fn bar() -> i32 {\n+        unsafe { FOO() }\n+    }\n+}\n+\n+fn main() {\n+    bar::bar();\n+}"}]}