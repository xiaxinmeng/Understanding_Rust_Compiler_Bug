{"sha": "106f783b33f64cfc364b7aa2e5f57bcd07e9bfb8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjEwNmY3ODNiMzNmNjRjZmMzNjRiN2FhMmU1ZjU3YmNkMDdlOWJmYjg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-22T17:51:32Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-22T17:51:32Z"}, "message": "rustc: Add a fast path when the types to be unified are exactly equal", "tree": {"sha": "7876306d353746e0c25be7f27fd99d3d9f71930e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7876306d353746e0c25be7f27fd99d3d9f71930e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/106f783b33f64cfc364b7aa2e5f57bcd07e9bfb8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/106f783b33f64cfc364b7aa2e5f57bcd07e9bfb8", "html_url": "https://github.com/rust-lang/rust/commit/106f783b33f64cfc364b7aa2e5f57bcd07e9bfb8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/106f783b33f64cfc364b7aa2e5f57bcd07e9bfb8/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9edaa7dba3181ae68c60204e1e47a2d20e86236e", "url": "https://api.github.com/repos/rust-lang/rust/commits/9edaa7dba3181ae68c60204e1e47a2d20e86236e", "html_url": "https://github.com/rust-lang/rust/commit/9edaa7dba3181ae68c60204e1e47a2d20e86236e"}], "stats": {"total": 3, "additions": 3, "deletions": 0}, "files": [{"sha": "d57b8071b06af76f2b38cdbb3ba812f011557952", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/106f783b33f64cfc364b7aa2e5f57bcd07e9bfb8/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/106f783b33f64cfc364b7aa2e5f57bcd07e9bfb8/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=106f783b33f64cfc364b7aa2e5f57bcd07e9bfb8", "patch": "@@ -1877,6 +1877,9 @@ mod Unify {\n         // TODO: occurs check, to make sure we don't loop forever when\n         // unifying e.g. 'a and option['a]\n \n+        // Fast path.\n+        if (eq_ty(expected, actual)) { ret ures_ok(expected); }\n+\n         alt (actual.struct) {\n             // If the RHS is a variable type, then just do the appropriate\n             // binding."}]}