{"sha": "25323ec306b99adf6b5751c6f0a96eb373857336", "node_id": "C_kwDOAAsO6NoAKDI1MzIzZWMzMDZiOTlhZGY2YjU3NTFjNmYwYTk2ZWIzNzM4NTczMzY", "commit": {"author": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-10-01T20:05:35Z"}, "committer": {"name": "Will Crichton", "email": "wcrichto@cs.stanford.edu", "date": "2021-10-07T02:45:26Z"}, "message": "Move JS into a standalone file", "tree": {"sha": "f98b21ba3760e9c421dd8e6d7149bd53b70b802d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f98b21ba3760e9c421dd8e6d7149bd53b70b802d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/25323ec306b99adf6b5751c6f0a96eb373857336", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/25323ec306b99adf6b5751c6f0a96eb373857336", "html_url": "https://github.com/rust-lang/rust/commit/25323ec306b99adf6b5751c6f0a96eb373857336", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/25323ec306b99adf6b5751c6f0a96eb373857336/comments", "author": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "willcrichton", "id": 663326, "node_id": "MDQ6VXNlcjY2MzMyNg==", "avatar_url": "https://avatars.githubusercontent.com/u/663326?v=4", "gravatar_id": "", "url": "https://api.github.com/users/willcrichton", "html_url": "https://github.com/willcrichton", "followers_url": "https://api.github.com/users/willcrichton/followers", "following_url": "https://api.github.com/users/willcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/willcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/willcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/willcrichton/subscriptions", "organizations_url": "https://api.github.com/users/willcrichton/orgs", "repos_url": "https://api.github.com/users/willcrichton/repos", "events_url": "https://api.github.com/users/willcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/willcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "df5e3a6e40b5e70f3e869f97a7ce800385913c28", "url": "https://api.github.com/repos/rust-lang/rust/commits/df5e3a6e40b5e70f3e869f97a7ce800385913c28", "html_url": "https://github.com/rust-lang/rust/commit/df5e3a6e40b5e70f3e869f97a7ce800385913c28"}], "stats": {"total": 239, "additions": 124, "deletions": 115}, "files": [{"sha": "bd06f88cb3587def54ae87baace749e5549c5330", "filename": "src/librustdoc/html/layout.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/25323ec306b99adf6b5751c6f0a96eb373857336/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25323ec306b99adf6b5751c6f0a96eb373857336/src%2Flibrustdoc%2Fhtml%2Flayout.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Flayout.rs?ref=25323ec306b99adf6b5751c6f0a96eb373857336", "patch": "@@ -22,6 +22,8 @@ crate struct Layout {\n     /// If false, the `select` element to have search filtering by crates on rendered docs\n     /// won't be generated.\n     crate generate_search_filter: bool,\n+    /// If true, then scrape-examples.js will be included in the output HTML file\n+    crate scrape_examples_extension: bool,\n }\n \n #[derive(Serialize)]"}, {"sha": "5dde228c5b9adcf97ca313a96bdab2784e43e4a1", "filename": "src/librustdoc/html/render/context.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/25323ec306b99adf6b5751c6f0a96eb373857336/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25323ec306b99adf6b5751c6f0a96eb373857336/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fcontext.rs?ref=25323ec306b99adf6b5751c6f0a96eb373857336", "patch": "@@ -417,6 +417,7 @@ impl<'tcx> FormatRenderer<'tcx> for Context<'tcx> {\n             krate: krate.name.to_string(),\n             css_file_extension: extension_css,\n             generate_search_filter,\n+            scrape_examples_extension: call_locations.len() > 0,\n         };\n         let mut issue_tracker_base_url = None;\n         let mut include_sources = true;"}, {"sha": "4aa4936240af238b30ce5d13f21f950a03019b17", "filename": "src/librustdoc/html/render/write_shared.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/25323ec306b99adf6b5751c6f0a96eb373857336/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25323ec306b99adf6b5751c6f0a96eb373857336/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fwrite_shared.rs?ref=25323ec306b99adf6b5751c6f0a96eb373857336", "patch": "@@ -303,6 +303,10 @@ pub(super) fn write_shared(\n         )?;\n     }\n \n+    if cx.shared.layout.scrape_examples_extension {\n+        write_minify(\"scrape-examples.js\", static_files::SCRAPE_EXAMPLES_JS, cx, options)?;\n+    }\n+\n     if let Some(ref css) = cx.shared.layout.css_file_extension {\n         let buffer = try_err!(fs::read_to_string(css), css);\n         // This varies based on the invocation, so it can't go through the write_minify wrapper."}, {"sha": "e396fd9d288db1cc34da37279113f4a65683b0c7", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 0, "deletions": 115, "changes": 115, "blob_url": "https://github.com/rust-lang/rust/blob/25323ec306b99adf6b5751c6f0a96eb373857336/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/25323ec306b99adf6b5751c6f0a96eb373857336/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=25323ec306b99adf6b5751c6f0a96eb373857336", "patch": "@@ -979,121 +979,6 @@ function hideThemeButtonState() {\n     onHashChange(null);\n     window.addEventListener(\"hashchange\", onHashChange);\n     searchState.setup();\n-\n-    /////// --scrape-examples interactions\n-\n-    // Scroll code block to put the given code location in the middle of the viewer\n-    function scrollToLoc(elt, loc) {\n-        var wrapper = elt.querySelector(\".code-wrapper\");\n-        var halfHeight = wrapper.offsetHeight / 2;\n-        var lines = elt.querySelector('.line-numbers');\n-        var offsetMid = (lines.children[loc[0]].offsetTop\n-                         + lines.children[loc[1]].offsetTop) / 2;\n-        var scrollOffset = offsetMid - halfHeight;\n-        lines.scrollTo(0, scrollOffset);\n-        elt.querySelector(\".rust\").scrollTo(0, scrollOffset);\n-    }\n-\n-    function updateScrapedExample(example) {\n-        var locs = JSON.parse(example.attributes.getNamedItem(\"data-locs\").textContent);\n-        var offset = parseInt(example.attributes.getNamedItem(\"data-offset\").textContent);\n-\n-        var locIndex = 0;\n-        var highlights = example.querySelectorAll('.highlight');\n-        var link = example.querySelector('.scraped-example-title a');\n-        addClass(highlights[0], 'focus');\n-        if (locs.length > 1) {\n-            // Toggle through list of examples in a given file\n-            var onChangeLoc = function(f) {\n-                removeClass(highlights[locIndex], 'focus');\n-                f();\n-                scrollToLoc(example, locs[locIndex]);\n-                addClass(highlights[locIndex], 'focus');\n-\n-                var curLoc = locs[locIndex];\n-                var minLine = curLoc[0] + offset + 1;\n-                var maxLine = curLoc[1] + offset + 1;\n-\n-                var text;\n-                var anchor;\n-                if (minLine == maxLine) {\n-                    text = 'line ' + minLine.toString();\n-                    anchor = minLine.toString();\n-                } else {\n-                    var range = minLine.toString() + '-' + maxLine.toString();\n-                    text = 'lines ' + range;\n-                    anchor = range;\n-                }\n-\n-                var url = new URL(link.href);\n-                url.hash = anchor;\n-\n-                link.href = url.toString();\n-                link.innerHTML = text;\n-            };\n-\n-            example.querySelector('.prev')\n-                .addEventListener('click', function() {\n-                    onChangeLoc(function() {\n-                        locIndex = (locIndex - 1 + locs.length) % locs.length;\n-                    });\n-                });\n-\n-            example.querySelector('.next')\n-                .addEventListener('click', function() {\n-                    onChangeLoc(function() { locIndex = (locIndex + 1) % locs.length; });\n-                });\n-        } else {\n-            // Remove buttons if there's only one example in the file\n-            example.querySelector('.prev').remove();\n-            example.querySelector('.next').remove();\n-        }\n-\n-        var codeEl = example.querySelector('.rust');\n-        var codeOverflows = codeEl.scrollHeight > codeEl.clientHeight;\n-        var expandButton = example.querySelector('.expand');\n-        if (codeOverflows) {\n-            // If file is larger than default height, give option to expand the viewer\n-            expandButton.addEventListener('click', function () {\n-                if (hasClass(example, \"expanded\")) {\n-                    removeClass(example, \"expanded\");\n-                    scrollToLoc(example, locs[0]);\n-                } else {\n-                    addClass(example, \"expanded\");\n-                }\n-            });\n-        } else {\n-            // Otherwise remove expansion buttons\n-            addClass(example, 'expanded');\n-            expandButton.remove();\n-        }\n-\n-        // Start with the first example in view\n-        scrollToLoc(example, locs[0]);\n-    }\n-\n-    function updateScrapedExamples() {\n-        var firstExamples = document.querySelectorAll('.scraped-example-list > .scraped-example');\n-        onEach(firstExamples, updateScrapedExample);\n-        onEach(document.querySelectorAll('.more-examples-toggle'), function(toggle) {\n-            // Allow users to click the left border of the <details> section to close it,\n-            // since the section can be large and finding the [+] button is annoying.\n-            toggle.querySelector('.toggle-line').addEventListener('click', function() {\n-                toggle.open = false;\n-            });\n-\n-            var moreExamples = toggle.querySelectorAll('.scraped-example');\n-            toggle.querySelector('summary').addEventListener('click', function() {\n-                // Wrapping in setTimeout ensures the update happens after the elements are actually\n-                // visible. This is necessary since updateScrapedExample calls scrollToLoc which\n-                // depends on offsetHeight, a property that requires an element to be visible to\n-                // compute correctly.\n-                setTimeout(function() { onEach(moreExamples, updateScrapedExample); });\n-            }, {once: true});\n-        });\n-    }\n-\n-    updateScrapedExamples();\n }());\n \n (function () {"}, {"sha": "a51fee558414e6e2b26bde5ed64ef077cc24213d", "filename": "src/librustdoc/html/static/js/scrape-examples.js", "status": "added", "additions": 110, "deletions": 0, "changes": 110, "blob_url": "https://github.com/rust-lang/rust/blob/25323ec306b99adf6b5751c6f0a96eb373857336/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js", "raw_url": "https://github.com/rust-lang/rust/raw/25323ec306b99adf6b5751c6f0a96eb373857336/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fscrape-examples.js?ref=25323ec306b99adf6b5751c6f0a96eb373857336", "patch": "@@ -0,0 +1,110 @@\n+(function () {\n+    // Scroll code block to put the given code location in the middle of the viewer\n+    function scrollToLoc(elt, loc) {\n+        var wrapper = elt.querySelector(\".code-wrapper\");\n+        var halfHeight = wrapper.offsetHeight / 2;\n+        var lines = elt.querySelector('.line-numbers');\n+        var offsetMid = (lines.children[loc[0]].offsetTop\n+                         + lines.children[loc[1]].offsetTop) / 2;\n+        var scrollOffset = offsetMid - halfHeight;\n+        lines.scrollTo(0, scrollOffset);\n+        elt.querySelector(\".rust\").scrollTo(0, scrollOffset);\n+    }\n+\n+    function updateScrapedExample(example) {\n+        var locs = JSON.parse(example.attributes.getNamedItem(\"data-locs\").textContent);\n+        var offset = parseInt(example.attributes.getNamedItem(\"data-offset\").textContent);\n+\n+        var locIndex = 0;\n+        var highlights = example.querySelectorAll('.highlight');\n+        var link = example.querySelector('.scraped-example-title a');\n+        addClass(highlights[0], 'focus');\n+        if (locs.length > 1) {\n+            // Toggle through list of examples in a given file\n+            var onChangeLoc = function(f) {\n+                removeClass(highlights[locIndex], 'focus');\n+                f();\n+                scrollToLoc(example, locs[locIndex]);\n+                addClass(highlights[locIndex], 'focus');\n+\n+                var curLoc = locs[locIndex];\n+                var minLine = curLoc[0] + offset + 1;\n+                var maxLine = curLoc[1] + offset + 1;\n+\n+                var text;\n+                var anchor;\n+                if (minLine == maxLine) {\n+                    text = 'line ' + minLine.toString();\n+                    anchor = minLine.toString();\n+                } else {\n+                    var range = minLine.toString() + '-' + maxLine.toString();\n+                    text = 'lines ' + range;\n+                    anchor = range;\n+                }\n+\n+                var url = new URL(link.href);\n+                url.hash = anchor;\n+\n+                link.href = url.toString();\n+                link.innerHTML = text;\n+            };\n+\n+            example.querySelector('.prev')\n+                .addEventListener('click', function() {\n+                    onChangeLoc(function() {\n+                        locIndex = (locIndex - 1 + locs.length) % locs.length;\n+                    });\n+                });\n+\n+            example.querySelector('.next')\n+                .addEventListener('click', function() {\n+                    onChangeLoc(function() { locIndex = (locIndex + 1) % locs.length; });\n+                });\n+        } else {\n+            // Remove buttons if there's only one example in the file\n+            example.querySelector('.prev').remove();\n+            example.querySelector('.next').remove();\n+        }\n+\n+        var codeEl = example.querySelector('.rust');\n+        var codeOverflows = codeEl.scrollHeight > codeEl.clientHeight;\n+        var expandButton = example.querySelector('.expand');\n+        if (codeOverflows) {\n+            // If file is larger than default height, give option to expand the viewer\n+            expandButton.addEventListener('click', function () {\n+                if (hasClass(example, \"expanded\")) {\n+                    removeClass(example, \"expanded\");\n+                    scrollToLoc(example, locs[0]);\n+                } else {\n+                    addClass(example, \"expanded\");\n+                }\n+            });\n+        } else {\n+            // Otherwise remove expansion buttons\n+            addClass(example, 'expanded');\n+            expandButton.remove();\n+        }\n+\n+        // Start with the first example in view\n+        scrollToLoc(example, locs[0]);\n+    }\n+\n+    var firstExamples = document.querySelectorAll('.scraped-example-list > .scraped-example');\n+    onEach(firstExamples, updateScrapedExample);\n+    onEach(document.querySelectorAll('.more-examples-toggle'), function(toggle) {\n+        // Allow users to click the left border of the <details> section to close it,\n+        // since the section can be large and finding the [+] button is annoying.\n+        toggle.querySelector('.toggle-line').addEventListener('click', function() {\n+            toggle.open = false;\n+        });\n+\n+        var moreExamples = toggle.querySelectorAll('.scraped-example');\n+        toggle.querySelector('summary').addEventListener('click', function() {\n+            // Wrapping in setTimeout ensures the update happens after the elements are actually\n+            // visible. This is necessary since updateScrapedExample calls scrollToLoc which\n+            // depends on offsetHeight, a property that requires an element to be visible to\n+            // compute correctly.\n+            setTimeout(function() { onEach(moreExamples, updateScrapedExample); });\n+        }, {once: true});\n+    });\n+})();"}, {"sha": "d8c12573ed218c3d3a67c5ae59f63bf61541fa29", "filename": "src/librustdoc/html/static_files.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/25323ec306b99adf6b5751c6f0a96eb373857336/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "raw_url": "https://github.com/rust-lang/rust/raw/25323ec306b99adf6b5751c6f0a96eb373857336/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic_files.rs?ref=25323ec306b99adf6b5751c6f0a96eb373857336", "patch": "@@ -35,6 +35,10 @@ crate static SETTINGS_JS: &str = include_str!(\"static/js/settings.js\");\n /// Storage, used to store documentation settings.\n crate static STORAGE_JS: &str = include_str!(\"static/js/storage.js\");\n \n+/// The file contents of `scraped-examples.js`, which contains functionality related to the\n+/// --scrape-examples flag that inserts automatically-found examples of usages of items.\n+crate static SCRAPE_EXAMPLES_JS: &str = include_str!(\"static/js/scrape-examples.js\");\n+\n /// The file contents of `brush.svg`, the icon used for the theme-switch button.\n crate static BRUSH_SVG: &[u8] = include_bytes!(\"static/images/brush.svg\");\n "}, {"sha": "b0174d59a7be21463e999fccd92f968c8a9c066d", "filename": "src/librustdoc/html/templates/page.html", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/25323ec306b99adf6b5751c6f0a96eb373857336/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "raw_url": "https://github.com/rust-lang/rust/raw/25323ec306b99adf6b5751c6f0a96eb373857336/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Ftemplates%2Fpage.html?ref=25323ec306b99adf6b5751c6f0a96eb373857336", "patch": "@@ -109,6 +109,9 @@\n          data-search-js=\"{{static_root_path | safe}}search{{page.resource_suffix}}.js\"> {#- -#}\n     </div>\n     <script src=\"{{static_root_path | safe}}main{{page.resource_suffix}}.js\"></script> {#- -#}\n+    {%- if layout.scrape_examples_extension -%}\n+    <script src=\"{{static_root_path | safe}}scrape-examples{{page.resource_suffix}}.js\"></script> {#- -#}\n+    {%- endif -%}\n     {%- for script in page.static_extra_scripts -%}\n     <script src=\"{{static_root_path | safe}}{{script}}.js\"></script> {#- -#}\n     {% endfor %}"}]}