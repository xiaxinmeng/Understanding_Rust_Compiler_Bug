{"sha": "019dba0cebac1944c74644ba7365490ef3a8c753", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxOWRiYTBjZWJhYzE5NDRjNzQ2NDRiYTczNjU0OTBlZjNhOGM3NTM=", "commit": {"author": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-02T11:22:37Z"}, "committer": {"name": "Oli Scherer", "email": "github35764891676564198441@oli-obk.de", "date": "2021-03-12T12:21:55Z"}, "message": "Resolve a FIXME around type equality checks in Relate for constants", "tree": {"sha": "a89a5899bb33ec273e04b1a52bc57451d0499b55", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a89a5899bb33ec273e04b1a52bc57451d0499b55"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/019dba0cebac1944c74644ba7365490ef3a8c753", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/019dba0cebac1944c74644ba7365490ef3a8c753", "html_url": "https://github.com/rust-lang/rust/commit/019dba0cebac1944c74644ba7365490ef3a8c753", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/019dba0cebac1944c74644ba7365490ef3a8c753/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "09f7f915327b8877ea6025e71dc028ffdbd2369c", "url": "https://api.github.com/repos/rust-lang/rust/commits/09f7f915327b8877ea6025e71dc028ffdbd2369c", "html_url": "https://github.com/rust-lang/rust/commit/09f7f915327b8877ea6025e71dc028ffdbd2369c"}], "stats": {"total": 15, "additions": 9, "deletions": 6}, "files": [{"sha": "fef8be57344f1f525612e163198f5afa93124c96", "filename": "compiler/rustc_middle/src/ty/relate.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/019dba0cebac1944c74644ba7365490ef3a8c753/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/019dba0cebac1944c74644ba7365490ef3a8c753/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fty%2Frelate.rs?ref=019dba0cebac1944c74644ba7365490ef3a8c753", "patch": "@@ -498,12 +498,15 @@ pub fn super_relate_consts<R: TypeRelation<'tcx>>(\n     debug!(\"{}.super_relate_consts(a = {:?}, b = {:?})\", relation.tag(), a, b);\n     let tcx = relation.tcx();\n \n-    let eagerly_eval = |x: &'tcx ty::Const<'tcx>| x.eval(tcx, relation.param_env()).val;\n+    // FIXME(oli-obk): once const generics can have generic types, this assertion\n+    // will likely get triggered. Move to `normalize_erasing_regions` at that point.\n+    assert_eq!(\n+        tcx.erase_regions(a.ty),\n+        tcx.erase_regions(b.ty),\n+        \"cannot relate constants of different types\"\n+    );\n \n-    // FIXME(eddyb) doesn't look like everything below checks that `a.ty == b.ty`.\n-    // We could probably always assert it early, as const generic parameters\n-    // are not allowed to depend on other generic parameters, i.e. are concrete.\n-    // (although there could be normalization differences)\n+    let eagerly_eval = |x: &'tcx ty::Const<'tcx>| x.eval(tcx, relation.param_env()).val;\n \n     // Currently, the values that can be unified are primitive types,\n     // and those that derive both `PartialEq` and `Eq`, corresponding\n@@ -524,7 +527,7 @@ pub fn super_relate_consts<R: TypeRelation<'tcx>>(\n         }\n         (ty::ConstKind::Value(a_val), ty::ConstKind::Value(b_val)) => {\n             let new_val = match (a_val, b_val) {\n-                (ConstValue::Scalar(a_val), ConstValue::Scalar(b_val)) if a.ty == b.ty => {\n+                (ConstValue::Scalar(a_val), ConstValue::Scalar(b_val)) => {\n                     if a_val == b_val {\n                         Ok(ConstValue::Scalar(a_val))\n                     } else if let ty::FnPtr(_) = a.ty.kind() {"}]}