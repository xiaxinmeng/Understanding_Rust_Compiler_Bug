{"sha": "7bea58eeac3a5a5280810623f06eadb3a8b891a3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiZWE1OGVlYWMzYTVhNTI4MDgxMDYyM2YwNmVhZGIzYThiODkxYTM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-03T10:34:53Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2020-05-11T14:49:36Z"}, "message": "fix test_weak_count_locked for Miri", "tree": {"sha": "f1d82de1546df9250ff2441903539509628aecdf", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1d82de1546df9250ff2441903539509628aecdf"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bea58eeac3a5a5280810623f06eadb3a8b891a3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bea58eeac3a5a5280810623f06eadb3a8b891a3", "html_url": "https://github.com/rust-lang/rust/commit/7bea58eeac3a5a5280810623f06eadb3a8b891a3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bea58eeac3a5a5280810623f06eadb3a8b891a3/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c66d02e3ba0d5ace4e42bab88e4df246f03b91d5", "url": "https://api.github.com/repos/rust-lang/rust/commits/c66d02e3ba0d5ace4e42bab88e4df246f03b91d5", "html_url": "https://github.com/rust-lang/rust/commit/c66d02e3ba0d5ace4e42bab88e4df246f03b91d5"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "a2bb651e2b77804397d0e88fea8955cacee86d5b", "filename": "src/liballoc/sync/tests.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7bea58eeac3a5a5280810623f06eadb3a8b891a3/src%2Fliballoc%2Fsync%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bea58eeac3a5a5280810623f06eadb3a8b891a3/src%2Fliballoc%2Fsync%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync%2Ftests.rs?ref=7bea58eeac3a5a5280810623f06eadb3a8b891a3", "patch": "@@ -340,7 +340,9 @@ fn test_weak_count_locked() {\n     let mut a = Arc::new(atomic::AtomicBool::new(false));\n     let a2 = a.clone();\n     let t = thread::spawn(move || {\n-        for _i in 0..1000000 {\n+        // Miri is too slow\n+        let count = if cfg!(miri) { 1000 } else { 1000000 };\n+        for _i in 0..count {\n             Arc::get_mut(&mut a);\n         }\n         a.store(true, SeqCst);\n@@ -349,6 +351,8 @@ fn test_weak_count_locked() {\n     while !a2.load(SeqCst) {\n         let n = Arc::weak_count(&a2);\n         assert!(n < 2, \"bad weak count: {}\", n);\n+        #[cfg(miri)] // Miri's scheduler does not guarantee liveness, and thus needs this hint.\n+        atomic::spin_loop_hint();\n     }\n     t.join().unwrap();\n }"}]}