{"sha": "b745a29fa51b59642f3883bc80ca1d502532757e", "node_id": "C_kwDOAAsO6NoAKGI3NDVhMjlmYTUxYjU5NjQyZjM4ODNiYzgwY2ExZDUwMjUzMjc1N2U", "commit": {"author": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-08T16:03:48Z"}, "committer": {"name": "Oli Scherer", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2022-11-08T16:03:48Z"}, "message": "Remove an unused span", "tree": {"sha": "6fc96c31b8b70032bc67d7f801a0b9b298b51483", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6fc96c31b8b70032bc67d7f801a0b9b298b51483"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b745a29fa51b59642f3883bc80ca1d502532757e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b745a29fa51b59642f3883bc80ca1d502532757e", "html_url": "https://github.com/rust-lang/rust/commit/b745a29fa51b59642f3883bc80ca1d502532757e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b745a29fa51b59642f3883bc80ca1d502532757e/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1d93b358553f1942214e6800bb3fc68a521abe90", "url": "https://api.github.com/repos/rust-lang/rust/commits/1d93b358553f1942214e6800bb3fc68a521abe90", "html_url": "https://github.com/rust-lang/rust/commit/1d93b358553f1942214e6800bb3fc68a521abe90"}], "stats": {"total": 19, "additions": 2, "deletions": 17}, "files": [{"sha": "41b52a4c4a9fcb2901c2f26a1562e65faae1a7b3", "filename": "compiler/rustc_hir_typeck/src/autoderef.rs", "status": "modified", "additions": 1, "deletions": 5, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b745a29fa51b59642f3883bc80ca1d502532757e/compiler%2Frustc_hir_typeck%2Fsrc%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b745a29fa51b59642f3883bc80ca1d502532757e/compiler%2Frustc_hir_typeck%2Fsrc%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fautoderef.rs?ref=b745a29fa51b59642f3883bc80ca1d502532757e", "patch": "@@ -44,11 +44,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         |InferOk { value: method, obligations: o }| {\n                             obligations.extend(o);\n                             if let ty::Ref(region, _, mutbl) = *method.sig.output().kind() {\n-                                Some(OverloadedDeref {\n-                                    region,\n-                                    mutbl,\n-                                    span: autoderef.overloaded_span(),\n-                                })\n+                                Some(OverloadedDeref { region, mutbl, span: autoderef.span() })\n                             } else {\n                                 None\n                             }"}, {"sha": "d996d6ec610bae81c64789c6f9d8d676f1c309ed", "filename": "compiler/rustc_hir_typeck/src/method/confirm.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/b745a29fa51b59642f3883bc80ca1d502532757e/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b745a29fa51b59642f3883bc80ca1d502532757e/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Fmethod%2Fconfirm.rs?ref=b745a29fa51b59642f3883bc80ca1d502532757e", "patch": "@@ -151,8 +151,7 @@ impl<'a, 'tcx> ConfirmContext<'a, 'tcx> {\n     ) -> Ty<'tcx> {\n         // Commit the autoderefs by calling `autoderef` again, but this\n         // time writing the results into the various typeck results.\n-        let mut autoderef =\n-            self.autoderef(self.span, unadjusted_self_ty).with_overloaded_span(self.call_expr.span);\n+        let mut autoderef = self.autoderef(self.call_expr.span, unadjusted_self_ty);\n         let Some((ty, n)) = autoderef.nth(pick.autoderefs) else {\n             return self.tcx.ty_error_with_message(\n                 rustc_span::DUMMY_SP,"}, {"sha": "46ee2f35976a7be6dedee04590aa4fd7e4325d89", "filename": "compiler/rustc_trait_selection/src/autoderef.rs", "status": "modified", "additions": 0, "deletions": 10, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/b745a29fa51b59642f3883bc80ca1d502532757e/compiler%2Frustc_trait_selection%2Fsrc%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b745a29fa51b59642f3883bc80ca1d502532757e/compiler%2Frustc_trait_selection%2Fsrc%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Fautoderef.rs?ref=b745a29fa51b59642f3883bc80ca1d502532757e", "patch": "@@ -27,7 +27,6 @@ pub struct Autoderef<'a, 'tcx> {\n     // Meta infos:\n     infcx: &'a InferCtxt<'tcx>,\n     span: Span,\n-    overloaded_span: Span,\n     body_id: hir::HirId,\n     param_env: ty::ParamEnv<'tcx>,\n \n@@ -103,7 +102,6 @@ impl<'a, 'tcx> Autoderef<'a, 'tcx> {\n         Autoderef {\n             infcx,\n             span,\n-            overloaded_span: span,\n             body_id,\n             param_env,\n             state: AutoderefSnapshot {\n@@ -118,10 +116,6 @@ impl<'a, 'tcx> Autoderef<'a, 'tcx> {\n         }\n     }\n \n-    pub fn with_overloaded_span(self, overloaded_span: Span) -> Self {\n-        Self { overloaded_span, ..self }\n-    }\n-\n     fn overloaded_deref_ty(&mut self, ty: Ty<'tcx>) -> Option<Ty<'tcx>> {\n         debug!(\"overloaded_deref_ty({:?})\", ty);\n \n@@ -196,10 +190,6 @@ impl<'a, 'tcx> Autoderef<'a, 'tcx> {\n         self.span\n     }\n \n-    pub fn overloaded_span(&self) -> Span {\n-        self.overloaded_span\n-    }\n-\n     pub fn reached_recursion_limit(&self) -> bool {\n         self.state.reached_recursion_limit\n     }"}]}