{"sha": "de36d42e80864f40fb3075dc4e3389cfa0c113b2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRlMzZkNDJlODA4NjRmNDBmYjMwNzVkYzRlMzM4OWNmYTBjMTEzYjI=", "commit": {"author": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-09-05T18:32:26Z"}, "committer": {"name": "Philipp Hansch", "email": "dev@phansch.net", "date": "2018-09-06T05:15:31Z"}, "message": "More refactoring", "tree": {"sha": "7a57c2193eccdd9ebbef9961c127a4c9d7a8f32e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7a57c2193eccdd9ebbef9961c127a4c9d7a8f32e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de36d42e80864f40fb3075dc4e3389cfa0c113b2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIcBAABCAAGBQJbkLf0AAoJELb6Bqbg4mZbticP/2aIeymzTUb8DivRHeyJVKvX\nePJbbAj7izJvDu+C5jpy6UxHDPDPvc0poOrcpmsAfaIgF3iU6F4LbGKLs4JLo5TZ\nxp74M+3nxuCn02JHzVnhHQ8TOzHYxXdQ7FtMwPquZVl2Sv321RU3q9ZY7EnBYcgq\n+4QpqN6rOADK1413DVGqC09n+w4kK9ZTDv08+2LBUOKqxBm57QjWb3V6ui20gaob\nHAiymOzgm+SBVFid09O+jQKYRwman8OoelxC23yqQH6XXjKCzfJVzrd4qMvfK5h/\nyeBz80U8nsLwtCePS16robP4SLc3jWffagWGM7Y5Tu+jIPa1WWmbacNERphagxgI\n27GJ4h3Ur+rlJXIZ8WfZ0tTsjgILdcgoVm4GammLEIBE+xbdcjumgDb/JILoOWIL\nKhYLT4QAtdTjAVh4eSvzH5UrF7qfs+ZpCfiBXCwUHnt/oOr+072URAQRPHvdxmq5\ngowhvYx9uS3VV/LkCCj+3kEotIBQTEJsYJ9PprcDO7NvKeEyot+qUQ6utliYK037\nzMa5zxmbbejEI3ErH1NXT4W2lC/YPVwZ3OyZhZ8au9IG0cH4+7OAwQz/+xoqTJPA\n0k3eoK0QOfTGYNIFzMGIoSjhannVX0DSCqbzdO9lP+/8Qt7gPeynD0GzO31OfMPn\n5tP2afsLT3ksaKEYPMMH\n=bz0A\n-----END PGP SIGNATURE-----", "payload": "tree 7a57c2193eccdd9ebbef9961c127a4c9d7a8f32e\nparent 20836d3003050d4abd313eb9fda4dc8bb6bc7f9c\nauthor Philipp Hansch <dev@phansch.net> 1536172346 +0200\ncommitter Philipp Hansch <dev@phansch.net> 1536210931 +0200\n\nMore refactoring\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de36d42e80864f40fb3075dc4e3389cfa0c113b2", "html_url": "https://github.com/rust-lang/rust/commit/de36d42e80864f40fb3075dc4e3389cfa0c113b2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de36d42e80864f40fb3075dc4e3389cfa0c113b2/comments", "author": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "committer": {"login": "phansch", "id": 2042399, "node_id": "MDQ6VXNlcjIwNDIzOTk=", "avatar_url": "https://avatars.githubusercontent.com/u/2042399?v=4", "gravatar_id": "", "url": "https://api.github.com/users/phansch", "html_url": "https://github.com/phansch", "followers_url": "https://api.github.com/users/phansch/followers", "following_url": "https://api.github.com/users/phansch/following{/other_user}", "gists_url": "https://api.github.com/users/phansch/gists{/gist_id}", "starred_url": "https://api.github.com/users/phansch/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/phansch/subscriptions", "organizations_url": "https://api.github.com/users/phansch/orgs", "repos_url": "https://api.github.com/users/phansch/repos", "events_url": "https://api.github.com/users/phansch/events{/privacy}", "received_events_url": "https://api.github.com/users/phansch/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "20836d3003050d4abd313eb9fda4dc8bb6bc7f9c", "url": "https://api.github.com/repos/rust-lang/rust/commits/20836d3003050d4abd313eb9fda4dc8bb6bc7f9c", "html_url": "https://github.com/rust-lang/rust/commit/20836d3003050d4abd313eb9fda4dc8bb6bc7f9c"}], "stats": {"total": 30, "additions": 12, "deletions": 18}, "files": [{"sha": "998efb142ccf16d2b1cc555d201c154d2e9c06f2", "filename": "clippy_dev/src/lib.rs", "status": "modified", "additions": 12, "deletions": 18, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/de36d42e80864f40fb3075dc4e3389cfa0c113b2/clippy_dev%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de36d42e80864f40fb3075dc4e3389cfa0c113b2/clippy_dev%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_dev%2Fsrc%2Flib.rs?ref=de36d42e80864f40fb3075dc4e3389cfa0c113b2", "patch": "@@ -58,37 +58,31 @@ impl Lint {\n }\n \n pub fn gather_all() -> impl Iterator<Item=Lint> {\n-    let mut lints = vec![];\n-    for dir_entry in lint_files() {\n-        lints.append(&mut gather_from_file(&dir_entry).collect());\n-    }\n-    lints.into_iter()\n+    lint_files().flat_map(gather_from_file)\n }\n \n-fn gather_from_file(dir_entry: &fs::DirEntry) -> impl Iterator<Item=Lint> {\n+fn gather_from_file(dir_entry: fs::DirEntry) -> impl Iterator<Item=Lint> {\n     let mut file = fs::File::open(dir_entry.path()).unwrap();\n     let mut content = String::new();\n     file.read_to_string(&mut content).unwrap();\n     parse_contents(&content, dir_entry.path().file_stem().unwrap().to_str().unwrap())\n }\n \n fn parse_contents(content: &str, filename: &str) -> impl Iterator<Item=Lint> {\n-    let mut lints: Vec<Lint> = DEC_CLIPPY_LINT_RE\n-        .captures_iter(&content)\n-        .map(|m| Lint::new(&m[\"name\"], &m[\"cat\"], &m[\"desc\"], None, filename))\n-        .collect();\n-    let mut deprecated = DEC_DEPRECATED_LINT_RE\n-        .captures_iter(&content)\n-        .map(|m| Lint::new( &m[\"name\"], \"Deprecated\", &m[\"desc\"], Some(&m[\"desc\"]), filename))\n-        .collect();\n-    lints.append(&mut deprecated);\n-    lints.into_iter()\n+    let lints = DEC_CLIPPY_LINT_RE\n+        .captures_iter(content)\n+        .map(|m| Lint::new(&m[\"name\"], &m[\"cat\"], &m[\"desc\"], None, filename));\n+    let deprecated = DEC_DEPRECATED_LINT_RE\n+        .captures_iter(content)\n+        .map(|m| Lint::new( &m[\"name\"], \"Deprecated\", &m[\"desc\"], Some(&m[\"desc\"]), filename));\n+    // Removing the `.collect::<Vec<Lint>>().into_iter()` causes some lifetime issues due to the map\n+    lints.chain(deprecated).collect::<Vec<Lint>>().into_iter()\n }\n \n /// Collects all .rs files in the `clippy_lints/src` directory\n fn lint_files() -> impl Iterator<Item=fs::DirEntry> {\n-    let paths = fs::read_dir(\"../clippy_lints/src\").unwrap();\n-    paths\n+    fs::read_dir(\"../clippy_lints/src\")\n+        .unwrap()\n         .filter_map(|f| f.ok())\n         .filter(|f| f.path().extension() == Some(OsStr::new(\"rs\")))\n }"}]}