{"sha": "8671a892c5169fe608d0467270a2af7797df8c36", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg2NzFhODkyYzUxNjlmZTYwOGQwNDY3MjcwYTJhZjc3OTdkZjhjMzY=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-07T07:55:43Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-01-07T07:55:43Z"}, "message": "Error builder", "tree": {"sha": "edc870b64c9357ec60474969083ce85959cf8c41", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/edc870b64c9357ec60474969083ce85959cf8c41"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8671a892c5169fe608d0467270a2af7797df8c36", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8671a892c5169fe608d0467270a2af7797df8c36", "html_url": "https://github.com/rust-lang/rust/commit/8671a892c5169fe608d0467270a2af7797df8c36", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8671a892c5169fe608d0467270a2af7797df8c36/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "50132db4c676a7dac105dba7fa966edafaa1d209", "url": "https://api.github.com/repos/rust-lang/rust/commits/50132db4c676a7dac105dba7fa966edafaa1d209", "html_url": "https://github.com/rust-lang/rust/commit/50132db4c676a7dac105dba7fa966edafaa1d209"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "a1b0048924aacbecffe09921b74d4ae28166619c", "filename": "src/tree/file_builder.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/8671a892c5169fe608d0467270a2af7797df8c36/src%2Ftree%2Ffile_builder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8671a892c5169fe608d0467270a2af7797df8c36/src%2Ftree%2Ffile_builder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftree%2Ffile_builder.rs?ref=8671a892c5169fe608d0467270a2af7797df8c36", "patch": "@@ -5,6 +5,7 @@ pub trait Sink {\n     fn leaf(&mut self, kind: SyntaxKind, len: TextUnit);\n     fn start_internal(&mut self, kind: SyntaxKind);\n     fn finish_internal(&mut self);\n+    fn error(&mut self) -> ErrorBuilder;\n }\n \n \n@@ -52,6 +53,10 @@ impl Sink for FileBuilder {\n             self.add_len(id);\n         }\n     }\n+\n+    fn error(&mut self) -> ErrorBuilder {\n+        ErrorBuilder::new(self)\n+    }\n }\n \n impl FileBuilder {\n@@ -132,4 +137,26 @@ fn fill<T>(slot: &mut Option<T>, value: T) {\n fn grow(left: &mut TextRange, right: TextRange) {\n     assert_eq!(left.end(), right.start());\n     *left = TextRange::from_to(left.start(), right.end())\n-}\n\\ No newline at end of file\n+}\n+\n+pub struct ErrorBuilder<'f> {\n+    message: Option<String>,\n+    builder: &'f mut FileBuilder\n+}\n+\n+impl<'f> ErrorBuilder<'f> {\n+    fn new(builder: &'f mut FileBuilder) -> Self {\n+        ErrorBuilder { message: None, builder }\n+    }\n+\n+    pub fn message<M: Into<String>>(mut self, m: M) -> Self {\n+        self.message = Some(m.into());\n+        self\n+    }\n+\n+    pub fn build(self) {\n+        let message = self.message.expect(\"Error message not set\");\n+        let node = self.builder.current_id();\n+        self.builder.errors.push(SyntaxErrorData { node, message })\n+    }\n+}"}]}