{"sha": "85ac8343431ef693ca07dcbce1e73f17f4c5ec7d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg1YWM4MzQzNDMxZWY2OTNjYTA3ZGNiY2UxZTczZjE3ZjRjNWVjN2Q=", "commit": {"author": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2015-10-05T20:02:05Z"}, "committer": {"name": "Georg Brandl", "email": "georg@python.org", "date": "2015-10-05T20:02:14Z"}, "message": "RingBuf was renamed to VecDeque (fixes #363)", "tree": {"sha": "d4c7a8832ea7d111112430e22ca0897332e11100", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d4c7a8832ea7d111112430e22ca0897332e11100"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/85ac8343431ef693ca07dcbce1e73f17f4c5ec7d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/85ac8343431ef693ca07dcbce1e73f17f4c5ec7d", "html_url": "https://github.com/rust-lang/rust/commit/85ac8343431ef693ca07dcbce1e73f17f4c5ec7d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/85ac8343431ef693ca07dcbce1e73f17f4c5ec7d/comments", "author": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "committer": {"login": "birkenfeld", "id": 144359, "node_id": "MDQ6VXNlcjE0NDM1OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/144359?v=4", "gravatar_id": "", "url": "https://api.github.com/users/birkenfeld", "html_url": "https://github.com/birkenfeld", "followers_url": "https://api.github.com/users/birkenfeld/followers", "following_url": "https://api.github.com/users/birkenfeld/following{/other_user}", "gists_url": "https://api.github.com/users/birkenfeld/gists{/gist_id}", "starred_url": "https://api.github.com/users/birkenfeld/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/birkenfeld/subscriptions", "organizations_url": "https://api.github.com/users/birkenfeld/orgs", "repos_url": "https://api.github.com/users/birkenfeld/repos", "events_url": "https://api.github.com/users/birkenfeld/events{/privacy}", "received_events_url": "https://api.github.com/users/birkenfeld/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7a129a1340d5f68c1f171370ba9407eef5198a59", "url": "https://api.github.com/repos/rust-lang/rust/commits/7a129a1340d5f68c1f171370ba9407eef5198a59", "html_url": "https://github.com/rust-lang/rust/commit/7a129a1340d5f68c1f171370ba9407eef5198a59"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "2147530ff579f0ce71b20db4dbaed8d3427c9388", "filename": "README.md", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/85ac8343431ef693ca07dcbce1e73f17f4c5ec7d/README.md", "raw_url": "https://github.com/rust-lang/rust/raw/85ac8343431ef693ca07dcbce1e73f17f4c5ec7d/README.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/README.md?ref=85ac8343431ef693ca07dcbce1e73f17f4c5ec7d", "patch": "@@ -32,7 +32,7 @@ name\n [len_zero](https://github.com/Manishearth/rust-clippy/wiki#len_zero)                                   | warn    | checking `.len() == 0` or `.len() > 0` (or similar) when `.is_empty()` could be used instead\n [let_and_return](https://github.com/Manishearth/rust-clippy/wiki#let_and_return)                       | warn    | creating a let-binding and then immediately returning it like `let x = expr; x` at the end of a block\n [let_unit_value](https://github.com/Manishearth/rust-clippy/wiki#let_unit_value)                       | warn    | creating a let binding to a value of unit type, which usually can't be used afterwards\n-[linkedlist](https://github.com/Manishearth/rust-clippy/wiki#linkedlist)                               | warn    | usage of LinkedList, usually a vector is faster, or a more specialized data structure like a RingBuf\n+[linkedlist](https://github.com/Manishearth/rust-clippy/wiki#linkedlist)                               | warn    | usage of LinkedList, usually a vector is faster, or a more specialized data structure like a VecDeque\n [match_ref_pats](https://github.com/Manishearth/rust-clippy/wiki#match_ref_pats)                       | warn    | a match has all arms prefixed with `&`; the match expression can be dereferenced instead\n [min_max](https://github.com/Manishearth/rust-clippy/wiki#min_max)                                     | warn    | `min(_, max(_, _))` (or vice versa) with bounds clamping the result to a constant\n [modulo_one](https://github.com/Manishearth/rust-clippy/wiki#modulo_one)                               | warn    | taking a number modulo 1, which always returns 0"}, {"sha": "e9125085bb540d567ed268312e11f99be780e43d", "filename": "src/types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/85ac8343431ef693ca07dcbce1e73f17f4c5ec7d/src%2Ftypes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/85ac8343431ef693ca07dcbce1e73f17f4c5ec7d/src%2Ftypes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftypes.rs?ref=85ac8343431ef693ca07dcbce1e73f17f4c5ec7d", "patch": "@@ -20,7 +20,7 @@ declare_lint!(pub BOX_VEC, Warn,\n               \"usage of `Box<Vec<T>>`, vector elements are already on the heap\");\n declare_lint!(pub LINKEDLIST, Warn,\n               \"usage of LinkedList, usually a vector is faster, or a more specialized data \\\n-               structure like a RingBuf\");\n+               structure like a VecDeque\");\n \n impl LintPass for TypePass {\n     fn get_lints(&self) -> LintArray {\n@@ -43,7 +43,7 @@ impl LateLintPass for TypePass {\n                 span_help_and_lint(\n                     cx, LINKEDLIST, ast_ty.span,\n                     \"I see you're using a LinkedList! Perhaps you meant some other data structure?\",\n-                    \"a RingBuf might work\");\n+                    \"a VecDeque might work\");\n             }\n         }\n     }"}]}