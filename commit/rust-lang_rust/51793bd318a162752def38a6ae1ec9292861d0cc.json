{"sha": "51793bd318a162752def38a6ae1ec9292861d0cc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxNzkzYmQzMThhMTYyNzUyZGVmMzhhNmFlMWVjOTI5Mjg2MWQwY2M=", "commit": {"author": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-06-29T18:19:37Z"}, "committer": {"name": "Christian Poveda", "email": "christianpoveda@protonmail.com", "date": "2019-06-29T18:19:37Z"}, "message": "Simplify control flow", "tree": {"sha": "e78d16cec1d0cf78fea7865ccd51ce86e3ec624b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e78d16cec1d0cf78fea7865ccd51ce86e3ec624b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51793bd318a162752def38a6ae1ec9292861d0cc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51793bd318a162752def38a6ae1ec9292861d0cc", "html_url": "https://github.com/rust-lang/rust/commit/51793bd318a162752def38a6ae1ec9292861d0cc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51793bd318a162752def38a6ae1ec9292861d0cc/comments", "author": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pvdrz", "id": 31802960, "node_id": "MDQ6VXNlcjMxODAyOTYw", "avatar_url": "https://avatars.githubusercontent.com/u/31802960?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pvdrz", "html_url": "https://github.com/pvdrz", "followers_url": "https://api.github.com/users/pvdrz/followers", "following_url": "https://api.github.com/users/pvdrz/following{/other_user}", "gists_url": "https://api.github.com/users/pvdrz/gists{/gist_id}", "starred_url": "https://api.github.com/users/pvdrz/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pvdrz/subscriptions", "organizations_url": "https://api.github.com/users/pvdrz/orgs", "repos_url": "https://api.github.com/users/pvdrz/repos", "events_url": "https://api.github.com/users/pvdrz/events{/privacy}", "received_events_url": "https://api.github.com/users/pvdrz/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "95bc72052c65e22cbf23f80bfa314528abcb981b", "url": "https://api.github.com/repos/rust-lang/rust/commits/95bc72052c65e22cbf23f80bfa314528abcb981b", "html_url": "https://github.com/rust-lang/rust/commit/95bc72052c65e22cbf23f80bfa314528abcb981b"}], "stats": {"total": 19, "additions": 7, "deletions": 12}, "files": [{"sha": "2777ada14f9ad5bde9f7116d5cffffda7cecde7e", "filename": "src/librustc_mir/interpret/cast.rs", "status": "modified", "additions": 7, "deletions": 12, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/51793bd318a162752def38a6ae1ec9292861d0cc/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51793bd318a162752def38a6ae1ec9292861d0cc/src%2Flibrustc_mir%2Finterpret%2Fcast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fcast.rs?ref=51793bd318a162752def38a6ae1ec9292861d0cc", "patch": "@@ -1,7 +1,7 @@\n use rustc::ty::{self, Ty, TypeAndMut};\n use rustc::ty::layout::{self, TyLayout, Size};\n use rustc::ty::adjustment::{PointerCast};\n-use syntax::ast::{FloatTy, IntTy, UintTy};\n+use syntax::ast::FloatTy;\n use syntax::symbol::sym;\n \n use rustc_apfloat::ieee::{Single, Double};\n@@ -248,18 +248,13 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> InterpretCx<'mir, 'tcx, M> {\n             // Casting to a reference or fn pointer is not permitted by rustc,\n             // no need to support it here.\n             RawPtr(_) => Ok(ptr.into()),\n-            Int(IntTy::Isize) | Uint(UintTy::Usize) => {\n-                if let Ok(bits) = self.force_bits(Scalar::Ptr(ptr), self.memory.pointer_size()) {\n-                    self.cast_from_int(bits, src_layout, dest_layout)\n-                } else {\n-                    Ok(ptr.into())\n-                }\n-            }\n             Int(_) | Uint(_) => {\n-                if let Ok(bits) = self.force_bits(Scalar::Ptr(ptr), self.memory.pointer_size()) {\n-                    self.cast_from_int(bits, src_layout, dest_layout)\n-                } else {\n-                    err!(ReadPointerAsBytes)\n+                let size = self.memory.pointer_size();\n+\n+                match self.force_bits(Scalar::Ptr(ptr), size) {\n+                    Ok(bits) => self.cast_from_int(bits, src_layout, dest_layout),\n+                    Err(_) if dest_layout.size == size => Ok(ptr.into()),\n+                    Err(e) => Err(e),\n                 }\n             }\n             _ => return err!(Unimplemented(format!(\"ptr to {:?} cast\", dest_layout.ty))),"}]}