{"sha": "bc409cbb4c4f40afeccb39646efa2ddbc8749b32", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjNDA5Y2JiNGM0ZjQwYWZlY2NiMzk2NDZlZmEyZGRiYzg3NDliMzI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-06T23:38:06Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-03-06T23:38:06Z"}, "message": "rollup merge of #23117: japaric/default-impl\n\nfixes #23080\n\nr? @nikomatsakis\ncc @FlaPer87", "tree": {"sha": "5a60dfda6d444d0f37774ec2cddbcc0f1cfb63a4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5a60dfda6d444d0f37774ec2cddbcc0f1cfb63a4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc409cbb4c4f40afeccb39646efa2ddbc8749b32", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc409cbb4c4f40afeccb39646efa2ddbc8749b32", "html_url": "https://github.com/rust-lang/rust/commit/bc409cbb4c4f40afeccb39646efa2ddbc8749b32", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc409cbb4c4f40afeccb39646efa2ddbc8749b32/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3c2c516d0c4be32b003ab67132475f8fd7453e65", "url": "https://api.github.com/repos/rust-lang/rust/commits/3c2c516d0c4be32b003ab67132475f8fd7453e65", "html_url": "https://github.com/rust-lang/rust/commit/3c2c516d0c4be32b003ab67132475f8fd7453e65"}, {"sha": "8a391dd8cf2ff938a392cbd177dc0a21d644d627", "url": "https://api.github.com/repos/rust-lang/rust/commits/8a391dd8cf2ff938a392cbd177dc0a21d644d627", "html_url": "https://github.com/rust-lang/rust/commit/8a391dd8cf2ff938a392cbd177dc0a21d644d627"}], "stats": {"total": 70, "additions": 69, "deletions": 1}, "files": [{"sha": "8185f48cb8c7031ed952bdee0b8ac51be794d0c4", "filename": "src/librustc_typeck/check/wf.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/bc409cbb4c4f40afeccb39646efa2ddbc8749b32/src%2Flibrustc_typeck%2Fcheck%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc409cbb4c4f40afeccb39646efa2ddbc8749b32/src%2Flibrustc_typeck%2Fcheck%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwf.rs?ref=bc409cbb4c4f40afeccb39646efa2ddbc8749b32", "patch": "@@ -118,7 +118,7 @@ impl<'ccx, 'tcx> CheckTypeWellFormedVisitor<'ccx, 'tcx> {\n \n                 self.check_variances_for_type_defn(item, ast_generics);\n             }\n-            ast::ItemTrait(_, ref ast_generics, _, _) => {\n+            ast::ItemTrait(_, ref ast_generics, _, ref items) => {\n                 let trait_predicates =\n                     ty::lookup_predicates(ccx.tcx, local_def(item.id));\n                 reject_non_type_param_bounds(\n@@ -127,6 +127,14 @@ impl<'ccx, 'tcx> CheckTypeWellFormedVisitor<'ccx, 'tcx> {\n                     &trait_predicates);\n                 self.check_variances(item, ast_generics, &trait_predicates,\n                                      self.tcx().lang_items.phantom_fn());\n+                if ty::trait_has_default_impl(ccx.tcx, local_def(item.id)) {\n+                    if !items.is_empty() {\n+                        ccx.tcx.sess.span_err(\n+                            item.span,\n+                            \"traits with default impls (`e.g. unsafe impl Trait for ..`) must \\\n+                            have no methods or associated items\")\n+                    }\n+                }\n             }\n             _ => {}\n         }"}, {"sha": "ff5ac9de8d9443872de7b03f350ba1f0c3652dc4", "filename": "src/test/compile-fail/issue-23080-2.rs", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/bc409cbb4c4f40afeccb39646efa2ddbc8749b32/src%2Ftest%2Fcompile-fail%2Fissue-23080-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc409cbb4c4f40afeccb39646efa2ddbc8749b32/src%2Ftest%2Fcompile-fail%2Fissue-23080-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23080-2.rs?ref=bc409cbb4c4f40afeccb39646efa2ddbc8749b32", "patch": "@@ -0,0 +1,29 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-tidy-linelength\n+\n+#![feature(optin_builtin_traits)]\n+\n+use std::marker::MarkerTrait;\n+\n+unsafe trait Trait: MarkerTrait {\n+//~^ error: traits with default impls (`e.g. unsafe impl Trait for ..`) must have no methods or associated items\n+    type Output;\n+}\n+\n+unsafe impl Trait for .. {}\n+\n+fn call_method<T: Trait>(x: T) {}\n+\n+fn main() {\n+    // ICE\n+    call_method(());\n+}"}, {"sha": "99373a69697ae33f3197f7f36d8bb42a7b369049", "filename": "src/test/compile-fail/issue-23080.rs", "status": "added", "additions": 31, "deletions": 0, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/bc409cbb4c4f40afeccb39646efa2ddbc8749b32/src%2Ftest%2Fcompile-fail%2Fissue-23080.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc409cbb4c4f40afeccb39646efa2ddbc8749b32/src%2Ftest%2Fcompile-fail%2Fissue-23080.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-23080.rs?ref=bc409cbb4c4f40afeccb39646efa2ddbc8749b32", "patch": "@@ -0,0 +1,31 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// ignore-tidy-linelength\n+\n+#![feature(optin_builtin_traits)]\n+\n+unsafe trait Trait {\n+//~^ error: traits with default impls (`e.g. unsafe impl Trait for ..`) must have no methods or associated items\n+    fn method(&self) {\n+        println!(\"Hello\");\n+    }\n+}\n+\n+unsafe impl Trait for .. {}\n+\n+fn call_method<T: Trait>(x: T) {\n+    x.method();\n+}\n+\n+fn main() {\n+    // ICE\n+    call_method(());\n+}"}]}