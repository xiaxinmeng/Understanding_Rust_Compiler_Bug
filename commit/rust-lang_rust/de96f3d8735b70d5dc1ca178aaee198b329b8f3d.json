{"sha": "de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "node_id": "C_kwDOAAsO6NoAKGRlOTZmM2Q4NzM1YjcwZDVkYzFjYTE3OGFhZWUxOThiMzI5YjhmM2Q", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-18T11:43:26Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-04-18T11:43:26Z"}, "message": "Auto merge of #110478 - jyn514:stage1-fulldeps, r=albertlarsan68\n\nSupport `x test --stage 1 ui-fulldeps`\n\n`@Nilstrieb` had an excellent idea the other day: the same way that rustdoc is able to load `rustc_driver` from the sysroot, ui-fulldeps tests should also be able to load it from the sysroot. That allows us to run fulldeps tests with stage1, without having to fully rebuild the compiler twice. It does unfortunately have the downside that we're building the tests with the *bootstrap* compiler, not the in-tree sources, but since most of the fulldeps tests are for the *API* of the compiler, that seems ok.\n\nI think it's possible to extend this to `run-make-fulldeps`, but I've run out of energy for tonight.\n\n- Move `plugin` tests into a subdirectory.\n\n  Plugins are loaded at runtime with `dlopen` and so require the ABI of the running compile to match the ABI of the compiler linked with `rustc_driver`. As a result they can't be supported in stage 1 and have to use `// ignore-stage1`.\n\n- Remove `ignore-stage1` from most non-plugin tests\n\n- Ignore diagnostic tests in stage 1. Even though this requires a stage 2 build to load rustc_driver, it's primarily testing the error message that the *running* compiler emits when the diagnostic struct is malformed.\n\n- Pass `-Zforce-unstable-if-unmarked` in stage1, not just stage2. That allows running `hash-stable-is-unstable` in stage1, since it now suggests adding `rustc_private` to enable loading the crates.\n\n- Add libLLVM.so to the stage0 target sysroot, to allow fulldeps tests that act as custom drivers to load it at runtime.\n\n- Pass `--sysroot stage0-sysroot` in compiletest so that we use the correct version of std.\n\n- Move a few lint tests from ui-fulldeps to ui\n\n  These had an `aux-build:lint-group-plugin-test.rs` that they never actually loaded with `feature(plugin)` nor tested. I removed the unused aux-build and they pass fine with stage 1.\n\nFixes https://github.com/rust-lang/rust/issues/75905.", "tree": {"sha": "f58f61901faa9865c6be25340a5bc949de205c3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f58f61901faa9865c6be25340a5bc949de205c3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "html_url": "https://github.com/rust-lang/rust/commit/de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5fe3528be5ef12be3d12c7a9ee1b0bff9e3b35e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/5fe3528be5ef12be3d12c7a9ee1b0bff9e3b35e4", "html_url": "https://github.com/rust-lang/rust/commit/5fe3528be5ef12be3d12c7a9ee1b0bff9e3b35e4"}, {"sha": "d6af60266eed9a19ee550278cdfe1d2857763286", "url": "https://api.github.com/repos/rust-lang/rust/commits/d6af60266eed9a19ee550278cdfe1d2857763286", "html_url": "https://github.com/rust-lang/rust/commit/d6af60266eed9a19ee550278cdfe1d2857763286"}], "stats": {"total": 440, "additions": 236, "deletions": 204}, "files": [{"sha": "dd86634b47c83314b702706455baf92eee10307a", "filename": "src/bootstrap/bin/rustc.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/src%2Fbootstrap%2Fbin%2Frustc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/src%2Fbootstrap%2Fbin%2Frustc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbin%2Frustc.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -150,7 +150,7 @@ fn main() {\n     // allow the `rustc_private` feature to link to other unstable crates\n     // also in the sysroot. We also do this for host crates, since those\n     // may be proc macros, in which case we might ship them.\n-    if env::var_os(\"RUSTC_FORCE_UNSTABLE\").is_some() && (stage != \"0\" || target.is_some()) {\n+    if env::var_os(\"RUSTC_FORCE_UNSTABLE\").is_some() {\n         cmd.arg(\"-Z\").arg(\"force-unstable-if-unmarked\");\n     }\n "}, {"sha": "9666874d0fe2ce7a2b8e10ca3b750e172573dd39", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1008,9 +1008,24 @@ impl<'a> Builder<'a> {\n                 // Avoid deleting the rustlib/ directory we just copied\n                 // (in `impl Step for Sysroot`).\n                 if !builder.download_rustc() {\n+                    builder.verbose(&format!(\n+                        \"Removing sysroot {} to avoid caching bugs\",\n+                        sysroot.display()\n+                    ));\n                     let _ = fs::remove_dir_all(&sysroot);\n                     t!(fs::create_dir_all(&sysroot));\n                 }\n+\n+                if self.compiler.stage == 0 {\n+                    // The stage 0 compiler for the build triple is always pre-built.\n+                    // Ensure that `libLLVM.so` ends up in the target libdir, so that ui-fulldeps tests can use it when run.\n+                    dist::maybe_install_llvm_target(\n+                        builder,\n+                        self.compiler.host,\n+                        &builder.sysroot(self.compiler),\n+                    );\n+                }\n+\n                 INTERNER.intern_path(sysroot)\n             }\n         }"}, {"sha": "1573134e35f7d4a509a3b724ea80b8631eac76d3", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1260,6 +1260,7 @@ impl Step for Sysroot {\n         };\n         let sysroot = sysroot_dir(compiler.stage);\n \n+        builder.verbose(&format!(\"Removing sysroot {} to avoid caching bugs\", sysroot.display()));\n         let _ = fs::remove_dir_all(&sysroot);\n         t!(fs::create_dir_all(&sysroot));\n "}, {"sha": "ccf83974b8c2f2becb7953aee2ab4c49a9c5a081", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 19, "deletions": 6, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1448,7 +1448,7 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n             crate::detail_exit(1);\n         }\n \n-        let compiler = self.compiler;\n+        let mut compiler = self.compiler;\n         let target = self.target;\n         let mode = self.mode;\n         let suite = self.suite;\n@@ -1461,15 +1461,28 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n             return;\n         }\n \n-        if suite == \"debuginfo\" {\n-            builder\n-                .ensure(dist::DebuggerScripts { sysroot: builder.sysroot(compiler), host: target });\n-        }\n+        // Support stage 1 ui-fulldeps. This is somewhat complicated: ui-fulldeps tests for the most\n+        // part test the *API* of the compiler, not how it compiles a given file. As a result, we\n+        // can run them against the stage 1 sources as long as we build them with the stage 0\n+        // bootstrap compiler.\n+        // NOTE: Only stage 1 is special cased because we need the rustc_private artifacts to match the\n+        // running compiler in stage 2 when plugins run.\n+        let stage_id = if suite == \"ui-fulldeps\" && compiler.stage == 1 {\n+            compiler = builder.compiler(compiler.stage - 1, target);\n+            format!(\"stage{}-{}\", compiler.stage + 1, target)\n+        } else {\n+            format!(\"stage{}-{}\", compiler.stage, target)\n+        };\n \n         if suite.ends_with(\"fulldeps\") {\n             builder.ensure(compile::Rustc::new(compiler, target));\n         }\n \n+        if suite == \"debuginfo\" {\n+            builder\n+                .ensure(dist::DebuggerScripts { sysroot: builder.sysroot(compiler), host: target });\n+        }\n+\n         builder.ensure(compile::Std::new(compiler, target));\n         // ensure that `libproc_macro` is available on the host.\n         builder.ensure(compile::Std::new(compiler, compiler.host));\n@@ -1528,7 +1541,7 @@ note: if you're sure you want to do this, please open an issue as to why. In the\n         cmd.arg(\"--src-base\").arg(builder.src.join(\"tests\").join(suite));\n         cmd.arg(\"--build-base\").arg(testdir(builder, compiler.host).join(suite));\n         cmd.arg(\"--sysroot-base\").arg(builder.sysroot(compiler));\n-        cmd.arg(\"--stage-id\").arg(format!(\"stage{}-{}\", compiler.stage, target));\n+        cmd.arg(\"--stage-id\").arg(stage_id);\n         cmd.arg(\"--suite\").arg(suite);\n         cmd.arg(\"--mode\").arg(mode);\n         cmd.arg(\"--target\").arg(target.rustc_target_arg());"}, {"sha": "7166d99d792cc26da9fde25703131868c4d66217", "filename": "src/tools/compiletest/src/common.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fcommon.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -422,7 +422,9 @@ pub struct TargetCfgs {\n \n impl TargetCfgs {\n     fn new(config: &Config) -> TargetCfgs {\n-        let targets: HashMap<String, TargetCfg> = if config.stage_id.starts_with(\"stage0-\") {\n+        let targets: HashMap<String, TargetCfg> = if config.stage_id.starts_with(\"stage0-\")\n+            || (config.suite == \"ui-fulldeps\" && config.stage_id.starts_with(\"stage1-\"))\n+        {\n             // #[cfg(bootstrap)]\n             // Needed only for one cycle, remove during the bootstrap bump.\n             Self::collect_all_slow(config)"}, {"sha": "1a4e9b58383691c8608334ac4e279ae80660092a", "filename": "src/tools/compiletest/src/runtest.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fruntest.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1900,6 +1900,9 @@ impl<'test> TestCx<'test> {\n         // Use a single thread for efficiency and a deterministic error message order\n         rustc.arg(\"-Zthreads=1\");\n \n+        // In stage 0, make sure we use `stage0-sysroot` instead of the bootstrap sysroot.\n+        rustc.arg(\"--sysroot\").arg(&self.config.sysroot_base);\n+\n         // Optionally prevent default --target if specified in test compile-flags.\n         let custom_target = self.props.compile_flags.iter().any(|x| x.starts_with(\"--target\"));\n "}, {"sha": "b1385edf13e6c21610a126b3e3ea5e75f2d6151d", "filename": "src/tools/tidy/src/ui_tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftidy%2Fsrc%2Fui_tests.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -9,7 +9,7 @@ use std::path::{Path, PathBuf};\n \n // FIXME: The following limits should be reduced eventually.\n const ENTRY_LIMIT: usize = 885;\n-const ROOT_ENTRY_LIMIT: usize = 891;\n+const ROOT_ENTRY_LIMIT: usize = 894;\n const ISSUES_ENTRY_LIMIT: usize = 1977;\n \n fn check_entries(tests_path: &Path, bad: &mut bool) {"}, {"sha": "b6d3b7b040d16cf44c19ebdd387d3784881efebb", "filename": "tests/ui-fulldeps/compiler-calls.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fcompiler-calls.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fcompiler-calls.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fcompiler-calls.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -2,7 +2,6 @@\n // Test that the Callbacks interface to the compiler works.\n \n // ignore-cross-compile\n-// ignore-stage1\n // ignore-remote\n \n #![feature(rustc_private)]"}, {"sha": "37d7472ec6097547e914e8bc1372be6664fcfd51", "filename": "tests/ui-fulldeps/hash-stable-is-unstable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fhash-stable-is-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fhash-stable-is-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fhash-stable-is-unstable.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1,4 +1,3 @@\n-// ignore-stage1\n // compile-flags: -Zdeduplicate-diagnostics=yes\n extern crate rustc_data_structures;\n //~^ use of unstable library feature 'rustc_private'"}, {"sha": "1a8994d722ea078bf709804c0eacc46c6da79aa4", "filename": "tests/ui-fulldeps/hash-stable-is-unstable.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fhash-stable-is-unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fhash-stable-is-unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fhash-stable-is-unstable.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\n-  --> $DIR/hash-stable-is-unstable.rs:3:1\n+  --> $DIR/hash-stable-is-unstable.rs:2:1\n    |\n LL | extern crate rustc_data_structures;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -8,7 +8,7 @@ LL | extern crate rustc_data_structures;\n    = help: add `#![feature(rustc_private)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\n-  --> $DIR/hash-stable-is-unstable.rs:5:1\n+  --> $DIR/hash-stable-is-unstable.rs:4:1\n    |\n LL | extern crate rustc_macros;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -17,7 +17,7 @@ LL | extern crate rustc_macros;\n    = help: add `#![feature(rustc_private)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\n-  --> $DIR/hash-stable-is-unstable.rs:7:1\n+  --> $DIR/hash-stable-is-unstable.rs:6:1\n    |\n LL | extern crate rustc_query_system;\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -26,7 +26,7 @@ LL | extern crate rustc_query_system;\n    = help: add `#![feature(rustc_private)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\n-  --> $DIR/hash-stable-is-unstable.rs:10:5\n+  --> $DIR/hash-stable-is-unstable.rs:9:5\n    |\n LL | use rustc_macros::HashStable;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -35,7 +35,7 @@ LL | use rustc_macros::HashStable;\n    = help: add `#![feature(rustc_private)]` to the crate attributes to enable\n \n error[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\n-  --> $DIR/hash-stable-is-unstable.rs:13:10\n+  --> $DIR/hash-stable-is-unstable.rs:12:10\n    |\n LL | #[derive(HashStable)]\n    |          ^^^^^^^^^^"}, {"sha": "7fba8343bc08871263f41c48e952170f325c2dce", "filename": "tests/ui-fulldeps/pathless-extern-unstable.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fpathless-extern-unstable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fpathless-extern-unstable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fpathless-extern-unstable.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1,4 +1,3 @@\n-// ignore-stage1\n // edition:2018\n // compile-flags:--extern rustc_middle\n "}, {"sha": "174cd3c280477b8fd5755bb75f9a47cbf8fd76c9", "filename": "tests/ui-fulldeps/pathless-extern-unstable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fpathless-extern-unstable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fpathless-extern-unstable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fpathless-extern-unstable.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1,5 +1,5 @@\n error[E0658]: use of unstable library feature 'rustc_private': this crate is being loaded from the sysroot, an unstable location; did you mean to load this crate from crates.io via `Cargo.toml` instead?\n-  --> $DIR/pathless-extern-unstable.rs:7:9\n+  --> $DIR/pathless-extern-unstable.rs:6:9\n    |\n LL | pub use rustc_middle;\n    |         ^^^^^^^^^^^^"}, {"sha": "c24cdc97aa5004f579345ee055bdfc48e011e1b4", "filename": "tests/ui-fulldeps/plugin/auxiliary/empty-plugin.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Fempty-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Fempty-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Fempty-plugin.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/auxiliary/empty-plugin.rs"}, {"sha": "3f6caecaa5ad0de40e27f2833a550309300839a6", "filename": "tests/ui-fulldeps/plugin/auxiliary/issue-40001-plugin.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Fissue-40001-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Fissue-40001-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Fissue-40001-plugin.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/auxiliary/issue-40001-plugin.rs"}, {"sha": "6304c07d2c7ce6fe88118d7e3f41f3ae7d5a314e", "filename": "tests/ui-fulldeps/plugin/auxiliary/lint-for-crate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flint-for-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flint-for-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flint-for-crate.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/auxiliary/lint-for-crate.rs"}, {"sha": "4a41e7fbb72a1924af369a2d9b941f0bf56e86a5", "filename": "tests/ui-fulldeps/plugin/auxiliary/lint-group-plugin-test.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flint-group-plugin-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flint-group-plugin-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flint-group-plugin-test.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/auxiliary/lint-group-plugin-test.rs"}, {"sha": "30956deb799ed0816a3a1fb5c28686efa12e4c22", "filename": "tests/ui-fulldeps/plugin/auxiliary/lint-plugin-test.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flint-plugin-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flint-plugin-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flint-plugin-test.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/auxiliary/lint-plugin-test.rs"}, {"sha": "c2c024865e8a807f8b1e3e17d0d6d23affc71879", "filename": "tests/ui-fulldeps/plugin/auxiliary/lint-tool-test.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flint-tool-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flint-tool-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flint-tool-test.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/auxiliary/lint-tool-test.rs"}, {"sha": "954a1e554dabdb07504c243b05bf71abc917e98a", "filename": "tests/ui-fulldeps/plugin/auxiliary/lto-syntax-extension-lib.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flto-syntax-extension-lib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flto-syntax-extension-lib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flto-syntax-extension-lib.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/auxiliary/lto-syntax-extension-lib.rs"}, {"sha": "9b075c1a5b954e5be7ba965b8882153c64136778", "filename": "tests/ui-fulldeps/plugin/auxiliary/lto-syntax-extension-plugin.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flto-syntax-extension-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flto-syntax-extension-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Flto-syntax-extension-plugin.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/auxiliary/lto-syntax-extension-plugin.rs"}, {"sha": "fd6e9e20f03efd91e30148e35a5dea0217cab661", "filename": "tests/ui-fulldeps/plugin/auxiliary/multiple-plugins-1.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Fmultiple-plugins-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Fmultiple-plugins-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Fmultiple-plugins-1.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/auxiliary/multiple-plugins-1.rs"}, {"sha": "fd6e9e20f03efd91e30148e35a5dea0217cab661", "filename": "tests/ui-fulldeps/plugin/auxiliary/multiple-plugins-2.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Fmultiple-plugins-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Fmultiple-plugins-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Fmultiple-plugins-2.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/auxiliary/multiple-plugins-2.rs"}, {"sha": "e83dfe80463d882b715b525ea7f8f0ec97b15802", "filename": "tests/ui-fulldeps/plugin/auxiliary/outlive-expansion-phase.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Foutlive-expansion-phase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Foutlive-expansion-phase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Foutlive-expansion-phase.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/auxiliary/outlive-expansion-phase.rs"}, {"sha": "3ba73538ecfb6da8d227b65608dec6c1fcaace3f", "filename": "tests/ui-fulldeps/plugin/auxiliary/rlib-crate-test.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Frlib-crate-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Frlib-crate-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fauxiliary%2Frlib-crate-test.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/auxiliary/rlib-crate-test.rs"}, {"sha": "85eaf53364315580d6005d214943b254435c0947", "filename": "tests/ui-fulldeps/plugin/feature-gate-plugin.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Ffeature-gate-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Ffeature-gate-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Ffeature-gate-plugin.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/feature-gate-plugin.rs"}, {"sha": "5e40561c7f55c065b4409c6d321a38e52c046153", "filename": "tests/ui-fulldeps/plugin/feature-gate-plugin.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Ffeature-gate-plugin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Ffeature-gate-plugin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Ffeature-gate-plugin.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/feature-gate-plugin.stderr"}, {"sha": "85eaf53364315580d6005d214943b254435c0947", "filename": "tests/ui-fulldeps/plugin/gated-plugin.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fgated-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fgated-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fgated-plugin.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/gated-plugin.rs"}, {"sha": "f48f1eab60b9563735abc90bc114e609d578c4e9", "filename": "tests/ui-fulldeps/plugin/gated-plugin.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fgated-plugin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fgated-plugin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fgated-plugin.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/gated-plugin.stderr"}, {"sha": "beecaadf95554fca6339caf96b1e72b13fce8e2a", "filename": "tests/ui-fulldeps/plugin/issue-15778-fail.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fissue-15778-fail.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fissue-15778-fail.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fissue-15778-fail.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/issue-15778-fail.rs"}, {"sha": "a37893e120351f60d6ae77e47ba9c29346f1290c", "filename": "tests/ui-fulldeps/plugin/issue-15778-fail.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fissue-15778-fail.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fissue-15778-fail.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fissue-15778-fail.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/issue-15778-fail.stderr"}, {"sha": "e14338fdbbf356f80c8bc117506b0cac65c6df52", "filename": "tests/ui-fulldeps/plugin/issue-40001.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fissue-40001.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fissue-40001.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fissue-40001.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/issue-40001.rs"}, {"sha": "73ec0692464addb489c80934b23c7dd0c2d787ae", "filename": "tests/ui-fulldeps/plugin/issue-40001.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fissue-40001.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fissue-40001.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fissue-40001.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/issue-40001.stderr"}, {"sha": "9f8a879608c1f2a951a1d15a2fc2fef3eedfb318", "filename": "tests/ui-fulldeps/plugin/lint-group-plugin-deny-cmdline.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-group-plugin-deny-cmdline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-group-plugin-deny-cmdline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-group-plugin-deny-cmdline.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-group-plugin-deny-cmdline.rs"}, {"sha": "20486d596d9a30ab2c212a2bbea7304031209001", "filename": "tests/ui-fulldeps/plugin/lint-group-plugin-deny-cmdline.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-group-plugin-deny-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-group-plugin-deny-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-group-plugin-deny-cmdline.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-group-plugin-deny-cmdline.stderr"}, {"sha": "7b74be7a95482f80d6fcac00d7162d87c0c581ef", "filename": "tests/ui-fulldeps/plugin/lint-group-plugin.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-group-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-group-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-group-plugin.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-group-plugin.rs"}, {"sha": "6f429dad01757e426918c5417ec50a96a18b5575", "filename": "tests/ui-fulldeps/plugin/lint-group-plugin.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-group-plugin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-group-plugin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-group-plugin.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-group-plugin.stderr"}, {"sha": "1cc16e2fd1c9edde0e73fa0fcd9c71825bce1215", "filename": "tests/ui-fulldeps/plugin/lint-plugin-cmdline-allow.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-cmdline-allow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-cmdline-allow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-cmdline-allow.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-plugin-cmdline-allow.rs"}, {"sha": "f06703a27848ad9f61367f31263054b2425c9244", "filename": "tests/ui-fulldeps/plugin/lint-plugin-cmdline-allow.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-cmdline-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-cmdline-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-cmdline-allow.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-plugin-cmdline-allow.stderr"}, {"sha": "0bd95dfbd14a97420b0a78f9c50f7c7775b4a14c", "filename": "tests/ui-fulldeps/plugin/lint-plugin-cmdline-load.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-cmdline-load.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-cmdline-load.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-cmdline-load.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-plugin-cmdline-load.rs"}, {"sha": "82679c9e10a100b0ec5241092ed43abc2f8ed7c4", "filename": "tests/ui-fulldeps/plugin/lint-plugin-cmdline-load.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-cmdline-load.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-cmdline-load.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-cmdline-load.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-plugin-cmdline-load.stderr"}, {"sha": "04230a8e883b1587875de62291048ea7c1da4093", "filename": "tests/ui-fulldeps/plugin/lint-plugin-deny-attr.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-deny-attr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-deny-attr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-deny-attr.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-plugin-deny-attr.rs"}, {"sha": "5e8891bf1f1ac224eb860bf78abf98263a39f2a3", "filename": "tests/ui-fulldeps/plugin/lint-plugin-deny-attr.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-deny-attr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-deny-attr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-deny-attr.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-plugin-deny-attr.stderr"}, {"sha": "c460cfd5f945168d029f35d7cc037268c1412450", "filename": "tests/ui-fulldeps/plugin/lint-plugin-deny-cmdline.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-deny-cmdline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-deny-cmdline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-deny-cmdline.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-plugin-deny-cmdline.rs"}, {"sha": "d5d6b5352145c531ac081fc9e38279117c55bc1a", "filename": "tests/ui-fulldeps/plugin/lint-plugin-deny-cmdline.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-deny-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-deny-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-deny-cmdline.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-plugin-deny-cmdline.stderr"}, {"sha": "cf31b3ec1587e788d6a1c748c8ed2c55f1ce4d41", "filename": "tests/ui-fulldeps/plugin/lint-plugin-forbid-attrs.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-forbid-attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-forbid-attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-forbid-attrs.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-plugin-forbid-attrs.rs"}, {"sha": "ae34b25cc2f808002972340723ac46c7eda961db", "filename": "tests/ui-fulldeps/plugin/lint-plugin-forbid-attrs.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-forbid-attrs.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-forbid-attrs.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-forbid-attrs.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-plugin-forbid-attrs.stderr"}, {"sha": "b9d1aa85a69308694fae84a4baabb14c86518989", "filename": "tests/ui-fulldeps/plugin/lint-plugin-forbid-cmdline.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-forbid-cmdline.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-forbid-cmdline.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-forbid-cmdline.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-plugin-forbid-cmdline.rs"}, {"sha": "491c4d2064681e9ae467a2f5b8a8399160cc253b", "filename": "tests/ui-fulldeps/plugin/lint-plugin-forbid-cmdline.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-forbid-cmdline.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-forbid-cmdline.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin-forbid-cmdline.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-plugin-forbid-cmdline.stderr"}, {"sha": "66057eea6bcf7bd11b6ee5d1af8605165fa95583", "filename": "tests/ui-fulldeps/plugin/lint-plugin.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-plugin.rs"}, {"sha": "dd5d3d72ecf39baff81953fceebedeec5c48deee", "filename": "tests/ui-fulldeps/plugin/lint-plugin.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-plugin.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-plugin.stderr"}, {"sha": "83a8b3e1a7eeda48fff961765b39079fa31f8612", "filename": "tests/ui-fulldeps/plugin/lint-tool-cmdline-allow.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-tool-cmdline-allow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-tool-cmdline-allow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-tool-cmdline-allow.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-tool-cmdline-allow.rs"}, {"sha": "b060e3a3e38b4c10eaac0a881b39258628a46961", "filename": "tests/ui-fulldeps/plugin/lint-tool-cmdline-allow.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-tool-cmdline-allow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-tool-cmdline-allow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-tool-cmdline-allow.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-tool-cmdline-allow.stderr"}, {"sha": "f92bcd213b844a272914c36cf2ceea10bb58ab0f", "filename": "tests/ui-fulldeps/plugin/lint-tool-test.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-tool-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-tool-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-tool-test.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-tool-test.rs"}, {"sha": "027cf8f80cff28b2c1ed539c9b1230dabde0e9c0", "filename": "tests/ui-fulldeps/plugin/lint-tool-test.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-tool-test.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flint-tool-test.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flint-tool-test.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lint-tool-test.stderr"}, {"sha": "5964e70f195a808782eb614c997c154830cde5d5", "filename": "tests/ui-fulldeps/plugin/lto-syntax-extension.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flto-syntax-extension.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flto-syntax-extension.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flto-syntax-extension.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lto-syntax-extension.rs"}, {"sha": "555493f32305ad8da2fbdb27ba9e5141cdaa0741", "filename": "tests/ui-fulldeps/plugin/lto-syntax-extension.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flto-syntax-extension.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Flto-syntax-extension.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Flto-syntax-extension.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/lto-syntax-extension.stderr"}, {"sha": "38bd340539ba1f6d433412e8e26ae1181484b7c9", "filename": "tests/ui-fulldeps/plugin/macro-crate-rlib.rs", "status": "renamed", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fmacro-crate-rlib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fmacro-crate-rlib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fmacro-crate-rlib.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1,4 +1,5 @@\n // aux-build:rlib-crate-test.rs\n+// ignore-stage1\n // ignore-cross-compile gives a different error message\n \n #![feature(plugin)]", "previous_filename": "tests/ui-fulldeps/macro-crate-rlib.rs"}, {"sha": "0651cee56f77271a49a7942930804c45cb12aba9", "filename": "tests/ui-fulldeps/plugin/macro-crate-rlib.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fmacro-crate-rlib.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fmacro-crate-rlib.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fmacro-crate-rlib.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1,5 +1,5 @@\n error[E0457]: plugin `rlib_crate_test` only found in rlib format, but must be available in dylib format\n-  --> $DIR/macro-crate-rlib.rs:5:11\n+  --> $DIR/macro-crate-rlib.rs:6:11\n    |\n LL | #![plugin(rlib_crate_test)]\n    |           ^^^^^^^^^^^^^^^", "previous_filename": "tests/ui-fulldeps/macro-crate-rlib.stderr"}, {"sha": "9af3ebd570ccaca1049a1e58010ed8439860e258", "filename": "tests/ui-fulldeps/plugin/multiple-plugins.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fmultiple-plugins.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fmultiple-plugins.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fmultiple-plugins.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/multiple-plugins.rs"}, {"sha": "878ffabfc7fc2c14e919b8afdba057e7c8cd0167", "filename": "tests/ui-fulldeps/plugin/multiple-plugins.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fmultiple-plugins.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fmultiple-plugins.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fmultiple-plugins.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/multiple-plugins.stderr"}, {"sha": "fb22888d98ab6f96854371b4430ae02f46cb46df", "filename": "tests/ui-fulldeps/plugin/outlive-expansion-phase.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Foutlive-expansion-phase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Foutlive-expansion-phase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Foutlive-expansion-phase.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/outlive-expansion-phase.rs"}, {"sha": "e40a08ae73b6037a1ef240b9ad6ed7df1ee9a286", "filename": "tests/ui-fulldeps/plugin/outlive-expansion-phase.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Foutlive-expansion-phase.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Foutlive-expansion-phase.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Foutlive-expansion-phase.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/outlive-expansion-phase.stderr"}, {"sha": "488f2b775bf0b48d5aec7e1d228d29fcae48bc24", "filename": "tests/ui-fulldeps/plugin/plugin-args.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fplugin-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fplugin-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fplugin-args.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/plugin-args.rs"}, {"sha": "177f33005c8cb9a897f3f15f051ffd45e63035c4", "filename": "tests/ui-fulldeps/plugin/plugin-args.stderr", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fplugin-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fplugin-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fplugin-args.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/plugin-args.stderr"}, {"sha": "4d26e08d81e9b72f9e984829c7813ecd428682ff", "filename": "tests/ui-fulldeps/plugin/plugin-as-extern-crate.rs", "status": "renamed", "additions": 0, "deletions": 0, "changes": 0, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fplugin-as-extern-crate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fplugin%2Fplugin-as-extern-crate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fplugin%2Fplugin-as-extern-crate.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "previous_filename": "tests/ui-fulldeps/plugin-as-extern-crate.rs"}, {"sha": "ef85fada5066c697ecdf1b5c29292f51bac2afa4", "filename": "tests/ui-fulldeps/session-diagnostic/diagnostic-derive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -6,6 +6,7 @@\n // The proc_macro2 crate handles spans differently when on beta/stable release rather than nightly,\n // changing the output of this test. Since Diagnostic is strictly internal to the compiler\n // the test is just ignored on stable and beta:\n+// ignore-stage1\n // ignore-beta\n // ignore-stable\n "}, {"sha": "3f96144956667167bcec835f1f8f1b9bb17c7fc5", "filename": "tests/ui-fulldeps/session-diagnostic/diagnostic-derive.stderr", "status": "modified", "additions": 91, "deletions": 91, "changes": 182, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fdiagnostic-derive.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1,39 +1,39 @@\n error: unsupported type attribute for diagnostic derive enum\n-  --> $DIR/diagnostic-derive.rs:41:1\n+  --> $DIR/diagnostic-derive.rs:42:1\n    |\n LL | #[diag(no_crate_example, code = \"E0123\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:44:5\n+  --> $DIR/diagnostic-derive.rs:45:5\n    |\n LL |     Foo,\n    |     ^^^\n    |\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:46:5\n+  --> $DIR/diagnostic-derive.rs:47:5\n    |\n LL |     Bar,\n    |     ^^^\n    |\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: expected parentheses: #[diag(...)]\n-  --> $DIR/diagnostic-derive.rs:52:8\n+  --> $DIR/diagnostic-derive.rs:53:8\n    |\n LL | #[diag = \"E0123\"]\n    |        ^\n \n error: `#[nonsense(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:57:1\n+  --> $DIR/diagnostic-derive.rs:58:1\n    |\n LL | #[nonsense(no_crate_example, code = \"E0123\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:57:1\n+  --> $DIR/diagnostic-derive.rs:58:1\n    |\n LL | / #[nonsense(no_crate_example, code = \"E0123\")]\n LL | |\n@@ -45,7 +45,7 @@ LL | | struct InvalidStructAttr {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:64:1\n+  --> $DIR/diagnostic-derive.rs:65:1\n    |\n LL | / #[diag(\"E0123\")]\n LL | |\n@@ -55,13 +55,13 @@ LL | | struct InvalidLitNestedAttr {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: diagnostic slug must be the first argument\n-  --> $DIR/diagnostic-derive.rs:74:16\n+  --> $DIR/diagnostic-derive.rs:75:16\n    |\n LL | #[diag(nonsense(\"foo\"), code = \"E0123\", slug = \"foo\")]\n    |                ^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:74:1\n+  --> $DIR/diagnostic-derive.rs:75:1\n    |\n LL | / #[diag(nonsense(\"foo\"), code = \"E0123\", slug = \"foo\")]\n LL | |\n@@ -72,15 +72,15 @@ LL | | struct InvalidNestedStructAttr1 {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: unknown argument\n-  --> $DIR/diagnostic-derive.rs:80:8\n+  --> $DIR/diagnostic-derive.rs:81:8\n    |\n LL | #[diag(nonsense = \"...\", code = \"E0123\", slug = \"foo\")]\n    |        ^^^^^^^^\n    |\n    = note: only the `code` parameter is valid after the slug\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:80:1\n+  --> $DIR/diagnostic-derive.rs:81:1\n    |\n LL | / #[diag(nonsense = \"...\", code = \"E0123\", slug = \"foo\")]\n LL | |\n@@ -91,15 +91,15 @@ LL | | struct InvalidNestedStructAttr2 {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: unknown argument\n-  --> $DIR/diagnostic-derive.rs:86:8\n+  --> $DIR/diagnostic-derive.rs:87:8\n    |\n LL | #[diag(nonsense = 4, code = \"E0123\", slug = \"foo\")]\n    |        ^^^^^^^^\n    |\n    = note: only the `code` parameter is valid after the slug\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:86:1\n+  --> $DIR/diagnostic-derive.rs:87:1\n    |\n LL | / #[diag(nonsense = 4, code = \"E0123\", slug = \"foo\")]\n LL | |\n@@ -110,71 +110,71 @@ LL | | struct InvalidNestedStructAttr3 {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: unknown argument\n-  --> $DIR/diagnostic-derive.rs:92:42\n+  --> $DIR/diagnostic-derive.rs:93:42\n    |\n LL | #[diag(no_crate_example, code = \"E0123\", slug = \"foo\")]\n    |                                          ^^^^\n    |\n    = note: only the `code` parameter is valid after the slug\n \n error: `#[suggestion = ...]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:99:5\n+  --> $DIR/diagnostic-derive.rs:100:5\n    |\n LL |     #[suggestion = \"bar\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:106:8\n+  --> $DIR/diagnostic-derive.rs:107:8\n    |\n LL | #[diag(no_crate_example, code = \"E0456\")]\n    |        ^^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:105:8\n+  --> $DIR/diagnostic-derive.rs:106:8\n    |\n LL | #[diag(no_crate_example, code = \"E0123\")]\n    |        ^^^^^^^^^^^^^^^^\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:106:26\n+  --> $DIR/diagnostic-derive.rs:107:26\n    |\n LL | #[diag(no_crate_example, code = \"E0456\")]\n    |                          ^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:105:26\n+  --> $DIR/diagnostic-derive.rs:106:26\n    |\n LL | #[diag(no_crate_example, code = \"E0123\")]\n    |                          ^^^^\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:112:42\n+  --> $DIR/diagnostic-derive.rs:113:42\n    |\n LL | #[diag(no_crate_example, code = \"E0456\", code = \"E0457\")]\n    |                                          ^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:112:26\n+  --> $DIR/diagnostic-derive.rs:113:26\n    |\n LL | #[diag(no_crate_example, code = \"E0456\", code = \"E0457\")]\n    |                          ^^^^\n \n error: diagnostic slug must be the first argument\n-  --> $DIR/diagnostic-derive.rs:117:43\n+  --> $DIR/diagnostic-derive.rs:118:43\n    |\n LL | #[diag(no_crate_example, no_crate::example, code = \"E0456\")]\n    |                                           ^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:122:1\n+  --> $DIR/diagnostic-derive.rs:123:1\n    |\n LL | struct KindNotProvided {}\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:125:1\n+  --> $DIR/diagnostic-derive.rs:126:1\n    |\n LL | / #[diag(code = \"E0456\")]\n LL | |\n@@ -184,31 +184,31 @@ LL | | struct SlugNotProvided {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: the `#[primary_span]` attribute can only be applied to fields of type `Span` or `MultiSpan`\n-  --> $DIR/diagnostic-derive.rs:136:5\n+  --> $DIR/diagnostic-derive.rs:137:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n \n error: `#[nonsense]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:144:5\n+  --> $DIR/diagnostic-derive.rs:145:5\n    |\n LL |     #[nonsense]\n    |     ^^^^^^^^^^^\n \n error: the `#[label(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`\n-  --> $DIR/diagnostic-derive.rs:161:5\n+  --> $DIR/diagnostic-derive.rs:162:5\n    |\n LL |     #[label(no_crate_label)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `name` doesn't refer to a field on this type\n-  --> $DIR/diagnostic-derive.rs:169:46\n+  --> $DIR/diagnostic-derive.rs:170:46\n    |\n LL |     #[suggestion(no_crate_suggestion, code = \"{name}\")]\n    |                                              ^^^^^^^^\n \n error: invalid format string: expected `'}'` but string was terminated\n-  --> $DIR/diagnostic-derive.rs:174:10\n+  --> $DIR/diagnostic-derive.rs:175:10\n    |\n LL | #[derive(Diagnostic)]\n    |          ^^^^^^^^^^ expected `'}'` in format string\n@@ -217,7 +217,7 @@ LL | #[derive(Diagnostic)]\n    = note: this error originates in the derive macro `Diagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: invalid format string: unmatched `}` found\n-  --> $DIR/diagnostic-derive.rs:184:10\n+  --> $DIR/diagnostic-derive.rs:185:10\n    |\n LL | #[derive(Diagnostic)]\n    |          ^^^^^^^^^^ unmatched `}` in format string\n@@ -226,47 +226,47 @@ LL | #[derive(Diagnostic)]\n    = note: this error originates in the derive macro `Diagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: the `#[label(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`\n-  --> $DIR/diagnostic-derive.rs:204:5\n+  --> $DIR/diagnostic-derive.rs:205:5\n    |\n LL |     #[label(no_crate_label)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: suggestion without `code = \"...\"`\n-  --> $DIR/diagnostic-derive.rs:223:5\n+  --> $DIR/diagnostic-derive.rs:224:5\n    |\n LL |     #[suggestion(no_crate_suggestion)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/diagnostic-derive.rs:231:18\n+  --> $DIR/diagnostic-derive.rs:232:18\n    |\n LL |     #[suggestion(nonsense = \"bar\")]\n    |                  ^^^^^^^^\n    |\n    = help: only `style`, `code` and `applicability` are valid nested attributes\n \n error: suggestion without `code = \"...\"`\n-  --> $DIR/diagnostic-derive.rs:231:5\n+  --> $DIR/diagnostic-derive.rs:232:5\n    |\n LL |     #[suggestion(nonsense = \"bar\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/diagnostic-derive.rs:240:18\n+  --> $DIR/diagnostic-derive.rs:241:18\n    |\n LL |     #[suggestion(msg = \"bar\")]\n    |                  ^^^\n    |\n    = help: only `style`, `code` and `applicability` are valid nested attributes\n \n error: suggestion without `code = \"...\"`\n-  --> $DIR/diagnostic-derive.rs:240:5\n+  --> $DIR/diagnostic-derive.rs:241:5\n    |\n LL |     #[suggestion(msg = \"bar\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: wrong field type for suggestion\n-  --> $DIR/diagnostic-derive.rs:263:5\n+  --> $DIR/diagnostic-derive.rs:264:5\n    |\n LL | /     #[suggestion(no_crate_suggestion, code = \"This is suggested code\")]\n LL | |\n@@ -276,93 +276,93 @@ LL | |     suggestion: Applicability,\n    = help: `#[suggestion(...)]` should be applied to fields of type `Span` or `(Span, Applicability)`\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:279:24\n+  --> $DIR/diagnostic-derive.rs:280:24\n    |\n LL |     suggestion: (Span, Span, Applicability),\n    |                        ^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:279:18\n+  --> $DIR/diagnostic-derive.rs:280:18\n    |\n LL |     suggestion: (Span, Span, Applicability),\n    |                  ^^^^\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:287:33\n+  --> $DIR/diagnostic-derive.rs:288:33\n    |\n LL |     suggestion: (Applicability, Applicability, Span),\n    |                                 ^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:287:18\n+  --> $DIR/diagnostic-derive.rs:288:18\n    |\n LL |     suggestion: (Applicability, Applicability, Span),\n    |                  ^^^^^^^^^^^^^\n \n error: `#[label = ...]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:294:5\n+  --> $DIR/diagnostic-derive.rs:295:5\n    |\n LL |     #[label = \"bar\"]\n    |     ^^^^^^^^^^^^^^^^\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:445:5\n+  --> $DIR/diagnostic-derive.rs:446:5\n    |\n LL |     #[suggestion(no_crate_suggestion, code = \"...\", applicability = \"maybe-incorrect\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:447:24\n+  --> $DIR/diagnostic-derive.rs:448:24\n    |\n LL |     suggestion: (Span, Applicability),\n    |                        ^^^^^^^^^^^^^\n \n error: invalid applicability\n-  --> $DIR/diagnostic-derive.rs:453:69\n+  --> $DIR/diagnostic-derive.rs:454:69\n    |\n LL |     #[suggestion(no_crate_suggestion, code = \"...\", applicability = \"batman\")]\n    |                                                                     ^^^^^^^^\n \n error: the `#[help(...)]` attribute can only be applied to fields of type `Span`, `MultiSpan`, `bool` or `()`\n-  --> $DIR/diagnostic-derive.rs:520:5\n+  --> $DIR/diagnostic-derive.rs:521:5\n    |\n LL |     #[help(no_crate_help)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: a diagnostic slug must be the first argument to the attribute\n-  --> $DIR/diagnostic-derive.rs:529:32\n+  --> $DIR/diagnostic-derive.rs:530:32\n    |\n LL |     #[label(no_crate_label, foo)]\n    |                                ^\n \n error: invalid nested attribute\n-  --> $DIR/diagnostic-derive.rs:537:29\n+  --> $DIR/diagnostic-derive.rs:538:29\n    |\n LL |     #[label(no_crate_label, foo = \"...\")]\n    |                             ^^^\n \n error: invalid nested attribute\n-  --> $DIR/diagnostic-derive.rs:545:29\n+  --> $DIR/diagnostic-derive.rs:546:29\n    |\n LL |     #[label(no_crate_label, foo(\"...\"))]\n    |                             ^^^\n \n error: `#[primary_span]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:557:5\n+  --> $DIR/diagnostic-derive.rs:558:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n    |\n    = help: the `primary_span` field attribute is not valid for lint diagnostics\n \n error: `#[error(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:577:1\n+  --> $DIR/diagnostic-derive.rs:578:1\n    |\n LL | #[error(no_crate_example, code = \"E0123\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:577:1\n+  --> $DIR/diagnostic-derive.rs:578:1\n    |\n LL | / #[error(no_crate_example, code = \"E0123\")]\n LL | |\n@@ -374,13 +374,13 @@ LL | | struct ErrorAttribute {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: `#[warn_(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:584:1\n+  --> $DIR/diagnostic-derive.rs:585:1\n    |\n LL | #[warn_(no_crate_example, code = \"E0123\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:584:1\n+  --> $DIR/diagnostic-derive.rs:585:1\n    |\n LL | / #[warn_(no_crate_example, code = \"E0123\")]\n LL | |\n@@ -392,13 +392,13 @@ LL | | struct WarnAttribute {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: `#[lint(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:591:1\n+  --> $DIR/diagnostic-derive.rs:592:1\n    |\n LL | #[lint(no_crate_example, code = \"E0123\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:591:1\n+  --> $DIR/diagnostic-derive.rs:592:1\n    |\n LL | / #[lint(no_crate_example, code = \"E0123\")]\n LL | |\n@@ -410,19 +410,19 @@ LL | | struct LintAttributeOnSessionDiag {}\n    = help: specify the slug as the first argument to the `#[diag(...)]` attribute, such as `#[diag(hir_analysis_example_error)]`\n \n error: `#[lint(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:598:1\n+  --> $DIR/diagnostic-derive.rs:599:1\n    |\n LL | #[lint(no_crate_example, code = \"E0123\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `#[lint(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:598:1\n+  --> $DIR/diagnostic-derive.rs:599:1\n    |\n LL | #[lint(no_crate_example, code = \"E0123\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: diagnostic slug not specified\n-  --> $DIR/diagnostic-derive.rs:598:1\n+  --> $DIR/diagnostic-derive.rs:599:1\n    |\n LL | / #[lint(no_crate_example, code = \"E0123\")]\n LL | |\n@@ -435,135 +435,135 @@ LL | | struct LintAttributeOnLintDiag {}\n    = help: specify the slug as the first argument to the attribute, such as `#[diag(compiletest_example)]`\n \n error: specified multiple times\n-  --> $DIR/diagnostic-derive.rs:608:53\n+  --> $DIR/diagnostic-derive.rs:609:53\n    |\n LL |     #[suggestion(no_crate_suggestion, code = \"...\", code = \",,,\")]\n    |                                                     ^^^^\n    |\n note: previously specified here\n-  --> $DIR/diagnostic-derive.rs:608:39\n+  --> $DIR/diagnostic-derive.rs:609:39\n    |\n LL |     #[suggestion(no_crate_suggestion, code = \"...\", code = \",,,\")]\n    |                                       ^^^^\n \n error: wrong types for suggestion\n-  --> $DIR/diagnostic-derive.rs:617:24\n+  --> $DIR/diagnostic-derive.rs:618:24\n    |\n LL |     suggestion: (Span, usize),\n    |                        ^^^^^\n    |\n    = help: `#[suggestion(...)]` on a tuple field must be applied to fields of type `(Span, Applicability)`\n \n error: wrong types for suggestion\n-  --> $DIR/diagnostic-derive.rs:625:17\n+  --> $DIR/diagnostic-derive.rs:626:17\n    |\n LL |     suggestion: (Span,),\n    |                 ^^^^^^^\n    |\n    = help: `#[suggestion(...)]` on a tuple field must be applied to fields of type `(Span, Applicability)`\n \n error: suggestion without `code = \"...\"`\n-  --> $DIR/diagnostic-derive.rs:632:5\n+  --> $DIR/diagnostic-derive.rs:633:5\n    |\n LL |     #[suggestion(no_crate_suggestion)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `#[multipart_suggestion(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:639:1\n+  --> $DIR/diagnostic-derive.rs:640:1\n    |\n LL | #[multipart_suggestion(no_crate_suggestion)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider creating a `Subdiagnostic` instead\n \n error: `#[multipart_suggestion(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:646:5\n+  --> $DIR/diagnostic-derive.rs:647:5\n    |\n LL |     #[multipart_suggestion(no_crate_suggestion)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider creating a `Subdiagnostic` instead\n \n error: unexpected end of input, unexpected token in nested attribute, expected ident\n-  --> $DIR/diagnostic-derive.rs:642:24\n+  --> $DIR/diagnostic-derive.rs:643:24\n    |\n LL | #[multipart_suggestion()]\n    |                        ^\n \n error: `#[suggestion(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:654:1\n+  --> $DIR/diagnostic-derive.rs:655:1\n    |\n LL | #[suggestion(no_crate_suggestion, code = \"...\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `#[label]` and `#[suggestion]` can only be applied to fields\n \n error: `#[label]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:663:1\n+  --> $DIR/diagnostic-derive.rs:664:1\n    |\n LL | #[label]\n    | ^^^^^^^^\n    |\n    = help: `#[label]` and `#[suggestion]` can only be applied to fields\n \n error: `eager` is the only supported nested attribute for `subdiagnostic`\n-  --> $DIR/diagnostic-derive.rs:697:7\n+  --> $DIR/diagnostic-derive.rs:698:7\n    |\n LL |     #[subdiagnostic(bad)]\n    |       ^^^^^^^^^^^^^^^^^^\n \n error: `#[subdiagnostic = ...]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:705:5\n+  --> $DIR/diagnostic-derive.rs:706:5\n    |\n LL |     #[subdiagnostic = \"bad\"]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `eager` is the only supported nested attribute for `subdiagnostic`\n-  --> $DIR/diagnostic-derive.rs:713:7\n+  --> $DIR/diagnostic-derive.rs:714:7\n    |\n LL |     #[subdiagnostic(bad, bad)]\n    |       ^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `eager` is the only supported nested attribute for `subdiagnostic`\n-  --> $DIR/diagnostic-derive.rs:721:7\n+  --> $DIR/diagnostic-derive.rs:722:7\n    |\n LL |     #[subdiagnostic(\"bad\")]\n    |       ^^^^^^^^^^^^^^^^^^^^\n \n error: `#[subdiagnostic(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:729:5\n+  --> $DIR/diagnostic-derive.rs:730:5\n    |\n LL |     #[subdiagnostic(eager)]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: eager subdiagnostics are not supported on lints\n \n error: expected at least one string literal for `code(...)`\n-  --> $DIR/diagnostic-derive.rs:787:23\n+  --> $DIR/diagnostic-derive.rs:788:23\n    |\n LL |     #[suggestion(code())]\n    |                       ^\n \n error: `code(...)` must contain only string literals\n-  --> $DIR/diagnostic-derive.rs:795:23\n+  --> $DIR/diagnostic-derive.rs:796:23\n    |\n LL |     #[suggestion(code(foo))]\n    |                       ^^^\n \n error: unexpected token\n-  --> $DIR/diagnostic-derive.rs:795:23\n+  --> $DIR/diagnostic-derive.rs:796:23\n    |\n LL |     #[suggestion(code(foo))]\n    |                       ^^^\n \n error: expected string literal\n-  --> $DIR/diagnostic-derive.rs:804:25\n+  --> $DIR/diagnostic-derive.rs:805:25\n    |\n LL |     #[suggestion(code = 3)]\n    |                         ^\n \n error: `#[suggestion(...)]` is not a valid attribute\n-  --> $DIR/diagnostic-derive.rs:819:5\n+  --> $DIR/diagnostic-derive.rs:820:5\n    |\n LL |     #[suggestion(no_crate_suggestion, code = \"\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -573,75 +573,75 @@ LL |     #[suggestion(no_crate_suggestion, code = \"\")]\n    = help: to show a variable set of suggestions, use a `Vec` of `Subdiagnostic`s annotated with `#[suggestion(...)]`\n \n error: cannot find attribute `nonsense` in this scope\n-  --> $DIR/diagnostic-derive.rs:57:3\n+  --> $DIR/diagnostic-derive.rs:58:3\n    |\n LL | #[nonsense(no_crate_example, code = \"E0123\")]\n    |   ^^^^^^^^\n \n error: cannot find attribute `nonsense` in this scope\n-  --> $DIR/diagnostic-derive.rs:144:7\n+  --> $DIR/diagnostic-derive.rs:145:7\n    |\n LL |     #[nonsense]\n    |       ^^^^^^^^\n \n error: cannot find attribute `error` in this scope\n-  --> $DIR/diagnostic-derive.rs:577:3\n+  --> $DIR/diagnostic-derive.rs:578:3\n    |\n LL | #[error(no_crate_example, code = \"E0123\")]\n    |   ^^^^^\n \n error: cannot find attribute `warn_` in this scope\n-  --> $DIR/diagnostic-derive.rs:584:3\n+  --> $DIR/diagnostic-derive.rs:585:3\n    |\n LL | #[warn_(no_crate_example, code = \"E0123\")]\n    |   ^^^^^ help: a built-in attribute with a similar name exists: `warn`\n \n error: cannot find attribute `lint` in this scope\n-  --> $DIR/diagnostic-derive.rs:591:3\n+  --> $DIR/diagnostic-derive.rs:592:3\n    |\n LL | #[lint(no_crate_example, code = \"E0123\")]\n    |   ^^^^ help: a built-in attribute with a similar name exists: `link`\n \n error: cannot find attribute `lint` in this scope\n-  --> $DIR/diagnostic-derive.rs:598:3\n+  --> $DIR/diagnostic-derive.rs:599:3\n    |\n LL | #[lint(no_crate_example, code = \"E0123\")]\n    |   ^^^^ help: a built-in attribute with a similar name exists: `link`\n \n error: cannot find attribute `multipart_suggestion` in this scope\n-  --> $DIR/diagnostic-derive.rs:639:3\n+  --> $DIR/diagnostic-derive.rs:640:3\n    |\n LL | #[multipart_suggestion(no_crate_suggestion)]\n    |   ^^^^^^^^^^^^^^^^^^^^\n \n error: cannot find attribute `multipart_suggestion` in this scope\n-  --> $DIR/diagnostic-derive.rs:642:3\n+  --> $DIR/diagnostic-derive.rs:643:3\n    |\n LL | #[multipart_suggestion()]\n    |   ^^^^^^^^^^^^^^^^^^^^\n \n error: cannot find attribute `multipart_suggestion` in this scope\n-  --> $DIR/diagnostic-derive.rs:646:7\n+  --> $DIR/diagnostic-derive.rs:647:7\n    |\n LL |     #[multipart_suggestion(no_crate_suggestion)]\n    |       ^^^^^^^^^^^^^^^^^^^^\n \n error[E0425]: cannot find value `nonsense` in module `crate::fluent_generated`\n-  --> $DIR/diagnostic-derive.rs:69:8\n+  --> $DIR/diagnostic-derive.rs:70:8\n    |\n LL | #[diag(nonsense, code = \"E0123\")]\n    |        ^^^^^^^^ not found in `crate::fluent_generated`\n \n error[E0425]: cannot find value `__code_34` in this scope\n-  --> $DIR/diagnostic-derive.rs:801:10\n+  --> $DIR/diagnostic-derive.rs:802:10\n    |\n LL | #[derive(Diagnostic)]\n    |          ^^^^^^^^^^ not found in this scope\n    |\n    = note: this error originates in the derive macro `Diagnostic` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0277]: the trait bound `Hello: IntoDiagnosticArg` is not satisfied\n-  --> $DIR/diagnostic-derive.rs:338:10\n+  --> $DIR/diagnostic-derive.rs:339:10\n    |\n LL | #[derive(Diagnostic)]\n    |          ^^^^^^^^^^ the trait `IntoDiagnosticArg` is not implemented for `Hello`"}, {"sha": "73cc1cfc03a2bed5fb9f7df911762f1c9abe9b35", "filename": "tests/ui-fulldeps/session-diagnostic/subdiagnostic-derive.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -4,6 +4,7 @@\n // The proc_macro2 crate handles spans differently when on beta/stable release rather than nightly,\n // changing the output of this test. Since Subdiagnostic is strictly internal to the compiler\n // the test is just ignored on stable and beta:\n+// ignore-stage1\n // ignore-beta\n // ignore-stable\n "}, {"sha": "529003d90ab88ac2bce157d2a728b25597734cd8", "filename": "tests/ui-fulldeps/session-diagnostic/subdiagnostic-derive.stderr", "status": "modified", "additions": 91, "deletions": 91, "changes": 182, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-fulldeps%2Fsession-diagnostic%2Fsubdiagnostic-derive.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1,5 +1,5 @@\n error: label without `#[primary_span]` field\n-  --> $DIR/subdiagnostic-derive.rs:49:1\n+  --> $DIR/subdiagnostic-derive.rs:50:1\n    |\n LL | / #[label(no_crate_example)]\n LL | |\n@@ -9,133 +9,133 @@ LL | | }\n    | |_^\n \n error: diagnostic slug must be first argument of a `#[label(...)]` attribute\n-  --> $DIR/subdiagnostic-derive.rs:56:1\n+  --> $DIR/subdiagnostic-derive.rs:57:1\n    |\n LL | #[label]\n    | ^^^^^^^^\n \n error: `#[foo]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:65:1\n+  --> $DIR/subdiagnostic-derive.rs:66:1\n    |\n LL | #[foo]\n    | ^^^^^^\n \n error: `#[label = ...]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:75:1\n+  --> $DIR/subdiagnostic-derive.rs:76:1\n    |\n LL | #[label = \"...\"]\n    | ^^^^^^^^^^^^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:84:9\n+  --> $DIR/subdiagnostic-derive.rs:85:9\n    |\n LL | #[label(bug = \"...\")]\n    |         ^^^\n \n error: diagnostic slug must be first argument of a `#[label(...)]` attribute\n-  --> $DIR/subdiagnostic-derive.rs:84:1\n+  --> $DIR/subdiagnostic-derive.rs:85:1\n    |\n LL | #[label(bug = \"...\")]\n    | ^^^^^^^^^^^^^^^^^^^^^\n \n error: unexpected literal in nested attribute, expected ident\n-  --> $DIR/subdiagnostic-derive.rs:94:9\n+  --> $DIR/subdiagnostic-derive.rs:95:9\n    |\n LL | #[label(\"...\")]\n    |         ^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:103:9\n+  --> $DIR/subdiagnostic-derive.rs:104:9\n    |\n LL | #[label(slug = 4)]\n    |         ^^^^\n \n error: diagnostic slug must be first argument of a `#[label(...)]` attribute\n-  --> $DIR/subdiagnostic-derive.rs:103:1\n+  --> $DIR/subdiagnostic-derive.rs:104:1\n    |\n LL | #[label(slug = 4)]\n    | ^^^^^^^^^^^^^^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:113:9\n+  --> $DIR/subdiagnostic-derive.rs:114:9\n    |\n LL | #[label(slug(\"...\"))]\n    |         ^^^^\n \n error: diagnostic slug must be first argument of a `#[label(...)]` attribute\n-  --> $DIR/subdiagnostic-derive.rs:113:1\n+  --> $DIR/subdiagnostic-derive.rs:114:1\n    |\n LL | #[label(slug(\"...\"))]\n    | ^^^^^^^^^^^^^^^^^^^^^\n \n error: unexpected end of input, unexpected token in nested attribute, expected ident\n-  --> $DIR/subdiagnostic-derive.rs:133:9\n+  --> $DIR/subdiagnostic-derive.rs:134:9\n    |\n LL | #[label()]\n    |         ^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:142:27\n+  --> $DIR/subdiagnostic-derive.rs:143:27\n    |\n LL | #[label(no_crate_example, code = \"...\")]\n    |                           ^^^^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:151:27\n+  --> $DIR/subdiagnostic-derive.rs:152:27\n    |\n LL | #[label(no_crate_example, applicability = \"machine-applicable\")]\n    |                           ^^^^^^^^^^^^^\n \n error: unsupported type attribute for subdiagnostic enum\n-  --> $DIR/subdiagnostic-derive.rs:160:1\n+  --> $DIR/subdiagnostic-derive.rs:161:1\n    |\n LL | #[foo]\n    | ^^^^^^\n \n error: `#[bar]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:174:5\n+  --> $DIR/subdiagnostic-derive.rs:175:5\n    |\n LL |     #[bar]\n    |     ^^^^^^\n \n error: `#[bar = ...]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:186:5\n+  --> $DIR/subdiagnostic-derive.rs:187:5\n    |\n LL |     #[bar = \"...\"]\n    |     ^^^^^^^^^^^^^^\n \n error: `#[bar = ...]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:198:5\n+  --> $DIR/subdiagnostic-derive.rs:199:5\n    |\n LL |     #[bar = 4]\n    |     ^^^^^^^^^^\n \n error: `#[bar(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:210:5\n+  --> $DIR/subdiagnostic-derive.rs:211:5\n    |\n LL |     #[bar(\"...\")]\n    |     ^^^^^^^^^^^^^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:222:13\n+  --> $DIR/subdiagnostic-derive.rs:223:13\n    |\n LL |     #[label(code = \"...\")]\n    |             ^^^^\n \n error: diagnostic slug must be first argument of a `#[label(...)]` attribute\n-  --> $DIR/subdiagnostic-derive.rs:222:5\n+  --> $DIR/subdiagnostic-derive.rs:223:5\n    |\n LL |     #[label(code = \"...\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n \n error: the `#[primary_span]` attribute can only be applied to fields of type `Span` or `MultiSpan`\n-  --> $DIR/subdiagnostic-derive.rs:251:5\n+  --> $DIR/subdiagnostic-derive.rs:252:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n \n error: label without `#[primary_span]` field\n-  --> $DIR/subdiagnostic-derive.rs:248:1\n+  --> $DIR/subdiagnostic-derive.rs:249:1\n    |\n LL | / #[label(no_crate_example)]\n LL | |\n@@ -147,35 +147,35 @@ LL | | }\n    | |_^\n \n error: `#[applicability]` is only valid on suggestions\n-  --> $DIR/subdiagnostic-derive.rs:261:5\n+  --> $DIR/subdiagnostic-derive.rs:262:5\n    |\n LL |     #[applicability]\n    |     ^^^^^^^^^^^^^^^^\n \n error: `#[bar]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:271:5\n+  --> $DIR/subdiagnostic-derive.rs:272:5\n    |\n LL |     #[bar]\n    |     ^^^^^^\n    |\n    = help: only `primary_span`, `applicability` and `skip_arg` are valid field attributes\n \n error: `#[bar = ...]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:282:5\n+  --> $DIR/subdiagnostic-derive.rs:283:5\n    |\n LL |     #[bar = \"...\"]\n    |     ^^^^^^^^^^^^^^\n \n error: `#[bar(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:293:5\n+  --> $DIR/subdiagnostic-derive.rs:294:5\n    |\n LL |     #[bar(\"...\")]\n    |     ^^^^^^^^^^^^^\n    |\n    = help: only `primary_span`, `applicability` and `skip_arg` are valid field attributes\n \n error: unexpected unsupported untagged union\n-  --> $DIR/subdiagnostic-derive.rs:309:1\n+  --> $DIR/subdiagnostic-derive.rs:310:1\n    |\n LL | / union AC {\n LL | |\n@@ -185,73 +185,73 @@ LL | | }\n    | |_^\n \n error: a diagnostic slug must be the first argument to the attribute\n-  --> $DIR/subdiagnostic-derive.rs:324:44\n+  --> $DIR/subdiagnostic-derive.rs:325:44\n    |\n LL | #[label(no_crate_example, no_crate::example)]\n    |                                            ^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:337:5\n+  --> $DIR/subdiagnostic-derive.rs:338:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:334:5\n+  --> $DIR/subdiagnostic-derive.rs:335:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n \n error: subdiagnostic kind not specified\n-  --> $DIR/subdiagnostic-derive.rs:343:8\n+  --> $DIR/subdiagnostic-derive.rs:344:8\n    |\n LL | struct AG {\n    |        ^^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:380:46\n+  --> $DIR/subdiagnostic-derive.rs:381:46\n    |\n LL | #[suggestion(no_crate_example, code = \"...\", code = \"...\")]\n    |                                              ^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:380:32\n+  --> $DIR/subdiagnostic-derive.rs:381:32\n    |\n LL | #[suggestion(no_crate_example, code = \"...\", code = \"...\")]\n    |                                ^^^^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:398:5\n+  --> $DIR/subdiagnostic-derive.rs:399:5\n    |\n LL |     #[applicability]\n    |     ^^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:395:5\n+  --> $DIR/subdiagnostic-derive.rs:396:5\n    |\n LL |     #[applicability]\n    |     ^^^^^^^^^^^^^^^^\n \n error: the `#[applicability]` attribute can only be applied to fields of type `Applicability`\n-  --> $DIR/subdiagnostic-derive.rs:408:5\n+  --> $DIR/subdiagnostic-derive.rs:409:5\n    |\n LL |     #[applicability]\n    |     ^^^^^^^^^^^^^^^^\n \n error: suggestion without `code = \"...\"`\n-  --> $DIR/subdiagnostic-derive.rs:421:1\n+  --> $DIR/subdiagnostic-derive.rs:422:1\n    |\n LL | #[suggestion(no_crate_example)]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: invalid applicability\n-  --> $DIR/subdiagnostic-derive.rs:431:62\n+  --> $DIR/subdiagnostic-derive.rs:432:62\n    |\n LL | #[suggestion(no_crate_example, code = \"...\", applicability = \"foo\")]\n    |                                                              ^^^^^\n \n error: suggestion without `#[primary_span]` field\n-  --> $DIR/subdiagnostic-derive.rs:449:1\n+  --> $DIR/subdiagnostic-derive.rs:450:1\n    |\n LL | / #[suggestion(no_crate_example, code = \"...\")]\n LL | |\n@@ -261,41 +261,41 @@ LL | | }\n    | |_^\n \n error: unsupported type attribute for subdiagnostic enum\n-  --> $DIR/subdiagnostic-derive.rs:463:1\n+  --> $DIR/subdiagnostic-derive.rs:464:1\n    |\n LL | #[label]\n    | ^^^^^^^^\n \n error: `var` doesn't refer to a field on this type\n-  --> $DIR/subdiagnostic-derive.rs:483:39\n+  --> $DIR/subdiagnostic-derive.rs:484:39\n    |\n LL | #[suggestion(no_crate_example, code = \"{var}\", applicability = \"machine-applicable\")]\n    |                                       ^^^^^^^\n \n error: `var` doesn't refer to a field on this type\n-  --> $DIR/subdiagnostic-derive.rs:502:43\n+  --> $DIR/subdiagnostic-derive.rs:503:43\n    |\n LL |     #[suggestion(no_crate_example, code = \"{var}\", applicability = \"machine-applicable\")]\n    |                                           ^^^^^^^\n \n error: `#[suggestion_part]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:525:5\n+  --> $DIR/subdiagnostic-derive.rs:526:5\n    |\n LL |     #[suggestion_part]\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: `#[suggestion_part(...)]` is only valid in multipart suggestions, use `#[primary_span]` instead\n \n error: `#[suggestion_part(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:528:5\n+  --> $DIR/subdiagnostic-derive.rs:529:5\n    |\n LL |     #[suggestion_part(code = \"...\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: `#[suggestion_part(...)]` is only valid in multipart suggestions\n \n error: suggestion without `#[primary_span]` field\n-  --> $DIR/subdiagnostic-derive.rs:522:1\n+  --> $DIR/subdiagnostic-derive.rs:523:1\n    |\n LL | / #[suggestion(no_crate_example, code = \"...\")]\n LL | |\n@@ -307,15 +307,15 @@ LL | | }\n    | |_^\n \n error: invalid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:537:42\n+  --> $DIR/subdiagnostic-derive.rs:538:42\n    |\n LL | #[multipart_suggestion(no_crate_example, code = \"...\", applicability = \"machine-applicable\")]\n    |                                          ^^^^\n    |\n    = help: only `style` and `applicability` are valid nested attributes\n \n error: multipart suggestion without any `#[suggestion_part(...)]` fields\n-  --> $DIR/subdiagnostic-derive.rs:537:1\n+  --> $DIR/subdiagnostic-derive.rs:538:1\n    |\n LL | / #[multipart_suggestion(no_crate_example, code = \"...\", applicability = \"machine-applicable\")]\n LL | |\n@@ -326,27 +326,27 @@ LL | | }\n    | |_^\n \n error: `#[suggestion_part(...)]` attribute without `code = \"...\"`\n-  --> $DIR/subdiagnostic-derive.rs:547:5\n+  --> $DIR/subdiagnostic-derive.rs:548:5\n    |\n LL |     #[suggestion_part]\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: unexpected end of input, unexpected token in nested attribute, expected ident\n-  --> $DIR/subdiagnostic-derive.rs:555:23\n+  --> $DIR/subdiagnostic-derive.rs:556:23\n    |\n LL |     #[suggestion_part()]\n    |                       ^\n \n error: `#[primary_span]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:564:5\n+  --> $DIR/subdiagnostic-derive.rs:565:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n    |\n    = help: multipart suggestions use one or more `#[suggestion_part]`s rather than one `#[primary_span]`\n \n error: multipart suggestion without any `#[suggestion_part(...)]` fields\n-  --> $DIR/subdiagnostic-derive.rs:561:1\n+  --> $DIR/subdiagnostic-derive.rs:562:1\n    |\n LL | / #[multipart_suggestion(no_crate_example)]\n LL | |\n@@ -358,169 +358,169 @@ LL | | }\n    | |_^\n \n error: `#[suggestion_part(...)]` attribute without `code = \"...\"`\n-  --> $DIR/subdiagnostic-derive.rs:572:5\n+  --> $DIR/subdiagnostic-derive.rs:573:5\n    |\n LL |     #[suggestion_part]\n    |     ^^^^^^^^^^^^^^^^^^\n \n error: `code` is the only valid nested attribute\n-  --> $DIR/subdiagnostic-derive.rs:578:23\n+  --> $DIR/subdiagnostic-derive.rs:579:23\n    |\n LL |     #[suggestion_part(foo = \"bar\")]\n    |                       ^^^\n \n error: the `#[suggestion_part(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`\n-  --> $DIR/subdiagnostic-derive.rs:582:5\n+  --> $DIR/subdiagnostic-derive.rs:583:5\n    |\n LL |     #[suggestion_part(code = \"...\")]\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the `#[suggestion_part(...)]` attribute can only be applied to fields of type `Span` or `MultiSpan`\n-  --> $DIR/subdiagnostic-derive.rs:585:5\n+  --> $DIR/subdiagnostic-derive.rs:586:5\n    |\n LL |     #[suggestion_part()]\n    |     ^^^^^^^^^^^^^^^^^^^^\n \n error: unexpected end of input, unexpected token in nested attribute, expected ident\n-  --> $DIR/subdiagnostic-derive.rs:575:23\n+  --> $DIR/subdiagnostic-derive.rs:576:23\n    |\n LL |     #[suggestion_part()]\n    |                       ^\n \n error: expected `,`\n-  --> $DIR/subdiagnostic-derive.rs:578:27\n+  --> $DIR/subdiagnostic-derive.rs:579:27\n    |\n LL |     #[suggestion_part(foo = \"bar\")]\n    |                           ^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:593:37\n+  --> $DIR/subdiagnostic-derive.rs:594:37\n    |\n LL |     #[suggestion_part(code = \"...\", code = \",,,\")]\n    |                                     ^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:593:23\n+  --> $DIR/subdiagnostic-derive.rs:594:23\n    |\n LL |     #[suggestion_part(code = \"...\", code = \",,,\")]\n    |                       ^^^^\n \n error: `#[applicability]` has no effect if all `#[suggestion]`/`#[multipart_suggestion]` attributes have a static `applicability = \"...\"`\n-  --> $DIR/subdiagnostic-derive.rs:622:5\n+  --> $DIR/subdiagnostic-derive.rs:623:5\n    |\n LL |     #[applicability]\n    |     ^^^^^^^^^^^^^^^^\n \n error: expected exactly one string literal for `code = ...`\n-  --> $DIR/subdiagnostic-derive.rs:670:34\n+  --> $DIR/subdiagnostic-derive.rs:671:34\n    |\n LL |     #[suggestion_part(code(\"foo\"))]\n    |                                  ^\n \n error: unexpected token\n-  --> $DIR/subdiagnostic-derive.rs:670:28\n+  --> $DIR/subdiagnostic-derive.rs:671:28\n    |\n LL |     #[suggestion_part(code(\"foo\"))]\n    |                            ^^^^^\n \n error: expected exactly one string literal for `code = ...`\n-  --> $DIR/subdiagnostic-derive.rs:680:41\n+  --> $DIR/subdiagnostic-derive.rs:681:41\n    |\n LL |     #[suggestion_part(code(\"foo\", \"bar\"))]\n    |                                         ^\n \n error: unexpected token\n-  --> $DIR/subdiagnostic-derive.rs:680:28\n+  --> $DIR/subdiagnostic-derive.rs:681:28\n    |\n LL |     #[suggestion_part(code(\"foo\", \"bar\"))]\n    |                            ^^^^^\n \n error: expected exactly one string literal for `code = ...`\n-  --> $DIR/subdiagnostic-derive.rs:690:30\n+  --> $DIR/subdiagnostic-derive.rs:691:30\n    |\n LL |     #[suggestion_part(code(3))]\n    |                              ^\n \n error: unexpected token\n-  --> $DIR/subdiagnostic-derive.rs:690:28\n+  --> $DIR/subdiagnostic-derive.rs:691:28\n    |\n LL |     #[suggestion_part(code(3))]\n    |                            ^\n \n error: expected exactly one string literal for `code = ...`\n-  --> $DIR/subdiagnostic-derive.rs:700:29\n+  --> $DIR/subdiagnostic-derive.rs:701:29\n    |\n LL |     #[suggestion_part(code())]\n    |                             ^\n \n error: expected string literal\n-  --> $DIR/subdiagnostic-derive.rs:712:30\n+  --> $DIR/subdiagnostic-derive.rs:713:30\n    |\n LL |     #[suggestion_part(code = 3)]\n    |                              ^\n \n error: specified multiple times\n-  --> $DIR/subdiagnostic-derive.rs:754:1\n+  --> $DIR/subdiagnostic-derive.rs:755:1\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style = \"hidden\", style = \"normal\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: previously specified here\n-  --> $DIR/subdiagnostic-derive.rs:754:1\n+  --> $DIR/subdiagnostic-derive.rs:755:1\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style = \"hidden\", style = \"normal\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: `#[suggestion_hidden(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:763:1\n+  --> $DIR/subdiagnostic-derive.rs:764:1\n    |\n LL | #[suggestion_hidden(no_crate_example, code = \"\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Use `#[suggestion(..., style = \"hidden\")]` instead\n \n error: `#[suggestion_hidden(...)]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:771:1\n+  --> $DIR/subdiagnostic-derive.rs:772:1\n    |\n LL | #[suggestion_hidden(no_crate_example, code = \"\", style = \"normal\")]\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = help: Use `#[suggestion(..., style = \"hidden\")]` instead\n \n error: invalid suggestion style\n-  --> $DIR/subdiagnostic-derive.rs:779:51\n+  --> $DIR/subdiagnostic-derive.rs:780:51\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style = \"foo\")]\n    |                                                   ^^^^^\n    |\n    = help: valid styles are `normal`, `short`, `hidden`, `verbose` and `tool-only`\n \n error: expected `= \"xxx\"`\n-  --> $DIR/subdiagnostic-derive.rs:787:49\n+  --> $DIR/subdiagnostic-derive.rs:788:49\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style = 42)]\n    |                                                 ^\n \n error: a diagnostic slug must be the first argument to the attribute\n-  --> $DIR/subdiagnostic-derive.rs:795:48\n+  --> $DIR/subdiagnostic-derive.rs:796:48\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style)]\n    |                                                ^\n \n error: expected `= \"xxx\"`\n-  --> $DIR/subdiagnostic-derive.rs:803:48\n+  --> $DIR/subdiagnostic-derive.rs:804:48\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style(\"foo\"))]\n    |                                                ^\n \n error: expected `,`\n-  --> $DIR/subdiagnostic-derive.rs:803:48\n+  --> $DIR/subdiagnostic-derive.rs:804:48\n    |\n LL | #[suggestion(no_crate_example, code = \"\", style(\"foo\"))]\n    |                                                ^\n \n error: `#[primary_span]` is not a valid attribute\n-  --> $DIR/subdiagnostic-derive.rs:815:5\n+  --> $DIR/subdiagnostic-derive.rs:816:5\n    |\n LL |     #[primary_span]\n    |     ^^^^^^^^^^^^^^^\n@@ -529,7 +529,7 @@ LL |     #[primary_span]\n    = help: to create a suggestion with multiple spans, use `#[multipart_suggestion]` instead\n \n error: suggestion without `#[primary_span]` field\n-  --> $DIR/subdiagnostic-derive.rs:812:1\n+  --> $DIR/subdiagnostic-derive.rs:813:1\n    |\n LL | / #[suggestion(no_crate_example, code = \"\")]\n LL | |\n@@ -541,67 +541,67 @@ LL | | }\n    | |_^\n \n error: cannot find attribute `foo` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:65:3\n+  --> $DIR/subdiagnostic-derive.rs:66:3\n    |\n LL | #[foo]\n    |   ^^^\n \n error: cannot find attribute `foo` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:160:3\n+  --> $DIR/subdiagnostic-derive.rs:161:3\n    |\n LL | #[foo]\n    |   ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:174:7\n+  --> $DIR/subdiagnostic-derive.rs:175:7\n    |\n LL |     #[bar]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:186:7\n+  --> $DIR/subdiagnostic-derive.rs:187:7\n    |\n LL |     #[bar = \"...\"]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:198:7\n+  --> $DIR/subdiagnostic-derive.rs:199:7\n    |\n LL |     #[bar = 4]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:210:7\n+  --> $DIR/subdiagnostic-derive.rs:211:7\n    |\n LL |     #[bar(\"...\")]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:271:7\n+  --> $DIR/subdiagnostic-derive.rs:272:7\n    |\n LL |     #[bar]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:282:7\n+  --> $DIR/subdiagnostic-derive.rs:283:7\n    |\n LL |     #[bar = \"...\"]\n    |       ^^^\n \n error: cannot find attribute `bar` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:293:7\n+  --> $DIR/subdiagnostic-derive.rs:294:7\n    |\n LL |     #[bar(\"...\")]\n    |       ^^^\n \n error[E0425]: cannot find value `slug` in module `crate::fluent_generated`\n-  --> $DIR/subdiagnostic-derive.rs:123:9\n+  --> $DIR/subdiagnostic-derive.rs:124:9\n    |\n LL | #[label(slug)]\n    |         ^^^^ not found in `crate::fluent_generated`\n \n error[E0425]: cannot find value `__code_29` in this scope\n-  --> $DIR/subdiagnostic-derive.rs:706:10\n+  --> $DIR/subdiagnostic-derive.rs:707:10\n    |\n LL | #[derive(Subdiagnostic)]\n    |          ^^^^^^^^^^^^^ not found in this scope"}, {"sha": "8156b6ef617e69850b09ab9c19add0b0502c1bd4", "filename": "tests/ui/lint-group-denied-lint-allowed.rs", "status": "renamed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui%2Flint-group-denied-lint-allowed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui%2Flint-group-denied-lint-allowed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint-group-denied-lint-allowed.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1,4 +1,3 @@\n-// aux-build:lint-group-plugin-test.rs\n // check-pass\n // compile-flags: -D unused -A unused-variables\n ", "previous_filename": "tests/ui-fulldeps/lint-group-denied-lint-allowed.rs"}, {"sha": "77b792f98d5b1fb6fdbd8edf8bed158a121f9d40", "filename": "tests/ui/lint-group-forbid-always-trumps-cli.rs", "status": "renamed", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui%2Flint-group-forbid-always-trumps-cli.rs", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui%2Flint-group-forbid-always-trumps-cli.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint-group-forbid-always-trumps-cli.rs?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1,4 +1,3 @@\n-// aux-build:lint-group-plugin-test.rs\n // compile-flags: -F unused -A unused\n \n fn main() {", "previous_filename": "tests/ui-fulldeps/lint-group-forbid-always-trumps-cli.rs"}, {"sha": "8910af87ca22214223dacea80a6523eb722b8b4e", "filename": "tests/ui/lint-group-forbid-always-trumps-cli.stderr", "status": "renamed", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui%2Flint-group-forbid-always-trumps-cli.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/de96f3d8735b70d5dc1ca178aaee198b329b8f3d/tests%2Fui%2Flint-group-forbid-always-trumps-cli.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint-group-forbid-always-trumps-cli.stderr?ref=de96f3d8735b70d5dc1ca178aaee198b329b8f3d", "patch": "@@ -1,5 +1,5 @@\n error: unused variable: `x`\n-  --> $DIR/lint-group-forbid-always-trumps-cli.rs:5:9\n+  --> $DIR/lint-group-forbid-always-trumps-cli.rs:4:9\n    |\n LL |     let x = 1;\n    |         ^ help: if this is intentional, prefix it with an underscore: `_x`", "previous_filename": "tests/ui-fulldeps/lint-group-forbid-always-trumps-cli.stderr"}]}