{"sha": "be38926b6941f13b1f03c2e3523b98dd256b3c7b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJlMzg5MjZiNjk0MWYxM2IxZjAzYzJlMzUyM2I5OGRkMjU2YjNjN2I=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2015-06-30T10:35:01Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2015-06-30T17:21:45Z"}, "message": "Add E0119 error explanation\n\nAdd more explanations", "tree": {"sha": "4fd3286fcf7ac7bffbc283a1f7fd82b064001bc7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fd3286fcf7ac7bffbc283a1f7fd82b064001bc7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/be38926b6941f13b1f03c2e3523b98dd256b3c7b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/be38926b6941f13b1f03c2e3523b98dd256b3c7b", "html_url": "https://github.com/rust-lang/rust/commit/be38926b6941f13b1f03c2e3523b98dd256b3c7b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/be38926b6941f13b1f03c2e3523b98dd256b3c7b/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2881e83c96c6f35fdc6741bbb3f951507ef74ca5", "url": "https://api.github.com/repos/rust-lang/rust/commits/2881e83c96c6f35fdc6741bbb3f951507ef74ca5", "html_url": "https://github.com/rust-lang/rust/commit/2881e83c96c6f35fdc6741bbb3f951507ef74ca5"}], "stats": {"total": 85, "additions": 77, "deletions": 8}, "files": [{"sha": "05ddfe89bcf5c7786e44e9537ccdf856ba88afec", "filename": "src/librustc_typeck/diagnostics.rs", "status": "modified", "additions": 77, "deletions": 8, "changes": 85, "blob_url": "https://github.com/rust-lang/rust/blob/be38926b6941f13b1f03c2e3523b98dd256b3c7b/src%2Flibrustc_typeck%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/be38926b6941f13b1f03c2e3523b98dd256b3c7b/src%2Flibrustc_typeck%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fdiagnostics.rs?ref=be38926b6941f13b1f03c2e3523b98dd256b3c7b", "patch": "@@ -1245,22 +1245,92 @@ impl Bytes { ... } // error, same as above\n \"##,\n \n E0117: r##\"\n-You tried to implement a trait on a type which isn't defined in your crate.\n-Erroneous code example:\n+You got this error because because you tried to implement a foreign\n+trait for a foreign type (with maybe a foreign type parameter). Erroneous\n+code example:\n \n ```\n impl Drop for u32 {}\n ```\n \n-The type on which you want to implement the trait has to be defined in\n-your crate. Example:\n+The type, trait or the type parameter (or all of them) has to be defined\n+in your crate. Example:\n \n ```\n pub struct Foo; // you define your type in your crate\n \n impl Drop for Foo { // and you can implement the trait on it!\n     // code of trait implementation here\n }\n+\n+trait Bar { // or define your trait in your crate\n+    fn get(&self) -> usize;\n+}\n+\n+impl Bar for u32 { // and then you implement it on a foreign type\n+    fn get(&self) -> usize { 0 }\n+}\n+\n+impl From<Foo> for i32 { // or you use a type from your crate as\n+                         // a type parameter\n+    fn from(i: Foo) -> i32 {\n+        0\n+    }\n+}\n+```\n+\"##,\n+\n+E0119: r##\"\n+There are conflicting trait implementations for the same type.\n+Erroneous code example:\n+\n+```\n+trait MyTrait {\n+    fn get(&self) -> usize;\n+}\n+\n+impl<T> MyTrait for T {\n+    fn get(&self) -> usize { 0 }\n+}\n+\n+struct Foo {\n+    value: usize\n+}\n+\n+impl MyTrait for Foo { // error: conflicting implementations for trait\n+                       //        `MyTrait`\n+    fn get(&self) -> usize { self.value }\n+}\n+```\n+\n+When you write:\n+\n+```\n+impl<T> MyTrait for T {\n+    fn get(&self) -> usize { 0 }\n+}\n+```\n+\n+This makes the trait implemented on all types in the scope. So if you\n+try to implement it on another one after that, the implementations will\n+conflict. Example:\n+\n+```\n+trait MyTrait {\n+    fn get(&self) -> usize;\n+}\n+\n+impl<T> MyTrait for T {\n+    fn get(&self) -> usize { 0 }\n+}\n+\n+struct Foo;\n+\n+fn main() {\n+    let f = Foo;\n+\n+    f.get(); // the trait is implemented so we can use it\n+}\n ```\n \"##,\n \n@@ -1403,7 +1473,7 @@ impl Trait for Foo {\n }\n ```\n \n-The `'b` lifetime constraint for bar() implementation does not match the\n+The lifetime constraint `'b` for bar() implementation does not match the\n trait declaration. Ensure lifetime declarations match exactly in both trait\n declaration and implementation. Example:\n \n@@ -1601,8 +1671,8 @@ impl Copy for &'static Bar { } // error\n \"##,\n \n E0207: r##\"\n-You passed an unused type parameter when implementing a trait\n-on an object. Erroneous code example:\n+You declared an unused type parameter when implementing a trait on an object.\n+Erroneous code example:\n \n ```\n trait MyTrait {\n@@ -1883,7 +1953,6 @@ register_diagnostics! {\n     E0103,\n     E0104,\n     E0118,\n-    E0119,\n     E0120,\n     E0122,\n     E0123,"}]}