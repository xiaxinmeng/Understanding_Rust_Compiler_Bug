{"sha": "0baff25d998f0a9a15a951b5a4ba418b4e5ba4d8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiYWZmMjVkOTk4ZjBhOWExNWE5NTFiNWE0YmE0MThiNGU1YmE0ZDg=", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2020-12-10T17:08:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-10T17:08:59Z"}, "message": "Merge #6805\n\n6805: Fix accidently quadratic syntax rewriter r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>", "tree": {"sha": "9d6db33cfdeeba7a0f4f167008f520563564a437", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9d6db33cfdeeba7a0f4f167008f520563564a437"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0baff25d998f0a9a15a951b5a4ba418b4e5ba4d8", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf0lYrCRBK7hj4Ov3rIwAAdHIIADdHX14JkGZeqaj2u0azA/Xl\nkcVKYvhW7kVBjrI93w34c2MdGUYR/sSyDZ3nXgU5UY9oo4jluFtnvey6FnNUH5Lh\nbeqy80q1Jnn/goZpGT0NByn19VzSxPdfvpDNIl6SM87IMwMQr7RE0gPnlv/4/D7H\nLSeKDFguGh2krMMeov+ZZpE+BXDAm51uDI1Gl4rWwFqY/TwFzxytEn5TqIEZULWz\nBpDOEeg9vbNFSJHzbYOb1um1DyaF1ATBKeVQ93YHMeXMlMaABQByFODAZiJZCsu6\n2s8Bp5iR+VLkcSflcjgyuZMxA5EPWDUTrNXKm2jYMcfMtoESt4cpI7xx1tjk2tg=\n=NlKQ\n-----END PGP SIGNATURE-----\n", "payload": "tree 9d6db33cfdeeba7a0f4f167008f520563564a437\nparent 44978acf51e25513ef8420e228221273f42abf8c\nparent 3d5be5ba5b8c5f2d6ca6142dab959e2838589062\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1607620139 +0000\ncommitter GitHub <noreply@github.com> 1607620139 +0000\n\nMerge #6805\n\n6805: Fix accidently quadratic syntax rewriter r=matklad a=matklad\n\nbors r+\n\ud83e\udd16\n\nCo-authored-by: Aleksey Kladov <aleksey.kladov@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0baff25d998f0a9a15a951b5a4ba418b4e5ba4d8", "html_url": "https://github.com/rust-lang/rust/commit/0baff25d998f0a9a15a951b5a4ba418b4e5ba4d8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0baff25d998f0a9a15a951b5a4ba418b4e5ba4d8/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44978acf51e25513ef8420e228221273f42abf8c", "url": "https://api.github.com/repos/rust-lang/rust/commits/44978acf51e25513ef8420e228221273f42abf8c", "html_url": "https://github.com/rust-lang/rust/commit/44978acf51e25513ef8420e228221273f42abf8c"}, {"sha": "3d5be5ba5b8c5f2d6ca6142dab959e2838589062", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d5be5ba5b8c5f2d6ca6142dab959e2838589062", "html_url": "https://github.com/rust-lang/rust/commit/3d5be5ba5b8c5f2d6ca6142dab959e2838589062"}], "stats": {"total": 22, "additions": 14, "deletions": 8}, "files": [{"sha": "5696c014fb6741d9aa81d7e278e8b3e9424c81ac", "filename": "crates/syntax/src/algo.rs", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0baff25d998f0a9a15a951b5a4ba418b4e5ba4d8/crates%2Fsyntax%2Fsrc%2Falgo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0baff25d998f0a9a15a951b5a4ba418b4e5ba4d8/crates%2Fsyntax%2Fsrc%2Falgo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fsyntax%2Fsrc%2Falgo.rs?ref=0baff25d998f0a9a15a951b5a4ba418b4e5ba4d8", "patch": "@@ -476,7 +476,8 @@ impl<'a> SyntaxRewriter<'a> {\n         if self.f.is_none() && self.replacements.is_empty() && self.insertions.is_empty() {\n             return node.clone();\n         }\n-        self.rewrite_children(node)\n+        let green = self.rewrite_children(node);\n+        with_green(node, green)\n     }\n \n     pub fn rewrite_ast<N: AstNode>(self, node: &N) -> N {\n@@ -523,7 +524,7 @@ impl<'a> SyntaxRewriter<'a> {\n         self.insertions.get(pos).map(|insertions| insertions.iter().cloned())\n     }\n \n-    fn rewrite_children(&self, node: &SyntaxNode) -> SyntaxNode {\n+    fn rewrite_children(&self, node: &SyntaxNode) -> rowan::GreenNode {\n         let _p = profile::span(\"rewrite_children\");\n \n         //  FIXME: this could be made much faster.\n@@ -534,7 +535,8 @@ impl<'a> SyntaxRewriter<'a> {\n         for child in node.children_with_tokens() {\n             self.rewrite_self(&mut new_children, &child);\n         }\n-        with_children(node, new_children)\n+\n+        rowan::GreenNode::new(rowan::SyntaxKind(node.kind() as u16), new_children)\n     }\n \n     fn rewrite_self(\n@@ -556,7 +558,7 @@ impl<'a> SyntaxRewriter<'a> {\n             match element {\n                 NodeOrToken::Token(it) => acc.push(NodeOrToken::Token(it.green().clone())),\n                 NodeOrToken::Node(it) => {\n-                    acc.push(NodeOrToken::Node(self.rewrite_children(it).green().clone()));\n+                    acc.push(NodeOrToken::Node(self.rewrite_children(it)));\n                 }\n             }\n         }\n@@ -601,14 +603,18 @@ fn with_children(\n ) -> SyntaxNode {\n     let _p = profile::span(\"with_children\");\n \n-    let len = new_children.iter().map(|it| it.text_len()).sum::<TextSize>();\n-    let new_node = rowan::GreenNode::new(rowan::SyntaxKind(parent.kind() as u16), new_children);\n-    let new_root_node = parent.replace_with(new_node);\n+    let new_green = rowan::GreenNode::new(rowan::SyntaxKind(parent.kind() as u16), new_children);\n+    with_green(parent, new_green)\n+}\n+\n+fn with_green(syntax_node: &SyntaxNode, green: rowan::GreenNode) -> SyntaxNode {\n+    let len = green.children().map(|it| it.text_len()).sum::<TextSize>();\n+    let new_root_node = syntax_node.replace_with(green);\n     let new_root_node = SyntaxNode::new_root(new_root_node);\n \n     // FIXME: use a more elegant way to re-fetch the node (#1185), make\n     // `range` private afterwards\n-    let mut ptr = SyntaxNodePtr::new(parent);\n+    let mut ptr = SyntaxNodePtr::new(syntax_node);\n     ptr.range = TextRange::at(ptr.range.start(), len);\n     ptr.to_node(&new_root_node)\n }"}]}