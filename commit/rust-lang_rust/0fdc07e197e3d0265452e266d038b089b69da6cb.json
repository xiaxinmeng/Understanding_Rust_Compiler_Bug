{"sha": "0fdc07e197e3d0265452e266d038b089b69da6cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBmZGMwN2UxOTdlM2QwMjY1NDUyZTI2NmQwMzhiMDg5YjY5ZGE2Y2I=", "commit": {"author": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2020-10-03T20:57:47Z"}, "committer": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2021-03-09T16:54:13Z"}, "message": "Impl StatementKind::CopyNonOverlapping", "tree": {"sha": "077fd2feb45b2dc0e38d5f09e01c6bc516b5973d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/077fd2feb45b2dc0e38d5f09e01c6bc516b5973d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fdc07e197e3d0265452e266d038b089b69da6cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fdc07e197e3d0265452e266d038b089b69da6cb", "html_url": "https://github.com/rust-lang/rust/commit/0fdc07e197e3d0265452e266d038b089b69da6cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fdc07e197e3d0265452e266d038b089b69da6cb/comments", "author": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a5d45f68cadc8fff4fbb557780f92b403b19c19", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a5d45f68cadc8fff4fbb557780f92b403b19c19", "html_url": "https://github.com/rust-lang/rust/commit/3a5d45f68cadc8fff4fbb557780f92b403b19c19"}], "stats": {"total": 59, "additions": 57, "deletions": 2}, "files": [{"sha": "5ad9f461472828c874ba2eee9ceacc90aa9a6a9b", "filename": "compiler/rustc_codegen_ssa/src/mir/analyze.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0fdc07e197e3d0265452e266d038b089b69da6cb/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fdc07e197e3d0265452e266d038b089b69da6cb/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fanalyze.rs?ref=0fdc07e197e3d0265452e266d038b089b69da6cb", "patch": "@@ -293,15 +293,17 @@ impl<'mir, 'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> Visitor<'tcx>\n                 | MutatingUseContext::AsmOutput\n                 | MutatingUseContext::Borrow\n                 | MutatingUseContext::AddressOf\n-                | MutatingUseContext::Projection,\n+                | MutatingUseContext::Projection\n+                | MutatingUseContext::CopyNonOverlapping,\n             )\n             | PlaceContext::NonMutatingUse(\n                 NonMutatingUseContext::Inspect\n                 | NonMutatingUseContext::SharedBorrow\n                 | NonMutatingUseContext::UniqueBorrow\n                 | NonMutatingUseContext::ShallowBorrow\n                 | NonMutatingUseContext::AddressOf\n-                | NonMutatingUseContext::Projection,\n+                | NonMutatingUseContext::Projection\n+                | NonMutatingUseContext::CopyNonOverlapping,\n             ) => {\n                 self.not_ssa(local);\n             }"}, {"sha": "2c90054b6c7f504f3123351fba9a213b0297f3cf", "filename": "compiler/rustc_codegen_ssa/src/mir/statement.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/0fdc07e197e3d0265452e266d038b089b69da6cb/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fstatement.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fdc07e197e3d0265452e266d038b089b69da6cb/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fstatement.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_codegen_ssa%2Fsrc%2Fmir%2Fstatement.rs?ref=0fdc07e197e3d0265452e266d038b089b69da6cb", "patch": "@@ -115,6 +115,21 @@ impl<'a, 'tcx, Bx: BuilderMethods<'a, 'tcx>> FunctionCx<'a, 'tcx, Bx> {\n                 self.codegen_coverage(&mut bx, coverage.clone());\n                 bx\n             }\n+            mir::StatementKind::CopyNonOverlapping(box mir::CopyNonOverlapping {\n+                ref src,\n+                ref dst,\n+                ref size,\n+            }) => {\n+              bx.memcpy(\n+                dst,\n+                todo!(),\n+                src,\n+                todo!(),\n+                size,\n+                todo!(),\n+              );\n+              bx\n+            }\n             mir::StatementKind::FakeRead(..)\n             | mir::StatementKind::Retag { .. }\n             | mir::StatementKind::AscribeUserType(..)"}, {"sha": "90111d4080c7e9a591e099221ee634cb158fae5f", "filename": "compiler/rustc_middle/src/mir/mod.rs", "status": "modified", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/0fdc07e197e3d0265452e266d038b089b69da6cb/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fdc07e197e3d0265452e266d038b089b69da6cb/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fmod.rs?ref=0fdc07e197e3d0265452e266d038b089b69da6cb", "patch": "@@ -1541,6 +1541,11 @@ pub enum StatementKind<'tcx> {\n     /// counter varible at runtime, each time the code region is executed.\n     Coverage(Box<Coverage>),\n \n+    /// Denotes a call to the intrinsic function copy_overlapping, where `src_dst` denotes the\n+    /// memory being read from and written to(one field to save memory), and size\n+    /// indicates how many bytes are being copied over.\n+    CopyNonOverlapping(Box<CopyNonOverlapping<'tcx>>),\n+\n     /// No-op. Useful for deleting instructions without affecting statement indices.\n     Nop,\n }\n@@ -1659,6 +1664,11 @@ impl Debug for Statement<'_> {\n                     write!(fmt, \"Coverage::{:?}\", coverage.kind)\n                 }\n             }\n+            CopyNonOverlapping(box crate::mir::CopyNonOverlapping {\n+                ref src,\n+                ref dst,\n+                ref size,\n+            }) => write!(fmt, \"src {:?} -> dst {:?}, {:?} bytes\", src, dst, size),\n             Nop => write!(fmt, \"nop\"),\n         }\n     }\n@@ -1670,6 +1680,13 @@ pub struct Coverage {\n     pub code_region: Option<CodeRegion>,\n }\n \n+#[derive(Clone, Debug, PartialEq, TyEncodable, TyDecodable, HashStable, TypeFoldable)]\n+pub struct CopyNonOverlapping<'tcx> {\n+    pub src: Place<'tcx>,\n+    pub dst: Place<'tcx>,\n+    pub size: Operand<'tcx>,\n+}\n+\n ///////////////////////////////////////////////////////////////////////////\n // Places\n "}, {"sha": "ad773adcd82ac6ffcfb485635afa8797d52c4866", "filename": "compiler/rustc_middle/src/mir/visit.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/0fdc07e197e3d0265452e266d038b089b69da6cb/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fdc07e197e3d0265452e266d038b089b69da6cb/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Fmir%2Fvisit.rs?ref=0fdc07e197e3d0265452e266d038b089b69da6cb", "patch": "@@ -436,6 +436,23 @@ macro_rules! make_mir_visitor {\n                             location\n                         )\n                     }\n+                    StatementKind::CopyNonOverlapping(box crate::mir::CopyNonOverlapping{\n+                      ref $($mutability)? src,\n+                      ref $($mutability)? dst,\n+                      ref $($mutability)? size,\n+                    }) => {\n+                      self.visit_place(\n+                            src,\n+                            PlaceContext::NonMutatingUse(NonMutatingUseContext::CopyNonOverlapping),\n+                            location\n+                      );\n+                      self.visit_place(\n+                            dst,\n+                            PlaceContext::MutatingUse(MutatingUseContext::CopyNonOverlapping),\n+                            location\n+                      );\n+                      self.visit_operand(size, location)\n+                    }\n                     StatementKind::Nop => {}\n                 }\n             }\n@@ -1151,6 +1168,8 @@ pub enum NonMutatingUseContext {\n     ///     f(&x.y);\n     ///\n     Projection,\n+    /// Source from copy_nonoverlapping.\n+    CopyNonOverlapping,\n }\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq)]\n@@ -1180,6 +1199,8 @@ pub enum MutatingUseContext {\n     Projection,\n     /// Retagging, a \"Stacked Borrows\" shadow state operation\n     Retag,\n+    /// Memory written to in copy_nonoverlapping.\n+    CopyNonOverlapping,\n }\n \n #[derive(Copy, Clone, Debug, PartialEq, Eq)]"}]}