{"sha": "1db8540fe62bb76f14a8d54dc6838d3672b0130d", "node_id": "C_kwDOAAsO6NoAKDFkYjg1NDBmZTYyYmI3NmYxNGE4ZDU0ZGM2ODM4ZDM2NzJiMDEzMGQ", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-05-08T08:05:22Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2023-05-08T08:05:27Z"}, "message": "increase timing slack for sync tests", "tree": {"sha": "b70193d40bb1e516499cb6a27ca2dc60519fde16", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b70193d40bb1e516499cb6a27ca2dc60519fde16"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1db8540fe62bb76f14a8d54dc6838d3672b0130d", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1db8540fe62bb76f14a8d54dc6838d3672b0130d", "html_url": "https://github.com/rust-lang/rust/commit/1db8540fe62bb76f14a8d54dc6838d3672b0130d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1db8540fe62bb76f14a8d54dc6838d3672b0130d/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3d5a5167101f0f828a2c7a084a3a7631ad1a44ed", "url": "https://api.github.com/repos/rust-lang/rust/commits/3d5a5167101f0f828a2c7a084a3a7631ad1a44ed", "html_url": "https://github.com/rust-lang/rust/commit/3d5a5167101f0f828a2c7a084a3a7631ad1a44ed"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "a4d523204bc5e48866aab00b7e2e6d1573b4f896", "filename": "src/tools/miri/tests/pass/concurrency/sync.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1db8540fe62bb76f14a8d54dc6838d3672b0130d/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1db8540fe62bb76f14a8d54dc6838d3672b0130d/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fmiri%2Ftests%2Fpass%2Fconcurrency%2Fsync.rs?ref=1db8540fe62bb76f14a8d54dc6838d3672b0130d", "patch": "@@ -201,8 +201,9 @@ fn park_timeout() {\n     thread::park_timeout(Duration::from_millis(200));\n     // Normally, waiting in park/park_timeout may spuriously wake up early, but we\n     // know Miri's timed synchronization primitives do not do that.\n-\n-    assert!((200..1000).contains(&start.elapsed().as_millis()));\n+    // We allow much longer sleeps as well since the macOS GHA runners seem very oversubscribed\n+    // and sometimes just pause for 1 second or more.\n+    assert!((200..2000).contains(&start.elapsed().as_millis()));\n }\n \n fn park_unpark() {\n@@ -219,8 +220,9 @@ fn park_unpark() {\n     thread::park();\n     // Normally, waiting in park/park_timeout may spuriously wake up early, but we\n     // know Miri's timed synchronization primitives do not do that.\n-\n-    assert!((200..1000).contains(&start.elapsed().as_millis()));\n+    // We allow much longer sleeps as well since the macOS GHA runners seem very oversubscribed\n+    // and sometimes just pause for 1 second or more.\n+    assert!((200..2000).contains(&start.elapsed().as_millis()));\n \n     t2.join().unwrap();\n }"}]}