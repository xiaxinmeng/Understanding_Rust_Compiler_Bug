{"sha": "27f60906aa400aa42bca5346701b7a02fbc1a872", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3ZjYwOTA2YWE0MDBhYTQyYmNhNTM0NjcwMWI3YTAyZmJjMWE4NzI=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-11T07:24:05Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2020-02-13T09:40:17Z"}, "message": "rustc_bulltin_macros: tweak span_labels", "tree": {"sha": "efbc1d3e2000415293db6ba800ff9ae3fb84439c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/efbc1d3e2000415293db6ba800ff9ae3fb84439c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27f60906aa400aa42bca5346701b7a02fbc1a872", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27f60906aa400aa42bca5346701b7a02fbc1a872", "html_url": "https://github.com/rust-lang/rust/commit/27f60906aa400aa42bca5346701b7a02fbc1a872", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27f60906aa400aa42bca5346701b7a02fbc1a872/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3341c940068d60ade54ea343301a810c0bb51153", "url": "https://api.github.com/repos/rust-lang/rust/commits/3341c940068d60ade54ea343301a810c0bb51153", "html_url": "https://github.com/rust-lang/rust/commit/3341c940068d60ade54ea343301a810c0bb51153"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "02a0bc00c1169b2c88b1b941bb8979f01debbb08", "filename": "src/librustc_builtin_macros/test.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/27f60906aa400aa42bca5346701b7a02fbc1a872/src%2Flibrustc_builtin_macros%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27f60906aa400aa42bca5346701b7a02fbc1a872/src%2Flibrustc_builtin_macros%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftest.rs?ref=27f60906aa400aa42bca5346701b7a02fbc1a872", "patch": "@@ -377,13 +377,13 @@ fn has_test_signature(cx: &ExtCtxt<'_>, i: &ast::Item) -> bool {\n     if let ast::ItemKind::Fn(ref sig, ref generics, _) = i.kind {\n         if let ast::Unsafe::Yes(span) = sig.header.unsafety {\n             sd.struct_span_err(i.span, \"unsafe functions cannot be used for tests\")\n-                .span_label(span, \"unsafe because of this\")\n+                .span_label(span, \"`unsafe` because of this\")\n                 .emit();\n             return false;\n         }\n         if let ast::Async::Yes { span, .. } = sig.header.asyncness {\n             sd.struct_span_err(i.span, \"async functions cannot be used for tests\")\n-                .span_label(span, \"async because of this\")\n+                .span_label(span, \"`async` because of this\")\n                 .emit();\n             return false;\n         }"}]}