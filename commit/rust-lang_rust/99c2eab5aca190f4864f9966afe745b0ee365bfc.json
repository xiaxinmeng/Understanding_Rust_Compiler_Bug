{"sha": "99c2eab5aca190f4864f9966afe745b0ee365bfc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk5YzJlYWI1YWNhMTkwZjQ4NjRmOTk2NmFmZTc0NWIwZWUzNjViZmM=", "commit": {"author": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-28T02:41:16Z"}, "committer": {"name": "topecongiro", "email": "seuchida@gmail.com", "date": "2017-05-28T02:44:41Z"}, "message": "Allow attributes on expressions", "tree": {"sha": "8e23f7ef99e7887aa960286de22020d745d63c1a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e23f7ef99e7887aa960286de22020d745d63c1a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/99c2eab5aca190f4864f9966afe745b0ee365bfc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/99c2eab5aca190f4864f9966afe745b0ee365bfc", "html_url": "https://github.com/rust-lang/rust/commit/99c2eab5aca190f4864f9966afe745b0ee365bfc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/99c2eab5aca190f4864f9966afe745b0ee365bfc/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8ac3fc36cc98f66381759ae4b8ef08021ec102a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/8ac3fc36cc98f66381759ae4b8ef08021ec102a2", "html_url": "https://github.com/rust-lang/rust/commit/8ac3fc36cc98f66381759ae4b8ef08021ec102a2"}], "stats": {"total": 61, "additions": 58, "deletions": 3}, "files": [{"sha": "b6dad6c5c234ce38b24c05f8d64bbaf80252bef7", "filename": "src/expr.rs", "status": "modified", "additions": 16, "deletions": 3, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/99c2eab5aca190f4864f9966afe745b0ee365bfc/src%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99c2eab5aca190f4864f9966afe745b0ee365bfc/src%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fexpr.rs?ref=99c2eab5aca190f4864f9966afe745b0ee365bfc", "patch": "@@ -23,7 +23,7 @@ use lists::{write_list, itemize_list, ListFormatting, SeparatorTactic, ListTacti\n use string::{StringFormat, rewrite_string};\n use utils::{extra_offset, last_line_width, wrap_str, binary_search, first_line_width,\n             semicolon_for_stmt, trimmed_last_line_width, left_most_sub_expr, stmt_expr,\n-            colon_spaces};\n+            colon_spaces, contains_skip};\n use visitor::FmtVisitor;\n use config::{Config, IndentStyle, MultilineStyle, ControlBraceStyle, Style};\n use comment::{FindUncommented, rewrite_comment, contains_comment, recover_comment_removed};\n@@ -53,7 +53,11 @@ fn format_expr(expr: &ast::Expr,\n                context: &RewriteContext,\n                shape: Shape)\n                -> Option<String> {\n-    let result = match expr.node {\n+    if contains_skip(&*expr.attrs) {\n+        return Some(context.snippet(expr.span));\n+    }\n+    let attr_rw = (&*expr.attrs).rewrite(context, shape);\n+    let expr_rw = match expr.node {\n         ast::ExprKind::Array(ref expr_vec) => {\n             rewrite_array(expr_vec.iter().map(|e| &**e),\n                           mk_sp(context.codemap.span_after(expr.span, \"[\"), expr.span.hi),\n@@ -251,7 +255,16 @@ fn format_expr(expr: &ast::Expr,\n                      shape)\n         }\n     };\n-    result.and_then(|res| recover_comment_removed(res, expr.span, context, shape))\n+    match (attr_rw, expr_rw) {\n+        (Some(attr_str), Some(expr_str)) => {\n+            let space = if attr_str.is_empty() { \"\" } else { \" \" };\n+            recover_comment_removed(format!(\"{}{}{}\", attr_str, space, expr_str),\n+                                    expr.span,\n+                                    context,\n+                                    shape)\n+        }\n+        _ => None,\n+    }\n }\n \n pub fn rewrite_pair<LHS, RHS>(lhs: &LHS,"}, {"sha": "26107fbff01d0653df7fd0cbf4ef79b172a30203", "filename": "tests/source/macros.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/99c2eab5aca190f4864f9966afe745b0ee365bfc/tests%2Fsource%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99c2eab5aca190f4864f9966afe745b0ee365bfc/tests%2Fsource%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacros.rs?ref=99c2eab5aca190f4864f9966afe745b0ee365bfc", "patch": "@@ -103,3 +103,11 @@ fn issue_1555() {\n                          \"65454654654654654654654655464\",\n                          \"4\");\n }\n+\n+fn issue1178() {\n+    macro_rules! foo {\n+        (#[$attr:meta] $name:ident) => {}\n+    }\n+\n+    foo!(#[doc = \"bar\"] baz);\n+}"}, {"sha": "d13c815903984f9136aaf520de705ba9eb795c77", "filename": "tests/source/skip.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/99c2eab5aca190f4864f9966afe745b0ee365bfc/tests%2Fsource%2Fskip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99c2eab5aca190f4864f9966afe745b0ee365bfc/tests%2Fsource%2Fskip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fskip.rs?ref=99c2eab5aca190f4864f9966afe745b0ee365bfc", "patch": "@@ -16,3 +16,16 @@ impl LateLintPass for UsedUnderscoreBinding {\n     fn check_expr() { // comment\n     }\n }\n+\n+fn issue1346() {\n+    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    Box::new(self.inner.call(req).then(move |result| {\n+        match result {\n+            Ok(resp) => Box::new(future::done(Ok(resp))),\n+            Err(e) => {\n+                try_error!(clo_stderr, \"{}\", e);\n+                Box::new(future::err(e))\n+            }\n+        }\n+    }))\n+}"}, {"sha": "941ae46c6d569599c0e69e13de6a1db9a413942c", "filename": "tests/target/macros.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/99c2eab5aca190f4864f9966afe745b0ee365bfc/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99c2eab5aca190f4864f9966afe745b0ee365bfc/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=99c2eab5aca190f4864f9966afe745b0ee365bfc", "patch": "@@ -108,3 +108,11 @@ fn issue_1555() {\n                          \"65454654654654654654654655464\",\n                          \"4\");\n }\n+\n+fn issue1178() {\n+    macro_rules! foo {\n+        (#[$attr:meta] $name:ident) => {}\n+    }\n+\n+    foo!(#[doc = \"bar\"] baz);\n+}"}, {"sha": "d13c815903984f9136aaf520de705ba9eb795c77", "filename": "tests/target/skip.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/99c2eab5aca190f4864f9966afe745b0ee365bfc/tests%2Ftarget%2Fskip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/99c2eab5aca190f4864f9966afe745b0ee365bfc/tests%2Ftarget%2Fskip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fskip.rs?ref=99c2eab5aca190f4864f9966afe745b0ee365bfc", "patch": "@@ -16,3 +16,16 @@ impl LateLintPass for UsedUnderscoreBinding {\n     fn check_expr() { // comment\n     }\n }\n+\n+fn issue1346() {\n+    #[cfg_attr(rustfmt, rustfmt_skip)]\n+    Box::new(self.inner.call(req).then(move |result| {\n+        match result {\n+            Ok(resp) => Box::new(future::done(Ok(resp))),\n+            Err(e) => {\n+                try_error!(clo_stderr, \"{}\", e);\n+                Box::new(future::err(e))\n+            }\n+        }\n+    }))\n+}"}]}