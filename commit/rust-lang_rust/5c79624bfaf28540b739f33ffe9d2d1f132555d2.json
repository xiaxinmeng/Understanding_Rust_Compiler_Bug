{"sha": "5c79624bfaf28540b739f33ffe9d2d1f132555d2", "node_id": "C_kwDOAAsO6NoAKDVjNzk2MjRiZmFmMjg1NDBiNzM5ZjMzZmZlOWQyZDFmMTMyNTU1ZDI", "commit": {"author": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2022-12-29T21:53:13Z"}, "committer": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2023-01-02T23:02:58Z"}, "message": "Fix `unknown_crate` when `--crate-name` isn't passed on the CLI", "tree": {"sha": "e118639297ff7ad8e3b96b77488778910f492532", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e118639297ff7ad8e3b96b77488778910f492532"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c79624bfaf28540b739f33ffe9d2d1f132555d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c79624bfaf28540b739f33ffe9d2d1f132555d2", "html_url": "https://github.com/rust-lang/rust/commit/5c79624bfaf28540b739f33ffe9d2d1f132555d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c79624bfaf28540b739f33ffe9d2d1f132555d2/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "eb53eea60920e28d3c3e053b170d015be7493a74", "url": "https://api.github.com/repos/rust-lang/rust/commits/eb53eea60920e28d3c3e053b170d015be7493a74", "html_url": "https://github.com/rust-lang/rust/commit/eb53eea60920e28d3c3e053b170d015be7493a74"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "97fbb458e792a1d5b315c2f4bdc0c43d829cb16b", "filename": "compiler/rustc_monomorphize/src/partitioning/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/5c79624bfaf28540b739f33ffe9d2d1f132555d2/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c79624bfaf28540b739f33ffe9d2d1f132555d2/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_monomorphize%2Fsrc%2Fpartitioning%2Fmod.rs?ref=5c79624bfaf28540b739f33ffe9d2d1f132555d2", "patch": "@@ -102,7 +102,7 @@ use std::path::{Path, PathBuf};\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_data_structures::sync;\n-use rustc_hir::def_id::DefIdSet;\n+use rustc_hir::def_id::{DefIdSet, LOCAL_CRATE};\n use rustc_middle::mir;\n use rustc_middle::mir::mono::MonoItem;\n use rustc_middle::mir::mono::{CodegenUnit, Linkage};\n@@ -417,7 +417,7 @@ fn collect_and_partition_mono_items(tcx: TyCtxt<'_>, (): ()) -> (&DefIdSet, &[Co\n     // Output monomorphization stats per def_id\n     if let SwitchWithOptPath::Enabled(ref path) = tcx.sess.opts.unstable_opts.dump_mono_stats {\n         if let Err(err) =\n-            dump_mono_items_stats(tcx, &codegen_units, path, tcx.sess.opts.crate_name.as_deref())\n+            dump_mono_items_stats(tcx, &codegen_units, path, tcx.crate_name(LOCAL_CRATE))\n         {\n             tcx.sess.emit_fatal(CouldntDumpMonoStats { error: err.to_string() });\n         }\n@@ -483,7 +483,7 @@ fn dump_mono_items_stats<'tcx>(\n     tcx: TyCtxt<'tcx>,\n     codegen_units: &[CodegenUnit<'tcx>],\n     output_directory: &Option<PathBuf>,\n-    crate_name: Option<&str>,\n+    crate_name: Symbol,\n ) -> Result<(), Box<dyn std::error::Error>> {\n     let output_directory = if let Some(ref directory) = output_directory {\n         fs::create_dir_all(directory)?;\n@@ -494,7 +494,7 @@ fn dump_mono_items_stats<'tcx>(\n \n     let format = tcx.sess.opts.unstable_opts.dump_mono_stats_format;\n     let ext = format.extension();\n-    let filename = format!(\"{}.mono_items.{ext}\", crate_name.unwrap_or(\"unknown-crate\"));\n+    let filename = format!(\"{crate_name}.mono_items.{ext}\");\n     let output_path = output_directory.join(&filename);\n     let file = File::create(&output_path)?;\n     let mut file = BufWriter::new(file);"}]}