{"sha": "27a085f79ef130132bacfa2e9da6f389e63c6b42", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI3YTA4NWY3OWVmMTMwMTMyYmFjZmEyZTlkYTZmMzg5ZTYzYzZiNDI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-25T18:10:28Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-25T20:06:23Z"}, "message": "print one size for symbols", "tree": {"sha": "2d6822eb284798fc11977527d6fd25f95fe4f946", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2d6822eb284798fc11977527d6fd25f95fe4f946"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/27a085f79ef130132bacfa2e9da6f389e63c6b42", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/27a085f79ef130132bacfa2e9da6f389e63c6b42", "html_url": "https://github.com/rust-lang/rust/commit/27a085f79ef130132bacfa2e9da6f389e63c6b42", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/27a085f79ef130132bacfa2e9da6f389e63c6b42/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e53eab3f25af2ebd381012f1b34f0bc52c6951eb", "url": "https://api.github.com/repos/rust-lang/rust/commits/e53eab3f25af2ebd381012f1b34f0bc52c6951eb", "html_url": "https://github.com/rust-lang/rust/commit/e53eab3f25af2ebd381012f1b34f0bc52c6951eb"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "6184ad3ec3893e96aff9f11ed303054e1f442ff2", "filename": "crates/ra_ide_api/src/symbol_index.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/27a085f79ef130132bacfa2e9da6f389e63c6b42/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/27a085f79ef130132bacfa2e9da6f389e63c6b42/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fsymbol_index.rs?ref=27a085f79ef130132bacfa2e9da6f389e63c6b42", "patch": "@@ -138,7 +138,7 @@ impl SymbolIndex {\n     }\n \n     pub(crate) fn memory_size(&self) -> usize {\n-        self.map.as_fst().size() * self.symbols.len() * mem::size_of::<FileSymbol>()\n+        self.map.as_fst().size() + self.symbols.len() * mem::size_of::<FileSymbol>()\n     }\n \n     pub(crate) fn for_files("}]}