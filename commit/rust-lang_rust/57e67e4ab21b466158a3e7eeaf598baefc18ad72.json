{"sha": "57e67e4ab21b466158a3e7eeaf598baefc18ad72", "node_id": "C_kwDOAAsO6NoAKDU3ZTY3ZTRhYjIxYjQ2NjE1OGEzZTdlZWFmNTk4YmFlZmMxOGFkNzI", "commit": {"author": {"name": "\u8bb8\u6770\u53cb Jieyou Xu (Joe)", "email": "jieyouxu@outlook.com", "date": "2023-05-27T13:25:25Z"}, "committer": {"name": "\u8bb8\u6770\u53cb Jieyou Xu (Joe)", "email": "jieyouxu@outlook.com", "date": "2023-05-29T05:11:03Z"}, "message": "Don't suggest changing {ImmRef,MutRef} implicit self to be mutable", "tree": {"sha": "c0f4d3c41cb5baf93c92fd96e16a6bc7c08d91ef", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0f4d3c41cb5baf93c92fd96e16a6bc7c08d91ef"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/57e67e4ab21b466158a3e7eeaf598baefc18ad72", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEze4qXcfh0ileWqZTxf1dMgFP20cFAmR0M+kACgkQxf1dMgFP\n20cxug/+OyKZ/zcbhRdZMXixqV7OnMMrFWP/vHGh/3U28we2dr9V/cvWe+s33buN\nFt6qeOR2N8g7rLDCZ5gy0TWIR7/V1PX97lWB4NY5amEUN0d8Hs9s5C6SfgPl6ZFG\nrpHAkNjLlbQRipS/hFG8rdlr55BTjXer7wTj4Vg8zyJvYWv73ochcKDnUAGqByFc\nGId/Bfu03w/pEPsjysZg9lbrqTyHSOSlvuylt/lOOwp5LeNI92BIb6+c8W9GPDck\nY1x61YPfym2y78dXTtHjLf1eOfJK+OzPdjtVN2FkDpeekQGrNYF5vyO6Ly07M8hu\nljyjAXP3X/VAz64iSqmB7Yjcf7Q5T+qUuljQ5IpawZbrTBUe0/5BqU7b9vKJuMJ5\nkYPQlR1KXk0ZyojGaQlP7jzeYfPZ4R6FfU/TUfxiK40kTs6v//z9464MFIUc0V35\nmmM3aWLkd5KsNc5QxPWBQPTWbzgt5NCABbqkAhV5xyuum9/Pc/b8fNFo16LZWaG9\nom98cmjmre5boVPbaIysnF9Vrcl0HF78RRE4qEw37kaLZw47ViuSE/J7XMs6dD4V\nqZ1buBMUNKFqMOTlFkNRzOnZcUS5YkJqsVArtvSqB2TFGLTWAY2SkVpr4gBilUpl\n2vbXeIiWZcEy0sMJnhb4CzI0d65xkMfZMEhaHFp86bf35F1S+d4=\n=S9zd\n-----END PGP SIGNATURE-----", "payload": "tree c0f4d3c41cb5baf93c92fd96e16a6bc7c08d91ef\nparent b9c5fdc888e05be88269a47d40fd0d911ec2be0b\nauthor \u8bb8\u6770\u53cb Jieyou Xu (Joe) <jieyouxu@outlook.com> 1685193925 +0800\ncommitter \u8bb8\u6770\u53cb Jieyou Xu (Joe) <jieyouxu@outlook.com> 1685337063 +0800\n\nDon't suggest changing {ImmRef,MutRef} implicit self to be mutable\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/57e67e4ab21b466158a3e7eeaf598baefc18ad72", "html_url": "https://github.com/rust-lang/rust/commit/57e67e4ab21b466158a3e7eeaf598baefc18ad72", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/57e67e4ab21b466158a3e7eeaf598baefc18ad72/comments", "author": {"login": "jieyouxu", "id": 39484203, "node_id": "MDQ6VXNlcjM5NDg0MjAz", "avatar_url": "https://avatars.githubusercontent.com/u/39484203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieyouxu", "html_url": "https://github.com/jieyouxu", "followers_url": "https://api.github.com/users/jieyouxu/followers", "following_url": "https://api.github.com/users/jieyouxu/following{/other_user}", "gists_url": "https://api.github.com/users/jieyouxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieyouxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieyouxu/subscriptions", "organizations_url": "https://api.github.com/users/jieyouxu/orgs", "repos_url": "https://api.github.com/users/jieyouxu/repos", "events_url": "https://api.github.com/users/jieyouxu/events{/privacy}", "received_events_url": "https://api.github.com/users/jieyouxu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jieyouxu", "id": 39484203, "node_id": "MDQ6VXNlcjM5NDg0MjAz", "avatar_url": "https://avatars.githubusercontent.com/u/39484203?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jieyouxu", "html_url": "https://github.com/jieyouxu", "followers_url": "https://api.github.com/users/jieyouxu/followers", "following_url": "https://api.github.com/users/jieyouxu/following{/other_user}", "gists_url": "https://api.github.com/users/jieyouxu/gists{/gist_id}", "starred_url": "https://api.github.com/users/jieyouxu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jieyouxu/subscriptions", "organizations_url": "https://api.github.com/users/jieyouxu/orgs", "repos_url": "https://api.github.com/users/jieyouxu/repos", "events_url": "https://api.github.com/users/jieyouxu/events{/privacy}", "received_events_url": "https://api.github.com/users/jieyouxu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9c5fdc888e05be88269a47d40fd0d911ec2be0b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9c5fdc888e05be88269a47d40fd0d911ec2be0b", "html_url": "https://github.com/rust-lang/rust/commit/b9c5fdc888e05be88269a47d40fd0d911ec2be0b"}], "stats": {"total": 85, "additions": 79, "deletions": 6}, "files": [{"sha": "34d466db2b4090dc4868ad797a6e5f53d7e027cd", "filename": "compiler/rustc_borrowck/src/diagnostics/mutability_errors.rs", "status": "modified", "additions": 22, "deletions": 6, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/57e67e4ab21b466158a3e7eeaf598baefc18ad72/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e67e4ab21b466158a3e7eeaf598baefc18ad72/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs?ref=57e67e4ab21b466158a3e7eeaf598baefc18ad72", "patch": "@@ -416,12 +416,28 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                         _,\n                     ) = pat.kind\n                 {\n-                    err.span_suggestion(\n-                        upvar_ident.span,\n-                        \"consider changing this to be mutable\",\n-                        format!(\"mut {}\", upvar_ident.name),\n-                        Applicability::MachineApplicable,\n-                    );\n+                    if upvar_ident.name == kw::SelfLower {\n+                        for (_, node) in self.infcx.tcx.hir().parent_iter(upvar_hir_id) {\n+                            if let Some(fn_decl) = node.fn_decl() {\n+                                if !matches!(fn_decl.implicit_self, hir::ImplicitSelfKind::ImmRef | hir::ImplicitSelfKind::MutRef) {\n+                                    err.span_suggestion(\n+                                        upvar_ident.span,\n+                                        \"consider changing this to be mutable\",\n+                                        format!(\"mut {}\", upvar_ident.name),\n+                                        Applicability::MachineApplicable,\n+                                    );\n+                                    break;\n+                                }\n+                            }\n+                        }\n+                    } else {\n+                        err.span_suggestion(\n+                            upvar_ident.span,\n+                            \"consider changing this to be mutable\",\n+                            format!(\"mut {}\", upvar_ident.name),\n+                            Applicability::MachineApplicable,\n+                        );\n+                    }\n                 }\n \n                 let tcx = self.infcx.tcx;"}, {"sha": "0dad55be3acffa58eb2b1b76b954037d2a34f34a", "filename": "tests/ui/borrowck/issue-111554.rs", "status": "added", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/57e67e4ab21b466158a3e7eeaf598baefc18ad72/tests%2Fui%2Fborrowck%2Fissue-111554.rs", "raw_url": "https://github.com/rust-lang/rust/raw/57e67e4ab21b466158a3e7eeaf598baefc18ad72/tests%2Fui%2Fborrowck%2Fissue-111554.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fissue-111554.rs?ref=57e67e4ab21b466158a3e7eeaf598baefc18ad72", "patch": "@@ -0,0 +1,28 @@\n+struct Foo {}\n+\n+impl Foo {\n+    pub fn foo(&mut self) {\n+        || bar(&mut self);\n+        //~^ ERROR cannot borrow `self` as mutable, as it is not declared as mutable\n+    }\n+\n+    pub fn baz(&self) {\n+        || bar(&mut self);\n+        //~^ ERROR cannot borrow `self` as mutable, as it is not declared as mutable\n+        //~| ERROR cannot borrow data in a `&` reference as mutable\n+    }\n+\n+    pub fn qux(mut self) {\n+        || bar(&mut self);\n+        // OK\n+    }\n+\n+    pub fn quux(self) {\n+        || bar(&mut self);\n+        //~^ ERROR cannot borrow `self` as mutable, as it is not declared as mutable\n+    }\n+}\n+\n+fn bar(_: &mut Foo) {}\n+\n+fn main() {}"}, {"sha": "6b7a42e4959996fb58ded429475282980f1310e9", "filename": "tests/ui/borrowck/issue-111554.stderr", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/57e67e4ab21b466158a3e7eeaf598baefc18ad72/tests%2Fui%2Fborrowck%2Fissue-111554.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/57e67e4ab21b466158a3e7eeaf598baefc18ad72/tests%2Fui%2Fborrowck%2Fissue-111554.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fborrowck%2Fissue-111554.stderr?ref=57e67e4ab21b466158a3e7eeaf598baefc18ad72", "patch": "@@ -0,0 +1,29 @@\n+error[E0596]: cannot borrow `self` as mutable, as it is not declared as mutable\n+  --> $DIR/issue-111554.rs:5:16\n+   |\n+LL |         || bar(&mut self);\n+   |                ^^^^^^^^^ cannot borrow as mutable\n+\n+error[E0596]: cannot borrow `self` as mutable, as it is not declared as mutable\n+  --> $DIR/issue-111554.rs:10:16\n+   |\n+LL |         || bar(&mut self);\n+   |                ^^^^^^^^^ cannot borrow as mutable\n+\n+error[E0596]: cannot borrow data in a `&` reference as mutable\n+  --> $DIR/issue-111554.rs:10:16\n+   |\n+LL |         || bar(&mut self);\n+   |                ^^^^^^^^^ cannot borrow as mutable\n+\n+error[E0596]: cannot borrow `self` as mutable, as it is not declared as mutable\n+  --> $DIR/issue-111554.rs:21:16\n+   |\n+LL |     pub fn quux(self) {\n+   |                 ---- help: consider changing this to be mutable: `mut self`\n+LL |         || bar(&mut self);\n+   |                ^^^^^^^^^ cannot borrow as mutable\n+\n+error: aborting due to 4 previous errors\n+\n+For more information about this error, try `rustc --explain E0596`."}]}