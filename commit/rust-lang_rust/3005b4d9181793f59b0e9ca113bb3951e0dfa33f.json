{"sha": "3005b4d9181793f59b0e9ca113bb3951e0dfa33f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwMDViNGQ5MTgxNzkzZjU5YjBlOWNhMTEzYmIzOTUxZTBkZmEzM2Y=", "commit": {"author": {"name": "Pietro Albini", "email": "pietro@pietroalbini.org", "date": "2019-03-08T08:41:47Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-03-08T08:41:47Z"}, "message": "Rollup merge of #58883 - estebank:unused-closure-arg, r=varkor\n\nSuggest appropriate code for unused field when destructuring pattern\n\nFix #56472.", "tree": {"sha": "6921e95737691138d0243814babf6a50cc338e99", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6921e95737691138d0243814babf6a50cc338e99"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3005b4d9181793f59b0e9ca113bb3951e0dfa33f", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJcgirMCRBK7hj4Ov3rIwAAdHIIAEP2flpLryfoSfatUMWzC4rN\nH9fXOAAd0jFcjjarb8oQWyltsdWhCzpYm47aGB3FEccCaQ2y8pRnF7J0wsept+5X\nHNha3IwhYdsnoJGYHYLwNNp5Ks84leHpnI9IwrweieuYVdecRT7g5rkCyRvuKn7M\naQ1jav9Z8mDmt0FcSiBKBS0/Mhx+J/UklQ1DT5tq1e19WAuBoDvp7blWh1fZDgaM\nt8foB/uyTChfb5ba5gkLwRXJY114ZchfE/mOb/f9Fw4pat7OgjIoWx4hj2jwHH/5\nrL0UJ8R74KIqZ7W3vN5E1tmtjmeu1lQmd7IyFEPfObx0ZE53qjWxvpqyP4cDMWE=\n=1eHC\n-----END PGP SIGNATURE-----\n", "payload": "tree 6921e95737691138d0243814babf6a50cc338e99\nparent 4fbeb11374b36b2b7c4fce7b046c2fbe9905e838\nparent df852c0d793eaf0c31124de6c0020d21c07591e3\nauthor Pietro Albini <pietro@pietroalbini.org> 1552034507 +0100\ncommitter GitHub <noreply@github.com> 1552034507 +0100\n\nRollup merge of #58883 - estebank:unused-closure-arg, r=varkor\n\nSuggest appropriate code for unused field when destructuring pattern\n\nFix #56472.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3005b4d9181793f59b0e9ca113bb3951e0dfa33f", "html_url": "https://github.com/rust-lang/rust/commit/3005b4d9181793f59b0e9ca113bb3951e0dfa33f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3005b4d9181793f59b0e9ca113bb3951e0dfa33f/comments", "author": {"login": "pietroalbini", "id": 2299951, "node_id": "MDQ6VXNlcjIyOTk5NTE=", "avatar_url": "https://avatars.githubusercontent.com/u/2299951?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pietroalbini", "html_url": "https://github.com/pietroalbini", "followers_url": "https://api.github.com/users/pietroalbini/followers", "following_url": "https://api.github.com/users/pietroalbini/following{/other_user}", "gists_url": "https://api.github.com/users/pietroalbini/gists{/gist_id}", "starred_url": "https://api.github.com/users/pietroalbini/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pietroalbini/subscriptions", "organizations_url": "https://api.github.com/users/pietroalbini/orgs", "repos_url": "https://api.github.com/users/pietroalbini/repos", "events_url": "https://api.github.com/users/pietroalbini/events{/privacy}", "received_events_url": "https://api.github.com/users/pietroalbini/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4fbeb11374b36b2b7c4fce7b046c2fbe9905e838", "url": "https://api.github.com/repos/rust-lang/rust/commits/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838", "html_url": "https://github.com/rust-lang/rust/commit/4fbeb11374b36b2b7c4fce7b046c2fbe9905e838"}, {"sha": "df852c0d793eaf0c31124de6c0020d21c07591e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/df852c0d793eaf0c31124de6c0020d21c07591e3", "html_url": "https://github.com/rust-lang/rust/commit/df852c0d793eaf0c31124de6c0020d21c07591e3"}], "stats": {"total": 55, "additions": 54, "deletions": 1}, "files": [{"sha": "97f747c94a4123bdfea5d3146acc11d8b2f0fed6", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3005b4d9181793f59b0e9ca113bb3951e0dfa33f/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3005b4d9181793f59b0e9ca113bb3951e0dfa33f/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=3005b4d9181793f59b0e9ca113bb3951e0dfa33f", "patch": "@@ -379,9 +379,22 @@ fn visit_fn<'a, 'tcx: 'a>(ir: &mut IrMaps<'a, 'tcx>,\n     let body = ir.tcx.hir().body(body_id);\n \n     for arg in &body.arguments {\n+        let is_shorthand = match arg.pat.node {\n+            crate::hir::PatKind::Struct(..) => true,\n+            _ => false,\n+        };\n         arg.pat.each_binding(|_bm, hir_id, _x, ident| {\n             debug!(\"adding argument {:?}\", hir_id);\n-            fn_maps.add_variable(Arg(hir_id, ident.name));\n+            let var = if is_shorthand {\n+                Local(LocalInfo {\n+                    id: hir_id,\n+                    name: ident.name,\n+                    is_shorthand: true,\n+                })\n+            } else {\n+                Arg(hir_id, ident.name)\n+            };\n+            fn_maps.add_variable(var);\n         })\n     };\n "}, {"sha": "677003ebf225ca65d86b57d9fd064d75d2b4e509", "filename": "src/test/ui/suggestions/unused-closure-argument.rs", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3005b4d9181793f59b0e9ca113bb3951e0dfa33f/src%2Ftest%2Fui%2Fsuggestions%2Funused-closure-argument.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3005b4d9181793f59b0e9ca113bb3951e0dfa33f/src%2Ftest%2Fui%2Fsuggestions%2Funused-closure-argument.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funused-closure-argument.rs?ref=3005b4d9181793f59b0e9ca113bb3951e0dfa33f", "patch": "@@ -0,0 +1,20 @@\n+#![deny(unused_variables)]\n+\n+struct Point {\n+    x: i32,\n+    y: i32,\n+}\n+\n+fn main() {\n+    let points = vec!(Point { x: 1, y: 2 }, Point { x: 3, y: 4 });\n+\n+    let _: i32 = points.iter()\n+        .map(|Point { x, y }| y)\n+        //~^ ERROR unused variable\n+        .sum();\n+\n+    let _: i32 = points.iter()\n+        .map(|x| 4)\n+        //~^ ERROR unused variable\n+        .sum();\n+}"}, {"sha": "5cfdd79659b2737e90b4e756f717a19fda93304e", "filename": "src/test/ui/suggestions/unused-closure-argument.stderr", "status": "added", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3005b4d9181793f59b0e9ca113bb3951e0dfa33f/src%2Ftest%2Fui%2Fsuggestions%2Funused-closure-argument.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3005b4d9181793f59b0e9ca113bb3951e0dfa33f/src%2Ftest%2Fui%2Fsuggestions%2Funused-closure-argument.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Funused-closure-argument.stderr?ref=3005b4d9181793f59b0e9ca113bb3951e0dfa33f", "patch": "@@ -0,0 +1,20 @@\n+error: unused variable: `x`\n+  --> $DIR/unused-closure-argument.rs:12:23\n+   |\n+LL |         .map(|Point { x, y }| y)\n+   |                       ^ help: try ignoring the field: `x: _`\n+   |\n+note: lint level defined here\n+  --> $DIR/unused-closure-argument.rs:1:9\n+   |\n+LL | #![deny(unused_variables)]\n+   |         ^^^^^^^^^^^^^^^^\n+\n+error: unused variable: `x`\n+  --> $DIR/unused-closure-argument.rs:17:15\n+   |\n+LL |         .map(|x| 4)\n+   |               ^ help: consider prefixing with an underscore: `_x`\n+\n+error: aborting due to 2 previous errors\n+"}]}