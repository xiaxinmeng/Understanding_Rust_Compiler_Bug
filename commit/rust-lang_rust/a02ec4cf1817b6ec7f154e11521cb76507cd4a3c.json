{"sha": "a02ec4cf1817b6ec7f154e11521cb76507cd4a3c", "node_id": "C_kwDOAAsO6NoAKGEwMmVjNGNmMTgxN2I2ZWM3ZjE1NGUxMTUyMWNiNzY1MDdjZDRhM2M", "commit": {"author": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-10-12T16:39:22Z"}, "committer": {"name": "Lukas Markeffsky", "email": "@", "date": "2022-10-12T16:39:22Z"}, "message": "remove HRTB from `[T]::is_sorted_by{,_key}`", "tree": {"sha": "f454debc0cbed756f7bdb52090ea03bb4875cce1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f454debc0cbed756f7bdb52090ea03bb4875cce1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a02ec4cf1817b6ec7f154e11521cb76507cd4a3c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a02ec4cf1817b6ec7f154e11521cb76507cd4a3c", "html_url": "https://github.com/rust-lang/rust/commit/a02ec4cf1817b6ec7f154e11521cb76507cd4a3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a02ec4cf1817b6ec7f154e11521cb76507cd4a3c/comments", "author": null, "committer": null, "parents": [{"sha": "e6ce5627a9e8af9ae4673a390954fffaf526e5cc", "url": "https://api.github.com/repos/rust-lang/rust/commits/e6ce5627a9e8af9ae4673a390954fffaf526e5cc", "html_url": "https://github.com/rust-lang/rust/commit/e6ce5627a9e8af9ae4673a390954fffaf526e5cc"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "e874b57636894bec61e6180a2b742d09d08c869a", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a02ec4cf1817b6ec7f154e11521cb76507cd4a3c/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a02ec4cf1817b6ec7f154e11521cb76507cd4a3c/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=a02ec4cf1817b6ec7f154e11521cb76507cd4a3c", "patch": "@@ -3724,9 +3724,9 @@ impl<T> [T] {\n     /// [`is_sorted`]: slice::is_sorted\n     #[unstable(feature = \"is_sorted\", reason = \"new API\", issue = \"53485\")]\n     #[must_use]\n-    pub fn is_sorted_by<F>(&self, mut compare: F) -> bool\n+    pub fn is_sorted_by<'a, F>(&'a self, mut compare: F) -> bool\n     where\n-        F: FnMut(&T, &T) -> Option<Ordering>,\n+        F: FnMut(&'a T, &'a T) -> Option<Ordering>,\n     {\n         self.iter().is_sorted_by(|a, b| compare(*a, *b))\n     }\n@@ -3750,9 +3750,9 @@ impl<T> [T] {\n     #[inline]\n     #[unstable(feature = \"is_sorted\", reason = \"new API\", issue = \"53485\")]\n     #[must_use]\n-    pub fn is_sorted_by_key<F, K>(&self, f: F) -> bool\n+    pub fn is_sorted_by_key<'a, F, K>(&'a self, f: F) -> bool\n     where\n-        F: FnMut(&T) -> K,\n+        F: FnMut(&'a T) -> K,\n         K: PartialOrd,\n     {\n         self.iter().is_sorted_by_key(f)"}]}