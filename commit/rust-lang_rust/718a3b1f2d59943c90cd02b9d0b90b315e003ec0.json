{"sha": "718a3b1f2d59943c90cd02b9d0b90b315e003ec0", "node_id": "C_kwDOAAsO6NoAKDcxOGEzYjFmMmQ1OTk0M2M5MGNkMDJiOWQwYjkwYjMxNWUwMDNlYzA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2021-11-25T06:48:09Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2021-11-25T16:34:30Z"}, "message": "Fix issue 91206", "tree": {"sha": "f75cb657a00fa54e48e5a901846de70585a7d525", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f75cb657a00fa54e48e5a901846de70585a7d525"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/718a3b1f2d59943c90cd02b9d0b90b315e003ec0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/718a3b1f2d59943c90cd02b9d0b90b315e003ec0", "html_url": "https://github.com/rust-lang/rust/commit/718a3b1f2d59943c90cd02b9d0b90b315e003ec0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/718a3b1f2d59943c90cd02b9d0b90b315e003ec0/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "862962b90e59c5c1e217df74de80d3a81eee42f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/862962b90e59c5c1e217df74de80d3a81eee42f4", "html_url": "https://github.com/rust-lang/rust/commit/862962b90e59c5c1e217df74de80d3a81eee42f4"}], "stats": {"total": 24, "additions": 14, "deletions": 10}, "files": [{"sha": "a0f8aabbe0e72351b8d34471f3266a572a6191ca", "filename": "compiler/rustc_borrowck/src/diagnostics/mutability_errors.rs", "status": "modified", "additions": 14, "deletions": 10, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/718a3b1f2d59943c90cd02b9d0b90b315e003ec0/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "raw_url": "https://github.com/rust-lang/rust/raw/718a3b1f2d59943c90cd02b9d0b90b315e003ec0/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fdiagnostics%2Fmutability_errors.rs?ref=718a3b1f2d59943c90cd02b9d0b90b315e003ec0", "patch": "@@ -447,16 +447,20 @@ impl<'a, 'tcx> MirBorrowckCtxt<'a, 'tcx> {\n                                 // check if the RHS is from desugaring\n                                 let opt_assignment_rhs_span =\n                                     self.body.find_assignments(local).first().map(|&location| {\n-                                        let stmt = &self.body[location.block].statements\n-                                            [location.statement_index];\n-                                        match stmt.kind {\n-                                            mir::StatementKind::Assign(box (\n-                                                _,\n-                                                mir::Rvalue::Use(mir::Operand::Copy(place)),\n-                                            )) => {\n-                                                self.body.local_decls[place.local].source_info.span\n-                                            }\n-                                            _ => self.body.source_info(location).span,\n+                                        if let Some(mir::Statement {\n+                                            source_info: _,\n+                                            kind:\n+                                                mir::StatementKind::Assign(box (\n+                                                    _,\n+                                                    mir::Rvalue::Use(mir::Operand::Copy(place)),\n+                                                )),\n+                                        }) = self.body[location.block]\n+                                            .statements\n+                                            .get(location.statement_index)\n+                                        {\n+                                            self.body.local_decls[place.local].source_info.span\n+                                        } else {\n+                                            self.body.source_info(location).span\n                                         }\n                                     });\n                                 match opt_assignment_rhs_span.and_then(|s| s.desugaring_kind()) {"}]}