{"sha": "56e040e61a382a831faa5c563c46ffee2f4d7333", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2ZTA0MGU2MWEzODJhODMxZmFhNWM1NjNjNDZmZmVlMmY0ZDczMzM=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-17T08:31:41Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2010-12-17T08:31:41Z"}, "message": "Trans methods more correctly, and store vtbl pointer in pair returned from obj ctor.", "tree": {"sha": "1915c1108bfc61037aa0f78ae72a89bcc83527f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1915c1108bfc61037aa0f78ae72a89bcc83527f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56e040e61a382a831faa5c563c46ffee2f4d7333", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56e040e61a382a831faa5c563c46ffee2f4d7333", "html_url": "https://github.com/rust-lang/rust/commit/56e040e61a382a831faa5c563c46ffee2f4d7333", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56e040e61a382a831faa5c563c46ffee2f4d7333/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "62d62ce4da7b719c9ea1c65e916f1702c820f7d6", "url": "https://api.github.com/repos/rust-lang/rust/commits/62d62ce4da7b719c9ea1c65e916f1702c820f7d6", "html_url": "https://github.com/rust-lang/rust/commit/62d62ce4da7b719c9ea1c65e916f1702c820f7d6"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "6a926b9d7b525197f29dc84fdb9306d08bbe1e5a", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/56e040e61a382a831faa5c563c46ffee2f4d7333/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56e040e61a382a831faa5c563c46ffee2f4d7333/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=56e040e61a382a831faa5c563c46ffee2f4d7333", "patch": "@@ -2310,14 +2310,20 @@ impure fn trans_fn(@crate_ctxt cx, &ast._fn f, ast.def_id fid,\n impure fn trans_vtbl(@crate_ctxt cx, &ast._obj ob) -> ValueRef {\n     let vec[ValueRef] methods = vec();\n     for (@ast.method m in ob.methods) {\n+\n+        auto llfnty = node_type(cx, m.node.ann);\n+        let str s = cx.names.next(\"_rust_method\") + \".\" + cx.path;\n+        let ValueRef llfn = decl_fastcall_fn(cx.llmod, s, llfnty);\n+        cx.item_ids.insert(m.node.id, llfn);\n+\n         trans_fn(cx, m.node.meth, m.node.id, m.node.ann);\n-        methods += cx.item_ids.get(m.node.id);\n+        methods += llfn;\n     }\n     ret C_struct(methods);\n }\n \n-fn trans_obj(@crate_ctxt cx, &ast._obj ob, ast.def_id oid,\n-             &ast.ann ann) {\n+impure fn trans_obj(@crate_ctxt cx, &ast._obj ob, ast.def_id oid,\n+                    &ast.ann ann) {\n \n     auto llctor_decl = cx.item_ids.get(oid);\n     cx.item_names.insert(cx.path, llctor_decl);\n@@ -2339,7 +2345,11 @@ fn trans_obj(@crate_ctxt cx, &ast._obj ob, ast.def_id oid,\n     copy_args_to_allocas(bcx, fn_args, arg_tys_of_fn(ann));\n \n     auto pair = bcx.build.Alloca(type_of(cx, ret_ty_of_fn(ann)));\n-\n+    auto vtbl = trans_vtbl(cx, ob);\n+    auto pair_vtbl = bcx.build.GEP(pair,\n+                                   vec(C_int(0),\n+                                       C_int(abi.obj_field_vtbl)));\n+    bcx.build.Store(vtbl, pair_vtbl);\n     bcx.build.Ret(pair);\n }\n "}]}