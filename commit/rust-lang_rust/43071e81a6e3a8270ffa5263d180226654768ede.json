{"sha": "43071e81a6e3a8270ffa5263d180226654768ede", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQzMDcxZTgxYTZlM2E4MjcwZmZhNTI2M2QxODAyMjY2NTQ3NjhlZGU=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-04-13T12:31:05Z"}, "committer": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2021-04-13T12:31:05Z"}, "message": "internal: follow test style guide in typing.rs", "tree": {"sha": "fc3a809408d85518cd440d3cb5f8d294a7c78082", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fc3a809408d85518cd440d3cb5f8d294a7c78082"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/43071e81a6e3a8270ffa5263d180226654768ede", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/43071e81a6e3a8270ffa5263d180226654768ede", "html_url": "https://github.com/rust-lang/rust/commit/43071e81a6e3a8270ffa5263d180226654768ede", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/43071e81a6e3a8270ffa5263d180226654768ede/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7f53d3acbaced3b9ea76fb4a43a29b424fc03a3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7f53d3acbaced3b9ea76fb4a43a29b424fc03a3f", "html_url": "https://github.com/rust-lang/rust/commit/7f53d3acbaced3b9ea76fb4a43a29b424fc03a3f"}], "stats": {"total": 200, "additions": 104, "deletions": 96}, "files": [{"sha": "82c7323908a7ef37ed7f07261bd29848eca1faac", "filename": "crates/ide/src/typing.rs", "status": "modified", "additions": 104, "deletions": 96, "changes": 200, "blob_url": "https://github.com/rust-lang/rust/blob/43071e81a6e3a8270ffa5263d180226654768ede/crates%2Fide%2Fsrc%2Ftyping.rs", "raw_url": "https://github.com/rust-lang/rust/raw/43071e81a6e3a8270ffa5263d180226654768ede/crates%2Fide%2Fsrc%2Ftyping.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Ftyping.rs?ref=43071e81a6e3a8270ffa5263d180226654768ede", "patch": "@@ -222,8 +222,8 @@ mod tests {\n         assert_eq_text!(ra_fixture_after, &actual);\n     }\n \n-    fn type_char_noop(char_typed: char, before: &str) {\n-        let file_change = do_type_char(char_typed, before);\n+    fn type_char_noop(char_typed: char, ra_fixture_before: &str) {\n+        let file_change = do_type_char(char_typed, ra_fixture_before);\n         assert!(file_change.is_none())\n     }\n \n@@ -240,16 +240,16 @@ mod tests {\n         // \");\n         type_char(\n             '=',\n-            r\"\n+            r#\"\n fn foo() {\n     let foo $0 1 + 1\n }\n-\",\n-            r\"\n+\"#,\n+            r#\"\n fn foo() {\n     let foo = 1 + 1;\n }\n-\",\n+\"#,\n         );\n         //     do_check(r\"\n         // fn foo() {\n@@ -268,27 +268,27 @@ fn foo() {\n     fn indents_new_chain_call() {\n         type_char(\n             '.',\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                $0\n-            }\n-            \",\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                    .\n-            }\n-            \",\n+            r#\"\n+fn main() {\n+    xs.foo()\n+    $0\n+}\n+            \"#,\n+            r#\"\n+fn main() {\n+    xs.foo()\n+        .\n+}\n+            \"#,\n         );\n         type_char_noop(\n             '.',\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                    $0\n-            }\n-            \",\n+            r#\"\n+fn main() {\n+    xs.foo()\n+        $0\n+}\n+            \"#,\n         )\n     }\n \n@@ -297,26 +297,26 @@ fn foo() {\n         type_char(\n             '.',\n             r\"\n-            fn main() {\n-                xs.foo()\n-                $0;\n-            }\n-            \",\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                    .;\n-            }\n+fn main() {\n+    xs.foo()\n+    $0;\n+}\n             \",\n+            r#\"\n+fn main() {\n+    xs.foo()\n+        .;\n+}\n+            \"#,\n         );\n         type_char_noop(\n             '.',\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                    $0;\n-            }\n-            \",\n+            r#\"\n+fn main() {\n+    xs.foo()\n+        $0;\n+}\n+            \"#,\n         )\n     }\n \n@@ -345,90 +345,98 @@ fn main() {\n     fn indents_continued_chain_call() {\n         type_char(\n             '.',\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                    .first()\n-                $0\n-            }\n-            \",\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                    .first()\n-                    .\n-            }\n-            \",\n+            r#\"\n+fn main() {\n+    xs.foo()\n+        .first()\n+    $0\n+}\n+            \"#,\n+            r#\"\n+fn main() {\n+    xs.foo()\n+        .first()\n+        .\n+}\n+            \"#,\n         );\n         type_char_noop(\n             '.',\n-            r\"\n-            fn main() {\n-                xs.foo()\n-                    .first()\n-                    $0\n-            }\n-            \",\n+            r#\"\n+fn main() {\n+    xs.foo()\n+        .first()\n+        $0\n+}\n+            \"#,\n         );\n     }\n \n     #[test]\n     fn indents_middle_of_chain_call() {\n         type_char(\n             '.',\n-            r\"\n-            fn source_impl() {\n-                let var = enum_defvariant_list().unwrap()\n-                $0\n-                    .nth(92)\n-                    .unwrap();\n-            }\n-            \",\n-            r\"\n-            fn source_impl() {\n-                let var = enum_defvariant_list().unwrap()\n-                    .\n-                    .nth(92)\n-                    .unwrap();\n-            }\n-            \",\n+            r#\"\n+fn source_impl() {\n+    let var = enum_defvariant_list().unwrap()\n+    $0\n+        .nth(92)\n+        .unwrap();\n+}\n+            \"#,\n+            r#\"\n+fn source_impl() {\n+    let var = enum_defvariant_list().unwrap()\n+        .\n+        .nth(92)\n+        .unwrap();\n+}\n+            \"#,\n         );\n         type_char_noop(\n             '.',\n-            r\"\n-            fn source_impl() {\n-                let var = enum_defvariant_list().unwrap()\n-                    $0\n-                    .nth(92)\n-                    .unwrap();\n-            }\n-            \",\n+            r#\"\n+fn source_impl() {\n+    let var = enum_defvariant_list().unwrap()\n+        $0\n+        .nth(92)\n+        .unwrap();\n+}\n+            \"#,\n         );\n     }\n \n     #[test]\n     fn dont_indent_freestanding_dot() {\n         type_char_noop(\n             '.',\n-            r\"\n-            fn main() {\n-                $0\n-            }\n-            \",\n+            r#\"\n+fn main() {\n+    $0\n+}\n+            \"#,\n         );\n         type_char_noop(\n             '.',\n-            r\"\n-            fn main() {\n-            $0\n-            }\n-            \",\n+            r#\"\n+fn main() {\n+$0\n+}\n+            \"#,\n         );\n     }\n \n     #[test]\n     fn adds_space_after_return_type() {\n-        type_char('>', \"fn foo() -$0{ 92 }\", \"fn foo() -> { 92 }\")\n+        type_char(\n+            '>',\n+            r#\"\n+fn foo() -$0{ 92 }\n+\"#,\n+            r#\"\n+fn foo() -> { 92 }\n+\"#,\n+        );\n     }\n \n     #[test]"}]}