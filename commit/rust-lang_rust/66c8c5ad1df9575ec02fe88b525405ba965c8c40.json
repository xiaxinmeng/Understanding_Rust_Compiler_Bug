{"sha": "66c8c5ad1df9575ec02fe88b525405ba965c8c40", "node_id": "C_kwDOAAsO6NoAKDY2YzhjNWFkMWRmOTU3NWVjMDJmZTg4YjUyNTQwNWJhOTY1YzhjNDA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-05T05:35:34Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-10-05T06:42:35Z"}, "message": "Delay function resolution error until typeck", "tree": {"sha": "2307a99c575e0d90d37b2e4d59dab0799e279d29", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2307a99c575e0d90d37b2e4d59dab0799e279d29"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/66c8c5ad1df9575ec02fe88b525405ba965c8c40", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/66c8c5ad1df9575ec02fe88b525405ba965c8c40", "html_url": "https://github.com/rust-lang/rust/commit/66c8c5ad1df9575ec02fe88b525405ba965c8c40", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/66c8c5ad1df9575ec02fe88b525405ba965c8c40/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4846f9d03659704af1f6b56bb4278bf843a4627", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4846f9d03659704af1f6b56bb4278bf843a4627", "html_url": "https://github.com/rust-lang/rust/commit/d4846f9d03659704af1f6b56bb4278bf843a4627"}], "stats": {"total": 739, "additions": 383, "deletions": 356}, "files": [{"sha": "94a493992e59339af62d8cd02d278763129dc783", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -460,6 +460,7 @@ pub enum StashKey {\n     ItemNoType,\n     UnderscoreForArrayLengths,\n     EarlySyntaxWarning,\n+    CallIntoMethod,\n }\n \n fn default_track_diagnostic(_: &Diagnostic) {}"}, {"sha": "cf69747e10ac141b0caa196a42282971d3bf2102", "filename": "compiler/rustc_hir_analysis/src/check/callee.rs", "status": "modified", "additions": 17, "deletions": 1, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcallee.rs?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -2,7 +2,7 @@ use super::method::MethodCallee;\n use super::{DefIdOrName, Expectation, FnCtxt, TupleArgumentsFlag};\n use crate::type_error_struct;\n \n-use rustc_errors::{struct_span_err, Applicability, Diagnostic};\n+use rustc_errors::{struct_span_err, Applicability, Diagnostic, StashKey};\n use rustc_hir as hir;\n use rustc_hir::def::{self, Namespace, Res};\n use rustc_hir::def_id::DefId;\n@@ -60,6 +60,7 @@ pub fn check_legal_trait_for_method_call(\n     }\n }\n \n+#[derive(Debug)]\n enum CallStep<'tcx> {\n     Builtin(Ty<'tcx>),\n     DeferredClosure(LocalDefId, ty::FnSig<'tcx>),\n@@ -188,6 +189,10 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 return None;\n             }\n \n+            ty::Error(_) => {\n+                return None;\n+            }\n+\n             _ => {}\n         }\n \n@@ -394,6 +399,17 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n             }\n             ty::FnPtr(sig) => (sig, None),\n             _ => {\n+                if let hir::ExprKind::Path(hir::QPath::Resolved(_, path)) = &callee_expr.kind\n+                    && let [segment] = path.segments\n+                    && let Some(mut diag) = self\n+                        .tcx\n+                        .sess\n+                        .diagnostic()\n+                        .steal_diagnostic(segment.ident.span, StashKey::CallIntoMethod)\n+                {\n+                    diag.emit();\n+                }\n+\n                 self.report_invalid_callee(call_expr, callee_expr, callee_ty, arg_exprs);\n \n                 // This is the \"default\" function signature, used in case of error."}, {"sha": "98982240af27f114b3d62e8546c672b40d14839d", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -120,14 +120,15 @@ impl<'a> Resolver<'a> {\n     }\n \n     fn report_with_use_injections(&mut self, krate: &Crate) {\n-        for UseError { mut err, candidates, def_id, instead, suggestion, path } in\n+        for UseError { mut err, candidates, def_id, instead, suggestion, path, is_call } in\n             self.use_injections.drain(..)\n         {\n             let (span, found_use) = if let Some(def_id) = def_id.as_local() {\n                 UsePlacementFinder::check(krate, self.def_id_to_node_id[def_id])\n             } else {\n                 (None, FoundUse::No)\n             };\n+\n             if !candidates.is_empty() {\n                 show_candidates(\n                     &self.session,\n@@ -140,10 +141,15 @@ impl<'a> Resolver<'a> {\n                     IsPattern::No,\n                     path,\n                 );\n+                err.emit();\n             } else if let Some((span, msg, sugg, appl)) = suggestion {\n                 err.span_suggestion(span, msg, sugg, appl);\n+                err.emit();\n+            } else if let [segment] = path.as_slice() && is_call {\n+                err.stash(segment.ident.span, rustc_errors::StashKey::CallIntoMethod);\n+            } else {\n+                err.emit();\n             }\n-            err.emit();\n         }\n     }\n "}, {"sha": "431507e8e0f63fb8be02d9ebba98aafe1501cbf2", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -3263,6 +3263,7 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                     instead,\n                     suggestion,\n                     path: path.into(),\n+                    is_call: source.is_call(),\n                 });\n             }\n \n@@ -3327,6 +3328,7 @@ impl<'a: 'ast, 'b, 'ast> LateResolutionVisitor<'a, 'b, 'ast> {\n                     instead: false,\n                     suggestion: None,\n                     path: path.into(),\n+                    is_call: source.is_call(),\n                 });\n             } else {\n                 err.cancel();"}, {"sha": "9173c3692ce6ced2fa88309ced7bf016590aa5f7", "filename": "compiler/rustc_resolve/src/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/compiler%2Frustc_resolve%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flib.rs?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -674,6 +674,8 @@ struct UseError<'a> {\n     /// Path `Segment`s at the place of use that failed. Used for accurate suggestion after telling\n     /// the user to import the item directly.\n     path: Vec<Segment>,\n+    /// Whether the expected source is a call\n+    is_call: bool,\n }\n \n #[derive(Clone, Copy, PartialEq, Debug)]"}, {"sha": "9dde5b3ebe309e450d173c8511f88381e21afbaf", "filename": "src/test/ui/did_you_mean/issue-43871-enum-instead-of-variant.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-43871-enum-instead-of-variant.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -1,11 +1,3 @@\n-error[E0423]: expected function, tuple struct or tuple variant, found enum `Option`\n-  --> $DIR/issue-43871-enum-instead-of-variant.rs:19:13\n-   |\n-LL |     let x = Option(1);\n-   |             ^^^^^^ help: try to construct one of the enum's variants: `std::option::Option::Some`\n-   |\n-   = help: you might have meant to construct the enum's non-tuple variant\n-\n error[E0532]: expected tuple struct or tuple variant, found enum `Option`\n   --> $DIR/issue-43871-enum-instead-of-variant.rs:21:12\n    |\n@@ -27,6 +19,14 @@ note: the enum is defined here\n LL | enum Example { Ex(String), NotEx }\n    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n+error[E0423]: expected function, tuple struct or tuple variant, found enum `Option`\n+  --> $DIR/issue-43871-enum-instead-of-variant.rs:19:13\n+   |\n+LL |     let x = Option(1);\n+   |             ^^^^^^ help: try to construct one of the enum's variants: `std::option::Option::Some`\n+   |\n+   = help: you might have meant to construct the enum's non-tuple variant\n+\n error[E0423]: expected function, tuple struct or tuple variant, found enum `Void`\n   --> $DIR/issue-43871-enum-instead-of-variant.rs:31:13\n    |"}, {"sha": "5b0ca613fc4aff82c0261e0d834231693f579369", "filename": "src/test/ui/empty/empty-struct-braces-expr.stderr", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fempty%2Fempty-struct-braces-expr.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -21,29 +21,6 @@ help: a unit struct with a similar name exists\n LL |     let e1 = XEmpty2;\n    |              ~~~~~~~\n \n-error[E0423]: expected function, tuple struct or tuple variant, found struct `Empty1`\n-  --> $DIR/empty-struct-braces-expr.rs:16:14\n-   |\n-LL | struct Empty1 {}\n-   | ---------------- `Empty1` defined here\n-...\n-LL |     let e1 = Empty1();\n-   |              ^^^^^^^^\n-   |\n-  ::: $DIR/auxiliary/empty-struct.rs:2:1\n-   |\n-LL | pub struct XEmpty2;\n-   | ------------------ similarly named unit struct `XEmpty2` defined here\n-   |\n-help: use struct literal syntax instead\n-   |\n-LL |     let e1 = Empty1 {};\n-   |              ~~~~~~~~~\n-help: a unit struct with a similar name exists\n-   |\n-LL |     let e1 = XEmpty2();\n-   |              ~~~~~~~\n-\n error[E0423]: expected value, found struct variant `E::Empty3`\n   --> $DIR/empty-struct-braces-expr.rs:18:14\n    |\n@@ -84,6 +61,29 @@ help: a unit struct with a similar name exists\n LL |     let xe1 = XEmpty2;\n    |               ~~~~~~~\n \n+error[E0423]: expected function, tuple struct or tuple variant, found struct `Empty1`\n+  --> $DIR/empty-struct-braces-expr.rs:16:14\n+   |\n+LL | struct Empty1 {}\n+   | ---------------- `Empty1` defined here\n+...\n+LL |     let e1 = Empty1();\n+   |              ^^^^^^^^\n+   |\n+  ::: $DIR/auxiliary/empty-struct.rs:2:1\n+   |\n+LL | pub struct XEmpty2;\n+   | ------------------ similarly named unit struct `XEmpty2` defined here\n+   |\n+help: use struct literal syntax instead\n+   |\n+LL |     let e1 = Empty1 {};\n+   |              ~~~~~~~~~\n+help: a unit struct with a similar name exists\n+   |\n+LL |     let e1 = XEmpty2();\n+   |              ~~~~~~~\n+\n error[E0423]: expected function, tuple struct or tuple variant, found struct `XEmpty1`\n   --> $DIR/empty-struct-braces-expr.rs:23:15\n    |"}, {"sha": "ac70d905d353fbaf9906707ac0ada7736355d8c6", "filename": "src/test/ui/error-codes/E0423.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ferror-codes%2FE0423.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -26,6 +26,17 @@ help: surround the struct literal with parentheses\n LL |     for _ in (std::ops::Range { start: 0, end: 10 }) {}\n    |              +                                     +\n \n+error[E0423]: expected value, found struct `T`\n+  --> $DIR/E0423.rs:14:8\n+   |\n+LL |     if T {} == T {} { println!(\"Ok\"); }\n+   |        ^ not a value\n+   |\n+help: surround the struct literal with parentheses\n+   |\n+LL |     if (T {}) == T {} { println!(\"Ok\"); }\n+   |        +    +\n+\n error[E0423]: expected function, tuple struct or tuple variant, found struct `Foo`\n   --> $DIR/E0423.rs:4:13\n    |\n@@ -47,17 +58,6 @@ help: a function with a similar name exists\n LL |     let f = foo();\n    |             ~~~\n \n-error[E0423]: expected value, found struct `T`\n-  --> $DIR/E0423.rs:14:8\n-   |\n-LL |     if T {} == T {} { println!(\"Ok\"); }\n-   |        ^ not a value\n-   |\n-help: surround the struct literal with parentheses\n-   |\n-LL |     if (T {}) == T {} { println!(\"Ok\"); }\n-   |        +    +\n-\n error: aborting due to 5 previous errors\n \n For more information about this error, try `rustc --explain E0423`."}, {"sha": "56d85c066a8d8cc822046f05befab39572192e04", "filename": "src/test/ui/issues/issue-58022.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fissues%2Fissue-58022.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fissues%2Fissue-58022.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-58022.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -1,9 +1,3 @@\n-error[E0423]: expected function, tuple struct or tuple variant, found trait `Foo`\n-  --> $DIR/issue-58022.rs:14:9\n-   |\n-LL |         Foo(Box::new(*slice))\n-   |         ^^^ not a function, tuple struct or tuple variant\n-\n error[E0790]: cannot refer to the associated constant on trait without specifying the corresponding `impl` type\n   --> $DIR/issue-58022.rs:4:25\n    |\n@@ -13,6 +7,12 @@ LL |\n LL |     fn new(slice: &[u8; Foo::SIZE]) -> Self;\n    |                         ^^^^^^^^^ cannot refer to the associated constant of trait\n \n+error[E0423]: expected function, tuple struct or tuple variant, found trait `Foo`\n+  --> $DIR/issue-58022.rs:14:9\n+   |\n+LL |         Foo(Box::new(*slice))\n+   |         ^^^ not a function, tuple struct or tuple variant\n+\n error: aborting due to 2 previous errors\n \n Some errors have detailed explanations: E0423, E0790."}, {"sha": "b315df179d01cad564b385dc61423aafb892994c", "filename": "src/test/ui/lang-items/issue-83471.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Flang-items%2Fissue-83471.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Flang-items%2Fissue-83471.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flang-items%2Fissue-83471.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -4,12 +4,6 @@ error[E0573]: expected type, found built-in attribute `export_name`\n LL |     fn call(export_name);\n    |             ^^^^^^^^^^^ not a type\n \n-error[E0425]: cannot find function `a` in this scope\n-  --> $DIR/issue-83471.rs:21:5\n-   |\n-LL |     a()\n-   |     ^ not found in this scope\n-\n error[E0658]: language items are subject to change\n   --> $DIR/issue-83471.rs:7:1\n    |\n@@ -45,6 +39,12 @@ LL | #[lang = \"fn\"]\n LL | trait Fn {\n    |         - this trait has 0 generic arguments\n \n+error[E0425]: cannot find function `a` in this scope\n+  --> $DIR/issue-83471.rs:21:5\n+   |\n+LL |     a()\n+   |     ^ not found in this scope\n+\n error: aborting due to 5 previous errors; 1 warning emitted\n \n Some errors have detailed explanations: E0425, E0573, E0658, E0718."}, {"sha": "a6cff95fd9153d83e2e8f775969cc97b9e034767", "filename": "src/test/ui/macros/rfc-3086-metavar-expr/syntax-errors.stderr", "status": "modified", "additions": 22, "deletions": 22, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fmacros%2Frfc-3086-metavar-expr%2Fsyntax-errors.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fmacros%2Frfc-3086-metavar-expr%2Fsyntax-errors.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Frfc-3086-metavar-expr%2Fsyntax-errors.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -319,22 +319,39 @@ LL |     unknown_metavar!(a);\n    |\n    = note: this error originates in the macro `unknown_metavar` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0425]: cannot find function `count` in this scope\n-  --> $DIR/syntax-errors.rs:29:30\n+error[E0425]: cannot find value `i` in this scope\n+  --> $DIR/syntax-errors.rs:29:36\n    |\n LL |     ( $( $i:ident ),* ) => { count(i) };\n-   |                              ^^^^^ not found in this scope\n+   |                                    ^ not found in this scope\n ...\n LL |     no_curly__no_rhs_dollar__round!(a, b, c);\n    |     ---------------------------------------- in this macro invocation\n    |\n    = note: this error originates in the macro `no_curly__no_rhs_dollar__round` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error[E0425]: cannot find value `i` in this scope\n-  --> $DIR/syntax-errors.rs:29:36\n+  --> $DIR/syntax-errors.rs:35:29\n+   |\n+LL |     ( $i:ident ) => { count(i) };\n+   |                             ^ not found in this scope\n+...\n+LL |     no_curly__no_rhs_dollar__no_round!(a);\n+   |     ------------------------------------- in this macro invocation\n+   |\n+   = note: this error originates in the macro `no_curly__no_rhs_dollar__no_round` (in Nightly builds, run with -Z macro-backtrace for more info)\n+\n+error[E0425]: cannot find value `a` in this scope\n+  --> $DIR/syntax-errors.rs:153:37\n+   |\n+LL |     no_curly__rhs_dollar__no_round!(a);\n+   |                                     ^ not found in this scope\n+\n+error[E0425]: cannot find function `count` in this scope\n+  --> $DIR/syntax-errors.rs:29:30\n    |\n LL |     ( $( $i:ident ),* ) => { count(i) };\n-   |                                    ^ not found in this scope\n+   |                              ^^^^^ not found in this scope\n ...\n LL |     no_curly__no_rhs_dollar__round!(a, b, c);\n    |     ---------------------------------------- in this macro invocation\n@@ -352,17 +369,6 @@ LL |     no_curly__no_rhs_dollar__no_round!(a);\n    |\n    = note: this error originates in the macro `no_curly__no_rhs_dollar__no_round` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0425]: cannot find value `i` in this scope\n-  --> $DIR/syntax-errors.rs:35:29\n-   |\n-LL |     ( $i:ident ) => { count(i) };\n-   |                             ^ not found in this scope\n-...\n-LL |     no_curly__no_rhs_dollar__no_round!(a);\n-   |     ------------------------------------- in this macro invocation\n-   |\n-   = note: this error originates in the macro `no_curly__no_rhs_dollar__no_round` (in Nightly builds, run with -Z macro-backtrace for more info)\n-\n error[E0425]: cannot find function `count` in this scope\n   --> $DIR/syntax-errors.rs:46:23\n    |\n@@ -374,12 +380,6 @@ LL |     no_curly__rhs_dollar__no_round!(a);\n    |\n    = note: this error originates in the macro `no_curly__rhs_dollar__no_round` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n-error[E0425]: cannot find value `a` in this scope\n-  --> $DIR/syntax-errors.rs:153:37\n-   |\n-LL |     no_curly__rhs_dollar__no_round!(a);\n-   |                                     ^ not found in this scope\n-\n error: aborting due to 40 previous errors\n \n For more information about this error, try `rustc --explain E0425`."}, {"sha": "227d30282b1ead664cc5364a803d17b736268a42", "filename": "src/test/ui/namespace/namespaced-enum-glob-import-no-impls-xcrate.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fnamespace%2Fnamespaced-enum-glob-import-no-impls-xcrate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fnamespace%2Fnamespaced-enum-glob-import-no-impls-xcrate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnamespace%2Fnamespaced-enum-glob-import-no-impls-xcrate.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -1,27 +1,27 @@\n-error[E0425]: cannot find function `foo` in this scope\n-  --> $DIR/namespaced-enum-glob-import-no-impls-xcrate.rs:11:5\n-   |\n-LL |     foo();\n-   |     ^^^ not found in this scope\n-\n error[E0425]: cannot find function `foo` in module `m`\n   --> $DIR/namespaced-enum-glob-import-no-impls-xcrate.rs:12:8\n    |\n LL |     m::foo();\n    |        ^^^ not found in `m`\n \n-error[E0425]: cannot find function `bar` in this scope\n-  --> $DIR/namespaced-enum-glob-import-no-impls-xcrate.rs:13:5\n-   |\n-LL |     bar();\n-   |     ^^^ not found in this scope\n-\n error[E0425]: cannot find function `bar` in module `m`\n   --> $DIR/namespaced-enum-glob-import-no-impls-xcrate.rs:14:8\n    |\n LL |     m::bar();\n    |        ^^^ not found in `m`\n \n+error[E0425]: cannot find function `foo` in this scope\n+  --> $DIR/namespaced-enum-glob-import-no-impls-xcrate.rs:11:5\n+   |\n+LL |     foo();\n+   |     ^^^ not found in this scope\n+\n+error[E0425]: cannot find function `bar` in this scope\n+  --> $DIR/namespaced-enum-glob-import-no-impls-xcrate.rs:13:5\n+   |\n+LL |     bar();\n+   |     ^^^ not found in this scope\n+\n error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0425`."}, {"sha": "111ac7ab0f0bb45b46289daa6ec8d9a41fb6d1aa", "filename": "src/test/ui/namespace/namespaced-enum-glob-import-no-impls.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fnamespace%2Fnamespaced-enum-glob-import-no-impls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fnamespace%2Fnamespaced-enum-glob-import-no-impls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnamespace%2Fnamespaced-enum-glob-import-no-impls.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -1,27 +1,27 @@\n-error[E0425]: cannot find function `foo` in this scope\n-  --> $DIR/namespaced-enum-glob-import-no-impls.rs:21:5\n-   |\n-LL |     foo();\n-   |     ^^^ not found in this scope\n-\n error[E0425]: cannot find function `foo` in module `m`\n   --> $DIR/namespaced-enum-glob-import-no-impls.rs:22:8\n    |\n LL |     m::foo();\n    |        ^^^ not found in `m`\n \n-error[E0425]: cannot find function `bar` in this scope\n-  --> $DIR/namespaced-enum-glob-import-no-impls.rs:23:5\n-   |\n-LL |     bar();\n-   |     ^^^ not found in this scope\n-\n error[E0425]: cannot find function `bar` in module `m`\n   --> $DIR/namespaced-enum-glob-import-no-impls.rs:24:8\n    |\n LL |     m::bar();\n    |        ^^^ not found in `m`\n \n+error[E0425]: cannot find function `foo` in this scope\n+  --> $DIR/namespaced-enum-glob-import-no-impls.rs:21:5\n+   |\n+LL |     foo();\n+   |     ^^^ not found in this scope\n+\n+error[E0425]: cannot find function `bar` in this scope\n+  --> $DIR/namespaced-enum-glob-import-no-impls.rs:23:5\n+   |\n+LL |     bar();\n+   |     ^^^ not found in this scope\n+\n error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0425`."}, {"sha": "e645b68ba87c652e7cf4ea5e7f3c657dc5b8892c", "filename": "src/test/ui/parser/emoji-identifiers.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fparser%2Femoji-identifiers.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fparser%2Femoji-identifiers.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Femoji-identifiers.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -9,15 +9,6 @@ help: Unicode character '\u2796' (Heavy Minus Sign) looks like '-' (Minus/Hyphen),\n LL |     let _ = i_like_to_\ud83d\ude04_a_lot() - 4;\n    |                                  ~\n \n-error[E0425]: cannot find function `i_like_to_\ud83d\ude04_a_lot` in this scope\n-  --> $DIR/emoji-identifiers.rs:13:13\n-   |\n-LL | fn i_like_to_\ud83d\ude05_a_lot() -> \ud83d\udc40 {\n-   | ----------------------------- similarly named function `i_like_to_\ud83d\ude05_a_lot` defined here\n-...\n-LL |     let _ = i_like_to_\ud83d\ude04_a_lot() \u2796 4;\n-   |             ^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `i_like_to_\ud83d\ude05_a_lot`\n-\n error: Ferris cannot be used as an identifier\n   --> $DIR/emoji-identifiers.rs:17:9\n    |\n@@ -85,6 +76,15 @@ LL |     \ud83d\udc40::full_of\u2728()\n    |         function or associated item not found in `\ud83d\udc40`\n    |         help: there is an associated function with a similar name: `full_of_\u2728`\n \n+error[E0425]: cannot find function `i_like_to_\ud83d\ude04_a_lot` in this scope\n+  --> $DIR/emoji-identifiers.rs:13:13\n+   |\n+LL | fn i_like_to_\ud83d\ude05_a_lot() -> \ud83d\udc40 {\n+   | ----------------------------- similarly named function `i_like_to_\ud83d\ude05_a_lot` defined here\n+...\n+LL |     let _ = i_like_to_\ud83d\ude04_a_lot() \u2796 4;\n+   |             ^^^^^^^^^^^^^^^^^^ help: a function with a similar name exists: `i_like_to_\ud83d\ude05_a_lot`\n+\n error: aborting due to 10 previous errors\n \n Some errors have detailed explanations: E0425, E0599."}, {"sha": "0cb771ea39c6d94c89e193601d36bb0301320218", "filename": "src/test/ui/parser/parser-recovery-1.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fparser%2Fparser-recovery-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fparser%2Fparser-recovery-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fparser-recovery-1.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -18,18 +18,18 @@ error: unexpected token: `;`\n LL |     let x = y.;\n    |               ^\n \n-error[E0425]: cannot find function `foo` in this scope\n-  --> $DIR/parser-recovery-1.rs:5:17\n-   |\n-LL |         let x = foo();\n-   |                 ^^^ not found in this scope\n-\n error[E0425]: cannot find value `y` in this scope\n   --> $DIR/parser-recovery-1.rs:10:13\n    |\n LL |     let x = y.;\n    |             ^ not found in this scope\n \n+error[E0425]: cannot find function `foo` in this scope\n+  --> $DIR/parser-recovery-1.rs:5:17\n+   |\n+LL |         let x = foo();\n+   |                 ^^^ not found in this scope\n+\n error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0425`."}, {"sha": "8829cf4c1e1609050442aa66e140488c6085b6cf", "filename": "src/test/ui/parser/parser-recovery-2.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fparser%2Fparser-recovery-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fparser%2Fparser-recovery-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fparser-recovery-2.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -13,18 +13,18 @@ LL |         let x = foo();\n LL |     )\n    |     ^ mismatched closing delimiter\n \n-error[E0425]: cannot find function `foo` in this scope\n-  --> $DIR/parser-recovery-2.rs:5:17\n-   |\n-LL |         let x = foo();\n-   |                 ^^^ not found in this scope\n-\n error[E0425]: cannot find value `y` in this scope\n   --> $DIR/parser-recovery-2.rs:10:13\n    |\n LL |     let x = y.;\n    |             ^ not found in this scope\n \n+error[E0425]: cannot find function `foo` in this scope\n+  --> $DIR/parser-recovery-2.rs:5:17\n+   |\n+LL |         let x = foo();\n+   |                 ^^^ not found in this scope\n+\n error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0425`."}, {"sha": "cdf74bdedc2e17f360a6a365e40b1de3e241411b", "filename": "src/test/ui/parser/unmatched-langle-1.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fparser%2Funmatched-langle-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fparser%2Funmatched-langle-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Funmatched-langle-1.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -4,18 +4,18 @@ error: unmatched angle brackets\n LL |     foo::<<<<Ty<i32>>();\n    |          ^^^ help: remove extra angle brackets\n \n-error[E0425]: cannot find function `foo` in this scope\n-  --> $DIR/unmatched-langle-1.rs:5:5\n-   |\n-LL |     foo::<<<<Ty<i32>>();\n-   |     ^^^ not found in this scope\n-\n error[E0412]: cannot find type `Ty` in this scope\n   --> $DIR/unmatched-langle-1.rs:5:14\n    |\n LL |     foo::<<<<Ty<i32>>();\n    |              ^^ not found in this scope\n \n+error[E0425]: cannot find function `foo` in this scope\n+  --> $DIR/unmatched-langle-1.rs:5:5\n+   |\n+LL |     foo::<<<<Ty<i32>>();\n+   |     ^^^ not found in this scope\n+\n error: aborting due to 3 previous errors\n \n Some errors have detailed explanations: E0412, E0425."}, {"sha": "1a1f83cc1569bd916fabebaa97e5e926781f3558", "filename": "src/test/ui/proc-macro/keep-expr-tokens.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fproc-macro%2Fkeep-expr-tokens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fproc-macro%2Fkeep-expr-tokens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fproc-macro%2Fkeep-expr-tokens.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -1,15 +1,15 @@\n-error[E0425]: cannot find function `missing_fn` in this scope\n-  --> $DIR/keep-expr-tokens.rs:17:17\n-   |\n-LL |     for item in missing_fn() {}\n-   |                 ^^^^^^^^^^ not found in this scope\n-\n error[E0425]: cannot find value `bad` in this scope\n   --> $DIR/keep-expr-tokens.rs:19:62\n    |\n LL |     (#[recollect_attr] #[recollect_attr] ((#[recollect_attr] bad)));\n    |                                                              ^^^ not found in this scope\n \n+error[E0425]: cannot find function `missing_fn` in this scope\n+  --> $DIR/keep-expr-tokens.rs:17:17\n+   |\n+LL |     for item in missing_fn() {}\n+   |                 ^^^^^^^^^^ not found in this scope\n+\n error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0425`."}, {"sha": "59b1fabfd7c4638354ad5c6342694098ed64789c", "filename": "src/test/ui/resolve/bad-env-capture.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fbad-env-capture.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fbad-env-capture.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fbad-env-capture.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -6,18 +6,18 @@ LL |     fn bar() { log(debug, x); }\n    |\n    = help: use the `|| { ... }` closure form instead\n \n-error[E0425]: cannot find function `log` in this scope\n-  --> $DIR/bad-env-capture.rs:4:16\n-   |\n-LL |     fn bar() { log(debug, x); }\n-   |                ^^^ not found in this scope\n-\n error[E0425]: cannot find value `debug` in this scope\n   --> $DIR/bad-env-capture.rs:4:20\n    |\n LL |     fn bar() { log(debug, x); }\n    |                    ^^^^^ not found in this scope\n \n+error[E0425]: cannot find function `log` in this scope\n+  --> $DIR/bad-env-capture.rs:4:16\n+   |\n+LL |     fn bar() { log(debug, x); }\n+   |                ^^^ not found in this scope\n+\n error: aborting due to 3 previous errors\n \n Some errors have detailed explanations: E0425, E0434."}, {"sha": "811c259de6bd6516fbdea8337c084daa416ff738", "filename": "src/test/ui/resolve/bad-env-capture2.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fbad-env-capture2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fbad-env-capture2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fbad-env-capture2.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -6,18 +6,18 @@ LL |     fn bar() { log(debug, x); }\n    |\n    = help: use the `|| { ... }` closure form instead\n \n-error[E0425]: cannot find function `log` in this scope\n-  --> $DIR/bad-env-capture2.rs:3:16\n-   |\n-LL |     fn bar() { log(debug, x); }\n-   |                ^^^ not found in this scope\n-\n error[E0425]: cannot find value `debug` in this scope\n   --> $DIR/bad-env-capture2.rs:3:20\n    |\n LL |     fn bar() { log(debug, x); }\n    |                    ^^^^^ not found in this scope\n \n+error[E0425]: cannot find function `log` in this scope\n+  --> $DIR/bad-env-capture2.rs:3:16\n+   |\n+LL |     fn bar() { log(debug, x); }\n+   |                ^^^ not found in this scope\n+\n error: aborting due to 3 previous errors\n \n Some errors have detailed explanations: E0425, E0434."}, {"sha": "eab37fde96e4ca2cc17ae38c539177c4cdbb4732", "filename": "src/test/ui/resolve/bad-env-capture3.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fbad-env-capture3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fbad-env-capture3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fbad-env-capture3.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -6,18 +6,18 @@ LL |         fn bar() { log(debug, x); }\n    |\n    = help: use the `|| { ... }` closure form instead\n \n-error[E0425]: cannot find function `log` in this scope\n-  --> $DIR/bad-env-capture3.rs:4:20\n-   |\n-LL |         fn bar() { log(debug, x); }\n-   |                    ^^^ not found in this scope\n-\n error[E0425]: cannot find value `debug` in this scope\n   --> $DIR/bad-env-capture3.rs:4:24\n    |\n LL |         fn bar() { log(debug, x); }\n    |                        ^^^^^ not found in this scope\n \n+error[E0425]: cannot find function `log` in this scope\n+  --> $DIR/bad-env-capture3.rs:4:20\n+   |\n+LL |         fn bar() { log(debug, x); }\n+   |                    ^^^ not found in this scope\n+\n error: aborting due to 3 previous errors\n \n Some errors have detailed explanations: E0425, E0434."}, {"sha": "8261e8e53b094e119cca9b67c7a7d6f95881e0d0", "filename": "src/test/ui/resolve/bad-expr-path.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fbad-expr-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fbad-expr-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fbad-expr-path.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -1,9 +1,3 @@\n-error[E0425]: cannot find function `log` in this scope\n-  --> $DIR/bad-expr-path.rs:4:5\n-   |\n-LL |     log(debug, m1::arguments);\n-   |     ^^^ not found in this scope\n-\n error[E0425]: cannot find value `debug` in this scope\n   --> $DIR/bad-expr-path.rs:4:9\n    |\n@@ -16,6 +10,12 @@ error[E0425]: cannot find value `arguments` in module `m1`\n LL |     log(debug, m1::arguments);\n    |                    ^^^^^^^^^ not found in `m1`\n \n+error[E0425]: cannot find function `log` in this scope\n+  --> $DIR/bad-expr-path.rs:4:5\n+   |\n+LL |     log(debug, m1::arguments);\n+   |     ^^^ not found in this scope\n+\n error[E0580]: `main` function has wrong type\n   --> $DIR/bad-expr-path.rs:3:1\n    |"}, {"sha": "6e11296d9fc0e8ebf872ea66e17a41ccb9426c79", "filename": "src/test/ui/resolve/bad-expr-path2.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fbad-expr-path2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fbad-expr-path2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fbad-expr-path2.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -1,9 +1,3 @@\n-error[E0425]: cannot find function `log` in this scope\n-  --> $DIR/bad-expr-path2.rs:6:5\n-   |\n-LL |     log(debug, m1::arguments);\n-   |     ^^^ not found in this scope\n-\n error[E0425]: cannot find value `debug` in this scope\n   --> $DIR/bad-expr-path2.rs:6:9\n    |\n@@ -16,6 +10,12 @@ error[E0423]: expected value, found module `m1::arguments`\n LL |     log(debug, m1::arguments);\n    |                ^^^^^^^^^^^^^ not a value\n \n+error[E0425]: cannot find function `log` in this scope\n+  --> $DIR/bad-expr-path2.rs:6:5\n+   |\n+LL |     log(debug, m1::arguments);\n+   |     ^^^ not found in this scope\n+\n error[E0580]: `main` function has wrong type\n   --> $DIR/bad-expr-path2.rs:5:1\n    |"}, {"sha": "c848014ad8f0fff930305b5a52f4aa6ad152e6a8", "filename": "src/test/ui/resolve/issue-14254.stderr", "status": "modified", "additions": 43, "deletions": 43, "changes": 86, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -1,21 +1,9 @@\n-error[E0425]: cannot find function `baz` in this scope\n-  --> $DIR/issue-14254.rs:19:9\n-   |\n-LL |         baz();\n-   |         ^^^ help: you might have meant to call the method: `self.baz`\n-\n error[E0425]: cannot find value `a` in this scope\n   --> $DIR/issue-14254.rs:21:9\n    |\n LL |         a;\n    |         ^ not found in this scope\n \n-error[E0425]: cannot find function `baz` in this scope\n-  --> $DIR/issue-14254.rs:28:9\n-   |\n-LL |         baz();\n-   |         ^^^ help: you might have meant to call the method: `self.baz`\n-\n error[E0425]: cannot find value `x` in this scope\n   --> $DIR/issue-14254.rs:30:9\n    |\n@@ -46,12 +34,6 @@ error[E0425]: cannot find value `b` in this scope\n LL |         b;\n    |         ^ not found in this scope\n \n-error[E0425]: cannot find function `baz` in this scope\n-  --> $DIR/issue-14254.rs:45:9\n-   |\n-LL |         baz();\n-   |         ^^^ help: you might have meant to call the method: `self.baz`\n-\n error[E0425]: cannot find value `x` in this scope\n   --> $DIR/issue-14254.rs:47:9\n    |\n@@ -82,65 +64,83 @@ error[E0425]: cannot find value `b` in this scope\n LL |         b;\n    |         ^ not found in this scope\n \n-error[E0425]: cannot find function `baz` in this scope\n-  --> $DIR/issue-14254.rs:62:9\n+error[E0425]: cannot find value `bah` in this scope\n+  --> $DIR/issue-14254.rs:64:9\n    |\n-LL |         baz();\n-   |         ^^^ help: you might have meant to call the method: `self.baz`\n+LL |         bah;\n+   |         ^^^ help: you might have meant to call the associated function: `Self::bah`\n \n error[E0425]: cannot find value `bah` in this scope\n-  --> $DIR/issue-14254.rs:64:9\n+  --> $DIR/issue-14254.rs:73:9\n    |\n LL |         bah;\n    |         ^^^ help: you might have meant to call the associated function: `Self::bah`\n \n-error[E0425]: cannot find function `baz` in this scope\n-  --> $DIR/issue-14254.rs:71:9\n+error[E0425]: cannot find value `bah` in this scope\n+  --> $DIR/issue-14254.rs:82:9\n    |\n-LL |         baz();\n-   |         ^^^ help: you might have meant to call the method: `self.baz`\n+LL |         bah;\n+   |         ^^^ help: you might have meant to call the associated function: `Self::bah`\n \n error[E0425]: cannot find value `bah` in this scope\n-  --> $DIR/issue-14254.rs:73:9\n+  --> $DIR/issue-14254.rs:91:9\n+   |\n+LL |         bah;\n+   |         ^^^ help: you might have meant to call the associated function: `Self::bah`\n+\n+error[E0425]: cannot find value `bah` in this scope\n+  --> $DIR/issue-14254.rs:100:9\n    |\n LL |         bah;\n    |         ^^^ help: you might have meant to call the associated function: `Self::bah`\n \n error[E0425]: cannot find function `baz` in this scope\n-  --> $DIR/issue-14254.rs:80:9\n+  --> $DIR/issue-14254.rs:19:9\n    |\n LL |         baz();\n    |         ^^^ help: you might have meant to call the method: `self.baz`\n \n-error[E0425]: cannot find value `bah` in this scope\n-  --> $DIR/issue-14254.rs:82:9\n+error[E0425]: cannot find function `baz` in this scope\n+  --> $DIR/issue-14254.rs:28:9\n    |\n-LL |         bah;\n-   |         ^^^ help: you might have meant to call the associated function: `Self::bah`\n+LL |         baz();\n+   |         ^^^ help: you might have meant to call the method: `self.baz`\n \n error[E0425]: cannot find function `baz` in this scope\n-  --> $DIR/issue-14254.rs:89:9\n+  --> $DIR/issue-14254.rs:45:9\n    |\n LL |         baz();\n    |         ^^^ help: you might have meant to call the method: `self.baz`\n \n-error[E0425]: cannot find value `bah` in this scope\n-  --> $DIR/issue-14254.rs:91:9\n+error[E0425]: cannot find function `baz` in this scope\n+  --> $DIR/issue-14254.rs:62:9\n    |\n-LL |         bah;\n-   |         ^^^ help: you might have meant to call the associated function: `Self::bah`\n+LL |         baz();\n+   |         ^^^ help: you might have meant to call the method: `self.baz`\n \n error[E0425]: cannot find function `baz` in this scope\n-  --> $DIR/issue-14254.rs:98:9\n+  --> $DIR/issue-14254.rs:71:9\n    |\n LL |         baz();\n    |         ^^^ help: you might have meant to call the method: `self.baz`\n \n-error[E0425]: cannot find value `bah` in this scope\n-  --> $DIR/issue-14254.rs:100:9\n+error[E0425]: cannot find function `baz` in this scope\n+  --> $DIR/issue-14254.rs:80:9\n    |\n-LL |         bah;\n-   |         ^^^ help: you might have meant to call the associated function: `Self::bah`\n+LL |         baz();\n+   |         ^^^ help: you might have meant to call the method: `self.baz`\n+\n+error[E0425]: cannot find function `baz` in this scope\n+  --> $DIR/issue-14254.rs:89:9\n+   |\n+LL |         baz();\n+   |         ^^^ help: you might have meant to call the method: `self.baz`\n+\n+error[E0425]: cannot find function `baz` in this scope\n+  --> $DIR/issue-14254.rs:98:9\n+   |\n+LL |         baz();\n+   |         ^^^ help: you might have meant to call the method: `self.baz`\n \n error: aborting due to 24 previous errors\n "}, {"sha": "e7c53ff44e6fe0ac3250894733f564fe57a430e6", "filename": "src/test/ui/resolve/issue-2356.stderr", "status": "modified", "additions": 45, "deletions": 45, "changes": 90, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -1,15 +1,3 @@\n-error[E0425]: cannot find function `shave` in this scope\n-  --> $DIR/issue-2356.rs:17:5\n-   |\n-LL |     shave();\n-   |     ^^^^^ not found in this scope\n-\n-error[E0425]: cannot find function `clone` in this scope\n-  --> $DIR/issue-2356.rs:24:5\n-   |\n-LL |     clone();\n-   |     ^^^^^ help: you might have meant to call the method: `self.clone`\n-\n error[E0425]: cannot find function `default` in this scope\n   --> $DIR/issue-2356.rs:31:5\n    |\n@@ -31,6 +19,51 @@ error[E0425]: cannot find value `whiskers` in this scope\n LL |     whiskers -= other;\n    |     ^^^^^^^^ a field by this name exists in `Self`\n \n+error[E0424]: expected value, found module `self`\n+  --> $DIR/issue-2356.rs:65:8\n+   |\n+LL |   fn meow() {\n+   |      ---- this function doesn't have a `self` parameter\n+LL |     if self.whiskers > 3 {\n+   |        ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n+   |\n+help: add a `self` receiver parameter to make the associated `fn` a method\n+   |\n+LL |   fn meow(&self) {\n+   |           +++++\n+\n+error[E0425]: cannot find value `whiskers` in this scope\n+  --> $DIR/issue-2356.rs:79:5\n+   |\n+LL |     whiskers = 0;\n+   |     ^^^^^^^^ help: you might have meant to use the available field: `self.whiskers`\n+\n+error[E0425]: cannot find value `whiskers` in this scope\n+  --> $DIR/issue-2356.rs:84:5\n+   |\n+LL |     whiskers = 4;\n+   |     ^^^^^^^^ a field by this name exists in `Self`\n+\n+error[E0424]: expected value, found module `self`\n+  --> $DIR/issue-2356.rs:92:5\n+   |\n+LL | fn main() {\n+   |    ---- this function can't have a `self` parameter\n+LL |     self += 1;\n+   |     ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n+\n+error[E0425]: cannot find function `shave` in this scope\n+  --> $DIR/issue-2356.rs:17:5\n+   |\n+LL |     shave();\n+   |     ^^^^^ not found in this scope\n+\n+error[E0425]: cannot find function `clone` in this scope\n+  --> $DIR/issue-2356.rs:24:5\n+   |\n+LL |     clone();\n+   |     ^^^^^ help: you might have meant to call the method: `self.clone`\n+\n error[E0425]: cannot find function `shave` in this scope\n   --> $DIR/issue-2356.rs:41:5\n    |\n@@ -72,19 +105,6 @@ error[E0425]: cannot find function `purr` in this scope\n LL |         purr();\n    |         ^^^^ not found in this scope\n \n-error[E0424]: expected value, found module `self`\n-  --> $DIR/issue-2356.rs:65:8\n-   |\n-LL |   fn meow() {\n-   |      ---- this function doesn't have a `self` parameter\n-LL |     if self.whiskers > 3 {\n-   |        ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n-   |\n-help: add a `self` receiver parameter to make the associated `fn` a method\n-   |\n-LL |   fn meow(&self) {\n-   |           +++++\n-\n error[E0425]: cannot find function `grow_older` in this scope\n   --> $DIR/issue-2356.rs:72:5\n    |\n@@ -102,32 +122,12 @@ error[E0425]: cannot find function `shave` in this scope\n LL |     shave();\n    |     ^^^^^ not found in this scope\n \n-error[E0425]: cannot find value `whiskers` in this scope\n-  --> $DIR/issue-2356.rs:79:5\n-   |\n-LL |     whiskers = 0;\n-   |     ^^^^^^^^ help: you might have meant to use the available field: `self.whiskers`\n-\n-error[E0425]: cannot find value `whiskers` in this scope\n-  --> $DIR/issue-2356.rs:84:5\n-   |\n-LL |     whiskers = 4;\n-   |     ^^^^^^^^ a field by this name exists in `Self`\n-\n error[E0425]: cannot find function `purr_louder` in this scope\n   --> $DIR/issue-2356.rs:86:5\n    |\n LL |     purr_louder();\n    |     ^^^^^^^^^^^ not found in this scope\n \n-error[E0424]: expected value, found module `self`\n-  --> $DIR/issue-2356.rs:92:5\n-   |\n-LL | fn main() {\n-   |    ---- this function can't have a `self` parameter\n-LL |     self += 1;\n-   |     ^^^^ `self` value is a keyword only available in methods with a `self` parameter\n-\n error: aborting due to 17 previous errors\n \n Some errors have detailed explanations: E0424, E0425."}, {"sha": "0ee9fd391fe12e82d92987e5882299669a9db432", "filename": "src/test/ui/resolve/issue-42944.stderr", "status": "modified", "additions": 12, "deletions": 12, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fissue-42944.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fissue-42944.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-42944.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -1,15 +1,3 @@\n-error[E0423]: cannot initialize a tuple struct which contains private fields\n-  --> $DIR/issue-42944.rs:9:9\n-   |\n-LL |         Bx(());\n-   |         ^^\n-   |\n-note: constructor is not visible here due to private fields\n-  --> $DIR/issue-42944.rs:2:19\n-   |\n-LL |     pub struct Bx(());\n-   |                   ^^ private field\n-\n error[E0425]: cannot find function, tuple struct or tuple variant `Bx` in this scope\n   --> $DIR/issue-42944.rs:16:9\n    |\n@@ -22,6 +10,18 @@ note: tuple struct `foo::Bx` exists but is inaccessible\n LL |     pub struct Bx(());\n    |     ^^^^^^^^^^^^^^^^^^ not accessible\n \n+error[E0423]: cannot initialize a tuple struct which contains private fields\n+  --> $DIR/issue-42944.rs:9:9\n+   |\n+LL |         Bx(());\n+   |         ^^\n+   |\n+note: constructor is not visible here due to private fields\n+  --> $DIR/issue-42944.rs:2:19\n+   |\n+LL |     pub struct Bx(());\n+   |                   ^^ private field\n+\n error: aborting due to 2 previous errors\n \n Some errors have detailed explanations: E0423, E0425."}, {"sha": "d31c5e47775c9cfadc70b25554fc621aa02a6eb5", "filename": "src/test/ui/resolve/issue-73427.stderr", "status": "modified", "additions": 20, "deletions": 20, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fissue-73427.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fissue-73427.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-73427.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -124,13 +124,13 @@ LL | use std::f32::consts::E;\n LL | use std::f64::consts::E;\n    |\n \n-error[E0423]: expected function, tuple struct or tuple variant, found enum `A`\n-  --> $DIR/issue-73427.rs:46:13\n+error[E0532]: expected tuple struct or tuple variant, found enum `A`\n+  --> $DIR/issue-73427.rs:48:12\n    |\n-LL |     let x = A(3);\n-   |             ^\n+LL |     if let A(3) = x { }\n+   |            ^\n    |\n-   = help: you might have meant to construct one of the enum's non-tuple variants\n+   = help: you might have meant to match against one of the enum's non-tuple variants\n note: the enum is defined here\n   --> $DIR/issue-73427.rs:1:1\n    |\n@@ -142,20 +142,20 @@ LL | |     Tuple(),\n LL | |     Unit,\n LL | | }\n    | |_^\n-help: try to construct one of the enum's variants\n+help: try to match against one of the enum's variants\n    |\n-LL |     let x = A::Tuple(3);\n-   |             ~~~~~~~~\n-LL |     let x = A::TupleWithFields(3);\n-   |             ~~~~~~~~~~~~~~~~~~\n+LL |     if let A::Tuple(3) = x { }\n+   |            ~~~~~~~~\n+LL |     if let A::TupleWithFields(3) = x { }\n+   |            ~~~~~~~~~~~~~~~~~~\n \n-error[E0532]: expected tuple struct or tuple variant, found enum `A`\n-  --> $DIR/issue-73427.rs:48:12\n+error[E0423]: expected function, tuple struct or tuple variant, found enum `A`\n+  --> $DIR/issue-73427.rs:46:13\n    |\n-LL |     if let A(3) = x { }\n-   |            ^\n+LL |     let x = A(3);\n+   |             ^\n    |\n-   = help: you might have meant to match against one of the enum's non-tuple variants\n+   = help: you might have meant to construct one of the enum's non-tuple variants\n note: the enum is defined here\n   --> $DIR/issue-73427.rs:1:1\n    |\n@@ -167,12 +167,12 @@ LL | |     Tuple(),\n LL | |     Unit,\n LL | | }\n    | |_^\n-help: try to match against one of the enum's variants\n+help: try to construct one of the enum's variants\n    |\n-LL |     if let A::Tuple(3) = x { }\n-   |            ~~~~~~~~\n-LL |     if let A::TupleWithFields(3) = x { }\n-   |            ~~~~~~~~~~~~~~~~~~\n+LL |     let x = A::Tuple(3);\n+   |             ~~~~~~~~\n+LL |     let x = A::TupleWithFields(3);\n+   |             ~~~~~~~~~~~~~~~~~~\n \n error: aborting due to 7 previous errors\n "}, {"sha": "9a2d61ea4054b52f83eb6075e074d3aea85fd09c", "filename": "src/test/ui/resolve/levenshtein.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -39,15 +39,6 @@ LL | const MAX_ITEM: usize = 10;\n LL |     let v = [0u32; MAXITEM]; // Misspelled constant name.\n    |                    ^^^^^^^ help: a constant with a similar name exists: `MAX_ITEM`\n \n-error[E0425]: cannot find function `foobar` in this scope\n-  --> $DIR/levenshtein.rs:26:5\n-   |\n-LL | fn foo_bar() {}\n-   | ------------ similarly named function `foo_bar` defined here\n-...\n-LL |     foobar(); // Misspelled function name.\n-   |     ^^^^^^ help: a function with a similar name exists: `foo_bar`\n-\n error[E0412]: cannot find type `first` in module `m`\n   --> $DIR/levenshtein.rs:28:15\n    |\n@@ -66,6 +57,15 @@ LL |     pub struct Second;\n LL |     let b: m::first = m::second; // Misspelled item in module.\n    |                          ^^^^^^ help: a unit struct with a similar name exists (notice the capitalization): `Second`\n \n+error[E0425]: cannot find function `foobar` in this scope\n+  --> $DIR/levenshtein.rs:26:5\n+   |\n+LL | fn foo_bar() {}\n+   | ------------ similarly named function `foo_bar` defined here\n+...\n+LL |     foobar(); // Misspelled function name.\n+   |     ^^^^^^ help: a function with a similar name exists: `foo_bar`\n+\n error: aborting due to 8 previous errors\n \n Some errors have detailed explanations: E0412, E0425."}, {"sha": "1e7ab48ef90c2ef31a2719333abdb66f0b4d8704", "filename": "src/test/ui/resolve/resolve-hint-macro.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -14,17 +14,6 @@ LL |     assert_eq { 1, 1 };\n    |     |\n    |     while parsing this struct\n \n-error[E0423]: expected function, found macro `assert_eq`\n-  --> $DIR/resolve-hint-macro.rs:3:5\n-   |\n-LL |     assert_eq(1, 1);\n-   |     ^^^^^^^^^ not a function\n-   |\n-help: use `!` to invoke the macro\n-   |\n-LL |     assert_eq!(1, 1);\n-   |              +\n-\n error[E0574]: expected struct, variant or union type, found macro `assert_eq`\n   --> $DIR/resolve-hint-macro.rs:5:5\n    |\n@@ -47,6 +36,17 @@ help: use `!` to invoke the macro\n LL |     assert![true];\n    |           +\n \n+error[E0423]: expected function, found macro `assert_eq`\n+  --> $DIR/resolve-hint-macro.rs:3:5\n+   |\n+LL |     assert_eq(1, 1);\n+   |     ^^^^^^^^^ not a function\n+   |\n+help: use `!` to invoke the macro\n+   |\n+LL |     assert_eq!(1, 1);\n+   |              +\n+\n error: aborting due to 5 previous errors\n \n Some errors have detailed explanations: E0423, E0574."}, {"sha": "be11a7ebeca00a1ac39c9df189d872bf779747f4", "filename": "src/test/ui/resolve/resolve-speculative-adjustment.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fresolve-speculative-adjustment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Fresolve-speculative-adjustment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-speculative-adjustment.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -4,12 +4,6 @@ error[E0425]: cannot find value `field` in this scope\n LL |             field;\n    |             ^^^^^ not found in this scope\n \n-error[E0425]: cannot find function `method` in this scope\n-  --> $DIR/resolve-speculative-adjustment.rs:19:13\n-   |\n-LL |             method();\n-   |             ^^^^^^ not found in this scope\n-\n error[E0425]: cannot find value `field` in this scope\n   --> $DIR/resolve-speculative-adjustment.rs:23:9\n    |\n@@ -22,6 +16,12 @@ error[E0425]: cannot find function `method` in this scope\n LL |         method();\n    |         ^^^^^^ help: you might have meant to call the method: `self.method`\n \n+error[E0425]: cannot find function `method` in this scope\n+  --> $DIR/resolve-speculative-adjustment.rs:19:13\n+   |\n+LL |             method();\n+   |             ^^^^^^ not found in this scope\n+\n error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0425`."}, {"sha": "a739ea43eed477ae1a530b4908343f9c8861de88", "filename": "src/test/ui/resolve/tuple-struct-alias.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -1,22 +1,22 @@\n-error[E0423]: expected function, tuple struct or tuple variant, found type alias `A`\n-  --> $DIR/tuple-struct-alias.rs:5:13\n+error[E0532]: expected tuple struct or tuple variant, found type alias `A`\n+  --> $DIR/tuple-struct-alias.rs:7:9\n    |\n LL | struct S(u8, u16);\n    | ------------------ similarly named tuple struct `S` defined here\n ...\n-LL |     let s = A(0, 1);\n-   |             ^ help: a tuple struct with a similar name exists: `S`\n+LL |         A(..) => {}\n+   |         ^ help: a tuple struct with a similar name exists: `S`\n    |\n    = note: can't use a type alias as a constructor\n \n-error[E0532]: expected tuple struct or tuple variant, found type alias `A`\n-  --> $DIR/tuple-struct-alias.rs:7:9\n+error[E0423]: expected function, tuple struct or tuple variant, found type alias `A`\n+  --> $DIR/tuple-struct-alias.rs:5:13\n    |\n LL | struct S(u8, u16);\n    | ------------------ similarly named tuple struct `S` defined here\n ...\n-LL |         A(..) => {}\n-   |         ^ help: a tuple struct with a similar name exists: `S`\n+LL |     let s = A(0, 1);\n+   |             ^ help: a tuple struct with a similar name exists: `S`\n    |\n    = note: can't use a type alias as a constructor\n "}, {"sha": "2764e1f813287c72c9c55835dbdd2407e2751e41", "filename": "src/test/ui/resolve/typo-suggestion-for-variable-with-name-similar-to-struct-field.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Ftypo-suggestion-for-variable-with-name-similar-to-struct-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fresolve%2Ftypo-suggestion-for-variable-with-name-similar-to-struct-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftypo-suggestion-for-variable-with-name-similar-to-struct-field.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -31,24 +31,6 @@ help: a local variable with a similar name exists\n LL |         println!(\"{cofig}\");\n    |                    ~~~~~\n \n-error[E0425]: cannot find function `baz` in this scope\n-  --> $DIR/typo-suggestion-for-variable-with-name-similar-to-struct-field.rs:31:9\n-   |\n-LL |         baz();\n-   |         ^^^\n-...\n-LL | fn ba() {}\n-   | ------- similarly named function `ba` defined here\n-   |\n-help: you might have meant to call the method\n-   |\n-LL |         self.baz();\n-   |         ~~~~~~~~\n-help: a function with a similar name exists\n-   |\n-LL |         ba();\n-   |         ~~\n-\n error[E0425]: cannot find value `bah` in this scope\n   --> $DIR/typo-suggestion-for-variable-with-name-similar-to-struct-field.rs:33:9\n    |\n@@ -103,6 +85,24 @@ help: a type alias with a similar name exists\n LL |         let foo: Bar = \"\".to_string();\n    |                  ~~~\n \n+error[E0425]: cannot find function `baz` in this scope\n+  --> $DIR/typo-suggestion-for-variable-with-name-similar-to-struct-field.rs:31:9\n+   |\n+LL |         baz();\n+   |         ^^^\n+...\n+LL | fn ba() {}\n+   | ------- similarly named function `ba` defined here\n+   |\n+help: you might have meant to call the method\n+   |\n+LL |         self.baz();\n+   |         ~~~~~~~~\n+help: a function with a similar name exists\n+   |\n+LL |         ba();\n+   |         ~~\n+\n error: aborting due to 7 previous errors\n \n Some errors have detailed explanations: E0412, E0425."}, {"sha": "2cb9ba0d1d14b2802f6b14ef2c5af59f6805c640", "filename": "src/test/ui/rfc-2008-non-exhaustive/struct.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-2008-non-exhaustive%2Fstruct.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -1,9 +1,3 @@\n-error[E0423]: cannot initialize a tuple struct which contains private fields\n-  --> $DIR/struct.rs:20:14\n-   |\n-LL |     let ts = TupleStruct(640, 480);\n-   |              ^^^^^^^^^^^\n-\n error[E0423]: expected value, found struct `UnitStruct`\n   --> $DIR/struct.rs:29:14\n    |\n@@ -68,6 +62,12 @@ help: add `..` at the end of the field list to ignore all other fields\n LL |     let NormalStruct { first_field, second_field , .. } = ns;\n    |                                                  ~~~~~~\n \n+error[E0423]: cannot initialize a tuple struct which contains private fields\n+  --> $DIR/struct.rs:20:14\n+   |\n+LL |     let ts = TupleStruct(640, 480);\n+   |              ^^^^^^^^^^^\n+\n error[E0638]: `..` required with struct marked as non-exhaustive\n   --> $DIR/struct.rs:26:9\n    |"}, {"sha": "386385165f645dcb147da19503f30f51ba541234", "filename": "src/test/ui/span/drop-location-span-error-rust-2021-incompatible-closure-captures-93117.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fspan%2Fdrop-location-span-error-rust-2021-incompatible-closure-captures-93117.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fspan%2Fdrop-location-span-error-rust-2021-incompatible-closure-captures-93117.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdrop-location-span-error-rust-2021-incompatible-closure-captures-93117.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -25,12 +25,6 @@ LL | trait C{async fn new(val: T) {}\n    = help: pass `--edition 2021` to `rustc`\n    = note: for more on editions, read https://doc.rust-lang.org/edition-guide\n \n-error[E0423]: expected function, found module `crate`\n-  --> $DIR/drop-location-span-error-rust-2021-incompatible-closure-captures-93117.rs:9:5\n-   |\n-LL |     crate(move || {} ).await\n-   |     ^^^^^ not a function\n-\n error[E0412]: cannot find type `T` in this scope\n   --> $DIR/drop-location-span-error-rust-2021-incompatible-closure-captures-93117.rs:13:27\n    |\n@@ -53,6 +47,12 @@ LL | trait C{async fn new(val: T) {}\n    = note: see issue #91611 <https://github.com/rust-lang/rust/issues/91611> for more information\n    = help: add `#![feature(async_fn_in_trait)]` to the crate attributes to enable\n \n+error[E0423]: expected function, found module `crate`\n+  --> $DIR/drop-location-span-error-rust-2021-incompatible-closure-captures-93117.rs:9:5\n+   |\n+LL |     crate(move || {} ).await\n+   |     ^^^^^ not a function\n+\n warning: changes to closure capture in Rust 2021 will affect drop order\n   --> $DIR/drop-location-span-error-rust-2021-incompatible-closure-captures-93117.rs:6:57\n    |"}, {"sha": "88920b852905be955928e756c18aaf04cbaf21e6", "filename": "src/test/ui/suggestions/assoc_fn_without_self.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fsuggestions%2Fassoc_fn_without_self.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/66c8c5ad1df9575ec02fe88b525405ba965c8c40/src%2Ftest%2Fui%2Fsuggestions%2Fassoc_fn_without_self.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fassoc_fn_without_self.stderr?ref=66c8c5ad1df9575ec02fe88b525405ba965c8c40", "patch": "@@ -1,9 +1,3 @@\n-error[E0425]: cannot find function `foo` in this scope\n-  --> $DIR/assoc_fn_without_self.rs:14:13\n-   |\n-LL |             foo();\n-   |             ^^^ not found in this scope\n-\n error[E0425]: cannot find function `foo` in this scope\n   --> $DIR/assoc_fn_without_self.rs:16:9\n    |\n@@ -32,6 +26,12 @@ help: consider using the associated function\n LL |         Self::baz(2, 3);\n    |         ~~~~~~~~~\n \n+error[E0425]: cannot find function `foo` in this scope\n+  --> $DIR/assoc_fn_without_self.rs:14:13\n+   |\n+LL |             foo();\n+   |             ^^^ not found in this scope\n+\n error: aborting due to 4 previous errors\n \n For more information about this error, try `rustc --explain E0425`."}]}