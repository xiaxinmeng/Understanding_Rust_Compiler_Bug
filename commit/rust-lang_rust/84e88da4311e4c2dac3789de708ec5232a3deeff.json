{"sha": "84e88da4311e4c2dac3789de708ec5232a3deeff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg0ZTg4ZGE0MzExZTRjMmRhYzM3ODlkZTcwOGVjNTIzMmEzZGVlZmY=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-15T16:55:46Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2019-02-16T06:11:20Z"}, "message": "Rollup merge of #57981 - Zoxc:fix-57979, r=nikomatsakis\n\nFix #57730\n\ncc https://github.com/rust-lang/rust/pull/57730\n\nr? @cramertj", "tree": {"sha": "e04dbb0e1a7fc03f086d0e9349ccc1073c64018b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e04dbb0e1a7fc03f086d0e9349ccc1073c64018b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/84e88da4311e4c2dac3789de708ec5232a3deeff", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlxnqYkACgkQ/vbIBR0O\nATxeTQ/8DWjKfL+zdJGVMrDq9YQ/DehvKITCdCRymEFdive3a8DowLzSLb49SK9B\nlFEQnKwITuifyT89Dm6k5M2xF0EYLfxKGweBt3e9pwiglKBvMxrtHa9jfgp2Mg7h\nLtRjhYFbaeUVscY1c0ad3OBqAkNZAxXW4mO4bA+IW+m+BmOSESTJCULBQITsvcQG\nrBv5rvaRnRa4OTE434W//nnPAKcm2jB3La8BjCJRSuOEqwDHLvMsU+hreV4UZAe3\nzyV5dDbcuTiYv+arU3QcVRNw/ImNciNNum70quXc1QA/Ia3b5vG5ZIzKsGD5f9HN\nETuDZs1s5Aj3CscuATaxheGTzbXArbNZf0myKTlMjljk8gsMAowPagQPBsdKYHwz\npv8t08JC6MuWhg1Z6OmeBKWjVcYl0QGncPgRRCPz2cu4nDuJRUqcfkHk9nwLSMMW\nHG3G419nMZA5wNpL1NsN3RSEmlYO9z9WeMoUHny8KkEU1+mqJh1xu8XEasaJeQVw\nXSiPKua5jNr/pHn2A2jWvUCEyLaCiFqD1AqR43ojDBSjngW3/M5tsPGuPTk4SlKa\ntXK41KOddvImiKxVT71twMyRdsrI7IiJaTvw0LQdma204iCPSpQTUlzshehRdGZP\nU+aak/wty/oVdBXOH96JoziIkzGuWpji51+Y10V+Apqp5Y4RWRw=\n=jRoy\n-----END PGP SIGNATURE-----", "payload": "tree e04dbb0e1a7fc03f086d0e9349ccc1073c64018b\nparent f058741a679062202697144daebd05e1b0d6d747\nparent cce2c89e3bb7cb91610ea6891290491bf763bee3\nauthor kennytm <kennytm@gmail.com> 1550249746 +0800\ncommitter kennytm <kennytm@gmail.com> 1550297480 +0800\n\nRollup merge of #57981 - Zoxc:fix-57979, r=nikomatsakis\n\nFix #57730\n\ncc https://github.com/rust-lang/rust/pull/57730\n\nr? @cramertj\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/84e88da4311e4c2dac3789de708ec5232a3deeff", "html_url": "https://github.com/rust-lang/rust/commit/84e88da4311e4c2dac3789de708ec5232a3deeff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/84e88da4311e4c2dac3789de708ec5232a3deeff/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f058741a679062202697144daebd05e1b0d6d747", "url": "https://api.github.com/repos/rust-lang/rust/commits/f058741a679062202697144daebd05e1b0d6d747", "html_url": "https://github.com/rust-lang/rust/commit/f058741a679062202697144daebd05e1b0d6d747"}, {"sha": "cce2c89e3bb7cb91610ea6891290491bf763bee3", "url": "https://api.github.com/repos/rust-lang/rust/commits/cce2c89e3bb7cb91610ea6891290491bf763bee3", "html_url": "https://github.com/rust-lang/rust/commit/cce2c89e3bb7cb91610ea6891290491bf763bee3"}], "stats": {"total": 61, "additions": 60, "deletions": 1}, "files": [{"sha": "606ae2741283240a973bfb136ac36fc36b8a3114", "filename": "src/librustc_passes/ast_validation.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/84e88da4311e4c2dac3789de708ec5232a3deeff/src%2Flibrustc_passes%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84e88da4311e4c2dac3789de708ec5232a3deeff/src%2Flibrustc_passes%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fast_validation.rs?ref=84e88da4311e4c2dac3789de708ec5232a3deeff", "patch": "@@ -616,7 +616,7 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                 if let Some(ref type_) = data.output {\n                     // `-> Foo` syntax is essentially an associated type binding,\n                     // so it is also allowed to contain nested `impl Trait`.\n-                    self.with_impl_trait(None, |this| visit::walk_ty(this, type_));\n+                    self.with_impl_trait(None, |this| this.visit_ty(type_));\n                 }\n             }\n         }"}, {"sha": "abd46b60ab194498d83f429979c427695166735c", "filename": "src/test/ui/issues/issue-57979.rs", "status": "added", "additions": 42, "deletions": 0, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/84e88da4311e4c2dac3789de708ec5232a3deeff/src%2Ftest%2Fui%2Fissues%2Fissue-57979.rs", "raw_url": "https://github.com/rust-lang/rust/raw/84e88da4311e4c2dac3789de708ec5232a3deeff/src%2Ftest%2Fui%2Fissues%2Fissue-57979.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57979.rs?ref=84e88da4311e4c2dac3789de708ec5232a3deeff", "patch": "@@ -0,0 +1,42 @@\n+// Regression test for #57979. This situation is meant to be an error.\n+// As noted in the issue thread, we decided to forbid nested impl\n+// trait of this kind:\n+//\n+// ```rust\n+// fn foo() -> impl Foo<impl Bar> { .. }\n+// ```\n+//\n+// Basically there are two hidden variables here, let's call them `X`\n+// and `Y`, and we must prove that:\n+//\n+// ```\n+// X: Foo<Y>\n+// Y: Bar\n+// ```\n+//\n+// However, the user is only giving us the return type `X`. It's true\n+// that in some cases, we can infer `Y` from `X`, because `X` only\n+// implements `Foo` for one type (and indeed the compiler does\n+// inference of this kind), but I do recall that we intended to forbid\n+// this -- in part because such inference is fragile, and there is not\n+// necessarily a way for the user to be more explicit should the\n+// inference fail (so you could get stuck with no way to port your\n+// code forward if, for example, more impls are added to an existing\n+// type).\n+//\n+// The same seems to apply in this situation. Here there are three impl traits, so we have\n+//\n+// ```\n+// X: IntoIterator<Item = Y>\n+// Y: Borrow<Data<Z>>\n+// Z: AsRef<[u8]>\n+// ```\n+\n+use std::borrow::Borrow;\n+\n+pub struct Data<TBody>(TBody);\n+\n+pub fn collect(_: impl IntoIterator<Item = impl Borrow<Data<impl AsRef<[u8]>>>>) {\n+    //~^ ERROR\n+    unimplemented!()\n+}"}, {"sha": "488f30ab7c5a7d6f6eda064f831e80b6ae4ab614", "filename": "src/test/ui/issues/issue-57979.stderr", "status": "added", "additions": 17, "deletions": 0, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/84e88da4311e4c2dac3789de708ec5232a3deeff/src%2Ftest%2Fui%2Fissues%2Fissue-57979.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/84e88da4311e4c2dac3789de708ec5232a3deeff/src%2Ftest%2Fui%2Fissues%2Fissue-57979.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-57979.stderr?ref=84e88da4311e4c2dac3789de708ec5232a3deeff", "patch": "@@ -0,0 +1,17 @@\n+error[E0666]: nested `impl Trait` is not allowed\n+  --> $DIR/issue-57979.rs:39:61\n+   |\n+LL | pub fn collect(_: impl IntoIterator<Item = impl Borrow<Data<impl AsRef<[u8]>>>>) {\n+   |                                            -----------------^^^^^^^^^^^^^^^^--\n+   |                                            |                |\n+   |                                            |                nested `impl Trait` here\n+   |                                            outer `impl Trait`\n+\n+error[E0601]: `main` function not found in crate `issue_57979`\n+   |\n+   = note: consider adding a `main` function to `$DIR/issue-57979.rs`\n+\n+error: aborting due to 2 previous errors\n+\n+Some errors occurred: E0601, E0666.\n+For more information about an error, try `rustc --explain E0601`."}]}