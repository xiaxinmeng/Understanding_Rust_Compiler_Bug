{"sha": "af2d01e36ba2773134e102fcb0828898575c93fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFmMmQwMWUzNmJhMjc3MzEzNGUxMDJmY2IwODI4ODk4NTc1YzkzZmQ=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-06-28T18:40:31Z"}, "committer": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2012-06-28T18:40:31Z"}, "message": "Fix sys::refcount and remove dbg::refcount", "tree": {"sha": "6b575ecfc459f21268b97a43ed5ff9eaff5f51e7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6b575ecfc459f21268b97a43ed5ff9eaff5f51e7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/af2d01e36ba2773134e102fcb0828898575c93fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/af2d01e36ba2773134e102fcb0828898575c93fd", "html_url": "https://github.com/rust-lang/rust/commit/af2d01e36ba2773134e102fcb0828898575c93fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/af2d01e36ba2773134e102fcb0828898575c93fd/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad8280712f266a3b58a02bea594191729e00ac16", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad8280712f266a3b58a02bea594191729e00ac16", "html_url": "https://github.com/rust-lang/rust/commit/ad8280712f266a3b58a02bea594191729e00ac16"}], "stats": {"total": 43, "additions": 12, "deletions": 31}, "files": [{"sha": "c90b48a9342ad6b196df20e1f3fa495927ad5088", "filename": "src/libcore/sys.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/af2d01e36ba2773134e102fcb0828898575c93fd/src%2Flibcore%2Fsys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af2d01e36ba2773134e102fcb0828898575c93fd/src%2Flibcore%2Fsys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsys.rs?ref=af2d01e36ba2773134e102fcb0828898575c93fd", "patch": "@@ -20,7 +20,6 @@ type rust_cond_lock = *libc::c_void;\n \n #[abi = \"cdecl\"]\n native mod rustrt {\n-    pure fn refcount(t: *()) -> libc::intptr_t;\n     fn unsupervise();\n     pure fn shape_log_str(t: *sys::type_desc, data: *()) -> str;\n \n@@ -71,10 +70,11 @@ pure fn pref_align_of<T>() -> uint {\n     unchecked { rusti::pref_align_of::<T>() }\n }\n \n-#[doc = \"Returns the refcount of a shared box\"]\n-pure fn refcount<T>(t: @T) -> uint {\n+#[doc = \"Returns the refcount of a shared box (as just before calling this)\"]\n+pure fn refcount<T>(+t: @T) -> uint {\n     unsafe {\n-        ret rustrt::refcount(unsafe::reinterpret_cast(t)) as uint;\n+        let ref_ptr: *uint = unsafe::reinterpret_cast(t);\n+        *ref_ptr - 1\n     }\n }\n "}, {"sha": "39746eae55e0d8a7ee16529baeeba22baed383b2", "filename": "src/libstd/dbg.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/af2d01e36ba2773134e102fcb0828898575c93fd/src%2Flibstd%2Fdbg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af2d01e36ba2773134e102fcb0828898575c93fd/src%2Flibstd%2Fdbg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fdbg.rs?ref=af2d01e36ba2773134e102fcb0828898575c93fd", "patch": "@@ -8,7 +8,6 @@ export debug_box;\n export debug_tag;\n export debug_fn;\n export ptr_cast;\n-export refcount;\n export breakpoint;\n \n #[abi = \"cdecl\"]\n@@ -48,11 +47,6 @@ unsafe fn ptr_cast<T, U>(x: @T) -> @U {\n                               reinterpret_cast(x)))\n }\n \n-fn refcount<T>(a: @T) -> uint unsafe {\n-    let p: *uint = unsafe::reinterpret_cast(a);\n-    ret *p;\n-}\n-\n #[doc = \"Triggers a debugger breakpoint\"]\n fn breakpoint() {\n     rustrt::rust_dbg_breakpoint();"}, {"sha": "04d11e020ea8453a43ec9ab540cf7c10a93f7868", "filename": "src/rt/rust_builtin.cpp", "status": "modified", "additions": 0, "deletions": 7, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/af2d01e36ba2773134e102fcb0828898575c93fd/src%2Frt%2Frust_builtin.cpp", "raw_url": "https://github.com/rust-lang/rust/raw/af2d01e36ba2773134e102fcb0828898575c93fd/src%2Frt%2Frust_builtin.cpp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frust_builtin.cpp?ref=af2d01e36ba2773134e102fcb0828898575c93fd", "patch": "@@ -127,13 +127,6 @@ rust_env_pairs() {\n }\n #endif\n \n-extern \"C\" CDECL intptr_t\n-refcount(intptr_t *v) {\n-    // Passed-in value has refcount 1 too high\n-    // because it was ref'ed while making the call.\n-    return (*v) - 1;\n-}\n-\n extern \"C\" CDECL void\n unsupervise() {\n     rust_task *task = rust_get_current_task();"}, {"sha": "0be74d20e24d3c83f825c043b084778f08b9b9ae", "filename": "src/rt/rustrt.def.in", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/af2d01e36ba2773134e102fcb0828898575c93fd/src%2Frt%2Frustrt.def.in", "raw_url": "https://github.com/rust-lang/rust/raw/af2d01e36ba2773134e102fcb0828898575c93fd/src%2Frt%2Frustrt.def.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frt%2Frustrt.def.in?ref=af2d01e36ba2773134e102fcb0828898575c93fd", "patch": "@@ -29,7 +29,6 @@ rand_new\n rand_new_seeded\n rand_next\n rand_seed\n-refcount\n rust_get_sched_id\n rust_new_sched\n rust_new_task_in_sched"}, {"sha": "caa2223671cdce25646051b54c0a9a47cfbe9bad", "filename": "src/test/run-pass/alt-pattern-drop.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/af2d01e36ba2773134e102fcb0828898575c93fd/src%2Ftest%2Frun-pass%2Falt-pattern-drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af2d01e36ba2773134e102fcb0828898575c93fd/src%2Ftest%2Frun-pass%2Falt-pattern-drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Falt-pattern-drop.rs?ref=af2d01e36ba2773134e102fcb0828898575c93fd", "patch": "@@ -1,14 +1,12 @@\n \n \n // -*- rust -*-\n-use std;\n-\n-import std::dbg;\n+import core::sys;\n \n enum t { make_t(@int), clam, }\n \n fn foo(s: @int) {\n-    let count = dbg::refcount(s);\n+    let count = sys::refcount(s);\n     let x: t = make_t(s); // ref up\n \n     alt x {\n@@ -18,17 +16,17 @@ fn foo(s: @int) {\n       }\n       _ { #debug(\"?\"); fail; }\n     }\n-    log(debug, dbg::refcount(s));\n-    assert (dbg::refcount(s) == count + 1u);\n+    log(debug, sys::refcount(s));\n+    assert (sys::refcount(s) == count + 1u);\n }\n \n fn main() {\n     let s: @int = @0; // ref up\n \n-    let count = dbg::refcount(s);\n+    let count = sys::refcount(s);\n \n     foo(s); // ref up then down\n \n-    log(debug, dbg::refcount(s));\n-    assert (dbg::refcount(s) == count);\n+    log(debug, sys::refcount(s));\n+    assert (sys::refcount(s) == count);\n }"}, {"sha": "3b0195511efe569118ed56fa1e7228248d87c9a6", "filename": "src/test/run-pass/morestack6.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/af2d01e36ba2773134e102fcb0828898575c93fd/src%2Ftest%2Frun-pass%2Fmorestack6.rs", "raw_url": "https://github.com/rust-lang/rust/raw/af2d01e36ba2773134e102fcb0828898575c93fd/src%2Ftest%2Frun-pass%2Fmorestack6.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmorestack6.rs?ref=af2d01e36ba2773134e102fcb0828898575c93fd", "patch": "@@ -11,7 +11,6 @@ native mod rustrt {\n     fn unsupervise();\n     fn last_os_error() -> str;\n     fn rust_getcwd() -> str;\n-    fn refcount(box: @int);\n     fn get_task_id();\n     fn sched_threads();\n     fn rust_get_task();\n@@ -20,7 +19,6 @@ native mod rustrt {\n fn calllink01() { rustrt::unsupervise(); }\n fn calllink02() { rustrt::last_os_error(); }\n fn calllink03() { rustrt::rust_getcwd(); }\n-fn calllink04() { rustrt::refcount(@0); }\n fn calllink08() { rustrt::get_task_id(); }\n fn calllink09() { rustrt::sched_threads(); }\n fn calllink10() { rustrt::rust_get_task(); }\n@@ -52,7 +50,6 @@ fn main() {\n         calllink01,\n         calllink02,\n         calllink03,\n-        calllink04,\n         calllink08,\n         calllink09,\n         calllink10\n@@ -63,4 +60,4 @@ fn main() {\n         let frame_backoff = rng.next() % 10u32 + 1u32;\n         task::try {|| runtest(f, frame_backoff) };\n     }\n-}\n\\ No newline at end of file\n+}"}]}