{"sha": "f6aa64b7b0e2a39708a1baf631f46cf02025cbe9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2YWE2NGI3YjBlMmEzOTcwOGExYmFmNjMxZjQ2Y2YwMjAyNWNiZTk=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-10-24T15:13:38Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2019-10-24T15:13:38Z"}, "message": "self-profiling: Remove unused methods from profiler.", "tree": {"sha": "35ae4165719ebfaaf148b287d665c905d34a47be", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/35ae4165719ebfaaf148b287d665c905d34a47be"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6aa64b7b0e2a39708a1baf631f46cf02025cbe9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6aa64b7b0e2a39708a1baf631f46cf02025cbe9", "html_url": "https://github.com/rust-lang/rust/commit/f6aa64b7b0e2a39708a1baf631f46cf02025cbe9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6aa64b7b0e2a39708a1baf631f46cf02025cbe9/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "55e00631e5bc5b16d40232914e57deeea197a8e4", "url": "https://api.github.com/repos/rust-lang/rust/commits/55e00631e5bc5b16d40232914e57deeea197a8e4", "html_url": "https://github.com/rust-lang/rust/commit/55e00631e5bc5b16d40232914e57deeea197a8e4"}], "stats": {"total": 48, "additions": 0, "deletions": 48}, "files": [{"sha": "0ca0ac82533b07e4e6410ddbdf5082e3b45dafcd", "filename": "src/librustc/util/profiling.rs", "status": "modified", "additions": 0, "deletions": 48, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/f6aa64b7b0e2a39708a1baf631f46cf02025cbe9/src%2Flibrustc%2Futil%2Fprofiling.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6aa64b7b0e2a39708a1baf631f46cf02025cbe9/src%2Flibrustc%2Futil%2Fprofiling.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Futil%2Fprofiling.rs?ref=f6aa64b7b0e2a39708a1baf631f46cf02025cbe9", "patch": "@@ -131,32 +131,6 @@ impl SelfProfilerRef {\n         })\n     }\n \n-    /// Start profiling a generic activity. Profiling continues until\n-    /// `generic_activity_end` is called. The RAII-based `generic_activity`\n-    /// usually is the better alternative.\n-    #[inline(always)]\n-    pub fn generic_activity_start(&self, event_id: &str) {\n-        self.non_guard_generic_event(\n-            |profiler| profiler.generic_activity_event_kind,\n-            |profiler| profiler.profiler.alloc_string(event_id),\n-            EventFilter::GENERIC_ACTIVITIES,\n-            TimestampKind::Start,\n-        );\n-    }\n-\n-    /// End profiling a generic activity that was started with\n-    /// `generic_activity_start`. The RAII-based `generic_activity` usually is\n-    /// the better alternative.\n-    #[inline(always)]\n-    pub fn generic_activity_end(&self, event_id: &str) {\n-        self.non_guard_generic_event(\n-            |profiler| profiler.generic_activity_event_kind,\n-            |profiler| profiler.profiler.alloc_string(event_id),\n-            EventFilter::GENERIC_ACTIVITIES,\n-            TimestampKind::End,\n-        );\n-    }\n-\n     /// Start profiling a query provider. Profiling continues until the\n     /// TimingGuard returned from this call is dropped.\n     #[inline(always)]\n@@ -238,28 +212,6 @@ impl SelfProfilerRef {\n             TimingGuard::none()\n         }));\n     }\n-\n-    #[inline(always)]\n-    fn non_guard_generic_event<F: FnOnce(&SelfProfiler) -> StringId>(\n-        &self,\n-        event_kind: fn(&SelfProfiler) -> StringId,\n-        event_id: F,\n-        event_filter: EventFilter,\n-        timestamp_kind: TimestampKind\n-    ) {\n-        drop(self.exec(event_filter, |profiler| {\n-            let thread_id = thread_id_to_u64(std::thread::current().id());\n-\n-            profiler.profiler.record_event(\n-                event_kind(profiler),\n-                event_id(profiler),\n-                thread_id,\n-                timestamp_kind,\n-            );\n-\n-            TimingGuard::none()\n-        }));\n-    }\n }\n \n pub struct SelfProfiler {"}]}