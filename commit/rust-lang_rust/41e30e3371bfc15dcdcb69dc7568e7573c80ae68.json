{"sha": "41e30e3371bfc15dcdcb69dc7568e7573c80ae68", "node_id": "C_kwDOAAsO6NoAKDQxZTMwZTMzNzFiZmMxNWRjZGNiNjlkYzc1NjhlNzU3M2M4MGFlNjg", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-07-06T09:19:12Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-06T09:19:12Z"}, "message": "Rollup merge of #98967 - ClementTsang:fix_inaccessible_type_alias_plural_typo, r=lcnr\n\nfix typo in note about multiple inaccessible type aliases\n\nMainly intended as a small typo fix (\"aliass\" -> \"aliases\") for the case where a type cannot be found in scope but there are multiple inaccessible type aliases that match the missing type.\n\nIn general this change would use the correct plural form in this scenario for base words that end with 's'.", "tree": {"sha": "66d19a1b21f12f9c306e2eb07ee74155aca261a8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66d19a1b21f12f9c306e2eb07ee74155aca261a8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/41e30e3371bfc15dcdcb69dc7568e7573c80ae68", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJixVORCRBK7hj4Ov3rIwAADSEIAGp6oV2zHJp9tVezAQeGwmZr\nGv81AQO0+i298VxhIH7YIZBI3SToXNFHFxVCtd3ljO0S/f08/chiBTNc8YUXZwt+\nTTOZ1EfL4eQ0PwdDlGCrsx3FBVlhZlsXzpqMOaJgsCvMdxdPCZ4HKaFDN4wGPk2Y\nRKDtTrXsjciOQPusofNM9Qn8ddMZcD8/tb7smFrFY6XaTY4b/vdN5kiVmLCDOZqo\nlz9tQpvVpAOg2lmcEOAhUjjgiY+3ZF9tT5s/71FOiRsVokxESA6LIhZXOdZoengh\nk3CIKO0SZ2CGj7nLlDMqTfRhoENBoowF0nHbd3PazPrjTVLavyLnbtp4D+KGwso=\n=NzJt\n-----END PGP SIGNATURE-----\n", "payload": "tree 66d19a1b21f12f9c306e2eb07ee74155aca261a8\nparent 56667b5a0703c9fe2056a19ae161d6ac722a9bc5\nparent 503c66992737d81e64b38a123ad9ac00dd88cf38\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1657099152 +0530\ncommitter GitHub <noreply@github.com> 1657099152 +0530\n\nRollup merge of #98967 - ClementTsang:fix_inaccessible_type_alias_plural_typo, r=lcnr\n\nfix typo in note about multiple inaccessible type aliases\n\nMainly intended as a small typo fix (\"aliass\" -> \"aliases\") for the case where a type cannot be found in scope but there are multiple inaccessible type aliases that match the missing type.\n\nIn general this change would use the correct plural form in this scenario for base words that end with 's'.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/41e30e3371bfc15dcdcb69dc7568e7573c80ae68", "html_url": "https://github.com/rust-lang/rust/commit/41e30e3371bfc15dcdcb69dc7568e7573c80ae68", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/41e30e3371bfc15dcdcb69dc7568e7573c80ae68/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "56667b5a0703c9fe2056a19ae161d6ac722a9bc5", "url": "https://api.github.com/repos/rust-lang/rust/commits/56667b5a0703c9fe2056a19ae161d6ac722a9bc5", "html_url": "https://github.com/rust-lang/rust/commit/56667b5a0703c9fe2056a19ae161d6ac722a9bc5"}, {"sha": "503c66992737d81e64b38a123ad9ac00dd88cf38", "url": "https://api.github.com/repos/rust-lang/rust/commits/503c66992737d81e64b38a123ad9ac00dd88cf38", "html_url": "https://github.com/rust-lang/rust/commit/503c66992737d81e64b38a123ad9ac00dd88cf38"}], "stats": {"total": 48, "additions": 47, "deletions": 1}, "files": [{"sha": "0f58206eee9f37de748666b6c62e5d41f65142f6", "filename": "compiler/rustc_resolve/src/diagnostics.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/41e30e3371bfc15dcdcb69dc7568e7573c80ae68/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e30e3371bfc15dcdcb69dc7568e7573c80ae68/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Fdiagnostics.rs?ref=41e30e3371bfc15dcdcb69dc7568e7573c80ae68", "patch": "@@ -2589,8 +2589,10 @@ fn show_candidates(\n             } else {\n                 \"item\".to_string()\n             };\n+            let plural_descr =\n+                if descr.ends_with(\"s\") { format!(\"{}es\", descr) } else { format!(\"{}s\", descr) };\n \n-            let mut msg = format!(\"{}these {}s exist but are inaccessible\", prefix, descr);\n+            let mut msg = format!(\"{}these {} exist but are inaccessible\", prefix, plural_descr);\n             let mut has_colon = false;\n \n             let mut spans = Vec::new();"}, {"sha": "c3d4214e282d705453d926405b1d3837e9095995", "filename": "src/test/ui/imports/inaccessible_type_aliases.rs", "status": "added", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/41e30e3371bfc15dcdcb69dc7568e7573c80ae68/src%2Ftest%2Fui%2Fimports%2Finaccessible_type_aliases.rs", "raw_url": "https://github.com/rust-lang/rust/raw/41e30e3371bfc15dcdcb69dc7568e7573c80ae68/src%2Ftest%2Fui%2Fimports%2Finaccessible_type_aliases.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Finaccessible_type_aliases.rs?ref=41e30e3371bfc15dcdcb69dc7568e7573c80ae68", "patch": "@@ -0,0 +1,14 @@\n+mod a {\n+    type Foo = u64;\n+    type Bar = u64;\n+}\n+\n+mod b {\n+    type Foo = u64;\n+}\n+\n+fn main() {\n+    let x: Foo = 100; //~ ERROR: cannot find type `Foo` in this scope\n+    let y: Bar = 100; //~ ERROR: cannot find type `Bar` in this scope\n+    println!(\"x: {}, y: {}\", x, y);\n+}"}, {"sha": "ef224246061d9b071be084946204df28688745e7", "filename": "src/test/ui/imports/inaccessible_type_aliases.stderr", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/41e30e3371bfc15dcdcb69dc7568e7573c80ae68/src%2Ftest%2Fui%2Fimports%2Finaccessible_type_aliases.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/41e30e3371bfc15dcdcb69dc7568e7573c80ae68/src%2Ftest%2Fui%2Fimports%2Finaccessible_type_aliases.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Finaccessible_type_aliases.stderr?ref=41e30e3371bfc15dcdcb69dc7568e7573c80ae68", "patch": "@@ -0,0 +1,30 @@\n+error[E0412]: cannot find type `Foo` in this scope\n+  --> $DIR/inaccessible_type_aliases.rs:11:12\n+   |\n+LL |     let x: Foo = 100;\n+   |            ^^^ not found in this scope\n+   |\n+note: these type aliases exist but are inaccessible\n+  --> $DIR/inaccessible_type_aliases.rs:2:5\n+   |\n+LL |     type Foo = u64;\n+   |     ^^^^^^^^^^^^^^^ `a::Foo`: not accessible\n+...\n+LL |     type Foo = u64;\n+   |     ^^^^^^^^^^^^^^^ `b::Foo`: not accessible\n+\n+error[E0412]: cannot find type `Bar` in this scope\n+  --> $DIR/inaccessible_type_aliases.rs:12:12\n+   |\n+LL |     let y: Bar = 100;\n+   |            ^^^ not found in this scope\n+   |\n+note: type alias `a::Bar` exists but is inaccessible\n+  --> $DIR/inaccessible_type_aliases.rs:3:5\n+   |\n+LL |     type Bar = u64;\n+   |     ^^^^^^^^^^^^^^^ not accessible\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0412`."}]}