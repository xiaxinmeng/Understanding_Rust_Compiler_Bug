{"sha": "75fada4aabdc15d87fe7b63a98d4ce5410ea30f9", "node_id": "C_kwDOAAsO6NoAKDc1ZmFkYTRhYWJkYzE1ZDg3ZmU3YjYzYTk4ZDRjZTU0MTBlYTMwZjk", "commit": {"author": {"name": "bors[bot]", "email": "26634292+bors[bot]@users.noreply.github.com", "date": "2022-03-23T20:20:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-03-23T20:20:09Z"}, "message": "Merge #11805\n\n11805: fix: Don't try to resolve methods on unknown types r=Veykril a=flodiebold\n\nFixes #10454, and some type mismatches.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>", "tree": {"sha": "e7699677eea50fd0cdbabda362cbf482c829366e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e7699677eea50fd0cdbabda362cbf482c829366e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/75fada4aabdc15d87fe7b63a98d4ce5410ea30f9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJiO4D5CRBK7hj4Ov3rIwAAmCsIADJ2Bl+x3zTxgEFNpyRHPx/U\n75sAtFHsuhBbw3Df/e9eb04MRu19mjbBOIkMFsYAvFmKlWQL0hCaVRCNYKD3UxpZ\nchXPLrQ0hMMBmwMRMsJFnLSa3QQ1yefwgX4EJXK3q0QCeB7vIZeBfN40Yc59fUZc\nqILNkh6X/IE6POndQ3nb5VW/nuynI2fYTO/RkBCgHelUw9qFlMUuNEeSaMkDPZMK\nTl9H5J20fMjNHiqR3jVar5nYgRzneVL28gFRAkZyidVogChy7vP+ff8kJ3SIo3zc\nUQ/TTCpUbBcRJbVU2XuSmykaa2maQVmTZoQaIKbGZjWoj+4NHYUOfUT0D0IsEoM=\n=ASNR\n-----END PGP SIGNATURE-----\n", "payload": "tree e7699677eea50fd0cdbabda362cbf482c829366e\nparent de5925da5c4f5840781a8a6481ffa3289c413e4c\nparent e0e6bfb9242fad53e3ed49c59e23eaf6653ff13e\nauthor bors[bot] <26634292+bors[bot]@users.noreply.github.com> 1648066809 +0000\ncommitter GitHub <noreply@github.com> 1648066809 +0000\n\nMerge #11805\n\n11805: fix: Don't try to resolve methods on unknown types r=Veykril a=flodiebold\n\nFixes #10454, and some type mismatches.\n\nCo-authored-by: Florian Diebold <flodiebold@gmail.com>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/75fada4aabdc15d87fe7b63a98d4ce5410ea30f9", "html_url": "https://github.com/rust-lang/rust/commit/75fada4aabdc15d87fe7b63a98d4ce5410ea30f9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/75fada4aabdc15d87fe7b63a98d4ce5410ea30f9/comments", "author": {"login": "bors[bot]", "id": 26634292, "node_id": "MDM6Qm90MjY2MzQyOTI=", "avatar_url": "https://avatars.githubusercontent.com/in/1847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors%5Bbot%5D", "html_url": "https://github.com/apps/bors", "followers_url": "https://api.github.com/users/bors%5Bbot%5D/followers", "following_url": "https://api.github.com/users/bors%5Bbot%5D/following{/other_user}", "gists_url": "https://api.github.com/users/bors%5Bbot%5D/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors%5Bbot%5D/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors%5Bbot%5D/subscriptions", "organizations_url": "https://api.github.com/users/bors%5Bbot%5D/orgs", "repos_url": "https://api.github.com/users/bors%5Bbot%5D/repos", "events_url": "https://api.github.com/users/bors%5Bbot%5D/events{/privacy}", "received_events_url": "https://api.github.com/users/bors%5Bbot%5D/received_events", "type": "Bot", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "de5925da5c4f5840781a8a6481ffa3289c413e4c", "url": "https://api.github.com/repos/rust-lang/rust/commits/de5925da5c4f5840781a8a6481ffa3289c413e4c", "html_url": "https://github.com/rust-lang/rust/commit/de5925da5c4f5840781a8a6481ffa3289c413e4c"}, {"sha": "e0e6bfb9242fad53e3ed49c59e23eaf6653ff13e", "url": "https://api.github.com/repos/rust-lang/rust/commits/e0e6bfb9242fad53e3ed49c59e23eaf6653ff13e", "html_url": "https://github.com/rust-lang/rust/commit/e0e6bfb9242fad53e3ed49c59e23eaf6653ff13e"}], "stats": {"total": 83, "additions": 79, "deletions": 4}, "files": [{"sha": "22cb856535e457a2efe189d988c476c14fc75496", "filename": "crates/hir_ty/src/autoderef.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/75fada4aabdc15d87fe7b63a98d4ce5410ea30f9/crates%2Fhir_ty%2Fsrc%2Fautoderef.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75fada4aabdc15d87fe7b63a98d4ce5410ea30f9/crates%2Fhir_ty%2Fsrc%2Fautoderef.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fautoderef.rs?ref=75fada4aabdc15d87fe7b63a98d4ce5410ea30f9", "patch": "@@ -108,8 +108,13 @@ fn builtin_deref(ty: &Ty) -> Option<&Ty> {\n }\n \n fn deref_by_trait(table: &mut InferenceTable, ty: Ty) -> Option<Ty> {\n-    let db = table.db;\n     let _p = profile::span(\"deref_by_trait\");\n+    if table.resolve_ty_shallow(&ty).inference_var(Interner).is_some() {\n+        // don't try to deref unknown variables\n+        return None;\n+    }\n+\n+    let db = table.db;\n     let deref_trait = db\n         .lang_item(table.trait_env.krate, SmolStr::new_inline(\"deref\"))\n         .and_then(|l| l.as_trait())?;"}, {"sha": "768772d5c3434f2f5b5a57ea874411432568e1f6", "filename": "crates/hir_ty/src/method_resolution.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/75fada4aabdc15d87fe7b63a98d4ce5410ea30f9/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75fada4aabdc15d87fe7b63a98d4ce5410ea30f9/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fmethod_resolution.rs?ref=75fada4aabdc15d87fe7b63a98d4ce5410ea30f9", "patch": "@@ -681,6 +681,11 @@ fn iterate_method_candidates_with_autoref(\n     name: Option<&Name>,\n     mut callback: &mut dyn FnMut(ReceiverAdjustments, AssocItemId) -> ControlFlow<()>,\n ) -> ControlFlow<()> {\n+    if receiver_ty.value.is_general_var(Interner, &receiver_ty.binders) {\n+        // don't try to resolve methods on unknown types\n+        return ControlFlow::Continue(());\n+    }\n+\n     iterate_method_candidates_by_receiver(\n         receiver_ty,\n         first_adjustment.clone(),"}, {"sha": "011347e5c45aa3cfe38768914bf84c6ef9e6afb1", "filename": "crates/hir_ty/src/tests/method_resolution.rs", "status": "modified", "additions": 66, "deletions": 1, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/75fada4aabdc15d87fe7b63a98d4ce5410ea30f9/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75fada4aabdc15d87fe7b63a98d4ce5410ea30f9/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fmethod_resolution.rs?ref=75fada4aabdc15d87fe7b63a98d4ce5410ea30f9", "patch": "@@ -2,7 +2,7 @@ use expect_test::expect;\n \n use crate::tests::check;\n \n-use super::{check_infer, check_types};\n+use super::{check_infer, check_no_mismatches, check_types};\n \n #[test]\n fn infer_slice_method() {\n@@ -1697,3 +1697,68 @@ fn test() {\n \"#,\n     );\n }\n+\n+#[test]\n+fn bad_inferred_reference_1() {\n+    check_no_mismatches(\n+        r#\"\n+//- minicore: sized\n+pub trait Into<T>: Sized {\n+    fn into(self) -> T;\n+}\n+impl<T> Into<T> for T {\n+    fn into(self) -> T { self }\n+}\n+\n+trait ExactSizeIterator {\n+    fn len(&self) -> usize;\n+}\n+\n+pub struct Foo;\n+impl Foo {\n+    fn len(&self) -> usize { 0 }\n+}\n+\n+pub fn test(generic_args: impl Into<Foo>) {\n+    let generic_args = generic_args.into();\n+    generic_args.len();\n+    let _: Foo = generic_args;\n+}\n+\"#,\n+    );\n+}\n+\n+#[test]\n+fn bad_inferred_reference_2() {\n+    check_no_mismatches(\n+        r#\"\n+//- minicore: deref\n+trait ExactSizeIterator {\n+    fn len(&self) -> usize;\n+}\n+\n+pub struct Foo;\n+impl Foo {\n+    fn len(&self) -> usize { 0 }\n+}\n+\n+pub fn test() {\n+    let generic_args;\n+    generic_args.len();\n+    let _: Foo = generic_args;\n+}\n+\"#,\n+    );\n+}\n+\n+#[test]\n+fn resolve_minicore_iterator() {\n+    check_types(\n+        r#\"\n+//- minicore: iterators, sized\n+fn foo() {\n+    let m = core::iter::repeat(()).filter_map(|()| Some(92)).next();\n+}         //^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ Option<i32>\n+\"#,\n+    );\n+}"}, {"sha": "2cd4fa809a4d7c53c20c37ef49b1f23358989db4", "filename": "crates/ide/src/syntax_highlighting/tests.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75fada4aabdc15d87fe7b63a98d4ce5410ea30f9/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75fada4aabdc15d87fe7b63a98d4ce5410ea30f9/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fsyntax_highlighting%2Ftests.rs?ref=75fada4aabdc15d87fe7b63a98d4ce5410ea30f9", "patch": "@@ -1018,5 +1018,5 @@ fn benchmark_syntax_highlighting_parser() {\n             .filter(|it| it.highlight.tag == HlTag::Symbol(SymbolKind::Function))\n             .count()\n     };\n-    assert_eq!(hash, 1616);\n+    assert_eq!(hash, 1609);\n }"}, {"sha": "8474014a2cb30d8927c65455279e750338a2f468", "filename": "crates/test_utils/src/minicore.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/75fada4aabdc15d87fe7b63a98d4ce5410ea30f9/crates%2Ftest_utils%2Fsrc%2Fminicore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/75fada4aabdc15d87fe7b63a98d4ce5410ea30f9/crates%2Ftest_utils%2Fsrc%2Fminicore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Fminicore.rs?ref=75fada4aabdc15d87fe7b63a98d4ce5410ea30f9", "patch": "@@ -518,7 +518,7 @@ pub mod iter {\n             }\n         }\n     }\n-    pub use self::adapters::Take;\n+    pub use self::adapters::{Take, FilterMap};\n \n     mod sources {\n         mod repeat {"}]}