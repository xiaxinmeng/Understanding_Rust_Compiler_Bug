{"sha": "0b1c0ee225a075d25d700fcd1c007615556e2afb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBiMWMwZWUyMjVhMDc1ZDI1ZDcwMGZjZDFjMDA3NjE1NTU2ZTJhZmI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-05T13:01:18Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-12-05T13:01:18Z"}, "message": "First step towards crate deps", "tree": {"sha": "92b7da90af3504bdb9d1b9c408e61cc405105f04", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92b7da90af3504bdb9d1b9c408e61cc405105f04"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0b1c0ee225a075d25d700fcd1c007615556e2afb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0b1c0ee225a075d25d700fcd1c007615556e2afb", "html_url": "https://github.com/rust-lang/rust/commit/0b1c0ee225a075d25d700fcd1c007615556e2afb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0b1c0ee225a075d25d700fcd1c007615556e2afb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7ef1697df84696367f8ee6302febabcb50836a55", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ef1697df84696367f8ee6302febabcb50836a55", "html_url": "https://github.com/rust-lang/rust/commit/7ef1697df84696367f8ee6302febabcb50836a55"}], "stats": {"total": 43, "additions": 35, "deletions": 8}, "files": [{"sha": "7d9faa43c20fd5644805174c243184e106dddf2e", "filename": "crates/ra_db/src/input.rs", "status": "modified", "additions": 35, "deletions": 8, "changes": 43, "blob_url": "https://github.com/rust-lang/rust/blob/0b1c0ee225a075d25d700fcd1c007615556e2afb/crates%2Fra_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0b1c0ee225a075d25d700fcd1c007615556e2afb/crates%2Fra_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Finput.rs?ref=0b1c0ee225a075d25d700fcd1c007615556e2afb", "patch": "@@ -14,24 +14,51 @@ pub struct CrateId(pub u32);\n \n #[derive(Debug, Clone, Default, PartialEq, Eq)]\n pub struct CrateGraph {\n-    crate_roots: FxHashMap<CrateId, FileId>,\n+    arena: FxHashMap<CrateId, CrateData>,\n }\n \n-impl CrateGraph {\n-    pub fn crate_root(&self, crate_id: CrateId) -> FileId {\n-        self.crate_roots[&crate_id]\n+#[derive(Debug, Clone, PartialEq, Eq)]\n+struct CrateData {\n+    file_id: FileId,\n+    deps: Vec<Dependency>,\n+}\n+\n+impl CrateData {\n+    fn new(file_id: FileId) -> CrateData {\n+        CrateData {\n+            file_id,\n+            deps: Vec::new(),\n+        }\n+    }\n+\n+    fn add_dep(&mut self, dep: CrateId) {\n+        self.deps.push(Dependency { crate_: dep })\n     }\n+}\n+\n+#[derive(Debug, Clone, PartialEq, Eq)]\n+pub struct Dependency {\n+    crate_: CrateId,\n+}\n+\n+impl CrateGraph {\n     pub fn add_crate_root(&mut self, file_id: FileId) -> CrateId {\n-        let crate_id = CrateId(self.crate_roots.len() as u32);\n-        let prev = self.crate_roots.insert(crate_id, file_id);\n+        let crate_id = CrateId(self.arena.len() as u32);\n+        let prev = self.arena.insert(crate_id, CrateData::new(file_id));\n         assert!(prev.is_none());\n         crate_id\n     }\n+    pub fn add_dep(&mut self, from: CrateId, to: CrateId) {\n+        self.arena.get_mut(&from).unwrap().add_dep(to)\n+    }\n+    pub fn crate_root(&self, crate_id: CrateId) -> FileId {\n+        self.arena[&crate_id].file_id\n+    }\n     pub fn crate_id_for_crate_root(&self, file_id: FileId) -> Option<CrateId> {\n         let (&crate_id, _) = self\n-            .crate_roots\n+            .arena\n             .iter()\n-            .find(|(_crate_id, &root_id)| root_id == file_id)?;\n+            .find(|(_crate_id, data)| data.file_id == file_id)?;\n         Some(crate_id)\n     }\n }"}]}