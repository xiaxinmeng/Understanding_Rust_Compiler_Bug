{"sha": "968911dbc0fc58e19efb41bd6393a89723450b27", "node_id": "C_kwDOAAsO6NoAKDk2ODkxMWRiYzBmYzU4ZTE5ZWZiNDFiZDYzOTNhODk3MjM0NTBiMjc", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-05-11T05:05:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-05-11T05:05:29Z"}, "message": "Rollup merge of #111432 - cjgillot:issue-111426, r=oli-obk\n\nUse visit_assign to detect SSA locals.\n\nI screwed up the logic in 3c43b61b870add2daddbd8e480477e5a8aa409c2.\n\nFixes https://github.com/rust-lang/rust/issues/111426", "tree": {"sha": "203bf9fc1aea58f451748ab5e72e015d85626364", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/203bf9fc1aea58f451748ab5e72e015d85626364"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/968911dbc0fc58e19efb41bd6393a89723450b27", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkXHeZCRBK7hj4Ov3rIwAADWoIAAJdIAP3HywQHAex1zfE+/Yz\n69vZdxHX8WvXK5rCkmosWu91oaIDj+DSmZaqmOAX/GVFzu7ZZZyCPbuZifv0QkP3\nTQN4SyORGwsV2k//3OAqS7IzcZSDk7qkJBAERW4//2pm2vL3ryl1OozJ+gulmypJ\n4rhwzNoxIjeGxLIMk0sXN7TCAGVThzQhQAlFLRMAcq9LpE9qFoXy7HsqSkHF+S6E\nWZniW3ofKiPh4EWfoB3cqQS1ZTStBAtGXoeuntrP83H4ENRc5rHVB09UdLJz/+Ak\n5nNJOgF/a/Iy2S1W8ie/qZue0+mED4POoQ8Y3peLEroifZgRHEPB9SVXDzVkvTw=\n=EmSm\n-----END PGP SIGNATURE-----\n", "payload": "tree 203bf9fc1aea58f451748ab5e72e015d85626364\nparent 3b7c02b76911d876fa7badbc604b11585c48bc18\nparent 6ad0497cc07eb7ed515605348ae7c56c25c89566\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1683781529 +0200\ncommitter GitHub <noreply@github.com> 1683781529 +0200\n\nRollup merge of #111432 - cjgillot:issue-111426, r=oli-obk\n\nUse visit_assign to detect SSA locals.\n\nI screwed up the logic in 3c43b61b870add2daddbd8e480477e5a8aa409c2.\n\nFixes https://github.com/rust-lang/rust/issues/111426\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/968911dbc0fc58e19efb41bd6393a89723450b27", "html_url": "https://github.com/rust-lang/rust/commit/968911dbc0fc58e19efb41bd6393a89723450b27", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/968911dbc0fc58e19efb41bd6393a89723450b27/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3b7c02b76911d876fa7badbc604b11585c48bc18", "url": "https://api.github.com/repos/rust-lang/rust/commits/3b7c02b76911d876fa7badbc604b11585c48bc18", "html_url": "https://github.com/rust-lang/rust/commit/3b7c02b76911d876fa7badbc604b11585c48bc18"}, {"sha": "6ad0497cc07eb7ed515605348ae7c56c25c89566", "url": "https://api.github.com/repos/rust-lang/rust/commits/6ad0497cc07eb7ed515605348ae7c56c25c89566", "html_url": "https://github.com/rust-lang/rust/commit/6ad0497cc07eb7ed515605348ae7c56c25c89566"}], "stats": {"total": 51, "additions": 44, "deletions": 7}, "files": [{"sha": "a7b453666622a24ded2f9289fd49118b3d25f835", "filename": "compiler/rustc_mir_transform/src/ssa.rs", "status": "modified", "additions": 13, "deletions": 7, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/968911dbc0fc58e19efb41bd6393a89723450b27/compiler%2Frustc_mir_transform%2Fsrc%2Fssa.rs", "raw_url": "https://github.com/rust-lang/rust/raw/968911dbc0fc58e19efb41bd6393a89723450b27/compiler%2Frustc_mir_transform%2Fsrc%2Fssa.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fssa.rs?ref=968911dbc0fc58e19efb41bd6393a89723450b27", "patch": "@@ -209,13 +209,6 @@ impl<'tcx> Visitor<'tcx> for SsaVisitor {\n         match ctxt {\n             PlaceContext::MutatingUse(MutatingUseContext::Projection)\n             | PlaceContext::NonMutatingUse(NonMutatingUseContext::Projection) => bug!(),\n-            PlaceContext::MutatingUse(MutatingUseContext::Store) => {\n-                self.assignments[local].insert(LocationExtended::Plain(loc));\n-                if let Set1::One(_) = self.assignments[local] {\n-                    // Only record if SSA-like, to avoid growing the vector needlessly.\n-                    self.assignment_order.push(local);\n-                }\n-            }\n             // Anything can happen with raw pointers, so remove them.\n             // We do not verify that all uses of the borrow dominate the assignment to `local`,\n             // so we have to remove them too.\n@@ -252,6 +245,19 @@ impl<'tcx> Visitor<'tcx> for SsaVisitor {\n             self.visit_local(place.local, ctxt, loc);\n         }\n     }\n+\n+    fn visit_assign(&mut self, place: &Place<'tcx>, rvalue: &Rvalue<'tcx>, loc: Location) {\n+        if let Some(local) = place.as_local() {\n+            self.assignments[local].insert(LocationExtended::Plain(loc));\n+            if let Set1::One(_) = self.assignments[local] {\n+                // Only record if SSA-like, to avoid growing the vector needlessly.\n+                self.assignment_order.push(local);\n+            }\n+        } else {\n+            self.visit_place(place, PlaceContext::MutatingUse(MutatingUseContext::Store), loc);\n+        }\n+        self.visit_rvalue(rvalue, loc);\n+    }\n }\n \n #[instrument(level = \"trace\", skip(ssa, body))]"}, {"sha": "5866439055e8da5b560fa0d9d7e16114301bc667", "filename": "tests/mir-opt/copy-prop/partial_init.main.CopyProp.diff", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/968911dbc0fc58e19efb41bd6393a89723450b27/tests%2Fmir-opt%2Fcopy-prop%2Fpartial_init.main.CopyProp.diff", "raw_url": "https://github.com/rust-lang/rust/raw/968911dbc0fc58e19efb41bd6393a89723450b27/tests%2Fmir-opt%2Fcopy-prop%2Fpartial_init.main.CopyProp.diff", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fcopy-prop%2Fpartial_init.main.CopyProp.diff?ref=968911dbc0fc58e19efb41bd6393a89723450b27", "patch": "@@ -0,0 +1,13 @@\n+- // MIR for `main` before CopyProp\n++ // MIR for `main` after CopyProp\n+  \n+  fn main() -> () {\n+      let mut _0: ();                      // return place in scope 0 at $DIR/partial_init.rs:+0:15: +0:15\n+      let mut _1: (isize,);                // in scope 0 at $SRC_DIR/core/src/intrinsics/mir.rs:LL:COL\n+  \n+      bb0: {\n+          (_1.0: isize) = const 1_isize;   // scope 0 at $DIR/partial_init.rs:+4:13: +4:20\n+          return;                          // scope 0 at $DIR/partial_init.rs:+5:13: +5:21\n+      }\n+  }\n+  "}, {"sha": "f5ab9974f71e514b7e49a26939508bcd2d9cb359", "filename": "tests/mir-opt/copy-prop/partial_init.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/968911dbc0fc58e19efb41bd6393a89723450b27/tests%2Fmir-opt%2Fcopy-prop%2Fpartial_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/968911dbc0fc58e19efb41bd6393a89723450b27/tests%2Fmir-opt%2Fcopy-prop%2Fpartial_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fmir-opt%2Fcopy-prop%2Fpartial_init.rs?ref=968911dbc0fc58e19efb41bd6393a89723450b27", "patch": "@@ -0,0 +1,18 @@\n+// unit-test: CopyProp\n+// Verify that we do not ICE on partial initializations.\n+\n+#![feature(custom_mir, core_intrinsics)]\n+extern crate core;\n+use core::intrinsics::mir::*;\n+\n+// EMIT_MIR partial_init.main.CopyProp.diff\n+#[custom_mir(dialect = \"runtime\", phase = \"post-cleanup\")]\n+pub fn main() {\n+    mir! (\n+        let x: (isize, );\n+        {\n+            x.0 = 1;\n+            Return()\n+        }\n+    )\n+}"}]}