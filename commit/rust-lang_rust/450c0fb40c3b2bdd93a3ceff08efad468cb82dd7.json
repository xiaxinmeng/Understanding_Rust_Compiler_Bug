{"sha": "450c0fb40c3b2bdd93a3ceff08efad468cb82dd7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1MGMwZmI0MGMzYjJiZGQ5M2EzY2VmZjA4ZWZhZDQ2OGNiODJkZDc=", "commit": {"author": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-21T14:41:57Z"}, "committer": {"name": "llogiq", "email": "bogusandre@gmail.com", "date": "2015-05-21T14:41:57Z"}, "message": "Merge pull request #65 from Manishearth/cmp_owned\n\ncheck for str type of .to_owned() callee", "tree": {"sha": "d2d31645688127532ee7210992ecfea9be235837", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2d31645688127532ee7210992ecfea9be235837"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/450c0fb40c3b2bdd93a3ceff08efad468cb82dd7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/450c0fb40c3b2bdd93a3ceff08efad468cb82dd7", "html_url": "https://github.com/rust-lang/rust/commit/450c0fb40c3b2bdd93a3ceff08efad468cb82dd7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/450c0fb40c3b2bdd93a3ceff08efad468cb82dd7/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7440b0a111935e6dde19e304de64342b9d3a2121", "url": "https://api.github.com/repos/rust-lang/rust/commits/7440b0a111935e6dde19e304de64342b9d3a2121", "html_url": "https://github.com/rust-lang/rust/commit/7440b0a111935e6dde19e304de64342b9d3a2121"}, {"sha": "4b1c72c949328fb12d8eb72579b4ab9fa6243078", "url": "https://api.github.com/repos/rust-lang/rust/commits/4b1c72c949328fb12d8eb72579b4ab9fa6243078", "html_url": "https://github.com/rust-lang/rust/commit/4b1c72c949328fb12d8eb72579b4ab9fa6243078"}], "stats": {"total": 10, "additions": 8, "deletions": 2}, "files": [{"sha": "b8ce6d725f416ac094ed69def586198b56dcffb7", "filename": "src/misc.rs", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/450c0fb40c3b2bdd93a3ceff08efad468cb82dd7/src%2Fmisc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/450c0fb40c3b2bdd93a3ceff08efad468cb82dd7/src%2Fmisc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmisc.rs?ref=450c0fb40c3b2bdd93a3ceff08efad468cb82dd7", "patch": "@@ -235,9 +235,10 @@ impl LintPass for CmpOwned {\n \n fn check_to_owned(cx: &Context, expr: &Expr, other_span: Span) {\n \tmatch &expr.node {\n-\t\t&ExprMethodCall(Spanned{node: ref ident, ..}, _, _) => {\n+\t\t&ExprMethodCall(Spanned{node: ref ident, ..}, _, ref args) => {\n \t\t\tlet name = ident.as_str();\n-\t\t\tif name == \"to_string\" || name == \"to_owned\" {\n+\t\t\tif name == \"to_string\" || \n+\t\t\t   name == \"to_owned\" && is_str_arg(cx, args) {\n \t\t\t\tcx.span_lint(CMP_OWNED, expr.span, &format!(\n \t\t\t\t\t\"this creates an owned instance just for comparison. \\\n \t\t\t\t\tConsider using {}.as_slice() to compare without allocation\",\n@@ -260,3 +261,8 @@ fn check_to_owned(cx: &Context, expr: &Expr, other_span: Span) {\n \t\t_ => ()\n \t}\n }\n+\n+fn is_str_arg(cx: &Context, args: &[P<Expr>]) -> bool {\n+\targs.len() == 1 && if let ty_str = \n+\t\twalk_ty(expr_ty(cx.tcx, &*args[0])).sty { true } else { false }\n+}"}]}