{"sha": "a7e49d6e83f61989b2456c213daeb7461d9ee606", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE3ZTQ5ZDZlODNmNjE5ODliMjQ1NmMyMTNkYWViNzQ2MWQ5ZWU2MDY=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-09-14T01:04:45Z"}, "committer": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2013-09-15T04:42:19Z"}, "message": "rustpkg: Always write a package_id attribute into the link metadata\n\nFor some reason, I thought it wasn't necessary to write the package_id\nattribute (which rustc's filesearch checks when searching for a package)\nif the package ID had a single component (like \"foo\") as opposed to multiple\ncomponents (like \"foo/bar/quux\"). This meant that\n`extern mod quux = \"an-awesome-library\";` didn't work, even if an-awesome-library\nexisted in the RUST_PATH.\n\nFixed it.", "tree": {"sha": "12519ece874dfd19459dcc0dd0c7da2ff18aab3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12519ece874dfd19459dcc0dd0c7da2ff18aab3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a7e49d6e83f61989b2456c213daeb7461d9ee606", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a7e49d6e83f61989b2456c213daeb7461d9ee606", "html_url": "https://github.com/rust-lang/rust/commit/a7e49d6e83f61989b2456c213daeb7461d9ee606", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a7e49d6e83f61989b2456c213daeb7461d9ee606/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a2231dce929a2c525df7cb10e5ab3258804a3a36", "url": "https://api.github.com/repos/rust-lang/rust/commits/a2231dce929a2c525df7cb10e5ab3258804a3a36", "html_url": "https://github.com/rust-lang/rust/commit/a2231dce929a2c525df7cb10e5ab3258804a3a36"}], "stats": {"total": 55, "additions": 51, "deletions": 4}, "files": [{"sha": "aa663a4b273201058acd69d9ac2bb195af87c34f", "filename": "src/librustpkg/tests.rs", "status": "modified", "additions": 49, "deletions": 0, "changes": 49, "blob_url": "https://github.com/rust-lang/rust/blob/a7e49d6e83f61989b2456c213daeb7461d9ee606/src%2Flibrustpkg%2Ftests.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7e49d6e83f61989b2456c213daeb7461d9ee606/src%2Flibrustpkg%2Ftests.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Ftests.rs?ref=a7e49d6e83f61989b2456c213daeb7461d9ee606", "patch": "@@ -1111,6 +1111,55 @@ fn test_extern_mod() {\n     assert!(os::path_exists(&exec_file) && is_executable(&exec_file));\n }\n \n+#[test]\n+fn test_extern_mod_simpler() {\n+    let dir = mkdtemp(&os::tmpdir(), \"test_extern_mod_simpler\").expect(\"test_extern_mod_simpler\");\n+    let main_file = dir.push(\"main.rs\");\n+    let lib_depend_dir = mkdtemp(&os::tmpdir(), \"foo\").expect(\"test_extern_mod_simpler\");\n+    let aux_dir = lib_depend_dir.push_many([\"src\", \"rust-awesomeness\"]);\n+    assert!(os::mkdir_recursive(&aux_dir, U_RWX));\n+    let aux_pkg_file = aux_dir.push(\"lib.rs\");\n+\n+    writeFile(&aux_pkg_file, \"pub mod bar { pub fn assert_true() {  assert!(true); } }\\n\");\n+    assert!(os::path_exists(&aux_pkg_file));\n+\n+    writeFile(&main_file,\n+              \"extern mod test = \\\"rust-awesomeness\\\";\\nuse test::bar;\\\n+               fn main() { bar::assert_true(); }\\n\");\n+\n+    command_line_test([~\"install\", ~\"rust-awesomeness\"], &lib_depend_dir);\n+\n+    let exec_file = dir.push(\"out\");\n+    // Be sure to extend the existing environment\n+    let env = Some([(~\"RUST_PATH\", lib_depend_dir.to_str())] + os::env());\n+    let rustpkg_exec = rustpkg_exec();\n+    let rustc = rustpkg_exec.with_filename(\"rustc\");\n+    debug!(\"RUST_PATH=%s %s %s \\n --sysroot %s -o %s\",\n+                     lib_depend_dir.to_str(),\n+                     rustc.to_str(),\n+                     main_file.to_str(),\n+                     test_sysroot().to_str(),\n+                     exec_file.to_str());\n+\n+    let mut prog = run::Process::new(rustc.to_str(), [main_file.to_str(),\n+                                                      ~\"--sysroot\", test_sysroot().to_str(),\n+                                               ~\"-o\", exec_file.to_str()],\n+                                     run::ProcessOptions {\n+        env: env,\n+        dir: Some(&dir),\n+        in_fd: None,\n+        out_fd: None,\n+        err_fd: None\n+    });\n+    let outp = prog.finish_with_output();\n+    if outp.status != 0 {\n+        fail!(\"output was %s, error was %s\",\n+              str::from_utf8(outp.output),\n+              str::from_utf8(outp.error));\n+    }\n+    assert!(os::path_exists(&exec_file) && is_executable(&exec_file));\n+}\n+\n #[test]\n fn test_import_rustpkg() {\n     let p_id = PkgId::new(\"foo\");"}, {"sha": "71c4760f28d9e61dcb71c45e3435018697f84a9c", "filename": "src/librustpkg/util.rs", "status": "modified", "additions": 2, "deletions": 4, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/a7e49d6e83f61989b2456c213daeb7461d9ee606/src%2Flibrustpkg%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a7e49d6e83f61989b2456c213daeb7461d9ee606/src%2Flibrustpkg%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustpkg%2Futil.rs?ref=a7e49d6e83f61989b2456c213daeb7461d9ee606", "patch": "@@ -268,10 +268,8 @@ pub fn compile_input(context: &BuildContext,\n         let link_options =\n             ~[attr::mk_name_value_item_str(@\"name\", name_to_use),\n               attr::mk_name_value_item_str(@\"vers\", pkg_id.version.to_str().to_managed())] +\n-                        if pkg_id.is_complex() {\n-                        ~[attr::mk_name_value_item_str(@\"package_id\",\n-                                                       pkg_id.path.to_str().to_managed())]\n-                } else { ~[] };\n+            ~[attr::mk_name_value_item_str(@\"package_id\",\n+                                           pkg_id.path.to_str().to_managed())];\n \n         debug!(\"link options: %?\", link_options);\n         crate = @ast::Crate {"}]}