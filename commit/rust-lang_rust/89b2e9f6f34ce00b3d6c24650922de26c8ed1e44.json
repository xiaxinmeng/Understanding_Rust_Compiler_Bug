{"sha": "89b2e9f6f34ce00b3d6c24650922de26c8ed1e44", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg5YjJlOWY2ZjM0Y2UwMGIzZDZjMjQ2NTA5MjJkZTI2YzhlZDFlNDQ=", "commit": {"author": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2015-02-08T22:26:12Z"}, "committer": {"name": "Piotr Czarnecki", "email": "pioczarn@gmail.com", "date": "2015-02-08T22:26:12Z"}, "message": "syntax: Fix integer underflow in diagnostic\n\nFixes #22091", "tree": {"sha": "6ab6d73c67a39bff5e957d33d2ed708926f1b617", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ab6d73c67a39bff5e957d33d2ed708926f1b617"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/89b2e9f6f34ce00b3d6c24650922de26c8ed1e44", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/89b2e9f6f34ce00b3d6c24650922de26c8ed1e44", "html_url": "https://github.com/rust-lang/rust/commit/89b2e9f6f34ce00b3d6c24650922de26c8ed1e44", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/89b2e9f6f34ce00b3d6c24650922de26c8ed1e44/comments", "author": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pczarn", "id": 3356767, "node_id": "MDQ6VXNlcjMzNTY3Njc=", "avatar_url": "https://avatars.githubusercontent.com/u/3356767?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pczarn", "html_url": "https://github.com/pczarn", "followers_url": "https://api.github.com/users/pczarn/followers", "following_url": "https://api.github.com/users/pczarn/following{/other_user}", "gists_url": "https://api.github.com/users/pczarn/gists{/gist_id}", "starred_url": "https://api.github.com/users/pczarn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pczarn/subscriptions", "organizations_url": "https://api.github.com/users/pczarn/orgs", "repos_url": "https://api.github.com/users/pczarn/repos", "events_url": "https://api.github.com/users/pczarn/events{/privacy}", "received_events_url": "https://api.github.com/users/pczarn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d4f9ec566249f88845c88c8b897097a262b4e0af", "url": "https://api.github.com/repos/rust-lang/rust/commits/d4f9ec566249f88845c88c8b897097a262b4e0af", "html_url": "https://github.com/rust-lang/rust/commit/d4f9ec566249f88845c88c8b897097a262b4e0af"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "83a4d938bb5d5567ef9af4fc4fea835aa4e2d2e8", "filename": "src/libsyntax/diagnostic.rs", "status": "modified", "additions": 9, "deletions": 2, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/89b2e9f6f34ce00b3d6c24650922de26c8ed1e44/src%2Flibsyntax%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/89b2e9f6f34ce00b3d6c24650922de26c8ed1e44/src%2Flibsyntax%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic.rs?ref=89b2e9f6f34ce00b3d6c24650922de26c8ed1e44", "patch": "@@ -518,10 +518,11 @@ fn highlight_lines(err: &mut EmitterWriter,\n             let count = match lastc {\n                 // Most terminals have a tab stop every eight columns by default\n                 '\\t' => 8 - col%8,\n-                _ => lastc.width(false).unwrap_or(1),\n+                _ => lastc.width(false).unwrap_or(0),\n             };\n             col += count;\n-            s.extend(::std::iter::repeat('~').take(count - 1));\n+            s.extend(::std::iter::repeat('~').take(count));\n+\n             let hi = cm.lookup_char_pos(sp.hi);\n             if hi.col != lo.col {\n                 for (pos, ch) in iter {\n@@ -534,6 +535,12 @@ fn highlight_lines(err: &mut EmitterWriter,\n                     s.extend(::std::iter::repeat('~').take(count));\n                 }\n             }\n+\n+            if s.len() > 1 {\n+                // One extra squiggly is replaced by a \"^\"\n+                s.pop();\n+            }\n+\n             try!(print_maybe_styled(err,\n                                     &format!(\"{}\\n\", s)[],\n                                     term::attr::ForegroundColor(lvl.color())));"}]}