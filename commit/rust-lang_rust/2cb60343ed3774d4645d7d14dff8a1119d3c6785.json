{"sha": "2cb60343ed3774d4645d7d14dff8a1119d3c6785", "node_id": "C_kwDOAAsO6NoAKDJjYjYwMzQzZWQzNzc0ZDQ2NDVkN2QxNGRmZjhhMTExOWQzYzY3ODU", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-03-10T09:13:30Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2023-03-10T09:13:30Z"}, "message": "Add fancy buttons to the vscode status message", "tree": {"sha": "650ba91180babc33547000b95e9259100c2be5f7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/650ba91180babc33547000b95e9259100c2be5f7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2cb60343ed3774d4645d7d14dff8a1119d3c6785", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2cb60343ed3774d4645d7d14dff8a1119d3c6785", "html_url": "https://github.com/rust-lang/rust/commit/2cb60343ed3774d4645d7d14dff8a1119d3c6785", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2cb60343ed3774d4645d7d14dff8a1119d3c6785/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0d19ccb3dfb9841ba84367c82a4e75930c189823", "url": "https://api.github.com/repos/rust-lang/rust/commits/0d19ccb3dfb9841ba84367c82a4e75930c189823", "html_url": "https://github.com/rust-lang/rust/commit/0d19ccb3dfb9841ba84367c82a4e75930c189823"}], "stats": {"total": 43, "additions": 31, "deletions": 12}, "files": [{"sha": "f4a4579a92c9b4d348a08f028f88bfb04024b546", "filename": "editors/code/src/commands.ts", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2cb60343ed3774d4645d7d14dff8a1119d3c6785/editors%2Fcode%2Fsrc%2Fcommands.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2cb60343ed3774d4645d7d14dff8a1119d3c6785/editors%2Fcode%2Fsrc%2Fcommands.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fcommands.ts?ref=2cb60343ed3774d4645d7d14dff8a1119d3c6785", "patch": "@@ -93,6 +93,14 @@ export function triggerParameterHints(_: CtxInit): Cmd {\n     };\n }\n \n+export function openLogs(ctx: CtxInit): Cmd {\n+    return async () => {\n+        if (ctx.client.outputChannel) {\n+            ctx.client.outputChannel.show();\n+        }\n+    };\n+}\n+\n export function matchingBrace(ctx: CtxInit): Cmd {\n     return async () => {\n         const editor = ctx.activeRustEditor;"}, {"sha": "1708d47cee77da95246ae2f8546470c8274b272e", "filename": "editors/code/src/ctx.ts", "status": "modified", "additions": 22, "deletions": 12, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/2cb60343ed3774d4645d7d14dff8a1119d3c6785/editors%2Fcode%2Fsrc%2Fctx.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2cb60343ed3774d4645d7d14dff8a1119d3c6785/editors%2Fcode%2Fsrc%2Fctx.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fctx.ts?ref=2cb60343ed3774d4645d7d14dff8a1119d3c6785", "patch": "@@ -282,41 +282,51 @@ export class Ctx {\n     setServerStatus(status: ServerStatusParams | { health: \"stopped\" }) {\n         let icon = \"\";\n         const statusBar = this.statusBar;\n+        statusBar.tooltip = new vscode.MarkdownString(\"\", true);\n+        statusBar.tooltip.isTrusted = true;\n         switch (status.health) {\n             case \"ok\":\n-                statusBar.tooltip = (status.message ?? \"Ready\") + \"\\nClick to stop server.\";\n-                statusBar.command = \"rust-analyzer.stopServer\";\n+                statusBar.tooltip.appendText(status.message ?? \"Ready\");\n                 statusBar.color = undefined;\n                 statusBar.backgroundColor = undefined;\n                 break;\n             case \"warning\":\n-                statusBar.tooltip =\n-                    (status.message ? status.message + \"\\n\" : \"\") + \"Click to reload.\";\n-\n-                statusBar.command = \"rust-analyzer.reloadWorkspace\";\n+                if (status.message) {\n+                    statusBar.tooltip.appendText(status.message);\n+                }\n                 statusBar.color = new vscode.ThemeColor(\"statusBarItem.warningForeground\");\n                 statusBar.backgroundColor = new vscode.ThemeColor(\n                     \"statusBarItem.warningBackground\"\n                 );\n                 icon = \"$(warning) \";\n                 break;\n             case \"error\":\n-                statusBar.tooltip =\n-                    (status.message ? status.message + \"\\n\" : \"\") + \"Click to reload.\";\n-\n-                statusBar.command = \"rust-analyzer.reloadWorkspace\";\n+                if (status.message) {\n+                    statusBar.tooltip.appendText(status.message);\n+                }\n                 statusBar.color = new vscode.ThemeColor(\"statusBarItem.errorForeground\");\n                 statusBar.backgroundColor = new vscode.ThemeColor(\"statusBarItem.errorBackground\");\n                 icon = \"$(error) \";\n                 break;\n             case \"stopped\":\n-                statusBar.tooltip = \"Server is stopped.\\nClick to start.\";\n-                statusBar.command = \"rust-analyzer.startServer\";\n+                statusBar.tooltip.appendText(\"Server is stopped\");\n+                statusBar.tooltip.appendMarkdown(\n+                    \"\\n\\n[Start server](command:rust-analyzer.startServer)\"\n+                );\n                 statusBar.color = undefined;\n                 statusBar.backgroundColor = undefined;\n                 statusBar.text = `$(stop-circle) rust-analyzer`;\n                 return;\n         }\n+        if (statusBar.tooltip.value) {\n+            statusBar.tooltip.appendText(\"\\n\\n\");\n+        }\n+        statusBar.tooltip.appendMarkdown(\"[Stop server](command:rust-analyzer.stopServer)\");\n+        statusBar.tooltip.appendMarkdown(\n+            \"\\n\\n[Reload Workspace](command:rust-analyzer.reloadWorkspace)\"\n+        );\n+        statusBar.tooltip.appendMarkdown(\"\\n\\n[Restart server](command:rust-analyzer.startServer)\");\n+        statusBar.tooltip.appendMarkdown(\"\\n\\n[Open logs](command:rust-analyzer.openLogs)\");\n         if (!status.quiescent) icon = \"$(sync~spin) \";\n         statusBar.text = `${icon}rust-analyzer`;\n     }"}, {"sha": "8a2412af849cd2e31a7932a95e0b202d8fa2753b", "filename": "editors/code/src/main.ts", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/2cb60343ed3774d4645d7d14dff8a1119d3c6785/editors%2Fcode%2Fsrc%2Fmain.ts", "raw_url": "https://github.com/rust-lang/rust/raw/2cb60343ed3774d4645d7d14dff8a1119d3c6785/editors%2Fcode%2Fsrc%2Fmain.ts", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/editors%2Fcode%2Fsrc%2Fmain.ts?ref=2cb60343ed3774d4645d7d14dff8a1119d3c6785", "patch": "@@ -188,5 +188,6 @@ function createCommands(): Record<string, CommandFactory> {\n         runSingle: { enabled: commands.runSingle },\n         showReferences: { enabled: commands.showReferences },\n         triggerParameterHints: { enabled: commands.triggerParameterHints },\n+        openLogs: { enabled: commands.openLogs },\n     };\n }"}]}