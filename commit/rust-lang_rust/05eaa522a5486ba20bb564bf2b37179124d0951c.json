{"sha": "05eaa522a5486ba20bb564bf2b37179124d0951c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA1ZWFhNTIyYTU0ODZiYTIwYmI1NjRiZjJiMzcxNzkxMjRkMDk1MWM=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-09T09:27:12Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2016-06-09T09:27:12Z"}, "message": "rename `static_item` to `global_item`", "tree": {"sha": "5425a5e727b9054ff890772592a60f9ee84e2f97", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5425a5e727b9054ff890772592a60f9ee84e2f97"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/05eaa522a5486ba20bb564bf2b37179124d0951c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1\n\niQIcBAABAgAGBQJXWTZwAAoJEFbW7qD8Z6xGY1YQALVH6fOMmyWMJ+nXLGZGaUCU\nndr/mQ3rH7k22dRwsIPNnefPsVvPKFCdTzHTe9j2bqhjoM6S5KjLH51fRAf9eDJv\n2Y22ZXIqfrNm0PMu7t0P+uS+rg8BuGF8pkTVrIhME1tJ2whZQAEJM51NKs7tFf2Q\nfNAK/HmZELdFipASq7uOaU0rGJ3h62vGZ80mTcIguz/MeYWT+GGHyhDTqjn62NxC\ne4oDPk+0Xh7PgrXbAkNPdwRbdhujiYyljMqheFym1PRPr3Q+8CQ6ODDCT0+lgLtQ\n/3ayloZwXzcUCxK71tsST69cp53ONBKUsrQDhTofDM3TWOP4ozUzV0ItVXTSTvM1\nkLcEDV/PBwf1YPCvCmsbSKP9nj+HGDAnlvbgMf611hd9utEe3O1HaqxNRcO9EWFh\n4LCfvuHBNkkw6vzQw4g6EeUS+J44XjERZkVkELRNQSJdfqpKMz0wnYJIN4xQ+P1/\nzmVNvB4WQcLpxLJwCys8EdOsIHOruURc8prM955iONs0MwbldEUbGkTgiBFVFZv8\nuymmSbiG4KP1aW3F/TYhxydbikfovTicGPrDf0sfWYJo7pNxOJ9LwOIajM/BoAur\nnGPXghN176GMIlkVF/1O6UYUxHMzZYaW2UO2bglkCOspgP2arsGQAt9vZ9NxtqiU\nTzlz/JUb5B5cAnFHFvSD\n=jk/A\n-----END PGP SIGNATURE-----", "payload": "tree 5425a5e727b9054ff890772592a60f9ee84e2f97\nparent 040a501a68d85179d0fb8c5bf409f8e93ba12aeb\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465464432 +0200\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1465464432 +0200\n\nrename `static_item` to `global_item`"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/05eaa522a5486ba20bb564bf2b37179124d0951c", "html_url": "https://github.com/rust-lang/rust/commit/05eaa522a5486ba20bb564bf2b37179124d0951c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/05eaa522a5486ba20bb564bf2b37179124d0951c/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "040a501a68d85179d0fb8c5bf409f8e93ba12aeb", "url": "https://api.github.com/repos/rust-lang/rust/commits/040a501a68d85179d0fb8c5bf409f8e93ba12aeb", "html_url": "https://github.com/rust-lang/rust/commit/040a501a68d85179d0fb8c5bf409f8e93ba12aeb"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "a113b8f98e8130fc1f156c0e757f8ae0d063c3d2", "filename": "src/interpreter/stepper.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/05eaa522a5486ba20bb564bf2b37179124d0951c/src%2Finterpreter%2Fstepper.rs", "raw_url": "https://github.com/rust-lang/rust/raw/05eaa522a5486ba20bb564bf2b37179124d0951c/src%2Finterpreter%2Fstepper.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fstepper.rs?ref=05eaa522a5486ba20bb564bf2b37179124d0951c", "patch": "@@ -128,7 +128,7 @@ struct ConstantExtractor<'a, 'b: 'mir, 'mir: 'a, 'tcx: 'b> {\n }\n \n impl<'a, 'b, 'mir, 'tcx> ConstantExtractor<'a, 'b, 'mir, 'tcx> {\n-    fn static_item(&mut self, def_id: DefId, substs: &'tcx subst::Substs<'tcx>, span: Span) {\n+    fn global_item(&mut self, def_id: DefId, substs: &'tcx subst::Substs<'tcx>, span: Span) {\n         let cid = ConstantId {\n             def_id: def_id,\n             substs: substs,\n@@ -156,7 +156,7 @@ impl<'a, 'b, 'mir, 'tcx> Visitor<'tcx> for ConstantExtractor<'a, 'b, 'mir, 'tcx>\n                     // because the type is the actual function, not the signature of the function.\n                     // Thus we can simply create a zero sized allocation in `evaluate_operand`\n                 } else {\n-                    self.static_item(def_id, substs, constant.span);\n+                    self.global_item(def_id, substs, constant.span);\n                 }\n             },\n             mir::Literal::Promoted { index } => {\n@@ -183,7 +183,7 @@ impl<'a, 'b, 'mir, 'tcx> Visitor<'tcx> for ConstantExtractor<'a, 'b, 'mir, 'tcx>\n         if let mir::Lvalue::Static(def_id) = *lvalue {\n             let substs = self.gecx.tcx.mk_substs(subst::Substs::empty());\n             let span = self.span;\n-            self.static_item(def_id, substs, span);\n+            self.global_item(def_id, substs, span);\n         }\n     }\n }"}]}