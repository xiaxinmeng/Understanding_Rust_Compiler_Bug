{"sha": "7561714aa1e4b3478f62357b6826c3587aedfeb5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc1NjE3MTRhYTFlNGIzNDc4ZjYyMzU3YjY4MjZjMzU4N2FlZGZlYjU=", "commit": {"author": {"name": "Dylan DPC", "email": "dylan.dpc@gmail.com", "date": "2020-04-20T16:07:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-04-20T16:07:11Z"}, "message": "Rollup merge of #71328 - Mark-Simulacrum:stabilize-pathbuf-capacity, r=sfackler\n\nStabilize PathBuf capacity methods\n\nCloses https://github.com/rust-lang/rust/issues/58234.\n\nStabilization FCP finished in https://github.com/rust-lang/rust/issues/58234#issuecomment-616048777.", "tree": {"sha": "c700abb6d9e9a616604cfcd0e2f4e0b5c7251731", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c700abb6d9e9a616604cfcd0e2f4e0b5c7251731"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7561714aa1e4b3478f62357b6826c3587aedfeb5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJencivCRBK7hj4Ov3rIwAAdHIIAH/cMooqIyj4C/4zJw8EDogT\nz9SUIVrju9ezSN+/evg8PnhFKaXYKfsPZEPi6heAGLjJjdZeG4ip5d/HM4objMuA\nuuwO5plSOjj052jhLL+ICTbxJaFJCPTqSsYELoI7hnbu39l8aYE34ACDKIsTjWRb\nDbCABDmBKT30T3X5rBFt6/mqMN0niocXZ5wyCxUNxaeH4ZKPNSwCASI0IOy0ZZ2c\n+sL5mJ9V+yu6XU87F8S7EvrWbqyWQHRZLLTGpPIKO/xU7mtmAIN5B5CgOyRtW4iJ\nx97c0PTiIb7Z7678bybmWCiKc7252M6zPJxxqstP/fiNMQE/WCRmk3F4nYT5Md0=\n=UhK3\n-----END PGP SIGNATURE-----\n", "payload": "tree c700abb6d9e9a616604cfcd0e2f4e0b5c7251731\nparent 314b78c5502cc232b975a5ce8870f61c5902ad47\nparent 77ee0886237bed4acc7c2893ec9adf7a53283826\nauthor Dylan DPC <dylan.dpc@gmail.com> 1587398831 +0200\ncommitter GitHub <noreply@github.com> 1587398831 +0200\n\nRollup merge of #71328 - Mark-Simulacrum:stabilize-pathbuf-capacity, r=sfackler\n\nStabilize PathBuf capacity methods\n\nCloses https://github.com/rust-lang/rust/issues/58234.\n\nStabilization FCP finished in https://github.com/rust-lang/rust/issues/58234#issuecomment-616048777.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7561714aa1e4b3478f62357b6826c3587aedfeb5", "html_url": "https://github.com/rust-lang/rust/commit/7561714aa1e4b3478f62357b6826c3587aedfeb5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7561714aa1e4b3478f62357b6826c3587aedfeb5/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "314b78c5502cc232b975a5ce8870f61c5902ad47", "url": "https://api.github.com/repos/rust-lang/rust/commits/314b78c5502cc232b975a5ce8870f61c5902ad47", "html_url": "https://github.com/rust-lang/rust/commit/314b78c5502cc232b975a5ce8870f61c5902ad47"}, {"sha": "77ee0886237bed4acc7c2893ec9adf7a53283826", "url": "https://api.github.com/repos/rust-lang/rust/commits/77ee0886237bed4acc7c2893ec9adf7a53283826", "html_url": "https://github.com/rust-lang/rust/commit/77ee0886237bed4acc7c2893ec9adf7a53283826"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "173d6d1cfa7efbd17e7daabb14755e325aaa3753", "filename": "src/libstd/path.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/7561714aa1e4b3478f62357b6826c3587aedfeb5/src%2Flibstd%2Fpath.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7561714aa1e4b3478f62357b6826c3587aedfeb5/src%2Flibstd%2Fpath.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath.rs?ref=7561714aa1e4b3478f62357b6826c3587aedfeb5", "patch": "@@ -1116,7 +1116,6 @@ impl PathBuf {\n     /// # Examples\n     ///\n     /// ```\n-    /// #![feature(path_buf_capacity)]\n     /// use std::path::PathBuf;\n     ///\n     /// let mut path = PathBuf::with_capacity(10);\n@@ -1130,7 +1129,7 @@ impl PathBuf {\n     ///\n     /// [`with_capacity`]: ../ffi/struct.OsString.html#method.with_capacity\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[unstable(feature = \"path_buf_capacity\", issue = \"58234\")]\n+    #[stable(feature = \"path_buf_capacity\", since = \"1.44.0\")]\n     pub fn with_capacity(capacity: usize) -> PathBuf {\n         PathBuf { inner: OsString::with_capacity(capacity) }\n     }\n@@ -1374,7 +1373,7 @@ impl PathBuf {\n     ///\n     /// [`capacity`]: ../ffi/struct.OsString.html#method.capacity\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[unstable(feature = \"path_buf_capacity\", issue = \"58234\")]\n+    #[stable(feature = \"path_buf_capacity\", since = \"1.44.0\")]\n     pub fn capacity(&self) -> usize {\n         self.inner.capacity()\n     }\n@@ -1383,7 +1382,7 @@ impl PathBuf {\n     ///\n     /// [`clear`]: ../ffi/struct.OsString.html#method.clear\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[unstable(feature = \"path_buf_capacity\", issue = \"58234\")]\n+    #[stable(feature = \"path_buf_capacity\", since = \"1.44.0\")]\n     pub fn clear(&mut self) {\n         self.inner.clear()\n     }\n@@ -1392,7 +1391,7 @@ impl PathBuf {\n     ///\n     /// [`reserve`]: ../ffi/struct.OsString.html#method.reserve\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[unstable(feature = \"path_buf_capacity\", issue = \"58234\")]\n+    #[stable(feature = \"path_buf_capacity\", since = \"1.44.0\")]\n     pub fn reserve(&mut self, additional: usize) {\n         self.inner.reserve(additional)\n     }\n@@ -1401,7 +1400,7 @@ impl PathBuf {\n     ///\n     /// [`reserve_exact`]: ../ffi/struct.OsString.html#method.reserve_exact\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[unstable(feature = \"path_buf_capacity\", issue = \"58234\")]\n+    #[stable(feature = \"path_buf_capacity\", since = \"1.44.0\")]\n     pub fn reserve_exact(&mut self, additional: usize) {\n         self.inner.reserve_exact(additional)\n     }\n@@ -1410,7 +1409,7 @@ impl PathBuf {\n     ///\n     /// [`shrink_to_fit`]: ../ffi/struct.OsString.html#method.shrink_to_fit\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[unstable(feature = \"path_buf_capacity\", issue = \"58234\")]\n+    #[stable(feature = \"path_buf_capacity\", since = \"1.44.0\")]\n     pub fn shrink_to_fit(&mut self) {\n         self.inner.shrink_to_fit()\n     }\n@@ -1419,7 +1418,7 @@ impl PathBuf {\n     ///\n     /// [`shrink_to`]: ../ffi/struct.OsString.html#method.shrink_to\n     /// [`OsString`]: ../ffi/struct.OsString.html\n-    #[unstable(feature = \"path_buf_capacity\", issue = \"58234\")]\n+    #[unstable(feature = \"shrink_to\", issue = \"56431\")]\n     pub fn shrink_to(&mut self, min_capacity: usize) {\n         self.inner.shrink_to(min_capacity)\n     }"}]}