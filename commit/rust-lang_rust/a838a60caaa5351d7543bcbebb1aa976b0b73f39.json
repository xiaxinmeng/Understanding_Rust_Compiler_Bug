{"sha": "a838a60caaa5351d7543bcbebb1aa976b0b73f39", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE4MzhhNjBjYWFhNTM1MWQ3NTQzYmNiZWJiMWFhOTc2YjBiNzNmMzk=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-08T11:51:04Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-04-08T12:23:17Z"}, "message": "Fix missing match arms", "tree": {"sha": "e17994fe7a56f78c4770f227d75e9913ea4766db", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e17994fe7a56f78c4770f227d75e9913ea4766db"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a838a60caaa5351d7543bcbebb1aa976b0b73f39", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a838a60caaa5351d7543bcbebb1aa976b0b73f39", "html_url": "https://github.com/rust-lang/rust/commit/a838a60caaa5351d7543bcbebb1aa976b0b73f39", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a838a60caaa5351d7543bcbebb1aa976b0b73f39/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f43edb2151408d0127201312ade7fef9d9328222", "url": "https://api.github.com/repos/rust-lang/rust/commits/f43edb2151408d0127201312ade7fef9d9328222", "html_url": "https://github.com/rust-lang/rust/commit/f43edb2151408d0127201312ade7fef9d9328222"}], "stats": {"total": 26, "additions": 23, "deletions": 3}, "files": [{"sha": "817a01db11519a1cdbd97db79dbff03ff39255e4", "filename": "crates/hir/src/lib.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a838a60caaa5351d7543bcbebb1aa976b0b73f39/crates%2Fhir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a838a60caaa5351d7543bcbebb1aa976b0b73f39/crates%2Fhir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir%2Fsrc%2Flib.rs?ref=a838a60caaa5351d7543bcbebb1aa976b0b73f39", "patch": "@@ -1903,7 +1903,9 @@ impl Type {\n                 | TyKind::Dyn(_)\n                 | TyKind::Function(_)\n                 | TyKind::Alias(_)\n-                | TyKind::Foreign(_) => false,\n+                | TyKind::Foreign(_)\n+                | TyKind::Generator(..)\n+                | TyKind::GeneratorWitness(..) => false,\n             }\n         }\n     }"}, {"sha": "d7a3977e53b98653445b4680939a97eaf6d64a82", "filename": "crates/hir_ty/src/display.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/a838a60caaa5351d7543bcbebb1aa976b0b73f39/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a838a60caaa5351d7543bcbebb1aa976b0b73f39/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fdisplay.rs?ref=a838a60caaa5351d7543bcbebb1aa976b0b73f39", "patch": "@@ -287,6 +287,8 @@ impl HirDisplay for GenericArg {\n     fn hir_fmt(&self, f: &mut HirFormatter) -> Result<(), HirDisplayError> {\n         match self.interned() {\n             crate::GenericArgData::Ty(ty) => ty.hir_fmt(f),\n+            crate::GenericArgData::Lifetime(lt) => lt.hir_fmt(f),\n+            crate::GenericArgData::Const(c) => c.hir_fmt(f),\n         }\n     }\n }\n@@ -664,6 +666,8 @@ impl HirDisplay for Ty {\n                 write!(f, \"{{unknown}}\")?;\n             }\n             TyKind::InferenceVar(..) => write!(f, \"_\")?,\n+            TyKind::Generator(..) => write!(f, \"{{generator}}\")?,\n+            TyKind::GeneratorWitness(..) => write!(f, \"{{generator witness}}\")?,\n         }\n         Ok(())\n     }\n@@ -741,7 +745,7 @@ fn write_bounds_like_dyn_trait(\n                 if !first {\n                     write!(f, \" + \")?;\n                 }\n-                // We assume that the self type is $0 (i.e. the\n+                // We assume that the self type is ^0.0 (i.e. the\n                 // existential) here, which is the only thing that's\n                 // possible in actual Rust, and hence don't print it\n                 write!(f, \"{}\", f.db.trait_data(trait_).name)?;\n@@ -783,6 +787,10 @@ fn write_bounds_like_dyn_trait(\n                 }\n                 ty.hir_fmt(f)?;\n             }\n+\n+            // FIXME implement these\n+            WhereClause::LifetimeOutlives(_) => {}\n+            WhereClause::TypeOutlives(_) => {}\n         }\n         first = false;\n     }\n@@ -837,6 +845,10 @@ impl HirDisplay for WhereClause {\n                 ty.hir_fmt(f)?;\n             }\n             WhereClause::AliasEq(_) => write!(f, \"{{error}}\")?,\n+\n+            // FIXME implement these\n+            WhereClause::TypeOutlives(..) => {}\n+            WhereClause::LifetimeOutlives(..) => {}\n         }\n         Ok(())\n     }\n@@ -881,9 +893,11 @@ impl HirDisplay for DomainGoal {\n             DomainGoal::Holds(wc) => {\n                 write!(f, \"Holds(\")?;\n                 wc.hir_fmt(f)?;\n-                write!(f, \")\")\n+                write!(f, \")\")?;\n             }\n+            _ => write!(f, \"?\")?,\n         }\n+        Ok(())\n     }\n }\n "}, {"sha": "648af4ebff4e4bed02336a4b872ccf81214e5b7e", "filename": "crates/hir_ty/src/infer/unify.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a838a60caaa5351d7543bcbebb1aa976b0b73f39/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a838a60caaa5351d7543bcbebb1aa976b0b73f39/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Funify.rs?ref=a838a60caaa5351d7543bcbebb1aa976b0b73f39", "patch": "@@ -116,6 +116,7 @@ impl<'a, 'b> Canonicalizer<'a, 'b> {\n             DomainGoal::Holds(wc) => {\n                 DomainGoal::Holds(self.do_canonicalize(wc, DebruijnIndex::INNERMOST))\n             }\n+            _ => unimplemented!(),\n         };\n         self.into_canonicalized(InEnvironment { goal: result, environment: obligation.environment })\n     }"}, {"sha": "de1d37e17807bfbdc76c7cac77ea39ea6cb68a21", "filename": "crates/hir_ty/src/traits.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a838a60caaa5351d7543bcbebb1aa976b0b73f39/crates%2Fhir_ty%2Fsrc%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a838a60caaa5351d7543bcbebb1aa976b0b73f39/crates%2Fhir_ty%2Fsrc%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftraits.rs?ref=a838a60caaa5351d7543bcbebb1aa976b0b73f39", "patch": "@@ -81,6 +81,7 @@ pub(crate) fn trait_solve_query(\n             db.trait_data(it.hir_trait_id()).name.to_string()\n         }\n         DomainGoal::Holds(WhereClause::AliasEq(_)) => \"alias_eq\".to_string(),\n+        _ => \"??\".to_string(),\n     });\n     log::info!(\"trait_solve_query({})\", goal.value.goal.display(db));\n "}, {"sha": "57343fd61aa0633415aae567eba6c96fc03d70b4", "filename": "crates/hir_ty/src/walk.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a838a60caaa5351d7543bcbebb1aa976b0b73f39/crates%2Fhir_ty%2Fsrc%2Fwalk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a838a60caaa5351d7543bcbebb1aa976b0b73f39/crates%2Fhir_ty%2Fsrc%2Fwalk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Fwalk.rs?ref=a838a60caaa5351d7543bcbebb1aa976b0b73f39", "patch": "@@ -93,6 +93,7 @@ impl TypeWalk for GenericArg {\n             GenericArgData::Ty(ty) => {\n                 ty.walk(f);\n             }\n+            _ => {}\n         }\n     }\n }\n@@ -122,6 +123,7 @@ impl TypeWalk for WhereClause {\n         match self {\n             WhereClause::Implemented(trait_ref) => trait_ref.walk(f),\n             WhereClause::AliasEq(alias_eq) => alias_eq.walk(f),\n+            _ => {}\n         }\n     }\n }"}]}