{"sha": "7e624ce2c2f5196a94178ce7dd62173526ff6839", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdlNjI0Y2UyYzJmNTE5NmE5NDE3OGNlN2RkNjIxNzM1MjZmZjY4Mzk=", "commit": {"author": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2019-04-11T02:46:29Z"}, "committer": {"name": "Jethro Beekman", "email": "jethro@fortanix.com", "date": "2019-04-29T23:46:29Z"}, "message": "SGX target: don't unwind on usercall index out of bounds", "tree": {"sha": "cba07f80f52cf041cae2aae4c0ac23efb2e0eb80", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cba07f80f52cf041cae2aae4c0ac23efb2e0eb80"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e624ce2c2f5196a94178ce7dd62173526ff6839", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e624ce2c2f5196a94178ce7dd62173526ff6839", "html_url": "https://github.com/rust-lang/rust/commit/7e624ce2c2f5196a94178ce7dd62173526ff6839", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e624ce2c2f5196a94178ce7dd62173526ff6839/comments", "author": null, "committer": null, "parents": [{"sha": "00859e3e653973120006aaf3227823062dde1ba7", "url": "https://api.github.com/repos/rust-lang/rust/commits/00859e3e653973120006aaf3227823062dde1ba7", "html_url": "https://github.com/rust-lang/rust/commit/00859e3e653973120006aaf3227823062dde1ba7"}], "stats": {"total": 12, "additions": 10, "deletions": 2}, "files": [{"sha": "38e05f6fd2757a4816eb083ed8277835176bdfa9", "filename": "src/libstd/sys/sgx/abi/usercalls/alloc.rs", "status": "modified", "additions": 10, "deletions": 2, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/7e624ce2c2f5196a94178ce7dd62173526ff6839/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e624ce2c2f5196a94178ce7dd62173526ff6839/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fsgx%2Fabi%2Fusercalls%2Falloc.rs?ref=7e624ce2c2f5196a94178ce7dd62173526ff6839", "patch": "@@ -523,7 +523,11 @@ impl<T, I: SliceIndex<[T]>> Index<I> for UserRef<[T]> where [T]: UserSafe, I::Ou\n     #[inline]\n     fn index(&self, index: I) -> &UserRef<I::Output> {\n         unsafe {\n-            UserRef::from_ptr(index.index(&*self.as_raw_ptr()))\n+            if let Some(slice) = index.get(&*self.as_raw_ptr()) {\n+                UserRef::from_ptr(slice)\n+            } else {\n+                rtabort!(\"index out of range for user slice\");\n+            }\n         }\n     }\n }\n@@ -533,7 +537,11 @@ impl<T, I: SliceIndex<[T]>> IndexMut<I> for UserRef<[T]> where [T]: UserSafe, I:\n     #[inline]\n     fn index_mut(&mut self, index: I) -> &mut UserRef<I::Output> {\n         unsafe {\n-            UserRef::from_mut_ptr(index.index_mut(&mut*self.as_raw_mut_ptr()))\n+            if let Some(slice) = index.get_mut(&mut*self.as_raw_mut_ptr()) {\n+                UserRef::from_mut_ptr(slice)\n+            } else {\n+                rtabort!(\"index out of range for user slice\");\n+            }\n         }\n     }\n }"}]}