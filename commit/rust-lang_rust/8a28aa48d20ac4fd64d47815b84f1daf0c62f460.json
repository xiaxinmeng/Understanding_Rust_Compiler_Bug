{"sha": "8a28aa48d20ac4fd64d47815b84f1daf0c62f460", "node_id": "C_kwDOAAsO6NoAKDhhMjhhYTQ4ZDIwYWM0ZmQ2NGQ0NzgxNWI4NGYxZGFmMGM2MmY0NjA", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-04-25T06:32:59Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-04-25T20:31:53Z"}, "message": "Fix issue 96381", "tree": {"sha": "7eda8e8210dda39d7b602ca3c7ba1a3803253edb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7eda8e8210dda39d7b602ca3c7ba1a3803253edb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8a28aa48d20ac4fd64d47815b84f1daf0c62f460", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8a28aa48d20ac4fd64d47815b84f1daf0c62f460", "html_url": "https://github.com/rust-lang/rust/commit/8a28aa48d20ac4fd64d47815b84f1daf0c62f460", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8a28aa48d20ac4fd64d47815b84f1daf0c62f460/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "18b53cefdf7456bf68937b08e377b7e622a115c2", "url": "https://api.github.com/repos/rust-lang/rust/commits/18b53cefdf7456bf68937b08e377b7e622a115c2", "html_url": "https://github.com/rust-lang/rust/commit/18b53cefdf7456bf68937b08e377b7e622a115c2"}], "stats": {"total": 24, "additions": 20, "deletions": 4}, "files": [{"sha": "1caf93e5fe055fef2fc7eefdc603bb18b8362209", "filename": "compiler/rustc_typeck/src/astconv/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8a28aa48d20ac4fd64d47815b84f1daf0c62f460/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a28aa48d20ac4fd64d47815b84f1daf0c62f460/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fastconv%2Fmod.rs?ref=8a28aa48d20ac4fd64d47815b84f1daf0c62f460", "patch": "@@ -2681,21 +2681,21 @@ impl<'o, 'tcx> dyn AstConv<'tcx> + 'o {\n         let trait_ref =\n             self.instantiate_mono_trait_ref(i.of_trait.as_ref()?, self.ast_ty_to_ty(i.self_ty));\n \n-        let x: &ty::AssocItem = tcx.associated_items(trait_ref.def_id).find_by_name_and_kind(\n+        let assoc = tcx.associated_items(trait_ref.def_id).find_by_name_and_kind(\n             tcx,\n             *ident,\n             ty::AssocKind::Fn,\n             trait_ref.def_id,\n         )?;\n \n-        let fn_sig = tcx.fn_sig(x.def_id).subst(\n+        let fn_sig = tcx.fn_sig(assoc.def_id).subst(\n             tcx,\n-            trait_ref.substs.extend_to(tcx, x.def_id, |param, _| tcx.mk_param_from_def(param)),\n+            trait_ref.substs.extend_to(tcx, assoc.def_id, |param, _| tcx.mk_param_from_def(param)),\n         );\n \n         let ty = if let Some(arg_idx) = arg_idx { fn_sig.input(arg_idx) } else { fn_sig.output() };\n \n-        Some(tcx.erase_late_bound_regions(ty))\n+        Some(tcx.liberate_late_bound_regions(fn_hir_id.expect_owner().to_def_id(), ty))\n     }\n \n     fn validate_late_bound_regions("}, {"sha": "f0f123f85a03f1ad5f1c67172b429c11a9d9c251", "filename": "src/test/rustdoc/issue-96381.rs", "status": "added", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8a28aa48d20ac4fd64d47815b84f1daf0c62f460/src%2Ftest%2Frustdoc%2Fissue-96381.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8a28aa48d20ac4fd64d47815b84f1daf0c62f460/src%2Ftest%2Frustdoc%2Fissue-96381.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-96381.rs?ref=8a28aa48d20ac4fd64d47815b84f1daf0c62f460", "patch": "@@ -0,0 +1,16 @@\n+// should-fail\n+\n+#![allow(unused)]\n+\n+trait Foo<T>: Sized {\n+    fn bar(i: i32, t: T, s: &Self) -> (T, i32);\n+}\n+\n+impl Foo<usize> for () {\n+    fn bar(i: _, t: _, s: _) -> _ {\n+        //~^ ERROR the placeholder `_` is not allowed within types on item signatures for functions\n+        (1, 2)\n+    }\n+}\n+\n+fn main() {}"}]}