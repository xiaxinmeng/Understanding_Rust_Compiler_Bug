{"sha": "a54d04617413322e434f6eb6c0a786d61c2f8329", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NGQwNDYxNzQxMzMyMmU0MzRmNmViNmMwYTc4NmQ2MWMyZjgzMjk=", "commit": {"author": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2012-11-07T06:24:29Z"}, "committer": {"name": "Zack Corr", "email": "zack@z0w0.me", "date": "2012-11-07T06:24:29Z"}, "message": "Implement Ptr trait for mutable unsafe pointers. Closes #3926.", "tree": {"sha": "8c28e2a94a6bcecf8a4942195479ba85b23f9f9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8c28e2a94a6bcecf8a4942195479ba85b23f9f9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a54d04617413322e434f6eb6c0a786d61c2f8329", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a54d04617413322e434f6eb6c0a786d61c2f8329", "html_url": "https://github.com/rust-lang/rust/commit/a54d04617413322e434f6eb6c0a786d61c2f8329", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a54d04617413322e434f6eb6c0a786d61c2f8329/comments", "author": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "committer": {"login": "z0w0", "id": 676417, "node_id": "MDQ6VXNlcjY3NjQxNw==", "avatar_url": "https://avatars.githubusercontent.com/u/676417?v=4", "gravatar_id": "", "url": "https://api.github.com/users/z0w0", "html_url": "https://github.com/z0w0", "followers_url": "https://api.github.com/users/z0w0/followers", "following_url": "https://api.github.com/users/z0w0/following{/other_user}", "gists_url": "https://api.github.com/users/z0w0/gists{/gist_id}", "starred_url": "https://api.github.com/users/z0w0/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/z0w0/subscriptions", "organizations_url": "https://api.github.com/users/z0w0/orgs", "repos_url": "https://api.github.com/users/z0w0/repos", "events_url": "https://api.github.com/users/z0w0/events{/privacy}", "received_events_url": "https://api.github.com/users/z0w0/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "92e3a8c17e9b7cb61b18791aea0544794a315bbb", "url": "https://api.github.com/repos/rust-lang/rust/commits/92e3a8c17e9b7cb61b18791aea0544794a315bbb", "html_url": "https://github.com/rust-lang/rust/commit/92e3a8c17e9b7cb61b18791aea0544794a315bbb"}], "stats": {"total": 25, "additions": 24, "deletions": 1}, "files": [{"sha": "8767d56d80e9d6720e85ddd1d3e1c1effe1a14be", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 24, "deletions": 1, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/a54d04617413322e434f6eb6c0a786d61c2f8329/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a54d04617413322e434f6eb6c0a786d61c2f8329/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=a54d04617413322e434f6eb6c0a786d61c2f8329", "patch": "@@ -176,7 +176,7 @@ pub trait Ptr<T> {\n     pure fn offset(count: uint) -> self;\n }\n \n-/// Extension methods for pointers\n+/// Extension methods for immutable pointers\n impl<T> *T: Ptr<T> {\n     /// Returns true if the pointer is equal to the null pointer.\n     #[inline(always)]\n@@ -191,6 +191,21 @@ impl<T> *T: Ptr<T> {\n     pure fn offset(count: uint) -> *T { offset(self, count) }\n }\n \n+/// Extension methods for mutable pointers\n+impl<T> *mut T: Ptr<T> {\n+    /// Returns true if the pointer is equal to the null pointer.\n+    #[inline(always)]\n+    pure fn is_null() -> bool { is_null(self) }\n+\n+    /// Returns true if the pointer is not equal to the null pointer.\n+    #[inline(always)]\n+    pure fn is_not_null() -> bool { is_not_null(self) }\n+\n+    /// Calculates the offset from a mutable pointer.\n+    #[inline(always)]\n+    pure fn offset(count: uint) -> *mut T { mut_offset(self, count) }\n+}\n+\n // Equality for pointers\n impl<T> *const T : Eq {\n     pure fn eq(other: &*const T) -> bool unsafe {\n@@ -311,4 +326,12 @@ pub fn test_is_null() {\n    let q = ptr::offset(p, 1u);\n    assert !q.is_null();\n    assert q.is_not_null();\n+\n+   let mp: *mut int = ptr::mut_null();\n+   assert mp.is_null();\n+   assert !mp.is_not_null();\n+\n+   let mq = mp.offset(1u);\n+   assert !mq.is_null();\n+   assert mq.is_not_null();\n }"}]}