{"sha": "8972a23f4827e784a9dc2f14435d2bc34197c74b", "node_id": "C_kwDOAAsO6NoAKDg5NzJhMjNmNDgyN2U3ODRhOWRjMmYxNDQzNWQyYmMzNDE5N2M3NGI", "commit": {"author": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-04-29T10:09:55Z"}, "committer": {"name": "Camille GILLOT", "email": "gillot.camille@gmail.com", "date": "2023-05-03T18:07:53Z"}, "message": "Do not recurse into const generic args when resolving self lifetime elision.", "tree": {"sha": "c583a4624edde3a2346ce14c4e197577b382f845", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c583a4624edde3a2346ce14c4e197577b382f845"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8972a23f4827e784a9dc2f14435d2bc34197c74b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8972a23f4827e784a9dc2f14435d2bc34197c74b", "html_url": "https://github.com/rust-lang/rust/commit/8972a23f4827e784a9dc2f14435d2bc34197c74b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8972a23f4827e784a9dc2f14435d2bc34197c74b/comments", "author": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "committer": {"login": "cjgillot", "id": 1822483, "node_id": "MDQ6VXNlcjE4MjI0ODM=", "avatar_url": "https://avatars.githubusercontent.com/u/1822483?v=4", "gravatar_id": "", "url": "https://api.github.com/users/cjgillot", "html_url": "https://github.com/cjgillot", "followers_url": "https://api.github.com/users/cjgillot/followers", "following_url": "https://api.github.com/users/cjgillot/following{/other_user}", "gists_url": "https://api.github.com/users/cjgillot/gists{/gist_id}", "starred_url": "https://api.github.com/users/cjgillot/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/cjgillot/subscriptions", "organizations_url": "https://api.github.com/users/cjgillot/orgs", "repos_url": "https://api.github.com/users/cjgillot/repos", "events_url": "https://api.github.com/users/cjgillot/events{/privacy}", "received_events_url": "https://api.github.com/users/cjgillot/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "89158e210ce0b9550b42c65ede244087f2e144b5", "url": "https://api.github.com/repos/rust-lang/rust/commits/89158e210ce0b9550b42c65ede244087f2e144b5", "html_url": "https://github.com/rust-lang/rust/commit/89158e210ce0b9550b42c65ede244087f2e144b5"}], "stats": {"total": 55, "additions": 55, "deletions": 0}, "files": [{"sha": "b783acc8607f016c6f4e0f01dd2f78d7a7b63eb1", "filename": "compiler/rustc_resolve/src/late.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/8972a23f4827e784a9dc2f14435d2bc34197c74b/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8972a23f4827e784a9dc2f14435d2bc34197c74b/compiler%2Frustc_resolve%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate.rs?ref=8972a23f4827e784a9dc2f14435d2bc34197c74b", "patch": "@@ -2075,6 +2075,10 @@ impl<'a: 'ast, 'b, 'ast, 'tcx> LateResolutionVisitor<'a, 'b, 'ast, 'tcx> {\n                 }\n                 visit::walk_ty(self, ty)\n             }\n+\n+            // A type may have an expression as a const generic argument.\n+            // We do not want to recurse into those.\n+            fn visit_expr(&mut self, _: &'a Expr) {}\n         }\n \n         let impl_self = self"}, {"sha": "4bcb645c60eef797823579238fdcd37ff319f05b", "filename": "tests/ui/self/elision/nested-item.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/8972a23f4827e784a9dc2f14435d2bc34197c74b/tests%2Fui%2Fself%2Felision%2Fnested-item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8972a23f4827e784a9dc2f14435d2bc34197c74b/tests%2Fui%2Fself%2Felision%2Fnested-item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fself%2Felision%2Fnested-item.rs?ref=8972a23f4827e784a9dc2f14435d2bc34197c74b", "patch": "@@ -0,0 +1,13 @@\n+// Regression test for #110899.\n+// When looking for the elided lifetime for `wrap`,\n+// we must not consider the lifetimes in `bar` as candidates.\n+\n+fn wrap(self: Wrap<{ fn bar(&self) {} }>) -> &() {\n+    //~^ ERROR `self` parameter is only allowed in associated functions\n+    //~| ERROR `self` parameter is only allowed in associated functions\n+    //~| ERROR missing lifetime specifier\n+    //~| ERROR cannot find type `Wrap` in this scope\n+    &()\n+}\n+\n+fn main() {}"}, {"sha": "752fd82332c380b25417b79a30af93cc0ec06967", "filename": "tests/ui/self/elision/nested-item.stderr", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/8972a23f4827e784a9dc2f14435d2bc34197c74b/tests%2Fui%2Fself%2Felision%2Fnested-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/8972a23f4827e784a9dc2f14435d2bc34197c74b/tests%2Fui%2Fself%2Felision%2Fnested-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fself%2Felision%2Fnested-item.stderr?ref=8972a23f4827e784a9dc2f14435d2bc34197c74b", "patch": "@@ -0,0 +1,38 @@\n+error: `self` parameter is only allowed in associated functions\n+  --> $DIR/nested-item.rs:5:9\n+   |\n+LL | fn wrap(self: Wrap<{ fn bar(&self) {} }>) -> &() {\n+   |         ^^^^ not semantically valid as function parameter\n+   |\n+   = note: associated functions are those in `impl` or `trait` definitions\n+\n+error: `self` parameter is only allowed in associated functions\n+  --> $DIR/nested-item.rs:5:29\n+   |\n+LL | fn wrap(self: Wrap<{ fn bar(&self) {} }>) -> &() {\n+   |                             ^^^^^ not semantically valid as function parameter\n+   |\n+   = note: associated functions are those in `impl` or `trait` definitions\n+\n+error[E0106]: missing lifetime specifier\n+  --> $DIR/nested-item.rs:5:46\n+   |\n+LL | fn wrap(self: Wrap<{ fn bar(&self) {} }>) -> &() {\n+   |                                              ^ expected named lifetime parameter\n+   |\n+   = help: this function's return type contains a borrowed value, but there is no value for it to be borrowed from\n+help: consider using the `'static` lifetime\n+   |\n+LL | fn wrap(self: Wrap<{ fn bar(&self) {} }>) -> &'static () {\n+   |                                               +++++++\n+\n+error[E0412]: cannot find type `Wrap` in this scope\n+  --> $DIR/nested-item.rs:5:15\n+   |\n+LL | fn wrap(self: Wrap<{ fn bar(&self) {} }>) -> &() {\n+   |               ^^^^ not found in this scope\n+\n+error: aborting due to 4 previous errors\n+\n+Some errors have detailed explanations: E0106, E0412.\n+For more information about an error, try `rustc --explain E0106`."}]}