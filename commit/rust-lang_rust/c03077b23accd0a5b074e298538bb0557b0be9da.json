{"sha": "c03077b23accd0a5b074e298538bb0557b0be9da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMwMzA3N2IyM2FjY2QwYTViMDc0ZTI5ODUzOGJiMDU1N2IwYmU5ZGE=", "commit": {"author": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2019-08-07T21:51:49Z"}, "committer": {"name": "Brian Anderson", "email": "andersrb@gmail.com", "date": "2019-08-07T21:51:49Z"}, "message": "Use consistent capitalization in -C/-Z help", "tree": {"sha": "69694ee015d20794275fc866d70895236f2029eb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/69694ee015d20794275fc866d70895236f2029eb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c03077b23accd0a5b074e298538bb0557b0be9da", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c03077b23accd0a5b074e298538bb0557b0be9da", "html_url": "https://github.com/rust-lang/rust/commit/c03077b23accd0a5b074e298538bb0557b0be9da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c03077b23accd0a5b074e298538bb0557b0be9da/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ad7c55e1fc55d9af4787b285cec1c64e3480ae84", "url": "https://api.github.com/repos/rust-lang/rust/commits/ad7c55e1fc55d9af4787b285cec1c64e3480ae84", "html_url": "https://github.com/rust-lang/rust/commit/ad7c55e1fc55d9af4787b285cec1c64e3480ae84"}], "stats": {"total": 12, "additions": 6, "deletions": 6}, "files": [{"sha": "3536b2aa8fffe2831ea1dc038af7f6232bf9f8f5", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/c03077b23accd0a5b074e298538bb0557b0be9da/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c03077b23accd0a5b074e298538bb0557b0be9da/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=c03077b23accd0a5b074e298538bb0557b0be9da", "patch": "@@ -1155,7 +1155,7 @@ options! {CodegenOptions, CodegenSetter, basic_codegen_options,\n     passes: Vec<String> = (Vec::new(), parse_list, [TRACKED],\n         \"a list of extra LLVM passes to run (space separated)\"),\n     llvm_args: Vec<String> = (Vec::new(), parse_list, [TRACKED],\n-        \"a list of arguments to pass to llvm (space separated)\"),\n+        \"a list of arguments to pass to LLVM (space separated)\"),\n     save_temps: bool = (false, parse_bool, [UNTRACKED],\n         \"save all temporary output files during compilation\"),\n     rpath: bool = (false, parse_bool, [UNTRACKED],\n@@ -1208,7 +1208,7 @@ options! {CodegenOptions, CodegenSetter, basic_codegen_options,\n     default_linker_libraries: Option<bool> = (None, parse_opt_bool, [UNTRACKED],\n         \"allow the linker to link its default libraries\"),\n     linker_flavor: Option<LinkerFlavor> = (None, parse_linker_flavor, [UNTRACKED],\n-                                           \"Linker flavor\"),\n+                                           \"linker flavor\"),\n     linker_plugin_lto: LinkerPluginLto = (LinkerPluginLto::Disabled,\n         parse_linker_plugin_lto, [TRACKED],\n         \"generate build artifacts that are compatible with linker-based LTO.\"),\n@@ -1255,7 +1255,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     print_link_args: bool = (false, parse_bool, [UNTRACKED],\n         \"print the arguments passed to the linker\"),\n     print_llvm_passes: bool = (false, parse_bool, [UNTRACKED],\n-        \"prints the llvm optimization passes being run\"),\n+        \"prints the LLVM optimization passes being run\"),\n     ast_json: bool = (false, parse_bool, [UNTRACKED],\n         \"print the AST as JSON and halt\"),\n     threads: Option<usize> = (None, parse_opt_uint, [UNTRACKED],\n@@ -1375,11 +1375,11 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n     osx_rpath_install_name: bool = (false, parse_bool, [TRACKED],\n         \"pass `-install_name @rpath/...` to the macOS linker\"),\n     sanitizer: Option<Sanitizer> = (None, parse_sanitizer, [TRACKED],\n-                                    \"Use a sanitizer\"),\n+                                    \"use a sanitizer\"),\n     fuel: Option<(String, u64)> = (None, parse_optimization_fuel, [TRACKED],\n         \"set the optimization fuel quota for a crate\"),\n     print_fuel: Option<String> = (None, parse_opt_string, [TRACKED],\n-        \"make Rustc print the total optimization fuel used by a crate\"),\n+        \"make rustc print the total optimization fuel used by a crate\"),\n     force_unstable_if_unmarked: bool = (false, parse_bool, [TRACKED],\n         \"force all crates to be `rustc_private` unstable\"),\n     pre_link_arg: Vec<String> = (vec![], parse_string_push, [UNTRACKED],\n@@ -1417,7 +1417,7 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"in dep-info output, omit targets for tracking dependencies of the dep-info files \\\n          themselves\"),\n     unpretty: Option<String> = (None, parse_unpretty, [UNTRACKED],\n-        \"Present the input source, unstable (and less-pretty) variants;\n+        \"present the input source, unstable (and less-pretty) variants;\n         valid types are any of the types for `--pretty`, as well as:\n         `expanded`, `expanded,identified`,\n         `expanded,hygiene` (with internal representations),"}]}