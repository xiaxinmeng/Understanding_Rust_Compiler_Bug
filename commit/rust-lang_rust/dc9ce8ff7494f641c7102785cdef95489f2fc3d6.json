{"sha": "dc9ce8ff7494f641c7102785cdef95489f2fc3d6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRjOWNlOGZmNzQ5NGY2NDFjNzEwMjc4NWNkZWY5NTQ4OWYyZmMzZDY=", "commit": {"author": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2018-10-22T14:50:55Z"}, "committer": {"name": "Alan Du", "email": "alanhdu@gmail.com", "date": "2018-10-22T14:50:55Z"}, "message": "Rename new to new_item (to match new_impl)", "tree": {"sha": "04b491be95b46270f6cbb1004cff348fbbdc15ff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/04b491be95b46270f6cbb1004cff348fbbdc15ff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/dc9ce8ff7494f641c7102785cdef95489f2fc3d6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/dc9ce8ff7494f641c7102785cdef95489f2fc3d6", "html_url": "https://github.com/rust-lang/rust/commit/dc9ce8ff7494f641c7102785cdef95489f2fc3d6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/dc9ce8ff7494f641c7102785cdef95489f2fc3d6/comments", "author": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alanhdu", "id": 1914111, "node_id": "MDQ6VXNlcjE5MTQxMTE=", "avatar_url": "https://avatars.githubusercontent.com/u/1914111?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alanhdu", "html_url": "https://github.com/alanhdu", "followers_url": "https://api.github.com/users/alanhdu/followers", "following_url": "https://api.github.com/users/alanhdu/following{/other_user}", "gists_url": "https://api.github.com/users/alanhdu/gists{/gist_id}", "starred_url": "https://api.github.com/users/alanhdu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alanhdu/subscriptions", "organizations_url": "https://api.github.com/users/alanhdu/orgs", "repos_url": "https://api.github.com/users/alanhdu/repos", "events_url": "https://api.github.com/users/alanhdu/events{/privacy}", "received_events_url": "https://api.github.com/users/alanhdu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0857c22f263ff18418f939b57a7a2ab3f8aac2c1", "url": "https://api.github.com/repos/rust-lang/rust/commits/0857c22f263ff18418f939b57a7a2ab3f8aac2c1", "html_url": "https://github.com/rust-lang/rust/commit/0857c22f263ff18418f939b57a7a2ab3f8aac2c1"}], "stats": {"total": 18, "additions": 9, "deletions": 9}, "files": [{"sha": "956ee0e2f18a5baf359f995e20567b67b06e2fd2", "filename": "crates/ra_editor/src/scope/mod_scope.rs", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/dc9ce8ff7494f641c7102785cdef95489f2fc3d6/crates%2Fra_editor%2Fsrc%2Fscope%2Fmod_scope.rs", "raw_url": "https://github.com/rust-lang/rust/raw/dc9ce8ff7494f641c7102785cdef95489f2fc3d6/crates%2Fra_editor%2Fsrc%2Fscope%2Fmod_scope.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_editor%2Fsrc%2Fscope%2Fmod_scope.rs?ref=dc9ce8ff7494f641c7102785cdef95489f2fc3d6", "patch": "@@ -22,14 +22,14 @@ impl ModuleScope {\n         let mut entries = Vec::new();\n         for item in items {\n             let entry = match item {\n-                ast::ModuleItem::StructDef(item) => Entry::new(item),\n-                ast::ModuleItem::EnumDef(item) => Entry::new(item),\n-                ast::ModuleItem::FnDef(item) => Entry::new(item),\n-                ast::ModuleItem::ConstDef(item) => Entry::new(item),\n-                ast::ModuleItem::StaticDef(item) => Entry::new(item),\n-                ast::ModuleItem::TraitDef(item) => Entry::new(item),\n-                ast::ModuleItem::TypeDef(item) => Entry::new(item),\n-                ast::ModuleItem::Module(item) => Entry::new(item),\n+                ast::ModuleItem::StructDef(item) => Entry::new_item(item),\n+                ast::ModuleItem::EnumDef(item) => Entry::new_item(item),\n+                ast::ModuleItem::FnDef(item) => Entry::new_item(item),\n+                ast::ModuleItem::ConstDef(item) => Entry::new_item(item),\n+                ast::ModuleItem::StaticDef(item) => Entry::new_item(item),\n+                ast::ModuleItem::TraitDef(item) => Entry::new_item(item),\n+                ast::ModuleItem::TypeDef(item) => Entry::new_item(item),\n+                ast::ModuleItem::Module(item) => Entry::new_item(item),\n                 ast::ModuleItem::UseItem(item) => {\n                     if let Some(tree) = item.use_tree() {\n                         collect_imports(tree, &mut entries);\n@@ -50,7 +50,7 @@ impl ModuleScope {\n }\n \n impl Entry {\n-    fn new<'a>(item: impl ast::NameOwner<'a>) -> Option<Entry> {\n+    fn new_item<'a>(item: impl ast::NameOwner<'a>) -> Option<Entry> {\n         let name = item.name()?;\n         Some(Entry {\n             node: name.syntax().owned(),"}]}