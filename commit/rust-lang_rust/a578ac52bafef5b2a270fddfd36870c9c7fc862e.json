{"sha": "a578ac52bafef5b2a270fddfd36870c9c7fc862e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE1NzhhYzUyYmFmZWY1YjJhMjcwZmRkZmQzNjg3MGM5YzdmYzg2MmU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-05-30T03:39:09Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-05-30T03:39:09Z"}, "message": "Rollup merge of #72033 - XAMPPRocky:relnotes-1.44.0, r=Mark-Simulacrum\n\nUpdate RELEASES.md for 1.44.0\n\n### [Rendered](https://github.com/XAMPPRocky/rust/blob/relnotes-1.44.0/RELEASES.md)\n\nr? @Mark-Simulacrum\ncc @rust-lang/release", "tree": {"sha": "4569371fe25933cb61a2a66254d16bfddf3ff7b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4569371fe25933cb61a2a66254d16bfddf3ff7b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a578ac52bafef5b2a270fddfd36870c9c7fc862e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJe0dVdCRBK7hj4Ov3rIwAAdHIIAHX/Rox62dkjI+XUR8IPnHWn\nya3UHee5qhYqa8jQ3JhRWMqSZqnmwb1reG1+owb533CVyqKrk6l9FqKuaHirpXHZ\nA2Vwh3SuKsO1s0YdpAexP62157+p1J0v9yV7a3Muf+DDgnSOHB8ciPqImzB0/mmI\nocBbPVCcTw2v5NOOJrUmKLORrpdyyN25QQq1qtpO9NYegCElu34HmaUlCwZFgMw4\njY3pIVFztqK0IdJWeztlEErLJz23NLdswjkrb4+5WdRzeD8ZEgNopEad/8DNZlut\nDK7r3RIHZqNKzhIrOy0fvVtm/VW5QVhEGsgXRHOYsxpj8A8ImBFnDsNJRkDXxxM=\n=K3dO\n-----END PGP SIGNATURE-----\n", "payload": "tree 4569371fe25933cb61a2a66254d16bfddf3ff7b4\nparent 0e9e4083100aa3ebf09b8f1ace0348cb37475eb9\nparent 692f4ec3b103a36830132bc941c2aa2abea4b7e7\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1590809949 +0900\ncommitter GitHub <noreply@github.com> 1590809949 +0900\n\nRollup merge of #72033 - XAMPPRocky:relnotes-1.44.0, r=Mark-Simulacrum\n\nUpdate RELEASES.md for 1.44.0\n\n### [Rendered](https://github.com/XAMPPRocky/rust/blob/relnotes-1.44.0/RELEASES.md)\n\nr? @Mark-Simulacrum\ncc @rust-lang/release\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a578ac52bafef5b2a270fddfd36870c9c7fc862e", "html_url": "https://github.com/rust-lang/rust/commit/a578ac52bafef5b2a270fddfd36870c9c7fc862e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a578ac52bafef5b2a270fddfd36870c9c7fc862e/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0e9e4083100aa3ebf09b8f1ace0348cb37475eb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/0e9e4083100aa3ebf09b8f1ace0348cb37475eb9", "html_url": "https://github.com/rust-lang/rust/commit/0e9e4083100aa3ebf09b8f1ace0348cb37475eb9"}, {"sha": "692f4ec3b103a36830132bc941c2aa2abea4b7e7", "url": "https://api.github.com/repos/rust-lang/rust/commits/692f4ec3b103a36830132bc941c2aa2abea4b7e7", "html_url": "https://github.com/rust-lang/rust/commit/692f4ec3b103a36830132bc941c2aa2abea4b7e7"}], "stats": {"total": 160, "additions": 160, "deletions": 0}, "files": [{"sha": "7cba27e134a7848cc7274baaecd02156f6388a3c", "filename": "RELEASES.md", "status": "modified", "additions": 160, "deletions": 0, "changes": 160, "blob_url": "https://github.com/rust-lang/rust/blob/a578ac52bafef5b2a270fddfd36870c9c7fc862e/RELEASES.md", "raw_url": "https://github.com/rust-lang/rust/raw/a578ac52bafef5b2a270fddfd36870c9c7fc862e/RELEASES.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/RELEASES.md?ref=a578ac52bafef5b2a270fddfd36870c9c7fc862e", "patch": "@@ -1,3 +1,163 @@\n+Version 1.44.0 (2020-06-04)\n+==========================\n+\n+Language\n+--------\n+- [You can now use `async/.await` with `#[no_std]` enabled.][69033]\n+- [Added the `unused_braces` lint.][70081]\n+\n+**Syntax-only changes**\n+\n+- [Expansion-driven outline module parsing][69838]\n+```rust\n+#[cfg(FALSE)]\n+mod foo {\n+    mod bar {\n+        mod baz; // `foo/bar/baz.rs` doesn't exist, but no error!\n+    }\n+}\n+```\n+\n+These are still rejected semantically, so you will likely receive an error but\n+these changes can be seen and parsed by macros and conditional compilation.\n+\n+Compiler\n+--------\n+- [Rustc now respects the `-C codegen-units` flag in incremental mode.][70156]\n+  Additionally when in incremental mode rustc defaults to 256 codegen units.\n+- [Refactored `catch_unwind`, to have zero-cost unless unwinding is enabled and\n+  a panic is thrown.][67502]\n+- [Added tier 3\\* support for the `aarch64-unknown-none` and\n+  `aarch64-unknown-none-softfloat` targets.][68334]\n+- [Added tier 3 support for `arm64-apple-tvos` and\n+  `x86_64-apple-tvos` targets.][68191]\n+\n+\n+Libraries\n+---------\n+- [Special cased `vec![]` to map directly to `Vec::new()`.][70632] This allows\n+  `vec![]` to be able to be used in `const` contexts.\n+- [`convert::Infallible` now implements `Hash`.][70281]\n+- [`OsString` now implements `DerefMut` and `IndexMut` returning\n+  a `&mut OsStr`.][70048]\n+- [Unicode 13 is now supported.][69929]\n+- [`String` now implements `From<&mut str>`.][69661]\n+- [`IoSlice` now implements `Copy`.][69403]\n+- [`Vec<T>` now implements `From<[T; N]>`.][68692] Where `N` is less than 32.\n+- [`proc_macro::LexError` now implements `fmt::Display` and `Error`.][68899]\n+- [`from_le_bytes`, `to_le_bytes`, `from_be_bytes`, `to_be_bytes`,\n+  `from_ne_bytes`, and `to_ne_bytes` methods are now `const` for all\n+  integer types.][69373]\n+\n+Stabilized APIs\n+---------------\n+- [`PathBuf::with_capacity`]\n+- [`PathBuf::capacity`]\n+- [`PathBuf::clear`]\n+- [`PathBuf::reserve`]\n+- [`PathBuf::reserve_exact`]\n+- [`PathBuf::shrink_to_fit`]\n+- [`f32::to_int_unchecked`]\n+- [`f64::to_int_unchecked`]\n+- [`Layout::align_to`]\n+- [`Layout::pad_to_align`]\n+- [`Layout::array`]\n+- [`Layout::extend`]\n+\n+Cargo\n+-----\n+- [Added the `cargo tree` command which will print a tree graph of\n+  your dependencies.][cargo/8062] E.g.\n+  ```\n+    mdbook v0.3.2 (/Users/src/rust/mdbook)\n+  \u251c\u2500\u2500 ammonia v3.0.0\n+  \u2502   \u251c\u2500\u2500 html5ever v0.24.0\n+  \u2502   \u2502   \u251c\u2500\u2500 log v0.4.8\n+  \u2502   \u2502   \u2502   \u2514\u2500\u2500 cfg-if v0.1.9\n+  \u2502   \u2502   \u251c\u2500\u2500 mac v0.1.1\n+  \u2502   \u2502   \u2514\u2500\u2500 markup5ever v0.9.0\n+  \u2502   \u2502       \u251c\u2500\u2500 log v0.4.8 (*)\n+  \u2502   \u2502       \u251c\u2500\u2500 phf v0.7.24\n+  \u2502   \u2502       \u2502   \u2514\u2500\u2500 phf_shared v0.7.24\n+  \u2502   \u2502       \u2502       \u251c\u2500\u2500 siphasher v0.2.3\n+  \u2502   \u2502       \u2502       \u2514\u2500\u2500 unicase v1.4.2\n+  \u2502   \u2502       \u2502           [build-dependencies]\n+  \u2502   \u2502       \u2502           \u2514\u2500\u2500 version_check v0.1.5\n+  ...\n+  ```\n+\n+Misc\n+----\n+- [Rustdoc now allows you to specify `--crate-version` to have rustdoc include\n+  the version in the sidebar.][69494]\n+\n+Compatibility Notes\n+-------------------\n+- [Rustc now correctly generates static libraries on Windows GNU targets with\n+  the `.a` extension, rather than the previous `.lib`.][70937]\n+- [Removed the `-C no_integrated_as` flag from rustc.][70345]\n+- [The `file_name` property in JSON output of macro errors now points the actual\n+  source file rather than the previous format of `<NAME macros>`.][70969]\n+  **Note:** this may not point a file that actually exists on the user's system.\n+- [The minimum required external LLVM version has been bumped to LLVM 8.][71147]\n+- [`mem::{zeroed, uninitialised, MaybeUninit}` will now panic when used with types\n+  that do not allow zero initialization such as `NonZeroU8`.][66059] This was\n+  previously a warning.\n+- [In 1.45.0 (the next release) converting a `f64` to `u32` using the `as`\n+  operator has been defined as a saturating operation.][71269] This was previously\n+  undefined behaviour, you can use the `{f64, f32}::to_int_unchecked` methods to\n+  continue using the current behaviour which may desirable in rare performance\n+  sensitive situations.\n+\n+Internal Only\n+-------------\n+These changes provide no direct user facing benefits, but represent significant\n+improvements to the internals and overall performance of rustc and\n+related tools.\n+\n+- [dep_graph Avoid allocating a set on when the number reads are small.][69778]\n+- [Replace big JS dict with JSON parsing.][71250]\n+\n+[69373]: https://github.com/rust-lang/rust/pull/69373/\n+[66059]: https://github.com/rust-lang/rust/pull/66059/\n+[68191]: https://github.com/rust-lang/rust/pull/68191/\n+[68899]: https://github.com/rust-lang/rust/pull/68899/\n+[71147]: https://github.com/rust-lang/rust/pull/71147/\n+[71250]: https://github.com/rust-lang/rust/pull/71250/\n+[70937]: https://github.com/rust-lang/rust/pull/70937/\n+[70969]: https://github.com/rust-lang/rust/pull/70969/\n+[70632]: https://github.com/rust-lang/rust/pull/70632/\n+[70281]: https://github.com/rust-lang/rust/pull/70281/\n+[70345]: https://github.com/rust-lang/rust/pull/70345/\n+[70048]: https://github.com/rust-lang/rust/pull/70048/\n+[70081]: https://github.com/rust-lang/rust/pull/70081/\n+[70156]: https://github.com/rust-lang/rust/pull/70156/\n+[71269]: https://github.com/rust-lang/rust/pull/71269/\n+[69838]: https://github.com/rust-lang/rust/pull/69838/\n+[69929]: https://github.com/rust-lang/rust/pull/69929/\n+[69661]: https://github.com/rust-lang/rust/pull/69661/\n+[69778]: https://github.com/rust-lang/rust/pull/69778/\n+[69494]: https://github.com/rust-lang/rust/pull/69494/\n+[69403]: https://github.com/rust-lang/rust/pull/69403/\n+[69033]: https://github.com/rust-lang/rust/pull/69033/\n+[68692]: https://github.com/rust-lang/rust/pull/68692/\n+[68334]: https://github.com/rust-lang/rust/pull/68334/\n+[67502]: https://github.com/rust-lang/rust/pull/67502/\n+[cargo/8062]: https://github.com/rust-lang/cargo/pull/8062/\n+[`PathBuf::with_capacity`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.with_capacity\n+[`PathBuf::capacity`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.capacity\n+[`PathBuf::clear`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.clear\n+[`PathBuf::reserve`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.reserve\n+[`PathBuf::reserve_exact`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.reserve_exact\n+[`PathBuf::shrink_to_fit`]: https://doc.rust-lang.org/std/path/struct.PathBuf.html#method.shrink_to_fit\n+[`f32::to_int_unchecked`]: https://doc.rust-lang.org/std/primitive.f32.html#method.to_int_unchecked\n+[`f64::to_int_unchecked`]: https://doc.rust-lang.org/std/primitive.f64.html#method.to_int_unchecked\n+[`Layout::align_to`]: https://doc.rust-lang.org/std/alloc/struct.Layout.html#method.align_to\n+[`Layout::pad_to_align`]: https://doc.rust-lang.org/std/alloc/struct.Layout.html#method.pad_to_align\n+[`Layout::array`]: https://doc.rust-lang.org/std/alloc/struct.Layout.html#method.array\n+[`Layout::extend`]: https://doc.rust-lang.org/std/alloc/struct.Layout.html#method.extend\n+\n+\n Version 1.43.1 (2020-05-07)\n ===========================\n "}]}