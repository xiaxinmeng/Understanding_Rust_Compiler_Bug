{"sha": "6601ab9b1b569f81df9afa199de77cc205132e0e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY2MDFhYjliMWI1NjlmODFkZjlhZmExOTlkZTc3Y2MyMDUxMzJlMGU=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-08-11T05:35:01Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2017-08-11T05:35:01Z"}, "message": "Remove allocations", "tree": {"sha": "c2d3e266df575e1f09340a043de5da4600d87e59", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c2d3e266df575e1f09340a043de5da4600d87e59"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6601ab9b1b569f81df9afa199de77cc205132e0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6601ab9b1b569f81df9afa199de77cc205132e0e", "html_url": "https://github.com/rust-lang/rust/commit/6601ab9b1b569f81df9afa199de77cc205132e0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6601ab9b1b569f81df9afa199de77cc205132e0e/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be9c64b0c78401358a93b66e357d3bb094ba6274", "url": "https://api.github.com/repos/rust-lang/rust/commits/be9c64b0c78401358a93b66e357d3bb094ba6274", "html_url": "https://github.com/rust-lang/rust/commit/be9c64b0c78401358a93b66e357d3bb094ba6274"}], "stats": {"total": 10, "additions": 4, "deletions": 6}, "files": [{"sha": "2a310e1d5df78aa97bbc6b786f4a5d5d4dcff045", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/6601ab9b1b569f81df9afa199de77cc205132e0e/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6601ab9b1b569f81df9afa199de77cc205132e0e/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=6601ab9b1b569f81df9afa199de77cc205132e0e", "patch": "@@ -270,22 +270,20 @@ impl<'a, 'gcx, 'tcx> ClosureSubsts<'tcx> {\n     /// It is calculated in rustc_mir::transform::generator::StateTransform.\n     /// All the types here must be in the tuple in GeneratorInterior.\n     pub fn state_tys(self, def_id: DefId, tcx: TyCtxt<'a, 'gcx, 'tcx>) ->\n-        impl Iterator<Item=Ty<'tcx>> + 'tcx\n+        impl Iterator<Item=Ty<'tcx>> + 'a\n     {\n         let state = tcx.generator_layout(def_id).fields.iter();\n-        let state: Vec<_> = state.map(|d| d.ty.subst(tcx, self.substs)).collect();\n-        state.into_iter()\n+        state.map(move |d| d.ty.subst(tcx, self.substs))\n     }\n \n     /// This is the types of all the fields stored in a generator.\n     /// It includes the upvars, state types and the state discriminant which is u32.\n     pub fn field_tys(self, def_id: DefId, tcx: TyCtxt<'a, 'gcx, 'tcx>) ->\n-        impl Iterator<Item=Ty<'tcx>> + 'tcx\n+        impl Iterator<Item=Ty<'tcx>> + 'a\n     {\n         let upvars = self.upvar_tys(def_id, tcx);\n         let state = self.state_tys(def_id, tcx);\n-        let tys: Vec<_> = upvars.chain(iter::once(tcx.types.u32)).chain(state).collect();\n-        tys.into_iter()\n+        upvars.chain(iter::once(tcx.types.u32)).chain(state)\n     }\n }\n "}]}