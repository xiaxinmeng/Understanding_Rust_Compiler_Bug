{"sha": "e812da0ed050e2bfa7e12b6f35f077c6c3f19a1b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU4MTJkYTBlZDA1MGUyYmZhN2UxMmI2ZjM1ZjA3N2M2YzNmMTlhMWI=", "commit": {"author": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2018-02-16T11:20:54Z"}, "committer": {"name": "Stefan Schindler", "email": "dns2utf8@estada.ch", "date": "2018-02-16T11:20:54Z"}, "message": "Force the link to std::thread::yield_now()", "tree": {"sha": "295391c1d1d975809ed341e33d91429ec5289339", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/295391c1d1d975809ed341e33d91429ec5289339"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e812da0ed050e2bfa7e12b6f35f077c6c3f19a1b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e812da0ed050e2bfa7e12b6f35f077c6c3f19a1b", "html_url": "https://github.com/rust-lang/rust/commit/e812da0ed050e2bfa7e12b6f35f077c6c3f19a1b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e812da0ed050e2bfa7e12b6f35f077c6c3f19a1b/comments", "author": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dns2utf8", "id": 739070, "node_id": "MDQ6VXNlcjczOTA3MA==", "avatar_url": "https://avatars.githubusercontent.com/u/739070?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dns2utf8", "html_url": "https://github.com/dns2utf8", "followers_url": "https://api.github.com/users/dns2utf8/followers", "following_url": "https://api.github.com/users/dns2utf8/following{/other_user}", "gists_url": "https://api.github.com/users/dns2utf8/gists{/gist_id}", "starred_url": "https://api.github.com/users/dns2utf8/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dns2utf8/subscriptions", "organizations_url": "https://api.github.com/users/dns2utf8/orgs", "repos_url": "https://api.github.com/users/dns2utf8/repos", "events_url": "https://api.github.com/users/dns2utf8/events{/privacy}", "received_events_url": "https://api.github.com/users/dns2utf8/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bf989f4c945e91c2ff99ac66ef0f6405e975ff4", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bf989f4c945e91c2ff99ac66ef0f6405e975ff4", "html_url": "https://github.com/rust-lang/rust/commit/3bf989f4c945e91c2ff99ac66ef0f6405e975ff4"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "25827edee7d9343c0719fc30c4ebad784c35992e", "filename": "src/libcore/sync/atomic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e812da0ed050e2bfa7e12b6f35f077c6c3f19a1b/src%2Flibcore%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e812da0ed050e2bfa7e12b6f35f077c6c3f19a1b/src%2Flibcore%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fsync%2Fatomic.rs?ref=e812da0ed050e2bfa7e12b6f35f077c6c3f19a1b", "patch": "@@ -97,7 +97,7 @@ use fmt;\n /// Save power or switch hyperthreads in a busy-wait spin-loop.\n ///\n /// This function is deliberately more primitive than\n-/// [`std::thread::yield_now`](../../thread/fn.yield_now.html) and\n+/// [`std::thread::yield_now`](../../../std/thread/fn.yield_now.html) and\n /// does not directly yield to the system's scheduler.\n /// In some cases it might be useful to use a combination of both functions.\n /// Careful benchmarking is advised."}]}