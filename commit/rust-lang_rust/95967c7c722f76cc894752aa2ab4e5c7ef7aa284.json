{"sha": "95967c7c722f76cc894752aa2ab4e5c7ef7aa284", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1OTY3YzdjNzIyZjc2Y2M4OTQ3NTJhYTJhYjRlNWM3ZWY3YWEyODQ=", "commit": {"author": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-22T09:51:29Z"}, "committer": {"name": "kennytm", "email": "kennytm@gmail.com", "date": "2018-03-22T14:43:41Z"}, "message": "Rollup merge of #49188 - memoryleak47:macro_use_doctest, r=QuietMisdreavus\n\nPut `#[macro_use] extern crate <crate>` before fn main() in doctests\n\nCloses #49174.", "tree": {"sha": "71d76a392eaa68044dcd9bf31883d8dee09ef779", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/71d76a392eaa68044dcd9bf31883d8dee09ef779"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95967c7c722f76cc894752aa2ab4e5c7ef7aa284", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEZ1R8CLMp8f2GxWoQ/vbIBR0OATwFAlqzwR0ACgkQ/vbIBR0O\nATxKag/6An5xb8fjvObpSCFAlV5VEUjDl1JhE/+X4wdgrYEvw7HQkdL1CNpXi5uS\ngH7Hb3X7CrNmWVfm5TWVXjOCInhQ5jFfRvskfcTKRkQPgkE972vEBSeD4dYVm06A\nurOjTxy9mLzLUeARco3Oy7X00OgJjruKZDNm1c6/0VmBp+ovu3Gsfs9x1EjIHruj\n5ShMSZ3mu8mrtoY7vmZjH8a59v6wjtfhc+DWxkt6odihuUkDkR9JEW+GE44ExzYG\n4NzuYIgw9TAYKyWgBax+J8DQsNg4f7XYfVGHZ4GN0/BXC32tGVw74+Rm2qJq/VdC\nFzi/FhO0dCcD2nmRlW9gmuZwzSTtpUL70kJ24mpKBcpObLNI06icP0zonk94yUMs\nVQadj3jhtk+EJ8YTkfr4H00BEGuWEIB4VY4ecAfTJ7GraBR/bU3WvR8SZNtmGoNT\nFs4t44Wy0LU/vw2LXSTtIDecpb/IaySY2R8TFp1972torgNdmPVrTlSVjLPvA6y5\nQA9JnyXT4EUVhuZWBr91YFrYxuoMZiS6pkq6SP9NMfyikVojF4q9OsM0Nc2b1mCJ\nCpbhCGtemftfRymEDnm7773nCAdhkznCXDch9mgMFGkturSEVmUe3qrzndZnUYOO\nxgepmnzSONmn2QaA+YxLb/EzXEqn0Ol++EuRymQIIg5IWKuv1dQ=\n=HYDO\n-----END PGP SIGNATURE-----", "payload": "tree 71d76a392eaa68044dcd9bf31883d8dee09ef779\nparent c9457250ce35da790f1d57e38df348b4f4de0276\nparent 25c8210c01db12fb9edfd2481ca81c91934c4bbd\nauthor kennytm <kennytm@gmail.com> 1521712289 +0800\ncommitter kennytm <kennytm@gmail.com> 1521729821 +0800\n\nRollup merge of #49188 - memoryleak47:macro_use_doctest, r=QuietMisdreavus\n\nPut `#[macro_use] extern crate <crate>` before fn main() in doctests\n\nCloses #49174.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95967c7c722f76cc894752aa2ab4e5c7ef7aa284", "html_url": "https://github.com/rust-lang/rust/commit/95967c7c722f76cc894752aa2ab4e5c7ef7aa284", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95967c7c722f76cc894752aa2ab4e5c7ef7aa284/comments", "author": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kennytm", "id": 103023, "node_id": "MDQ6VXNlcjEwMzAyMw==", "avatar_url": "https://avatars.githubusercontent.com/u/103023?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kennytm", "html_url": "https://github.com/kennytm", "followers_url": "https://api.github.com/users/kennytm/followers", "following_url": "https://api.github.com/users/kennytm/following{/other_user}", "gists_url": "https://api.github.com/users/kennytm/gists{/gist_id}", "starred_url": "https://api.github.com/users/kennytm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kennytm/subscriptions", "organizations_url": "https://api.github.com/users/kennytm/orgs", "repos_url": "https://api.github.com/users/kennytm/repos", "events_url": "https://api.github.com/users/kennytm/events{/privacy}", "received_events_url": "https://api.github.com/users/kennytm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c9457250ce35da790f1d57e38df348b4f4de0276", "url": "https://api.github.com/repos/rust-lang/rust/commits/c9457250ce35da790f1d57e38df348b4f4de0276", "html_url": "https://github.com/rust-lang/rust/commit/c9457250ce35da790f1d57e38df348b4f4de0276"}, {"sha": "25c8210c01db12fb9edfd2481ca81c91934c4bbd", "url": "https://api.github.com/repos/rust-lang/rust/commits/25c8210c01db12fb9edfd2481ca81c91934c4bbd", "html_url": "https://github.com/rust-lang/rust/commit/25c8210c01db12fb9edfd2481ca81c91934c4bbd"}], "stats": {"total": 19, "additions": 19, "deletions": 0}, "files": [{"sha": "3ce8bd4ebb4c1002f70e891ff7cd78930f6c924a", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 19, "deletions": 0, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/95967c7c722f76cc894752aa2ab4e5c7ef7aa284/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95967c7c722f76cc894752aa2ab4e5c7ef7aa284/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=95967c7c722f76cc894752aa2ab4e5c7ef7aa284", "patch": "@@ -416,6 +416,7 @@ fn partition_source(s: &str) -> (String, String) {\n         let trimline = line.trim();\n         let header = trimline.is_whitespace() ||\n             trimline.starts_with(\"#![\") ||\n+            trimline.starts_with(\"#[macro_use] extern crate\") ||\n             trimline.starts_with(\"extern crate\");\n         if !header || after_header {\n             after_header = true;\n@@ -827,6 +828,24 @@ assert_eq!(2+2, 4);\n         assert_eq!(output, (expected, 2));\n     }\n \n+    #[test]\n+    fn make_test_manual_extern_crate_with_macro_use() {\n+        let opts = TestOptions::default();\n+        let input =\n+\"#[macro_use] extern crate asdf;\n+use asdf::qwop;\n+assert_eq!(2+2, 4);\";\n+        let expected =\n+\"#![allow(unused)]\n+#[macro_use] extern crate asdf;\n+fn main() {\n+use asdf::qwop;\n+assert_eq!(2+2, 4);\n+}\".to_string();\n+        let output = make_test(input, Some(\"asdf\"), false, &opts);\n+        assert_eq!(output, (expected, 2));\n+    }\n+\n     #[test]\n     fn make_test_opts_attrs() {\n         //if you supplied some doctest attributes with #![doc(test(attr(...)))], it will use those"}]}