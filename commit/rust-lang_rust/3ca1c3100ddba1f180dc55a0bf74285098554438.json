{"sha": "3ca1c3100ddba1f180dc55a0bf74285098554438", "node_id": "C_kwDOAAsO6NoAKDNjYTFjMzEwMGRkYmExZjE4MGRjNTVhMGJmNzQyODUwOTg1NTQ0Mzg", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-07-27T02:52:53Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-27T02:52:53Z"}, "message": "Rollup merge of #99698 - compiler-errors:no-doc-hidden, r=cjgillot\n\nPrefer visibility map parents that are not `doc(hidden)` first\n\nFar simpler approach to #98876.\n\nThis only fixes the case where the parent is `doc(hidden)`, not where the child is `doc(hidden)` since I don't know how to get the attrs on the import statement given a `ModChild`... I'll try to follow up with that, but this is a good first step.", "tree": {"sha": "ba6179d5bebe99533293b286793302835932c813", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ba6179d5bebe99533293b286793302835932c813"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ca1c3100ddba1f180dc55a0bf74285098554438", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi4KiFCRBK7hj4Ov3rIwAAqh0IAGOS6N5FCTj+XssaXC6gPBp9\n38SGmYMtJb8UK13YXfa+OLuKPpdNcyEF55nVfvD2jjU9dY8ynW3jYziaHnuRyjRb\n3jMy7u4pf6LP4+XLV5WlCI4FZ9nHS/StTz7oEt5Zmhj5db9D0ZrPy8vGWCg+53Pi\n5Pqg5OrcnyQ6AN8g8A6g3Q6XAIMgs1sR1IRo5/hP0YMV3a/o6vAeYAGhBQQSq8YZ\nfv8qzHvn5oRYU2GC/9LRGaLyFlbJORVFtySx43Fn+/dS8u0mwC15yHDQoxEq5dj5\nUvXujCQh52QPkvj4J1YPToNUCshGON1SRWAxHUGglXpgs2765E/i4NstJnxPrTg=\n=Y2xL\n-----END PGP SIGNATURE-----\n", "payload": "tree ba6179d5bebe99533293b286793302835932c813\nparent 1ff84f09b29effb82184cb62b99a4c721375ccc4\nparent 42a44191203e43c8fa7040992715aeb17476fb47\nauthor Yuki Okushi <jtitor@2k36.org> 1658890373 +0900\ncommitter GitHub <noreply@github.com> 1658890373 +0900\n\nRollup merge of #99698 - compiler-errors:no-doc-hidden, r=cjgillot\n\nPrefer visibility map parents that are not `doc(hidden)` first\n\nFar simpler approach to #98876.\n\nThis only fixes the case where the parent is `doc(hidden)`, not where the child is `doc(hidden)` since I don't know how to get the attrs on the import statement given a `ModChild`... I'll try to follow up with that, but this is a good first step.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ca1c3100ddba1f180dc55a0bf74285098554438", "html_url": "https://github.com/rust-lang/rust/commit/3ca1c3100ddba1f180dc55a0bf74285098554438", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ca1c3100ddba1f180dc55a0bf74285098554438/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ff84f09b29effb82184cb62b99a4c721375ccc4", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ff84f09b29effb82184cb62b99a4c721375ccc4", "html_url": "https://github.com/rust-lang/rust/commit/1ff84f09b29effb82184cb62b99a4c721375ccc4"}, {"sha": "42a44191203e43c8fa7040992715aeb17476fb47", "url": "https://api.github.com/repos/rust-lang/rust/commits/42a44191203e43c8fa7040992715aeb17476fb47", "html_url": "https://github.com/rust-lang/rust/commit/42a44191203e43c8fa7040992715aeb17476fb47"}], "stats": {"total": 89, "additions": 84, "deletions": 5}, "files": [{"sha": "6bf237b8ed5dfc5482e3fa76b1408b050768980b", "filename": "compiler/rustc_metadata/src/rmeta/decoder/cstore_impl.rs", "status": "modified", "additions": 15, "deletions": 5, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/3ca1c3100ddba1f180dc55a0bf74285098554438/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ca1c3100ddba1f180dc55a0bf74285098554438/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_metadata%2Fsrc%2Frmeta%2Fdecoder%2Fcstore_impl.rs?ref=3ca1c3100ddba1f180dc55a0bf74285098554438", "patch": "@@ -375,9 +375,13 @@ pub(in crate::rmeta) fn provide(providers: &mut Providers) {\n             use std::collections::vec_deque::VecDeque;\n \n             let mut visible_parent_map: DefIdMap<DefId> = Default::default();\n-            // This is a secondary visible_parent_map, storing the DefId of parents that re-export\n-            // the child as `_`. Since we prefer parents that don't do this, merge this map at the\n-            // end, only if we're missing any keys from the former.\n+            // This is a secondary visible_parent_map, storing the DefId of\n+            // parents that re-export the child as `_` or module parents\n+            // which are `#[doc(hidden)]`. Since we prefer paths that don't\n+            // do this, merge this map at the end, only if we're missing\n+            // keys from the former.\n+            // This is a rudimentary check that does not catch all cases,\n+            // just the easiest.\n             let mut fallback_map: DefIdMap<DefId> = Default::default();\n \n             // Issue 46112: We want the map to prefer the shortest\n@@ -412,6 +416,11 @@ pub(in crate::rmeta) fn provide(providers: &mut Providers) {\n                         return;\n                     }\n \n+                    if ty::util::is_doc_hidden(tcx, parent) {\n+                        fallback_map.insert(def_id, parent);\n+                        return;\n+                    }\n+\n                     match visible_parent_map.entry(def_id) {\n                         Entry::Occupied(mut entry) => {\n                             // If `child` is defined in crate `cnum`, ensure\n@@ -439,8 +448,9 @@ pub(in crate::rmeta) fn provide(providers: &mut Providers) {\n                 }\n             }\n \n-            // Fill in any missing entries with the (less preferable) path ending in `::_`.\n-            // We still use this path in a diagnostic that suggests importing `::*`.\n+            // Fill in any missing entries with the less preferable path.\n+            // If this path re-exports the child as `_`, we still use this\n+            // path in a diagnostic that suggests importing `::*`.\n             for (child, parent) in fallback_map {\n                 visible_parent_map.entry(child).or_insert(parent);\n             }"}, {"sha": "15e0af1de6446e9e0685e13e27396c87633da0d8", "filename": "src/test/ui/suggestions/dont-suggest-doc-hidden-variant-for-enum/auxiliary/hidden-child.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ca1c3100ddba1f180dc55a0bf74285098554438/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fauxiliary%2Fhidden-child.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ca1c3100ddba1f180dc55a0bf74285098554438/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fauxiliary%2Fhidden-child.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fauxiliary%2Fhidden-child.rs?ref=3ca1c3100ddba1f180dc55a0bf74285098554438", "patch": "@@ -0,0 +1,8 @@\n+#![crate_type = \"lib\"]\n+\n+extern crate core;\n+\n+pub mod __private {\n+    #[doc(hidden)]\n+    pub use core::option::Option::{self, None, Some};\n+}"}, {"sha": "5a5079d8204ac980a988d93235b6af1eabafc9b7", "filename": "src/test/ui/suggestions/dont-suggest-doc-hidden-variant-for-enum/auxiliary/hidden-parent.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3ca1c3100ddba1f180dc55a0bf74285098554438/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fauxiliary%2Fhidden-parent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ca1c3100ddba1f180dc55a0bf74285098554438/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fauxiliary%2Fhidden-parent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fauxiliary%2Fhidden-parent.rs?ref=3ca1c3100ddba1f180dc55a0bf74285098554438", "patch": "@@ -0,0 +1,8 @@\n+#![crate_type = \"lib\"]\n+\n+extern crate core;\n+\n+#[doc(hidden)]\n+pub mod __private {\n+    pub use core::option::Option::{self, None, Some};\n+}"}, {"sha": "38dabc9d71ff7de70c3efb51c0a15638f60be22a", "filename": "src/test/ui/suggestions/dont-suggest-doc-hidden-variant-for-enum/hidden-child.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/3ca1c3100ddba1f180dc55a0bf74285098554438/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fhidden-child.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ca1c3100ddba1f180dc55a0bf74285098554438/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fhidden-child.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fhidden-child.rs?ref=3ca1c3100ddba1f180dc55a0bf74285098554438", "patch": "@@ -0,0 +1,10 @@\n+// aux-build:hidden-child.rs\n+\n+// FIXME(compiler-errors): This currently suggests the wrong thing.\n+// UI test exists to track the problem.\n+\n+extern crate hidden_child;\n+\n+fn main() {\n+    let x: Option<i32> = 1i32; //~ ERROR mismatched types\n+}"}, {"sha": "67f4ac08de2c58b0e2189c9f581aa489b4b97bbc", "filename": "src/test/ui/suggestions/dont-suggest-doc-hidden-variant-for-enum/hidden-child.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3ca1c3100ddba1f180dc55a0bf74285098554438/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fhidden-child.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ca1c3100ddba1f180dc55a0bf74285098554438/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fhidden-child.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fhidden-child.stderr?ref=3ca1c3100ddba1f180dc55a0bf74285098554438", "patch": "@@ -0,0 +1,18 @@\n+error[E0308]: mismatched types\n+  --> $DIR/hidden-child.rs:9:26\n+   |\n+LL |     let x: Option<i32> = 1i32;\n+   |            -----------   ^^^^ expected enum `Option`, found `i32`\n+   |            |\n+   |            expected due to this\n+   |\n+   = note: expected enum `Option<i32>`\n+              found type `i32`\n+help: try wrapping the expression in `hidden_child::__private::Some`\n+   |\n+LL |     let x: Option<i32> = hidden_child::__private::Some(1i32);\n+   |                          ++++++++++++++++++++++++++++++    +\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}, {"sha": "4d96d6c16cba0f5e2ddcc2b862fcb158977286b4", "filename": "src/test/ui/suggestions/dont-suggest-doc-hidden-variant-for-enum/hidden-parent.rs", "status": "added", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3ca1c3100ddba1f180dc55a0bf74285098554438/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fhidden-parent.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ca1c3100ddba1f180dc55a0bf74285098554438/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fhidden-parent.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fhidden-parent.rs?ref=3ca1c3100ddba1f180dc55a0bf74285098554438", "patch": "@@ -0,0 +1,7 @@\n+// aux-build:hidden-parent.rs\n+\n+extern crate hidden_parent;\n+\n+fn main() {\n+    let x: Option<i32> = 1i32; //~ ERROR mismatched types\n+}"}, {"sha": "d92b8127910141c9a703d6afd543a1148dfa8773", "filename": "src/test/ui/suggestions/dont-suggest-doc-hidden-variant-for-enum/hidden-parent.stderr", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/3ca1c3100ddba1f180dc55a0bf74285098554438/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fhidden-parent.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/3ca1c3100ddba1f180dc55a0bf74285098554438/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fhidden-parent.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fdont-suggest-doc-hidden-variant-for-enum%2Fhidden-parent.stderr?ref=3ca1c3100ddba1f180dc55a0bf74285098554438", "patch": "@@ -0,0 +1,18 @@\n+error[E0308]: mismatched types\n+  --> $DIR/hidden-parent.rs:6:26\n+   |\n+LL |     let x: Option<i32> = 1i32;\n+   |            -----------   ^^^^ expected enum `Option`, found `i32`\n+   |            |\n+   |            expected due to this\n+   |\n+   = note: expected enum `Option<i32>`\n+              found type `i32`\n+help: try wrapping the expression in `Some`\n+   |\n+LL |     let x: Option<i32> = Some(1i32);\n+   |                          +++++    +\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0308`."}]}