{"sha": "d7ef0b30e89960aede88bf450e4a2172332432e0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3ZWYwYjMwZTg5OTYwYWVkZTg4YmY0NTBlNGEyMTcyMzMyNDMyZTA=", "commit": {"author": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-09-01T11:39:48Z"}, "committer": {"name": "bjorn3", "email": "bjorn3@users.noreply.github.com", "date": "2021-09-08T16:25:47Z"}, "message": "Use Lrc instead of Option to avoid duplication of a SearchPath", "tree": {"sha": "77c588a1157843b4b50bb60a96b16bc99f4faec5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/77c588a1157843b4b50bb60a96b16bc99f4faec5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7ef0b30e89960aede88bf450e4a2172332432e0", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7ef0b30e89960aede88bf450e4a2172332432e0", "html_url": "https://github.com/rust-lang/rust/commit/d7ef0b30e89960aede88bf450e4a2172332432e0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7ef0b30e89960aede88bf450e4a2172332432e0/comments", "author": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bjorn3", "id": 17426603, "node_id": "MDQ6VXNlcjE3NDI2NjAz", "avatar_url": "https://avatars.githubusercontent.com/u/17426603?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bjorn3", "html_url": "https://github.com/bjorn3", "followers_url": "https://api.github.com/users/bjorn3/followers", "following_url": "https://api.github.com/users/bjorn3/following{/other_user}", "gists_url": "https://api.github.com/users/bjorn3/gists{/gist_id}", "starred_url": "https://api.github.com/users/bjorn3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bjorn3/subscriptions", "organizations_url": "https://api.github.com/users/bjorn3/orgs", "repos_url": "https://api.github.com/users/bjorn3/repos", "events_url": "https://api.github.com/users/bjorn3/events{/privacy}", "received_events_url": "https://api.github.com/users/bjorn3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58000ed0e9152e331dc7c7319c7783cc7f028f84", "url": "https://api.github.com/repos/rust-lang/rust/commits/58000ed0e9152e331dc7c7319c7783cc7f028f84", "html_url": "https://github.com/rust-lang/rust/commit/58000ed0e9152e331dc7c7319c7783cc7f028f84"}], "stats": {"total": 21, "additions": 9, "deletions": 12}, "files": [{"sha": "4c6a2baaef1e512972460433edf13ae172d8b5fd", "filename": "compiler/rustc_driver/src/lib.rs", "status": "modified", "additions": 1, "deletions": 4, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d7ef0b30e89960aede88bf450e4a2172332432e0/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7ef0b30e89960aede88bf450e4a2172332432e0/compiler%2Frustc_driver%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_driver%2Fsrc%2Flib.rs?ref=d7ef0b30e89960aede88bf450e4a2172332432e0", "patch": "@@ -677,10 +677,7 @@ impl RustcDefaultCalls {\n                     println!(\"{}\", targets.join(\"\\n\"));\n                 }\n                 Sysroot => println!(\"{}\", sess.sysroot.display()),\n-                TargetLibdir => println!(\n-                    \"{}\",\n-                    sess.target_tlib_path.as_ref().unwrap_or(&sess.host_tlib_path).dir.display()\n-                ),\n+                TargetLibdir => println!(\"{}\", sess.target_tlib_path.dir.display()),\n                 TargetSpec => println!(\"{}\", sess.target.to_json().pretty()),\n                 FileNames | CrateName => {\n                     let input = input.unwrap_or_else(|| {"}, {"sha": "58ea29c080f3bad2897ea927e8cdf7623def2377", "filename": "compiler/rustc_session/src/session.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/d7ef0b30e89960aede88bf450e4a2172332432e0/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7ef0b30e89960aede88bf450e4a2172332432e0/compiler%2Frustc_session%2Fsrc%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_session%2Fsrc%2Fsession.rs?ref=d7ef0b30e89960aede88bf450e4a2172332432e0", "patch": "@@ -131,9 +131,8 @@ pub struct Session {\n     pub target: Target,\n     pub host: Target,\n     pub opts: config::Options,\n-    pub host_tlib_path: SearchPath,\n-    /// `None` if the host and target are the same.\n-    pub target_tlib_path: Option<SearchPath>,\n+    pub host_tlib_path: Lrc<SearchPath>,\n+    pub target_tlib_path: Lrc<SearchPath>,\n     pub parse_sess: ParseSess,\n     pub sysroot: PathBuf,\n     /// The name of the root source file of the crate, in the local file system.\n@@ -784,8 +783,7 @@ impl Session {\n             &self.sysroot,\n             self.opts.target_triple.triple(),\n             &self.opts.search_paths,\n-            // `target_tlib_path == None` means it's the same as `host_tlib_path`.\n-            self.target_tlib_path.as_ref().unwrap_or(&self.host_tlib_path),\n+            &self.target_tlib_path,\n             kind,\n         )\n     }\n@@ -1254,11 +1252,13 @@ pub fn build_session(\n \n     let host_triple = config::host_triple();\n     let target_triple = sopts.target_triple.triple();\n-    let host_tlib_path = SearchPath::from_sysroot_and_triple(&sysroot, host_triple);\n+    let host_tlib_path = Lrc::new(SearchPath::from_sysroot_and_triple(&sysroot, host_triple));\n     let target_tlib_path = if host_triple == target_triple {\n-        None\n+        // Use the same `SearchPath` if host and target triple are identical to avoid unnecessary\n+        // rescanning of the target lib path and an unnecessary allocation.\n+        host_tlib_path.clone()\n     } else {\n-        Some(SearchPath::from_sysroot_and_triple(&sysroot, target_triple))\n+        Lrc::new(SearchPath::from_sysroot_and_triple(&sysroot, target_triple))\n     };\n \n     let file_path_mapping = sopts.file_path_mapping();"}]}