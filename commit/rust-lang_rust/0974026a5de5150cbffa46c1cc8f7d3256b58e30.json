{"sha": "0974026a5de5150cbffa46c1cc8f7d3256b58e30", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA5NzQwMjZhNWRlNTE1MGNiZmZhNDZjMWNjOGY3ZDMyNTZiNThlMzA=", "commit": {"author": {"name": "rodrimati1992", "email": "rodrimatt1985@gmail.com", "date": "2021-01-31T04:37:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-01-31T04:37:48Z"}, "message": "Removed trailing whitespace", "tree": {"sha": "302a14d3c9b96931d85a15bb7f96ecba1b13bd4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/302a14d3c9b96931d85a15bb7f96ecba1b13bd4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0974026a5de5150cbffa46c1cc8f7d3256b58e30", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgFjQcCRBK7hj4Ov3rIwAAdHIIAIQOb8Z7hAB3U4Y1BaD1yR6N\nqKJGQg1botD2dBBeseP8po2eD+k3Et4LsW8EVHTGitRZWnzHIgefTSOTc/25Ba91\nNB8F9guV5gHIAL9yeMWsIfdbzvAlyDixQeF7hVQV68H/NWFTl1FpiKjHdHoEEyA0\n1fZgJHnUclsZQ8HPNc3hW6/iVfWhXIY67s1ud6eQyipnmpT4osrtv5D3vI6c9sQ5\nb1gztVKr47pnwsjrMckMxZbc189Bd0FLIrdRIc4xU6eInlgz5JytCSiNV2ypwRYV\nwTjkmFX43EGBJ/AyG75fHlfeeriUWAyzKaIwAZtLFgWE3cl6d0yrfJDkHm31YQU=\n=7yk9\n-----END PGP SIGNATURE-----\n", "payload": "tree 302a14d3c9b96931d85a15bb7f96ecba1b13bd4e\nparent c351107cdc378dec4f855c29a3566fbd1d2ac358\nauthor rodrimati1992 <rodrimatt1985@gmail.com> 1612067868 -0300\ncommitter GitHub <noreply@github.com> 1612067868 -0300\n\nRemoved trailing whitespace"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0974026a5de5150cbffa46c1cc8f7d3256b58e30", "html_url": "https://github.com/rust-lang/rust/commit/0974026a5de5150cbffa46c1cc8f7d3256b58e30", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0974026a5de5150cbffa46c1cc8f7d3256b58e30/comments", "author": {"login": "rodrimati1992", "id": 18036327, "node_id": "MDQ6VXNlcjE4MDM2MzI3", "avatar_url": "https://avatars.githubusercontent.com/u/18036327?v=4", "gravatar_id": "", "url": "https://api.github.com/users/rodrimati1992", "html_url": "https://github.com/rodrimati1992", "followers_url": "https://api.github.com/users/rodrimati1992/followers", "following_url": "https://api.github.com/users/rodrimati1992/following{/other_user}", "gists_url": "https://api.github.com/users/rodrimati1992/gists{/gist_id}", "starred_url": "https://api.github.com/users/rodrimati1992/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/rodrimati1992/subscriptions", "organizations_url": "https://api.github.com/users/rodrimati1992/orgs", "repos_url": "https://api.github.com/users/rodrimati1992/repos", "events_url": "https://api.github.com/users/rodrimati1992/events{/privacy}", "received_events_url": "https://api.github.com/users/rodrimati1992/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c351107cdc378dec4f855c29a3566fbd1d2ac358", "url": "https://api.github.com/repos/rust-lang/rust/commits/c351107cdc378dec4f855c29a3566fbd1d2ac358", "html_url": "https://github.com/rust-lang/rust/commit/c351107cdc378dec4f855c29a3566fbd1d2ac358"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "3be730a35cedc1f53c671da626c1a7bdd1ceb157", "filename": "library/core/src/mem/maybe_uninit.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/0974026a5de5150cbffa46c1cc8f7d3256b58e30/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0974026a5de5150cbffa46c1cc8f7d3256b58e30/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs?ref=0974026a5de5150cbffa46c1cc8f7d3256b58e30", "patch": "@@ -173,32 +173,32 @@ use crate::ptr;\n /// ## Initializing a struct field-by-field\n ///\n /// You can use `MaybeUninit<T>`, and the [`std::ptr::addr_of_mut`] macro, to initialize structs field by field:\n-/// \n+///\n /// ```rust\n /// use std::mem::MaybeUninit;\n /// use std::ptr::addr_of_mut;\n-/// \n+///\n /// #[derive(Debug, PartialEq)]\n /// pub struct Foo {\n ///     name: String,\n ///     list: Vec<u8>,\n /// }\n-/// \n+///\n /// let foo = {\n ///     let mut uninit: MaybeUninit<Foo> = MaybeUninit::uninit();\n ///     let ptr = uninit.as_mut_ptr();\n-/// \n+///\n ///     // Initializing the `name` field\n ///     unsafe { addr_of_mut!((*ptr).name).write(\"Bob\".to_string()); }\n-/// \n+///\n ///     // Initializing the `list` field\n ///     // If there was a panic here, then the `String` in the `name` field would be leaked.\n ///     unsafe { addr_of_mut!((*ptr).list).write(vec![0, 1, 2]); }\n-/// \n+///\n ///     // All the fields are initialized, so we call `assume_init` to get an initialized Foo.\n ///     unsafe { uninit.assume_init() }\n /// };\n-/// \n+///\n /// assert_eq!(\n ///     foo,\n ///     Foo {"}]}