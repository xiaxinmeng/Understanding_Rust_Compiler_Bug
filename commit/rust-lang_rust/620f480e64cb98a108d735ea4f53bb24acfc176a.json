{"sha": "620f480e64cb98a108d735ea4f53bb24acfc176a", "node_id": "C_kwDOAAsO6NoAKDYyMGY0ODBlNjRjYjk4YTEwOGQ3MzVlYTRmNTNiYjI0YWNmYzE3NmE", "commit": {"author": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-09-26T15:30:39Z"}, "committer": {"name": "Takayuki Maeda", "email": "takoyaki0316@gmail.com", "date": "2021-09-26T15:30:39Z"}, "message": "better suggestions", "tree": {"sha": "97509e93f5b64acd926dc365696449ca114779a5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/97509e93f5b64acd926dc365696449ca114779a5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/620f480e64cb98a108d735ea4f53bb24acfc176a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/620f480e64cb98a108d735ea4f53bb24acfc176a", "html_url": "https://github.com/rust-lang/rust/commit/620f480e64cb98a108d735ea4f53bb24acfc176a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/620f480e64cb98a108d735ea4f53bb24acfc176a/comments", "author": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "committer": {"login": "TaKO8Ki", "id": 41065217, "node_id": "MDQ6VXNlcjQxMDY1MjE3", "avatar_url": "https://avatars.githubusercontent.com/u/41065217?v=4", "gravatar_id": "", "url": "https://api.github.com/users/TaKO8Ki", "html_url": "https://github.com/TaKO8Ki", "followers_url": "https://api.github.com/users/TaKO8Ki/followers", "following_url": "https://api.github.com/users/TaKO8Ki/following{/other_user}", "gists_url": "https://api.github.com/users/TaKO8Ki/gists{/gist_id}", "starred_url": "https://api.github.com/users/TaKO8Ki/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/TaKO8Ki/subscriptions", "organizations_url": "https://api.github.com/users/TaKO8Ki/orgs", "repos_url": "https://api.github.com/users/TaKO8Ki/repos", "events_url": "https://api.github.com/users/TaKO8Ki/events{/privacy}", "received_events_url": "https://api.github.com/users/TaKO8Ki/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e2aad3fe60ff97fc0d0d1a68a97211918c40b100", "url": "https://api.github.com/repos/rust-lang/rust/commits/e2aad3fe60ff97fc0d0d1a68a97211918c40b100", "html_url": "https://github.com/rust-lang/rust/commit/e2aad3fe60ff97fc0d0d1a68a97211918c40b100"}], "stats": {"total": 123, "additions": 70, "deletions": 53}, "files": [{"sha": "2a51e01471398861252d3b3d96fdf31f88d40154", "filename": "compiler/rustc_trait_selection/src/traits/error_reporting/suggestions.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/620f480e64cb98a108d735ea4f53bb24acfc176a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/620f480e64cb98a108d735ea4f53bb24acfc176a/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Ferror_reporting%2Fsuggestions.rs?ref=620f480e64cb98a108d735ea4f53bb24acfc176a", "patch": "@@ -781,19 +781,19 @@ impl<'a, 'tcx> InferCtxtExt<'tcx> for InferCtxt<'a, 'tcx> {\n \n                         if imm_result && mut_result {\n                             err.span_suggestions(\n-                                span,\n+                                span.shrink_to_lo(),\n                                 \"consider borrowing here\",\n-                                [format!(\"&{}\", snippet), format!(\"&mut {}\", snippet)].into_iter(),\n+                                [\"&\".to_string(), \"&mut \".to_string()].into_iter(),\n                                 Applicability::MaybeIncorrect,\n                             );\n                         } else {\n-                            err.span_suggestion(\n-                                span,\n+                            err.span_suggestion_verbose(\n+                                span.shrink_to_lo(),\n                                 &format!(\n                                     \"consider{} borrowing here\",\n                                     if mut_result { \" mutably\" } else { \"\" }\n                                 ),\n-                                format!(\"&{}{}\", if mut_result { \"mut \" } else { \"\" }, snippet),\n+                                format!(\"&{}\", if mut_result { \"mut \" } else { \"\" }),\n                                 Applicability::MaybeIncorrect,\n                             );\n                         }"}, {"sha": "1d0554ad0477fe28db53563b08749dfeb00693a0", "filename": "src/test/ui/derives/deriving-copyclone.stderr", "status": "modified", "additions": 18, "deletions": 12, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fderives%2Fderiving-copyclone.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fderives%2Fderiving-copyclone.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderiving-copyclone.stderr?ref=620f480e64cb98a108d735ea4f53bb24acfc176a", "patch": "@@ -2,10 +2,8 @@ error[E0277]: the trait bound `C: Copy` is not satisfied\n   --> $DIR/deriving-copyclone.rs:31:13\n    |\n LL |     is_copy(B { a: 1, b: C });\n-   |     ------- ^^^^^^^^^^^^^^^^\n-   |     |       |\n-   |     |       expected an implementor of trait `Copy`\n-   |     |       help: consider borrowing here: `&B { a: 1, b: C }`\n+   |     ------- ^^^^^^^^^^^^^^^^ expected an implementor of trait `Copy`\n+   |     |\n    |     required by a bound introduced by this call\n    |\n note: required because of the requirements on the impl of `Copy` for `B<C>`\n@@ -19,15 +17,17 @@ note: required by a bound in `is_copy`\n LL | fn is_copy<T: Copy>(_: T) {}\n    |               ^^^^ required by this bound in `is_copy`\n    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)\n+help: consider borrowing here\n+   |\n+LL |     is_copy(&B { a: 1, b: C });\n+   |             +\n \n error[E0277]: the trait bound `C: Clone` is not satisfied\n   --> $DIR/deriving-copyclone.rs:32:14\n    |\n LL |     is_clone(B { a: 1, b: C });\n-   |     -------- ^^^^^^^^^^^^^^^^\n-   |     |        |\n-   |     |        expected an implementor of trait `Clone`\n-   |     |        help: consider borrowing here: `&B { a: 1, b: C }`\n+   |     -------- ^^^^^^^^^^^^^^^^ expected an implementor of trait `Clone`\n+   |     |\n    |     required by a bound introduced by this call\n    |\n note: required because of the requirements on the impl of `Clone` for `B<C>`\n@@ -41,15 +41,17 @@ note: required by a bound in `is_clone`\n LL | fn is_clone<T: Clone>(_: T) {}\n    |                ^^^^^ required by this bound in `is_clone`\n    = note: this error originates in the derive macro `Clone` (in Nightly builds, run with -Z macro-backtrace for more info)\n+help: consider borrowing here\n+   |\n+LL |     is_clone(&B { a: 1, b: C });\n+   |              +\n \n error[E0277]: the trait bound `D: Copy` is not satisfied\n   --> $DIR/deriving-copyclone.rs:35:13\n    |\n LL |     is_copy(B { a: 1, b: D });\n-   |     ------- ^^^^^^^^^^^^^^^^\n-   |     |       |\n-   |     |       expected an implementor of trait `Copy`\n-   |     |       help: consider borrowing here: `&B { a: 1, b: D }`\n+   |     ------- ^^^^^^^^^^^^^^^^ expected an implementor of trait `Copy`\n+   |     |\n    |     required by a bound introduced by this call\n    |\n note: required because of the requirements on the impl of `Copy` for `B<D>`\n@@ -63,6 +65,10 @@ note: required by a bound in `is_copy`\n LL | fn is_copy<T: Copy>(_: T) {}\n    |               ^^^^ required by this bound in `is_copy`\n    = note: this error originates in the derive macro `Copy` (in Nightly builds, run with -Z macro-backtrace for more info)\n+help: consider borrowing here\n+   |\n+LL |     is_copy(&B { a: 1, b: D });\n+   |             +\n \n error: aborting due to 3 previous errors\n "}, {"sha": "5a67aead75a73d44f9de286329e756c0d393b76f", "filename": "src/test/ui/issues/issue-20605.stderr", "status": "modified", "additions": 5, "deletions": 4, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fissues%2Fissue-20605.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fissues%2Fissue-20605.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-20605.stderr?ref=620f480e64cb98a108d735ea4f53bb24acfc176a", "patch": "@@ -2,10 +2,7 @@ error[E0277]: the size for values of type `dyn Iterator<Item = &'a mut u8>` cann\n   --> $DIR/issue-20605.rs:2:17\n    |\n LL |     for item in *things { *item = 0 }\n-   |                 ^^^^^^^\n-   |                 |\n-   |                 expected an implementor of trait `IntoIterator`\n-   |                 help: consider mutably borrowing here: `&mut *things`\n+   |                 ^^^^^^^ expected an implementor of trait `IntoIterator`\n    |\n    = note: the trait bound `dyn Iterator<Item = &'a mut u8>: IntoIterator` is not satisfied\n    = note: required because of the requirements on the impl of `IntoIterator` for `dyn Iterator<Item = &'a mut u8>`\n@@ -14,6 +11,10 @@ note: required by `into_iter`\n    |\n LL |     fn into_iter(self) -> Self::IntoIter;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider mutably borrowing here\n+   |\n+LL |     for item in &mut *things { *item = 0 }\n+   |                 ++++\n \n error: aborting due to previous error\n "}, {"sha": "001af27b2484e9415844e8a628579f54c5fb4e47", "filename": "src/test/ui/suggestions/imm-ref-trait-object-literal.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fsuggestions%2Fimm-ref-trait-object-literal.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fsuggestions%2Fimm-ref-trait-object-literal.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimm-ref-trait-object-literal.stderr?ref=620f480e64cb98a108d735ea4f53bb24acfc176a", "patch": "@@ -22,17 +22,19 @@ error[E0277]: the trait bound `S: Trait` is not satisfied\n   --> $DIR/imm-ref-trait-object-literal.rs:13:7\n    |\n LL |   foo(s);\n-   |   --- ^\n-   |   |   |\n-   |   |   expected an implementor of trait `Trait`\n-   |   |   help: consider mutably borrowing here: `&mut s`\n+   |   --- ^ expected an implementor of trait `Trait`\n+   |   |\n    |   required by a bound introduced by this call\n    |\n note: required by a bound in `foo`\n   --> $DIR/imm-ref-trait-object-literal.rs:7:11\n    |\n LL | fn foo<X: Trait>(_: X) {}\n    |           ^^^^^ required by this bound in `foo`\n+help: consider mutably borrowing here\n+   |\n+LL |   foo(&mut s);\n+   |       ++++\n \n error: aborting due to 2 previous errors\n "}, {"sha": "2c54ea6724505f9217ec07e9aebe5423c8c5b826", "filename": "src/test/ui/suggestions/issue-84973-2.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84973-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84973-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84973-2.stderr?ref=620f480e64cb98a108d735ea4f53bb24acfc176a", "patch": "@@ -2,17 +2,19 @@ error[E0277]: the trait bound `i32: Tr` is not satisfied\n   --> $DIR/issue-84973-2.rs:11:9\n    |\n LL |     foo(a);\n-   |     --- ^\n-   |     |   |\n-   |     |   expected an implementor of trait `Tr`\n-   |     |   help: consider mutably borrowing here: `&mut a`\n+   |     --- ^ expected an implementor of trait `Tr`\n+   |     |\n    |     required by a bound introduced by this call\n    |\n note: required by a bound in `foo`\n   --> $DIR/issue-84973-2.rs:7:11\n    |\n LL | fn foo<T: Tr>(i: T) {}\n    |           ^^ required by this bound in `foo`\n+help: consider mutably borrowing here\n+   |\n+LL |     foo(&mut a);\n+   |         ++++\n \n error: aborting due to previous error\n "}, {"sha": "1f33374eb29dbf9c050c88e5fa4babd9c4a61a92", "filename": "src/test/ui/suggestions/issue-84973-negative.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84973-negative.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84973-negative.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84973-negative.stderr?ref=620f480e64cb98a108d735ea4f53bb24acfc176a", "patch": "@@ -16,17 +16,19 @@ error[E0277]: the trait bound `f32: Tr` is not satisfied\n   --> $DIR/issue-84973-negative.rs:11:9\n    |\n LL |     bar(b);\n-   |     --- ^\n-   |     |   |\n-   |     |   expected an implementor of trait `Tr`\n-   |     |   help: consider borrowing here: `&b`\n+   |     --- ^ expected an implementor of trait `Tr`\n+   |     |\n    |     required by a bound introduced by this call\n    |\n note: required by a bound in `bar`\n   --> $DIR/issue-84973-negative.rs:5:11\n    |\n LL | fn bar<T: Tr>(t: T) {}\n    |           ^^ required by this bound in `bar`\n+help: consider borrowing here\n+   |\n+LL |     bar(&b);\n+   |         +\n \n error: aborting due to 2 previous errors\n "}, {"sha": "16a28c73aa7247db0184c755bfb8ab880f9359d1", "filename": "src/test/ui/suggestions/issue-84973.stderr", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84973.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84973.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fissue-84973.stderr?ref=620f480e64cb98a108d735ea4f53bb24acfc176a", "patch": "@@ -2,17 +2,19 @@ error[E0277]: the trait bound `Fancy: SomeTrait` is not satisfied\n   --> $DIR/issue-84973.rs:6:24\n    |\n LL |     let o = Other::new(f);\n-   |             ---------- ^\n-   |             |          |\n-   |             |          expected an implementor of trait `SomeTrait`\n-   |             |          help: consider borrowing here: `&f`\n+   |             ---------- ^ expected an implementor of trait `SomeTrait`\n+   |             |\n    |             required by a bound introduced by this call\n    |\n note: required by `Other::<'a, G>::new`\n   --> $DIR/issue-84973.rs:27:5\n    |\n LL |     pub fn new(g: G) -> Self {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^\n+help: consider borrowing here\n+   |\n+LL |     let o = Other::new(&f);\n+   |                        +\n \n error: aborting due to previous error\n "}, {"sha": "0275fd475d8c6a1f5363b5ba7a807884a90c6fa2", "filename": "src/test/ui/suggestions/slice-issue-87994.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fsuggestions%2Fslice-issue-87994.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fsuggestions%2Fslice-issue-87994.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fslice-issue-87994.stderr?ref=620f480e64cb98a108d735ea4f53bb24acfc176a", "patch": "@@ -14,9 +14,9 @@ LL |     fn into_iter(self) -> Self::IntoIter;\n help: consider borrowing here\n    |\n LL |   for _ in &v[1..] {\n-   |            ~~~~~~~\n+   |            +\n LL |   for _ in &mut v[1..] {\n-   |            ~~~~~~~~~~~\n+   |            ++++\n \n error[E0277]: `[i32]` is not an iterator\n   --> $DIR/slice-issue-87994.rs:3:12\n@@ -34,9 +34,9 @@ LL |     fn into_iter(self) -> Self::IntoIter;\n help: consider borrowing here\n    |\n LL |   for _ in &v[1..] {\n-   |            ~~~~~~~\n+   |            +\n LL |   for _ in &mut v[1..] {\n-   |            ~~~~~~~~~~~\n+   |            ++++\n \n error[E0277]: the size for values of type `[K]` cannot be known at compilation time\n   --> $DIR/slice-issue-87994.rs:11:13\n@@ -54,9 +54,9 @@ LL |     fn into_iter(self) -> Self::IntoIter;\n help: consider borrowing here\n    |\n LL |   for i2 in &v2[1..] {\n-   |             ~~~~~~~~\n+   |             +\n LL |   for i2 in &mut v2[1..] {\n-   |             ~~~~~~~~~~~~\n+   |             ++++\n \n error[E0277]: `[K]` is not an iterator\n   --> $DIR/slice-issue-87994.rs:11:13\n@@ -74,9 +74,9 @@ LL |     fn into_iter(self) -> Self::IntoIter;\n help: consider borrowing here\n    |\n LL |   for i2 in &v2[1..] {\n-   |             ~~~~~~~~\n+   |             +\n LL |   for i2 in &mut v2[1..] {\n-   |             ~~~~~~~~~~~~\n+   |             ++++\n \n error: aborting due to 4 previous errors\n "}, {"sha": "d31c1e6ccee267ee9aae22c461d2d0fa455170c2", "filename": "src/test/ui/suggestions/suggest-both-imm-and-mut-trait-implementation.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-both-imm-and-mut-trait-implementation.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-both-imm-and-mut-trait-implementation.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fsuggest-both-imm-and-mut-trait-implementation.stderr?ref=620f480e64cb98a108d735ea4f53bb24acfc176a", "patch": "@@ -14,9 +14,9 @@ LL | fn foo<X: Trait>(_: X) {}\n help: consider borrowing here\n    |\n LL |     foo(&s);\n-   |         ~~\n+   |         +\n LL |     foo(&mut s);\n-   |         ~~~~~~\n+   |         ++++\n \n error: aborting due to previous error\n "}, {"sha": "8059a8ca71e43b0697eda08692317a7f2c6564f2", "filename": "src/test/ui/traits/negative-impls/negated-auto-traits-error.stderr", "status": "modified", "additions": 8, "deletions": 6, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fnegated-auto-traits-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/620f480e64cb98a108d735ea4f53bb24acfc176a/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fnegated-auto-traits-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fnegative-impls%2Fnegated-auto-traits-error.stderr?ref=620f480e64cb98a108d735ea4f53bb24acfc176a", "patch": "@@ -61,10 +61,8 @@ error[E0277]: `dummy2::TestType` cannot be sent between threads safely\n   --> $DIR/negated-auto-traits-error.rs:48:13\n    |\n LL |     is_send(Box::new(TestType));\n-   |     ------- ^^^^^^^^^^^^^^^^^^\n-   |     |       |\n-   |     |       expected an implementor of trait `Send`\n-   |     |       help: consider borrowing here: `&Box::new(TestType)`\n+   |     ------- ^^^^^^^^^^^^^^^^^^ expected an implementor of trait `Send`\n+   |     |\n    |     required by a bound introduced by this call\n    |\n    = note: the trait bound `dummy2::TestType: Send` is not satisfied\n@@ -75,6 +73,10 @@ note: required by a bound in `is_send`\n    |\n LL | fn is_send<T: Send>(_: T) {}\n    |               ^^^^ required by this bound in `is_send`\n+help: consider borrowing here\n+   |\n+LL |     is_send(&Box::new(TestType));\n+   |             +\n \n error[E0277]: `dummy3::TestType` cannot be sent between threads safely\n   --> $DIR/negated-auto-traits-error.rs:56:13\n@@ -120,9 +122,9 @@ LL | fn is_sync<T: Sync>(_: T) {}\n help: consider borrowing here\n    |\n LL |     is_sync(&Outer2(TestType));\n-   |             ~~~~~~~~~~~~~~~~~\n+   |             +\n LL |     is_sync(&mut Outer2(TestType));\n-   |             ~~~~~~~~~~~~~~~~~~~~~\n+   |             ++++\n \n error: aborting due to 7 previous errors\n "}]}