{"sha": "faf53559c6cd37932736b20ef68b75a99da72b28", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhZjUzNTU5YzZjZDM3OTMyNzM2YjIwZWY2OGI3NWE5OWRhNzJiMjg=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-02T17:16:47Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2015-01-02T17:16:47Z"}, "message": "rollup merge of #20382: alexcrichton/isuse-20376", "tree": {"sha": "73902c6f7dd4561a9df5dceea9405a57fc45ac49", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73902c6f7dd4561a9df5dceea9405a57fc45ac49"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/faf53559c6cd37932736b20ef68b75a99da72b28", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/faf53559c6cd37932736b20ef68b75a99da72b28", "html_url": "https://github.com/rust-lang/rust/commit/faf53559c6cd37932736b20ef68b75a99da72b28", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/faf53559c6cd37932736b20ef68b75a99da72b28/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "074996d6f982881a5854d299b4aa6e29231ae77d", "url": "https://api.github.com/repos/rust-lang/rust/commits/074996d6f982881a5854d299b4aa6e29231ae77d", "html_url": "https://github.com/rust-lang/rust/commit/074996d6f982881a5854d299b4aa6e29231ae77d"}, {"sha": "a6f5b980cc44621efeed847e8d359f3b90c29080", "url": "https://api.github.com/repos/rust-lang/rust/commits/a6f5b980cc44621efeed847e8d359f3b90c29080", "html_url": "https://github.com/rust-lang/rust/commit/a6f5b980cc44621efeed847e8d359f3b90c29080"}], "stats": {"total": 73, "additions": 45, "deletions": 28}, "files": [{"sha": "f299ea939ed2b02061c9b1b62c44e6e69d04c00a", "filename": "src/librustc/session/config.rs", "status": "modified", "additions": 19, "deletions": 1, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/faf53559c6cd37932736b20ef68b75a99da72b28/src%2Flibrustc%2Fsession%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faf53559c6cd37932736b20ef68b75a99da72b28/src%2Flibrustc%2Fsession%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fconfig.rs?ref=faf53559c6cd37932736b20ef68b75a99da72b28", "patch": "@@ -744,7 +744,7 @@ pub fn rustc_short_optgroups() -> Vec<RustcOptGroup> {\n         opt::multi(\"l\", \"\",   \"Link the generated crate(s) to the specified native\n                              library NAME. The optional KIND can be one of,\n                              static, dylib, or framework. If omitted, dylib is\n-                             assumed.\", \"NAME[:KIND]\"),\n+                             assumed.\", \"[KIND=]NAME\"),\n         opt::multi(\"\", \"crate-type\", \"Comma separated list of types of crates\n                                     for the compiler to emit\",\n                    \"[bin|lib|rlib|dylib|staticlib]\"),\n@@ -1017,6 +1017,24 @@ pub fn build_session_options(matches: &getopts::Matches) -> Options {\n     }\n \n     let libs = matches.opt_strs(\"l\").into_iter().map(|s| {\n+        let mut parts = s.splitn(1, '=');\n+        let kind = parts.next().unwrap();\n+        if let Some(name) = parts.next() {\n+            let kind = match kind {\n+                \"dylib\" => cstore::NativeUnknown,\n+                \"framework\" => cstore::NativeFramework,\n+                \"static\" => cstore::NativeStatic,\n+                s => {\n+                    early_error(format!(\"unknown library kind `{}`, expected \\\n+                                         one of dylib, framework, or static\",\n+                                        s)[]);\n+                }\n+            };\n+            return (name.to_string(), kind)\n+        }\n+\n+        // FIXME(acrichto) remove this once crates have stopped using it, this\n+        //                 is deprecated behavior now.\n         let mut parts = s.rsplitn(1, ':');\n         let kind = parts.next().unwrap();\n         let (name, kind) = match (parts.next(), kind) {"}, {"sha": "56b4cae2e43cfdc5e015251e12e01fb9c726e60b", "filename": "src/librustc/session/search_paths.rs", "status": "modified", "additions": 8, "deletions": 9, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/faf53559c6cd37932736b20ef68b75a99da72b28/src%2Flibrustc%2Fsession%2Fsearch_paths.rs", "raw_url": "https://github.com/rust-lang/rust/raw/faf53559c6cd37932736b20ef68b75a99da72b28/src%2Flibrustc%2Fsession%2Fsearch_paths.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fsearch_paths.rs?ref=faf53559c6cd37932736b20ef68b75a99da72b28", "patch": "@@ -34,15 +34,14 @@ impl SearchPaths {\n     }\n \n     pub fn add_path(&mut self, path: &str) {\n-        let (kind, path) = if path.ends_with(\":native\") {\n-            (PathKind::Native, path.slice_to(path.len() - \":native\".len()))\n-        } else if path.ends_with(\":crate\") {\n-            (PathKind::Crate, path.slice_to(path.len() - \":crate\".len()))\n-        } else if path.ends_with(\":dependency\") {\n-            (PathKind::Dependency,\n-             path.slice_to(path.len() - \":dependency\".len()))\n-        } else if path.ends_with(\":all\") {\n-            (PathKind::All, path.slice_to(path.len() - \":all\".len()))\n+        let (kind, path) = if path.starts_with(\"native=\") {\n+            (PathKind::Native, path.slice_from(\"native=\".len()))\n+        } else if path.starts_with(\"crate=\") {\n+            (PathKind::Crate, path.slice_from(\"crate=\".len()))\n+        } else if path.starts_with(\"dependency=\") {\n+            (PathKind::Dependency, path.slice_from(\"dependency=\".len()))\n+        } else if path.starts_with(\"all=\") {\n+            (PathKind::All, path.slice_from(\"all=\".len()))\n         } else {\n             (PathKind::All, path)\n         };"}, {"sha": "154e46c0edc8b2d7a63d00576f265159e098ba83", "filename": "src/test/run-make/compiler-lookup-paths/Makefile", "status": "modified", "additions": 17, "deletions": 17, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/faf53559c6cd37932736b20ef68b75a99da72b28/src%2Ftest%2Frun-make%2Fcompiler-lookup-paths%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/faf53559c6cd37932736b20ef68b75a99da72b28/src%2Ftest%2Frun-make%2Fcompiler-lookup-paths%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fcompiler-lookup-paths%2FMakefile?ref=faf53559c6cd37932736b20ef68b75a99da72b28", "patch": "@@ -6,25 +6,25 @@ all: $(TMPDIR)/libnative.a\n \tmv $(TMPDIR)/libnative.a $(TMPDIR)/native\n \t$(RUSTC) a.rs\n \tmv $(TMPDIR)/liba.rlib $(TMPDIR)/crate\n-\t$(RUSTC) b.rs -L $(TMPDIR)/crate:native && exit 1 || exit 0\n-\t$(RUSTC) b.rs -L $(TMPDIR)/crate:dependency && exit 1 || exit 0\n-\t$(RUSTC) b.rs -L $(TMPDIR)/crate:crate\n-\t$(RUSTC) b.rs -L $(TMPDIR)/crate\n-\t$(RUSTC) c.rs -L $(TMPDIR)/crate:native && exit 1 || exit 0\n-\t$(RUSTC) c.rs -L $(TMPDIR)/crate:crate && exit 1 || exit 0\n-\t$(RUSTC) c.rs -L $(TMPDIR)/crate:dependency\n-\t$(RUSTC) c.rs -L $(TMPDIR)/crate\n-\t$(RUSTC) d.rs -L $(TMPDIR)/native:dependency && exit 1 || exit 0\n-\t$(RUSTC) d.rs -L $(TMPDIR)/native:crate && exit 1 || exit 0\n-\t$(RUSTC) d.rs -L $(TMPDIR)/native:native\n-\t$(RUSTC) d.rs -L $(TMPDIR)/native\n+\t$(RUSTC) b.rs -L native=$(TMPDIR)/crate && exit 1 || exit 0\n+\t$(RUSTC) b.rs -L dependency=$(TMPDIR)/crate && exit 1 || exit 0\n+\t$(RUSTC) b.rs -L crate=$(TMPDIR)/crate\n+\t$(RUSTC) b.rs -L all=$(TMPDIR)/crate\n+\t$(RUSTC) c.rs -L native=$(TMPDIR)/crate && exit 1 || exit 0\n+\t$(RUSTC) c.rs -L crate=$(TMPDIR)/crate && exit 1 || exit 0\n+\t$(RUSTC) c.rs -L dependency=$(TMPDIR)/crate\n+\t$(RUSTC) c.rs -L all=$(TMPDIR)/crate\n+\t$(RUSTC) d.rs -L dependency=$(TMPDIR)/native && exit 1 || exit 0\n+\t$(RUSTC) d.rs -L crate=$(TMPDIR)/native && exit 1 || exit 0\n+\t$(RUSTC) d.rs -L native=$(TMPDIR)/native\n+\t$(RUSTC) d.rs -L all=$(TMPDIR)/native\n \tmkdir -p $(TMPDIR)/e1\n \tmkdir -p $(TMPDIR)/e2\n \t$(RUSTC) e.rs -o $(TMPDIR)/e1/libe.rlib\n \t$(RUSTC) e.rs -o $(TMPDIR)/e2/libe.rlib\n \t$(RUSTC) f.rs -L $(TMPDIR)/e1 -L $(TMPDIR)/e2 && exit 1 || exit 0\n-\t$(RUSTC) f.rs -L $(TMPDIR)/e1:crate -L $(TMPDIR)/e2 && exit 1 || exit 0\n-\t$(RUSTC) f.rs -L $(TMPDIR)/e1:crate -L $(TMPDIR)/e2:crate && exit 1 || exit 0\n-\t$(RUSTC) f.rs -L $(TMPDIR)/e1:native -L $(TMPDIR)/e2\n-\t$(RUSTC) f.rs -L $(TMPDIR)/e1:dependency -L $(TMPDIR)/e2\n-\t$(RUSTC) f.rs -L $(TMPDIR)/e1:dependency -L $(TMPDIR)/e2:crate\n+\t$(RUSTC) f.rs -L crate=$(TMPDIR)/e1 -L $(TMPDIR)/e2 && exit 1 || exit 0\n+\t$(RUSTC) f.rs -L crate=$(TMPDIR)/e1 -L crate=$(TMPDIR)/e2 && exit 1 || exit 0\n+\t$(RUSTC) f.rs -L native=$(TMPDIR)/e1 -L $(TMPDIR)/e2\n+\t$(RUSTC) f.rs -L dependency=$(TMPDIR)/e1 -L $(TMPDIR)/e2\n+\t$(RUSTC) f.rs -L dependency=$(TMPDIR)/e1 -L crate=$(TMPDIR)/e2"}, {"sha": "d0536956152504a1a95c58eea9080d532ea28c64", "filename": "src/test/run-make/manual-link/Makefile", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/faf53559c6cd37932736b20ef68b75a99da72b28/src%2Ftest%2Frun-make%2Fmanual-link%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/faf53559c6cd37932736b20ef68b75a99da72b28/src%2Ftest%2Frun-make%2Fmanual-link%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fmanual-link%2FMakefile?ref=faf53559c6cd37932736b20ef68b75a99da72b28", "patch": "@@ -1,7 +1,7 @@\n -include ../tools.mk\n \n all: $(TMPDIR)/libbar.a\n-\t$(RUSTC) foo.rs -lbar:static\n+\t$(RUSTC) foo.rs -lstatic=bar\n \t$(RUSTC) main.rs\n \t$(call RUN,main)\n "}]}