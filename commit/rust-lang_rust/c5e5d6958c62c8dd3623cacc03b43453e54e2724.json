{"sha": "c5e5d6958c62c8dd3623cacc03b43453e54e2724", "node_id": "C_kwDOAAsO6NoAKGM1ZTVkNjk1OGM2MmM4ZGQzNjIzY2FjYzAzYjQzNDUzZTU0ZTI3MjQ", "commit": {"author": {"name": "sladynnunes", "email": "snunes@usc.edu", "date": "2023-05-28T08:51:55Z"}, "committer": {"name": "sladynnunes", "email": "snunes@usc.edu", "date": "2023-05-28T08:51:55Z"}, "message": "Migrate  to Askama", "tree": {"sha": "80aded3d23a2e5f8b3dc1dfe22caa11cb214b728", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80aded3d23a2e5f8b3dc1dfe22caa11cb214b728"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c5e5d6958c62c8dd3623cacc03b43453e54e2724", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c5e5d6958c62c8dd3623cacc03b43453e54e2724", "html_url": "https://github.com/rust-lang/rust/commit/c5e5d6958c62c8dd3623cacc03b43453e54e2724", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c5e5d6958c62c8dd3623cacc03b43453e54e2724/comments", "author": {"login": "sladyn98", "id": 28837406, "node_id": "MDQ6VXNlcjI4ODM3NDA2", "avatar_url": "https://avatars.githubusercontent.com/u/28837406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sladyn98", "html_url": "https://github.com/sladyn98", "followers_url": "https://api.github.com/users/sladyn98/followers", "following_url": "https://api.github.com/users/sladyn98/following{/other_user}", "gists_url": "https://api.github.com/users/sladyn98/gists{/gist_id}", "starred_url": "https://api.github.com/users/sladyn98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sladyn98/subscriptions", "organizations_url": "https://api.github.com/users/sladyn98/orgs", "repos_url": "https://api.github.com/users/sladyn98/repos", "events_url": "https://api.github.com/users/sladyn98/events{/privacy}", "received_events_url": "https://api.github.com/users/sladyn98/received_events", "type": "User", "site_admin": false}, "committer": {"login": "sladyn98", "id": 28837406, "node_id": "MDQ6VXNlcjI4ODM3NDA2", "avatar_url": "https://avatars.githubusercontent.com/u/28837406?v=4", "gravatar_id": "", "url": "https://api.github.com/users/sladyn98", "html_url": "https://github.com/sladyn98", "followers_url": "https://api.github.com/users/sladyn98/followers", "following_url": "https://api.github.com/users/sladyn98/following{/other_user}", "gists_url": "https://api.github.com/users/sladyn98/gists{/gist_id}", "starred_url": "https://api.github.com/users/sladyn98/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/sladyn98/subscriptions", "organizations_url": "https://api.github.com/users/sladyn98/orgs", "repos_url": "https://api.github.com/users/sladyn98/repos", "events_url": "https://api.github.com/users/sladyn98/events{/privacy}", "received_events_url": "https://api.github.com/users/sladyn98/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2560b80a08597e4192aa3ee5a4670e36a5e4a7dd", "url": "https://api.github.com/repos/rust-lang/rust/commits/2560b80a08597e4192aa3ee5a4670e36a5e4a7dd", "html_url": "https://github.com/rust-lang/rust/commit/2560b80a08597e4192aa3ee5a4670e36a5e4a7dd"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "761420c411f6ac9b1f43da20de7377519bc213e4", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c5e5d6958c62c8dd3623cacc03b43453e54e2724/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c5e5d6958c62c8dd3623cacc03b43453e54e2724/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=c5e5d6958c62c8dd3623cacc03b43453e54e2724", "patch": "@@ -1446,11 +1446,11 @@ fn item_proc_macro(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, m: &c\n     write!(w, \"{}\", document(cx, it, None, HeadingOffset::H2))\n }\n \n-fn item_primitive(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item) {\n+fn item_primitive(w: &mut impl fmt::Write, cx: &mut Context<'_>, it: &clean::Item) {\n     let def_id = it.item_id.expect_def_id();\n-    write!(w, \"{}\", document(cx, it, None, HeadingOffset::H2));\n+    write!(w, \"{}\", document(cx, it, None, HeadingOffset::H2)).unwrap();\n     if it.name.map(|n| n.as_str() != \"reference\").unwrap_or(false) {\n-        write!(w, \"{}\", render_assoc_items(cx, it, def_id, AssocItemRender::All));\n+        write!(w, \"{}\", render_assoc_items(cx, it, def_id, AssocItemRender::All)).unwrap();\n     } else {\n         // We handle the \"reference\" primitive type on its own because we only want to list\n         // implementations on generic types."}]}