{"sha": "811b4b890ab2b9577abdd22e3f7e9957696bfd9e", "node_id": "C_kwDOAAsO6NoAKDgxMWI0Yjg5MGFiMmI5NTc3YWJkZDIyZTNmN2U5OTU3Njk2YmZkOWU", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2022-07-26T14:57:46Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-26T14:57:46Z"}, "message": "Rollup merge of #99235 - WaffleLapkin:rustdoc_implement_support_for_must_implement, r=GuillaumeGomez\n\nrustdoc: Add support for `#[rustc_must_implement_one_of]`\n\nThis PR adds support for `#[rustc_must_implement_one_of]` attribute added in #92164. There is a desire to eventually use this attribute of `Read`, so making it show up in docs is a good thing.\n\nI \"stole\" the styling from cfg notes, not sure what would be a proper styling. Currently it looks like this:\n![2022-07-14_15-00](https://user-images.githubusercontent.com/38225716/178968170-913c1dd5-8875-4a95-9848-b075a0bb8998.png)\n\n<details><summary>Code to reproduce</summary>\n<p>\n\n```rust\n#![feature(rustc_attrs)]\n\n#[rustc_must_implement_one_of(a, b)]\npub trait Trait {\n    fn req();\n    fn a(){ Self::b() }\n    fn b(){ Self::a() }\n}\n```\n\n</p>\n</details>", "tree": {"sha": "dc735d957fc4381d45161aac1515c8da2f03e150", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dc735d957fc4381d45161aac1515c8da2f03e150"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/811b4b890ab2b9577abdd22e3f7e9957696bfd9e", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi4ADqCRBK7hj4Ov3rIwAANSEIAKtP7N9ngmmSPgi7ip5hziFh\n9ce85j8yQdvuKt+tOlNg3+tbpieyg5shelbWhWiDha5xmSQHuwfDtdA6vvkDDBaP\nVf8VUtO7O3QfRADJcSoakB8mRHtbKJmami28SfBfUxTplFQkconH/9iSFLesDfp+\nfE7vD0yku+tu+9NXMIX+LEhI4e9T/6JWPslw5vJsHJZVVJRJVhZfOc38FYEbHBJ7\nWpYMOoQXGJpTGzKGdKNOG/HhE9zIn5Cu/7LwyhiypF0stpHWTzrqcXLMlLx2FeDY\nerCCQqK8MbATpc5jU25xqMBq6RVGqtwcbYXgmAvvtJrIhv6j6GJrVxvepoV+tEM=\n=KnpG\n-----END PGP SIGNATURE-----\n", "payload": "tree dc735d957fc4381d45161aac1515c8da2f03e150\nparent 2614e437f54ebf98b8336d35af0a5821990eeac9\nparent ed8c2c28f0f0072dbb0ceae36b278d681d997fad\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1658847466 +0200\ncommitter GitHub <noreply@github.com> 1658847466 +0200\n\nRollup merge of #99235 - WaffleLapkin:rustdoc_implement_support_for_must_implement, r=GuillaumeGomez\n\nrustdoc: Add support for `#[rustc_must_implement_one_of]`\n\nThis PR adds support for `#[rustc_must_implement_one_of]` attribute added in #92164. There is a desire to eventually use this attribute of `Read`, so making it show up in docs is a good thing.\n\nI \"stole\" the styling from cfg notes, not sure what would be a proper styling. Currently it looks like this:\n![2022-07-14_15-00](https://user-images.githubusercontent.com/38225716/178968170-913c1dd5-8875-4a95-9848-b075a0bb8998.png)\n\n<details><summary>Code to reproduce</summary>\n<p>\n\n```rust\n#![feature(rustc_attrs)]\n\n#[rustc_must_implement_one_of(a, b)]\npub trait Trait {\n    fn req();\n    fn a(){ Self::b() }\n    fn b(){ Self::a() }\n}\n```\n\n</p>\n</details>\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/811b4b890ab2b9577abdd22e3f7e9957696bfd9e", "html_url": "https://github.com/rust-lang/rust/commit/811b4b890ab2b9577abdd22e3f7e9957696bfd9e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/811b4b890ab2b9577abdd22e3f7e9957696bfd9e/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2614e437f54ebf98b8336d35af0a5821990eeac9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2614e437f54ebf98b8336d35af0a5821990eeac9", "html_url": "https://github.com/rust-lang/rust/commit/2614e437f54ebf98b8336d35af0a5821990eeac9"}, {"sha": "ed8c2c28f0f0072dbb0ceae36b278d681d997fad", "url": "https://api.github.com/repos/rust-lang/rust/commits/ed8c2c28f0f0072dbb0ceae36b278d681d997fad", "html_url": "https://github.com/rust-lang/rust/commit/ed8c2c28f0f0072dbb0ceae36b278d681d997fad"}], "stats": {"total": 38, "additions": 32, "deletions": 6}, "files": [{"sha": "07237438a0d3267697a2f754d4fbe369e1bd0b93", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/811b4b890ab2b9577abdd22e3f7e9957696bfd9e/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/811b4b890ab2b9577abdd22e3f7e9957696bfd9e/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=811b4b890ab2b9577abdd22e3f7e9957696bfd9e", "patch": "@@ -1993,6 +1993,7 @@ fn clean_maybe_renamed_item<'tcx>(\n             ItemKind::Trait(_, _, generics, bounds, item_ids) => {\n                 let items =\n                     item_ids.iter().map(|ti| cx.tcx.hir().trait_item(ti.id).clean(cx)).collect();\n+\n                 TraitItem(Trait {\n                     def_id,\n                     items,"}, {"sha": "dcd2eaac7ea60e346071aa940e860d6e8200839d", "filename": "src/librustdoc/html/render/print_item.rs", "status": "modified", "additions": 16, "deletions": 5, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/811b4b890ab2b9577abdd22e3f7e9957696bfd9e/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "raw_url": "https://github.com/rust-lang/rust/raw/811b4b890ab2b9577abdd22e3f7e9957696bfd9e/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender%2Fprint_item.rs?ref=811b4b890ab2b9577abdd22e3f7e9957696bfd9e", "patch": "@@ -1,9 +1,5 @@\n use clean::AttributesExt;\n \n-use std::cmp::Ordering;\n-use std::fmt;\n-use std::rc::Rc;\n-\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def::CtorKind;\n@@ -15,6 +11,9 @@ use rustc_middle::ty::{Adt, TyCtxt};\n use rustc_span::hygiene::MacroKind;\n use rustc_span::symbol::{kw, sym, Symbol};\n use rustc_target::abi::{Layout, Primitive, TagEncoding, Variants};\n+use std::cmp::Ordering;\n+use std::fmt;\n+use std::rc::Rc;\n \n use super::{\n     collect_paths_for_type, document, ensure_trailing_slash, item_ty_to_section,\n@@ -37,6 +36,7 @@ use crate::html::markdown::{HeadingOffset, MarkdownSummaryLine};\n use crate::html::url_parts_builder::UrlPartsBuilder;\n \n use askama::Template;\n+use itertools::Itertools;\n \n const ITEM_TABLE_OPEN: &str = \"<div class=\\\"item-table\\\">\";\n const ITEM_TABLE_CLOSE: &str = \"</div>\";\n@@ -539,6 +539,8 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n     let count_types = required_types.len() + provided_types.len();\n     let count_consts = required_consts.len() + provided_consts.len();\n     let count_methods = required_methods.len() + provided_methods.len();\n+    let must_implement_one_of_functions =\n+        cx.tcx().trait_def(t.def_id).must_implement_one_of.clone();\n \n     // Output the trait definition\n     wrap_into_docblock(w, |w| {\n@@ -784,13 +786,22 @@ fn item_trait(w: &mut Buffer, cx: &mut Context<'_>, it: &clean::Item, t: &clean:\n     }\n \n     // Output the documentation for each function individually\n-    if !required_methods.is_empty() {\n+    if !required_methods.is_empty() || must_implement_one_of_functions.is_some() {\n         write_small_section_header(\n             w,\n             \"required-methods\",\n             \"Required Methods\",\n             \"<div class=\\\"methods\\\">\",\n         );\n+\n+        if let Some(list) = must_implement_one_of_functions.as_deref() {\n+            write!(\n+                w,\n+                \"<div class=\\\"stab must_implement\\\">At least one of the `{}` methods is required.</div>\",\n+                list.iter().join(\"`, `\")\n+            );\n+        }\n+\n         for m in required_methods {\n             trait_item(w, cx, m, it);\n         }"}, {"sha": "c42cac59bd6fa36f43bf262b9ae74b15478d91da", "filename": "src/librustdoc/html/static/css/themes/ayu.css", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/811b4b890ab2b9577abdd22e3f7e9957696bfd9e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "raw_url": "https://github.com/rust-lang/rust/raw/811b4b890ab2b9577abdd22e3f7e9957696bfd9e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fayu.css?ref=811b4b890ab2b9577abdd22e3f7e9957696bfd9e", "patch": "@@ -205,11 +205,13 @@ details.rustdoc-toggle > summary::before {\n \n /* Created this empty rule to satisfy the theme checks. */\n .stab.empty-impl {}\n+.stab.must_implement {}\n \n .stab.unstable,\n .stab.deprecated,\n .stab.portability,\n-.stab.empty-impl {\n+.stab.empty-impl,\n+.stab.must_implement {\n \tcolor: #c5c5c5;\n \tbackground: #314559 !important;\n \tborder-style: none !important;"}, {"sha": "62d9eaa02e6a7e645b8969972c1d199e087b6f81", "filename": "src/librustdoc/html/static/css/themes/dark.css", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/811b4b890ab2b9577abdd22e3f7e9957696bfd9e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "raw_url": "https://github.com/rust-lang/rust/raw/811b4b890ab2b9577abdd22e3f7e9957696bfd9e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Fdark.css?ref=811b4b890ab2b9577abdd22e3f7e9957696bfd9e", "patch": "@@ -180,6 +180,7 @@ details.rustdoc-toggle > summary::before {\n .stab.empty-impl { background: #FFF5D6; border-color: #FFC600; color: #2f2f2f; }\n .stab.unstable { background: #FFF5D6; border-color: #FFC600; color: #2f2f2f; }\n .stab.deprecated { background: #ffc4c4; border-color: #db7b7b; color: #2f2f2f; }\n+.stab.must_implement { background: #F3DFFF; border-color: #b07bdb; color: #2f2f2f; }\n .stab.portability { background: #F3DFFF; border-color: #b07bdb; color: #2f2f2f; }\n .stab.portability > code { background: none; }\n "}, {"sha": "b751acff152cb4b2863fcd600999bc4c57728033", "filename": "src/librustdoc/html/static/css/themes/light.css", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/811b4b890ab2b9577abdd22e3f7e9957696bfd9e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "raw_url": "https://github.com/rust-lang/rust/raw/811b4b890ab2b9577abdd22e3f7e9957696bfd9e/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Fthemes%2Flight.css?ref=811b4b890ab2b9577abdd22e3f7e9957696bfd9e", "patch": "@@ -163,6 +163,7 @@ details.rustdoc-toggle > summary::before {\n .stab.empty-impl { background: #FFF5D6; border-color: #FFC600; }\n .stab.unstable { background: #FFF5D6; border-color: #FFC600; }\n .stab.deprecated { background: #ffc4c4; border-color: #db7b7b; }\n+.stab.must_implement { background: #F3DFFF; border-color: #b07bdb; }\n .stab.portability { background: #F3DFFF; border-color: #b07bdb; }\n .stab.portability > code { background: none; }\n "}, {"sha": "1f1dd5d5796ee9ca015a899b01229bc21e6f9775", "filename": "src/test/rustdoc/must_implement_one_of.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/811b4b890ab2b9577abdd22e3f7e9957696bfd9e/src%2Ftest%2Frustdoc%2Fmust_implement_one_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/811b4b890ab2b9577abdd22e3f7e9957696bfd9e/src%2Ftest%2Frustdoc%2Fmust_implement_one_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fmust_implement_one_of.rs?ref=811b4b890ab2b9577abdd22e3f7e9957696bfd9e", "patch": "@@ -0,0 +1,10 @@\n+#![crate_name = \"c\"]\n+#![feature(rustc_attrs)]\n+\n+#[rustc_must_implement_one_of(a, b)]\n+// @matches c/trait.Trait.html '//*[@class=\"stab must_implement\"]' \\\n+//      'At least one of the `a`, `b` methods is required.$'\n+pub trait Trait {\n+    fn a() {}\n+    fn b() {}\n+}"}]}