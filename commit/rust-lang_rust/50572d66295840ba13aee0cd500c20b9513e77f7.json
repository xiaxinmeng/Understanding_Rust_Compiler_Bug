{"sha": "50572d66295840ba13aee0cd500c20b9513e77f7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwNTcyZDY2Mjk1ODQwYmExM2FlZTBjZDUwMGMyMGI5NTEzZTc3Zjc=", "commit": {"author": {"name": "Jeremy Fitzhardinge", "email": "jeremy@goop.org", "date": "2021-01-18T22:10:31Z"}, "committer": {"name": "Jeremy Fitzhardinge", "email": "jeremy@goop.org", "date": "2021-02-07T22:54:22Z"}, "message": "Implement Encoder for Diagnostic manually\n\n...so we can skip serializing `tool_metadata` if it hasn't been set.\nThis makes the output a bit cleaner, and avoiding having to update a\nbunch of unrelated tests.", "tree": {"sha": "81da7e0ce69f23a750baf4138e3626f3f20934f3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81da7e0ce69f23a750baf4138e3626f3f20934f3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50572d66295840ba13aee0cd500c20b9513e77f7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50572d66295840ba13aee0cd500c20b9513e77f7", "html_url": "https://github.com/rust-lang/rust/commit/50572d66295840ba13aee0cd500c20b9513e77f7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50572d66295840ba13aee0cd500c20b9513e77f7/comments", "author": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jsgf", "id": 147966, "node_id": "MDQ6VXNlcjE0Nzk2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/147966?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jsgf", "html_url": "https://github.com/jsgf", "followers_url": "https://api.github.com/users/jsgf/followers", "following_url": "https://api.github.com/users/jsgf/following{/other_user}", "gists_url": "https://api.github.com/users/jsgf/gists{/gist_id}", "starred_url": "https://api.github.com/users/jsgf/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jsgf/subscriptions", "organizations_url": "https://api.github.com/users/jsgf/orgs", "repos_url": "https://api.github.com/users/jsgf/repos", "events_url": "https://api.github.com/users/jsgf/events{/privacy}", "received_events_url": "https://api.github.com/users/jsgf/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "82ccb6582a76d72fb5abaf7195dc7a653f1aa54b", "url": "https://api.github.com/repos/rust-lang/rust/commits/82ccb6582a76d72fb5abaf7195dc7a653f1aa54b", "html_url": "https://github.com/rust-lang/rust/commit/82ccb6582a76d72fb5abaf7195dc7a653f1aa54b"}], "stats": {"total": 136, "additions": 84, "deletions": 52}, "files": [{"sha": "f26c439add9441fa0f3cb6192aee3d479f699f8c", "filename": "compiler/rustc_errors/src/json.rs", "status": "modified", "additions": 33, "deletions": 1, "changes": 34, "blob_url": "https://github.com/rust-lang/rust/blob/50572d66295840ba13aee0cd500c20b9513e77f7/compiler%2Frustc_errors%2Fsrc%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50572d66295840ba13aee0cd500c20b9513e77f7/compiler%2Frustc_errors%2Fsrc%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Fjson.rs?ref=50572d66295840ba13aee0cd500c20b9513e77f7", "patch": "@@ -27,6 +27,7 @@ use std::sync::{Arc, Mutex};\n use std::vec;\n \n use rustc_serialize::json::{as_json, as_pretty_json};\n+use rustc_serialize::{Encodable, Encoder};\n \n #[cfg(test)]\n mod tests;\n@@ -169,7 +170,8 @@ impl Emitter for JsonEmitter {\n \n // The following data types are provided just for serialisation.\n \n-#[derive(Encodable)]\n+// NOTE: this has a manual implementation of Encodable which needs to be updated in\n+// parallel.\n struct Diagnostic {\n     /// The primary error message.\n     message: String,\n@@ -185,6 +187,36 @@ struct Diagnostic {\n     tool_metadata: ToolMetadata,\n }\n \n+macro_rules! encode_fields {\n+    ($enc:expr, $s:expr, $idx:expr, [ $($name:ident),+$(,)? ]) => {\n+        {\n+            let mut idx = $idx;\n+            $(\n+                $enc.emit_struct_field(stringify!($name), idx, |enc| $s.$name.encode(enc))?;\n+                idx += 1;\n+            )+\n+            idx\n+        }\n+    };\n+}\n+\n+// Special-case encoder to skip tool_metadata if not set\n+impl<E: Encoder> Encodable<E> for Diagnostic {\n+    fn encode(&self, s: &mut E) -> Result<(), E::Error> {\n+        s.emit_struct(\"diagnostic\", 7, |s| {\n+            let mut idx = 0;\n+\n+            idx = encode_fields!(s, self, idx, [message, code, level, spans, children, rendered]);\n+            if self.tool_metadata.is_set() {\n+                idx = encode_fields!(s, self, idx, [tool_metadata]);\n+            }\n+\n+            let _ = idx;\n+            Ok(())\n+        })\n+    }\n+}\n+\n #[derive(Encodable)]\n struct DiagnosticSpan {\n     file_name: String,"}, {"sha": "9800ed9bfa94806c6465259330707bcde327958a", "filename": "compiler/rustc_errors/src/lib.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50572d66295840ba13aee0cd500c20b9513e77f7/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50572d66295840ba13aee0cd500c20b9513e77f7/compiler%2Frustc_errors%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_errors%2Fsrc%2Flib.rs?ref=50572d66295840ba13aee0cd500c20b9513e77f7", "patch": "@@ -83,6 +83,10 @@ impl ToolMetadata {\n     fn new(json: Json) -> Self {\n         ToolMetadata(Some(json))\n     }\n+\n+    fn is_set(&self) -> bool {\n+        self.0.is_some()\n+    }\n }\n \n impl Hash for ToolMetadata {"}, {"sha": "da8849a82844f33c0521cef0be5cc66cb91595a3", "filename": "src/test/ui/json-bom-plus-crlf-multifile.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Fjson-bom-plus-crlf-multifile.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Fjson-bom-plus-crlf-multifile.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fjson-bom-plus-crlf-multifile.stderr?ref=50572d66295840ba13aee0cd500c20b9513e77f7", "patch": "@@ -24,8 +24,8 @@ This error occurs when an expression was used in a place where the compiler\n expected an expression of a different type. It can occur in several cases, the\n most common being when calling a function and passing an argument which has a\n different type than the matching type in the function declaration.\n-\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":621,\"byte_end\":622,\"line_start\":17,\"line_end\":17,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":\"expected struct `String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":612,\"byte_end\":618,\"line_start\":17,\"line_end\":17,\"column_start\":13,\"column_end\":19,\"is_primary\":false,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":13,\"highlight_end\":19}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":621,\"byte_end\":622,\"line_start\":17,\"line_end\":17,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null,\"tool_metadata\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs:17:22: error[E0308]: mismatched types\n-\",\"tool_metadata\":null}\n+\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":621,\"byte_end\":622,\"line_start\":17,\"line_end\":17,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":\"expected struct `String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":612,\"byte_end\":618,\"line_start\":17,\"line_end\":17,\"column_start\":13,\"column_end\":19,\"is_primary\":false,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":13,\"highlight_end\":19}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":621,\"byte_end\":622,\"line_start\":17,\"line_end\":17,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs:17:22: error[E0308]: mismatched types\n+\"}\n {\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"Expected type did not match the received type.\n \n Erroneous code examples:\n@@ -52,8 +52,8 @@ This error occurs when an expression was used in a place where the compiler\n expected an expression of a different type. It can occur in several cases, the\n most common being when calling a function and passing an argument which has a\n different type than the matching type in the function declaration.\n-\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":681,\"byte_end\":682,\"line_start\":19,\"line_end\":19,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":\"expected struct `String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":672,\"byte_end\":678,\"line_start\":19,\"line_end\":19,\"column_start\":13,\"column_end\":19,\"is_primary\":false,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":13,\"highlight_end\":19}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":681,\"byte_end\":682,\"line_start\":19,\"line_end\":19,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null,\"tool_metadata\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs:19:22: error[E0308]: mismatched types\n-\",\"tool_metadata\":null}\n+\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":681,\"byte_end\":682,\"line_start\":19,\"line_end\":19,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":\"expected struct `String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":672,\"byte_end\":678,\"line_start\":19,\"line_end\":19,\"column_start\":13,\"column_end\":19,\"is_primary\":false,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":13,\"highlight_end\":19}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":681,\"byte_end\":682,\"line_start\":19,\"line_end\":19,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs:19:22: error[E0308]: mismatched types\n+\"}\n {\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"Expected type did not match the received type.\n \n Erroneous code examples:\n@@ -80,8 +80,8 @@ This error occurs when an expression was used in a place where the compiler\n expected an expression of a different type. It can occur in several cases, the\n most common being when calling a function and passing an argument which has a\n different type than the matching type in the function declaration.\n-\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":745,\"byte_end\":746,\"line_start\":23,\"line_end\":23,\"column_start\":1,\"column_end\":2,\"is_primary\":true,\"text\":[{\"text\":\"1;  // Error after the newline.\",\"highlight_start\":1,\"highlight_end\":2}],\"label\":\"expected struct `String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":735,\"byte_end\":741,\"line_start\":22,\"line_end\":22,\"column_start\":13,\"column_end\":19,\"is_primary\":false,\"text\":[{\"text\":\"    let s : String =\",\"highlight_start\":13,\"highlight_end\":19}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":745,\"byte_end\":746,\"line_start\":23,\"line_end\":23,\"column_start\":1,\"column_end\":2,\"is_primary\":true,\"text\":[{\"text\":\"1;  // Error after the newline.\",\"highlight_start\":1,\"highlight_end\":2}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null,\"tool_metadata\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs:23:1: error[E0308]: mismatched types\n-\",\"tool_metadata\":null}\n+\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":745,\"byte_end\":746,\"line_start\":23,\"line_end\":23,\"column_start\":1,\"column_end\":2,\"is_primary\":true,\"text\":[{\"text\":\"1;  // Error after the newline.\",\"highlight_start\":1,\"highlight_end\":2}],\"label\":\"expected struct `String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":735,\"byte_end\":741,\"line_start\":22,\"line_end\":22,\"column_start\":13,\"column_end\":19,\"is_primary\":false,\"text\":[{\"text\":\"    let s : String =\",\"highlight_start\":13,\"highlight_end\":19}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":745,\"byte_end\":746,\"line_start\":23,\"line_end\":23,\"column_start\":1,\"column_end\":2,\"is_primary\":true,\"text\":[{\"text\":\"1;  // Error after the newline.\",\"highlight_start\":1,\"highlight_end\":2}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs:23:1: error[E0308]: mismatched types\n+\"}\n {\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"Expected type did not match the received type.\n \n Erroneous code examples:\n@@ -109,6 +109,6 @@ expected an expression of a different type. It can occur in several cases, the\n most common being when calling a function and passing an argument which has a\n different type than the matching type in the function declaration.\n \"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":801,\"byte_end\":809,\"line_start\":25,\"line_end\":26,\"column_start\":22,\"column_end\":6,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = (\",\"highlight_start\":22,\"highlight_end\":23},{\"text\":\"    );  // Error spanning the newline.\",\"highlight_start\":1,\"highlight_end\":6}],\"label\":\"expected struct `String`, found `()`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs\",\"byte_start\":792,\"byte_end\":798,\"line_start\":25,\"line_end\":25,\"column_start\":13,\"column_end\":19,\"is_primary\":false,\"text\":[{\"text\":\"    let s : String = (\",\"highlight_start\":13,\"highlight_end\":19}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"$DIR/json-bom-plus-crlf-multifile-aux.rs:25:22: error[E0308]: mismatched types\n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"aborting due to 4 previous errors\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"error: aborting due to 4 previous errors\n-\",\"tool_metadata\":null}\n+\"}"}, {"sha": "811206f9aa076a26189a3564099caa850fa63985", "filename": "src/test/ui/json-bom-plus-crlf.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Fjson-bom-plus-crlf.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Fjson-bom-plus-crlf.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fjson-bom-plus-crlf.stderr?ref=50572d66295840ba13aee0cd500c20b9513e77f7", "patch": "@@ -24,8 +24,8 @@ This error occurs when an expression was used in a place where the compiler\n expected an expression of a different type. It can occur in several cases, the\n most common being when calling a function and passing an argument which has a\n different type than the matching type in the function declaration.\n-\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":606,\"byte_end\":607,\"line_start\":16,\"line_end\":16,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":\"expected struct `String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":597,\"byte_end\":603,\"line_start\":16,\"line_end\":16,\"column_start\":13,\"column_end\":19,\"is_primary\":false,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":13,\"highlight_end\":19}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":606,\"byte_end\":607,\"line_start\":16,\"line_end\":16,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null,\"tool_metadata\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf.rs:16:22: error[E0308]: mismatched types\n-\",\"tool_metadata\":null}\n+\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":606,\"byte_end\":607,\"line_start\":16,\"line_end\":16,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":\"expected struct `String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":597,\"byte_end\":603,\"line_start\":16,\"line_end\":16,\"column_start\":13,\"column_end\":19,\"is_primary\":false,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":13,\"highlight_end\":19}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":606,\"byte_end\":607,\"line_start\":16,\"line_end\":16,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1;  // Error in the middle of line.\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf.rs:16:22: error[E0308]: mismatched types\n+\"}\n {\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"Expected type did not match the received type.\n \n Erroneous code examples:\n@@ -52,8 +52,8 @@ This error occurs when an expression was used in a place where the compiler\n expected an expression of a different type. It can occur in several cases, the\n most common being when calling a function and passing an argument which has a\n different type than the matching type in the function declaration.\n-\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":666,\"byte_end\":667,\"line_start\":18,\"line_end\":18,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":\"expected struct `String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":657,\"byte_end\":663,\"line_start\":18,\"line_end\":18,\"column_start\":13,\"column_end\":19,\"is_primary\":false,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":13,\"highlight_end\":19}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":666,\"byte_end\":667,\"line_start\":18,\"line_end\":18,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null,\"tool_metadata\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf.rs:18:22: error[E0308]: mismatched types\n-\",\"tool_metadata\":null}\n+\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":666,\"byte_end\":667,\"line_start\":18,\"line_end\":18,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":\"expected struct `String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":657,\"byte_end\":663,\"line_start\":18,\"line_end\":18,\"column_start\":13,\"column_end\":19,\"is_primary\":false,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":13,\"highlight_end\":19}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":666,\"byte_end\":667,\"line_start\":18,\"line_end\":18,\"column_start\":22,\"column_end\":23,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = 1\",\"highlight_start\":22,\"highlight_end\":23}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf.rs:18:22: error[E0308]: mismatched types\n+\"}\n {\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"Expected type did not match the received type.\n \n Erroneous code examples:\n@@ -80,8 +80,8 @@ This error occurs when an expression was used in a place where the compiler\n expected an expression of a different type. It can occur in several cases, the\n most common being when calling a function and passing an argument which has a\n different type than the matching type in the function declaration.\n-\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":730,\"byte_end\":731,\"line_start\":22,\"line_end\":22,\"column_start\":1,\"column_end\":2,\"is_primary\":true,\"text\":[{\"text\":\"1;  // Error after the newline.\",\"highlight_start\":1,\"highlight_end\":2}],\"label\":\"expected struct `String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":720,\"byte_end\":726,\"line_start\":21,\"line_end\":21,\"column_start\":13,\"column_end\":19,\"is_primary\":false,\"text\":[{\"text\":\"    let s : String =\",\"highlight_start\":13,\"highlight_end\":19}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":730,\"byte_end\":731,\"line_start\":22,\"line_end\":22,\"column_start\":1,\"column_end\":2,\"is_primary\":true,\"text\":[{\"text\":\"1;  // Error after the newline.\",\"highlight_start\":1,\"highlight_end\":2}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null,\"tool_metadata\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf.rs:22:1: error[E0308]: mismatched types\n-\",\"tool_metadata\":null}\n+\"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":730,\"byte_end\":731,\"line_start\":22,\"line_end\":22,\"column_start\":1,\"column_end\":2,\"is_primary\":true,\"text\":[{\"text\":\"1;  // Error after the newline.\",\"highlight_start\":1,\"highlight_end\":2}],\"label\":\"expected struct `String`, found integer\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":720,\"byte_end\":726,\"line_start\":21,\"line_end\":21,\"column_start\":13,\"column_end\":19,\"is_primary\":false,\"text\":[{\"text\":\"    let s : String =\",\"highlight_start\":13,\"highlight_end\":19}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"try using a conversion method\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":730,\"byte_end\":731,\"line_start\":22,\"line_end\":22,\"column_start\":1,\"column_end\":2,\"is_primary\":true,\"text\":[{\"text\":\"1;  // Error after the newline.\",\"highlight_start\":1,\"highlight_end\":2}],\"label\":null,\"suggested_replacement\":\"1.to_string()\",\"suggestion_applicability\":\"MaybeIncorrect\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"$DIR/json-bom-plus-crlf.rs:22:1: error[E0308]: mismatched types\n+\"}\n {\"message\":\"mismatched types\",\"code\":{\"code\":\"E0308\",\"explanation\":\"Expected type did not match the received type.\n \n Erroneous code examples:\n@@ -109,6 +109,6 @@ expected an expression of a different type. It can occur in several cases, the\n most common being when calling a function and passing an argument which has a\n different type than the matching type in the function declaration.\n \"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":786,\"byte_end\":794,\"line_start\":24,\"line_end\":25,\"column_start\":22,\"column_end\":6,\"is_primary\":true,\"text\":[{\"text\":\"    let s : String = (\",\"highlight_start\":22,\"highlight_end\":23},{\"text\":\"    );  // Error spanning the newline.\",\"highlight_start\":1,\"highlight_end\":6}],\"label\":\"expected struct `String`, found `()`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null},{\"file_name\":\"$DIR/json-bom-plus-crlf.rs\",\"byte_start\":777,\"byte_end\":783,\"line_start\":24,\"line_end\":24,\"column_start\":13,\"column_end\":19,\"is_primary\":false,\"text\":[{\"text\":\"    let s : String = (\",\"highlight_start\":13,\"highlight_end\":19}],\"label\":\"expected due to this\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"$DIR/json-bom-plus-crlf.rs:24:22: error[E0308]: mismatched types\n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"aborting due to 4 previous errors\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"error: aborting due to 4 previous errors\n-\",\"tool_metadata\":null}\n+\"}"}, {"sha": "3bd85b083d002d4e8021e41faa9d9cfc8044e8ae", "filename": "src/test/ui/json-short.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Fjson-short.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Fjson-short.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fjson-short.stderr?ref=50572d66295840ba13aee0cd500c20b9513e77f7", "patch": "@@ -14,6 +14,6 @@ If you don't know the basics of Rust, you can look at the\n \n [rust-book]: https://doc.rust-lang.org/book/\n \"},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/json-short.rs\",\"byte_start\":62,\"byte_end\":62,\"line_start\":1,\"line_end\":1,\"column_start\":63,\"column_end\":63,\"is_primary\":true,\"text\":[{\"text\":\"// compile-flags: --json=diagnostic-short --error-format=json\",\"highlight_start\":63,\"highlight_end\":63}],\"label\":\"consider adding a `main` function to `$DIR/json-short.rs`\",\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":\"$DIR/json-short.rs:1:63: error[E0601]: `main` function not found in crate `json_short`\n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"aborting due to previous error\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"error: aborting due to previous error\n-\",\"tool_metadata\":null}\n+\"}"}, {"sha": "09f0fc90032dc1402a29c9e9bb07262552d46254", "filename": "src/test/ui/lint/unused_parens_json_suggestion.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_parens_json_suggestion.stderr?ref=50572d66295840ba13aee0cd500c20b9513e77f7", "patch": "@@ -10,7 +10,7 @@ note: the lint level is defined here\n LL | #![deny(unused_parens)]\n    |         ^^^^^^^^^^^^^\n \n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"aborting due to previous error\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"error: aborting due to previous error\n \n-\",\"tool_metadata\":null}\n+\"}"}, {"sha": "5fb67fd7c95a3a99a8ff0cbbd4c7c9cbab1f4c97", "filename": "src/test/ui/lint/unused_parens_remove_json_suggestion.stderr", "status": "modified", "additions": 11, "deletions": 11, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Flint%2Funused_parens_remove_json_suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Flint%2Funused_parens_remove_json_suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Funused_parens_remove_json_suggestion.stderr?ref=50572d66295840ba13aee0cd500c20b9513e77f7", "patch": "@@ -10,63 +10,63 @@ note: the lint level is defined here\n LL | #![deny(unused_parens)]\n    |         ^^^^^^^^^^^^^\n \n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"unnecessary parentheses around `if` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":631,\"byte_end\":634,\"line_start\":28,\"line_end\":28,\"column_start\":7,\"column_end\":10,\"is_primary\":true,\"text\":[{\"text\":\"    if(c) {\n   --> $DIR/unused_parens_remove_json_suggestion.rs:28:7\n    |\n LL |     if(c) {\n    |       ^^^ help: remove these parentheses\n \n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"unnecessary parentheses around `if` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":711,\"byte_end\":714,\"line_start\":32,\"line_end\":32,\"column_start\":8,\"column_end\":11,\"is_primary\":true,\"text\":[{\"text\":\"    if (c){\n   --> $DIR/unused_parens_remove_json_suggestion.rs:32:8\n    |\n LL |     if (c){\n    |        ^^^ help: remove these parentheses\n \n-\",\"tool_metadata\":null}\n-{\"message\":\"unnecessary parentheses around `while` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":793,\"byte_end\":808,\"line_start\":36,\"line_end\":36,\"column_start\":11,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"    while (false && true){\",\"highlight_start\":11,\"highlight_end\":26}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"remove these parentheses\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":793,\"byte_end\":808,\"line_start\":36,\"line_end\":36,\"column_start\":11,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"    while (false && true){\",\"highlight_start\":11,\"highlight_end\":26}],\"label\":null,\"suggested_replacement\":\"false && true \",\"suggestion_applicability\":\"MachineApplicable\",\"expansion\":null}],\"children\":[],\"rendered\":null,\"tool_metadata\":null}],\"rendered\":\"error: unnecessary parentheses around `while` condition\n+\"}\n+{\"message\":\"unnecessary parentheses around `while` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":793,\"byte_end\":808,\"line_start\":36,\"line_end\":36,\"column_start\":11,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"    while (false && true){\",\"highlight_start\":11,\"highlight_end\":26}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"remove these parentheses\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":793,\"byte_end\":808,\"line_start\":36,\"line_end\":36,\"column_start\":11,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"    while (false && true){\",\"highlight_start\":11,\"highlight_end\":26}],\"label\":null,\"suggested_replacement\":\"false && true \",\"suggestion_applicability\":\"MachineApplicable\",\"expansion\":null}],\"children\":[],\"rendered\":null}],\"rendered\":\"error: unnecessary parentheses around `while` condition\n   --> $DIR/unused_parens_remove_json_suggestion.rs:36:11\n    |\n LL |     while (false && true){\n    |           ^^^^^^^^^^^^^^^ help: remove these parentheses\n \n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"unnecessary parentheses around `if` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":821,\"byte_end\":824,\"line_start\":37,\"line_end\":37,\"column_start\":12,\"column_end\":15,\"is_primary\":true,\"text\":[{\"text\":\"        if (c) {\n   --> $DIR/unused_parens_remove_json_suggestion.rs:37:12\n    |\n LL |         if (c) {\n    |            ^^^ help: remove these parentheses\n \n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"unnecessary parentheses around `while` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":918,\"byte_end\":933,\"line_start\":43,\"line_end\":43,\"column_start\":10,\"column_end\":25,\"is_primary\":true,\"text\":[{\"text\":\"    while(true && false) {\n   --> $DIR/unused_parens_remove_json_suggestion.rs:43:10\n    |\n LL |     while(true && false) {\n    |          ^^^^^^^^^^^^^^^ help: remove these parentheses\n \n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"unnecessary parentheses around `for` iterator expression\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":987,\"byte_end\":995,\"line_start\":44,\"line_end\":44,\"column_start\":18,\"column_end\":26,\"is_primary\":true,\"text\":[{\"text\":\"        for _ in (0 .. 3){\n   --> $DIR/unused_parens_remove_json_suggestion.rs:44:18\n    |\n LL |         for _ in (0 .. 3){\n    |                  ^^^^^^^^ help: remove these parentheses\n \n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"unnecessary parentheses around `for` iterator expression\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":1088,\"byte_end\":1096,\"line_start\":49,\"line_end\":49,\"column_start\":14,\"column_end\":22,\"is_primary\":true,\"text\":[{\"text\":\"    for _ in (0 .. 3) {\n   --> $DIR/unused_parens_remove_json_suggestion.rs:49:14\n    |\n LL |     for _ in (0 .. 3) {\n    |              ^^^^^^^^ help: remove these parentheses\n \n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"unnecessary parentheses around `while` condition\",\"code\":{\"code\":\"unused_parens\",\"explanation\":null},\"level\":\"error\",\"spans\":[{\"file_name\":\"$DIR/unused_parens_remove_json_suggestion.rs\",\"byte_start\":1147,\"byte_end\":1162,\"line_start\":50,\"line_end\":50,\"column_start\":15,\"column_end\":30,\"is_primary\":true,\"text\":[{\"text\":\"        while (true && false) {\n   --> $DIR/unused_parens_remove_json_suggestion.rs:50:15\n    |\n LL |         while (true && false) {\n    |               ^^^^^^^^^^^^^^^ help: remove these parentheses\n \n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"aborting due to 9 previous errors\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"error: aborting due to 9 previous errors\n \n-\",\"tool_metadata\":null}\n+\"}"}, {"sha": "21342e2ef37a02e01900a3f6a7cde276f1d1d687", "filename": "src/test/ui/lint/use_suggestion_json.stderr", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fuse_suggestion_json.stderr?ref=50572d66295840ba13aee0cd500c20b9513e77f7", "patch": "@@ -376,8 +376,7 @@ mod foo {\n         }\n       ],\n       \"children\": [],\n-      \"rendered\": null,\n-      \"tool_metadata\": null\n+      \"rendered\": null\n     }\n   ],\n   \"rendered\": \"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror[E0412]\\u001b[0m\\u001b[0m\\u001b[1m: cannot find type `Iter` in this scope\\u001b[0m\n@@ -398,8 +397,7 @@ mod foo {\n \\u001b[0m   \\u001b[0m\\u001b[0m\\u001b[1m\\u001b[38;5;12m|\\u001b[0m\n \\u001b[0m     and 8 other candidates\\u001b[0m\n \n-\",\n-  \"tool_metadata\": null\n+\"\n }\n {\n   \"message\": \"aborting due to previous error\",\n@@ -409,8 +407,7 @@ mod foo {\n   \"children\": [],\n   \"rendered\": \"\\u001b[0m\\u001b[1m\\u001b[38;5;9merror\\u001b[0m\\u001b[0m\\u001b[1m: aborting due to previous error\\u001b[0m\n \n-\",\n-  \"tool_metadata\": null\n+\"\n }\n {\n   \"message\": \"For more information about this error, try `rustc --explain E0412`.\",\n@@ -419,6 +416,5 @@ mod foo {\n   \"spans\": [],\n   \"children\": [],\n   \"rendered\": \"\\u001b[0m\\u001b[1mFor more information about this error, try `rustc --explain E0412`.\\u001b[0m\n-\",\n-  \"tool_metadata\": null\n+\"\n }"}, {"sha": "93c246cb3f501273fd04fbbe743f21ad6e41a955", "filename": "src/test/ui/terminal-width/flag-json.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Fterminal-width%2Fflag-json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Fterminal-width%2Fflag-json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fterminal-width%2Fflag-json.stderr?ref=50572d66295840ba13aee0cd500c20b9513e77f7", "patch": "@@ -32,9 +32,9 @@ LL | ..._: () = 42;\n    |       |\n    |       expected due to this\n \n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"aborting due to previous error\",\"code\":null,\"level\":\"error\",\"spans\":[],\"children\":[],\"rendered\":\"error: aborting due to previous error\n \n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"For more information about this error, try `rustc --explain E0308`.\",\"code\":null,\"level\":\"failure-note\",\"spans\":[],\"children\":[],\"rendered\":\"For more information about this error, try `rustc --explain E0308`.\n-\",\"tool_metadata\":null}\n+\"}"}, {"sha": "cee3f6c1495c772e34ce55ea027faaec71dacafa", "filename": "src/test/ui/unused-crate-deps/extern-loc-defl-json.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-defl-json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-defl-json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-defl-json.stderr?ref=50572d66295840ba13aee0cd500c20b9513e77f7", "patch": "@@ -1,4 +1,4 @@\n-{\"message\":\"external crate `bar` unused in `extern_loc_defl_json`: remove the dependency or add `use bar as _;`\",\"code\":{\"code\":\"unused_crate_dependencies\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-defl-json.rs\",\"byte_start\":146,\"byte_end\":146,\"line_start\":7,\"line_end\":7,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":1,\"highlight_end\":1}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"the lint level is defined here\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-defl-json.rs\",\"byte_start\":154,\"byte_end\":179,\"line_start\":7,\"line_end\":7,\"column_start\":9,\"column_end\":34,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":9,\"highlight_end\":34}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null,\"tool_metadata\":null},{\"message\":\"remove unnecessary dependency `bar`\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null,\"tool_metadata\":null},{\"message\":\"json extern location\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null,\"tool_metadata\":{\"name\":\"bar\"}}],\"rendered\":\"warning: external crate `bar` unused in `extern_loc_defl_json`: remove the dependency or add `use bar as _;`\n+{\"message\":\"external crate `bar` unused in `extern_loc_defl_json`: remove the dependency or add `use bar as _;`\",\"code\":{\"code\":\"unused_crate_dependencies\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-defl-json.rs\",\"byte_start\":146,\"byte_end\":146,\"line_start\":7,\"line_end\":7,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":1,\"highlight_end\":1}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"the lint level is defined here\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-defl-json.rs\",\"byte_start\":154,\"byte_end\":179,\"line_start\":7,\"line_end\":7,\"column_start\":9,\"column_end\":34,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":9,\"highlight_end\":34}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"remove unnecessary dependency `bar`\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"json extern location\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null,\"tool_metadata\":{\"name\":\"bar\"}}],\"rendered\":\"warning: external crate `bar` unused in `extern_loc_defl_json`: remove the dependency or add `use bar as _;`\n   --> $DIR/extern-loc-defl-json.rs:7:1\n    |\n LL | #![warn(unused_crate_dependencies)]\n@@ -11,7 +11,7 @@ LL | #![warn(unused_crate_dependencies)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: remove unnecessary dependency `bar`\n \n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"1 warning emitted\",\"code\":null,\"level\":\"warning\",\"spans\":[],\"children\":[],\"rendered\":\"warning: 1 warning emitted\n \n-\",\"tool_metadata\":null}\n+\"}"}, {"sha": "5fc8397e4698c5b77ec9fe11f4f63f2a5515b177", "filename": "src/test/ui/unused-crate-deps/extern-loc-json-json.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json-json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json-json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-json-json.stderr?ref=50572d66295840ba13aee0cd500c20b9513e77f7", "patch": "@@ -1,4 +1,4 @@\n-{\"message\":\"external crate `bar` unused in `extern_loc_json_json`: remove the dependency or add `use bar as _;`\",\"code\":{\"code\":\"unused_crate_dependencies\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-json-json.rs\",\"byte_start\":169,\"byte_end\":169,\"line_start\":7,\"line_end\":7,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":1,\"highlight_end\":1}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"the lint level is defined here\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-json-json.rs\",\"byte_start\":177,\"byte_end\":202,\"line_start\":7,\"line_end\":7,\"column_start\":9,\"column_end\":34,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":9,\"highlight_end\":34}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null,\"tool_metadata\":null},{\"message\":\"remove unnecessary dependency `bar`\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null,\"tool_metadata\":null},{\"message\":\"json extern location\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null,\"tool_metadata\":{\"key\":123,\"value\":{}}}],\"rendered\":\"warning: external crate `bar` unused in `extern_loc_json_json`: remove the dependency or add `use bar as _;`\n+{\"message\":\"external crate `bar` unused in `extern_loc_json_json`: remove the dependency or add `use bar as _;`\",\"code\":{\"code\":\"unused_crate_dependencies\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-json-json.rs\",\"byte_start\":169,\"byte_end\":169,\"line_start\":7,\"line_end\":7,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":1,\"highlight_end\":1}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"the lint level is defined here\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-json-json.rs\",\"byte_start\":177,\"byte_end\":202,\"line_start\":7,\"line_end\":7,\"column_start\":9,\"column_end\":34,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":9,\"highlight_end\":34}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"remove unnecessary dependency `bar`\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"json extern location\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null,\"tool_metadata\":{\"key\":123,\"value\":{}}}],\"rendered\":\"warning: external crate `bar` unused in `extern_loc_json_json`: remove the dependency or add `use bar as _;`\n   --> $DIR/extern-loc-json-json.rs:7:1\n    |\n LL | #![warn(unused_crate_dependencies)]\n@@ -11,7 +11,7 @@ LL | #![warn(unused_crate_dependencies)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: remove unnecessary dependency `bar`\n \n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"1 warning emitted\",\"code\":null,\"level\":\"warning\",\"spans\":[],\"children\":[],\"rendered\":\"warning: 1 warning emitted\n \n-\",\"tool_metadata\":null}\n+\"}"}, {"sha": "25f099927fd0af9309c9e5edaa3d14919e9300a3", "filename": "src/test/ui/unused-crate-deps/extern-loc-raw-json.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw-json.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/50572d66295840ba13aee0cd500c20b9513e77f7/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw-json.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funused-crate-deps%2Fextern-loc-raw-json.stderr?ref=50572d66295840ba13aee0cd500c20b9513e77f7", "patch": "@@ -1,4 +1,4 @@\n-{\"message\":\"external crate `bar` unused in `extern_loc_raw_json`: remove the dependency or add `use bar as _;`\",\"code\":{\"code\":\"unused_crate_dependencies\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-raw-json.rs\",\"byte_start\":162,\"byte_end\":162,\"line_start\":7,\"line_end\":7,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":1,\"highlight_end\":1}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"the lint level is defined here\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-raw-json.rs\",\"byte_start\":170,\"byte_end\":195,\"line_start\":7,\"line_end\":7,\"column_start\":9,\"column_end\":34,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":9,\"highlight_end\":34}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null,\"tool_metadata\":null},{\"message\":\"remove unnecessary dependency `bar` at `in-the-test-file`\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null,\"tool_metadata\":null},{\"message\":\"raw extern location\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-raw-json.rs\",\"byte_start\":0,\"byte_end\":0,\"line_start\":1,\"line_end\":1,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[],\"label\":null,\"suggested_replacement\":\"in-the-test-file\",\"suggestion_applicability\":\"Unspecified\",\"expansion\":null}],\"children\":[],\"rendered\":null,\"tool_metadata\":null},{\"message\":\"json extern location\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null,\"tool_metadata\":\"in-the-test-file\"}],\"rendered\":\"warning: external crate `bar` unused in `extern_loc_raw_json`: remove the dependency or add `use bar as _;`\n+{\"message\":\"external crate `bar` unused in `extern_loc_raw_json`: remove the dependency or add `use bar as _;`\",\"code\":{\"code\":\"unused_crate_dependencies\",\"explanation\":null},\"level\":\"warning\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-raw-json.rs\",\"byte_start\":162,\"byte_end\":162,\"line_start\":7,\"line_end\":7,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":1,\"highlight_end\":1}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[{\"message\":\"the lint level is defined here\",\"code\":null,\"level\":\"note\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-raw-json.rs\",\"byte_start\":170,\"byte_end\":195,\"line_start\":7,\"line_end\":7,\"column_start\":9,\"column_end\":34,\"is_primary\":true,\"text\":[{\"text\":\"#![warn(unused_crate_dependencies)]\",\"highlight_start\":9,\"highlight_end\":34}],\"label\":null,\"suggested_replacement\":null,\"suggestion_applicability\":null,\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"remove unnecessary dependency `bar` at `in-the-test-file`\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null},{\"message\":\"raw extern location\",\"code\":null,\"level\":\"help\",\"spans\":[{\"file_name\":\"$DIR/extern-loc-raw-json.rs\",\"byte_start\":0,\"byte_end\":0,\"line_start\":1,\"line_end\":1,\"column_start\":1,\"column_end\":1,\"is_primary\":true,\"text\":[],\"label\":null,\"suggested_replacement\":\"in-the-test-file\",\"suggestion_applicability\":\"Unspecified\",\"expansion\":null}],\"children\":[],\"rendered\":null},{\"message\":\"json extern location\",\"code\":null,\"level\":\"help\",\"spans\":[],\"children\":[],\"rendered\":null,\"tool_metadata\":\"in-the-test-file\"}],\"rendered\":\"warning: external crate `bar` unused in `extern_loc_raw_json`: remove the dependency or add `use bar as _;`\n   --> $DIR/extern-loc-raw-json.rs:7:1\n    |\n LL | #![warn(unused_crate_dependencies)]\n@@ -11,7 +11,7 @@ LL | #![warn(unused_crate_dependencies)]\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    = help: remove unnecessary dependency `bar` at `in-the-test-file`\n \n-\",\"tool_metadata\":null}\n+\"}\n {\"message\":\"1 warning emitted\",\"code\":null,\"level\":\"warning\",\"spans\":[],\"children\":[],\"rendered\":\"warning: 1 warning emitted\n \n-\",\"tool_metadata\":null}\n+\"}"}]}