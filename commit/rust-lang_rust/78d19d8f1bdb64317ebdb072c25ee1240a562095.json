{"sha": "78d19d8f1bdb64317ebdb072c25ee1240a562095", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4ZDE5ZDhmMWJkYjY0MzE3ZWJkYjA3MmMyNWVlMTI0MGE1NjIwOTU=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-12T23:26:45Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2012-08-12T23:26:45Z"}, "message": "std: Add cell to the std crate and make it build", "tree": {"sha": "4b2a7f9e3cfbcc8114d4ab8873b785619beacd6f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4b2a7f9e3cfbcc8114d4ab8873b785619beacd6f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78d19d8f1bdb64317ebdb072c25ee1240a562095", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78d19d8f1bdb64317ebdb072c25ee1240a562095", "html_url": "https://github.com/rust-lang/rust/commit/78d19d8f1bdb64317ebdb072c25ee1240a562095", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78d19d8f1bdb64317ebdb072c25ee1240a562095/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9169a1b26a556bbd5befd344a5b0912901859e5d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9169a1b26a556bbd5befd344a5b0912901859e5d", "html_url": "https://github.com/rust-lang/rust/commit/9169a1b26a556bbd5befd344a5b0912901859e5d"}], "stats": {"total": 9, "additions": 5, "deletions": 4}, "files": [{"sha": "734eb0af8fe136658f69e1518385dc5a7124bba6", "filename": "src/libstd/cell.rs", "status": "modified", "additions": 3, "deletions": 4, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/78d19d8f1bdb64317ebdb072c25ee1240a562095/src%2Flibstd%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78d19d8f1bdb64317ebdb072c25ee1240a562095/src%2Flibstd%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcell.rs?ref=78d19d8f1bdb64317ebdb072c25ee1240a562095", "patch": "@@ -18,18 +18,18 @@ fn empty_cell<T>() -> Cell<T> {\n impl<T> Cell<T> {\n     /// Yields the value, failing if the cell is empty.\n     fn take() -> T {\n-        let value = none;\n+        let mut value = none;\n         value <-> self.value;\n         if value.is_none() {\n-            fail \"attempt to take an empty cell\";\n+            fail ~\"attempt to take an empty cell\";\n         }\n         return option::unwrap(value);\n     }\n \n     /// Returns the value, failing if the cell is full.\n     fn put_back(+value: T) {\n         if self.value.is_none() {\n-            fail \"attempt to put a value back into a full cell\";\n+            fail ~\"attempt to put a value back into a full cell\";\n         }\n         self.value = some(move value);\n     }\n@@ -39,4 +39,3 @@ impl<T> Cell<T> {\n         self.value.is_none()\n     }\n }\n-"}, {"sha": "b2d9d3770fc9fcdc9ae090d6668d311f62823b20", "filename": "src/libstd/std.rc", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/78d19d8f1bdb64317ebdb072c25ee1240a562095/src%2Flibstd%2Fstd.rc", "raw_url": "https://github.com/rust-lang/rust/raw/78d19d8f1bdb64317ebdb072c25ee1240a562095/src%2Flibstd%2Fstd.rc", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fstd.rc?ref=78d19d8f1bdb64317ebdb072c25ee1240a562095", "patch": "@@ -26,6 +26,7 @@ export ebml, dbg, getopts, json, rand, sha1, term, time, prettyprint;\n export test, tempfile, serialization;\n export cmp;\n export base64;\n+export cell;\n \n // General io and system-services modules\n \n@@ -45,6 +46,7 @@ mod uv_global_loop;\n \n mod c_vec;\n mod timer;\n+mod cell;\n \n // Concurrency\n "}]}