{"sha": "1164c946b0a5889f6f0ca1dba48db0cf36c32915", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExNjRjOTQ2YjBhNTg4OWY2ZjBjYTFkYmE0OGRiMGNmMzZjMzI5MTU=", "commit": {"author": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-08-25T13:38:14Z"}, "committer": {"name": "Deadbeef", "email": "ent3rm4n@gmail.com", "date": "2021-08-27T05:07:37Z"}, "message": "Fix visiting twice", "tree": {"sha": "d81037417c5fdd009c8b7aa709a55c1316cce497", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d81037417c5fdd009c8b7aa709a55c1316cce497"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1164c946b0a5889f6f0ca1dba48db0cf36c32915", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEQ7Fl7qPq2YcWF1dqAn35M4hird0FAmEocxkACgkQAn35M4hi\nrd1vHg/9GTXTS2EykYvKeo7S5W6rKhkH+yxc6lrBoW6Dv5Q7L7a3f5VoVB5y7GFx\nPaFiomIl5MlZLikskpUte7z977WwMKlYb3fT+ZcWLrq5crmbQtOpj028+6bjGZAF\n3+oBKA04vIGZR3Z7oYNntoPvKpZ1Xuz4X9LpzIoFiu3+hA8zPNPVoWxAZVuLijGC\nl4rIuKdV/auqhTCIUKesMld36p4CRiVaXFgUq0SiJxTkpplDi5N/maadpI4xD2B+\nKQf7kghSw2LT4uRO753dhzlUINxPEj+UDgJeI6qMn/LVyIcKa4fqqjPu+0j3qC18\n8g29pe1nO5HEjILwczTRpY4wqJ/T1bAxUokfUztV71YAWKEykE4i0BO6+XbFnrUI\n8rbM19SD7rTLC2f51E+An4LNP7Vg9LC0I5O1NM/g6f2gMs3F1852Uqfdg+C/OGHc\nkY/gphuj9cwH22aTtsvR7epevE49/LZV7LZ1zdBCgcj9t+2u8IkUgiGrkxktMgCD\n8agJKJeoo+LK7n8Q3hMGb5T/ma0YmMCNrTNPSexBz9TbOELlLhwNKO67oRaD5uwp\nIoFieEFtgML3aZXaR8ePJsYMjM0WLjdqCt+43t6CokBX6Wt05YmPTlCWenKgFfdv\nIkEYb5zq99tAXZEkrIPt3v/2r4l+ejL7cLJjMQYvolELLVgoN5U=\n=Zo5x\n-----END PGP SIGNATURE-----", "payload": "tree d81037417c5fdd009c8b7aa709a55c1316cce497\nparent 8660832086db649e5a7e489ab40f303fa3f6638e\nauthor Deadbeef <ent3rm4n@gmail.com> 1629898694 +0000\ncommitter Deadbeef <ent3rm4n@gmail.com> 1630040857 +0000\n\nFix visiting twice\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1164c946b0a5889f6f0ca1dba48db0cf36c32915", "html_url": "https://github.com/rust-lang/rust/commit/1164c946b0a5889f6f0ca1dba48db0cf36c32915", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1164c946b0a5889f6f0ca1dba48db0cf36c32915/comments", "author": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "committer": {"login": "fee1-dead", "id": 43851243, "node_id": "MDQ6VXNlcjQzODUxMjQz", "avatar_url": "https://avatars.githubusercontent.com/u/43851243?v=4", "gravatar_id": "", "url": "https://api.github.com/users/fee1-dead", "html_url": "https://github.com/fee1-dead", "followers_url": "https://api.github.com/users/fee1-dead/followers", "following_url": "https://api.github.com/users/fee1-dead/following{/other_user}", "gists_url": "https://api.github.com/users/fee1-dead/gists{/gist_id}", "starred_url": "https://api.github.com/users/fee1-dead/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/fee1-dead/subscriptions", "organizations_url": "https://api.github.com/users/fee1-dead/orgs", "repos_url": "https://api.github.com/users/fee1-dead/repos", "events_url": "https://api.github.com/users/fee1-dead/events{/privacy}", "received_events_url": "https://api.github.com/users/fee1-dead/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8660832086db649e5a7e489ab40f303fa3f6638e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8660832086db649e5a7e489ab40f303fa3f6638e", "html_url": "https://github.com/rust-lang/rust/commit/8660832086db649e5a7e489ab40f303fa3f6638e"}], "stats": {"total": 21, "additions": 6, "deletions": 15}, "files": [{"sha": "c0ea710fdcb4e352debdcac7c97fa3aa3d4ebf8f", "filename": "compiler/rustc_ast_passes/src/ast_validation.rs", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1164c946b0a5889f6f0ca1dba48db0cf36c32915/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1164c946b0a5889f6f0ca1dba48db0cf36c32915/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_ast_passes%2Fsrc%2Fast_validation.rs?ref=1164c946b0a5889f6f0ca1dba48db0cf36c32915", "patch": "@@ -17,11 +17,10 @@ use rustc_errors::{error_code, pluralize, struct_span_err, Applicability};\n use rustc_parse::validate_attr;\n use rustc_session::lint::builtin::PATTERNS_IN_FNS_WITHOUT_BODY;\n use rustc_session::lint::{BuiltinLintDiagnostics, LintBuffer};\n-use rustc_session::{DiagnosticMessageId, Session};\n+use rustc_session::Session;\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{kw, sym, Ident};\n use rustc_span::Span;\n-use std::convert::TryInto;\n use std::mem;\n use std::ops::DerefMut;\n \n@@ -1177,6 +1176,7 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n                 let kind = FnKind::Fn(FnCtxt::Free, item.ident, sig, &item.vis, body.as_deref());\n                 self.visit_fn(kind, item.span, item.id);\n                 walk_list!(self, visit_attribute, &item.attrs);\n+                return; // Avoid visiting again.\n             }\n             ItemKind::ForeignMod(ForeignMod { unsafety, .. }) => {\n                 let old_item = mem::replace(&mut self.extern_mod, Some(item));\n@@ -1440,19 +1440,10 @@ impl<'a> Visitor<'a> for AstValidator<'a> {\n         match bound {\n             GenericBound::Trait(_, TraitBoundModifier::MaybeConst) => {\n                 if !self.is_tilde_const_allowed {\n-                    let msg = \"`~const` is not allowed here\";\n-                    let id_span_msg = (\n-                        DiagnosticMessageId::StabilityId(67792.try_into().ok()),\n-                        Some(bound.span()),\n-                        msg.to_owned(),\n-                    );\n-                    let fresh = self.session.one_time_diagnostics.borrow_mut().insert(id_span_msg);\n-                    if fresh {\n-                        self.err_handler()\n-                            .struct_span_err(bound.span(), msg)\n-                            .note(\"only allowed on bounds on traits' associated types, const fns, const impls and its associated functions\")\n-                            .emit();\n-                    }\n+                    self.err_handler()\n+                        .struct_span_err(bound.span(), \"`~const` is not allowed here\")\n+                        .note(\"only allowed on bounds on traits' associated types, const fns, const impls and its associated functions\")\n+                        .emit();\n                 }\n             }\n "}]}