{"sha": "da25539c1ab295ec40261109557dd4526923928c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhMjU1MzljMWFiMjk1ZWM0MDI2MTEwOTU1N2RkNDUyNjkyMzkyOGM=", "commit": {"author": {"name": "Felix S. Klock II", "email": "pnkfelix@pnkfx.org", "date": "2014-04-08T20:07:15Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2014-04-10T22:21:59Z"}, "message": "Generalized the pretty-print entry points to support `-o <file>`.", "tree": {"sha": "50f6d30ae86ddb7424d0384f7428a42a84e93a1c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/50f6d30ae86ddb7424d0384f7428a42a84e93a1c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da25539c1ab295ec40261109557dd4526923928c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da25539c1ab295ec40261109557dd4526923928c", "html_url": "https://github.com/rust-lang/rust/commit/da25539c1ab295ec40261109557dd4526923928c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da25539c1ab295ec40261109557dd4526923928c/comments", "author": {"login": "pnkfelix", "id": 173127, "node_id": "MDQ6VXNlcjE3MzEyNw==", "avatar_url": "https://avatars.githubusercontent.com/u/173127?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pnkfelix", "html_url": "https://github.com/pnkfelix", "followers_url": "https://api.github.com/users/pnkfelix/followers", "following_url": "https://api.github.com/users/pnkfelix/following{/other_user}", "gists_url": "https://api.github.com/users/pnkfelix/gists{/gist_id}", "starred_url": "https://api.github.com/users/pnkfelix/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pnkfelix/subscriptions", "organizations_url": "https://api.github.com/users/pnkfelix/orgs", "repos_url": "https://api.github.com/users/pnkfelix/repos", "events_url": "https://api.github.com/users/pnkfelix/events{/privacy}", "received_events_url": "https://api.github.com/users/pnkfelix/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a70f8d9cf3619aed475874c1b27595e0c86e627e", "url": "https://api.github.com/repos/rust-lang/rust/commits/a70f8d9cf3619aed475874c1b27595e0c86e627e", "html_url": "https://github.com/rust-lang/rust/commit/a70f8d9cf3619aed475874c1b27595e0c86e627e"}], "stats": {"total": 55, "additions": 50, "deletions": 5}, "files": [{"sha": "1b3653c6948a699910344b7f12e88c22c2ec1a12", "filename": "src/librustc/driver/driver.rs", "status": "modified", "additions": 16, "deletions": 4, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/da25539c1ab295ec40261109557dd4526923928c/src%2Flibrustc%2Fdriver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da25539c1ab295ec40261109557dd4526923928c/src%2Flibrustc%2Fdriver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fdriver%2Fdriver.rs?ref=da25539c1ab295ec40261109557dd4526923928c", "patch": "@@ -664,7 +664,8 @@ impl pprust::PpAnn for TypedAnnotation {\n pub fn pretty_print_input(sess: Session,\n                           cfg: ast::CrateConfig,\n                           input: &Input,\n-                          ppm: PpMode) {\n+                          ppm: PpMode,\n+                          ofile: Option<Path>) {\n     let krate = phase_1_parse_input(&sess, cfg, input);\n     let id = link::find_crate_id(krate.attrs.as_slice(), input.filestem());\n \n@@ -682,14 +683,25 @@ pub fn pretty_print_input(sess: Session,\n     let src = Vec::from_slice(sess.codemap().get_filemap(src_name).src.as_bytes());\n     let mut rdr = MemReader::new(src);\n \n+    let out = match ofile {\n+        None => ~io::stdout() as ~Writer,\n+        Some(p) => {\n+            let r = io::File::create(&p);\n+            match r {\n+                Ok(w) => ~w as ~Writer,\n+                Err(e) => fail!(\"print-print failed to open {} due to {}\",\n+                                p.display(), e),\n+            }\n+        }\n+    };\n     match ppm {\n         PpmIdentified | PpmExpandedIdentified => {\n             pprust::print_crate(sess.codemap(),\n                                 sess.diagnostic(),\n                                 &krate,\n                                 src_name,\n                                 &mut rdr,\n-                                ~io::stdout(),\n+                                out,\n                                 &IdentifiedAnnotation,\n                                 is_expanded)\n         }\n@@ -704,7 +716,7 @@ pub fn pretty_print_input(sess: Session,\n                                 &krate,\n                                 src_name,\n                                 &mut rdr,\n-                                ~io::stdout(),\n+                                out,\n                                 &annotation,\n                                 is_expanded)\n         }\n@@ -714,7 +726,7 @@ pub fn pretty_print_input(sess: Session,\n                                 &krate,\n                                 src_name,\n                                 &mut rdr,\n-                                ~io::stdout(),\n+                                out,\n                                 &pprust::NoAnn,\n                                 is_expanded)\n         }"}, {"sha": "20f9e868c30e14e3ab365216386bebf155610bc5", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da25539c1ab295ec40261109557dd4526923928c/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da25539c1ab295ec40261109557dd4526923928c/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=da25539c1ab295ec40261109557dd4526923928c", "patch": "@@ -293,7 +293,7 @@ pub fn run_compiler(args: &[~str]) {\n     });\n     match pretty {\n         Some::<d::PpMode>(ppm) => {\n-            d::pretty_print_input(sess, cfg, &input, ppm);\n+            d::pretty_print_input(sess, cfg, &input, ppm, ofile);\n             return;\n         }\n         None::<d::PpMode> => {/* continue */ }"}, {"sha": "1c1242ada8a6d901d775db0b943f26204978f622", "filename": "src/test/run-make/pretty-print-to-file/Makefile", "status": "added", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/da25539c1ab295ec40261109557dd4526923928c/src%2Ftest%2Frun-make%2Fpretty-print-to-file%2FMakefile", "raw_url": "https://github.com/rust-lang/rust/raw/da25539c1ab295ec40261109557dd4526923928c/src%2Ftest%2Frun-make%2Fpretty-print-to-file%2FMakefile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpretty-print-to-file%2FMakefile?ref=da25539c1ab295ec40261109557dd4526923928c", "patch": "@@ -0,0 +1,5 @@\n+-include ../tools.mk\n+\n+all:\n+\t$(RUSTC) -o $(TMPDIR)/input.out --pretty=normal input.rs\n+\tdiff -u $(TMPDIR)/input.out input.pp"}, {"sha": "a6dd6b6778ed0c70451d62ce0605a6e8be8060fa", "filename": "src/test/run-make/pretty-print-to-file/input.pp", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/da25539c1ab295ec40261109557dd4526923928c/src%2Ftest%2Frun-make%2Fpretty-print-to-file%2Finput.pp", "raw_url": "https://github.com/rust-lang/rust/raw/da25539c1ab295ec40261109557dd4526923928c/src%2Ftest%2Frun-make%2Fpretty-print-to-file%2Finput.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpretty-print-to-file%2Finput.pp?ref=da25539c1ab295ec40261109557dd4526923928c", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+\n+#[crate_type = \"lib\"]\n+pub fn foo() -> i32 { 45 }"}, {"sha": "8e3ec36318749eb9f4b9b6f574d0540ea9fa5f10", "filename": "src/test/run-make/pretty-print-to-file/input.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/da25539c1ab295ec40261109557dd4526923928c/src%2Ftest%2Frun-make%2Fpretty-print-to-file%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da25539c1ab295ec40261109557dd4526923928c/src%2Ftest%2Frun-make%2Fpretty-print-to-file%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-make%2Fpretty-print-to-file%2Finput.rs?ref=da25539c1ab295ec40261109557dd4526923928c", "patch": "@@ -0,0 +1,15 @@\n+// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#[crate_type=\"lib\"]\n+\n+pub fn\n+foo() -> i32\n+{ 45 }"}]}