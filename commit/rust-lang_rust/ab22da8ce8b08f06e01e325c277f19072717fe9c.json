{"sha": "ab22da8ce8b08f06e01e325c277f19072717fe9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiMjJkYThjZThiMDhmMDZlMDFlMzI1YzI3N2YxOTA3MjcxN2ZlOWM=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-03T14:59:30Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-08-03T14:59:30Z"}, "message": "annotate some unwraps with better messages", "tree": {"sha": "80a041d3f45611b4657dcacdbe34ed12468953b1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/80a041d3f45611b4657dcacdbe34ed12468953b1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab22da8ce8b08f06e01e325c277f19072717fe9c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab22da8ce8b08f06e01e325c277f19072717fe9c", "html_url": "https://github.com/rust-lang/rust/commit/ab22da8ce8b08f06e01e325c277f19072717fe9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab22da8ce8b08f06e01e325c277f19072717fe9c/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9d3fdeeed713a36be3b858c423ee17f9c053303d", "url": "https://api.github.com/repos/rust-lang/rust/commits/9d3fdeeed713a36be3b858c423ee17f9c053303d", "html_url": "https://github.com/rust-lang/rust/commit/9d3fdeeed713a36be3b858c423ee17f9c053303d"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "72bc630e7fa5e897c7c0df25dcfbe5a83ed1e170", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/ab22da8ce8b08f06e01e325c277f19072717fe9c/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab22da8ce8b08f06e01e325c277f19072717fe9c/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=ab22da8ce8b08f06e01e325c277f19072717fe9c", "patch": "@@ -249,15 +249,20 @@ fn setup(ask_user: bool) {\n             println!(\"Installing xargo: `cargo install xargo -f`\");\n         }\n \n-        if !cargo().args(&[\"install\", \"xargo\", \"-f\"]).status().unwrap().success() {\n+        if !cargo().args(&[\"install\", \"xargo\", \"-f\"]).status()\n+            .expect(\"failed to install xargo\")\n+            .success()\n+        {\n             show_error(format!(\"Failed to install xargo\"));\n         }\n     }\n \n     // Then, unless `XARGO_RUST_SRC` is set, we also need rust-src.\n     // Let's see if it is already installed.\n     if std::env::var(\"XARGO_RUST_SRC\").is_err() {\n-        let sysroot = Command::new(\"rustc\").args(&[\"--print\", \"sysroot\"]).output().unwrap().stdout;\n+        let sysroot = Command::new(\"rustc\").args(&[\"--print\", \"sysroot\"]).output()\n+            .expect(\"failed to get rustc sysroot\")\n+            .stdout;\n         let sysroot = std::str::from_utf8(&sysroot).unwrap();\n         let src = Path::new(sysroot.trim_end_matches('\\n')).join(\"lib\").join(\"rustlib\").join(\"src\");\n         if !src.exists() {\n@@ -266,7 +271,10 @@ fn setup(ask_user: bool) {\n             } else {\n                 println!(\"Installing rust-src component: `rustup component add rust-src`\");\n             }\n-            if !Command::new(\"rustup\").args(&[\"component\", \"add\", \"rust-src\"]).status().unwrap().success() {\n+            if !Command::new(\"rustup\").args(&[\"component\", \"add\", \"rust-src\"]).status()\n+                .expect(\"failed to install rust-src component\")\n+                .success()\n+            {\n                 show_error(format!(\"Failed to install rust-src component\"));\n             }\n         }\n@@ -313,7 +321,9 @@ path = \"lib.rs\"\n     if let Some(ref target) = target {\n         command.arg(\"--target\").arg(&target);\n     }\n-    if !command.status().unwrap().success()\n+    if !command.status()\n+        .expect(\"failed to run xargo\")\n+        .success()\n     {\n         show_error(format!(\"Failed to run xargo\"));\n     }"}]}