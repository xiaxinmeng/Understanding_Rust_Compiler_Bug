{"sha": "194f38fdff2b2067413b6eabf3d6da57fbba2dc1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE5NGYzOGZkZmYyYjIwNjc0MTNiNmVhYmYzZDZkYTU3ZmJiYTJkYzE=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-10-21T18:31:04Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2010-10-21T18:31:04Z"}, "message": "rustboot: Don't use ridiculous type names when describing simple types like int and uint", "tree": {"sha": "eb27acb9f91d526f4e4a6a3097a56c778dd94004", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb27acb9f91d526f4e4a6a3097a56c778dd94004"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/194f38fdff2b2067413b6eabf3d6da57fbba2dc1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/194f38fdff2b2067413b6eabf3d6da57fbba2dc1", "html_url": "https://github.com/rust-lang/rust/commit/194f38fdff2b2067413b6eabf3d6da57fbba2dc1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/194f38fdff2b2067413b6eabf3d6da57fbba2dc1/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a7840f02b0eb3d4247c66e5169f7f50e19e70d6d", "url": "https://api.github.com/repos/rust-lang/rust/commits/a7840f02b0eb3d4247c66e5169f7f50e19e70d6d", "html_url": "https://github.com/rust-lang/rust/commit/a7840f02b0eb3d4247c66e5169f7f50e19e70d6d"}], "stats": {"total": 13, "additions": 12, "deletions": 1}, "files": [{"sha": "f81f614fc820c60f3659c7cc55fc12fba5b130da", "filename": "src/boot/fe/ast.ml", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/194f38fdff2b2067413b6eabf3d6da57fbba2dc1/src%2Fboot%2Ffe%2Fast.ml", "raw_url": "https://github.com/rust-lang/rust/raw/194f38fdff2b2067413b6eabf3d6da57fbba2dc1/src%2Fboot%2Ffe%2Fast.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Fast.ml?ref=194f38fdff2b2067413b6eabf3d6da57fbba2dc1", "patch": "@@ -516,6 +516,17 @@ let sane_name (n:name) : bool =\n       | NAME_ext (prefix, _) -> sane_prefix prefix\n ;;\n \n+(* Error messages always refer to simple types structurally, not by their\n+ * user-defined names. *)\n+let rec ty_is_simple (ty:ty) : bool =\n+  match ty with\n+      TY_any | TY_nil | TY_bool | TY_mach _ | TY_int | TY_uint | TY_char\n+    | TY_str | TY_task | TY_type -> true\n+    | TY_vec ty | TY_chan ty | TY_port ty -> ty_is_simple ty\n+    | TY_tup tys -> List.for_all ty_is_simple (Array.to_list tys)\n+    | _ -> false\n+;;\n+\n (*\n  * We have multiple subset-categories of expression:\n  *"}, {"sha": "4f278d127456b029eceef6b7cdab37ae41f7c861", "filename": "src/boot/me/semant.ml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/194f38fdff2b2067413b6eabf3d6da57fbba2dc1/src%2Fboot%2Fme%2Fsemant.ml", "raw_url": "https://github.com/rust-lang/rust/raw/194f38fdff2b2067413b6eabf3d6da57fbba2dc1/src%2Fboot%2Fme%2Fsemant.ml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Fme%2Fsemant.ml?ref=194f38fdff2b2067413b6eabf3d6da57fbba2dc1", "patch": "@@ -971,7 +971,7 @@ let ty_fold_rebuild (id:Ast.ty -> Ast.ty)\n \n let rec pretty_ty_str (cx:ctxt) (fallback:(Ast.ty -> string)) (ty:Ast.ty) =\n   let cache = cx.ctxt_user_type_names in\n-  if Hashtbl.mem cache ty then\n+  if not (Ast.ty_is_simple ty) && Hashtbl.mem cache ty then\n     let names = List.map (Ast.sprintf_name ()) (Hashtbl.find_all cache ty) in\n     String.concat \" = \" names\n   else"}]}