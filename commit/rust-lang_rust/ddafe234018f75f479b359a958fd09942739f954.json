{"sha": "ddafe234018f75f479b359a958fd09942739f954", "node_id": "C_kwDOAAsO6NoAKGRkYWZlMjM0MDE4Zjc1ZjQ3OWIzNTlhOTU4ZmQwOTk0MjczOWY5NTQ", "commit": {"author": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-05-18T11:33:07Z"}, "committer": {"name": "Ryo Yoshida", "email": "low.ryoshida@gmail.com", "date": "2023-05-19T10:04:10Z"}, "message": "Consider lint check attributes on match arms in late lints\n\nAdditionally add analogous test for early lints.", "tree": {"sha": "81c08c7afc85f54d611ba76d560ab06efaf83df2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/81c08c7afc85f54d611ba76d560ab06efaf83df2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ddafe234018f75f479b359a958fd09942739f954", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEkSbsQIURluxz4rzf4laYqTBYYXEFAmRnSZoACgkQ4laYqTBY\nYXFIgxAAo7c0h8IJFjj6wT+2SRQxfoSPWJzkDL0jnS2fnBMW164CM2jQp4qRkSQe\nnOegFT/o9Zbz5LrORxlPOMiJcJponiQakRdrKExUO/IQYW6Lpf8p0vEf1ZqjQ/v9\n1nV9CjdgLwkruKd0zKyj0Sg4m8YQw+VRnaV0+BAhRrl97aap5PtWGB3ITnRX7Vdf\nzkfte53Rvmd5LoIHbNBYxDzJWgR+5ry930V1JK4oVgg+S8l+nsN8DWV6AWJEfxqm\njf4KQ49bGir0vDwhziCcJ5QmInJmADApEIT5d337gksJ3LghVR40ReehMvAp4iRf\nDKOZV4OOolmg6vaEhCxYBDKi/ffE97ARIHsLUF3kWCBx34MDlp1GzZMvgkEEMqvg\ng8rd+jpC+arY6So4M/ZX4OiXDozdH8IbdY/ITxvzQIgPuCVOHhB4EnKrAO+18Ln+\nmlYgRhQe2ytqgQ+mUViI0Nnrltf28b37yQ6JbyUI9ViQ9wTegX2XPdU9+lRSLy3p\nsJdR9z2xygv2vgmAQ/92IDKLNekBNwCtf9jfwFQ8W020Isu7G8JtuEuuxnMVkmEl\nKFSWGDq28BF0Bho9Ap1Agm3d6+HADc6EWiGoZY+Jls3B+9Ur7kVFwbB3xmDMsNO1\nJC9NhJcqY4rBOp9wUwzNXm7onnVsRwGbEGq/yiOk+h5AqZqH7Hk=\n=jAKH\n-----END PGP SIGNATURE-----", "payload": "tree 81c08c7afc85f54d611ba76d560ab06efaf83df2\nparent 19ca5692f69d20643656bf501fd171f1907ef875\nauthor Ryo Yoshida <low.ryoshida@gmail.com> 1684409587 +0900\ncommitter Ryo Yoshida <low.ryoshida@gmail.com> 1684490650 +0900\n\nConsider lint check attributes on match arms in late lints\n\nAdditionally add analogous test for early lints.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ddafe234018f75f479b359a958fd09942739f954", "html_url": "https://github.com/rust-lang/rust/commit/ddafe234018f75f479b359a958fd09942739f954", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ddafe234018f75f479b359a958fd09942739f954/comments", "author": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lowr", "id": 24381114, "node_id": "MDQ6VXNlcjI0MzgxMTE0", "avatar_url": "https://avatars.githubusercontent.com/u/24381114?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lowr", "html_url": "https://github.com/lowr", "followers_url": "https://api.github.com/users/lowr/followers", "following_url": "https://api.github.com/users/lowr/following{/other_user}", "gists_url": "https://api.github.com/users/lowr/gists{/gist_id}", "starred_url": "https://api.github.com/users/lowr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lowr/subscriptions", "organizations_url": "https://api.github.com/users/lowr/orgs", "repos_url": "https://api.github.com/users/lowr/repos", "events_url": "https://api.github.com/users/lowr/events{/privacy}", "received_events_url": "https://api.github.com/users/lowr/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "19ca5692f69d20643656bf501fd171f1907ef875", "url": "https://api.github.com/repos/rust-lang/rust/commits/19ca5692f69d20643656bf501fd171f1907ef875", "html_url": "https://github.com/rust-lang/rust/commit/19ca5692f69d20643656bf501fd171f1907ef875"}], "stats": {"total": 123, "additions": 82, "deletions": 41}, "files": [{"sha": "8a4a451f8a837377ff2f6fa4e9d2a442937b3541", "filename": "compiler/rustc_lint/src/late.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ddafe234018f75f479b359a958fd09942739f954/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddafe234018f75f479b359a958fd09942739f954/compiler%2Frustc_lint%2Fsrc%2Flate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint%2Fsrc%2Flate.rs?ref=ddafe234018f75f479b359a958fd09942739f954", "patch": "@@ -240,8 +240,10 @@ impl<'tcx, T: LateLintPass<'tcx>> hir_visit::Visitor<'tcx> for LateContextAndPas\n     }\n \n     fn visit_arm(&mut self, a: &'tcx hir::Arm<'tcx>) {\n-        lint_callback!(self, check_arm, a);\n-        hir_visit::walk_arm(self, a);\n+        self.with_lint_attrs(a.hir_id, |cx| {\n+            lint_callback!(cx, check_arm, a);\n+            hir_visit::walk_arm(cx, a);\n+        })\n     }\n \n     fn visit_generic_param(&mut self, p: &'tcx hir::GenericParam<'tcx>) {"}, {"sha": "0c820ef9a29a9a83db048c970244f80dd3196760", "filename": "tests/ui/lint/lint-attr-everywhere-early.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/ddafe234018f75f479b359a958fd09942739f954/tests%2Fui%2Flint%2Flint-attr-everywhere-early.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddafe234018f75f479b359a958fd09942739f954/tests%2Fui%2Flint%2Flint-attr-everywhere-early.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Flint-attr-everywhere-early.rs?ref=ddafe234018f75f479b359a958fd09942739f954", "patch": "@@ -134,6 +134,14 @@ fn expressions() {\n         }\n     }\n \n+    match f {\n+        #[deny(ellipsis_inclusive_range_patterns)]\n+        Match{f1: 0...100} => {}\n+        //~^ ERROR range patterns are deprecated\n+        //~| WARNING this is accepted in the current edition\n+        _ => {}\n+    }\n+\n     // Statement Block\n     {\n         #![deny(unsafe_code)]"}, {"sha": "fac0eb4faff827d315f845d69389a1d0dd642111", "filename": "tests/ui/lint/lint-attr-everywhere-early.stderr", "status": "modified", "additions": 31, "deletions": 17, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/ddafe234018f75f479b359a958fd09942739f954/tests%2Fui%2Flint%2Flint-attr-everywhere-early.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ddafe234018f75f479b359a958fd09942739f954/tests%2Fui%2Flint%2Flint-attr-everywhere-early.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Flint-attr-everywhere-early.stderr?ref=ddafe234018f75f479b359a958fd09942739f954", "patch": "@@ -384,103 +384,117 @@ note: the lint level is defined here\n LL |         #[deny(while_true)]\n    |                ^^^^^^^^^^\n \n+error: `...` range patterns are deprecated\n+  --> $DIR/lint-attr-everywhere-early.rs:139:20\n+   |\n+LL |         Match{f1: 0...100} => {}\n+   |                    ^^^ help: use `..=` for an inclusive range\n+   |\n+   = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n+   = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n+note: the lint level is defined here\n+  --> $DIR/lint-attr-everywhere-early.rs:138:16\n+   |\n+LL |         #[deny(ellipsis_inclusive_range_patterns)]\n+   |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n error: usage of an `unsafe` block\n-  --> $DIR/lint-attr-everywhere-early.rs:140:9\n+  --> $DIR/lint-attr-everywhere-early.rs:148:9\n    |\n LL |         unsafe {}\n    |         ^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-early.rs:139:17\n+  --> $DIR/lint-attr-everywhere-early.rs:147:17\n    |\n LL |         #![deny(unsafe_code)]\n    |                 ^^^^^^^^^^^\n \n error: usage of an `unsafe` block\n-  --> $DIR/lint-attr-everywhere-early.rs:144:9\n+  --> $DIR/lint-attr-everywhere-early.rs:152:9\n    |\n LL |         unsafe {}\n    |         ^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-early.rs:143:16\n+  --> $DIR/lint-attr-everywhere-early.rs:151:16\n    |\n LL |         #[deny(unsafe_code)]\n    |                ^^^^^^^^^^^\n \n error: usage of an `unsafe` block\n-  --> $DIR/lint-attr-everywhere-early.rs:149:5\n+  --> $DIR/lint-attr-everywhere-early.rs:157:5\n    |\n LL |     unsafe {};\n    |     ^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-early.rs:148:12\n+  --> $DIR/lint-attr-everywhere-early.rs:156:12\n    |\n LL |     #[deny(unsafe_code)]\n    |            ^^^^^^^^^^^\n \n error: usage of an `unsafe` block\n-  --> $DIR/lint-attr-everywhere-early.rs:151:27\n+  --> $DIR/lint-attr-everywhere-early.rs:159:27\n    |\n LL |     [#[deny(unsafe_code)] unsafe {123}];\n    |                           ^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-early.rs:151:13\n+  --> $DIR/lint-attr-everywhere-early.rs:159:13\n    |\n LL |     [#[deny(unsafe_code)] unsafe {123}];\n    |             ^^^^^^^^^^^\n \n error: usage of an `unsafe` block\n-  --> $DIR/lint-attr-everywhere-early.rs:152:27\n+  --> $DIR/lint-attr-everywhere-early.rs:160:27\n    |\n LL |     (#[deny(unsafe_code)] unsafe {123},);\n    |                           ^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-early.rs:152:13\n+  --> $DIR/lint-attr-everywhere-early.rs:160:13\n    |\n LL |     (#[deny(unsafe_code)] unsafe {123},);\n    |             ^^^^^^^^^^^\n \n error: usage of an `unsafe` block\n-  --> $DIR/lint-attr-everywhere-early.rs:154:31\n+  --> $DIR/lint-attr-everywhere-early.rs:162:31\n    |\n LL |     call(#[deny(unsafe_code)] unsafe {123});\n    |                               ^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-early.rs:154:17\n+  --> $DIR/lint-attr-everywhere-early.rs:162:17\n    |\n LL |     call(#[deny(unsafe_code)] unsafe {123});\n    |                 ^^^^^^^^^^^\n \n error: usage of an `unsafe` block\n-  --> $DIR/lint-attr-everywhere-early.rs:156:38\n+  --> $DIR/lint-attr-everywhere-early.rs:164:38\n    |\n LL |     TupleStruct(#[deny(unsafe_code)] unsafe {123});\n    |                                      ^^^^^^^^^^^^\n    |\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-early.rs:156:24\n+  --> $DIR/lint-attr-everywhere-early.rs:164:24\n    |\n LL |     TupleStruct(#[deny(unsafe_code)] unsafe {123});\n    |                        ^^^^^^^^^^^\n \n error: `...` range patterns are deprecated\n-  --> $DIR/lint-attr-everywhere-early.rs:167:18\n+  --> $DIR/lint-attr-everywhere-early.rs:175:18\n    |\n LL |             f1: 0...100,\n    |                  ^^^ help: use `..=` for an inclusive range\n    |\n    = warning: this is accepted in the current edition (Rust 2015) but is a hard error in Rust 2021!\n    = note: for more information, see <https://doc.rust-lang.org/nightly/edition-guide/rust-2021/warnings-promoted-to-error.html>\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-early.rs:166:20\n+  --> $DIR/lint-attr-everywhere-early.rs:174:20\n    |\n LL |             #[deny(ellipsis_inclusive_range_patterns)]\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 36 previous errors\n+error: aborting due to 37 previous errors\n "}, {"sha": "a24355babb63e61f26d2fb04cb04d1450dfb41fb", "filename": "tests/ui/lint/lint-attr-everywhere-late.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/ddafe234018f75f479b359a958fd09942739f954/tests%2Fui%2Flint%2Flint-attr-everywhere-late.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ddafe234018f75f479b359a958fd09942739f954/tests%2Fui%2Flint%2Flint-attr-everywhere-late.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Flint-attr-everywhere-late.rs?ref=ddafe234018f75f479b359a958fd09942739f954", "patch": "@@ -162,6 +162,11 @@ fn expressions() {\n         }\n     }\n \n+    match 123 {\n+        #[deny(non_snake_case)]\n+        ARM_VAR => {} //~ ERROR variable `ARM_VAR` should have a snake case name\n+    }\n+\n     // Statement Block\n     {\n         #![deny(enum_intrinsics_non_enums)]"}, {"sha": "9587556b0c150e31bc62f75b72a383b91f5588b7", "filename": "tests/ui/lint/lint-attr-everywhere-late.stderr", "status": "modified", "additions": 34, "deletions": 22, "changes": 56, "blob_url": "https://github.com/rust-lang/rust/blob/ddafe234018f75f479b359a958fd09942739f954/tests%2Fui%2Flint%2Flint-attr-everywhere-late.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/ddafe234018f75f479b359a958fd09942739f954/tests%2Fui%2Flint%2Flint-attr-everywhere-late.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flint%2Flint-attr-everywhere-late.stderr?ref=ddafe234018f75f479b359a958fd09942739f954", "patch": "@@ -305,124 +305,136 @@ note: the lint level is defined here\n LL |         #[deny(enum_intrinsics_non_enums)]\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n+error: variable `ARM_VAR` should have a snake case name\n+  --> $DIR/lint-attr-everywhere-late.rs:167:9\n+   |\n+LL |         ARM_VAR => {}\n+   |         ^^^^^^^ help: convert the identifier to snake case: `arm_var`\n+   |\n+note: the lint level is defined here\n+  --> $DIR/lint-attr-everywhere-late.rs:166:16\n+   |\n+LL |         #[deny(non_snake_case)]\n+   |                ^^^^^^^^^^^^^^\n+\n error: the return value of `mem::discriminant` is unspecified when called with a non-enum type\n-  --> $DIR/lint-attr-everywhere-late.rs:168:9\n+  --> $DIR/lint-attr-everywhere-late.rs:173:9\n    |\n LL |         discriminant::<i32>(&123);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: the argument to `discriminant` should be a reference to an enum, but it was passed a reference to a `i32`, which is not an enum.\n-  --> $DIR/lint-attr-everywhere-late.rs:168:29\n+  --> $DIR/lint-attr-everywhere-late.rs:173:29\n    |\n LL |         discriminant::<i32>(&123);\n    |                             ^^^^\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-late.rs:167:17\n+  --> $DIR/lint-attr-everywhere-late.rs:172:17\n    |\n LL |         #![deny(enum_intrinsics_non_enums)]\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the return value of `mem::discriminant` is unspecified when called with a non-enum type\n-  --> $DIR/lint-attr-everywhere-late.rs:172:9\n+  --> $DIR/lint-attr-everywhere-late.rs:177:9\n    |\n LL |         discriminant::<i32>(&123);\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: the argument to `discriminant` should be a reference to an enum, but it was passed a reference to a `i32`, which is not an enum.\n-  --> $DIR/lint-attr-everywhere-late.rs:172:29\n+  --> $DIR/lint-attr-everywhere-late.rs:177:29\n    |\n LL |         discriminant::<i32>(&123);\n    |                             ^^^^\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-late.rs:171:16\n+  --> $DIR/lint-attr-everywhere-late.rs:176:16\n    |\n LL |         #[deny(enum_intrinsics_non_enums)]\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the return value of `mem::discriminant` is unspecified when called with a non-enum type\n-  --> $DIR/lint-attr-everywhere-late.rs:177:5\n+  --> $DIR/lint-attr-everywhere-late.rs:182:5\n    |\n LL |     discriminant::<i32>(&123);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: the argument to `discriminant` should be a reference to an enum, but it was passed a reference to a `i32`, which is not an enum.\n-  --> $DIR/lint-attr-everywhere-late.rs:177:25\n+  --> $DIR/lint-attr-everywhere-late.rs:182:25\n    |\n LL |     discriminant::<i32>(&123);\n    |                         ^^^^\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-late.rs:176:12\n+  --> $DIR/lint-attr-everywhere-late.rs:181:12\n    |\n LL |     #[deny(enum_intrinsics_non_enums)]\n    |            ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the return value of `mem::discriminant` is unspecified when called with a non-enum type\n-  --> $DIR/lint-attr-everywhere-late.rs:179:41\n+  --> $DIR/lint-attr-everywhere-late.rs:184:41\n    |\n LL |     [#[deny(enum_intrinsics_non_enums)] discriminant::<i32>(&123)];\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: the argument to `discriminant` should be a reference to an enum, but it was passed a reference to a `i32`, which is not an enum.\n-  --> $DIR/lint-attr-everywhere-late.rs:179:61\n+  --> $DIR/lint-attr-everywhere-late.rs:184:61\n    |\n LL |     [#[deny(enum_intrinsics_non_enums)] discriminant::<i32>(&123)];\n    |                                                             ^^^^\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-late.rs:179:13\n+  --> $DIR/lint-attr-everywhere-late.rs:184:13\n    |\n LL |     [#[deny(enum_intrinsics_non_enums)] discriminant::<i32>(&123)];\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the return value of `mem::discriminant` is unspecified when called with a non-enum type\n-  --> $DIR/lint-attr-everywhere-late.rs:180:41\n+  --> $DIR/lint-attr-everywhere-late.rs:185:41\n    |\n LL |     (#[deny(enum_intrinsics_non_enums)] discriminant::<i32>(&123),);\n    |                                         ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: the argument to `discriminant` should be a reference to an enum, but it was passed a reference to a `i32`, which is not an enum.\n-  --> $DIR/lint-attr-everywhere-late.rs:180:61\n+  --> $DIR/lint-attr-everywhere-late.rs:185:61\n    |\n LL |     (#[deny(enum_intrinsics_non_enums)] discriminant::<i32>(&123),);\n    |                                                             ^^^^\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-late.rs:180:13\n+  --> $DIR/lint-attr-everywhere-late.rs:185:13\n    |\n LL |     (#[deny(enum_intrinsics_non_enums)] discriminant::<i32>(&123),);\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the return value of `mem::discriminant` is unspecified when called with a non-enum type\n-  --> $DIR/lint-attr-everywhere-late.rs:182:45\n+  --> $DIR/lint-attr-everywhere-late.rs:187:45\n    |\n LL |     call(#[deny(enum_intrinsics_non_enums)] discriminant::<i32>(&123));\n    |                                             ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: the argument to `discriminant` should be a reference to an enum, but it was passed a reference to a `i32`, which is not an enum.\n-  --> $DIR/lint-attr-everywhere-late.rs:182:65\n+  --> $DIR/lint-attr-everywhere-late.rs:187:65\n    |\n LL |     call(#[deny(enum_intrinsics_non_enums)] discriminant::<i32>(&123));\n    |                                                                 ^^^^\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-late.rs:182:17\n+  --> $DIR/lint-attr-everywhere-late.rs:187:17\n    |\n LL |     call(#[deny(enum_intrinsics_non_enums)] discriminant::<i32>(&123));\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: the return value of `mem::discriminant` is unspecified when called with a non-enum type\n-  --> $DIR/lint-attr-everywhere-late.rs:184:52\n+  --> $DIR/lint-attr-everywhere-late.rs:189:52\n    |\n LL |     TupleStruct(#[deny(enum_intrinsics_non_enums)] discriminant::<i32>(&123));\n    |                                                    ^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: the argument to `discriminant` should be a reference to an enum, but it was passed a reference to a `i32`, which is not an enum.\n-  --> $DIR/lint-attr-everywhere-late.rs:184:72\n+  --> $DIR/lint-attr-everywhere-late.rs:189:72\n    |\n LL |     TupleStruct(#[deny(enum_intrinsics_non_enums)] discriminant::<i32>(&123));\n    |                                                                        ^^^^\n note: the lint level is defined here\n-  --> $DIR/lint-attr-everywhere-late.rs:184:24\n+  --> $DIR/lint-attr-everywhere-late.rs:189:24\n    |\n LL |     TupleStruct(#[deny(enum_intrinsics_non_enums)] discriminant::<i32>(&123));\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 31 previous errors\n+error: aborting due to 32 previous errors\n "}]}