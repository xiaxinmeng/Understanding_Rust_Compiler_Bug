{"sha": "6abddca18b432d37945bd2fda24bbc77fba970aa", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZhYmRkY2ExOGI0MzJkMzc5NDViZDJmZGEyNGJiYzc3ZmJhOTcwYWE=", "commit": {"author": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-05-29T20:13:31Z"}, "committer": {"name": "Eric Holk", "email": "eric.holk@gmail.com", "date": "2012-05-30T19:03:51Z"}, "message": "Rewriting shared_arc to work around Issue #2444.\n\nSadly, this exposes another ICE when trying to use the new version with Graph500", "tree": {"sha": "4f1594fc99f30f49295027b73290eeccd5b7c961", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4f1594fc99f30f49295027b73290eeccd5b7c961"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6abddca18b432d37945bd2fda24bbc77fba970aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6abddca18b432d37945bd2fda24bbc77fba970aa", "html_url": "https://github.com/rust-lang/rust/commit/6abddca18b432d37945bd2fda24bbc77fba970aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6abddca18b432d37945bd2fda24bbc77fba970aa/comments", "author": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eholk", "id": 105766, "node_id": "MDQ6VXNlcjEwNTc2Ng==", "avatar_url": "https://avatars.githubusercontent.com/u/105766?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eholk", "html_url": "https://github.com/eholk", "followers_url": "https://api.github.com/users/eholk/followers", "following_url": "https://api.github.com/users/eholk/following{/other_user}", "gists_url": "https://api.github.com/users/eholk/gists{/gist_id}", "starred_url": "https://api.github.com/users/eholk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eholk/subscriptions", "organizations_url": "https://api.github.com/users/eholk/orgs", "repos_url": "https://api.github.com/users/eholk/repos", "events_url": "https://api.github.com/users/eholk/events{/privacy}", "received_events_url": "https://api.github.com/users/eholk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dca11e1f99bcb3b1e645625113d188c8b1b43f8d", "url": "https://api.github.com/repos/rust-lang/rust/commits/dca11e1f99bcb3b1e645625113d188c8b1b43f8d", "html_url": "https://github.com/rust-lang/rust/commit/dca11e1f99bcb3b1e645625113d188c8b1b43f8d"}], "stats": {"total": 57, "additions": 42, "deletions": 15}, "files": [{"sha": "2b76f7f3b036f806d910e8c6dd6024a1bf080bed", "filename": "src/libstd/arc.rs", "status": "modified", "additions": 42, "deletions": 15, "changes": 57, "blob_url": "https://github.com/rust-lang/rust/blob/6abddca18b432d37945bd2fda24bbc77fba970aa/src%2Flibstd%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6abddca18b432d37945bd2fda24bbc77fba970aa/src%2Flibstd%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Farc.rs?ref=6abddca18b432d37945bd2fda24bbc77fba970aa", "patch": "@@ -76,34 +76,42 @@ fn clone<T: const>(rc: &arc<T>) -> arc<T> {\n \n // Convenience code for sharing arcs between tasks\n \n-enum proto<T: send const> {\n-    terminate,\n-    shared_get(comm::chan<arc::arc<T>>)\n-}\n+type get_chan<T: const send> = chan<chan<arc<T>>>;\n+\n+// (terminate, get)\n+type shared_arc<T: const send> = (shared_arc_res, get_chan<T>);\n \n-resource shared_arc_res<T: send const>(c: comm::chan<proto<T>>) {\n-    c.send(terminate);\n+resource shared_arc_res(c: comm::chan<()>) {\n+    c.send(());\n }\n \n-fn shared_arc<T: send const>(-data: T) -> shared_arc_res<T> {\n+fn shared_arc<T: send const>(-data: T) -> shared_arc<T> {\n     let a = arc::arc(data);\n-    let c = task::spawn_listener::<proto<T>>() {|p, move a|\n+    let p = port();\n+    let c = chan(p);\n+    task::spawn() {|move a|\n         let mut live = true;\n+        let terminate = port();\n+        let get = port();\n+\n+        c.send((chan(terminate), chan(get)));\n+\n         while live {\n-            alt p.recv() {\n-              terminate { live = false; }\n-              shared_get(cc) {\n-                cc.send(arc::clone(&a));\n+            alt comm::select2(terminate, get) {\n+              either::left(()) { live = false; }\n+              either::right(cc) {\n+                comm::send(cc, arc::clone(&a));\n               }\n             }\n         }\n     };\n-    shared_arc_res(c)\n+    let (terminate, get) = p.recv();\n+    (shared_arc_res(terminate), get)\n }\n \n-fn get_arc<T: send const>(c: comm::chan<proto<T>>) -> arc::arc<T> {\n+fn get_arc<T: send const>(c: get_chan<T>) -> arc::arc<T> {\n     let p = port();\n-    c.send(shared_get(chan(p)));\n+    c.send(chan(p));\n     p.recv()\n }\n \n@@ -136,4 +144,23 @@ mod tests {\n \n         log(info, arc_v);\n     }\n+\n+    #[test]\n+    fn auto_share_arc() {\n+        let v = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n+        let (res, arc_c) = shared_arc(v);\n+\n+        let p = port();\n+        let c = chan(p);\n+\n+        task::spawn() {||\n+            let arc_v = get_arc(arc_c);\n+            let v = *get(&arc_v);\n+            assert v[2] == 3;\n+\n+            c.send(());\n+        };\n+\n+        assert p.recv() == ();\n+    }\n }"}]}