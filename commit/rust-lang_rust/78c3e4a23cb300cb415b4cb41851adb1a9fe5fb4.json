{"sha": "78c3e4a23cb300cb415b4cb41851adb1a9fe5fb4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc4YzNlNGEyM2NiMzAwY2I0MTViNGNiNDE4NTFhZGIxYTlmZTVmYjQ=", "commit": {"author": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-10-22T17:42:39Z"}, "committer": {"name": "Lukas Wirth", "email": "lukastw97@gmail.com", "date": "2020-10-22T17:44:52Z"}, "message": "Hide paramater inlay hints for cloned vars if applicable", "tree": {"sha": "3f0d4884fd96a55c0e96fa3e82ce5c307b1985fe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f0d4884fd96a55c0e96fa3e82ce5c307b1985fe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/78c3e4a23cb300cb415b4cb41851adb1a9fe5fb4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/78c3e4a23cb300cb415b4cb41851adb1a9fe5fb4", "html_url": "https://github.com/rust-lang/rust/commit/78c3e4a23cb300cb415b4cb41851adb1a9fe5fb4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/78c3e4a23cb300cb415b4cb41851adb1a9fe5fb4/comments", "author": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Veykril", "id": 3757771, "node_id": "MDQ6VXNlcjM3NTc3NzE=", "avatar_url": "https://avatars.githubusercontent.com/u/3757771?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Veykril", "html_url": "https://github.com/Veykril", "followers_url": "https://api.github.com/users/Veykril/followers", "following_url": "https://api.github.com/users/Veykril/following{/other_user}", "gists_url": "https://api.github.com/users/Veykril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Veykril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Veykril/subscriptions", "organizations_url": "https://api.github.com/users/Veykril/orgs", "repos_url": "https://api.github.com/users/Veykril/repos", "events_url": "https://api.github.com/users/Veykril/events{/privacy}", "received_events_url": "https://api.github.com/users/Veykril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc63f153f07af0d494f6bdfba9291e821a839807", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc63f153f07af0d494f6bdfba9291e821a839807", "html_url": "https://github.com/rust-lang/rust/commit/cc63f153f07af0d494f6bdfba9291e821a839807"}], "stats": {"total": 29, "additions": 28, "deletions": 1}, "files": [{"sha": "49d8e4ae14ebcdb62918f61f55e09cb55bc8aeff", "filename": "crates/ide/src/inlay_hints.rs", "status": "modified", "additions": 28, "deletions": 1, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/78c3e4a23cb300cb415b4cb41851adb1a9fe5fb4/crates%2Fide%2Fsrc%2Finlay_hints.rs", "raw_url": "https://github.com/rust-lang/rust/raw/78c3e4a23cb300cb415b4cb41851adb1a9fe5fb4/crates%2Fide%2Fsrc%2Finlay_hints.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Finlay_hints.rs?ref=78c3e4a23cb300cb415b4cb41851adb1a9fe5fb4", "patch": "@@ -378,7 +378,11 @@ fn is_enum_name_similar_to_param_name(\n fn get_string_representation(expr: &ast::Expr) -> Option<String> {\n     match expr {\n         ast::Expr::MethodCallExpr(method_call_expr) => {\n-            Some(method_call_expr.name_ref()?.to_string())\n+            let name_ref = method_call_expr.name_ref()?;\n+            match name_ref.text().as_str() {\n+                \"clone\" => method_call_expr.receiver().map(|rec| rec.to_string()),\n+                name_ref => Some(name_ref.to_owned()),\n+            }\n         }\n         ast::Expr::RefExpr(ref_expr) => get_string_representation(&ref_expr.expr()?),\n         _ => Some(expr.to_string()),\n@@ -1205,6 +1209,29 @@ fn main() {\n     let iter_of_iters = some_iter.take(2);\n       //^^^^^^^^^^^^^ impl Iterator<Item = impl Iterator<Item = i32>>\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn hide_param_hints_for_clones() {\n+        check_with_config(\n+            InlayHintsConfig {\n+                parameter_hints: true,\n+                type_hints: false,\n+                chaining_hints: false,\n+                max_length: None,\n+            },\n+            r#\"\n+fn foo(bar: i32, baz: String, qux: f32) {}\n+\n+fn main() {\n+    let bar = 3;\n+    let baz = &\"baz\";\n+    let fez = 1.0;\n+    foo(bar.clone(), baz.clone(), fez.clone());\n+                                //^^^^^^^^^^^ qux\n+}\n \"#,\n         );\n     }"}]}