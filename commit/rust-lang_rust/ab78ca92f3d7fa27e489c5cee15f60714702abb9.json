{"sha": "ab78ca92f3d7fa27e489c5cee15f60714702abb9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmFiNzhjYTkyZjNkN2ZhMjdlNDg5YzVjZWUxNWY2MDcxNDcwMmFiYjk=", "commit": {"author": {"name": "Tyler Mandry", "email": "tmandry@gmail.com", "date": "2020-09-16T19:24:16Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-16T19:24:16Z"}, "message": "Rollup merge of #76747 - GuillaumeGomez:more-missing-libcore-code-examples, r=Mark-Simulacrum\n\nAdd missing code examples in libcore", "tree": {"sha": "842f8516ff8ee75b9e0d57631d0e37a77b3637b4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/842f8516ff8ee75b9e0d57631d0e37a77b3637b4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ab78ca92f3d7fa27e489c5cee15f60714702abb9", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfYmZgCRBK7hj4Ov3rIwAAdHIIAAdvLE7P1vMX5zgBA9gGKdnu\nJ1dZ2rxPfGHv/NEjHPS54qQf1EoazTnh3UBwWjd/iwO/2oQgBKhQP3loKKWG6foW\nPCGulQgRiqS0jT6up8nfn/yWYxGEy/H6c4uEfRKW6PrLm6CwehLcZdD6sQsozLKx\nox8fCKSEeRdKijALujclGDQxseJ7jXIILLR2aNYirI5WbUqsE8LbTS3MEpQ89kBN\ncBsaTjCxcgQHnCUwdUeW2Pog0UDK7i+9wFN8STV/hMlnSmHA0FBWBCKKTdPqO81O\nv8YPda2ksURWTYv51hBSkG/22SKWMBtiGkE0JTDzQa6N8ZmBzCReZC4bsayxKFo=\n=cb8j\n-----END PGP SIGNATURE-----\n", "payload": "tree 842f8516ff8ee75b9e0d57631d0e37a77b3637b4\nparent 233937419a0ed5ae602188a60e7ce187b6faaec9\nparent 2a5a6b42ecf99b198eae89e13053b00bd1582a27\nauthor Tyler Mandry <tmandry@gmail.com> 1600284256 -0700\ncommitter GitHub <noreply@github.com> 1600284256 -0700\n\nRollup merge of #76747 - GuillaumeGomez:more-missing-libcore-code-examples, r=Mark-Simulacrum\n\nAdd missing code examples in libcore\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ab78ca92f3d7fa27e489c5cee15f60714702abb9", "html_url": "https://github.com/rust-lang/rust/commit/ab78ca92f3d7fa27e489c5cee15f60714702abb9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ab78ca92f3d7fa27e489c5cee15f60714702abb9/comments", "author": {"login": "tmandry", "id": 2280544, "node_id": "MDQ6VXNlcjIyODA1NDQ=", "avatar_url": "https://avatars.githubusercontent.com/u/2280544?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmandry", "html_url": "https://github.com/tmandry", "followers_url": "https://api.github.com/users/tmandry/followers", "following_url": "https://api.github.com/users/tmandry/following{/other_user}", "gists_url": "https://api.github.com/users/tmandry/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmandry/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmandry/subscriptions", "organizations_url": "https://api.github.com/users/tmandry/orgs", "repos_url": "https://api.github.com/users/tmandry/repos", "events_url": "https://api.github.com/users/tmandry/events{/privacy}", "received_events_url": "https://api.github.com/users/tmandry/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "233937419a0ed5ae602188a60e7ce187b6faaec9", "url": "https://api.github.com/repos/rust-lang/rust/commits/233937419a0ed5ae602188a60e7ce187b6faaec9", "html_url": "https://github.com/rust-lang/rust/commit/233937419a0ed5ae602188a60e7ce187b6faaec9"}, {"sha": "2a5a6b42ecf99b198eae89e13053b00bd1582a27", "url": "https://api.github.com/repos/rust-lang/rust/commits/2a5a6b42ecf99b198eae89e13053b00bd1582a27", "html_url": "https://github.com/rust-lang/rust/commit/2a5a6b42ecf99b198eae89e13053b00bd1582a27"}], "stats": {"total": 30, "additions": 30, "deletions": 0}, "files": [{"sha": "6f3a3a867450db0d9e3cf6ee1e9c3127bed0cd22", "filename": "library/core/src/num/dec2flt/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/ab78ca92f3d7fa27e489c5cee15f60714702abb9/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab78ca92f3d7fa27e489c5cee15f60714702abb9/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fdec2flt%2Fmod.rs?ref=ab78ca92f3d7fa27e489c5cee15f60714702abb9", "patch": "@@ -166,6 +166,16 @@ from_str_float_impl!(f64);\n ///\n /// This error is used as the error type for the [`FromStr`] implementation\n /// for [`f32`] and [`f64`].\n+///\n+/// # Example\n+///\n+/// ```\n+/// use std::str::FromStr;\n+///\n+/// if let Err(e) = f64::from_str(\"a.12\") {\n+///     println!(\"Failed conversion to f64: {}\", e);\n+/// }\n+/// ```\n #[derive(Debug, Clone, PartialEq, Eq)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct ParseFloatError {"}, {"sha": "050c187e55576b5009becf286bd3c3576b780322", "filename": "library/core/src/num/mod.rs", "status": "modified", "additions": 20, "deletions": 0, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/ab78ca92f3d7fa27e489c5cee15f60714702abb9/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ab78ca92f3d7fa27e489c5cee15f60714702abb9/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fnum%2Fmod.rs?ref=ab78ca92f3d7fa27e489c5cee15f60714702abb9", "patch": "@@ -5286,13 +5286,33 @@ fn from_str_radix<T: FromStrRadixHelper>(src: &str, radix: u32) -> Result<T, Par\n ///\n /// [`str.trim()`]: ../../std/primitive.str.html#method.trim\n /// [`i8::from_str_radix`]: ../../std/primitive.i8.html#method.from_str_radix\n+///\n+/// # Example\n+///\n+/// ```\n+/// if let Err(e) = i32::from_str_radix(\"a12\", 10) {\n+///     println!(\"Failed conversion to i32: {}\", e);\n+/// }\n+/// ```\n #[derive(Debug, Clone, PartialEq, Eq)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct ParseIntError {\n     kind: IntErrorKind,\n }\n \n /// Enum to store the various types of errors that can cause parsing an integer to fail.\n+///\n+/// # Example\n+///\n+/// ```\n+/// #![feature(int_error_matching)]\n+///\n+/// # fn main() {\n+/// if let Err(e) = i32::from_str_radix(\"a12\", 10) {\n+///     println!(\"Failed conversion to i32: {:?}\", e.kind());\n+/// }\n+/// # }\n+/// ```\n #[unstable(\n     feature = \"int_error_matching\",\n     reason = \"it can be useful to match errors when making error messages \\"}]}