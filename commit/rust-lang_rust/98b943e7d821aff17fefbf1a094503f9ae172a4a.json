{"sha": "98b943e7d821aff17fefbf1a094503f9ae172a4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk4Yjk0M2U3ZDgyMWFmZjE3ZmVmYmYxYTA5NDUwM2Y5YWUxNzJhNGE=", "commit": {"author": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-07-12T02:32:42Z"}, "committer": {"name": "Wesley Wiser", "email": "wwiser@gmail.com", "date": "2020-08-22T00:03:30Z"}, "message": "Add partitioning -Z option to control which partitioning scheme is used", "tree": {"sha": "afba9c4be6bdb95cf62b7b6a0f21e70980b758d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/afba9c4be6bdb95cf62b7b6a0f21e70980b758d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/98b943e7d821aff17fefbf1a094503f9ae172a4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/98b943e7d821aff17fefbf1a094503f9ae172a4a", "html_url": "https://github.com/rust-lang/rust/commit/98b943e7d821aff17fefbf1a094503f9ae172a4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/98b943e7d821aff17fefbf1a094503f9ae172a4a/comments", "author": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "committer": {"login": "wesleywiser", "id": 831192, "node_id": "MDQ6VXNlcjgzMTE5Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/831192?v=4", "gravatar_id": "", "url": "https://api.github.com/users/wesleywiser", "html_url": "https://github.com/wesleywiser", "followers_url": "https://api.github.com/users/wesleywiser/followers", "following_url": "https://api.github.com/users/wesleywiser/following{/other_user}", "gists_url": "https://api.github.com/users/wesleywiser/gists{/gist_id}", "starred_url": "https://api.github.com/users/wesleywiser/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/wesleywiser/subscriptions", "organizations_url": "https://api.github.com/users/wesleywiser/orgs", "repos_url": "https://api.github.com/users/wesleywiser/repos", "events_url": "https://api.github.com/users/wesleywiser/events{/privacy}", "received_events_url": "https://api.github.com/users/wesleywiser/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d501f9cd21da6a175a51341ffdd83e7896c01e2", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d501f9cd21da6a175a51341ffdd83e7896c01e2", "html_url": "https://github.com/rust-lang/rust/commit/5d501f9cd21da6a175a51341ffdd83e7896c01e2"}], "stats": {"total": 16, "additions": 13, "deletions": 3}, "files": [{"sha": "9dfbd65e1b1a81131cf961704f47ee8557dced06", "filename": "src/librustc_mir/monomorphize/partitioning/mod.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/98b943e7d821aff17fefbf1a094503f9ae172a4a/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98b943e7d821aff17fefbf1a094503f9ae172a4a/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fmonomorphize%2Fpartitioning%2Fmod.rs?ref=98b943e7d821aff17fefbf1a094503f9ae172a4a", "patch": "@@ -135,8 +135,16 @@ trait Partitioner<'tcx> {\n     );\n }\n \n-fn get_partitioner<'tcx>() -> Box<dyn Partitioner<'tcx>> {\n-    Box::new(default::DefaultPartitioning)\n+fn get_partitioner<'tcx>(tcx: TyCtxt<'tcx>) -> Box<dyn Partitioner<'tcx>> {\n+    let strategy = match &tcx.sess.opts.debugging_opts.cgu_partitioning_strategy {\n+        None => \"default\",\n+        Some(s) => &s[..],\n+    };\n+\n+    match strategy {\n+        \"default\" => Box::new(default::DefaultPartitioning),\n+        _ => tcx.sess.fatal(\"unknown partitioning strategy\"),\n+    }\n }\n \n pub fn partition<'tcx>(\n@@ -147,7 +155,7 @@ pub fn partition<'tcx>(\n ) -> Vec<CodegenUnit<'tcx>> {\n     let _prof_timer = tcx.prof.generic_activity(\"cgu_partitioning\");\n \n-    let mut partitioner = get_partitioner();\n+    let mut partitioner = get_partitioner(tcx);\n     // In the first step, we place all regular monomorphizations into their\n     // respective 'home' codegen unit. Regular monomorphizations are all\n     // functions and statics defined in the local crate."}, {"sha": "d05f1a3f34b78337d924ba78ca9e22880331517e", "filename": "src/librustc_session/options.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/98b943e7d821aff17fefbf1a094503f9ae172a4a/src%2Flibrustc_session%2Foptions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/98b943e7d821aff17fefbf1a094503f9ae172a4a/src%2Flibrustc_session%2Foptions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_session%2Foptions.rs?ref=98b943e7d821aff17fefbf1a094503f9ae172a4a", "patch": "@@ -807,6 +807,8 @@ options! {DebuggingOptions, DebuggingSetter, basic_debugging_options,\n         \"select which borrowck is used (`mir` or `migrate`) (default: `migrate`)\"),\n     borrowck_stats: bool = (false, parse_bool, [UNTRACKED],\n         \"gather borrowck statistics (default: no)\"),\n+    cgu_partitioning_strategy: Option<String> = (None, parse_opt_string, [TRACKED],\n+        \"the codegen unit partitioning strategy to use\"),\n     chalk: bool = (false, parse_bool, [TRACKED],\n         \"enable the experimental Chalk-based trait solving engine\"),\n     codegen_backend: Option<String> = (None, parse_opt_string, [TRACKED],"}]}