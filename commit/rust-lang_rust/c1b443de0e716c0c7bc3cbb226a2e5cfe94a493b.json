{"sha": "c1b443de0e716c0c7bc3cbb226a2e5cfe94a493b", "node_id": "C_kwDOAAsO6NoAKGMxYjQ0M2RlMGU3MTZjMGM3YmMzY2JiMjI2YTJlNWNmZTk0YTQ5M2I", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-12-25T14:46:20Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2022-12-25T14:46:20Z"}, "message": "fix codegen test", "tree": {"sha": "8a9e4cd31bd087730df8c25ae2ed821723cba392", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a9e4cd31bd087730df8c25ae2ed821723cba392"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c1b443de0e716c0c7bc3cbb226a2e5cfe94a493b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c1b443de0e716c0c7bc3cbb226a2e5cfe94a493b", "html_url": "https://github.com/rust-lang/rust/commit/c1b443de0e716c0c7bc3cbb226a2e5cfe94a493b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c1b443de0e716c0c7bc3cbb226a2e5cfe94a493b/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "26e01397bfcb9749849ae372f009cdc1b1bf2684", "url": "https://api.github.com/repos/rust-lang/rust/commits/26e01397bfcb9749849ae372f009cdc1b1bf2684", "html_url": "https://github.com/rust-lang/rust/commit/26e01397bfcb9749849ae372f009cdc1b1bf2684"}], "stats": {"total": 16, "additions": 8, "deletions": 8}, "files": [{"sha": "aa6589dc35bb15edf875eb29aad2ad8e773af349", "filename": "src/test/codegen/vec-shrink-panik.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/c1b443de0e716c0c7bc3cbb226a2e5cfe94a493b/src%2Ftest%2Fcodegen%2Fvec-shrink-panik.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c1b443de0e716c0c7bc3cbb226a2e5cfe94a493b/src%2Ftest%2Fcodegen%2Fvec-shrink-panik.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fvec-shrink-panik.rs?ref=c1b443de0e716c0c7bc3cbb226a2e5cfe94a493b", "patch": "@@ -18,11 +18,11 @@ pub fn shrink_to_fit(vec: &mut Vec<u32>) {\n pub fn issue71861(vec: Vec<u32>) -> Box<[u32]> {\n     // CHECK-NOT: panic\n \n-    // Call to panic_no_unwind in case of double-panic is expected,\n+    // Call to panic_cannot_unwind in case of double-panic is expected,\n     // but other panics are not.\n     // CHECK: cleanup\n-    // CHECK-NEXT: ; call core::panicking::panic_no_unwind\n-    // CHECK-NEXT: panic_no_unwind\n+    // CHECK-NEXT: ; call core::panicking::panic_cannot_unwind\n+    // CHECK-NEXT: panic_cannot_unwind\n \n     // CHECK-NOT: panic\n     vec.into_boxed_slice()\n@@ -33,15 +33,15 @@ pub fn issue71861(vec: Vec<u32>) -> Box<[u32]> {\n pub fn issue75636<'a>(iter: &[&'a str]) -> Box<[&'a str]> {\n     // CHECK-NOT: panic\n \n-    // Call to panic_no_unwind in case of double-panic is expected,\n+    // Call to panic_cannot_unwind in case of double-panic is expected,\n     // but other panics are not.\n     // CHECK: cleanup\n-    // CHECK-NEXT: ; call core::panicking::panic_no_unwind\n-    // CHECK-NEXT: panic_no_unwind\n+    // CHECK-NEXT: ; call core::panicking::panic_cannot_unwind\n+    // CHECK-NEXT: panic_cannot_unwind\n \n     // CHECK-NOT: panic\n     iter.iter().copied().collect()\n }\n \n-// CHECK: ; core::panicking::panic_no_unwind\n-// CHECK: declare void @{{.*}}panic_no_unwind\n+// CHECK: ; core::panicking::panic_cannot_unwind\n+// CHECK: declare void @{{.*}}panic_cannot_unwind"}]}