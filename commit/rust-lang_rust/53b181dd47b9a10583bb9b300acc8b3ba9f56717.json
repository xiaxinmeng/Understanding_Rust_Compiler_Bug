{"sha": "53b181dd47b9a10583bb9b300acc8b3ba9f56717", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUzYjE4MWRkNDdiOWExMDU4M2JiOWIzMDBhY2M4YjNiYTlmNTY3MTc=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-15T03:07:20Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-12-15T03:07:20Z"}, "message": "librustc: Implement a lint mode for default methods", "tree": {"sha": "b6ffcad3213fa40cbbf2f7c210d3a93110f7c640", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b6ffcad3213fa40cbbf2f7c210d3a93110f7c640"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/53b181dd47b9a10583bb9b300acc8b3ba9f56717", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/53b181dd47b9a10583bb9b300acc8b3ba9f56717", "html_url": "https://github.com/rust-lang/rust/commit/53b181dd47b9a10583bb9b300acc8b3ba9f56717", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/53b181dd47b9a10583bb9b300acc8b3ba9f56717/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdb2d659aec65c7f39b7f58dc917d61d51bb0f97", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdb2d659aec65c7f39b7f58dc917d61d51bb0f97", "html_url": "https://github.com/rust-lang/rust/commit/bdb2d659aec65c7f39b7f58dc917d61d51bb0f97"}], "stats": {"total": 38, "additions": 37, "deletions": 1}, "files": [{"sha": "fd642f452b27cfecac692fb148547ca5e203531d", "filename": "src/librustc/middle/lint.rs", "status": "modified", "additions": 29, "deletions": 1, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/53b181dd47b9a10583bb9b300acc8b3ba9f56717/src%2Flibrustc%2Fmiddle%2Flint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b181dd47b9a10583bb9b300acc8b3ba9f56717/src%2Flibrustc%2Fmiddle%2Flint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flint.rs?ref=53b181dd47b9a10583bb9b300acc8b3ba9f56717", "patch": "@@ -65,6 +65,7 @@ enum lint {\n     non_camel_case_types,\n     structural_records,\n     type_limits,\n+    default_methods,\n \n     managed_heap_memory,\n     owned_heap_memory,\n@@ -200,7 +201,12 @@ fn get_lint_dict() -> lint_dict {\n         (~\"type_limits\",\n          @{lint: type_limits,\n            desc: ~\"comparisons made useless by limits of the types involved\",\n-           default: warn})\n+           default: warn}),\n+\n+        (~\"default_methods\",\n+         @{lint: default_methods,\n+           desc: ~\"allow default methods\",\n+           default: forbid}),\n \n         /* FIXME(#3266)--make liveness warnings lintable\n         (~\"unused_variable\",\n@@ -414,6 +420,7 @@ fn check_item(i: @ast::item, cx: ty::ctxt) {\n     check_item_structural_records(cx, i);\n     check_item_deprecated_modes(cx, i);\n     check_item_type_limits(cx, i);\n+    check_item_default_methods(cx, i);\n }\n \n // Take a visitor, and modify it so that it will not proceed past subitems.\n@@ -563,6 +570,27 @@ fn check_item_type_limits(cx: ty::ctxt, it: @ast::item) {\n     visit::visit_item(it, (), visit);\n }\n \n+fn check_item_default_methods(cx: ty::ctxt, item: @ast::item) {\n+    match item.node {\n+        ast::item_trait(_, _, methods) => {\n+            for methods.each |method| {\n+                match *method {\n+                    ast::required(*) => {}\n+                    ast::provided(*) => {\n+                        cx.sess.span_lint(\n+                            default_methods,\n+                            item.id,\n+                            item.id,\n+                            item.span,\n+                            ~\"default methods are experimental\");\n+                    }\n+                }\n+            }\n+        }\n+        _ => {}\n+    }\n+}\n+\n fn check_item_structural_records(cx: ty::ctxt, it: @ast::item) {\n     let visit = item_stopping_visitor(visit::mk_simple_visitor(@{\n         visit_expr: fn@(e: @ast::expr) {"}, {"sha": "97662225dec17bb415d1dfacaf15e6c5c315806c", "filename": "src/test/compile-fail/lint-default-methods.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/53b181dd47b9a10583bb9b300acc8b3ba9f56717/src%2Ftest%2Fcompile-fail%2Flint-default-methods.rs", "raw_url": "https://github.com/rust-lang/rust/raw/53b181dd47b9a10583bb9b300acc8b3ba9f56717/src%2Ftest%2Fcompile-fail%2Flint-default-methods.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Flint-default-methods.rs?ref=53b181dd47b9a10583bb9b300acc8b3ba9f56717", "patch": "@@ -0,0 +1,8 @@\n+#[forbid(default_methods)];\n+\n+trait Foo {\n+    fn bar() { io::println(\"hi\"); } //~ ERROR default methods are experimental\n+}\n+\n+fn main() {}\n+"}]}