{"sha": "00b4138857055ba3495a70a01eea0bc8d9fed690", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwYjQxMzg4NTcwNTViYTM0OTVhNzBhMDFlZWEwYmM4ZDlmZWQ2OTA=", "commit": {"author": {"name": "Ben Blum", "email": "bblum@andrew.cmu.edu", "date": "2013-06-25T22:36:48Z"}, "committer": {"name": "Corey Richardson", "email": "corey@octayn.net", "date": "2013-06-26T22:00:11Z"}, "message": "Make ^~~~~ colour dependent on error/warning/note level. Also correct spelling of squigglies.", "tree": {"sha": "ca2264410c00c7debb5749a0c9aaa6412e00cf7e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca2264410c00c7debb5749a0c9aaa6412e00cf7e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00b4138857055ba3495a70a01eea0bc8d9fed690", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00b4138857055ba3495a70a01eea0bc8d9fed690", "html_url": "https://github.com/rust-lang/rust/commit/00b4138857055ba3495a70a01eea0bc8d9fed690", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00b4138857055ba3495a70a01eea0bc8d9fed690/comments", "author": {"login": "bblum", "id": 1820515, "node_id": "MDQ6VXNlcjE4MjA1MTU=", "avatar_url": "https://avatars.githubusercontent.com/u/1820515?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bblum", "html_url": "https://github.com/bblum", "followers_url": "https://api.github.com/users/bblum/followers", "following_url": "https://api.github.com/users/bblum/following{/other_user}", "gists_url": "https://api.github.com/users/bblum/gists{/gist_id}", "starred_url": "https://api.github.com/users/bblum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bblum/subscriptions", "organizations_url": "https://api.github.com/users/bblum/orgs", "repos_url": "https://api.github.com/users/bblum/repos", "events_url": "https://api.github.com/users/bblum/events{/privacy}", "received_events_url": "https://api.github.com/users/bblum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "emberian", "id": 704250, "node_id": "MDQ6VXNlcjcwNDI1MA==", "avatar_url": "https://avatars.githubusercontent.com/u/704250?v=4", "gravatar_id": "", "url": "https://api.github.com/users/emberian", "html_url": "https://github.com/emberian", "followers_url": "https://api.github.com/users/emberian/followers", "following_url": "https://api.github.com/users/emberian/following{/other_user}", "gists_url": "https://api.github.com/users/emberian/gists{/gist_id}", "starred_url": "https://api.github.com/users/emberian/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/emberian/subscriptions", "organizations_url": "https://api.github.com/users/emberian/orgs", "repos_url": "https://api.github.com/users/emberian/repos", "events_url": "https://api.github.com/users/emberian/events{/privacy}", "received_events_url": "https://api.github.com/users/emberian/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "41f953af2ee86e4bda1025d77dc8525f42bc7a69", "url": "https://api.github.com/repos/rust-lang/rust/commits/41f953af2ee86e4bda1025d77dc8525f42bc7a69", "html_url": "https://github.com/rust-lang/rust/commit/41f953af2ee86e4bda1025d77dc8525f42bc7a69"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "a904416d7a4467f17c7d3c6eb342a56840bee270", "filename": "src/libsyntax/diagnostic.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/00b4138857055ba3495a70a01eea0bc8d9fed690/src%2Flibsyntax%2Fdiagnostic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00b4138857055ba3495a70a01eea0bc8d9fed690/src%2Flibsyntax%2Fdiagnostic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fdiagnostic.rs?ref=00b4138857055ba3495a70a01eea0bc8d9fed690", "patch": "@@ -231,7 +231,7 @@ pub fn emit(cmsp: Option<(@codemap::CodeMap, span)>, msg: &str, lvl: level) {\n         let ss = cm.span_to_str(sp);\n         let lines = cm.span_to_lines(sp);\n         print_diagnostic(ss, lvl, msg);\n-        highlight_lines(cm, sp, lines);\n+        highlight_lines(cm, sp, lvl, lines);\n         print_macro_backtrace(cm, sp);\n       }\n       None => {\n@@ -241,7 +241,7 @@ pub fn emit(cmsp: Option<(@codemap::CodeMap, span)>, msg: &str, lvl: level) {\n }\n \n fn highlight_lines(cm: @codemap::CodeMap,\n-                   sp: span,\n+                   sp: span, lvl: level,\n                    lines: @codemap::FileLines) {\n     let fm = lines.file;\n \n@@ -293,18 +293,18 @@ fn highlight_lines(cm: @codemap::CodeMap,\n             let curChar = (orig[pos] as char);\n             s += match curChar { // Whenever a tab occurs on the previous\n                 '\\t' => \"\\t\",    // line, we insert one on the error-point-\n-                _ => \" \"         // -squigly-line as well (instead of a\n-            };                   // space). This way the squigly-line will\n+                _ => \" \"         // -squiggly-line as well (instead of a\n+            };                   // space). This way the squiggly-line will\n         }                        // usually appear in the correct position.\n         io::stderr().write_str(s);\n         let mut s = ~\"^\";\n         let hi = cm.lookup_char_pos(sp.hi);\n         if hi.col != lo.col {\n             // the ^ already takes up one space\n-            let num_squiglies = hi.col.to_uint()-lo.col.to_uint()-1u;\n-            for num_squiglies.times() { s += \"~\"; }\n+            let num_squigglies = hi.col.to_uint()-lo.col.to_uint()-1u;\n+            for num_squigglies.times() { s += \"~\"; }\n         }\n-        print_maybe_colored(s + \"\\n\", term::color_bright_green);\n+        print_maybe_colored(s + \"\\n\", diagnosticcolor(lvl));\n     }\n }\n "}]}