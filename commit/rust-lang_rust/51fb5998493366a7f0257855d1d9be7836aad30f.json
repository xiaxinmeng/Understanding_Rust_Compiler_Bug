{"sha": "51fb5998493366a7f0257855d1d9be7836aad30f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUxZmI1OTk4NDkzMzY2YTdmMDI1Nzg1NWQxZDliZTc4MzZhYWQzMGY=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-31T00:28:10Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-31T03:33:34Z"}, "message": "parser::module: remove .fatal calls", "tree": {"sha": "8a2b2c5df04294633066911172deb9e5630052f9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a2b2c5df04294633066911172deb9e5630052f9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/51fb5998493366a7f0257855d1d9be7836aad30f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/51fb5998493366a7f0257855d1d9be7836aad30f", "html_url": "https://github.com/rust-lang/rust/commit/51fb5998493366a7f0257855d1d9be7836aad30f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/51fb5998493366a7f0257855d1d9be7836aad30f/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13ca924988b05d894b8259b0ecd81656f5b3db5c", "url": "https://api.github.com/repos/rust-lang/rust/commits/13ca924988b05d894b8259b0ecd81656f5b3db5c", "html_url": "https://github.com/rust-lang/rust/commit/13ca924988b05d894b8259b0ecd81656f5b3db5c"}], "stats": {"total": 3, "additions": 2, "deletions": 1}, "files": [{"sha": "84ffa6f7fcd8fddeffec44c835c8e4dc34e2eec3", "filename": "src/librustc_parse/parser/module.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/51fb5998493366a7f0257855d1d9be7836aad30f/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "raw_url": "https://github.com/rust-lang/rust/raw/51fb5998493366a7f0257855d1d9be7836aad30f/src%2Flibrustc_parse%2Fparser%2Fmodule.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fparser%2Fmodule.rs?ref=51fb5998493366a7f0257855d1d9be7836aad30f", "patch": "@@ -81,7 +81,8 @@ impl<'a> Parser<'a> {\n         if !self.eat(term) {\n             let token_str = super::token_descr(&self.token);\n             if !self.maybe_consume_incorrect_semicolon(&items) {\n-                let mut err = self.fatal(&format!(\"expected item, found {}\", token_str));\n+                let msg = &format!(\"expected item, found {}\", token_str);\n+                let mut err = self.struct_span_err(self.token.span, msg);\n                 err.span_label(self.token.span, \"expected item\");\n                 return Err(err);\n             }"}]}