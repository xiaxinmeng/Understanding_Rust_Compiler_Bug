{"sha": "9d7c5e5d3d355a3980e3c598456b616942bfb6d9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjlkN2M1ZTVkM2QzNTVhMzk4MGUzYzU5ODQ1NmI2MTY5NDJiZmI2ZDk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-18T08:20:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-10-18T08:20:38Z"}, "message": "Auto merge of #29134 - wthrowe:linker-output-ICE, r=pnkfelix\n\nThe escaped form isn't pretty, but this should be a very rare error.\r\nHaving a general binary-escaping string creation function might be a\r\ngood idea, though.\r\n\r\nCloses #29122", "tree": {"sha": "fdad7a866ee37cc6314143405760660dd5fe7ab3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fdad7a866ee37cc6314143405760660dd5fe7ab3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9d7c5e5d3d355a3980e3c598456b616942bfb6d9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9d7c5e5d3d355a3980e3c598456b616942bfb6d9", "html_url": "https://github.com/rust-lang/rust/commit/9d7c5e5d3d355a3980e3c598456b616942bfb6d9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9d7c5e5d3d355a3980e3c598456b616942bfb6d9/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4af89fe3172d1c3153655b55a0659877206e5ddb", "url": "https://api.github.com/repos/rust-lang/rust/commits/4af89fe3172d1c3153655b55a0659877206e5ddb", "html_url": "https://github.com/rust-lang/rust/commit/4af89fe3172d1c3153655b55a0659877206e5ddb"}, {"sha": "d12522c25ec1e232b0bcf08f815fae96e7a0f2cd", "url": "https://api.github.com/repos/rust-lang/rust/commits/d12522c25ec1e232b0bcf08f815fae96e7a0f2cd", "html_url": "https://github.com/rust-lang/rust/commit/d12522c25ec1e232b0bcf08f815fae96e7a0f2cd"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "ad0d8ef73c90a804128524e103ce401926aba89b", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/9d7c5e5d3d355a3980e3c598456b616942bfb6d9/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9d7c5e5d3d355a3980e3c598456b616942bfb6d9/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=9d7c5e5d3d355a3980e3c598456b616942bfb6d9", "patch": "@@ -32,6 +32,8 @@ use util::sha2::{Digest, Sha256};\n use util::fs::fix_windows_verbatim_for_gcc;\n use rustc_back::tempdir::TempDir;\n \n+use std::ascii;\n+use std::char;\n use std::env;\n use std::ffi::OsString;\n use std::fs::{self, PathExt};\n@@ -883,18 +885,28 @@ fn link_natively(sess: &Session, dylib: bool,\n     let prog = time(sess.time_passes(), \"running linker\", || cmd.output());\n     match prog {\n         Ok(prog) => {\n+            fn escape_string(s: &[u8]) -> String {\n+                str::from_utf8(s).map(|s| s.to_owned())\n+                    .unwrap_or_else(|_| {\n+                        let mut x = \"Non-UTF-8 output: \".to_string();\n+                        x.extend(s.iter()\n+                                 .flat_map(|&b| ascii::escape_default(b))\n+                                 .map(|b| char::from_u32(b as u32).unwrap()));\n+                        x\n+                    })\n+            }\n             if !prog.status.success() {\n                 sess.err(&format!(\"linking with `{}` failed: {}\",\n                                  pname,\n                                  prog.status));\n                 sess.note(&format!(\"{:?}\", &cmd));\n                 let mut output = prog.stderr.clone();\n                 output.push_all(&prog.stdout);\n-                sess.note(str::from_utf8(&output[..]).unwrap());\n+                sess.note(&*escape_string(&output[..]));\n                 sess.abort_if_errors();\n             }\n-            info!(\"linker stderr:\\n{}\", String::from_utf8(prog.stderr).unwrap());\n-            info!(\"linker stdout:\\n{}\", String::from_utf8(prog.stdout).unwrap());\n+            info!(\"linker stderr:\\n{}\", escape_string(&prog.stderr[..]));\n+            info!(\"linker stdout:\\n{}\", escape_string(&prog.stdout[..]));\n         },\n         Err(e) => {\n             sess.fatal(&format!(\"could not exec the linker `{}`: {}\", pname, e));"}]}