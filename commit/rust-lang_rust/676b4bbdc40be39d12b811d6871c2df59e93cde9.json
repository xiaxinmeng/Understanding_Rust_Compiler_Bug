{"sha": "676b4bbdc40be39d12b811d6871c2df59e93cde9", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3NmI0YmJkYzQwYmUzOWQxMmI4MTFkNjg3MWMyZGY1OWU5M2NkZTk=", "commit": {"author": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2017-10-29T18:21:20Z"}, "committer": {"name": "Oliver Middleton", "email": "olliemail27@gmail.com", "date": "2017-10-29T18:21:20Z"}, "message": "rustdoc: Fix duplicated impls with generics\n\nThe same type can appear multiple times in impls so we need to use a set\nto avoid adding it multiple times.", "tree": {"sha": "66872fd2d705e39b51c0b824560756f4827ed180", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/66872fd2d705e39b51c0b824560756f4827ed180"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/676b4bbdc40be39d12b811d6871c2df59e93cde9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/676b4bbdc40be39d12b811d6871c2df59e93cde9", "html_url": "https://github.com/rust-lang/rust/commit/676b4bbdc40be39d12b811d6871c2df59e93cde9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/676b4bbdc40be39d12b811d6871c2df59e93cde9/comments", "author": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ollie27", "id": 7189418, "node_id": "MDQ6VXNlcjcxODk0MTg=", "avatar_url": "https://avatars.githubusercontent.com/u/7189418?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ollie27", "html_url": "https://github.com/ollie27", "followers_url": "https://api.github.com/users/ollie27/followers", "following_url": "https://api.github.com/users/ollie27/following{/other_user}", "gists_url": "https://api.github.com/users/ollie27/gists{/gist_id}", "starred_url": "https://api.github.com/users/ollie27/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ollie27/subscriptions", "organizations_url": "https://api.github.com/users/ollie27/orgs", "repos_url": "https://api.github.com/users/ollie27/repos", "events_url": "https://api.github.com/users/ollie27/events{/privacy}", "received_events_url": "https://api.github.com/users/ollie27/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7da9a5e178e28b2e387e6296aa1b0289acdf5781", "url": "https://api.github.com/repos/rust-lang/rust/commits/7da9a5e178e28b2e387e6296aa1b0289acdf5781", "html_url": "https://github.com/rust-lang/rust/commit/7da9a5e178e28b2e387e6296aa1b0289acdf5781"}], "stats": {"total": 33, "additions": 29, "deletions": 4}, "files": [{"sha": "867ac0d0459208a13eb3917725ab17fe6be72c37", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/676b4bbdc40be39d12b811d6871c2df59e93cde9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676b4bbdc40be39d12b811d6871c2df59e93cde9/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=676b4bbdc40be39d12b811d6871c2df59e93cde9", "patch": "@@ -1325,7 +1325,7 @@ impl DocFolder for Cache {\n                 // Figure out the id of this impl. This may map to a\n                 // primitive rather than always to a struct/enum.\n                 // Note: matching twice to restrict the lifetime of the `i` borrow.\n-                let mut dids = vec![];\n+                let mut dids = FxHashSet();\n                 if let clean::Item { inner: clean::ImplItem(ref i), .. } = item {\n                     let masked_trait = i.trait_.def_id().map_or(false,\n                         |d| self.masked_crates.contains(&d.krate));\n@@ -1335,15 +1335,15 @@ impl DocFolder for Cache {\n                             clean::BorrowedRef {\n                                 type_: box clean::ResolvedPath { did, .. }, ..\n                             } => {\n-                                dids.push(did);\n+                                dids.insert(did);\n                             }\n                             ref t => {\n                                 let did = t.primitive_type().and_then(|t| {\n                                     self.primitive_locations.get(&t).cloned()\n                                 });\n \n                                 if let Some(did) = did {\n-                                    dids.push(did);\n+                                    dids.insert(did);\n                                 }\n                             }\n                         }\n@@ -1352,7 +1352,7 @@ impl DocFolder for Cache {\n                     if let Some(generics) = i.trait_.as_ref().and_then(|t| t.generics()) {\n                         for bound in generics {\n                             if let Some(did) = bound.def_id() {\n-                                dids.push(did);\n+                                dids.insert(did);\n                             }\n                         }\n                     }"}, {"sha": "6d6ae3dc94a2182051969a47fe6db44529e317bb", "filename": "src/test/rustdoc/issue-45584.rs", "status": "added", "additions": 25, "deletions": 0, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/676b4bbdc40be39d12b811d6871c2df59e93cde9/src%2Ftest%2Frustdoc%2Fissue-45584.rs", "raw_url": "https://github.com/rust-lang/rust/raw/676b4bbdc40be39d12b811d6871c2df59e93cde9/src%2Ftest%2Frustdoc%2Fissue-45584.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Fissue-45584.rs?ref=676b4bbdc40be39d12b811d6871c2df59e93cde9", "patch": "@@ -0,0 +1,25 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![crate_name = \"foo\"]\n+\n+pub trait Bar<T, U> {}\n+\n+// @has 'foo/struct.Foo1.html'\n+pub struct Foo1;\n+// @count - '//*[@class=\"impl\"]' 1\n+// @has - '//*[@class=\"impl\"]' \"impl Bar<Foo1, &'static Foo1> for Foo1\"\n+impl Bar<Foo1, &'static Foo1> for Foo1 {}\n+\n+// @has 'foo/struct.Foo2.html'\n+pub struct Foo2;\n+// @count - '//*[@class=\"impl\"]' 1\n+// @has - '//*[@class=\"impl\"]' \"impl Bar<&'static Foo2, Foo2> for u8\"\n+impl Bar<&'static Foo2, Foo2> for u8 {}"}]}