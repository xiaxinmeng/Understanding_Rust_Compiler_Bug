{"sha": "2c7998720c3493573598c6b625141a29ea15c7ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJjNzk5ODcyMGMzNDkzNTczNTk4YzZiNjI1MTQxYTI5ZWExNWM3ZWY=", "commit": {"author": {"name": "Denis Vasilik", "email": "contact@denisvasilik.com", "date": "2020-08-19T10:38:32Z"}, "committer": {"name": "Denis Vasilik", "email": "contact@denisvasilik.com", "date": "2020-08-19T10:38:32Z"}, "message": "Use intra-doc links for mem::*", "tree": {"sha": "74730d5b3aeade8a9b8753a849a8237efecfe762", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/74730d5b3aeade8a9b8753a849a8237efecfe762"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2c7998720c3493573598c6b625141a29ea15c7ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2c7998720c3493573598c6b625141a29ea15c7ef", "html_url": "https://github.com/rust-lang/rust/commit/2c7998720c3493573598c6b625141a29ea15c7ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2c7998720c3493573598c6b625141a29ea15c7ef/comments", "author": {"login": "denisvasilik", "id": 18697981, "node_id": "MDQ6VXNlcjE4Njk3OTgx", "avatar_url": "https://avatars.githubusercontent.com/u/18697981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denisvasilik", "html_url": "https://github.com/denisvasilik", "followers_url": "https://api.github.com/users/denisvasilik/followers", "following_url": "https://api.github.com/users/denisvasilik/following{/other_user}", "gists_url": "https://api.github.com/users/denisvasilik/gists{/gist_id}", "starred_url": "https://api.github.com/users/denisvasilik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denisvasilik/subscriptions", "organizations_url": "https://api.github.com/users/denisvasilik/orgs", "repos_url": "https://api.github.com/users/denisvasilik/repos", "events_url": "https://api.github.com/users/denisvasilik/events{/privacy}", "received_events_url": "https://api.github.com/users/denisvasilik/received_events", "type": "User", "site_admin": false}, "committer": {"login": "denisvasilik", "id": 18697981, "node_id": "MDQ6VXNlcjE4Njk3OTgx", "avatar_url": "https://avatars.githubusercontent.com/u/18697981?v=4", "gravatar_id": "", "url": "https://api.github.com/users/denisvasilik", "html_url": "https://github.com/denisvasilik", "followers_url": "https://api.github.com/users/denisvasilik/followers", "following_url": "https://api.github.com/users/denisvasilik/following{/other_user}", "gists_url": "https://api.github.com/users/denisvasilik/gists{/gist_id}", "starred_url": "https://api.github.com/users/denisvasilik/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/denisvasilik/subscriptions", "organizations_url": "https://api.github.com/users/denisvasilik/orgs", "repos_url": "https://api.github.com/users/denisvasilik/repos", "events_url": "https://api.github.com/users/denisvasilik/events{/privacy}", "received_events_url": "https://api.github.com/users/denisvasilik/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45b4e1470c62452779d843b78988f4c9cc195268", "url": "https://api.github.com/repos/rust-lang/rust/commits/45b4e1470c62452779d843b78988f4c9cc195268", "html_url": "https://github.com/rust-lang/rust/commit/45b4e1470c62452779d843b78988f4c9cc195268"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "c3658c044f2064e16a2cedabbac910d45e98cb34", "filename": "library/core/src/intrinsics.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2c7998720c3493573598c6b625141a29ea15c7ef/library%2Fcore%2Fsrc%2Fintrinsics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2c7998720c3493573598c6b625141a29ea15c7ef/library%2Fcore%2Fsrc%2Fintrinsics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fintrinsics.rs?ref=2c7998720c3493573598c6b625141a29ea15c7ef", "patch": "@@ -976,7 +976,7 @@ extern \"rust-intrinsic\" {\n     /// items of the same type, including alignment padding.\n     ///\n     /// The stabilized version of this intrinsic is\n-    /// [`std::mem::size_of`](../../std/mem/fn.size_of.html).\n+    /// [`std::mem::size_of`](crate::mem::size_of).\n     #[rustc_const_stable(feature = \"const_size_of\", since = \"1.40.0\")]\n     pub fn size_of<T>() -> usize;\n \n@@ -991,7 +991,7 @@ extern \"rust-intrinsic\" {\n     /// The minimum alignment of a type.\n     ///\n     /// The stabilized version of this intrinsic is\n-    /// [`std::mem::align_of`](../../std/mem/fn.align_of.html).\n+    /// [`std::mem::align_of`](crate::mem::align_of).\n     #[rustc_const_stable(feature = \"const_min_align_of\", since = \"1.40.0\")]\n     pub fn min_align_of<T>() -> usize;\n     /// The preferred alignment of a type.\n@@ -1003,13 +1003,13 @@ extern \"rust-intrinsic\" {\n     /// The size of the referenced value in bytes.\n     ///\n     /// The stabilized version of this intrinsic is\n-    /// [`std::mem::size_of_val`](../../std/mem/fn.size_of_val.html).\n+    /// [`std::mem::size_of_val`](crate::mem::size_of_val).\n     #[rustc_const_unstable(feature = \"const_size_of_val\", issue = \"46571\")]\n     pub fn size_of_val<T: ?Sized>(_: *const T) -> usize;\n     /// The required alignment of the referenced value.\n     ///\n     /// The stabilized version of this intrinsic is\n-    /// [`std::mem::align_of_val`](../../std/mem/fn.align_of_val.html).\n+    /// [`std::mem::align_of_val`](crate::mem::align_of_val).\n     #[rustc_const_unstable(feature = \"const_align_of_val\", issue = \"46571\")]\n     pub fn min_align_of_val<T: ?Sized>(_: *const T) -> usize;\n \n@@ -1301,7 +1301,7 @@ extern \"rust-intrinsic\" {\n     /// `Copy`, then the return value of this function is unspecified.\n     ///\n     /// The stabilized version of this intrinsic is\n-    /// [`std::mem::needs_drop`](../../std/mem/fn.needs_drop.html).\n+    /// [`std::mem::needs_drop`](crate::mem::needs_drop).\n     #[rustc_const_stable(feature = \"const_needs_drop\", since = \"1.40.0\")]\n     pub fn needs_drop<T>() -> bool;\n \n@@ -1920,15 +1920,15 @@ extern \"rust-intrinsic\" {\n     /// cast to a `u64`; if `T` has no discriminant, returns 0.\n     ///\n     /// The stabilized version of this intrinsic is\n-    /// [`std::mem::discriminant`](../../std/mem/fn.discriminant.html)\n+    /// [`std::mem::discriminant`](crate::mem::discriminant)\n     #[rustc_const_unstable(feature = \"const_discriminant\", issue = \"69821\")]\n     pub fn discriminant_value<T>(v: &T) -> <T as DiscriminantKind>::Discriminant;\n \n     /// Returns the number of variants of the type `T` cast to a `usize`;\n     /// if `T` has no variants, returns 0. Uninhabited variants will be counted.\n     ///\n     /// The to-be-stabilized version of this intrinsic is\n-    /// [`std::mem::variant_count`](../../std/mem/fn.variant_count.html)\n+    /// [`std::mem::variant_count`](crate::mem::variant_count)\n     #[rustc_const_unstable(feature = \"variant_count\", issue = \"73662\")]\n     pub fn variant_count<T>() -> usize;\n "}]}