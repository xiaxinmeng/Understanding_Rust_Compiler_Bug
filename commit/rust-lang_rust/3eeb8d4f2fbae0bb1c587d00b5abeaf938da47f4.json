{"sha": "3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNlZWI4ZDRmMmZiYWUwYmIxYzU4N2QwMGI1YWJlYWY5MzhkYTQ3ZjQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-12T19:52:27Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-12T19:52:27Z"}, "message": "Auto merge of #67172 - jethrogb:jb/bootstrap-linker, r=alexcrichton\n\nBootstrap: change logic for choosing linker and rpath\n\nThis is a follow-up from #66957 and #67023. Apparently there was one more location with a hard-coded list of targets to influence linking.\n\nI've filed #67171 to track this madness.\n\nr? @alexcrichton", "tree": {"sha": "b34847e50618034373a8cea277b59839733e96da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b34847e50618034373a8cea277b59839733e96da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4", "html_url": "https://github.com/rust-lang/rust/commit/3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e9469a6aec2f49fa1e2ae670649f293866932253", "url": "https://api.github.com/repos/rust-lang/rust/commits/e9469a6aec2f49fa1e2ae670649f293866932253", "html_url": "https://github.com/rust-lang/rust/commit/e9469a6aec2f49fa1e2ae670649f293866932253"}, {"sha": "786b9d0d626dfbf97e64cd113bbcca08f65c3ca9", "url": "https://api.github.com/repos/rust-lang/rust/commits/786b9d0d626dfbf97e64cd113bbcca08f65c3ca9", "html_url": "https://github.com/rust-lang/rust/commit/786b9d0d626dfbf97e64cd113bbcca08f65c3ca9"}], "stats": {"total": 28, "additions": 17, "deletions": 11}, "files": [{"sha": "fc1e1cf2b1dce3a09319fbdbec8b345d4648290e", "filename": "src/bootstrap/builder.rs", "status": "modified", "additions": 2, "deletions": 5, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4/src%2Fbootstrap%2Fbuilder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4/src%2Fbootstrap%2Fbuilder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fbuilder.rs?ref=3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4", "patch": "@@ -981,7 +981,7 @@ impl<'a> Builder<'a> {\n         // argument manually via `-C link-args=-Wl,-rpath,...`. Plus isn't it\n         // fun to pass a flag to a tool to pass a flag to pass a flag to a tool\n         // to change a flag in a binary?\n-        if self.config.rust_rpath {\n+        if self.config.rust_rpath && util::use_host_linker(&target) {\n             let rpath = if target.contains(\"apple\") {\n \n                 // Note that we need to take one extra step on macOS to also pass\n@@ -991,10 +991,7 @@ impl<'a> Builder<'a> {\n                 // flesh out rpath support more fully in the future.\n                 rustflags.arg(\"-Zosx-rpath-install-name\");\n                 Some(\"-Wl,-rpath,@loader_path/../lib\")\n-            } else if !target.contains(\"windows\") &&\n-                      !target.contains(\"wasm32\") &&\n-                      !target.contains(\"emscripten\") &&\n-                      !target.contains(\"fuchsia\") {\n+            } else if !target.contains(\"windows\") {\n                 Some(\"-Wl,-rpath,$ORIGIN/../lib\")\n             } else {\n                 None"}, {"sha": "7f7e29108a87524f376abb89876027c02c892189", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4", "patch": "@@ -805,12 +805,8 @@ impl Build {\n                                                        .and_then(|c| c.linker.as_ref()) {\n             Some(linker)\n         } else if target != self.config.build &&\n-                  !target.contains(\"msvc\") &&\n-                  !target.contains(\"emscripten\") &&\n-                  !target.contains(\"wasm32\") &&\n-                  !target.contains(\"nvptx\") &&\n-                  !target.contains(\"fortanix\") &&\n-                  !target.contains(\"fuchsia\") {\n+                  util::use_host_linker(&target) &&\n+                  !target.contains(\"msvc\") {\n             Some(self.cc(target))\n         } else {\n             None"}, {"sha": "6824b7a58c480cdf44ec5192311b311d9ca19221", "filename": "src/bootstrap/util.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4/src%2Fbootstrap%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4/src%2Fbootstrap%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Futil.rs?ref=3eeb8d4f2fbae0bb1c587d00b5abeaf938da47f4", "patch": "@@ -15,6 +15,7 @@ use build_helper::t;\n \n use crate::config::Config;\n use crate::builder::Builder;\n+use crate::cache::Interned;\n \n /// Returns the `name` as the filename of a static library for `target`.\n pub fn staticlib(name: &str, target: &str) -> String {\n@@ -306,3 +307,15 @@ pub fn forcing_clang_based_tests() -> bool {\n         false\n     }\n }\n+\n+pub fn use_host_linker(target: &Interned<String>) -> bool {\n+    // FIXME: this information should be gotten by checking the linker flavor\n+    // of the rustc target\n+    !(\n+        target.contains(\"emscripten\") ||\n+        target.contains(\"wasm32\") ||\n+        target.contains(\"nvptx\") ||\n+        target.contains(\"fortanix\") ||\n+        target.contains(\"fuchsia\")\n+    )\n+}"}]}