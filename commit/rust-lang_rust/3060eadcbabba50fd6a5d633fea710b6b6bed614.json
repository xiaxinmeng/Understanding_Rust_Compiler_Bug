{"sha": "3060eadcbabba50fd6a5d633fea710b6b6bed614", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMwNjBlYWRjYmFiYmE1MGZkNmE1ZDYzM2ZlYTcxMGI2YjZiZWQ2MTQ=", "commit": {"author": {"name": "Tim Chevalier", "email": "chevalier@alum.wellesley.edu", "date": "2011-05-02T21:28:35Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2011-05-05T18:26:07Z"}, "message": "Check well-formedness of constraints\n\nCheck that the operand in a constraint is an explicit name,\nand that the operands are all local variables or literals. Still need\nto check that the name refers to a pure function.", "tree": {"sha": "600e724e9e29f38bddd2861c006f4da49e7fa2ee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/600e724e9e29f38bddd2861c006f4da49e7fa2ee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3060eadcbabba50fd6a5d633fea710b6b6bed614", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3060eadcbabba50fd6a5d633fea710b6b6bed614", "html_url": "https://github.com/rust-lang/rust/commit/3060eadcbabba50fd6a5d633fea710b6b6bed614", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3060eadcbabba50fd6a5d633fea710b6b6bed614/comments", "author": {"login": "catamorphism", "id": 427212, "node_id": "MDQ6VXNlcjQyNzIxMg==", "avatar_url": "https://avatars.githubusercontent.com/u/427212?v=4", "gravatar_id": "", "url": "https://api.github.com/users/catamorphism", "html_url": "https://github.com/catamorphism", "followers_url": "https://api.github.com/users/catamorphism/followers", "following_url": "https://api.github.com/users/catamorphism/following{/other_user}", "gists_url": "https://api.github.com/users/catamorphism/gists{/gist_id}", "starred_url": "https://api.github.com/users/catamorphism/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/catamorphism/subscriptions", "organizations_url": "https://api.github.com/users/catamorphism/orgs", "repos_url": "https://api.github.com/users/catamorphism/repos", "events_url": "https://api.github.com/users/catamorphism/events{/privacy}", "received_events_url": "https://api.github.com/users/catamorphism/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bc5650a9d06b85b83d96072a84655cce0991fc41", "url": "https://api.github.com/repos/rust-lang/rust/commits/bc5650a9d06b85b83d96072a84655cce0991fc41", "html_url": "https://github.com/rust-lang/rust/commit/bc5650a9d06b85b83d96072a84655cce0991fc41"}], "stats": {"total": 69, "additions": 63, "deletions": 6}, "files": [{"sha": "cc7569e16b76993f9d9076dfad5faac2af4c0f9d", "filename": "src/comp/front/ast.rs", "status": "modified", "additions": 14, "deletions": 0, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/3060eadcbabba50fd6a5d633fea710b6b6bed614/src%2Fcomp%2Ffront%2Fast.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3060eadcbabba50fd6a5d633fea710b6b6bed614/src%2Fcomp%2Ffront%2Fast.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Ffront%2Fast.rs?ref=3060eadcbabba50fd6a5d633fea710b6b6bed614", "patch": "@@ -563,6 +563,20 @@ fn is_call_expr(@expr e) -> bool {\n     }\n }\n \n+fn is_constraint_arg(@expr e) -> bool {\n+    alt (e.node) {\n+        case (expr_lit(_,_)) {\n+            ret true;\n+        }\n+        case (expr_path(_, option.some[def](def_local(_)), _)) {\n+            ret true;\n+        }\n+        case (_) {\n+            ret false;\n+        }\n+    }\n+}\n+\n //\n // Local Variables:\n // mode: rust"}, {"sha": "e693fdf746874bae9ddf1129f92edc60b216f8d7", "filename": "src/comp/middle/typeck.rs", "status": "modified", "additions": 23, "deletions": 6, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/3060eadcbabba50fd6a5d633fea710b6b6bed614/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3060eadcbabba50fd6a5d633fea710b6b6bed614/src%2Fcomp%2Fmiddle%2Ftypeck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftypeck.rs?ref=3060eadcbabba50fd6a5d633fea710b6b6bed614", "patch": "@@ -1964,12 +1964,29 @@ fn check_expr(&@fn_ctxt fcx, @ast.expr expr) -> @ast.expr {\n              literals or slots */\n             alt (e.node) {\n                 case (ast.expr_call(?operator, ?operands, _)) {\n-                    /* operator must be a pure function */\n-                    /* FIXME: need more checking */\n-                    ret @fold.respan[ast.expr_]\n-                        (expr.span, ast.expr_check(expr_t,\n-                               plain_ann(fcx.ccx.tcx)));\n-                    \n+                    alt (operator.node) {\n+                        case (ast.expr_path(?oper_name, ?d_id, _)) {\n+\n+                            for (@ast.expr operand in operands) {\n+                                if (! ast.is_constraint_arg(operand)) {\n+                                    fcx.ccx.sess.span_err(expr.span,\n+                                       \"Constraint args must be \"\n+                                     + \"slot variables or literals\");\n+                                }\n+                            }\n+                            \n+                         /* operator must be a pure function */\n+                         /* FIXME: need more checking */\n+                            ret @fold.respan[ast.expr_]\n+                                (expr.span, ast.expr_check(expr_t,\n+                                   plain_ann(fcx.ccx.tcx)));\n+                        }\n+                        case (_) {\n+                           fcx.ccx.sess.span_err(expr.span,\n+                             \"In a constraint, expected the constraint name \"\n+                           + \"to be an explicit name\");\n+                        }\n+                    }\n                 }\n                 case (_) {\n                     fcx.ccx.sess.span_err(expr.span,"}, {"sha": "ea1b6cc0965710d661b3ad51b3c2ea5852b03e85", "filename": "src/test/compile-fail/not-a-pred-3.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/3060eadcbabba50fd6a5d633fea710b6b6bed614/src%2Ftest%2Fcompile-fail%2Fnot-a-pred-3.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3060eadcbabba50fd6a5d633fea710b6b6bed614/src%2Ftest%2Fcompile-fail%2Fnot-a-pred-3.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnot-a-pred-3.rs?ref=3060eadcbabba50fd6a5d633fea710b6b6bed614", "patch": "@@ -0,0 +1,15 @@\n+// -*- rust -*-\n+// xfail-boot\n+\n+// error-pattern: expected the constraint name\n+\n+obj f () {\n+  fn g (int q) -> bool {\n+    ret true;\n+  }\n+}\n+\n+fn main() {\n+  auto z = f ();\n+  check (z.g)(42); // should fail to typecheck, as z.g isn't an explicit name\n+}"}, {"sha": "c92b4ff9cae4d7219a162eaa2db84e9f2f6a05ad", "filename": "src/test/compile-fail/not-pred-args.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/3060eadcbabba50fd6a5d633fea710b6b6bed614/src%2Ftest%2Fcompile-fail%2Fnot-pred-args.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3060eadcbabba50fd6a5d633fea710b6b6bed614/src%2Ftest%2Fcompile-fail%2Fnot-pred-args.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fnot-pred-args.rs?ref=3060eadcbabba50fd6a5d633fea710b6b6bed614", "patch": "@@ -0,0 +1,11 @@\n+// -*- rust -*-\n+// xfail-boot\n+\n+// error-pattern: Constraint args must be\n+\n+fn f(int q) -> bool { ret true; }\n+\n+fn main() {\n+// should fail to typecheck, as pred args must be slot variables or literals\n+  check f(42 * 17); \n+}"}]}