{"sha": "693e9579bc796e5a8f38f58563e20d3cc1c21ce3", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5M2U5NTc5YmM3OTZlNWE4ZjM4ZjU4NTYzZTIwZDNjYzFjMjFjZTM=", "commit": {"author": {"name": "mibac138", "email": "5672750+mibac138@users.noreply.github.com", "date": "2021-05-05T16:59:37Z"}, "committer": {"name": "mibac138", "email": "5672750+mibac138@users.noreply.github.com", "date": "2021-05-05T16:59:37Z"}, "message": "Suggest adding a type parameter for impls", "tree": {"sha": "4608cb7c130fa492dcdb29e96de74548bbbaae51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4608cb7c130fa492dcdb29e96de74548bbbaae51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/693e9579bc796e5a8f38f58563e20d3cc1c21ce3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/693e9579bc796e5a8f38f58563e20d3cc1c21ce3", "html_url": "https://github.com/rust-lang/rust/commit/693e9579bc796e5a8f38f58563e20d3cc1c21ce3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/693e9579bc796e5a8f38f58563e20d3cc1c21ce3/comments", "author": {"login": "mibac138", "id": 5672750, "node_id": "MDQ6VXNlcjU2NzI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5672750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mibac138", "html_url": "https://github.com/mibac138", "followers_url": "https://api.github.com/users/mibac138/followers", "following_url": "https://api.github.com/users/mibac138/following{/other_user}", "gists_url": "https://api.github.com/users/mibac138/gists{/gist_id}", "starred_url": "https://api.github.com/users/mibac138/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mibac138/subscriptions", "organizations_url": "https://api.github.com/users/mibac138/orgs", "repos_url": "https://api.github.com/users/mibac138/repos", "events_url": "https://api.github.com/users/mibac138/events{/privacy}", "received_events_url": "https://api.github.com/users/mibac138/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mibac138", "id": 5672750, "node_id": "MDQ6VXNlcjU2NzI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5672750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mibac138", "html_url": "https://github.com/mibac138", "followers_url": "https://api.github.com/users/mibac138/followers", "following_url": "https://api.github.com/users/mibac138/following{/other_user}", "gists_url": "https://api.github.com/users/mibac138/gists{/gist_id}", "starred_url": "https://api.github.com/users/mibac138/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mibac138/subscriptions", "organizations_url": "https://api.github.com/users/mibac138/orgs", "repos_url": "https://api.github.com/users/mibac138/repos", "events_url": "https://api.github.com/users/mibac138/events{/privacy}", "received_events_url": "https://api.github.com/users/mibac138/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "24acc388da2cdbe1ec79b6933402941b6fffb26b", "url": "https://api.github.com/repos/rust-lang/rust/commits/24acc388da2cdbe1ec79b6933402941b6fffb26b", "html_url": "https://github.com/rust-lang/rust/commit/24acc388da2cdbe1ec79b6933402941b6fffb26b"}], "stats": {"total": 47, "additions": 39, "deletions": 8}, "files": [{"sha": "a4bf19aab95f5493ed72f554a0d1678cc3d780a4", "filename": "compiler/rustc_resolve/src/late/diagnostics.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/693e9579bc796e5a8f38f58563e20d3cc1c21ce3/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/693e9579bc796e5a8f38f58563e20d3cc1c21ce3/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_resolve%2Fsrc%2Flate%2Fdiagnostics.rs?ref=693e9579bc796e5a8f38f58563e20d3cc1c21ce3", "patch": "@@ -1600,8 +1600,8 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n         if !self.diagnostic_metadata.currently_processing_generics && !single_uppercase_char {\n             return None;\n         }\n-        match (self.diagnostic_metadata.current_item, single_uppercase_char) {\n-            (Some(Item { kind: ItemKind::Fn(..), ident, .. }), _) if ident.name == sym::main => {\n+        match (self.diagnostic_metadata.current_item, single_uppercase_char, self.diagnostic_metadata.currently_processing_generics) {\n+            (Some(Item { kind: ItemKind::Fn(..), ident, .. }), _, _) if ident.name == sym::main => {\n                 // Ignore `fn main()` as we don't want to suggest `fn main<T>()`\n             }\n             (\n@@ -1613,9 +1613,11 @@ impl<'a: 'ast, 'ast> LateResolutionVisitor<'a, '_, 'ast> {\n                         | kind @ ItemKind::Union(..),\n                     ..\n                 }),\n-                true,\n+                true, _\n             )\n-            | (Some(Item { kind, .. }), false) => {\n+            // Without the 2nd `true`, we'd suggest `impl <T>` for `impl T` when a type `T` isn't found\n+            | (Some(Item { kind: kind @ ItemKind::Impl(..), .. }), true, true)\n+            | (Some(Item { kind, .. }), false, _) => {\n                 // Likely missing type parameter.\n                 if let Some(generics) = kind.generics() {\n                     if span.overlaps(generics.span) {"}, {"sha": "983cb52f3ff5fd1b7569f03e83ea74ceceaba90b", "filename": "src/test/ui/const-generics/diagnostics.stderr", "status": "modified", "additions": 20, "deletions": 2, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/693e9579bc796e5a8f38f58563e20d3cc1c21ce3/src%2Ftest%2Fui%2Fconst-generics%2Fdiagnostics.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/693e9579bc796e5a8f38f58563e20d3cc1c21ce3/src%2Ftest%2Fui%2Fconst-generics%2Fdiagnostics.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconst-generics%2Fdiagnostics.stderr?ref=693e9579bc796e5a8f38f58563e20d3cc1c21ce3", "patch": "@@ -5,7 +5,16 @@ LL | struct A<const N: u8>;\n    | ---------------------- similarly named struct `A` defined here\n LL | trait Foo {}\n LL | impl Foo for A<N> {}\n-   |                ^ help: a struct with a similar name exists: `A`\n+   |                ^\n+   |\n+help: a struct with a similar name exists\n+   |\n+LL | impl Foo for A<A> {}\n+   |                ^\n+help: you might be missing a type parameter\n+   |\n+LL | impl<N> Foo for A<N> {}\n+   |     ^^^\n \n error[E0412]: cannot find type `T` in this scope\n   --> $DIR/diagnostics.rs:16:32\n@@ -14,7 +23,16 @@ LL | struct A<const N: u8>;\n    | ---------------------- similarly named struct `A` defined here\n ...\n LL | impl<const N: u8> Foo for C<N, T> {}\n-   |                                ^ help: a struct with a similar name exists: `A`\n+   |                                ^\n+   |\n+help: a struct with a similar name exists\n+   |\n+LL | impl<const N: u8> Foo for C<N, A> {}\n+   |                                ^\n+help: you might be missing a type parameter\n+   |\n+LL | impl<const N, T: u8> Foo for C<N, T> {}\n+   |             ^^^\n \n error[E0747]: unresolved item provided when a constant was expected\n   --> $DIR/diagnostics.rs:7:16"}, {"sha": "432ddf2dcdbdc3d101f5fb35cbcf9cfc1f253d5c", "filename": "src/test/ui/traits/issue-75627.stderr", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/693e9579bc796e5a8f38f58563e20d3cc1c21ce3/src%2Ftest%2Fui%2Ftraits%2Fissue-75627.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/693e9579bc796e5a8f38f58563e20d3cc1c21ce3/src%2Ftest%2Fui%2Ftraits%2Fissue-75627.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-75627.stderr?ref=693e9579bc796e5a8f38f58563e20d3cc1c21ce3", "patch": "@@ -2,7 +2,9 @@ error[E0412]: cannot find type `T` in this scope\n   --> $DIR/issue-75627.rs:3:26\n    |\n LL | unsafe impl Send for Foo<T> {}\n-   |                          ^ not found in this scope\n+   |            -             ^ not found in this scope\n+   |            |\n+   |            help: you might be missing a type parameter: `<T>`\n \n error: aborting due to previous error\n "}, {"sha": "e63740c4ea928df9dc9a59faf8cfa7280735ef61", "filename": "src/test/ui/traits/issue-78372.stderr", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/693e9579bc796e5a8f38f58563e20d3cc1c21ce3/src%2Ftest%2Fui%2Ftraits%2Fissue-78372.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/693e9579bc796e5a8f38f58563e20d3cc1c21ce3/src%2Ftest%2Fui%2Ftraits%2Fissue-78372.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Fissue-78372.stderr?ref=693e9579bc796e5a8f38f58563e20d3cc1c21ce3", "patch": "@@ -13,9 +13,18 @@ error[E0412]: cannot find type `U` in this scope\n   --> $DIR/issue-78372.rs:3:31\n    |\n LL | impl<T> DispatchFromDyn<Smaht<U, MISC>> for T {}\n-   |      -                        ^ help: a type parameter with a similar name exists: `T`\n+   |      -                        ^\n    |      |\n    |      similarly named type parameter `T` defined here\n+   |\n+help: a type parameter with a similar name exists\n+   |\n+LL | impl<T> DispatchFromDyn<Smaht<T, MISC>> for T {}\n+   |                               ^\n+help: you might be missing a type parameter\n+   |\n+LL | impl<T, U> DispatchFromDyn<Smaht<U, MISC>> for T {}\n+   |       ^^^\n \n error[E0412]: cannot find type `MISC` in this scope\n   --> $DIR/issue-78372.rs:3:34"}]}