{"sha": "a2823e3af6fd8bce53419e9945b7f7c63b267789", "node_id": "MDY6Q29tbWl0NzI0NzEyOmEyODIzZTNhZjZmZDhiY2U1MzQxOWU5OTQ1YjdmN2M2M2IyNjc3ODk=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-12-29T14:23:55Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-12-30T16:18:17Z"}, "message": "Rename `libsyntax_ext` and `libsyntax_expand` in code", "tree": {"sha": "dd9489b2fd772ae62dd049132fb768488e52222c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/dd9489b2fd772ae62dd049132fb768488e52222c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2823e3af6fd8bce53419e9945b7f7c63b267789", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2823e3af6fd8bce53419e9945b7f7c63b267789", "html_url": "https://github.com/rust-lang/rust/commit/a2823e3af6fd8bce53419e9945b7f7c63b267789", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2823e3af6fd8bce53419e9945b7f7c63b267789/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b9a9c5b4fd9008976b3ddfec8e02d8554f5a722b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b9a9c5b4fd9008976b3ddfec8e02d8554f5a722b", "html_url": "https://github.com/rust-lang/rust/commit/b9a9c5b4fd9008976b3ddfec8e02d8554f5a722b"}], "stats": {"total": 141, "additions": 69, "deletions": 72}, "files": [{"sha": "d2834bf7022fece9f9e55751a087b06c5f32cd61", "filename": "src/librustc_builtin_macros/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2FCargo.toml?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -19,6 +19,6 @@ rustc_parse = { path = \"../librustc_parse\" }\n rustc_target = { path = \"../librustc_target\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n syntax = { path = \"../libsyntax\" }\n-syntax_expand = { path = \"../librustc_expand\", package = \"rustc_expand\" }\n+rustc_expand = { path = \"../librustc_expand\" }\n syntax_pos = { path = \"../librustc_span\", package = \"rustc_span\" }\n rustc_error_codes = { path = \"../librustc_error_codes\" }"}, {"sha": "0e1ff7603ba745baafb17d5e4c7eea463f16e0df", "filename": "src/librustc_builtin_macros/asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fasm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fasm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fasm.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -3,14 +3,14 @@\n use State::*;\n \n use errors::{DiagnosticBuilder, PResult};\n+use rustc_expand::base::*;\n use rustc_parse::parser::Parser;\n use syntax::ast::{self, AsmDialect};\n use syntax::ptr::P;\n use syntax::symbol::{kw, sym, Symbol};\n use syntax::token::{self, Token};\n use syntax::tokenstream::{self, TokenStream};\n use syntax::{span_err, struct_span_err};\n-use syntax_expand::base::*;\n use syntax_pos::Span;\n \n use rustc_error_codes::*;"}, {"sha": "59e499b8f8ee46ffe8fbd228f7b721f9f7b2134f", "filename": "src/librustc_builtin_macros/assert.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fassert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fassert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fassert.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,13 +1,13 @@\n use errors::{Applicability, DiagnosticBuilder};\n \n+use rustc_expand::base::*;\n use rustc_parse::parser::Parser;\n use syntax::ast::{self, *};\n use syntax::print::pprust;\n use syntax::ptr::P;\n use syntax::symbol::{sym, Symbol};\n use syntax::token::{self, TokenKind};\n use syntax::tokenstream::{DelimSpan, TokenStream, TokenTree};\n-use syntax_expand::base::*;\n use syntax_pos::{Span, DUMMY_SP};\n \n pub fn expand_assert<'cx>("}, {"sha": "6d97b94ab9f9f2ccbb7e4ec751cca5fcc0f85624", "filename": "src/librustc_builtin_macros/cfg.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fcfg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fcfg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fcfg.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -3,11 +3,11 @@\n /// current compilation environment.\n use errors::DiagnosticBuilder;\n \n+use rustc_expand::base::{self, *};\n use syntax::ast;\n use syntax::attr;\n use syntax::token;\n use syntax::tokenstream::TokenStream;\n-use syntax_expand::base::{self, *};\n use syntax_pos::Span;\n \n pub fn expand_cfg("}, {"sha": "ea33d4c2c464a33e17a140c54944ff1ac73bd4f0", "filename": "src/librustc_builtin_macros/cmdline_attrs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fcmdline_attrs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fcmdline_attrs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fcmdline_attrs.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,10 +1,10 @@\n //! Attributes injected into the crate root from command line using `-Z crate-attr`.\n \n+use rustc_expand::panictry;\n use syntax::ast::{self, AttrItem, AttrStyle};\n use syntax::attr::mk_attr;\n use syntax::sess::ParseSess;\n use syntax::token;\n-use syntax_expand::panictry;\n use syntax_pos::FileName;\n \n pub fn inject(mut krate: ast::Crate, parse_sess: &ParseSess, attrs: &[String]) -> ast::Crate {"}, {"sha": "95bcb6b075bcfce632c12bdb3c2e0e0ff4b86903", "filename": "src/librustc_builtin_macros/compile_error.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fcompile_error.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fcompile_error.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fcompile_error.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,7 +1,7 @@\n // The compiler code necessary to support the compile_error! extension.\n \n+use rustc_expand::base::{self, *};\n use syntax::tokenstream::TokenStream;\n-use syntax_expand::base::{self, *};\n use syntax_pos::Span;\n \n pub fn expand_compile_error<'cx>("}, {"sha": "4dab74610c3e305bacc284e9f2aa9eaa87ea4244", "filename": "src/librustc_builtin_macros/concat.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fconcat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fconcat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fconcat.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,7 +1,7 @@\n+use rustc_expand::base::{self, DummyResult};\n use syntax::ast;\n use syntax::symbol::Symbol;\n use syntax::tokenstream::TokenStream;\n-use syntax_expand::base::{self, DummyResult};\n \n use std::string::String;\n "}, {"sha": "4b5ade9823706ccedb3aeb498fe4165c07f0b2ed", "filename": "src/librustc_builtin_macros/concat_idents.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fconcat_idents.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fconcat_idents.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fconcat_idents.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,8 +1,8 @@\n+use rustc_expand::base::{self, *};\n use syntax::ast;\n use syntax::ptr::P;\n use syntax::token::{self, Token};\n use syntax::tokenstream::{TokenStream, TokenTree};\n-use syntax_expand::base::{self, *};\n use syntax_pos::symbol::Symbol;\n use syntax_pos::Span;\n "}, {"sha": "7027ca979c6a0049e3cf6e89af67f0ee73b5f6ad", "filename": "src/librustc_builtin_macros/deriving/bounds.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fbounds.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fbounds.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fbounds.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -2,8 +2,8 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n+use rustc_expand::base::{Annotatable, ExtCtxt};\n use syntax::ast::MetaItem;\n-use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax_pos::Span;\n \n pub fn expand_deriving_copy("}, {"sha": "a5971bb917656cd13f6192011b8e61dba06e13f7", "filename": "src/librustc_builtin_macros/deriving/clone.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fclone.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -2,10 +2,10 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n+use rustc_expand::base::{Annotatable, ExtCtxt};\n use syntax::ast::{self, Expr, GenericArg, Generics, ItemKind, MetaItem, VariantData};\n use syntax::ptr::P;\n use syntax::symbol::{kw, sym, Symbol};\n-use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax_pos::Span;\n \n pub fn expand_deriving_clone("}, {"sha": "c71ade7304c054e3c9e820a051359557e7790760", "filename": "src/librustc_builtin_macros/deriving/cmp/eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Feq.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -2,10 +2,10 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n+use rustc_expand::base::{Annotatable, ExtCtxt};\n use syntax::ast::{self, Expr, GenericArg, Ident, MetaItem};\n use syntax::ptr::P;\n use syntax::symbol::{sym, Symbol};\n-use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax_pos::Span;\n \n pub fn expand_deriving_eq("}, {"sha": "fc1349e3354fc01cbaf97afe150b70023fee55de", "filename": "src/librustc_builtin_macros/deriving/cmp/ord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Ford.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -2,10 +2,10 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n+use rustc_expand::base::{Annotatable, ExtCtxt};\n use syntax::ast::{self, Expr, MetaItem};\n use syntax::ptr::P;\n use syntax::symbol::sym;\n-use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax_pos::Span;\n \n pub fn expand_deriving_ord("}, {"sha": "6475c22c009dda059a18c2c94b89487cb48ac521", "filename": "src/librustc_builtin_macros/deriving/cmp/partial_eq.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_eq.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -2,10 +2,10 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::{path_local, path_std};\n \n+use rustc_expand::base::{Annotatable, ExtCtxt};\n use syntax::ast::{BinOpKind, Expr, MetaItem};\n use syntax::ptr::P;\n use syntax::symbol::sym;\n-use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax_pos::Span;\n \n pub fn expand_deriving_partial_eq("}, {"sha": "3397f7886057c24d1af75b320cadf4ea8c54220c", "filename": "src/librustc_builtin_macros/deriving/cmp/partial_ord.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fcmp%2Fpartial_ord.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -4,10 +4,10 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::{path_local, path_std, pathvec_std};\n \n+use rustc_expand::base::{Annotatable, ExtCtxt};\n use syntax::ast::{self, BinOpKind, Expr, MetaItem};\n use syntax::ptr::P;\n use syntax::symbol::{sym, Symbol};\n-use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax_pos::Span;\n \n pub fn expand_deriving_partial_ord("}, {"sha": "4a3790e85dd4371851ed82b4880e134e6c639881", "filename": "src/librustc_builtin_macros/deriving/debug.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdebug.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -2,11 +2,11 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n+use rustc_expand::base::{Annotatable, ExtCtxt};\n use syntax::ast::{self, Ident};\n use syntax::ast::{Expr, MetaItem};\n use syntax::ptr::P;\n use syntax::symbol::sym;\n-use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax_pos::{Span, DUMMY_SP};\n \n pub fn expand_deriving_debug("}, {"sha": "290b8977b88ac1865565baa6b34de88fccc8bc59", "filename": "src/librustc_builtin_macros/deriving/decodable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdecodable.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -4,11 +4,11 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::pathvec_std;\n \n+use rustc_expand::base::{Annotatable, ExtCtxt};\n use syntax::ast;\n use syntax::ast::{Expr, MetaItem, Mutability};\n use syntax::ptr::P;\n use syntax::symbol::Symbol;\n-use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax_pos::Span;\n \n pub fn expand_deriving_rustc_decodable("}, {"sha": "284c407f35f5c211d94bb7e5daba67ebb62d9528", "filename": "src/librustc_builtin_macros/deriving/default.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fdefault.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -2,11 +2,11 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::path_std;\n \n+use rustc_expand::base::{Annotatable, DummyResult, ExtCtxt};\n use syntax::ast::{Expr, MetaItem};\n use syntax::ptr::P;\n use syntax::span_err;\n use syntax::symbol::{kw, sym};\n-use syntax_expand::base::{Annotatable, DummyResult, ExtCtxt};\n use syntax_pos::Span;\n \n use rustc_error_codes::*;"}, {"sha": "31f9e38ba3dc6ef8e094dd21bfadc513112fb3db", "filename": "src/librustc_builtin_macros/deriving/encodable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fencodable.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -89,10 +89,10 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::pathvec_std;\n \n+use rustc_expand::base::{Annotatable, ExtCtxt};\n use syntax::ast::{Expr, ExprKind, MetaItem, Mutability};\n use syntax::ptr::P;\n use syntax::symbol::Symbol;\n-use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax_pos::Span;\n \n pub fn expand_deriving_rustc_encodable("}, {"sha": "8af58e9e4ce7be59d9515a0730786cd03e0c3589", "filename": "src/librustc_builtin_macros/deriving/generic/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fmod.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -181,6 +181,7 @@ use std::cell::RefCell;\n use std::iter;\n use std::vec;\n \n+use rustc_expand::base::{Annotatable, ExtCtxt};\n use syntax::ast::{self, BinOpKind, EnumDef, Expr, Generics, Ident, PatKind};\n use syntax::ast::{GenericArg, GenericParamKind, VariantData};\n use syntax::attr;\n@@ -189,7 +190,6 @@ use syntax::sess::ParseSess;\n use syntax::source_map::respan;\n use syntax::symbol::{kw, sym, Symbol};\n use syntax::util::map_in_place::MapInPlace;\n-use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax_pos::Span;\n \n use ty::{LifetimeBounds, Path, Ptr, PtrTy, Self_, Ty};"}, {"sha": "993426501f525d1addd06f8bd6fff7da6a827e40", "filename": "src/librustc_builtin_macros/deriving/generic/ty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fgeneric%2Fty.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -4,10 +4,10 @@\n pub use PtrTy::*;\n pub use Ty::*;\n \n+use rustc_expand::base::ExtCtxt;\n use syntax::ast::{self, Expr, GenericArg, GenericParamKind, Generics, Ident, SelfKind};\n use syntax::ptr::P;\n use syntax::source_map::{respan, DUMMY_SP};\n-use syntax_expand::base::ExtCtxt;\n use syntax_pos::symbol::kw;\n use syntax_pos::Span;\n "}, {"sha": "e75fe1a308c616960ab7627591dd3dca07f0d021", "filename": "src/librustc_builtin_macros/deriving/hash.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fhash.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -2,10 +2,10 @@ use crate::deriving::generic::ty::*;\n use crate::deriving::generic::*;\n use crate::deriving::{self, path_std, pathvec_std};\n \n+use rustc_expand::base::{Annotatable, ExtCtxt};\n use syntax::ast::{Expr, MetaItem, Mutability};\n use syntax::ptr::P;\n use syntax::symbol::sym;\n-use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax_pos::Span;\n \n pub fn expand_deriving_hash("}, {"sha": "0856c0c2a9f947e5b506a10ce405477a3a8d1e86", "filename": "src/librustc_builtin_macros/deriving/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fderiving%2Fmod.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,9 +1,9 @@\n //! The compiler code necessary to implement the `#[derive]` extensions.\n \n+use rustc_expand::base::{Annotatable, ExtCtxt, MultiItemModifier};\n use syntax::ast::{self, ItemKind, MetaItem};\n use syntax::ptr::P;\n use syntax::symbol::{sym, Symbol};\n-use syntax_expand::base::{Annotatable, ExtCtxt, MultiItemModifier};\n use syntax_pos::Span;\n \n macro path_local($x:ident) {"}, {"sha": "dd78cecc85fee529803cdb4c13bb105bd61aee34", "filename": "src/librustc_builtin_macros/env.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fenv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fenv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fenv.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -3,10 +3,10 @@\n // interface.\n //\n \n+use rustc_expand::base::{self, *};\n use syntax::ast::{self, GenericArg, Ident};\n use syntax::symbol::{kw, sym, Symbol};\n use syntax::tokenstream::TokenStream;\n-use syntax_expand::base::{self, *};\n use syntax_pos::Span;\n \n use std::env;"}, {"sha": "7b915a66dacc94d2442b222f01dca8ccb7464a98", "filename": "src/librustc_builtin_macros/format.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fformat.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -7,12 +7,12 @@ use errors::pluralize;\n use errors::Applicability;\n use errors::DiagnosticBuilder;\n \n+use rustc_expand::base::{self, *};\n use syntax::ast;\n use syntax::ptr::P;\n use syntax::symbol::{sym, Symbol};\n use syntax::token;\n use syntax::tokenstream::TokenStream;\n-use syntax_expand::base::{self, *};\n use syntax_pos::{MultiSpan, Span};\n \n use rustc_data_structures::fx::{FxHashMap, FxHashSet};"}, {"sha": "37fcd3cadbac8ed0833d05a8c247ec0e9100c025", "filename": "src/librustc_builtin_macros/global_allocator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fglobal_allocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fglobal_allocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fglobal_allocator.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,11 +1,11 @@\n use crate::util::check_builtin_macro_attribute;\n \n+use rustc_expand::base::{Annotatable, ExtCtxt};\n use syntax::ast::{self, Attribute, Expr, FnHeader, FnSig, Generics, Ident, Param};\n use syntax::ast::{ItemKind, Mutability, Stmt, Ty, TyKind, Unsafety};\n use syntax::expand::allocator::{AllocatorKind, AllocatorMethod, AllocatorTy, ALLOCATOR_METHODS};\n use syntax::ptr::P;\n use syntax::symbol::{kw, sym, Symbol};\n-use syntax_expand::base::{Annotatable, ExtCtxt};\n use syntax_pos::Span;\n \n pub fn expand("}, {"sha": "97ae8012ae3ae1a5f76ad32a4c5e0ba6a4f8d322", "filename": "src/librustc_builtin_macros/global_asm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fglobal_asm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fglobal_asm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fglobal_asm.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -9,13 +9,13 @@\n /// therefore apply.\n use errors::DiagnosticBuilder;\n \n+use rustc_expand::base::{self, *};\n use smallvec::smallvec;\n use syntax::ast;\n use syntax::ptr::P;\n use syntax::source_map::respan;\n use syntax::token;\n use syntax::tokenstream::TokenStream;\n-use syntax_expand::base::{self, *};\n use syntax_pos::Span;\n \n pub fn expand_global_asm<'cx>("}, {"sha": "e9709d981fed4c050f1edb05dc3791b2a1c6b4eb", "filename": "src/librustc_builtin_macros/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Flib.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -13,11 +13,11 @@ extern crate proc_macro;\n \n use crate::deriving::*;\n \n+use rustc_expand::base::{MacroExpanderFn, Resolver, SyntaxExtension, SyntaxExtensionKind};\n+use rustc_expand::proc_macro::BangProcMacro;\n use syntax::ast::Ident;\n use syntax::edition::Edition;\n use syntax::symbol::sym;\n-use syntax_expand::base::{MacroExpanderFn, Resolver, SyntaxExtension, SyntaxExtensionKind};\n-use syntax_expand::proc_macro::BangProcMacro;\n \n mod asm;\n mod assert;"}, {"sha": "f873b1790da1b7477f301e4375f6ca1fa756921f", "filename": "src/librustc_builtin_macros/log_syntax.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Flog_syntax.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Flog_syntax.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Flog_syntax.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,6 +1,6 @@\n+use rustc_expand::base;\n use syntax::print;\n use syntax::tokenstream::TokenStream;\n-use syntax_expand::base;\n use syntax_pos;\n \n pub fn expand_log_syntax<'cx>("}, {"sha": "bdd7b1d8993d223bda1279599de1e205abcdddb3", "filename": "src/librustc_builtin_macros/proc_macro_harness.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fproc_macro_harness.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,5 +1,7 @@\n use std::mem;\n \n+use rustc_expand::base::{ExtCtxt, Resolver};\n+use rustc_expand::expand::{AstFragment, ExpansionConfig};\n use smallvec::smallvec;\n use syntax::ast::{self, Ident};\n use syntax::attr;\n@@ -9,8 +11,6 @@ use syntax::ptr::P;\n use syntax::sess::ParseSess;\n use syntax::symbol::{kw, sym};\n use syntax::visit::{self, Visitor};\n-use syntax_expand::base::{ExtCtxt, Resolver};\n-use syntax_expand::expand::{AstFragment, ExpansionConfig};\n use syntax_pos::hygiene::AstPass;\n use syntax_pos::{Span, DUMMY_SP};\n "}, {"sha": "9e756c4c0e46f5ee8fc413c4bbe7cab0c2908ef5", "filename": "src/librustc_builtin_macros/source_util.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fsource_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fsource_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fsource_util.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,3 +1,5 @@\n+use rustc_expand::base::{self, *};\n+use rustc_expand::panictry;\n use rustc_parse::{self, new_sub_parser_from_file, parser::Parser, DirectoryOwnership};\n use syntax::ast;\n use syntax::early_buffered_lints::INCOMPLETE_INCLUDE;\n@@ -6,8 +8,6 @@ use syntax::ptr::P;\n use syntax::symbol::Symbol;\n use syntax::token;\n use syntax::tokenstream::TokenStream;\n-use syntax_expand::base::{self, *};\n-use syntax_expand::panictry;\n \n use smallvec::SmallVec;\n use syntax_pos::{self, Pos, Span};"}, {"sha": "41da95e0ecc977de85530087c25dc446d1009d1c", "filename": "src/librustc_builtin_macros/standard_library_imports.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Fstandard_library_imports.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,10 +1,10 @@\n+use rustc_expand::base::{ExtCtxt, Resolver};\n+use rustc_expand::expand::ExpansionConfig;\n use syntax::edition::Edition;\n use syntax::ptr::P;\n use syntax::sess::ParseSess;\n use syntax::symbol::{kw, sym, Ident, Symbol};\n use syntax::{ast, attr};\n-use syntax_expand::base::{ExtCtxt, Resolver};\n-use syntax_expand::expand::ExpansionConfig;\n use syntax_pos::hygiene::AstPass;\n use syntax_pos::DUMMY_SP;\n "}, {"sha": "dccaf0199982d5d837c2652501aeb62889e1f453", "filename": "src/librustc_builtin_macros/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftest.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -2,12 +2,12 @@\n /// Ideally, this code would be in libtest but for efficiency and error messages it lives here.\n use crate::util::check_builtin_macro_attribute;\n \n+use rustc_expand::base::*;\n use syntax::ast;\n use syntax::attr;\n use syntax::print::pprust;\n use syntax::source_map::respan;\n use syntax::symbol::{sym, Symbol};\n-use syntax_expand::base::*;\n use syntax_pos::Span;\n \n use std::iter;"}, {"sha": "e596f3e4432a5ed102bc1cf6f272c0879e525182", "filename": "src/librustc_builtin_macros/test_harness.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Ftest_harness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Ftest_harness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftest_harness.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,6 +1,8 @@\n // Code that generates a test runner to run all the tests in a crate\n \n use log::debug;\n+use rustc_expand::base::{ExtCtxt, Resolver};\n+use rustc_expand::expand::{AstFragment, ExpansionConfig};\n use rustc_feature::Features;\n use rustc_target::spec::PanicStrategy;\n use smallvec::{smallvec, SmallVec};\n@@ -12,8 +14,6 @@ use syntax::ptr::P;\n use syntax::sess::ParseSess;\n use syntax::source_map::respan;\n use syntax::symbol::{sym, Symbol};\n-use syntax_expand::base::{ExtCtxt, Resolver};\n-use syntax_expand::expand::{AstFragment, ExpansionConfig};\n use syntax_pos::hygiene::{AstPass, SyntaxContext, Transparency};\n use syntax_pos::{Span, DUMMY_SP};\n "}, {"sha": "450a7269fd47102d978d8cd82c61affb4f9a5a5f", "filename": "src/librustc_builtin_macros/trace_macros.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Ftrace_macros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Ftrace_macros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Ftrace_macros.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,6 +1,6 @@\n+use rustc_expand::base::{self, ExtCtxt};\n use syntax::symbol::kw;\n use syntax::tokenstream::{TokenStream, TokenTree};\n-use syntax_expand::base::{self, ExtCtxt};\n use syntax_pos::Span;\n \n pub fn expand_trace_macros("}, {"sha": "bd748c0c8c1f3e40155ab07b6125a8d8b8e89982", "filename": "src/librustc_builtin_macros/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_builtin_macros%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_builtin_macros%2Futil.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,7 +1,7 @@\n+use rustc_expand::base::ExtCtxt;\n use rustc_feature::AttributeTemplate;\n use rustc_parse::validate_attr;\n use syntax::ast::MetaItem;\n-use syntax_expand::base::ExtCtxt;\n use syntax_pos::Symbol;\n \n pub fn check_builtin_macro_attribute(ecx: &ExtCtxt<'_>, meta_item: &MetaItem, name: Symbol) {"}, {"sha": "e0b303710bfada5988dff0a89ddb640fcf27cb5e", "filename": "src/librustc_codegen_llvm/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_codegen_llvm%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_codegen_llvm%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_codegen_llvm%2FCargo.toml?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -30,5 +30,5 @@ rustc_session = { path = \"../librustc_session\" }\n rustc_target = { path = \"../librustc_target\" }\n smallvec = { version = \"0.6.7\", features = [\"union\", \"may_dangle\"] }\n syntax = { path = \"../libsyntax\" }\n-syntax_expand = { path = \"../librustc_expand\", package = \"rustc_expand\" }\n+rustc_expand = { path = \"../librustc_expand\" }\n syntax_pos = { path = \"../librustc_span\", package = \"rustc_span\" }"}, {"sha": "73ff0cd52d7e2f0ff846cd39fb1bb1b31c5f80a2", "filename": "src/librustc_interface/Cargo.toml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_interface%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_interface%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2FCargo.toml?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -14,8 +14,8 @@ log = \"0.4\"\n rayon = { version = \"0.3.0\", package = \"rustc-rayon\" }\n smallvec = { version = \"1.0\", features = [\"union\", \"may_dangle\"] }\n syntax = { path = \"../libsyntax\" }\n-syntax_ext = { path = \"../librustc_builtin_macros\", package = \"rustc_builtin_macros\" }\n-syntax_expand = { path = \"../librustc_expand\", package = \"rustc_expand\" }\n+rustc_builtin_macros = { path = \"../librustc_builtin_macros\" }\n+rustc_expand = { path = \"../librustc_expand\" }\n rustc_parse = { path = \"../librustc_parse\" }\n syntax_pos = { path = \"../librustc_span\", package = \"rustc_span\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }"}, {"sha": "57fd2fb6d27832351bd8b42a1222befab07bfdb0", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -19,12 +19,14 @@ use rustc::traits;\n use rustc::ty::steal::Steal;\n use rustc::ty::{self, AllArenas, GlobalCtxt, ResolverOutputs, TyCtxt};\n use rustc::util::common::{time, ErrorReported};\n+use rustc_builtin_macros;\n use rustc_codegen_ssa::back::link::emit_metadata;\n use rustc_codegen_utils::codegen_backend::CodegenBackend;\n use rustc_codegen_utils::link::filename_for_metadata;\n use rustc_data_structures::sync::{par_iter, Lrc, Once, ParallelIterator, WorkerLocal};\n use rustc_data_structures::{box_region_allow_access, declare_box_region_type, parallel};\n use rustc_errors::PResult;\n+use rustc_expand::base::ExtCtxt;\n use rustc_incremental;\n use rustc_mir as mir;\n use rustc_parse::{parse_crate_from_file, parse_crate_from_source_str};\n@@ -39,8 +41,6 @@ use syntax::mut_visit::MutVisitor;\n use syntax::symbol::Symbol;\n use syntax::util::node_count::NodeCounter;\n use syntax::{self, ast, visit};\n-use syntax_expand::base::ExtCtxt;\n-use syntax_ext;\n use syntax_pos::FileName;\n \n use rustc_serialize::json;\n@@ -164,14 +164,14 @@ pub fn register_plugins<'a>(\n     crate_name: &str,\n ) -> Result<(ast::Crate, Lrc<lint::LintStore>)> {\n     krate = time(sess, \"attributes injection\", || {\n-        syntax_ext::cmdline_attrs::inject(\n+        rustc_builtin_macros::cmdline_attrs::inject(\n             krate,\n             &sess.parse_sess,\n             &sess.opts.debugging_opts.crate_attr,\n         )\n     });\n \n-    let (krate, features) = syntax_expand::config::features(\n+    let (krate, features) = rustc_expand::config::features(\n         krate,\n         &sess.parse_sess,\n         sess.edition(),\n@@ -243,11 +243,11 @@ fn configure_and_expand_inner<'a>(\n     });\n \n     let mut resolver = Resolver::new(sess, &krate, crate_name, metadata_loader, &resolver_arenas);\n-    syntax_ext::register_builtin_macros(&mut resolver, sess.edition());\n+    rustc_builtin_macros::register_builtin_macros(&mut resolver, sess.edition());\n \n     krate = time(sess, \"crate injection\", || {\n         let alt_std_name = sess.opts.alt_std_name.as_ref().map(|s| Symbol::intern(s));\n-        let (krate, name) = syntax_ext::standard_library_imports::inject(\n+        let (krate, name) = rustc_builtin_macros::standard_library_imports::inject(\n             krate,\n             &mut resolver,\n             &sess.parse_sess,\n@@ -297,12 +297,12 @@ fn configure_and_expand_inner<'a>(\n \n         // Create the config for macro expansion\n         let features = sess.features_untracked();\n-        let cfg = syntax_expand::expand::ExpansionConfig {\n+        let cfg = rustc_expand::expand::ExpansionConfig {\n             features: Some(&features),\n             recursion_limit: *sess.recursion_limit.get(),\n             trace_mac: sess.opts.debugging_opts.trace_macros,\n             should_test: sess.opts.test,\n-            ..syntax_expand::expand::ExpansionConfig::default(crate_name.to_string())\n+            ..rustc_expand::expand::ExpansionConfig::default(crate_name.to_string())\n         };\n \n         let mut ecx = ExtCtxt::new(&sess.parse_sess, cfg, &mut resolver);\n@@ -332,7 +332,7 @@ fn configure_and_expand_inner<'a>(\n     });\n \n     time(sess, \"maybe building test harness\", || {\n-        syntax_ext::test_harness::inject(\n+        rustc_builtin_macros::test_harness::inject(\n             &sess.parse_sess,\n             &mut resolver,\n             sess.opts.test,\n@@ -380,7 +380,7 @@ fn configure_and_expand_inner<'a>(\n         krate = time(sess, \"maybe creating a macro crate\", || {\n             let num_crate_types = crate_types.len();\n             let is_test_crate = sess.opts.test;\n-            syntax_ext::proc_macro_harness::inject(\n+            rustc_builtin_macros::proc_macro_harness::inject(\n                 &sess.parse_sess,\n                 &mut resolver,\n                 krate,"}, {"sha": "e22a80886541498ddecb827efd02d293bf9cd478", "filename": "src/librustc_metadata/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_metadata%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_metadata%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2FCargo.toml?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -22,7 +22,7 @@ rustc_index = { path = \"../librustc_index\" }\n rustc_serialize = { path = \"../libserialize\", package = \"serialize\" }\n stable_deref_trait = \"1.0.0\"\n syntax = { path = \"../libsyntax\" }\n-syntax_expand = { path = \"../librustc_expand\", package = \"rustc_expand\" }\n+rustc_expand = { path = \"../librustc_expand\" }\n rustc_parse = { path = \"../librustc_parse\" }\n syntax_pos = { path = \"../librustc_span\", package = \"rustc_span\" }\n rustc_error_codes = { path = \"../librustc_error_codes\" }"}, {"sha": "88ad5aba88ed13725e8d78f916d38622b7f10f12", "filename": "src/librustc_metadata/creader.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_metadata%2Fcreader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_metadata%2Fcreader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fcreader.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -22,13 +22,13 @@ use std::{cmp, fs};\n \n use log::{debug, info, log_enabled};\n use proc_macro::bridge::client::ProcMacro;\n+use rustc_expand::base::SyntaxExtension;\n use syntax::ast;\n use syntax::attr;\n use syntax::edition::Edition;\n use syntax::expand::allocator::{global_allocator_spans, AllocatorKind};\n use syntax::span_fatal;\n use syntax::symbol::{sym, Symbol};\n-use syntax_expand::base::SyntaxExtension;\n use syntax_pos::{Span, DUMMY_SP};\n \n use rustc_error_codes::*;"}, {"sha": "5b25e192f902d52e1e431ae1d4b2d71a3d7e0cf4", "filename": "src/librustc_metadata/rmeta/decoder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Frmeta%2Fdecoder.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -33,12 +33,12 @@ use std::u32;\n \n use log::debug;\n use proc_macro::bridge::client::ProcMacro;\n+use rustc_expand::base::{SyntaxExtension, SyntaxExtensionKind};\n+use rustc_expand::proc_macro::{AttrProcMacro, BangProcMacro, ProcMacroDerive};\n use rustc_serialize::{opaque, Decodable, Decoder, SpecializedDecoder};\n use syntax::ast::{self, Ident};\n use syntax::attr;\n use syntax::source_map::{self, respan, Spanned};\n-use syntax_expand::base::{SyntaxExtension, SyntaxExtensionKind};\n-use syntax_expand::proc_macro::{AttrProcMacro, BangProcMacro, ProcMacroDerive};\n use syntax_pos::symbol::{sym, Symbol};\n use syntax_pos::{self, hygiene::MacroKind, BytePos, Pos, Span, DUMMY_SP};\n "}, {"sha": "63892eb8995a1868f129307be722974b351134ee", "filename": "src/librustc_parse/config.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_parse%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_parse%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_parse%2Fconfig.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,7 +1,7 @@\n //! Process the potential `cfg` attributes on a module.\n //! Also determine if the module should be included in this configuration.\n //!\n-//! This module properly belongs in syntax_expand, but for now it's tied into\n+//! This module properly belongs in rustc_expand, but for now it's tied into\n //! parsing, so we leave it here to avoid complicated out-of-line dependencies.\n //!\n //! A principled solution to this wrong location would be to implement [#64197]."}, {"sha": "0efc0de3a670ab4ae6c2d23d5619bec1f0f3c4a5", "filename": "src/librustc_resolve/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_resolve%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_resolve%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2FCargo.toml?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -14,7 +14,7 @@ doctest = false\n bitflags = \"1.2.1\"\n log = \"0.4\"\n syntax = { path = \"../libsyntax\" }\n-syntax_expand = { path = \"../librustc_expand\", package = \"rustc_expand\" }\n+rustc_expand = { path = \"../librustc_expand\" }\n rustc = { path = \"../librustc\" }\n arena = { path = \"../libarena\" }\n errors = { path = \"../librustc_errors\", package = \"rustc_errors\" }"}, {"sha": "786f1faaecb05344c6398a7e191436ad8400c5bb", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -29,6 +29,8 @@ use std::ptr;\n \n use errors::Applicability;\n \n+use rustc_expand::base::SyntaxExtension;\n+use rustc_expand::expand::AstFragment;\n use syntax::ast::{self, Block, ForeignItem, ForeignItemKind, Item, ItemKind, NodeId};\n use syntax::ast::{AssocItem, AssocItemKind, MetaItemKind, StmtKind};\n use syntax::ast::{Ident, Name};\n@@ -38,8 +40,6 @@ use syntax::span_err;\n use syntax::symbol::{kw, sym};\n use syntax::token::{self, Token};\n use syntax::visit::{self, Visitor};\n-use syntax_expand::base::SyntaxExtension;\n-use syntax_expand::expand::AstFragment;\n use syntax_pos::hygiene::{ExpnId, MacroKind};\n use syntax_pos::{Span, DUMMY_SP};\n "}, {"sha": "e76f1f82f65ee2860d2b0b5f8a3cbea4a2d3419c", "filename": "src/librustc_resolve/def_collector.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_resolve%2Fdef_collector.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_resolve%2Fdef_collector.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fdef_collector.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -1,11 +1,11 @@\n use log::debug;\n use rustc::hir::def_id::DefIndex;\n use rustc::hir::map::definitions::*;\n+use rustc_expand::expand::AstFragment;\n use syntax::ast::*;\n use syntax::symbol::{kw, sym};\n use syntax::token::{self, Token};\n use syntax::visit;\n-use syntax_expand::expand::AstFragment;\n use syntax_pos::hygiene::ExpnId;\n use syntax_pos::Span;\n "}, {"sha": "f6e836011b2488aa42c2f678ee3abe35d6fd7458", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -36,6 +36,7 @@ use rustc::util::nodemap::{DefIdMap, FxHashMap, FxHashSet, NodeMap, NodeSet};\n use rustc_metadata::creader::{CStore, CrateLoader};\n \n use errors::{Applicability, DiagnosticBuilder};\n+use rustc_expand::base::SyntaxExtension;\n use syntax::ast::{self, FloatTy, Ident, IntTy, Name, NodeId, UintTy};\n use syntax::ast::{Crate, CRATE_NODE_ID};\n use syntax::ast::{ItemKind, Path};\n@@ -45,7 +46,6 @@ use syntax::source_map::Spanned;\n use syntax::symbol::{kw, sym};\n use syntax::visit::{self, Visitor};\n use syntax::{struct_span_err, unwrap_or};\n-use syntax_expand::base::SyntaxExtension;\n use syntax_pos::hygiene::{ExpnId, ExpnKind, MacroKind, SyntaxContext, Transparency};\n use syntax_pos::{Span, DUMMY_SP};\n "}, {"sha": "580dbad572468d6f6c4f7222cdad99df54353b67", "filename": "src/librustc_resolve/macros.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_resolve%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustc_resolve%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fmacros.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -12,16 +12,16 @@ use rustc::middle::stability;\n use rustc::session::Session;\n use rustc::util::nodemap::FxHashSet;\n use rustc::{lint, span_bug, ty};\n+use rustc_expand::base::SyntaxExtension;\n+use rustc_expand::base::{self, Indeterminate, InvocationRes};\n+use rustc_expand::compile_declarative_macro;\n+use rustc_expand::expand::{AstFragment, AstFragmentKind, Invocation, InvocationKind};\n use rustc_feature::is_builtin_attr_name;\n use syntax::ast::{self, Ident, NodeId};\n use syntax::attr::{self, StabilityLevel};\n use syntax::edition::Edition;\n use syntax::feature_gate::feature_err;\n use syntax::print::pprust;\n-use syntax_expand::base::SyntaxExtension;\n-use syntax_expand::base::{self, Indeterminate, InvocationRes};\n-use syntax_expand::compile_declarative_macro;\n-use syntax_expand::expand::{AstFragment, AstFragmentKind, Invocation, InvocationKind};\n use syntax_pos::hygiene::{self, ExpnData, ExpnId, ExpnKind};\n use syntax_pos::symbol::{kw, sym, Symbol};\n use syntax_pos::{Span, DUMMY_SP};"}, {"sha": "fb289f8ab8a2726702987a44f595639be221005e", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -25,7 +25,7 @@ extern crate rustc;\n extern crate rustc_data_structures;\n extern crate rustc_driver;\n extern crate rustc_error_codes;\n-extern crate rustc_expand as syntax_expand;\n+extern crate rustc_expand;\n extern crate rustc_feature;\n extern crate rustc_index;\n extern crate rustc_interface;"}, {"sha": "75a87e7cc5dd905af4f02bf27a3f1f28a25ee62f", "filename": "src/librustdoc/passes/collect_intra_doc_links.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fpasses%2Fcollect_intra_doc_links.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -8,12 +8,12 @@ use rustc::hir::def::{\n use rustc::hir::def_id::DefId;\n use rustc::lint;\n use rustc::ty;\n+use rustc_expand::base::SyntaxExtensionKind;\n use rustc_feature::UnstableFeatures;\n use rustc_resolve::ParentScope;\n use syntax;\n use syntax::ast::{self, Ident};\n use syntax::symbol::Symbol;\n-use syntax_expand::base::SyntaxExtensionKind;\n use syntax_pos::DUMMY_SP;\n \n use std::ops::Range;"}, {"sha": "fa136fd54c26bec2f5d25709fa1d41ce08c51b82", "filename": "src/test/ui-fulldeps/auxiliary/macro-crate-test.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fmacro-crate-test.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fmacro-crate-test.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fauxiliary%2Fmacro-crate-test.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -7,7 +7,6 @@\n extern crate syntax;\n extern crate rustc;\n extern crate rustc_driver;\n-extern crate syntax_pos;\n extern crate proc_macro;\n \n use proc_macro::{TokenTree, TokenStream};"}, {"sha": "51aa5f24e4ce90b86e58124a519dde18a1a1b8dd", "filename": "src/test/ui-fulldeps/mod_dir_path_canonicalized.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fmod_dir_path_canonicalized.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -5,7 +5,6 @@\n #![feature(rustc_private)]\n \n extern crate syntax;\n-extern crate syntax_expand;\n extern crate rustc_parse;\n \n use rustc_parse::new_parser_from_file;"}, {"sha": "59813322e5b25bbf32026f4b3553d220a347756f", "filename": "src/test/ui-fulldeps/pprust-expr-roundtrip.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Ftest%2Fui-fulldeps%2Fpprust-expr-roundtrip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2823e3af6fd8bce53419e9945b7f7c63b267789/src%2Ftest%2Fui-fulldeps%2Fpprust-expr-roundtrip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui-fulldeps%2Fpprust-expr-roundtrip.rs?ref=a2823e3af6fd8bce53419e9945b7f7c63b267789", "patch": "@@ -21,7 +21,6 @@\n \n extern crate rustc_data_structures;\n extern crate syntax;\n-extern crate syntax_expand;\n extern crate rustc_parse;\n \n use rustc_data_structures::thin_vec::ThinVec;"}]}