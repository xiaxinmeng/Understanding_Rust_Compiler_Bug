{"sha": "16d8d4b899c8f23456027d0baec6ed83d256507c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2ZDhkNGI4OTljOGYyMzQ1NjAyN2QwYmFlYzZlZDgzZDI1NjUwN2M=", "commit": {"author": {"name": "Ivan Tham", "email": "pickfire@riseup.net", "date": "2020-08-26T14:41:56Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-08-26T14:41:56Z"}, "message": "Error use explicit intra-doc link and fix text", "tree": {"sha": "ee81218ed5ab24934dc38c16897c061c651d7061", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ee81218ed5ab24934dc38c16897c061c651d7061"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/16d8d4b899c8f23456027d0baec6ed83d256507c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfRnS0CRBK7hj4Ov3rIwAAdHIIAG9bpJGxogo4tF/d9l3/i4zq\nEl0Eu9/8CE3MKIZUasQetuXVa0G8pVSGXU6tWlOd5FLRpFn8oux4GYTMgsJOpx4C\neX+vEtjvN6TPVsfeYX/UcQFJJDLu6WYlYD94UObLJFfL9tmm6seYlZydI0V/vixe\nWNE5mWhdntn1FDgIL8CzyPfc52xrGCsAICzUD3dBfUenVxSDXHsiOtuQgWqOoFO0\nmqzc2H06gdsH8jR4LHutpY2ZfgyOVwjrzEKWn+12Mpya5dAOYD3lpU6sDCCSDZ1W\n0TBobkPXarBWtfsGVyVM3XCXXdn8pvZ4/ovOs4y0uBhrKWiCUziHwYC1TWAKnxA=\n=Zovq\n-----END PGP SIGNATURE-----\n", "payload": "tree ee81218ed5ab24934dc38c16897c061c651d7061\nparent ffd59bf9c62125813abae8ca52f0ac3a67459e8f\nauthor Ivan Tham <pickfire@riseup.net> 1598452916 +0800\ncommitter GitHub <noreply@github.com> 1598452916 +0800\n\nError use explicit intra-doc link and fix text"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/16d8d4b899c8f23456027d0baec6ed83d256507c", "html_url": "https://github.com/rust-lang/rust/commit/16d8d4b899c8f23456027d0baec6ed83d256507c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/16d8d4b899c8f23456027d0baec6ed83d256507c/comments", "author": {"login": "pickfire", "id": 4687791, "node_id": "MDQ6VXNlcjQ2ODc3OTE=", "avatar_url": "https://avatars.githubusercontent.com/u/4687791?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pickfire", "html_url": "https://github.com/pickfire", "followers_url": "https://api.github.com/users/pickfire/followers", "following_url": "https://api.github.com/users/pickfire/following{/other_user}", "gists_url": "https://api.github.com/users/pickfire/gists{/gist_id}", "starred_url": "https://api.github.com/users/pickfire/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pickfire/subscriptions", "organizations_url": "https://api.github.com/users/pickfire/orgs", "repos_url": "https://api.github.com/users/pickfire/repos", "events_url": "https://api.github.com/users/pickfire/events{/privacy}", "received_events_url": "https://api.github.com/users/pickfire/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ffd59bf9c62125813abae8ca52f0ac3a67459e8f", "url": "https://api.github.com/repos/rust-lang/rust/commits/ffd59bf9c62125813abae8ca52f0ac3a67459e8f", "html_url": "https://github.com/rust-lang/rust/commit/ffd59bf9c62125813abae8ca52f0ac3a67459e8f"}], "stats": {"total": 17, "additions": 7, "deletions": 10}, "files": [{"sha": "9869ccec546382c4121a402f7f007a15887fe548", "filename": "library/std/src/error.rs", "status": "modified", "additions": 7, "deletions": 10, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/16d8d4b899c8f23456027d0baec6ed83d256507c/library%2Fstd%2Fsrc%2Ferror.rs", "raw_url": "https://github.com/rust-lang/rust/raw/16d8d4b899c8f23456027d0baec6ed83d256507c/library%2Fstd%2Fsrc%2Ferror.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fstd%2Fsrc%2Ferror.rs?ref=16d8d4b899c8f23456027d0baec6ed83d256507c", "patch": "@@ -33,15 +33,14 @@ use crate::string;\n /// themselves through the [`Display`] and [`Debug`] traits, and may provide\n /// cause chain information:\n ///\n-/// The [`source`] method is generally used when errors cross \"abstraction\n-/// boundaries\". If one module must report an error that is caused by an error\n-/// from a lower-level module, it can allow access to that error via the\n-/// [`source`] method. This makes it possible for the high-level module to\n-/// provide its own errors while also revealing some of the implementation for\n-/// debugging via [`source`] chains.\n+/// The [`Error::source`] method is generally used when errors cross\n+/// \"abstraction boundaries\". If one module must report an error that is caused\n+/// by an error from a lower-level module, it can allow accessing that error\n+/// via the [`Error::source`] method. This makes it possible for the high-level\n+/// module to provide its own errors while also revealing some of the\n+/// implementation for debugging via [`Error::source`] chains.\n ///\n /// [`Result<T, E>`]: Result\n-/// [`source`]: Error::source\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub trait Error: Debug + Display {\n     /// The lower-level source of this error, if any.\n@@ -636,7 +635,7 @@ impl dyn Error {\n     }\n \n     /// Returns an iterator starting with the current error and continuing with\n-    /// recursively calling [`source`].\n+    /// recursively calling [`Error::source`].\n     ///\n     /// If you want to omit the current error and only use its sources,\n     /// use `skip(1)`.\n@@ -686,8 +685,6 @@ impl dyn Error {\n     /// assert!(iter.next().is_none());\n     /// assert!(iter.next().is_none());\n     /// ```\n-    ///\n-    /// [`source`]: Error::source\n     #[unstable(feature = \"error_iter\", issue = \"58520\")]\n     #[inline]\n     pub fn chain(&self) -> Chain<'_> {"}]}