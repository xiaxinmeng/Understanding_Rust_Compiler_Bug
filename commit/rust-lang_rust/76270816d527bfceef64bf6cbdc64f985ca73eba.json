{"sha": "76270816d527bfceef64bf6cbdc64f985ca73eba", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc2MjcwODE2ZDUyN2JmY2VlZjY0YmY2Y2JkYzY0Zjk4NWNhNzNlYmE=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-12-13T01:34:29Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2013-12-24T22:42:00Z"}, "message": "std: Make logging safely implemented\n\nThis commit fixes the logging function to be safely implemented, as well as\nforcibly requiring a task to be present to use logging macros. This is safely\nimplemented by transferring ownership of the logger from the task to the local\nstack frame in order to perform the print. This means that if a logger does more\nlogging while logging a new one will be initialized and then will get\noverwritten once the initial logging function returns.\n\nWithout a scheme such as this, it is possible to unsafely alias two loggers by\nlogging twice (unsafely borrows from the task twice).", "tree": {"sha": "1b620e0a90a0119e309ff560e2214152e9d608f1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b620e0a90a0119e309ff560e2214152e9d608f1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/76270816d527bfceef64bf6cbdc64f985ca73eba", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/76270816d527bfceef64bf6cbdc64f985ca73eba", "html_url": "https://github.com/rust-lang/rust/commit/76270816d527bfceef64bf6cbdc64f985ca73eba", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/76270816d527bfceef64bf6cbdc64f985ca73eba/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dd19785f963fd1045e53447add17ab36ca41fc79", "url": "https://api.github.com/repos/rust-lang/rust/commits/dd19785f963fd1045e53447add17ab36ca41fc79", "html_url": "https://github.com/rust-lang/rust/commit/dd19785f963fd1045e53447add17ab36ca41fc79"}], "stats": {"total": 32, "additions": 11, "deletions": 21}, "files": [{"sha": "fb83cfdd6ea8aecd9922ff2af0bee20385ef624c", "filename": "src/libstd/logging.rs", "status": "modified", "additions": 11, "deletions": 21, "changes": 32, "blob_url": "https://github.com/rust-lang/rust/blob/76270816d527bfceef64bf6cbdc64f985ca73eba/src%2Flibstd%2Flogging.rs", "raw_url": "https://github.com/rust-lang/rust/raw/76270816d527bfceef64bf6cbdc64f985ca73eba/src%2Flibstd%2Flogging.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Flogging.rs?ref=76270816d527bfceef64bf6cbdc64f985ca73eba", "patch": "@@ -118,26 +118,16 @@ pub static ERROR: u32 = 1;\n /// It is not recommended to call this function directly, rather it should be\n /// invoked through the logging family of macros.\n pub fn log(_level: u32, args: &fmt::Arguments) {\n-    unsafe {\n-        let optional_task: Option<*mut Task> = Local::try_unsafe_borrow();\n-        match optional_task {\n-            Some(local) => {\n-                // Lazily initialize the local task's logger\n-                match (*local).logger {\n-                    // Use the available logger if we have one\n-                    Some(ref mut logger) => { logger.log(args); }\n-                    None => {\n-                        let mut logger = StdErrLogger::new();\n-                        logger.log(args);\n-                        (*local).logger = Some(logger);\n-                    }\n-                }\n-            }\n-            // If there's no local task, then always log to stderr\n-            None => {\n-                let mut logger = StdErrLogger::new();\n-                logger.log(args);\n-            }\n-        }\n+    let mut logger = {\n+        let mut task = Local::borrow(None::<Task>);\n+        task.get().logger.take()\n+    };\n+\n+    if logger.is_none() {\n+        logger = Some(StdErrLogger::new());\n     }\n+    logger.get_mut_ref().log(args);\n+\n+    let mut task = Local::borrow(None::<Task>);\n+    task.get().logger = logger;\n }"}]}