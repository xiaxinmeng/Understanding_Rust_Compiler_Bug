{"sha": "ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNlMTA5MTBiNjljN2MyYzkwYTliYTJhZWI3YzQ5OGNiMmNmZDNhYzk=", "commit": {"author": {"name": "Collins Abitekaniza", "email": "collins.abitekaniza@osmosisworld.com", "date": "2018-05-24T00:20:47Z"}, "committer": {"name": "Collins Abitekaniza", "email": "collins.abitekaniza@osmosisworld.com", "date": "2018-06-03T01:59:55Z"}, "message": "refactor, make requested changes", "tree": {"sha": "7e07bba273bb9a57ee96517465f691c3a6290706", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7e07bba273bb9a57ee96517465f691c3a6290706"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9", "html_url": "https://github.com/rust-lang/rust/commit/ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9/comments", "author": null, "committer": null, "parents": [{"sha": "42ee6d5fd55574eb2778b8ddc161e5332a5635bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/42ee6d5fd55574eb2778b8ddc161e5332a5635bd", "html_url": "https://github.com/rust-lang/rust/commit/42ee6d5fd55574eb2778b8ddc161e5332a5635bd"}], "stats": {"total": 31, "additions": 15, "deletions": 16}, "files": [{"sha": "9c8a0b046010de8fb4b62383637bc38767d86368", "filename": "src/bootstrap/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9/src%2Fbootstrap%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9/src%2Fbootstrap%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcheck.rs?ref=ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9", "patch": "@@ -236,7 +236,7 @@ impl Step for Rustdoc {\n         builder.ensure(tool::CleanTools {\n             compiler,\n             target,\n-            mode: Mode::ToolRustc,\n+            cause: Mode::Rustc,\n         });\n     }\n }"}, {"sha": "11d9154ba696c9db0965165ce2dfc4bec5d475c8", "filename": "src/bootstrap/compile.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9/src%2Fbootstrap%2Fcompile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9/src%2Fbootstrap%2Fcompile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fcompile.rs?ref=ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9", "patch": "@@ -240,7 +240,7 @@ impl Step for StdLink {\n         builder.ensure(tool::CleanTools {\n             compiler: target_compiler,\n             target,\n-            mode: Mode::Std,\n+            cause: Mode::Std,\n         });\n     }\n }\n@@ -431,7 +431,7 @@ impl Step for TestLink {\n         builder.ensure(tool::CleanTools {\n             compiler: target_compiler,\n             target,\n-            mode: Mode::Test,\n+            cause: Mode::Test,\n         });\n     }\n }\n@@ -585,7 +585,7 @@ impl Step for RustcLink {\n         builder.ensure(tool::CleanTools {\n             compiler: target_compiler,\n             target,\n-            mode: Mode::Rustc,\n+            cause: Mode::Rustc,\n         });\n     }\n }"}, {"sha": "7576505e29508a99d16ae0a3559af690f5575ace", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9", "patch": "@@ -312,9 +312,10 @@ pub enum Mode {\n     /// Build libtest, placing output in the \"stageN-test\" directory.\n     Test,\n \n-    /// Build librustc, codegen and compiler libraries, placing output\n-    /// in the \"stageN-rustc\" directory.\n+    /// Build librustc, and compiler libraries, placing output in the \"stageN-rustc\" directory.\n     Rustc,\n+\n+    /// Build codegen libraries, placing output in the \"stageN-codegen\" directory\n     Codegen,\n \n     /// Build some tools, placing output in the \"stageN-tools\" directory.\n@@ -522,12 +523,10 @@ impl Build {\n     fn stage_out(&self, compiler: Compiler, mode: Mode) -> PathBuf {\n         let suffix = match mode {\n             Mode::Std => \"-std\",\n-            Mode::ToolStd => \"-tools\",\n             Mode::Test => \"-test\",\n-            Mode::ToolTest => \"-tools\",\n             Mode::Codegen => \"-rustc\",\n             Mode::Rustc => \"-rustc\",\n-            Mode::ToolRustc => \"-tools\",\n+            Mode::ToolStd | Mode::ToolTest | Mode::ToolRustc => \"-tools\",\n         };\n         self.out.join(&*compiler.host)\n                 .join(format!(\"stage{}{}\", compiler.stage, suffix))"}, {"sha": "75bfa9ab39af3b0e196ec159a6b431a3933d9e9c", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=ce10910b69c7c2c90a9ba2aeb7c498cb2cfd3ac9", "patch": "@@ -28,7 +28,7 @@ use toolstate::ToolState;\n pub struct CleanTools {\n     pub compiler: Compiler,\n     pub target: Interned<String>,\n-    pub mode: Mode,\n+    pub cause: Mode,\n }\n \n impl Step for CleanTools {\n@@ -41,7 +41,7 @@ impl Step for CleanTools {\n     fn run(self, builder: &Builder) {\n         let compiler = self.compiler;\n         let target = self.target;\n-        let mode = self.mode;\n+        let cause = self.cause;\n \n         // This is for the original compiler, but if we're forced to use stage 1, then\n         // std/test/rustc stamps won't exist in stage 2, so we need to get those from stage 1, since\n@@ -53,11 +53,11 @@ impl Step for CleanTools {\n             compiler\n         };\n \n-        for &cur_mode in &[Mode::ToolStd, Mode::ToolTest, Mode::ToolRustc] {\n+        for &cur_mode in &[Mode::Std, Mode::Test, Mode::Rustc] {\n             let stamp = match cur_mode {\n-                Mode::ToolStd => libstd_stamp(builder, compiler, target),\n-                Mode::ToolTest => libtest_stamp(builder, compiler, target),\n-                Mode::ToolRustc => librustc_stamp(builder, compiler, target),\n+                Mode::Std => libstd_stamp(builder, compiler, target),\n+                Mode::Test => libtest_stamp(builder, compiler, target),\n+                Mode::Rustc => librustc_stamp(builder, compiler, target),\n                 _ => panic!(),\n             };\n \n@@ -67,7 +67,7 @@ impl Step for CleanTools {\n \n             // If we are a rustc tool, and std changed, we also need to clear ourselves out -- our\n             // dependencies depend on std. Therefore, we iterate up until our own mode.\n-            if mode == cur_mode {\n+            if cause == cur_mode {\n                 break;\n             }\n         }"}]}