{"sha": "b8a84c2c53328757b407829da3049c6baa049a0e", "node_id": "C_kwDOAAsO6NoAKGI4YTg0YzJjNTMzMjg3NTdiNDA3ODI5ZGEzMDQ5YzZiYWEwNDlhMGU", "commit": {"author": {"name": "Joshua Nelson", "email": "jnelson@cloudflare.com", "date": "2022-12-14T19:48:44Z"}, "committer": {"name": "Joshua Nelson", "email": "github@jyn.dev", "date": "2022-12-17T19:26:26Z"}, "message": "Make `RUN_CHECK_WITH_PARALLEL_QUERIES` the last thing to run\n\nThis takes a long time and rarely fails. It also interferes with `retry make prepare`, the retry is unhelpful since `make prepare` turns into a no-op", "tree": {"sha": "c4f85503feb903114ef0c83060969d25358044b3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4f85503feb903114ef0c83060969d25358044b3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b8a84c2c53328757b407829da3049c6baa049a0e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b8a84c2c53328757b407829da3049c6baa049a0e", "html_url": "https://github.com/rust-lang/rust/commit/b8a84c2c53328757b407829da3049c6baa049a0e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b8a84c2c53328757b407829da3049c6baa049a0e/comments", "author": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "committer": {"login": "jyn514", "id": 23638587, "node_id": "MDQ6VXNlcjIzNjM4NTg3", "avatar_url": "https://avatars.githubusercontent.com/u/23638587?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jyn514", "html_url": "https://github.com/jyn514", "followers_url": "https://api.github.com/users/jyn514/followers", "following_url": "https://api.github.com/users/jyn514/following{/other_user}", "gists_url": "https://api.github.com/users/jyn514/gists{/gist_id}", "starred_url": "https://api.github.com/users/jyn514/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jyn514/subscriptions", "organizations_url": "https://api.github.com/users/jyn514/orgs", "repos_url": "https://api.github.com/users/jyn514/repos", "events_url": "https://api.github.com/users/jyn514/events{/privacy}", "received_events_url": "https://api.github.com/users/jyn514/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c99f1b7413e8abccc07197838aafda6ce3788e26", "url": "https://api.github.com/repos/rust-lang/rust/commits/c99f1b7413e8abccc07197838aafda6ce3788e26", "html_url": "https://github.com/rust-lang/rust/commit/c99f1b7413e8abccc07197838aafda6ce3788e26"}], "stats": {"total": 26, "additions": 19, "deletions": 7}, "files": [{"sha": "2906616ffad142958e4debc08d55472a7b348971", "filename": "src/bootstrap/config.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/b8a84c2c53328757b407829da3049c6baa049a0e/src%2Fbootstrap%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b8a84c2c53328757b407829da3049c6baa049a0e/src%2Fbootstrap%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfig.rs?ref=b8a84c2c53328757b407829da3049c6baa049a0e", "patch": "@@ -638,6 +638,7 @@ define_config! {\n         dist_stage: Option<u32> = \"dist-stage\",\n         bench_stage: Option<u32> = \"bench-stage\",\n         patch_binaries_for_nix: Option<bool> = \"patch-binaries-for-nix\",\n+        // NOTE: only parsed by bootstrap.py, `--feature build-metrics` enables metrics unconditionally\n         metrics: Option<bool> = \"metrics\",\n     }\n }"}, {"sha": "f05bb81d4a1e3b31ba260b357e237911979d8f17", "filename": "src/ci/run.sh", "status": "modified", "additions": 18, "deletions": 7, "changes": 25, "blob_url": "https://github.com/rust-lang/rust/blob/b8a84c2c53328757b407829da3049c6baa049a0e/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/b8a84c2c53328757b407829da3049c6baa049a0e/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=b8a84c2c53328757b407829da3049c6baa049a0e", "patch": "@@ -56,6 +56,7 @@ fi\n if ! isCI || isCiBranch auto || isCiBranch beta || isCiBranch try || isCiBranch try-perf; then\n     RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --set build.print-step-timings --enable-verbose-tests\"\n     RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --set build.metrics\"\n+    HAS_METRICS=1\n fi\n \n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-sccache\"\n@@ -157,13 +158,6 @@ trap datecheck EXIT\n # sccache server at the start of the build, but no need to worry if this fails.\n SCCACHE_IDLE_TIMEOUT=10800 sccache --start-server || true\n \n-if [ \"$RUN_CHECK_WITH_PARALLEL_QUERIES\" != \"\" ]; then\n-  $SRC/configure --set rust.parallel-compiler\n-  CARGO_INCREMENTAL=0 $PYTHON ../x.py check\n-  rm -f config.toml\n-  rm -rf build\n-fi\n-\n $SRC/configure $RUST_CONFIGURE_ARGS\n \n retry make prepare\n@@ -193,4 +187,21 @@ else\n   do_make \"$RUST_CHECK_TARGET\"\n fi\n \n+if [ \"$RUN_CHECK_WITH_PARALLEL_QUERIES\" != \"\" ]; then\n+  rm -f config.toml\n+  $SRC/configure --set rust.parallel-compiler\n+\n+  # Save the build metrics before we wipe the directory\n+  if [ $HAS_METRICS = 1 ]; then\n+    mv build/metrics.json .\n+  fi\n+  rm -rf build\n+  if [ $HAS_METRICS = 1 ]; then\n+    mkdir build\n+    mv metrics.json build\n+  fi\n+\n+  CARGO_INCREMENTAL=0 $PYTHON ../x.py check\n+fi\n+\n sccache --show-stats || true"}]}