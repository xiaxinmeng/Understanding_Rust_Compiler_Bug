{"sha": "7284f820d57e13b10fd9f1c3fc771fac52b6b66a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjcyODRmODIwZDU3ZTEzYjEwZmQ5ZjFjM2ZjNzcxZmFjNTJiNmI2NmE=", "commit": {"author": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-26T04:49:06Z"}, "committer": {"name": "Brian Anderson", "email": "banderson@mozilla.com", "date": "2011-08-27T22:54:44Z"}, "message": "Support istrs in #fmt. Issue #855\n\nThe format string may be an istr and istr args may be used with %S", "tree": {"sha": "9f047d06d8239636e49b1fca640ac489877af0af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9f047d06d8239636e49b1fca640ac489877af0af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7284f820d57e13b10fd9f1c3fc771fac52b6b66a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7284f820d57e13b10fd9f1c3fc771fac52b6b66a", "html_url": "https://github.com/rust-lang/rust/commit/7284f820d57e13b10fd9f1c3fc771fac52b6b66a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7284f820d57e13b10fd9f1c3fc771fac52b6b66a/comments", "author": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "brson", "id": 147214, "node_id": "MDQ6VXNlcjE0NzIxNA==", "avatar_url": "https://avatars.githubusercontent.com/u/147214?v=4", "gravatar_id": "", "url": "https://api.github.com/users/brson", "html_url": "https://github.com/brson", "followers_url": "https://api.github.com/users/brson/followers", "following_url": "https://api.github.com/users/brson/following{/other_user}", "gists_url": "https://api.github.com/users/brson/gists{/gist_id}", "starred_url": "https://api.github.com/users/brson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/brson/subscriptions", "organizations_url": "https://api.github.com/users/brson/orgs", "repos_url": "https://api.github.com/users/brson/repos", "events_url": "https://api.github.com/users/brson/events{/privacy}", "received_events_url": "https://api.github.com/users/brson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b3f0b21bec623eb878735601c514a383c606bed", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b3f0b21bec623eb878735601c514a383c606bed", "html_url": "https://github.com/rust-lang/rust/commit/6b3f0b21bec623eb878735601c514a383c606bed"}], "stats": {"total": 17, "additions": 16, "deletions": 1}, "files": [{"sha": "2a441341f49986522aa7720269bdf758e934d175", "filename": "src/comp/syntax/ext/fmt.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7284f820d57e13b10fd9f1c3fc771fac52b6b66a/src%2Fcomp%2Fsyntax%2Fext%2Ffmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7284f820d57e13b10fd9f1c3fc771fac52b6b66a/src%2Fcomp%2Fsyntax%2Fext%2Ffmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fsyntax%2Fext%2Ffmt.rs?ref=7284f820d57e13b10fd9f1c3fc771fac52b6b66a", "patch": "@@ -241,6 +241,7 @@ fn pieces_to_expr(cx: &ext_ctxt, sp: span, pieces: &[piece],\n         }\n         alt cnv.ty {\n           ty_str. { ret make_conv_call(cx, arg.span, \"str\", cnv, arg); }\n+          ty_istr. { ret make_conv_call(cx, arg.span, \"istr\", cnv, arg); }\n           ty_int(sign) {\n             alt sign {\n               signed. { ret make_conv_call(cx, arg.span, \"int\", cnv, arg); }\n@@ -297,6 +298,7 @@ fn pieces_to_expr(cx: &ext_ctxt, sp: span, pieces: &[piece],\n         alt c.ty {\n           ty_bool. { log \"type: bool\"; }\n           ty_str. { log \"type: str\"; }\n+          ty_istr. { log \"type: istr\"; }\n           ty_char. { log \"type: char\"; }\n           ty_int(s) {\n             alt s {"}, {"sha": "84c642d2883792ea93d3adc0126884f43af0f596", "filename": "src/lib/extfmt.rs", "status": "modified", "additions": 8, "deletions": 1, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/7284f820d57e13b10fd9f1c3fc771fac52b6b66a/src%2Flib%2Fextfmt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7284f820d57e13b10fd9f1c3fc771fac52b6b66a/src%2Flib%2Fextfmt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flib%2Fextfmt.rs?ref=7284f820d57e13b10fd9f1c3fc771fac52b6b66a", "patch": "@@ -41,8 +41,9 @@ mod ct {\n         ty_bits;\n         ty_hex(caseness);\n         ty_octal;\n+        // FIXME: Transitional\n+        ty_istr;\n         // FIXME: More types\n-\n     }\n     tag flag {\n         flag_left_justify;\n@@ -225,6 +226,8 @@ mod ct {\n                 ty_bool\n             } else if str::eq(tstr, \"s\") {\n                 ty_str\n+            } else if str::eq(tstr, \"S\") {\n+                ty_istr\n             } else if str::eq(tstr, \"c\") {\n                 ty_char\n             } else if str::eq(tstr, \"d\") || str::eq(tstr, \"i\") {\n@@ -322,6 +325,10 @@ mod rt {\n         ret pad(cv, unpadded, pad_nozero);\n     }\n \n+    fn conv_istr(cv: &conv, s: &istr) -> str {\n+        ret conv_str(cv, istr::to_estr(s));\n+    }\n+\n     // Convert an int to string with minimum number of digits. If precision is\n     // 0 and num is 0 then the result is the empty string.\n     fn int_to_str_prec(num: int, radix: uint, prec: uint) -> str {"}, {"sha": "9f2b7ae82918c319230fbb4d803927c8730956a7", "filename": "src/test/run-pass/syntax-extension-fmt-istr.rs", "status": "added", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/7284f820d57e13b10fd9f1c3fc771fac52b6b66a/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt-istr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7284f820d57e13b10fd9f1c3fc771fac52b6b66a/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt-istr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fsyntax-extension-fmt-istr.rs?ref=7284f820d57e13b10fd9f1c3fc771fac52b6b66a", "patch": "@@ -0,0 +1,6 @@\n+// FIXME: This test is transitional until estrs are gone.\n+use std;\n+fn main() {\n+    let s = #fmt[~\"%S\", ~\"test\"];\n+    assert s == \"test\";\n+}\n\\ No newline at end of file"}]}