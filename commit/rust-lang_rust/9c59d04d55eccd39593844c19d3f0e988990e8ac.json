{"sha": "9c59d04d55eccd39593844c19d3f0e988990e8ac", "node_id": "C_kwDOAAsO6NoAKDljNTlkMDRkNTVlY2NkMzk1OTM4NDRjMTlkM2YwZTk4ODk5MGU4YWM", "commit": {"author": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-04-13T05:01:35Z"}, "committer": {"name": "Nicholas Nethercote", "email": "n.nethercote@gmail.com", "date": "2022-04-13T05:39:35Z"}, "message": "Speed up Vec::clear().\n\nCurrently it just calls `truncate(0)`. `truncate()` is (a) not marked as\n`#[inline]`, and (b) more general than needed for `clear()`.\n\nThis commit changes `clear()` to do the work itself. This modest change\nwas first proposed in rust-lang#74172, where the reviewer rejected it because\nthere was insufficient evidence that `Vec::clear()`'s performance\nmattered enough to justify the change. Recent changes within rustc have\nmade `Vec::clear()` hot within `macro_parser.rs`, so the change is now\nclearly worthwhile.\n\nAlthough it doesn't show wins on CI perf runs, this seems to be because they\nuse PGO. But not all platforms currently use PGO. Also, local builds don't use\nPGO, and `truncate` sometimes shows up in an over-represented fashion in local\nprofiles. So local profiling will be made easier by this change.\n\nNote that this will also benefit `String::clear()`, because it just\ncalls `Vec::clear()`.\n\nFinally, the commit removes the `vec-clear.rs` codegen test. It was\nadded in #52908. From before then until now, `Vec::clear()` just called\n`Vec::truncate()` with a zero length. The body of Vec::truncate() has\nchanged a lot since then. Now that `Vec::clear()` is doing actual work\nitself, and not just calling `Vec::truncate()`, it's not surprising that\nits generated code includes a load and an icmp. I think it's reasonable\nto remove this test.", "tree": {"sha": "441077d22bf220e174de9119718eaa8cae1b9143", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/441077d22bf220e174de9119718eaa8cae1b9143"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c59d04d55eccd39593844c19d3f0e988990e8ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c59d04d55eccd39593844c19d3f0e988990e8ac", "html_url": "https://github.com/rust-lang/rust/commit/9c59d04d55eccd39593844c19d3f0e988990e8ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c59d04d55eccd39593844c19d3f0e988990e8ac/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "52ca603da73ae9eaddf96f77953b33ad8c47cc8e", "url": "https://api.github.com/repos/rust-lang/rust/commits/52ca603da73ae9eaddf96f77953b33ad8c47cc8e", "html_url": "https://github.com/rust-lang/rust/commit/52ca603da73ae9eaddf96f77953b33ad8c47cc8e"}], "stats": {"total": 24, "additions": 12, "deletions": 12}, "files": [{"sha": "8c2f52172ee70d44286fdadb06d0b982694eae33", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 12, "deletions": 1, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/9c59d04d55eccd39593844c19d3f0e988990e8ac/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c59d04d55eccd39593844c19d3f0e988990e8ac/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=9c59d04d55eccd39593844c19d3f0e988990e8ac", "patch": "@@ -1881,7 +1881,18 @@ impl<T, A: Allocator> Vec<T, A> {\n     #[inline]\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n     pub fn clear(&mut self) {\n-        self.truncate(0)\n+        let elems: *mut [T] = self.as_mut_slice();\n+\n+        // SAFETY:\n+        // - `elems` comes directly from `as_mut_slice` and is therefore valid.\n+        // - Setting `self.len` before calling `drop_in_place` means that,\n+        //   if an element's `Drop` impl panics, the vector's `Drop` impl will\n+        //   do nothing (leaking the rest of the elements) instead of dropping\n+        //   some twice.\n+        unsafe {\n+            self.len = 0;\n+            ptr::drop_in_place(elems);\n+        }\n     }\n \n     /// Returns the number of elements in the vector, also referred to"}, {"sha": "15bfe421e9d35911d8e1f4ad05e3187e4fb644bd", "filename": "src/test/codegen/vec-clear.rs", "status": "removed", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/52ca603da73ae9eaddf96f77953b33ad8c47cc8e/src%2Ftest%2Fcodegen%2Fvec-clear.rs", "raw_url": "https://github.com/rust-lang/rust/raw/52ca603da73ae9eaddf96f77953b33ad8c47cc8e/src%2Ftest%2Fcodegen%2Fvec-clear.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fvec-clear.rs?ref=52ca603da73ae9eaddf96f77953b33ad8c47cc8e", "patch": "@@ -1,11 +0,0 @@\n-// compile-flags: -O\n-\n-#![crate_type = \"lib\"]\n-\n-// CHECK-LABEL: @vec_clear\n-#[no_mangle]\n-pub fn vec_clear(x: &mut Vec<u32>) {\n-    // CHECK-NOT: load\n-    // CHECK-NOT: icmp\n-    x.clear()\n-}"}]}