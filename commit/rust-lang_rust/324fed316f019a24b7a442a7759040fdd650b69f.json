{"sha": "324fed316f019a24b7a442a7759040fdd650b69f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjMyNGZlZDMxNmYwMTlhMjRiN2E0NDJhNzc1OTA0MGZkZDY1MGI2OWY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-10-19T14:36:45Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-10-19T14:38:37Z"}, "message": "print sysroot without any escaping", "tree": {"sha": "14fb0fad9e3dccc8f89f5739dd5fb12f62b4fcd4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14fb0fad9e3dccc8f89f5739dd5fb12f62b4fcd4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/324fed316f019a24b7a442a7759040fdd650b69f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/324fed316f019a24b7a442a7759040fdd650b69f", "html_url": "https://github.com/rust-lang/rust/commit/324fed316f019a24b7a442a7759040fdd650b69f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/324fed316f019a24b7a442a7759040fdd650b69f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb932f464cb98f1a93880b531d4025f5b2257a6b", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb932f464cb98f1a93880b531d4025f5b2257a6b", "html_url": "https://github.com/rust-lang/rust/commit/cb932f464cb98f1a93880b531d4025f5b2257a6b"}], "stats": {"total": 14, "additions": 5, "deletions": 9}, "files": [{"sha": "c3d7ae0280c7788de95903e546faf85a9828e65f", "filename": "miri", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/324fed316f019a24b7a442a7759040fdd650b69f/miri", "raw_url": "https://github.com/rust-lang/rust/raw/324fed316f019a24b7a442a7759040fdd650b69f/miri", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri?ref=324fed316f019a24b7a442a7759040fdd650b69f", "patch": "@@ -54,7 +54,7 @@ build_sysroot() {\n     # Build once, for the user to see.\n     cargo run $CARGO_BUILD_FLAGS --bin cargo-miri -- miri setup \"$@\"\n     # Call again, to just set env var.\n-    eval $(cargo run $CARGO_BUILD_FLAGS -q --bin cargo-miri -- miri setup --env \"$@\")\n+    export MIRI_SYSROOT=\"$(cargo run $CARGO_BUILD_FLAGS -q --bin cargo-miri -- miri setup --print-sysroot \"$@\")\"\n }\n \n # Prepare and set MIRI_SYSROOT.  Respects `MIRI_TEST_TARGET` and takes into account"}, {"sha": "cf513bc1d2695324f8d956afb8bde8fbe36931e5", "filename": "src/bin/cargo-miri.rs", "status": "modified", "additions": 4, "deletions": 8, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/324fed316f019a24b7a442a7759040fdd650b69f/src%2Fbin%2Fcargo-miri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/324fed316f019a24b7a442a7759040fdd650b69f/src%2Fbin%2Fcargo-miri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbin%2Fcargo-miri.rs?ref=324fed316f019a24b7a442a7759040fdd650b69f", "patch": "@@ -310,7 +310,7 @@ path = \"lib.rs\"\n     File::create(dir.join(\"lib.rs\")).unwrap();\n     // Prepare xargo invocation.\n     let target = get_arg_flag_value(\"--target\");\n-    let print_env = !ask_user && has_arg_flag(\"--env\"); // whether we just print the necessary environment variable\n+    let print_sysroot = !ask_user && has_arg_flag(\"--print-sysroot\"); // whether we just print the sysroot path\n     let mut command = xargo();\n     command.arg(\"build\").arg(\"-q\");\n     command.current_dir(&dir);\n@@ -339,13 +339,9 @@ path = \"lib.rs\"\n     };\n     let sysroot = if is_host { dir.join(\"HOST\") } else { PathBuf::from(dir) };\n     std::env::set_var(\"MIRI_SYSROOT\", &sysroot); // pass the env var to the processes we spawn, which will turn it into \"--sysroot\" flags\n-    if print_env {\n-        // Escape an arbitrary string for the shell: by wrapping it in `'`, the only special\n-        // character we have to worry about is `'` itself. Everything else is taken literally\n-        // in these strings. `'` is encoded as `'\"'\"'`: the outer `'` end and being a\n-        // `'`-quoted string, respectively; the `\"'\"` in the middle represents a single `'`.\n-        // (We could use `'\\''` instead of `'\"'\"'` if we wanted but let's avoid backslashes.)\n-        println!(\"MIRI_SYSROOT='{}'\", sysroot.display().to_string().replace('\\'', r#\"'\"'\"'\"#));\n+    if print_sysroot {\n+        // Print just the sysroot and nothing else; this way we do not need any escaping.\n+        println!(\"{}\", sysroot.display());\n     } else if !ask_user {\n         println!(\"A libstd for Miri is now available in `{}`.\", sysroot.display());\n     }"}]}