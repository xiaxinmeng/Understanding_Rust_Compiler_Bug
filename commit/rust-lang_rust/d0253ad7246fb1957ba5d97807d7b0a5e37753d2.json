{"sha": "d0253ad7246fb1957ba5d97807d7b0a5e37753d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQwMjUzYWQ3MjQ2ZmIxOTU3YmE1ZDk3ODA3ZDdiMGE1ZTM3NzUzZDI=", "commit": {"author": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-05-04T10:20:29Z"}, "committer": {"name": "Michael Woerister", "email": "michaelwoerister@posteo", "date": "2018-05-04T10:20:29Z"}, "message": "bootstrap: Fix LLVM bin path setup for Windows.", "tree": {"sha": "51f7c4c3d2432c7b1c669679fbf985cf348764b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/51f7c4c3d2432c7b1c669679fbf985cf348764b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d0253ad7246fb1957ba5d97807d7b0a5e37753d2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d0253ad7246fb1957ba5d97807d7b0a5e37753d2", "html_url": "https://github.com/rust-lang/rust/commit/d0253ad7246fb1957ba5d97807d7b0a5e37753d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d0253ad7246fb1957ba5d97807d7b0a5e37753d2/comments", "author": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "committer": {"login": "michaelwoerister", "id": 1825894, "node_id": "MDQ6VXNlcjE4MjU4OTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1825894?v=4", "gravatar_id": "", "url": "https://api.github.com/users/michaelwoerister", "html_url": "https://github.com/michaelwoerister", "followers_url": "https://api.github.com/users/michaelwoerister/followers", "following_url": "https://api.github.com/users/michaelwoerister/following{/other_user}", "gists_url": "https://api.github.com/users/michaelwoerister/gists{/gist_id}", "starred_url": "https://api.github.com/users/michaelwoerister/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/michaelwoerister/subscriptions", "organizations_url": "https://api.github.com/users/michaelwoerister/orgs", "repos_url": "https://api.github.com/users/michaelwoerister/repos", "events_url": "https://api.github.com/users/michaelwoerister/events{/privacy}", "received_events_url": "https://api.github.com/users/michaelwoerister/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6a7114396596cf378e76b4d42630c1551e32c55e", "url": "https://api.github.com/repos/rust-lang/rust/commits/6a7114396596cf378e76b4d42630c1551e32c55e", "html_url": "https://github.com/rust-lang/rust/commit/6a7114396596cf378e76b4d42630c1551e32c55e"}], "stats": {"total": 53, "additions": 39, "deletions": 14}, "files": [{"sha": "b1d63c985aab3d75e9c2e54d3b237c38f581bf37", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 0, "deletions": 11, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/d0253ad7246fb1957ba5d97807d7b0a5e37753d2/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0253ad7246fb1957ba5d97807d7b0a5e37753d2/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=d0253ad7246fb1957ba5d97807d7b0a5e37753d2", "patch": "@@ -1030,17 +1030,6 @@ impl Step for Compiletest {\n                 if let Some(ar) = builder.ar(target) {\n                     cmd.arg(\"--ar\").arg(ar);\n                 }\n-\n-                // Add the llvm/bin directory to PATH since it contains lots of\n-                // useful, platform-independent tools\n-                let llvm_bin_path = llvm_config.parent()\n-                    .expect(\"Expected llvm-config to be contained in directory\");\n-                assert!(llvm_bin_path.is_dir());\n-                let old_path = env::var_os(\"PATH\").unwrap_or_default();\n-                let new_path = env::join_paths(iter::once(llvm_bin_path.to_path_buf())\n-                                               .chain(env::split_paths(&old_path)))\n-                               .expect(\"\");\n-                cmd.env(\"PATH\", new_path);\n             }\n         }\n         if mode == \"run-make\" && !builder.config.llvm_enabled {"}, {"sha": "220af6bd6e4af02b7c8df1f64a7f427379b1c1ab", "filename": "src/bootstrap/tool.rs", "status": "modified", "additions": 39, "deletions": 3, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/d0253ad7246fb1957ba5d97807d7b0a5e37753d2/src%2Fbootstrap%2Ftool.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d0253ad7246fb1957ba5d97807d7b0a5e37753d2/src%2Fbootstrap%2Ftool.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftool.rs?ref=d0253ad7246fb1957ba5d97807d7b0a5e37753d2", "patch": "@@ -10,6 +10,7 @@\n \n use std::fs;\n use std::env;\n+use std::iter;\n use std::path::PathBuf;\n use std::process::{Command, exit};\n \n@@ -593,7 +594,7 @@ impl<'a> Builder<'a> {\n     /// right location to run `compiler`.\n     fn prepare_tool_cmd(&self, compiler: Compiler, cmd: &mut Command) {\n         let host = &compiler.host;\n-        let mut paths: Vec<PathBuf> = vec![\n+        let mut lib_paths: Vec<PathBuf> = vec![\n             PathBuf::from(&self.sysroot_libdir(compiler, compiler.host)),\n             self.cargo_out(compiler, Mode::Tool, *host).join(\"deps\"),\n         ];\n@@ -610,11 +611,46 @@ impl<'a> Builder<'a> {\n                 }\n                 for path in env::split_paths(v) {\n                     if !curpaths.contains(&path) {\n-                        paths.push(path);\n+                        lib_paths.push(path);\n                     }\n                 }\n             }\n         }\n-        add_lib_path(paths, cmd);\n+\n+        // Add the llvm/bin directory to PATH since it contains lots of\n+        // useful, platform-independent tools\n+        if let Some(llvm_bin_path) = self.llvm_bin_path() {\n+            if host.contains(\"windows\") {\n+                // On Windows, PATH and the dynamic library path are the same,\n+                // so we just add the LLVM bin path to lib_path\n+                lib_paths.push(llvm_bin_path);\n+            } else {\n+                let old_path = env::var_os(\"PATH\").unwrap_or_default();\n+                let new_path = env::join_paths(iter::once(llvm_bin_path)\n+                        .chain(env::split_paths(&old_path)))\n+                    .expect(\"Could not add LLVM bin path to PATH\");\n+                cmd.env(\"PATH\", new_path);\n+            }\n+        }\n+\n+        add_lib_path(lib_paths, cmd);\n+    }\n+\n+    fn llvm_bin_path(&self) -> Option<PathBuf> {\n+        if self.config.llvm_enabled && !self.config.dry_run {\n+            let llvm_config = self.ensure(native::Llvm {\n+                target: self.config.build,\n+                emscripten: false,\n+            });\n+\n+            // Add the llvm/bin directory to PATH since it contains lots of\n+            // useful, platform-independent tools\n+            let llvm_bin_path = llvm_config.parent()\n+                .expect(\"Expected llvm-config to be contained in directory\");\n+            assert!(llvm_bin_path.is_dir());\n+            Some(llvm_bin_path.to_path_buf())\n+        } else {\n+            None\n+        }\n     }\n }"}]}