{"sha": "03b510297c5c8ecd9b76ad2aa6d5a2ebcf70c13b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAzYjUxMDI5N2M1YzhlY2Q5Yjc2YWQyYWE2ZDVhMmViY2Y3MGMxM2I=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-01T06:26:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-01T06:26:55Z"}, "message": "auto merge of #11215 : alexcrichton/rust/metadata-filename, r=pcwalton\n\nRight now if you have concurrent builds of two libraries in the same directory\r\n(such as rustc's bootstrapping process), it's possible that two libraries will\r\nstomp over each others' metadata, producing corrupt rlibs.\r\n\r\nBy placing the metadata file in a tempdir we're guranteed to not conflict with\r\nay other builds happening concurrently. Normally this isn't a problem because\r\noutput filenames are scoped to the name of the crate, but metadata is special in\r\nthat it has the same name across all crates.", "tree": {"sha": "cd74d5dda0fb5f090654d507ecda08b229d5a2a2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cd74d5dda0fb5f090654d507ecda08b229d5a2a2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/03b510297c5c8ecd9b76ad2aa6d5a2ebcf70c13b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/03b510297c5c8ecd9b76ad2aa6d5a2ebcf70c13b", "html_url": "https://github.com/rust-lang/rust/commit/03b510297c5c8ecd9b76ad2aa6d5a2ebcf70c13b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/03b510297c5c8ecd9b76ad2aa6d5a2ebcf70c13b/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e61937a6bf5e3a612dd8e2aa92061345f73d4b30", "url": "https://api.github.com/repos/rust-lang/rust/commits/e61937a6bf5e3a612dd8e2aa92061345f73d4b30", "html_url": "https://github.com/rust-lang/rust/commit/e61937a6bf5e3a612dd8e2aa92061345f73d4b30"}, {"sha": "fe300870807ccd364b2f40c42c2043833c1f0783", "url": "https://api.github.com/repos/rust-lang/rust/commits/fe300870807ccd364b2f40c42c2043833c1f0783", "html_url": "https://github.com/rust-lang/rust/commit/fe300870807ccd364b2f40c42c2043833c1f0783"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "22b7eb2311666c56f2011485b12d59e3147ea683", "filename": "src/librustc/back/link.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/03b510297c5c8ecd9b76ad2aa6d5a2ebcf70c13b/src%2Flibrustc%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/03b510297c5c8ecd9b76ad2aa6d5a2ebcf70c13b/src%2Flibrustc%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fback%2Flink.rs?ref=03b510297c5c8ecd9b76ad2aa6d5a2ebcf70c13b", "patch": "@@ -879,8 +879,11 @@ fn link_rlib(sess: Session,\n     match trans {\n         Some(trans) => {\n             // Instead of putting the metadata in an object file section, rlibs\n-            // contain the metadata in a separate file.\n-            let metadata = obj_filename.with_filename(METADATA_FILENAME);\n+            // contain the metadata in a separate file. We use a temp directory\n+            // here so concurrent builds in the same directory don't try to use\n+            // the same filename for metadata (stomping over one another)\n+            let tmpdir = TempDir::new(\"rustc\").expect(\"needs a temp dir\");\n+            let metadata = tmpdir.path().join(METADATA_FILENAME);\n             fs::File::create(&metadata).write(trans.metadata);\n             a.add_file(&metadata, false);\n             fs::unlink(&metadata);"}]}