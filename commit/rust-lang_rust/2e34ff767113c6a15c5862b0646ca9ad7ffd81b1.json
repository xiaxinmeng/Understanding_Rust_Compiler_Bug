{"sha": "2e34ff767113c6a15c5862b0646ca9ad7ffd81b1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlMzRmZjc2NzExM2M2YTE1YzU4NjJiMDY0NmNhOWFkN2ZmZDgxYjE=", "commit": {"author": {"name": "Jacob Kiesel", "email": "kieseljake@gmail.com", "date": "2017-09-01T06:07:26Z"}, "committer": {"name": "Jacob Kiesel", "email": "kieseljake@gmail.com", "date": "2017-09-01T06:07:26Z"}, "message": "Fix documentation and formatting.", "tree": {"sha": "e82203462d68387dd1953ca26dfbcea81965b48e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e82203462d68387dd1953ca26dfbcea81965b48e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e34ff767113c6a15c5862b0646ca9ad7ffd81b1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e34ff767113c6a15c5862b0646ca9ad7ffd81b1", "html_url": "https://github.com/rust-lang/rust/commit/2e34ff767113c6a15c5862b0646ca9ad7ffd81b1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e34ff767113c6a15c5862b0646ca9ad7ffd81b1/comments", "author": {"login": "Xaeroxe", "id": 6182002, "node_id": "MDQ6VXNlcjYxODIwMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/6182002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xaeroxe", "html_url": "https://github.com/Xaeroxe", "followers_url": "https://api.github.com/users/Xaeroxe/followers", "following_url": "https://api.github.com/users/Xaeroxe/following{/other_user}", "gists_url": "https://api.github.com/users/Xaeroxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xaeroxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xaeroxe/subscriptions", "organizations_url": "https://api.github.com/users/Xaeroxe/orgs", "repos_url": "https://api.github.com/users/Xaeroxe/repos", "events_url": "https://api.github.com/users/Xaeroxe/events{/privacy}", "received_events_url": "https://api.github.com/users/Xaeroxe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Xaeroxe", "id": 6182002, "node_id": "MDQ6VXNlcjYxODIwMDI=", "avatar_url": "https://avatars.githubusercontent.com/u/6182002?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Xaeroxe", "html_url": "https://github.com/Xaeroxe", "followers_url": "https://api.github.com/users/Xaeroxe/followers", "following_url": "https://api.github.com/users/Xaeroxe/following{/other_user}", "gists_url": "https://api.github.com/users/Xaeroxe/gists{/gist_id}", "starred_url": "https://api.github.com/users/Xaeroxe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Xaeroxe/subscriptions", "organizations_url": "https://api.github.com/users/Xaeroxe/orgs", "repos_url": "https://api.github.com/users/Xaeroxe/repos", "events_url": "https://api.github.com/users/Xaeroxe/events{/privacy}", "received_events_url": "https://api.github.com/users/Xaeroxe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "576426a05a1a6cb33eece7082d7341b7c6bb5277", "url": "https://api.github.com/repos/rust-lang/rust/commits/576426a05a1a6cb33eece7082d7341b7c6bb5277", "html_url": "https://github.com/rust-lang/rust/commit/576426a05a1a6cb33eece7082d7341b7c6bb5277"}], "stats": {"total": 26, "additions": 15, "deletions": 11}, "files": [{"sha": "dc1f2981a50ad7406754e74f6adf0573140e0a2e", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 7, "deletions": 9, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/2e34ff767113c6a15c5862b0646ca9ad7ffd81b1/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e34ff767113c6a15c5862b0646ca9ad7ffd81b1/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=2e34ff767113c6a15c5862b0646ca9ad7ffd81b1", "patch": "@@ -483,7 +483,7 @@ pub trait Ord: Eq + PartialOrd<Self> {\n     }\n \n     /// Returns max if self is greater than max, and min if self is less than min.\n-    /// Otherwise this will return self.  Panics if min > max.\n+    /// Otherwise this will return self.\n     ///\n     /// # Examples\n     ///\n@@ -494,18 +494,16 @@ pub trait Ord: Eq + PartialOrd<Self> {\n     /// assert!(0.clamp(-2, 1) == 0);\n     /// assert!(2.clamp(-2, 1) == 1);\n     /// ```\n+    ///\n+    /// # Panics\n+    /// Panics if min > max.\n     #[unstable(feature = \"clamp\", issue = \"44095\")]\n     fn clamp(self, min: Self, max: Self) -> Self\n     where Self: Sized {\n         assert!(min <= max);\n-        if self < min {\n-            min\n-        }\n-        else if self > max {\n-            max\n-        } else {\n-            self\n-        }\n+        if self < min { min }\n+        else if self > max { max }\n+        else { self }\n     }\n }\n "}, {"sha": "aaeac06535ee6c32300dcb81d3f285c6d260fee2", "filename": "src/libstd/f32.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2e34ff767113c6a15c5862b0646ca9ad7ffd81b1/src%2Flibstd%2Ff32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e34ff767113c6a15c5862b0646ca9ad7ffd81b1/src%2Flibstd%2Ff32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff32.rs?ref=2e34ff767113c6a15c5862b0646ca9ad7ffd81b1", "patch": "@@ -1081,7 +1081,7 @@ impl f32 {\n     }\n \n     /// Returns max if self is greater than max, and min if self is less than min.\n-    /// Otherwise this returns self.  Panics if min > max, min is NaN, or max is NaN.\n+    /// Otherwise this returns self.\n     ///\n     /// # Examples\n     ///\n@@ -1093,6 +1093,9 @@ impl f32 {\n     /// assert!((2.0f32).clamp(-2.0f32, 1.0f32) == 1.0f32);\n     /// assert!((NAN).clamp(-2.0f32, 1.0f32).is_nan());\n     /// ```\n+    ///\n+    /// # Panics\n+    /// Panics if min > max, min is NaN, or max is NaN.\n     #[unstable(feature = \"clamp\", issue = \"44095\")]\n     #[inline]\n     pub fn clamp(self, min: f32, max: f32) -> f32 {"}, {"sha": "4ab319c3cf10069e889e07071ea4b2ceb27cf0e9", "filename": "src/libstd/f64.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/2e34ff767113c6a15c5862b0646ca9ad7ffd81b1/src%2Flibstd%2Ff64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e34ff767113c6a15c5862b0646ca9ad7ffd81b1/src%2Flibstd%2Ff64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Ff64.rs?ref=2e34ff767113c6a15c5862b0646ca9ad7ffd81b1", "patch": "@@ -971,7 +971,7 @@ impl f64 {\n     }\n \n     /// Returns max if self is greater than max, and min if self is less than min.\n-    /// Otherwise this returns self.  Panics if min > max, min is NaN, or max is NaN.\n+    /// Otherwise this returns self.\n     ///\n     /// # Examples\n     ///\n@@ -983,6 +983,9 @@ impl f64 {\n     /// assert!((2.0f64).clamp(-2.0f64, 1.0f64) == 1.0f64);\n     /// assert!((NAN).clamp(-2.0f64, 1.0f64).is_nan());\n     /// ```\n+    ///\n+    /// # Panics\n+    /// Panics if min > max, min is NaN, or max is NaN.\n     #[unstable(feature = \"clamp\", issue = \"44095\")]\n     #[inline]\n     pub fn clamp(self, min: f64, max: f64) -> f64 {"}]}