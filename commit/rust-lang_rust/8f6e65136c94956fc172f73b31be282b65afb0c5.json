{"sha": "8f6e65136c94956fc172f73b31be282b65afb0c5", "node_id": "C_kwDOAAsO6NoAKDhmNmU2NTEzNmM5NDk1NmZjMTcyZjczYjMxYmUyODJiNjVhZmIwYzU", "commit": {"author": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2023-06-14T19:57:55Z"}, "committer": {"name": "R\u00e9my Rakic", "email": "remy.rakic+github@gmail.com", "date": "2023-06-14T20:08:04Z"}, "message": "make reorder BB pass use cached RPO", "tree": {"sha": "f1f1378dffd9715e7763ff47e5d488f9dd18f937", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f1f1378dffd9715e7763ff47e5d488f9dd18f937"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8f6e65136c94956fc172f73b31be282b65afb0c5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8f6e65136c94956fc172f73b31be282b65afb0c5", "html_url": "https://github.com/rust-lang/rust/commit/8f6e65136c94956fc172f73b31be282b65afb0c5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8f6e65136c94956fc172f73b31be282b65afb0c5/comments", "author": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lqd", "id": 247183, "node_id": "MDQ6VXNlcjI0NzE4Mw==", "avatar_url": "https://avatars.githubusercontent.com/u/247183?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lqd", "html_url": "https://github.com/lqd", "followers_url": "https://api.github.com/users/lqd/followers", "following_url": "https://api.github.com/users/lqd/following{/other_user}", "gists_url": "https://api.github.com/users/lqd/gists{/gist_id}", "starred_url": "https://api.github.com/users/lqd/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lqd/subscriptions", "organizations_url": "https://api.github.com/users/lqd/orgs", "repos_url": "https://api.github.com/users/lqd/repos", "events_url": "https://api.github.com/users/lqd/events{/privacy}", "received_events_url": "https://api.github.com/users/lqd/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4215859617a1037955db1150719c6faed2ce32a1", "url": "https://api.github.com/repos/rust-lang/rust/commits/4215859617a1037955db1150719c6faed2ce32a1", "html_url": "https://github.com/rust-lang/rust/commit/4215859617a1037955db1150719c6faed2ce32a1"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "745fa30841c35bad4410218240b8390607b6228e", "filename": "compiler/rustc_mir_transform/src/prettify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8f6e65136c94956fc172f73b31be282b65afb0c5/compiler%2Frustc_mir_transform%2Fsrc%2Fprettify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8f6e65136c94956fc172f73b31be282b65afb0c5/compiler%2Frustc_mir_transform%2Fsrc%2Fprettify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir_transform%2Fsrc%2Fprettify.rs?ref=8f6e65136c94956fc172f73b31be282b65afb0c5", "patch": "@@ -24,7 +24,7 @@ impl<'tcx> MirPass<'tcx> for ReorderBasicBlocks {\n \n     fn run_pass(&self, tcx: TyCtxt<'tcx>, body: &mut Body<'tcx>) {\n         let rpo: IndexVec<BasicBlock, BasicBlock> =\n-            body.basic_blocks.postorder().iter().copied().rev().collect();\n+            body.basic_blocks.reverse_postorder().iter().copied().collect();\n         if rpo.iter().is_sorted() {\n             return;\n         }"}]}