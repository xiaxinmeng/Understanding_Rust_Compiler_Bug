{"sha": "0eb3c18565070e4af530e0ec0f707d99be7c5cef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBlYjNjMTg1NjUwNzBlNGFmNTMwZTBlYzBmNzA3ZDk5YmU3YzVjZWY=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-05-07T08:46:32Z"}, "committer": {"name": "Oliver Schneider", "email": "git-no-reply-9879165716479413131@oli-obk.de", "date": "2018-05-07T08:46:32Z"}, "message": "Use a deterministic method for executing the start lang item", "tree": {"sha": "4fdccf66662f7b3c24139c0ee9ed88e75c6c3cec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4fdccf66662f7b3c24139c0ee9ed88e75c6c3cec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0eb3c18565070e4af530e0ec0f707d99be7c5cef", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQJgBAABCgBKFiEEvpMjxK4/cnPNfesJHVy0/Fl8MAQFAlrwEmgsHGdpdC1uby1y\nZXBseS05ODc5MTY1NzE2NDc5NDEzMTMxQG9saS1vYmsuZGUACgkQHVy0/Fl8MATx\nABAAsrh/KFf52vPc6mqo072V8EhycU0uLajMeujDJ6VGS3aICEwNvErnvdTfB5ij\ndK6fpoxRWqvnymhRfUTk23S4Z3oSHR+YRX01yrGLgHNEBakmKvSp+QqzZ3ATRCQO\nD3I7k0uFJAeORS+PUoGAtdOUyZiN5t65LBsKGZ9uzz9qaHB5I/eNF7VbpRWnQHv1\neYNpkegJDqPCYZJq61IIz4VYm0irKf3DCwgIeFLoZFtWb30fobaGYSLfAGiF58TN\nctUn6t38q9gWgFwMSBzglBylowPobCBjNILP15dAcT562VQ/Ne3aaGTStz6sqk7P\nHmB7AeY7r+/y9a3HbtmjNv1wsG9tNiOyRsBp2i+lMLXQ42i9a7h+Q9vu3kB12H7N\niNDWSVygarPb+XdzcA9l+6Kd4j7vu7CK0abQU6kVbofYyI/R22URVLpaTNfdAJ4I\nBOMNY0f7woAsiT1zig0WLKPJCY9DWBVibdGkAxcq5hGXRiioluEyluPKT4qwWpcq\nZXM28mC3ARuzIeNWPsT4UFlrEsSVkefzR/2Loet/O/D/vDqMvU/mvijSx6yN6eSG\nma4bP8nbGBABhfDnGtsEZ4c0ulT1dyK3n5uum4PodFSjhc2kmAXoDTmRfc64uU4P\nDy6O/zmYFRtH/8nMCwuUhVkKZJ2ltmMqmSPCxDD4EfXX0Z8=\n=WqCW\n-----END PGP SIGNATURE-----", "payload": "tree 4fdccf66662f7b3c24139c0ee9ed88e75c6c3cec\nparent 860e2b802f6ef77b64c1cc25219e6548a0a851cb\nauthor Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1525682792 +0200\ncommitter Oliver Schneider <git-no-reply-9879165716479413131@oli-obk.de> 1525682792 +0200\n\nUse a deterministic method for executing the start lang item\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0eb3c18565070e4af530e0ec0f707d99be7c5cef", "html_url": "https://github.com/rust-lang/rust/commit/0eb3c18565070e4af530e0ec0f707d99be7c5cef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0eb3c18565070e4af530e0ec0f707d99be7c5cef/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "860e2b802f6ef77b64c1cc25219e6548a0a851cb", "url": "https://api.github.com/repos/rust-lang/rust/commits/860e2b802f6ef77b64c1cc25219e6548a0a851cb", "html_url": "https://github.com/rust-lang/rust/commit/860e2b802f6ef77b64c1cc25219e6548a0a851cb"}], "stats": {"total": 23, "additions": 20, "deletions": 3}, "files": [{"sha": "4e0be7bd32048b5739c5a959a65f54acc668093e", "filename": "miri/bin/miri.rs", "status": "modified", "additions": 19, "deletions": 3, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/0eb3c18565070e4af530e0ec0f707d99be7c5cef/miri%2Fbin%2Fmiri.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb3c18565070e4af530e0ec0f707d99be7c5cef/miri%2Fbin%2Fmiri.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/miri%2Fbin%2Fmiri.rs?ref=0eb3c18565070e4af530e0ec0f707d99be7c5cef", "patch": "@@ -24,6 +24,10 @@ use std::path::PathBuf;\n \n struct MiriCompilerCalls {\n     default: RustcDefaultCalls,\n+    /// Whether to begin interpretation at the start_fn lang item or not\n+    /// \n+    /// If false, the interpretation begins at the `main` function\n+    start_fn: bool,\n }\n \n impl<'a> CompilerCalls<'a> for MiriCompilerCalls {\n@@ -80,7 +84,8 @@ impl<'a> CompilerCalls<'a> for MiriCompilerCalls {\n     ) -> CompileController<'a> {\n         let mut control = self.default.build_controller(sess, matches);\n         control.after_hir_lowering.callback = Box::new(after_hir_lowering);\n-        control.after_analysis.callback = Box::new(after_analysis);\n+        let start_fn = self.start_fn;\n+        control.after_analysis.callback = Box::new(move |state| after_analysis(state, start_fn));\n         if sess.target.target != sess.host {\n             // only fully compile targets on the host. linking will fail for cross-compilation.\n             control.after_analysis.stop = Compilation::Stop;\n@@ -97,7 +102,7 @@ fn after_hir_lowering(state: &mut CompileState) {\n     state.session.plugin_attributes.borrow_mut().push(attr);\n }\n \n-fn after_analysis<'a, 'tcx>(state: &mut CompileState<'a, 'tcx>) {\n+fn after_analysis<'a, 'tcx>(state: &mut CompileState<'a, 'tcx>, use_start_fn: bool) {\n     state.session.abort_if_errors();\n \n     let tcx = state.tcx.unwrap();\n@@ -133,7 +138,7 @@ fn after_analysis<'a, 'tcx>(state: &mut CompileState<'a, 'tcx>) {\n     } else if let Some((entry_node_id, _, _)) = *state.session.entry_fn.borrow() {\n         let entry_def_id = tcx.hir.local_def_id(entry_node_id);\n         let start_wrapper = tcx.lang_items().start_fn().and_then(|start_fn| {\n-            if tcx.is_mir_available(start_fn) {\n+            if use_start_fn {\n                 Some(start_fn)\n             } else {\n                 None\n@@ -216,10 +221,21 @@ fn main() {\n         args.push(find_sysroot());\n     }\n \n+    let mut start_fn = false;\n+    args.retain(|arg| {\n+        if arg == \"-Zmiri-start-fn\" {\n+            start_fn = true;\n+            false\n+        } else {\n+            true\n+        }\n+    });\n+\n     // Make sure we always have all the MIR (e.g. for auxilary builds in unit tests).\n     args.push(\"-Zalways-encode-mir\".to_owned());\n \n     rustc_driver::run_compiler(&args, &mut MiriCompilerCalls {\n         default: RustcDefaultCalls,\n+        start_fn,\n     }, None, None);\n }"}, {"sha": "3fb7f2784a6ac78eb16544365e17932f0222f4fe", "filename": "tests/compiletest.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/0eb3c18565070e4af530e0ec0f707d99be7c5cef/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0eb3c18565070e4af530e0ec0f707d99be7c5cef/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=0eb3c18565070e4af530e0ec0f707d99be7c5cef", "patch": "@@ -114,6 +114,7 @@ fn miri_pass(path: &str, target: &str, host: &str, fullmir: bool, opt: bool) {\n             .join(\".xargo\")\n             .join(\"HOST\");\n \n+        flags.push(\"-Zmiri-start-fn\".to_owned());\n         flags.push(format!(\"--sysroot {}\", sysroot.to_str().unwrap()));\n     }\n     if opt {"}]}