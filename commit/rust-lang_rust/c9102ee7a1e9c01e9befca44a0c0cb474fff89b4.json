{"sha": "c9102ee7a1e9c01e9befca44a0c0cb474fff89b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmM5MTAyZWU3YTFlOWMwMWU5YmVmY2E0NGEwYzBjYjQ3NGZmZjg5YjQ=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-03-27T22:42:37Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2012-03-27T22:44:36Z"}, "message": "make type_kind exhaustive, add an entry for type_self (in particular)", "tree": {"sha": "1245392d9a70e9de76d96f62131388ff4e6c40c8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1245392d9a70e9de76d96f62131388ff4e6c40c8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c9102ee7a1e9c01e9befca44a0c0cb474fff89b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c9102ee7a1e9c01e9befca44a0c0cb474fff89b4", "html_url": "https://github.com/rust-lang/rust/commit/c9102ee7a1e9c01e9befca44a0c0cb474fff89b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c9102ee7a1e9c01e9befca44a0c0cb474fff89b4/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42f2810eca4ad1dd3d9b62e75027824f4a7caa2e", "url": "https://api.github.com/repos/rust-lang/rust/commits/42f2810eca4ad1dd3d9b62e75027824f4a7caa2e", "html_url": "https://github.com/rust-lang/rust/commit/42f2810eca4ad1dd3d9b62e75027824f4a7caa2e"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "6ef1e2722a4c331788cbccf804f228391071a3b8", "filename": "src/rustc/middle/ty.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c9102ee7a1e9c01e9befca44a0c0cb474fff89b4/src%2Frustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c9102ee7a1e9c01e9befca44a0c0cb474fff89b4/src%2Frustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Fty.rs?ref=c9102ee7a1e9c01e9befca44a0c0cb474fff89b4", "patch": "@@ -985,7 +985,9 @@ fn type_kind(cx: ctxt, ty: t) -> kind {\n           param_bounds_to_kind(cx.ty_param_bounds.get(did.node))\n       }\n       ty_constr(t, _) { type_kind(cx, t) }\n-      _ { cx.sess.bug(\"bad type in type_kind\"); }\n+      ty_class(_, _) { fail \"FIXME\"; }\n+      ty_var(_) { fail \"FIXME\"; }\n+      ty_self(_) { kind_noncopyable }\n     };\n \n     cx.kind_cache.insert(ty, result);"}]}