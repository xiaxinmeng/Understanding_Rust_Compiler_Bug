{"sha": "80cabf726068187d8686b5ccf37aac484da84904", "node_id": "C_kwDOAAsO6NoAKDgwY2FiZjcyNjA2ODE4N2Q4Njg2YjVjY2YzN2FhYzQ4NGRhODQ5MDQ", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-04T18:38:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-04T18:38:34Z"}, "message": "Auto merge of #13893 - ntBre:master, r=lnicola\n\nComplete record enum variants without parens when snippets are disabled\n\nI didn't realize I only handled this for tuple variants in #13805. This is the same change but for record variants.", "tree": {"sha": "aa4591ba5b808c76a7003d459854b4c9430bd8c6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/aa4591ba5b808c76a7003d459854b4c9430bd8c6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/80cabf726068187d8686b5ccf37aac484da84904", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/80cabf726068187d8686b5ccf37aac484da84904", "html_url": "https://github.com/rust-lang/rust/commit/80cabf726068187d8686b5ccf37aac484da84904", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/80cabf726068187d8686b5ccf37aac484da84904/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a97c71f92d574cb5104e3e1246eb9038d1a214a2", "url": "https://api.github.com/repos/rust-lang/rust/commits/a97c71f92d574cb5104e3e1246eb9038d1a214a2", "html_url": "https://github.com/rust-lang/rust/commit/a97c71f92d574cb5104e3e1246eb9038d1a214a2"}, {"sha": "150da92b5c6e4a8dc3c27f24864de471c2b2c380", "url": "https://api.github.com/repos/rust-lang/rust/commits/150da92b5c6e4a8dc3c27f24864de471c2b2c380", "html_url": "https://github.com/rust-lang/rust/commit/150da92b5c6e4a8dc3c27f24864de471c2b2c380"}], "stats": {"total": 34, "additions": 33, "deletions": 1}, "files": [{"sha": "0521e735dedf13beac0a7a2dd2b7c6e81cbbd37a", "filename": "crates/ide-completion/src/completions/record.rs", "status": "modified", "additions": 30, "deletions": 1, "changes": 31, "blob_url": "https://github.com/rust-lang/rust/blob/80cabf726068187d8686b5ccf37aac484da84904/crates%2Fide-completion%2Fsrc%2Fcompletions%2Frecord.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80cabf726068187d8686b5ccf37aac484da84904/crates%2Fide-completion%2Fsrc%2Fcompletions%2Frecord.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Fcompletions%2Frecord.rs?ref=80cabf726068187d8686b5ccf37aac484da84904", "patch": "@@ -159,8 +159,9 @@ fn baz() {\n     #[test]\n     fn enum_variant_no_snippets() {\n         let conf = CompletionConfig { snippet_cap: SnippetCap::new(false), ..TEST_CONFIG };\n+        // tuple variant\n         check_edit_with_config(\n-            conf,\n+            conf.clone(),\n             \"Variant()\",\n             r#\"\n enum Enum {\n@@ -178,6 +179,34 @@ enum Enum {\n     Variant(usize),\n }\n \n+impl Enum {\n+    fn new(u: usize) -> Self {\n+        Self::Variant\n+    }\n+}\n+\"#,\n+        );\n+\n+        // record variant\n+        check_edit_with_config(\n+            conf,\n+            \"Variant{}\",\n+            r#\"\n+enum Enum {\n+    Variant{u: usize},\n+}\n+\n+impl Enum {\n+    fn new(u: usize) -> Self {\n+        Self::Va$0\n+    }\n+}\n+\"#,\n+            r#\"\n+enum Enum {\n+    Variant{u: usize},\n+}\n+\n impl Enum {\n     fn new(u: usize) -> Self {\n         Self::Variant"}, {"sha": "55c55725be4f966afddd34ee9cffd2270894c362", "filename": "crates/ide-completion/src/render/variant.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/80cabf726068187d8686b5ccf37aac484da84904/crates%2Fide-completion%2Fsrc%2Frender%2Fvariant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/80cabf726068187d8686b5ccf37aac484da84904/crates%2Fide-completion%2Fsrc%2Frender%2Fvariant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide-completion%2Fsrc%2Frender%2Fvariant.rs?ref=80cabf726068187d8686b5ccf37aac484da84904", "patch": "@@ -22,6 +22,9 @@ pub(crate) fn render_record_lit(\n     fields: &[hir::Field],\n     path: &str,\n ) -> RenderedLiteral {\n+    if snippet_cap.is_none() {\n+        return RenderedLiteral { literal: path.to_string(), detail: path.to_string() };\n+    }\n     let completions = fields.iter().enumerate().format_with(\", \", |(idx, field), f| {\n         if snippet_cap.is_some() {\n             f(&format_args!(\"{}: ${{{}:()}}\", field.name(db), idx + 1))"}]}