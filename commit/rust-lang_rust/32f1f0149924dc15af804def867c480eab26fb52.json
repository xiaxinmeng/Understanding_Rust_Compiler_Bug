{"sha": "32f1f0149924dc15af804def867c480eab26fb52", "node_id": "C_kwDOAAsO6NoAKDMyZjFmMDE0OTkyNGRjMTVhZjgwNGRlZjg2N2M0ODBlYWIyNmZiNTI", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-04T17:53:31Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-03-04T17:53:51Z"}, "message": "Don't ICE when encountering bound var in builtin copy/clone bounds", "tree": {"sha": "f428b23720ab9d932152fdbe40012138ffca40d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f428b23720ab9d932152fdbe40012138ffca40d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/32f1f0149924dc15af804def867c480eab26fb52", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/32f1f0149924dc15af804def867c480eab26fb52", "html_url": "https://github.com/rust-lang/rust/commit/32f1f0149924dc15af804def867c480eab26fb52", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/32f1f0149924dc15af804def867c480eab26fb52/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b583ede652936887a85c54bb793251479c82d3ee", "url": "https://api.github.com/repos/rust-lang/rust/commits/b583ede652936887a85c54bb793251479c82d3ee", "html_url": "https://github.com/rust-lang/rust/commit/b583ede652936887a85c54bb793251479c82d3ee"}], "stats": {"total": 44, "additions": 39, "deletions": 5}, "files": [{"sha": "63ab8cf8db7357d8e151f3b269091786b0b7e295", "filename": "compiler/rustc_trait_selection/src/traits/select/mod.rs", "status": "modified", "additions": 6, "deletions": 5, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/32f1f0149924dc15af804def867c480eab26fb52/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32f1f0149924dc15af804def867c480eab26fb52/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fselect%2Fmod.rs?ref=32f1f0149924dc15af804def867c480eab26fb52", "patch": "@@ -2149,7 +2149,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n             ty::Alias(..) | ty::Param(_) | ty::Placeholder(..) => None,\n             ty::Infer(ty::TyVar(_)) => Ambiguous,\n \n-            // We can make this an ICE if/once we actually instantiate the trait obligation.\n+            // We can make this an ICE if/once we actually instantiate the trait obligation eagerly.\n             ty::Bound(..) => None,\n \n             ty::Infer(ty::FreshTy(_) | ty::FreshIntTy(_) | ty::FreshFloatTy(_)) => {\n@@ -2257,7 +2257,7 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 }\n             }\n \n-            ty::Adt(..) | ty::Alias(..) | ty::Param(..) => {\n+            ty::Adt(..) | ty::Alias(..) | ty::Param(..) | ty::Placeholder(..) => {\n                 // Fallback to whatever user-defined impls exist in this case.\n                 None\n             }\n@@ -2269,9 +2269,10 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                 Ambiguous\n             }\n \n-            ty::Placeholder(..)\n-            | ty::Bound(..)\n-            | ty::Infer(ty::FreshTy(_) | ty::FreshIntTy(_) | ty::FreshFloatTy(_)) => {\n+            // We can make this an ICE if/once we actually instantiate the trait obligation eagerly.\n+            ty::Bound(..) => None,\n+\n+            ty::Infer(ty::FreshTy(_) | ty::FreshIntTy(_) | ty::FreshFloatTy(_)) => {\n                 bug!(\"asked to assemble builtin bounds of unexpected type: {:?}\", self_ty);\n             }\n         }"}, {"sha": "506cad25f630ceb6408a7c3a5f6c42052d4d2074", "filename": "tests/ui/traits/non_lifetime_binders/bad-copy-cond.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/32f1f0149924dc15af804def867c480eab26fb52/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-copy-cond.rs", "raw_url": "https://github.com/rust-lang/rust/raw/32f1f0149924dc15af804def867c480eab26fb52/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-copy-cond.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-copy-cond.rs?ref=32f1f0149924dc15af804def867c480eab26fb52", "patch": "@@ -0,0 +1,9 @@\n+#![feature(non_lifetime_binders)]\n+//~^ WARN the feature `non_lifetime_binders` is incomplete\n+\n+fn foo() where for<T> T: Copy {}\n+\n+fn main() {\n+    foo();\n+    //~^ ERROR the trait bound `T: Copy` is not satisfied\n+}"}, {"sha": "07e02d47f27f6b1dcbd30c6379c45d8fa4777369", "filename": "tests/ui/traits/non_lifetime_binders/bad-copy-cond.stderr", "status": "added", "additions": 24, "deletions": 0, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/32f1f0149924dc15af804def867c480eab26fb52/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-copy-cond.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/32f1f0149924dc15af804def867c480eab26fb52/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-copy-cond.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ftraits%2Fnon_lifetime_binders%2Fbad-copy-cond.stderr?ref=32f1f0149924dc15af804def867c480eab26fb52", "patch": "@@ -0,0 +1,24 @@\n+warning: the feature `non_lifetime_binders` is incomplete and may not be safe to use and/or cause compiler crashes\n+  --> $DIR/bad-copy-cond.rs:1:12\n+   |\n+LL | #![feature(non_lifetime_binders)]\n+   |            ^^^^^^^^^^^^^^^^^^^^\n+   |\n+   = note: see issue #108185 <https://github.com/rust-lang/rust/issues/108185> for more information\n+   = note: `#[warn(incomplete_features)]` on by default\n+\n+error[E0277]: the trait bound `T: Copy` is not satisfied\n+  --> $DIR/bad-copy-cond.rs:7:5\n+   |\n+LL |     foo();\n+   |     ^^^ the trait `Copy` is not implemented for `T`\n+   |\n+note: required by a bound in `foo`\n+  --> $DIR/bad-copy-cond.rs:4:26\n+   |\n+LL | fn foo() where for<T> T: Copy {}\n+   |                          ^^^^ required by this bound in `foo`\n+\n+error: aborting due to previous error; 1 warning emitted\n+\n+For more information about this error, try `rustc --explain E0277`."}]}