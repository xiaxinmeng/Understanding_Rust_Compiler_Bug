{"sha": "3922dd72fe98ecc8866d448fe1e637971a46341a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM5MjJkZDcyZmU5OGVjYzg4NjZkNDQ4ZmUxZTYzNzk3MWE0NjM0MWE=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-02-07T12:36:03Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2018-02-20T00:50:26Z"}, "message": "rustc_mir: use the \"idiomatic\" optimization gating in the deaggregator.", "tree": {"sha": "0c931a1a7d4fad0faad1a778910b8a5edca5afe0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0c931a1a7d4fad0faad1a778910b8a5edca5afe0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3922dd72fe98ecc8866d448fe1e637971a46341a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3922dd72fe98ecc8866d448fe1e637971a46341a", "html_url": "https://github.com/rust-lang/rust/commit/3922dd72fe98ecc8866d448fe1e637971a46341a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3922dd72fe98ecc8866d448fe1e637971a46341a/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "27a046e9338fb0455c33b13e8fe28da78212dedc", "url": "https://api.github.com/repos/rust-lang/rust/commits/27a046e9338fb0455c33b13e8fe28da78212dedc", "html_url": "https://github.com/rust-lang/rust/commit/27a046e9338fb0455c33b13e8fe28da78212dedc"}], "stats": {"total": 27, "additions": 16, "deletions": 11}, "files": [{"sha": "ea27d789248b013ca2a9f187b8bbce3704a59836", "filename": "src/librustc_mir/transform/deaggregator.rs", "status": "modified", "additions": 16, "deletions": 11, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/3922dd72fe98ecc8866d448fe1e637971a46341a/src%2Flibrustc_mir%2Ftransform%2Fdeaggregator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3922dd72fe98ecc8866d448fe1e637971a46341a/src%2Flibrustc_mir%2Ftransform%2Fdeaggregator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Ftransform%2Fdeaggregator.rs?ref=3922dd72fe98ecc8866d448fe1e637971a46341a", "patch": "@@ -21,23 +21,28 @@ impl MirPass for Deaggregator {\n                           tcx: TyCtxt<'a, 'tcx, 'tcx>,\n                           source: MirSource,\n                           mir: &mut Mir<'tcx>) {\n-        let node_path = tcx.item_path_str(source.def_id);\n-        debug!(\"running on: {:?}\", node_path);\n-        // we only run when mir_opt_level > 2\n-        if tcx.sess.opts.debugging_opts.mir_opt_level <= 2 {\n-            return;\n-        }\n-\n         // Don't run on constant MIR, because trans might not be able to\n         // evaluate the modified MIR.\n         // FIXME(eddyb) Remove check after miri is merged.\n         let id = tcx.hir.as_local_node_id(source.def_id).unwrap();\n         match (tcx.hir.body_owner_kind(id), source.promoted) {\n-            (hir::BodyOwnerKind::Fn, None) => {},\n-            _ => return\n+            (_, Some(_)) |\n+            (hir::BodyOwnerKind::Const, _) |\n+            (hir::BodyOwnerKind::Static(_), _) => return,\n+\n+            (hir::BodyOwnerKind::Fn, _) => {\n+                if tcx.is_const_fn(source.def_id) {\n+                    // Don't run on const functions, as, again, trans might not be able to evaluate\n+                    // the optimized IR.\n+                    return\n+                }\n+            }\n+        }\n+\n+        // We only run when the MIR optimization level is > 2.\n+        if tcx.sess.opts.debugging_opts.mir_opt_level <= 2 {\n+            return;\n         }\n-        // In fact, we might not want to trigger in other cases.\n-        // Ex: when we could use SROA.  See issue #35259\n \n         for bb in mir.basic_blocks_mut() {\n             let mut curr: usize = 0;"}]}