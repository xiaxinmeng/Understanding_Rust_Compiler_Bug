{"sha": "50e38e928ec4f01018baa83bb101d1c5e3531a83", "node_id": "C_kwDOAAsO6NoAKDUwZTM4ZTkyOGVjNGYwMTAxOGJhYTgzYmIxMDFkMWM1ZTM1MzFhODM", "commit": {"author": {"name": "liushuyu", "email": "liushuyu011@gmail.com", "date": "2023-05-18T23:43:41Z"}, "committer": {"name": "liushuyu", "email": "liushuyu011@gmail.com", "date": "2023-05-20T23:43:18Z"}, "message": "Read beta version from the version file ...\n\n... if building from a source tarball", "tree": {"sha": "9fc9e3d42d0d6ea7e813df232e1e5f3ebc8a9c73", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9fc9e3d42d0d6ea7e813df232e1e5f3ebc8a9c73"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/50e38e928ec4f01018baa83bb101d1c5e3531a83", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/50e38e928ec4f01018baa83bb101d1c5e3531a83", "html_url": "https://github.com/rust-lang/rust/commit/50e38e928ec4f01018baa83bb101d1c5e3531a83", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/50e38e928ec4f01018baa83bb101d1c5e3531a83/comments", "author": {"login": "liushuyu", "id": 6829345, "node_id": "MDQ6VXNlcjY4MjkzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6829345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liushuyu", "html_url": "https://github.com/liushuyu", "followers_url": "https://api.github.com/users/liushuyu/followers", "following_url": "https://api.github.com/users/liushuyu/following{/other_user}", "gists_url": "https://api.github.com/users/liushuyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/liushuyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liushuyu/subscriptions", "organizations_url": "https://api.github.com/users/liushuyu/orgs", "repos_url": "https://api.github.com/users/liushuyu/repos", "events_url": "https://api.github.com/users/liushuyu/events{/privacy}", "received_events_url": "https://api.github.com/users/liushuyu/received_events", "type": "User", "site_admin": false}, "committer": {"login": "liushuyu", "id": 6829345, "node_id": "MDQ6VXNlcjY4MjkzNDU=", "avatar_url": "https://avatars.githubusercontent.com/u/6829345?v=4", "gravatar_id": "", "url": "https://api.github.com/users/liushuyu", "html_url": "https://github.com/liushuyu", "followers_url": "https://api.github.com/users/liushuyu/followers", "following_url": "https://api.github.com/users/liushuyu/following{/other_user}", "gists_url": "https://api.github.com/users/liushuyu/gists{/gist_id}", "starred_url": "https://api.github.com/users/liushuyu/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/liushuyu/subscriptions", "organizations_url": "https://api.github.com/users/liushuyu/orgs", "repos_url": "https://api.github.com/users/liushuyu/repos", "events_url": "https://api.github.com/users/liushuyu/events{/privacy}", "received_events_url": "https://api.github.com/users/liushuyu/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "77f4f828a2f19854fcbcdf69babe7d0ac1c92852", "url": "https://api.github.com/repos/rust-lang/rust/commits/77f4f828a2f19854fcbcdf69babe7d0ac1c92852", "html_url": "https://github.com/rust-lang/rust/commit/77f4f828a2f19854fcbcdf69babe7d0ac1c92852"}], "stats": {"total": 33, "additions": 27, "deletions": 6}, "files": [{"sha": "6ee50ee657399283b4e66b0c92d8dcb2d5232d78", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 27, "deletions": 6, "changes": 33, "blob_url": "https://github.com/rust-lang/rust/blob/50e38e928ec4f01018baa83bb101d1c5e3531a83/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/50e38e928ec4f01018baa83bb101d1c5e3531a83/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=50e38e928ec4f01018baa83bb101d1c5e3531a83", "patch": "@@ -1324,7 +1324,7 @@ impl Build {\n         match &self.config.channel[..] {\n             \"stable\" => num.to_string(),\n             \"beta\" => {\n-                if self.rust_info().is_managed_git_subrepository() && !self.config.omit_git_hash {\n+                if !self.config.omit_git_hash {\n                     format!(\"{}-beta.{}\", num, self.beta_prerelease_version())\n                 } else {\n                     format!(\"{}-beta\", num)\n@@ -1336,18 +1336,28 @@ impl Build {\n     }\n \n     fn beta_prerelease_version(&self) -> u32 {\n+        fn extract_beta_rev_from_file<P: AsRef<Path>>(version_file: P) -> Option<String> {\n+            let version = fs::read_to_string(version_file).ok()?;\n+\n+            extract_beta_rev(&version)\n+        }\n+\n         if let Some(s) = self.prerelease_version.get() {\n             return s;\n         }\n \n-        // Figure out how many merge commits happened since we branched off master.\n-        // That's our beta number!\n-        // (Note that we use a `..` range, not the `...` symmetric difference.)\n-        let count =\n+        // First check if there is a version file available.\n+        // If available, we read the beta revision from that file.\n+        // This only happens when building from a source tarball when Git should not be used.\n+        let count = extract_beta_rev_from_file(self.src.join(\"version\")).unwrap_or_else(|| {\n+            // Figure out how many merge commits happened since we branched off master.\n+            // That's our beta number!\n+            // (Note that we use a `..` range, not the `...` symmetric difference.)\n             output(self.config.git().arg(\"rev-list\").arg(\"--count\").arg(\"--merges\").arg(format!(\n                 \"refs/remotes/origin/{}..HEAD\",\n                 self.config.stage0_metadata.config.nightly_branch\n-            )));\n+            )))\n+        });\n         let n = count.trim().parse().unwrap();\n         self.prerelease_version.set(Some(n));\n         n\n@@ -1707,6 +1717,17 @@ to download LLVM rather than building it.\n     }\n }\n \n+/// Extract the beta revision from the full version string.\n+///\n+/// The full version string looks like \"a.b.c-beta.y\". And we need to extract\n+/// the \"y\" part from the string.\n+pub fn extract_beta_rev(version: &str) -> Option<String> {\n+    let parts = version.splitn(2, \"-beta.\").collect::<Vec<_>>();\n+    let count = parts.get(1).and_then(|s| s.find(' ').map(|p| (&s[..p]).to_string()));\n+\n+    count\n+}\n+\n #[cfg(unix)]\n fn chmod(path: &Path, perms: u32) {\n     use std::os::unix::fs::*;"}]}