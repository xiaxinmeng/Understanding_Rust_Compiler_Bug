{"sha": "2e52b27e7139095393c7e4eebd7da0c6c26b053e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJlNTJiMjdlNzEzOTA5NTM5M2M3ZTRlZWJkN2RhMGM2YzI2YjA1M2U=", "commit": {"author": {"name": "Simon Vandel Sillesen", "email": "simon.vandel@gmail.com", "date": "2019-01-06T08:41:11Z"}, "committer": {"name": "Simon Vandel Sillesen", "email": "simon.vandel@gmail.com", "date": "2019-01-06T08:41:11Z"}, "message": "refactor", "tree": {"sha": "12fdc917449058fde414dcab0f1d5ae1c5737289", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/12fdc917449058fde414dcab0f1d5ae1c5737289"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2e52b27e7139095393c7e4eebd7da0c6c26b053e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2e52b27e7139095393c7e4eebd7da0c6c26b053e", "html_url": "https://github.com/rust-lang/rust/commit/2e52b27e7139095393c7e4eebd7da0c6c26b053e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2e52b27e7139095393c7e4eebd7da0c6c26b053e/comments", "author": {"login": "simonvandel", "id": 2770647, "node_id": "MDQ6VXNlcjI3NzA2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2770647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonvandel", "html_url": "https://github.com/simonvandel", "followers_url": "https://api.github.com/users/simonvandel/followers", "following_url": "https://api.github.com/users/simonvandel/following{/other_user}", "gists_url": "https://api.github.com/users/simonvandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonvandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonvandel/subscriptions", "organizations_url": "https://api.github.com/users/simonvandel/orgs", "repos_url": "https://api.github.com/users/simonvandel/repos", "events_url": "https://api.github.com/users/simonvandel/events{/privacy}", "received_events_url": "https://api.github.com/users/simonvandel/received_events", "type": "User", "site_admin": false}, "committer": {"login": "simonvandel", "id": 2770647, "node_id": "MDQ6VXNlcjI3NzA2NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/2770647?v=4", "gravatar_id": "", "url": "https://api.github.com/users/simonvandel", "html_url": "https://github.com/simonvandel", "followers_url": "https://api.github.com/users/simonvandel/followers", "following_url": "https://api.github.com/users/simonvandel/following{/other_user}", "gists_url": "https://api.github.com/users/simonvandel/gists{/gist_id}", "starred_url": "https://api.github.com/users/simonvandel/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/simonvandel/subscriptions", "organizations_url": "https://api.github.com/users/simonvandel/orgs", "repos_url": "https://api.github.com/users/simonvandel/repos", "events_url": "https://api.github.com/users/simonvandel/events{/privacy}", "received_events_url": "https://api.github.com/users/simonvandel/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bb8624dff65dca10997e3eec62df975e6e347558", "url": "https://api.github.com/repos/rust-lang/rust/commits/bb8624dff65dca10997e3eec62df975e6e347558", "html_url": "https://github.com/rust-lang/rust/commit/bb8624dff65dca10997e3eec62df975e6e347558"}], "stats": {"total": 61, "additions": 26, "deletions": 35}, "files": [{"sha": "2dc1be26aac1f4dafbc4a104172bb44f7bfc3886", "filename": "crates/ra_lsp_server/src/main_loop.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/2e52b27e7139095393c7e4eebd7da0c6c26b053e/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e52b27e7139095393c7e4eebd7da0c6c26b053e/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop.rs?ref=2e52b27e7139095393c7e4eebd7da0c6c26b053e", "patch": "@@ -1,25 +1,21 @@\n mod handlers;\n mod subscriptions;\n \n-use std::{\n-    fmt,\n-    path::PathBuf,\n-    sync::Arc,\n-};\n+use std::{fmt, path::PathBuf, sync::Arc};\n \n-use crossbeam_channel::{unbounded, select, Receiver, Sender, RecvError};\n+use crossbeam_channel::{select, unbounded, Receiver, RecvError, Sender};\n+use failure::{bail, format_err};\n+use failure_derive::Fail;\n use gen_lsp_server::{\n     handle_shutdown, ErrorCode, RawMessage, RawNotification, RawRequest, RawResponse,\n };\n use languageserver_types::NumberOrString;\n use ra_analysis::{Canceled, FileId, LibraryData};\n use ra_vfs::VfsTask;\n use rayon;\n-use threadpool::ThreadPool;\n use rustc_hash::FxHashSet;\n use serde::{de::DeserializeOwned, Serialize};\n-use failure::{format_err, bail};\n-use failure_derive::Fail;\n+use threadpool::ThreadPool;\n \n use crate::{\n     main_loop::subscriptions::Subscriptions,"}, {"sha": "51f134e8a4088bad9baf437a6a77061a4570a22c", "filename": "crates/ra_lsp_server/src/main_loop/handlers.rs", "status": "modified", "additions": 21, "deletions": 26, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/2e52b27e7139095393c7e4eebd7da0c6c26b053e/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2e52b27e7139095393c7e4eebd7da0c6c26b053e/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_lsp_server%2Fsrc%2Fmain_loop%2Fhandlers.rs?ref=2e52b27e7139095393c7e4eebd7da0c6c26b053e", "patch": "@@ -93,36 +93,31 @@ pub fn handle_on_type_formatting(\n     world: ServerWorld,\n     params: req::DocumentOnTypeFormattingParams,\n ) -> Result<Option<Vec<TextEdit>>> {\n-    if params.ch != \"=\" || params.ch != \".\" {\n-        return Ok(None);\n-    }\n-\n-    let file_id = params.text_document.try_conv_with(&world)?;\n-    let line_index = world.analysis().file_line_index(file_id);\n-    let position = FilePosition {\n-        file_id,\n-        offset: params.position.conv_with(&line_index),\n+    let analysis: Option<Box<Fn(FilePosition) -> Option<SourceChange>>> = match params.ch.as_str() {\n+        \"=\" => Some(Box::new(|pos| world.analysis().on_eq_typed(pos))),\n+        \".\" => Some(Box::new(|pos| world.analysis().on_dot_typed(pos))),\n+        _ => None,\n     };\n \n-    let analysis: Vec<Box<Fn(FilePosition) -> Option<SourceChange>>> = vec![\n-        Box::new(|pos| world.analysis().on_eq_typed(pos)),\n-        Box::new(|pos| world.analysis().on_dot_typed(pos)),\n-    ];\n+    if let Some(ana) = analysis {\n+        let file_id = params.text_document.try_conv_with(&world)?;\n+        let line_index = world.analysis().file_line_index(file_id);\n+        let position = FilePosition {\n+            file_id,\n+            offset: params.position.conv_with(&line_index),\n+        };\n \n-    // try all analysis until one succeeds\n-    for ana in analysis {\n         if let Some(mut action) = ana(position) {\n-            return Ok(Some(\n-                action\n-                    .source_file_edits\n-                    .pop()\n-                    .unwrap()\n-                    .edit\n-                    .as_atoms()\n-                    .iter()\n-                    .map_conv_with(&line_index)\n-                    .collect(),\n-            ));\n+            let change: Vec<TextEdit> = action\n+                .source_file_edits\n+                .pop()\n+                .unwrap()\n+                .edit\n+                .as_atoms()\n+                .iter()\n+                .map_conv_with(&line_index)\n+                .collect();\n+            return Ok(Some(change));\n         }\n     }\n "}]}