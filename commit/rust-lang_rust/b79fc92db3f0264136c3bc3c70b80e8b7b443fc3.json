{"sha": "b79fc92db3f0264136c3bc3c70b80e8b7b443fc3", "node_id": "C_kwDOAAsO6NoAKGI3OWZjOTJkYjNmMDI2NDEzNmMzYmMzYzcwYjgwZThiN2I0NDNmYzM", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-02-02T18:33:13Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2022-02-02T18:33:13Z"}, "message": "fix ICE when parsing lifetime as function argument", "tree": {"sha": "8a8f83a374f2597e6725017cbeb40d9cd9ab6d31", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a8f83a374f2597e6725017cbeb40d9cd9ab6d31"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3", "html_url": "https://github.com/rust-lang/rust/commit/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d5f9c40e6a9ecc62432e71e886cef83a4c2c9b98", "url": "https://api.github.com/repos/rust-lang/rust/commits/d5f9c40e6a9ecc62432e71e886cef83a4c2c9b98", "html_url": "https://github.com/rust-lang/rust/commit/d5f9c40e6a9ecc62432e71e886cef83a4c2c9b98"}], "stats": {"total": 75, "additions": 60, "deletions": 15}, "files": [{"sha": "0a9452a83a5e4ccbf48080bccdbce11bb2bd1608", "filename": "compiler/rustc_parse/src/parser/expr.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fexpr.rs?ref=b79fc92db3f0264136c3bc3c70b80e8b7b443fc3", "patch": "@@ -1457,9 +1457,9 @@ impl<'a> Parser<'a> {\n         } else if self.check(&token::OpenDelim(token::Brace)) || self.token.is_whole_block() {\n             self.parse_block_expr(label, lo, BlockCheckMode::Default, attrs)\n         } else if !ate_colon && (self.check(&TokenKind::Comma) || self.check(&TokenKind::Gt)) {\n-            // We're probably inside of a `Path<'a>` that needs a turbofish, so suppress the\n-            // \"must be followed by a colon\" error, and the \"expected one of\" error.\n-            self.diagnostic().delay_span_bug(lo, \"this label wasn't parsed correctly\");\n+            // We're probably inside of a `Path<'a>` that needs a turbofish\n+            let msg = \"expected `while`, `for`, `loop` or `{` after a label\";\n+            self.struct_span_err(self.token.span, msg).span_label(self.token.span, msg).emit();\n             consume_colon = false;\n             Ok(self.mk_expr_err(lo))\n         } else {"}, {"sha": "82cda5a2f2e738fdee2b2c9c3571127c76b31e90", "filename": "compiler/rustc_typeck/src/check/expr.rs", "status": "modified", "additions": 16, "deletions": 8, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fexpr.rs?ref=b79fc92db3f0264136c3bc3c70b80e8b7b443fc3", "patch": "@@ -865,14 +865,22 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                         ),\n                     ..\n                 }) => {\n-                    // We have a situation like `while Some(0) = value.get(0) {`, where `while let`\n-                    // was more likely intended.\n-                    err.span_suggestion_verbose(\n-                        expr.span.shrink_to_lo(),\n-                        \"you might have meant to use pattern destructuring\",\n-                        \"let \".to_string(),\n-                        Applicability::MachineApplicable,\n-                    );\n+                    // Check if our lhs is a child of the condition of a while loop\n+                    let expr_is_ancestor = std::iter::successors(Some(lhs.hir_id), |id| {\n+                        self.tcx.hir().find_parent_node(*id)\n+                    })\n+                    .take_while(|id| *id != parent)\n+                    .any(|id| id == expr.hir_id);\n+                    // if it is, then we have a situation like `while Some(0) = value.get(0) {`,\n+                    // where `while let` was more likely intended.\n+                    if expr_is_ancestor {\n+                        err.span_suggestion_verbose(\n+                            expr.span.shrink_to_lo(),\n+                            \"you might have meant to use pattern destructuring\",\n+                            \"let \".to_string(),\n+                            Applicability::MachineApplicable,\n+                        );\n+                    }\n                     break;\n                 }\n                 hir::Node::Item(_)"}, {"sha": "261fcb5f9183e9a34b42b74ac1c1ecc95e44c556", "filename": "src/test/ui/parser/issues/issue-93282.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.rs?ref=b79fc92db3f0264136c3bc3c70b80e8b7b443fc3", "patch": "@@ -1,4 +1,15 @@\n fn main() {\n     f<'a,>\n     //~^ ERROR expected\n+    //~| ERROR expected\n+}\n+\n+fn bar(a: usize, b: usize) -> usize {\n+    a + b\n+}\n+\n+fn foo() {\n+    let x = 1;\n+    bar('y, x);\n+    //~^ ERROR expected\n }"}, {"sha": "900f21a7ccef461ae7465a9c8f3d846439dadd5e", "filename": "src/test/ui/parser/issues/issue-93282.stderr", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Fissues%2Fissue-93282.stderr?ref=b79fc92db3f0264136c3bc3c70b80e8b7b443fc3", "patch": "@@ -1,3 +1,9 @@\n+error: expected `while`, `for`, `loop` or `{` after a label\n+  --> $DIR/issue-93282.rs:2:9\n+   |\n+LL |     f<'a,>\n+   |         ^ expected `while`, `for`, `loop` or `{` after a label\n+\n error: expected one of `.`, `:`, `;`, `?`, `for`, `loop`, `while`, `{`, `}`, or an operator, found `,`\n   --> $DIR/issue-93282.rs:2:9\n    |\n@@ -9,5 +15,11 @@ help: use `::<...>` instead of `<...>` to specify lifetime, type, or const argum\n LL |     f::<'a,>\n    |      ++\n \n-error: aborting due to previous error\n+error: expected `while`, `for`, `loop` or `{` after a label\n+  --> $DIR/issue-93282.rs:13:11\n+   |\n+LL |     bar('y, x);\n+   |           ^ expected `while`, `for`, `loop` or `{` after a label\n+\n+error: aborting due to 3 previous errors\n "}, {"sha": "f29fd7a5472d45ce75e870a02b78979c0e94f921", "filename": "src/test/ui/parser/require-parens-for-chained-comparison.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.rs?ref=b79fc92db3f0264136c3bc3c70b80e8b7b443fc3", "patch": "@@ -22,10 +22,12 @@ fn main() {\n     let _ = f<'_, i8>();\n     //~^ ERROR expected one of\n     //~| HELP use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments\n+    //~| ERROR expected\n \n     f<'_>();\n     //~^ comparison operators cannot be chained\n     //~| HELP use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments\n+    //~| ERROR expected\n \n     let _ = f<u8>;\n     //~^ ERROR comparison operators cannot be chained"}, {"sha": "92d700753dc1b24665bce4e45eb9e056f363e215", "filename": "src/test/ui/parser/require-parens-for-chained-comparison.stderr", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/b79fc92db3f0264136c3bc3c70b80e8b7b443fc3/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fparser%2Frequire-parens-for-chained-comparison.stderr?ref=b79fc92db3f0264136c3bc3c70b80e8b7b443fc3", "patch": "@@ -53,6 +53,12 @@ help: use `::<...>` instead of `<...>` to specify lifetime, type, or const argum\n LL |     let _ = f::<u8, i8>();\n    |              ++\n \n+error: expected `while`, `for`, `loop` or `{` after a label\n+  --> $DIR/require-parens-for-chained-comparison.rs:22:17\n+   |\n+LL |     let _ = f<'_, i8>();\n+   |                 ^ expected `while`, `for`, `loop` or `{` after a label\n+\n error: expected one of `.`, `:`, `;`, `?`, `else`, `for`, `loop`, `while`, `{`, or an operator, found `,`\n   --> $DIR/require-parens-for-chained-comparison.rs:22:17\n    |\n@@ -64,8 +70,14 @@ help: use `::<...>` instead of `<...>` to specify lifetime, type, or const argum\n LL |     let _ = f::<'_, i8>();\n    |              ++\n \n+error: expected `while`, `for`, `loop` or `{` after a label\n+  --> $DIR/require-parens-for-chained-comparison.rs:27:9\n+   |\n+LL |     f<'_>();\n+   |         ^ expected `while`, `for`, `loop` or `{` after a label\n+\n error: comparison operators cannot be chained\n-  --> $DIR/require-parens-for-chained-comparison.rs:26:6\n+  --> $DIR/require-parens-for-chained-comparison.rs:27:6\n    |\n LL |     f<'_>();\n    |      ^  ^\n@@ -76,13 +88,13 @@ LL |     f::<'_>();\n    |      ++\n \n error: comparison operators cannot be chained\n-  --> $DIR/require-parens-for-chained-comparison.rs:30:14\n+  --> $DIR/require-parens-for-chained-comparison.rs:32:14\n    |\n LL |     let _ = f<u8>;\n    |              ^  ^\n    |\n    = help: use `::<...>` instead of `<...>` to specify lifetime, type, or const arguments\n    = help: or use `(...)` if you meant to specify fn arguments\n \n-error: aborting due to 8 previous errors\n+error: aborting due to 10 previous errors\n "}]}