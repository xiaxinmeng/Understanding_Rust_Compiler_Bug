{"sha": "7c581b08fa9a9b843ecee2a8af82b346da6fd42b", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdjNTgxYjA4ZmE5YTliODQzZWNlZTJhOGFmODJiMzQ2ZGE2ZmQ0MmI=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2018-03-08T19:25:58Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-03-08T19:25:58Z"}, "message": "Rollup merge of #48738 - Songbird0:parseinterror_potential_cause, r=joshtriplett\n\nAdd a potential cause raising `ParseIntError`.\n\nInitially, I wanted to add it directly to the documentation of `str. parse()` method, I finally found that it was more relevant (I hope so?) to directly document the structure in question. I've added a scenario, in which we could all get caught at least once, to make it easier to diagnose the problem when parsing integers.", "tree": {"sha": "8027925c13b66cb93e6583ddf6443aefaa71b41b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8027925c13b66cb93e6583ddf6443aefaa71b41b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c581b08fa9a9b843ecee2a8af82b346da6fd42b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaoY5GCRBK7hj4Ov3rIwAAdHIIALKabsbVjCKJ9pLDgS1rImEz\nMwlQUQ1bBZORxh31PH3zcn7YgZpmgajbo1sY6cO8Lf2VoMIb00QAoUnkKUncKSsc\ncZpNaIiOdlqMzZUZUuscwneW4I/G9mGFkopBUpKFk9FXKfDCSmgo7RJNTnMPM0SU\n2yZxb14Ph6IhYx3WVZQ/c53aG+afEXHQCNvcMrXM54a4DY1ARW57lnIHVwn/7SW+\n19DB68DG4bZqcCA8wH8LlAxpnzQxxl+w+Julse3bDxEiCbwo1CLruXkmFpk5icUP\nAYj8VhklUvHCwqhCd1JACBe4PF0a/o3IfUldtNf4JFhwVlmtxAgQEzSFD6Jf5FA=\n=m86L\n-----END PGP SIGNATURE-----\n", "payload": "tree 8027925c13b66cb93e6583ddf6443aefaa71b41b\nparent 6d0d34336d791d4e5c776d56fc1813b0929ee073\nparent 6d71aa47fbcaeb0493ac1bbc4408b513f6108fd0\nauthor Manish Goregaokar <manishsmail@gmail.com> 1520537158 -0800\ncommitter GitHub <noreply@github.com> 1520537158 -0800\n\nRollup merge of #48738 - Songbird0:parseinterror_potential_cause, r=joshtriplett\n\nAdd a potential cause raising `ParseIntError`.\n\nInitially, I wanted to add it directly to the documentation of `str. parse()` method, I finally found that it was more relevant (I hope so?) to directly document the structure in question. I've added a scenario, in which we could all get caught at least once, to make it easier to diagnose the problem when parsing integers.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c581b08fa9a9b843ecee2a8af82b346da6fd42b", "html_url": "https://github.com/rust-lang/rust/commit/7c581b08fa9a9b843ecee2a8af82b346da6fd42b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c581b08fa9a9b843ecee2a8af82b346da6fd42b/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d0d34336d791d4e5c776d56fc1813b0929ee073", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d0d34336d791d4e5c776d56fc1813b0929ee073", "html_url": "https://github.com/rust-lang/rust/commit/6d0d34336d791d4e5c776d56fc1813b0929ee073"}, {"sha": "6d71aa47fbcaeb0493ac1bbc4408b513f6108fd0", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d71aa47fbcaeb0493ac1bbc4408b513f6108fd0", "html_url": "https://github.com/rust-lang/rust/commit/6d71aa47fbcaeb0493ac1bbc4408b513f6108fd0"}], "stats": {"total": 7, "additions": 7, "deletions": 0}, "files": [{"sha": "09ab7060d37db8420162350925900891dbb2e5b5", "filename": "src/libcore/num/mod.rs", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/7c581b08fa9a9b843ecee2a8af82b346da6fd42b/src%2Flibcore%2Fnum%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c581b08fa9a9b843ecee2a8af82b346da6fd42b/src%2Flibcore%2Fnum%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fnum%2Fmod.rs?ref=7c581b08fa9a9b843ecee2a8af82b346da6fd42b", "patch": "@@ -3900,6 +3900,13 @@ fn from_str_radix<T: FromStrRadixHelper>(src: &str, radix: u32) -> Result<T, Par\n /// This error is used as the error type for the `from_str_radix()` functions\n /// on the primitive integer types, such as [`i8::from_str_radix`].\n ///\n+/// # Potential causes\n+///\n+/// Among other causes, `ParseIntError` can be thrown because of leading or trailing whitespace\n+/// in the string e.g. when it is obtained from the standard input.\n+/// Using the [`str.trim()`] method ensures that no whitespace remains before parsing.\n+///\n+/// [`str.trim()`]: ../../std/primitive.str.html#method.trim\n /// [`i8::from_str_radix`]: ../../std/primitive.i8.html#method.from_str_radix\n #[derive(Debug, Clone, PartialEq, Eq)]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]"}]}