{"sha": "bc3e97a277778b37d28dbdf45ae5589b95586971", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJjM2U5N2EyNzc3NzhiMzdkMjhkYmRmNDVhZTU1ODliOTU1ODY5NzE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-10-15T11:27:29Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-15T11:27:29Z"}, "message": "Rollup merge of #65426 - nnethercote:rm-custom-LocalInternedString-PartialEq-impls, r=petrochenkov\n\nRemove custom `PartialEq` impls for `LocalInternedString`.\n\nThis is on-trend with the recent changes simplifying\n`LocalInternedString` and reducing its use.\n\nr? @petrochenkov", "tree": {"sha": "ce2a5b9a0ea9cba57b6a1e032436cd88b4d71bf7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ce2a5b9a0ea9cba57b6a1e032436cd88b4d71bf7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/bc3e97a277778b37d28dbdf45ae5589b95586971", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdpa0hCRBK7hj4Ov3rIwAAdHIIAIcLhkfe4xAJHxhQFjThEYPo\n3qb0yymHrHdCvG4NYqLiw0PZ1rnSM+O/v5TiQqCb7TzsrFDtztSBMIKQ5GW9bydQ\nie25x4MfLpvsyKowZLl/bYLVsPXstaHm+ZexYYMC2yFxyOXWdfPRSaatsbgStg66\n/HWAuVLq05BN+FEZ4T7rMB0N2AzeL5mEvKJrm9xhnvJgG9l1j/dTa/2dSD8obR5r\niZwN0hgwyNkj4Cuxv+8EdQOEmK3G8RHuNqLxami9KhdJssmb5v+dI8Sp34/y7Zsa\nR+TiFlrqHH/hToNQo7fElhlFnxHXd4y3uwG6kA6h2pg9BuAq3xiXiSS9bcwpPJE=\n=5jlE\n-----END PGP SIGNATURE-----\n", "payload": "tree ce2a5b9a0ea9cba57b6a1e032436cd88b4d71bf7\nparent d24c66fba39fe88ffc2a1755188a50c6781499f7\nparent 57d33b155f31ca8c9d17371416d085c66ab4e61c\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1571138849 +0200\ncommitter GitHub <noreply@github.com> 1571138849 +0200\n\nRollup merge of #65426 - nnethercote:rm-custom-LocalInternedString-PartialEq-impls, r=petrochenkov\n\nRemove custom `PartialEq` impls for `LocalInternedString`.\n\nThis is on-trend with the recent changes simplifying\n`LocalInternedString` and reducing its use.\n\nr? @petrochenkov\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/bc3e97a277778b37d28dbdf45ae5589b95586971", "html_url": "https://github.com/rust-lang/rust/commit/bc3e97a277778b37d28dbdf45ae5589b95586971", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/bc3e97a277778b37d28dbdf45ae5589b95586971/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d24c66fba39fe88ffc2a1755188a50c6781499f7", "url": "https://api.github.com/repos/rust-lang/rust/commits/d24c66fba39fe88ffc2a1755188a50c6781499f7", "html_url": "https://github.com/rust-lang/rust/commit/d24c66fba39fe88ffc2a1755188a50c6781499f7"}, {"sha": "57d33b155f31ca8c9d17371416d085c66ab4e61c", "url": "https://api.github.com/repos/rust-lang/rust/commits/57d33b155f31ca8c9d17371416d085c66ab4e61c", "html_url": "https://github.com/rust-lang/rust/commit/57d33b155f31ca8c9d17371416d085c66ab4e61c"}], "stats": {"total": 28, "additions": 2, "deletions": 26}, "files": [{"sha": "c07b6050afe31af5c0315f43e37a13866ca562cd", "filename": "src/libsyntax/feature_gate/check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc3e97a277778b37d28dbdf45ae5589b95586971/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc3e97a277778b37d28dbdf45ae5589b95586971/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate%2Fcheck.rs?ref=bc3e97a277778b37d28dbdf45ae5589b95586971", "patch": "@@ -814,7 +814,7 @@ pub fn get_features(span_handler: &Handler, krate_attrs: &[ast::Attribute],\n             }\n \n             if let Some(allowed) = allow_features.as_ref() {\n-                if allowed.iter().find(|f| *f == name.as_str()).is_none() {\n+                if allowed.iter().find(|&f| f == &name.as_str() as &str).is_none() {\n                     span_err!(span_handler, mi.span(), E0725,\n                               \"the feature `{}` is not in the list of allowed features\",\n                               name);"}, {"sha": "14e1696610a4d0bd8e004a32d80327eb2fe72143", "filename": "src/libsyntax/parse/literal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/bc3e97a277778b37d28dbdf45ae5589b95586971/src%2Flibsyntax%2Fparse%2Fliteral.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc3e97a277778b37d28dbdf45ae5589b95586971/src%2Flibsyntax%2Fparse%2Fliteral.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fliteral.rs?ref=bc3e97a277778b37d28dbdf45ae5589b95586971", "patch": "@@ -134,7 +134,7 @@ impl LitKind {\n         let (kind, symbol, suffix) = match *self {\n             LitKind::Str(symbol, ast::StrStyle::Cooked) => {\n                 // Don't re-intern unless the escaped string is different.\n-                let s = &symbol.as_str();\n+                let s: &str = &symbol.as_str();\n                 let escaped = s.escape_default().to_string();\n                 let symbol = if escaped == *s { symbol } else { Symbol::intern(&escaped) };\n                 (token::Str, symbol, None)"}, {"sha": "8298edb42d46ef5e6b8e3d4f0aad99fcc92d36b8", "filename": "src/libsyntax_pos/symbol.rs", "status": "modified", "additions": 0, "deletions": 24, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/bc3e97a277778b37d28dbdf45ae5589b95586971/src%2Flibsyntax_pos%2Fsymbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/bc3e97a277778b37d28dbdf45ae5589b95586971/src%2Flibsyntax_pos%2Fsymbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax_pos%2Fsymbol.rs?ref=bc3e97a277778b37d28dbdf45ae5589b95586971", "patch": "@@ -1202,30 +1202,6 @@ impl<T: std::ops::Deref<Target = str>> std::cmp::PartialEq<T> for LocalInternedS\n     }\n }\n \n-impl std::cmp::PartialEq<LocalInternedString> for str {\n-    fn eq(&self, other: &LocalInternedString) -> bool {\n-        self == other.string\n-    }\n-}\n-\n-impl<'a> std::cmp::PartialEq<LocalInternedString> for &'a str {\n-    fn eq(&self, other: &LocalInternedString) -> bool {\n-        *self == other.string\n-    }\n-}\n-\n-impl std::cmp::PartialEq<LocalInternedString> for String {\n-    fn eq(&self, other: &LocalInternedString) -> bool {\n-        self == other.string\n-    }\n-}\n-\n-impl<'a> std::cmp::PartialEq<LocalInternedString> for &'a String {\n-    fn eq(&self, other: &LocalInternedString) -> bool {\n-        *self == other.string\n-    }\n-}\n-\n impl !Send for LocalInternedString {}\n impl !Sync for LocalInternedString {}\n "}]}