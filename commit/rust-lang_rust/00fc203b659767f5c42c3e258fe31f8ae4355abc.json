{"sha": "00fc203b659767f5c42c3e258fe31f8ae4355abc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAwZmMyMDNiNjU5NzY3ZjVjNDJjM2UyNThmZTMxZjhhZTQzNTVhYmM=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-28T23:02:09Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-12-28T23:02:09Z"}, "message": "Auto merge of #67334 - estebank:ignore-triple, r=nikomatsakis\n\nTeach `compiletest` to ignore platform triples\n\nThe UI tests are written assuming `--remap-path-prefix` is *not used* (`remap-debuginfo` in `config.toml`). The consequence is that the error messages may include paths and snippets into the standard library. When `remap-debuginfo` is enabled, these messages change in format and structure because `rustc` will not show paths and snippets into the standard library.\n\nThis normally isn't a problem for the \"main\" platforms (linux/macos/windows), because the CI infrastructure is set up so that the tests run without `remap-debuginfo`, but the `dist` artifacts are built separately with `remap-debuginfo` enabled. However, some of the lower-tier platforms perform both tests and distribution in a single step with `remap-debuginfo` enabled. This also affects developers and distributors who use `remap-debuginfo`.\n\nTo sidestep this problem, we add a way to ignore tests in specific platform triples, and update the overly broad `ignore-x86` rule in affected tests.\n\nAddress #46948, #54546, #53081.", "tree": {"sha": "8e02a785887e732de9468ebef3bd6678427db559", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e02a785887e732de9468ebef3bd6678427db559"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/00fc203b659767f5c42c3e258fe31f8ae4355abc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/00fc203b659767f5c42c3e258fe31f8ae4355abc", "html_url": "https://github.com/rust-lang/rust/commit/00fc203b659767f5c42c3e258fe31f8ae4355abc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/00fc203b659767f5c42c3e258fe31f8ae4355abc/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3a3f4a7cbaff09722b8c7cc8f09ce86ff5f953a3", "url": "https://api.github.com/repos/rust-lang/rust/commits/3a3f4a7cbaff09722b8c7cc8f09ce86ff5f953a3", "html_url": "https://github.com/rust-lang/rust/commit/3a3f4a7cbaff09722b8c7cc8f09ce86ff5f953a3"}, {"sha": "90bf0d2e3346cc952e3a4a49e93f48c65cc5905f", "url": "https://api.github.com/repos/rust-lang/rust/commits/90bf0d2e3346cc952e3a4a49e93f48c65cc5905f", "html_url": "https://github.com/rust-lang/rust/commit/90bf0d2e3346cc952e3a4a49e93f48c65cc5905f"}], "stats": {"total": 399, "additions": 268, "deletions": 131}, "files": [{"sha": "afa6bbdae4e9e500c68e64c65ab089f02fc797c3", "filename": "src/etc/generate-deriving-span-tests.py", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Fetc%2Fgenerate-deriving-span-tests.py", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Fetc%2Fgenerate-deriving-span-tests.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fetc%2Fgenerate-deriving-span-tests.py?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -14,7 +14,9 @@\n     os.path.join(os.path.dirname(__file__), '../test/ui/derives/'))\n \n TEMPLATE = \"\"\"\\\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n {error_deriving}"}, {"sha": "aa142ebd78cb1f997720fbccaea8b84a71a4da98", "filename": "src/test/ui/async-await/issues/issue-62009-1.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,8 @@\n // edition:2018\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n \n async fn print_dur() {}\n "}, {"sha": "85e133912d36c9d7a59062829906991179fbc6f2", "filename": "src/test/ui/async-await/issues/issue-62009-1.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fasync-await%2Fissues%2Fissue-62009-1.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,13 +1,13 @@\n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/issue-62009-1.rs:7:5\n+  --> $DIR/issue-62009-1.rs:10:5\n    |\n LL | fn main() {\n    |    ---- this is not `async`\n LL |     async { let (); }.await;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/issue-62009-1.rs:9:5\n+  --> $DIR/issue-62009-1.rs:12:5\n    |\n LL |   fn main() {\n    |      ---- this is not `async`\n@@ -19,19 +19,19 @@ LL | |     }.await;\n    | |___________^ only allowed inside `async` functions and blocks\n \n error[E0728]: `await` is only allowed inside `async` functions and blocks\n-  --> $DIR/issue-62009-1.rs:13:5\n+  --> $DIR/issue-62009-1.rs:16:5\n    |\n LL | fn main() {\n    |    ---- this is not `async`\n ...\n LL |     (|_| 2333).await;\n    |     ^^^^^^^^^^^^^^^^ only allowed inside `async` functions and blocks\n \n-error[E0277]: the trait bound `[closure@$DIR/issue-62009-1.rs:13:5: 13:15]: std::future::Future` is not satisfied\n-  --> $DIR/issue-62009-1.rs:13:5\n+error[E0277]: the trait bound `[closure@$DIR/issue-62009-1.rs:16:5: 16:15]: std::future::Future` is not satisfied\n+  --> $DIR/issue-62009-1.rs:16:5\n    |\n LL |     (|_| 2333).await;\n-   |     ^^^^^^^^^^^^^^^^ the trait `std::future::Future` is not implemented for `[closure@$DIR/issue-62009-1.rs:13:5: 13:15]`\n+   |     ^^^^^^^^^^^^^^^^ the trait `std::future::Future` is not implemented for `[closure@$DIR/issue-62009-1.rs:16:5: 16:15]`\n    |\n    = note: required by `std::future::IntoFuture::into_future`\n "}, {"sha": "87388247fbfda90d864a6af2bec49b06269733a3", "filename": "src/test/ui/closures/closure-move-sync.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n use std::thread;\n use std::sync::mpsc::channel;\n "}, {"sha": "2187823d7582a7e34a9e683a5534551217b1af20", "filename": "src/test/ui/closures/closure-move-sync.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosures%2Fclosure-move-sync.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `std::sync::mpsc::Receiver<()>` cannot be shared between threads safely\n-  --> $DIR/closure-move-sync.rs:7:13\n+  --> $DIR/closure-move-sync.rs:10:13\n    |\n LL |     let t = thread::spawn(|| {\n    |             ^^^^^^^^^^^^^ `std::sync::mpsc::Receiver<()>` cannot be shared between threads safely\n@@ -11,10 +11,10 @@ LL |     F: Send + 'static,\n    |\n    = help: the trait `std::marker::Sync` is not implemented for `std::sync::mpsc::Receiver<()>`\n    = note: required because of the requirements on the impl of `std::marker::Send` for `&std::sync::mpsc::Receiver<()>`\n-   = note: required because it appears within the type `[closure@$DIR/closure-move-sync.rs:7:27: 10:6 recv:&std::sync::mpsc::Receiver<()>]`\n+   = note: required because it appears within the type `[closure@$DIR/closure-move-sync.rs:10:27: 13:6 recv:&std::sync::mpsc::Receiver<()>]`\n \n error[E0277]: `std::sync::mpsc::Sender<()>` cannot be shared between threads safely\n-  --> $DIR/closure-move-sync.rs:19:5\n+  --> $DIR/closure-move-sync.rs:22:5\n    |\n LL |     thread::spawn(|| tx.send(()).unwrap());\n    |     ^^^^^^^^^^^^^ `std::sync::mpsc::Sender<()>` cannot be shared between threads safely\n@@ -26,7 +26,7 @@ LL |     F: Send + 'static,\n    |\n    = help: the trait `std::marker::Sync` is not implemented for `std::sync::mpsc::Sender<()>`\n    = note: required because of the requirements on the impl of `std::marker::Send` for `&std::sync::mpsc::Sender<()>`\n-   = note: required because it appears within the type `[closure@$DIR/closure-move-sync.rs:19:19: 19:42 tx:&std::sync::mpsc::Sender<()>]`\n+   = note: required because it appears within the type `[closure@$DIR/closure-move-sync.rs:22:19: 22:42 tx:&std::sync::mpsc::Sender<()>]`\n \n error: aborting due to 2 previous errors\n "}, {"sha": "c94bb4fbb27960badc8a4bed1a17444ebb4115e1", "filename": "src/test/ui/consts/const-size_of-cycle.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // error-pattern: cycle detected\n \n struct Foo {"}, {"sha": "c03b7a19ffc6186b755d569dabd5d943a010f88f", "filename": "src/test/ui/consts/const-size_of-cycle.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fconst-size_of-cycle.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,16 +1,16 @@\n error[E0391]: cycle detected when const-evaluating + checking `Foo::bytes::{{constant}}#0`\n-  --> $DIR/const-size_of-cycle.rs:5:17\n+  --> $DIR/const-size_of-cycle.rs:8:17\n    |\n LL |     bytes: [u8; std::mem::size_of::<Foo>()]\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n note: ...which requires const-evaluating + checking `Foo::bytes::{{constant}}#0`...\n-  --> $DIR/const-size_of-cycle.rs:5:17\n+  --> $DIR/const-size_of-cycle.rs:8:17\n    |\n LL |     bytes: [u8; std::mem::size_of::<Foo>()]\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n note: ...which requires const-evaluating `Foo::bytes::{{constant}}#0`...\n-  --> $DIR/const-size_of-cycle.rs:5:17\n+  --> $DIR/const-size_of-cycle.rs:8:17\n    |\n LL |     bytes: [u8; std::mem::size_of::<Foo>()]\n    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -28,7 +28,7 @@ LL |     pub fn size_of<T>() -> usize;\n    = note: ...which requires normalizing `ParamEnvAnd { param_env: ParamEnv { caller_bounds: [], reveal: All, def_id: None }, value: [u8; _] }`...\n    = note: ...which again requires const-evaluating + checking `Foo::bytes::{{constant}}#0`, completing the cycle\n note: cycle used when processing `Foo`\n-  --> $DIR/const-size_of-cycle.rs:4:1\n+  --> $DIR/const-size_of-cycle.rs:7:1\n    |\n LL | struct Foo {\n    | ^^^^^^^^^^"}, {"sha": "d2c34bcd4ae2b2af73aeaa18a628a8441c213a01", "filename": "src/test/ui/consts/miri_unleashed/drop.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,8 @@\n // compile-flags: -Zunleash-the-miri-inside-of-you\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // error-pattern: calling non-const function `<std::vec::Vec<i32> as std::ops::Drop>::drop`\n #![deny(const_err)]\n "}, {"sha": "2cdeb598c8cc617fb414a1edf820c01c07c3578a", "filename": "src/test/ui/consts/miri_unleashed/drop.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Fmiri_unleashed%2Fdrop.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n warning: skipping const checks\n-  --> $DIR/drop.rs:18:9\n+  --> $DIR/drop.rs:21:9\n    |\n LL |     let _v: Vec<i32> = Vec::new();\n    |         ^^\n@@ -14,10 +14,10 @@ LL | |     real_drop_in_place(to_drop)\n LL | | }\n    | |_^ calling non-const function `<std::vec::Vec<i32> as std::ops::Drop>::drop`\n    | \n-  ::: $DIR/drop.rs:20:1\n+  ::: $DIR/drop.rs:23:1\n    |\n LL |   };\n-   |   - inside call to `std::ptr::real_drop_in_place::<std::vec::Vec<i32>> - shim(Some(std::vec::Vec<i32>))` at $DIR/drop.rs:20:1\n+   |   - inside call to `std::ptr::real_drop_in_place::<std::vec::Vec<i32>> - shim(Some(std::vec::Vec<i32>))` at $DIR/drop.rs:23:1\n \n error: aborting due to previous error\n "}, {"sha": "6c4beaf2ea5ac2668cf6158879093aced69bae35", "filename": "src/test/ui/consts/offset_from_ub.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n \n #![feature(const_raw_ptr_deref)]\n #![feature(const_ptr_offset_from)]"}, {"sha": "24da983cf0868088db004d9d7b8f894b38bb202b", "filename": "src/test/ui/consts/offset_from_ub.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fconsts%2Foffset_from_ub.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -5,9 +5,9 @@ LL |           intrinsics::ptr_offset_from(self, origin)\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |           |\n    |           ptr_offset_from cannot compute offset of pointers into different allocations.\n-   |           inside call to `std::ptr::const_ptr::<impl *const Struct>::offset_from` at $DIR/offset_from_ub.rs:19:27\n+   |           inside call to `std::ptr::const_ptr::<impl *const Struct>::offset_from` at $DIR/offset_from_ub.rs:22:27\n    | \n-  ::: $DIR/offset_from_ub.rs:13:1\n+  ::: $DIR/offset_from_ub.rs:16:1\n    |\n LL | / pub const DIFFERENT_ALLOC: usize = {\n LL | |\n@@ -27,9 +27,9 @@ LL |           intrinsics::ptr_offset_from(self, origin)\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |           |\n    |           a memory access tried to interpret some bytes as a pointer\n-   |           inside call to `std::ptr::const_ptr::<impl *const u8>::offset_from` at $DIR/offset_from_ub.rs:25:14\n+   |           inside call to `std::ptr::const_ptr::<impl *const u8>::offset_from` at $DIR/offset_from_ub.rs:28:14\n    | \n-  ::: $DIR/offset_from_ub.rs:23:1\n+  ::: $DIR/offset_from_ub.rs:26:1\n    |\n LL | / pub const NOT_PTR: usize = {\n LL | |\n@@ -44,9 +44,9 @@ LL |           intrinsics::ptr_offset_from(self, origin)\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |           |\n    |           exact_div: 1 cannot be divided by 2 without remainder\n-   |           inside call to `std::ptr::const_ptr::<impl *const u16>::offset_from` at $DIR/offset_from_ub.rs:33:14\n+   |           inside call to `std::ptr::const_ptr::<impl *const u16>::offset_from` at $DIR/offset_from_ub.rs:36:14\n    | \n-  ::: $DIR/offset_from_ub.rs:28:1\n+  ::: $DIR/offset_from_ub.rs:31:1\n    |\n LL | / pub const NOT_MULTIPLE_OF_SIZE: isize = {\n LL | |\n@@ -64,9 +64,9 @@ LL |           intrinsics::ptr_offset_from(self, origin)\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |           |\n    |           invalid use of NULL pointer\n-   |           inside call to `std::ptr::const_ptr::<impl *const u8>::offset_from` at $DIR/offset_from_ub.rs:39:14\n+   |           inside call to `std::ptr::const_ptr::<impl *const u8>::offset_from` at $DIR/offset_from_ub.rs:42:14\n    | \n-  ::: $DIR/offset_from_ub.rs:36:1\n+  ::: $DIR/offset_from_ub.rs:39:1\n    |\n LL | / pub const OFFSET_FROM_NULL: isize = {\n LL | |\n@@ -82,9 +82,9 @@ LL |           intrinsics::ptr_offset_from(self, origin)\n    |           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |           |\n    |           a memory access tried to interpret some bytes as a pointer\n-   |           inside call to `std::ptr::const_ptr::<impl *const u8>::offset_from` at $DIR/offset_from_ub.rs:46:14\n+   |           inside call to `std::ptr::const_ptr::<impl *const u8>::offset_from` at $DIR/offset_from_ub.rs:49:14\n    | \n-  ::: $DIR/offset_from_ub.rs:42:1\n+  ::: $DIR/offset_from_ub.rs:45:1\n    |\n LL | / pub const DIFFERENT_INT: isize = { // offset_from with two different integers: like DIFFERENT_ALLOC\n LL | |"}, {"sha": "7c416fdcfb182e762450a9891a3b0d2b0836c7d8", "filename": "src/test/ui/derives/derives-span-Clone-enum-struct-variant.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "5ddc5b5708c186ae4bc1ea604d71ba830b5bcba3", "filename": "src/test/ui/derives/derives-span-Clone-enum-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum-struct-variant.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::clone::Clone` is not satisfied\n-  --> $DIR/derives-span-Clone-enum-struct-variant.rs:10:6\n+  --> $DIR/derives-span-Clone-enum-struct-variant.rs:13:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^ the trait `std::clone::Clone` is not implemented for `Error`"}, {"sha": "c013ccd934ed19d3f461331ca1bc0a0f68f70b6b", "filename": "src/test/ui/derives/derives-span-Clone-enum.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "80ef9238f4775fee564f2143564a2a3dadb9eccc", "filename": "src/test/ui/derives/derives-span-Clone-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-enum.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::clone::Clone` is not satisfied\n-  --> $DIR/derives-span-Clone-enum.rs:10:6\n+  --> $DIR/derives-span-Clone-enum.rs:13:6\n    |\n LL |      Error\n    |      ^^^^^ the trait `std::clone::Clone` is not implemented for `Error`"}, {"sha": "5a78a92b823d76852dd395b05448dba2461d3ded", "filename": "src/test/ui/derives/derives-span-Clone-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "17f3925107b8a5a86954237095736be49d365bd0", "filename": "src/test/ui/derives/derives-span-Clone-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::clone::Clone` is not satisfied\n-  --> $DIR/derives-span-Clone-struct.rs:9:5\n+  --> $DIR/derives-span-Clone-struct.rs:12:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^ the trait `std::clone::Clone` is not implemented for `Error`"}, {"sha": "39461d67d16ed433b50262ddbdeeb4d6d52e444d", "filename": "src/test/ui/derives/derives-span-Clone-tuple-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "e98212f361871a4e979d77ea713854052e858a79", "filename": "src/test/ui/derives/derives-span-Clone-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Clone-tuple-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::clone::Clone` is not satisfied\n-  --> $DIR/derives-span-Clone-tuple-struct.rs:9:5\n+  --> $DIR/derives-span-Clone-tuple-struct.rs:12:5\n    |\n LL |     Error\n    |     ^^^^^ the trait `std::clone::Clone` is not implemented for `Error`"}, {"sha": "060983d36737fa5ed2f3accbc9191d31b3a3baad", "filename": "src/test/ui/derives/derives-span-Debug-enum-struct-variant.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "233c4c54983208186b02a6309eaa05a43955f2c1", "filename": "src/test/ui/derives/derives-span-Debug-enum-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum-struct-variant.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `Error` doesn't implement `std::fmt::Debug`\n-  --> $DIR/derives-span-Debug-enum-struct-variant.rs:10:6\n+  --> $DIR/derives-span-Debug-enum-struct-variant.rs:13:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^ `Error` cannot be formatted using `{:?}`"}, {"sha": "109c8f23cdf7c7d86ab71b2e75af9ef8336152e2", "filename": "src/test/ui/derives/derives-span-Debug-enum.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "fbda3980cfc772d3e614313ae5865f6ddbe7c49b", "filename": "src/test/ui/derives/derives-span-Debug-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-enum.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `Error` doesn't implement `std::fmt::Debug`\n-  --> $DIR/derives-span-Debug-enum.rs:10:6\n+  --> $DIR/derives-span-Debug-enum.rs:13:6\n    |\n LL |      Error\n    |      ^^^^^ `Error` cannot be formatted using `{:?}`"}, {"sha": "b52e2879a4c5ae313236b6efb079ccb748abccdd", "filename": "src/test/ui/derives/derives-span-Debug-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "b56d223b34bc406a48446fa9c0110ff12d1c852b", "filename": "src/test/ui/derives/derives-span-Debug-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `Error` doesn't implement `std::fmt::Debug`\n-  --> $DIR/derives-span-Debug-struct.rs:9:5\n+  --> $DIR/derives-span-Debug-struct.rs:12:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^ `Error` cannot be formatted using `{:?}`"}, {"sha": "1855c7fba88120fc3cae205906698f165ff1262a", "filename": "src/test/ui/derives/derives-span-Debug-tuple-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "76dd6e31e604cfc29dad8db149bacf81b76ae95e", "filename": "src/test/ui/derives/derives-span-Debug-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Debug-tuple-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `Error` doesn't implement `std::fmt::Debug`\n-  --> $DIR/derives-span-Debug-tuple-struct.rs:9:5\n+  --> $DIR/derives-span-Debug-tuple-struct.rs:12:5\n    |\n LL |     Error\n    |     ^^^^^ `Error` cannot be formatted using `{:?}`"}, {"sha": "bf60b12ac4806d7d4c5c25e6b328e3147a346112", "filename": "src/test/ui/derives/derives-span-Default-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "784be7fede368ed81ff795b9cc38ba5bea83e593", "filename": "src/test/ui/derives/derives-span-Default-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::default::Default` is not satisfied\n-  --> $DIR/derives-span-Default-struct.rs:9:5\n+  --> $DIR/derives-span-Default-struct.rs:12:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^ the trait `std::default::Default` is not implemented for `Error`"}, {"sha": "8b89b75672071a722c2efedd69e293f588a5454c", "filename": "src/test/ui/derives/derives-span-Default-tuple-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-tuple-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "a93fa058f8dffb2f62c4b89b8677752fbac9b252", "filename": "src/test/ui/derives/derives-span-Default-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Default-tuple-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::default::Default` is not satisfied\n-  --> $DIR/derives-span-Default-tuple-struct.rs:9:5\n+  --> $DIR/derives-span-Default-tuple-struct.rs:12:5\n    |\n LL |     Error\n    |     ^^^^^ the trait `std::default::Default` is not implemented for `Error`"}, {"sha": "36e6ae81e275c3e529e7339ff7301b93d891ff13", "filename": "src/test/ui/derives/derives-span-Eq-enum-struct-variant.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum-struct-variant.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "bad0ce31f70756464e0e30e06a163b49005ded02", "filename": "src/test/ui/derives/derives-span-Eq-enum-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum-struct-variant.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Eq` is not satisfied\n-  --> $DIR/derives-span-Eq-enum-struct-variant.rs:10:6\n+  --> $DIR/derives-span-Eq-enum-struct-variant.rs:13:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^ the trait `std::cmp::Eq` is not implemented for `Error`"}, {"sha": "4282515862cb2ab60942d73f1ef6c62b008d299b", "filename": "src/test/ui/derives/derives-span-Eq-enum.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "a7cc19d4c0f44869c0fd72e4af662cc75305ec7b", "filename": "src/test/ui/derives/derives-span-Eq-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-enum.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Eq` is not satisfied\n-  --> $DIR/derives-span-Eq-enum.rs:10:6\n+  --> $DIR/derives-span-Eq-enum.rs:13:6\n    |\n LL |      Error\n    |      ^^^^^ the trait `std::cmp::Eq` is not implemented for `Error`"}, {"sha": "d290ee5ae0fe876af75080433ae7d03255ddb308", "filename": "src/test/ui/derives/derives-span-Eq-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "10631cb12bff3a3eddcd7be65720da2f62c65f12", "filename": "src/test/ui/derives/derives-span-Eq-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Eq` is not satisfied\n-  --> $DIR/derives-span-Eq-struct.rs:9:5\n+  --> $DIR/derives-span-Eq-struct.rs:12:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^ the trait `std::cmp::Eq` is not implemented for `Error`"}, {"sha": "6458b63139d2feb2b1585cda6777ad40776dcf7c", "filename": "src/test/ui/derives/derives-span-Eq-tuple-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-tuple-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "117ed62cf7ae0844323a568e1433920742e7d448", "filename": "src/test/ui/derives/derives-span-Eq-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Eq-tuple-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Eq` is not satisfied\n-  --> $DIR/derives-span-Eq-tuple-struct.rs:9:5\n+  --> $DIR/derives-span-Eq-tuple-struct.rs:12:5\n    |\n LL |     Error\n    |     ^^^^^ the trait `std::cmp::Eq` is not implemented for `Error`"}, {"sha": "fc04b1a2c065807f13df58c3a2f8fe6d5ac2df27", "filename": "src/test/ui/derives/derives-span-Hash-enum-struct-variant.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum-struct-variant.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "00b033004ec8f9bccd41babae618936eede60cca", "filename": "src/test/ui/derives/derives-span-Hash-enum-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum-struct-variant.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::hash::Hash` is not satisfied\n-  --> $DIR/derives-span-Hash-enum-struct-variant.rs:10:6\n+  --> $DIR/derives-span-Hash-enum-struct-variant.rs:13:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^ the trait `std::hash::Hash` is not implemented for `Error`"}, {"sha": "daff0b27553e605a8fa073490b4d9c4d8f4ad67c", "filename": "src/test/ui/derives/derives-span-Hash-enum.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,7 +1,9 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n-\n struct Error;\n \n #[derive(Hash)]"}, {"sha": "004cabf207ab90e9672edf2ff20c38b23b99bf78", "filename": "src/test/ui/derives/derives-span-Hash-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-enum.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::hash::Hash` is not satisfied\n-  --> $DIR/derives-span-Hash-enum.rs:10:6\n+  --> $DIR/derives-span-Hash-enum.rs:12:6\n    |\n LL |      Error\n    |      ^^^^^ the trait `std::hash::Hash` is not implemented for `Error`"}, {"sha": "12a9edae6301f87087678493961e89ebc63b6059", "filename": "src/test/ui/derives/derives-span-Hash-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "27b8ff3d11469f4c728521ec2546d6d43d0d8cca", "filename": "src/test/ui/derives/derives-span-Hash-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::hash::Hash` is not satisfied\n-  --> $DIR/derives-span-Hash-struct.rs:9:5\n+  --> $DIR/derives-span-Hash-struct.rs:12:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^ the trait `std::hash::Hash` is not implemented for `Error`"}, {"sha": "344b85d7b91168bef7e304dd5930421997601752", "filename": "src/test/ui/derives/derives-span-Hash-tuple-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-tuple-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "f1142bc50332a249288dd4a4bd2ef5107c9bbf0c", "filename": "src/test/ui/derives/derives-span-Hash-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Hash-tuple-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::hash::Hash` is not satisfied\n-  --> $DIR/derives-span-Hash-tuple-struct.rs:9:5\n+  --> $DIR/derives-span-Hash-tuple-struct.rs:12:5\n    |\n LL |     Error\n    |     ^^^^^ the trait `std::hash::Hash` is not implemented for `Error`"}, {"sha": "196996c64c35775b7dd8a2057f59a8679fc546dc", "filename": "src/test/ui/derives/derives-span-Ord-enum-struct-variant.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum-struct-variant.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(Eq,PartialOrd,PartialEq)]"}, {"sha": "1d9d1332b57b80d79ba73526fb8944a685409035", "filename": "src/test/ui/derives/derives-span-Ord-enum-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum-struct-variant.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Ord` is not satisfied\n-  --> $DIR/derives-span-Ord-enum-struct-variant.rs:10:6\n+  --> $DIR/derives-span-Ord-enum-struct-variant.rs:13:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^ the trait `std::cmp::Ord` is not implemented for `Error`"}, {"sha": "6282a69076b0515a42e26b8de38c72a7247cfb11", "filename": "src/test/ui/derives/derives-span-Ord-enum.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(Eq,PartialOrd,PartialEq)]"}, {"sha": "acc8b0c69483ea9a43641d775088340f5a420434", "filename": "src/test/ui/derives/derives-span-Ord-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-enum.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Ord` is not satisfied\n-  --> $DIR/derives-span-Ord-enum.rs:10:6\n+  --> $DIR/derives-span-Ord-enum.rs:13:6\n    |\n LL |      Error\n    |      ^^^^^ the trait `std::cmp::Ord` is not implemented for `Error`"}, {"sha": "e7bc7cf1c435e0a675f44cf41212035bb8ecb690", "filename": "src/test/ui/derives/derives-span-Ord-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(Eq,PartialOrd,PartialEq)]"}, {"sha": "e4dcf29545f12a7777cbf43926d391bad9e8f125", "filename": "src/test/ui/derives/derives-span-Ord-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Ord` is not satisfied\n-  --> $DIR/derives-span-Ord-struct.rs:9:5\n+  --> $DIR/derives-span-Ord-struct.rs:12:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^ the trait `std::cmp::Ord` is not implemented for `Error`"}, {"sha": "3b623558d2af5f4d9d0e002162c99a1aa65ceee9", "filename": "src/test/ui/derives/derives-span-Ord-tuple-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-tuple-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(Eq,PartialOrd,PartialEq)]"}, {"sha": "c21dfc26cb0d3ee011c599e8cc6183aeb7702cae", "filename": "src/test/ui/derives/derives-span-Ord-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-Ord-tuple-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Error: std::cmp::Ord` is not satisfied\n-  --> $DIR/derives-span-Ord-tuple-struct.rs:9:5\n+  --> $DIR/derives-span-Ord-tuple-struct.rs:12:5\n    |\n LL |     Error\n    |     ^^^^^ the trait `std::cmp::Ord` is not implemented for `Error`"}, {"sha": "f935d5802596639b70c28be3bdd543da4d2cf192", "filename": "src/test/ui/derives/derives-span-PartialEq-enum-struct-variant.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum-struct-variant.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "eb4b1c84a601d3f345174b602b4ab00f33adc3db", "filename": "src/test/ui/derives/derives-span-PartialEq-enum-struct-variant.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum-struct-variant.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,13 +1,13 @@\n error[E0369]: binary operation `==` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-enum-struct-variant.rs:10:6\n+  --> $DIR/derives-span-PartialEq-enum-struct-variant.rs:13:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^\n    |\n    = note: an implementation of `std::cmp::PartialEq` might be missing for `Error`\n \n error[E0369]: binary operation `!=` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-enum-struct-variant.rs:10:6\n+  --> $DIR/derives-span-PartialEq-enum-struct-variant.rs:13:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^"}, {"sha": "a0c56818358ff0c263a0463ce9450b6e195deb77", "filename": "src/test/ui/derives/derives-span-PartialEq-enum.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "b63e374d89bf13a13b651a605db17e5f67cce406", "filename": "src/test/ui/derives/derives-span-PartialEq-enum.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-enum.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,13 +1,13 @@\n error[E0369]: binary operation `==` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-enum.rs:10:6\n+  --> $DIR/derives-span-PartialEq-enum.rs:13:6\n    |\n LL |      Error\n    |      ^^^^^\n    |\n    = note: an implementation of `std::cmp::PartialEq` might be missing for `Error`\n \n error[E0369]: binary operation `!=` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-enum.rs:10:6\n+  --> $DIR/derives-span-PartialEq-enum.rs:13:6\n    |\n LL |      Error\n    |      ^^^^^"}, {"sha": "c190dd00396c22889423ef9d4364df2f983abbed", "filename": "src/test/ui/derives/derives-span-PartialEq-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "a147f409639a82f1f327cefcc3355d8452675857", "filename": "src/test/ui/derives/derives-span-PartialEq-struct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,13 +1,13 @@\n error[E0369]: binary operation `==` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-struct.rs:9:5\n+  --> $DIR/derives-span-PartialEq-struct.rs:12:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^\n    |\n    = note: an implementation of `std::cmp::PartialEq` might be missing for `Error`\n \n error[E0369]: binary operation `!=` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-struct.rs:9:5\n+  --> $DIR/derives-span-PartialEq-struct.rs:12:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^"}, {"sha": "dfc9c03ddc7a5c6f671e405fdf82e59948d39380", "filename": "src/test/ui/derives/derives-span-PartialEq-tuple-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-tuple-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n "}, {"sha": "fefbf5f9ec9d17942d5488468f4839735d2a6885", "filename": "src/test/ui/derives/derives-span-PartialEq-tuple-struct.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialEq-tuple-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,13 +1,13 @@\n error[E0369]: binary operation `==` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-tuple-struct.rs:9:5\n+  --> $DIR/derives-span-PartialEq-tuple-struct.rs:12:5\n    |\n LL |     Error\n    |     ^^^^^\n    |\n    = note: an implementation of `std::cmp::PartialEq` might be missing for `Error`\n \n error[E0369]: binary operation `!=` cannot be applied to type `Error`\n-  --> $DIR/derives-span-PartialEq-tuple-struct.rs:9:5\n+  --> $DIR/derives-span-PartialEq-tuple-struct.rs:12:5\n    |\n LL |     Error\n    |     ^^^^^"}, {"sha": "2a5d09d4bb7ee3943f076c5577090b90e452ee16", "filename": "src/test/ui/derives/derives-span-PartialOrd-enum-struct-variant.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum-struct-variant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum-struct-variant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum-struct-variant.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "3f669c20176aa1d52de514603d7518a9e670330b", "filename": "src/test/ui/derives/derives-span-PartialOrd-enum-struct-variant.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum-struct-variant.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum-struct-variant.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum-struct-variant.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: can't compare `Error` with `Error`\n-  --> $DIR/derives-span-PartialOrd-enum-struct-variant.rs:10:6\n+  --> $DIR/derives-span-PartialOrd-enum-struct-variant.rs:13:6\n    |\n LL |      x: Error\n    |      ^^^^^^^^ no implementation for `Error < Error` and `Error > Error`"}, {"sha": "e69c18200d138748bd5a88ab5f39e8c7caf8bebe", "filename": "src/test/ui/derives/derives-span-PartialOrd-enum.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "a78af9e9cf8e43fae74a0bf50aaa49f3b1599f22", "filename": "src/test/ui/derives/derives-span-PartialOrd-enum.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-enum.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: can't compare `Error` with `Error`\n-  --> $DIR/derives-span-PartialOrd-enum.rs:10:6\n+  --> $DIR/derives-span-PartialOrd-enum.rs:13:6\n    |\n LL |      Error\n    |      ^^^^^ no implementation for `Error < Error` and `Error > Error`"}, {"sha": "b5d1df932c5395b01a3782395456f8f24afea079", "filename": "src/test/ui/derives/derives-span-PartialOrd-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "8e85f1a01ffe6a2e3a40d9f74faf45e3e4eca777", "filename": "src/test/ui/derives/derives-span-PartialOrd-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: can't compare `Error` with `Error`\n-  --> $DIR/derives-span-PartialOrd-struct.rs:9:5\n+  --> $DIR/derives-span-PartialOrd-struct.rs:12:5\n    |\n LL |     x: Error\n    |     ^^^^^^^^ no implementation for `Error < Error` and `Error > Error`"}, {"sha": "7dfb33b78e545242ba2299592c8ab3ebbfb52e0f", "filename": "src/test/ui/derives/derives-span-PartialOrd-tuple-struct.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-tuple-struct.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-tuple-struct.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-tuple-struct.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // This file was auto-generated using 'src/etc/generate-deriving-span-tests.py'\n \n #[derive(PartialEq)]"}, {"sha": "bf915781aa5ce6ab72978c10255751a4c084f647", "filename": "src/test/ui/derives/derives-span-PartialOrd-tuple-struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-tuple-struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-tuple-struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fderives%2Fderives-span-PartialOrd-tuple-struct.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: can't compare `Error` with `Error`\n-  --> $DIR/derives-span-PartialOrd-tuple-struct.rs:9:5\n+  --> $DIR/derives-span-PartialOrd-tuple-struct.rs:12:5\n    |\n LL |     Error\n    |     ^^^^^ no implementation for `Error < Error` and `Error > Error`"}, {"sha": "615dd6d2f6f13344d464d2fd3cba60bc6b153fce", "filename": "src/test/ui/impl-trait/impl-generic-mismatch.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n \n use std::fmt::Debug;\n "}, {"sha": "0c294d1e485a88a088f7738b6592cde0801f2811", "filename": "src/test/ui/impl-trait/impl-generic-mismatch.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fimpl-generic-mismatch.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0643]: method `foo` has incompatible signature for trait\n-  --> $DIR/impl-generic-mismatch.rs:10:12\n+  --> $DIR/impl-generic-mismatch.rs:13:12\n    |\n LL |     fn foo(&self, _: &impl Debug);\n    |                       ---------- declaration in trait here\n@@ -13,7 +13,7 @@ LL |     fn foo(&self, _: &impl Debug) { }\n    |          --           ^^^^^^^^^^\n \n error[E0643]: method `bar` has incompatible signature for trait\n-  --> $DIR/impl-generic-mismatch.rs:19:23\n+  --> $DIR/impl-generic-mismatch.rs:22:23\n    |\n LL |     fn bar<U: Debug>(&self, _: &U);\n    |            - declaration in trait here\n@@ -27,7 +27,7 @@ LL |     fn bar<U: Debug>(&self, _: &U) { }\n    |           ^^^^^^^^^^            ^\n \n error[E0643]: method `hash` has incompatible signature for trait\n-  --> $DIR/impl-generic-mismatch.rs:30:33\n+  --> $DIR/impl-generic-mismatch.rs:33:33\n    |\n LL |     fn hash(&self, hasher: &mut impl Hasher) {}\n    |                                 ^^^^^^^^^^^ expected generic parameter, found `impl Trait`"}, {"sha": "8c23def95b8959844fa9940d412faece8f543282", "filename": "src/test/ui/imports/extern-prelude-extern-crate-restricted-shadowing.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // aux-build:two_macros.rs\n \n macro_rules! define_vec {"}, {"sha": "245013a4ea43eb6ebe66447091b059f105bbc218", "filename": "src/test/ui/imports/extern-prelude-extern-crate-restricted-shadowing.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimports%2Fextern-prelude-extern-crate-restricted-shadowing.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error: macro-expanded `extern crate` items cannot shadow names passed with `--extern`\n-  --> $DIR/extern-prelude-extern-crate-restricted-shadowing.rs:20:9\n+  --> $DIR/extern-prelude-extern-crate-restricted-shadowing.rs:23:9\n    |\n LL |         extern crate std as core;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -8,13 +8,13 @@ LL | define_other_core!();\n    | --------------------- in this macro invocation\n \n error[E0659]: `Vec` is ambiguous (macro-expanded name vs less macro-expanded name from outer scope during import/macro resolution)\n-  --> $DIR/extern-prelude-extern-crate-restricted-shadowing.rs:14:9\n+  --> $DIR/extern-prelude-extern-crate-restricted-shadowing.rs:17:9\n    |\n LL |         Vec::panic!();\n    |         ^^^ ambiguous name\n    |\n note: `Vec` could refer to the crate imported here\n-  --> $DIR/extern-prelude-extern-crate-restricted-shadowing.rs:6:9\n+  --> $DIR/extern-prelude-extern-crate-restricted-shadowing.rs:9:9\n    |\n LL |         extern crate std as Vec;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "b07a7f107da237ef551522a9c6f47bd45ee5038e", "filename": "src/test/ui/in-band-lifetimes/mismatched_trait_impl-2.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n use std::ops::Deref;\n trait Trait {}\n "}, {"sha": "374e308a639ce8b6d4c27cf751cdc0f426303982", "filename": "src/test/ui/in-band-lifetimes/mismatched_trait_impl-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fin-band-lifetimes%2Fmismatched_trait_impl-2.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error: `impl` item signature doesn't match `trait` item signature\n-  --> $DIR/mismatched_trait_impl-2.rs:9:5\n+  --> $DIR/mismatched_trait_impl-2.rs:12:5\n    |\n LL |     fn deref(&self) -> &dyn Trait {\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ found fn(&Struct) -> &dyn Trait"}, {"sha": "e6586de4ab611691b3f1ba437e80cfba09191d8e", "filename": "src/test/ui/interior-mutability/interior-mutability.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n use std::cell::Cell;\n use std::panic::catch_unwind;\n fn main() {"}, {"sha": "2378e412172a53c4335d88b5e569ce00f249fcc6", "filename": "src/test/ui/interior-mutability/interior-mutability.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finterior-mutability%2Finterior-mutability.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the type `std::cell::UnsafeCell<i32>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary\n-  --> $DIR/interior-mutability.rs:6:5\n+  --> $DIR/interior-mutability.rs:9:5\n    |\n LL |     catch_unwind(|| { x.set(23); });\n    |     ^^^^^^^^^^^^ `std::cell::UnsafeCell<i32>` may contain interior mutability and a reference may not be safely transferrable across a catch_unwind boundary\n@@ -12,7 +12,7 @@ LL | pub fn catch_unwind<F: FnOnce() -> R + UnwindSafe, R>(f: F) -> Result<R> {\n    = help: within `std::cell::Cell<i32>`, the trait `std::panic::RefUnwindSafe` is not implemented for `std::cell::UnsafeCell<i32>`\n    = note: required because it appears within the type `std::cell::Cell<i32>`\n    = note: required because of the requirements on the impl of `std::panic::UnwindSafe` for `&std::cell::Cell<i32>`\n-   = note: required because it appears within the type `[closure@$DIR/interior-mutability.rs:6:18: 6:35 x:&std::cell::Cell<i32>]`\n+   = note: required because it appears within the type `[closure@$DIR/interior-mutability.rs:9:18: 9:35 x:&std::cell::Cell<i32>]`\n \n error: aborting due to previous error\n "}, {"sha": "a13b7783370a82406a2382b337584870671eea62", "filename": "src/test/ui/issues/issue-21160.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fissues%2Fissue-21160.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fissues%2Fissue-21160.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21160.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n struct Bar;\n \n impl Bar {"}, {"sha": "a7bb4fc512874b363a2dda7aa3b47fcb18d0c3f2", "filename": "src/test/ui/issues/issue-21160.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fissues%2Fissue-21160.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fissues%2Fissue-21160.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-21160.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the trait bound `Bar: std::hash::Hash` is not satisfied\n-  --> $DIR/issue-21160.rs:9:12\n+  --> $DIR/issue-21160.rs:12:12\n    |\n LL | struct Foo(Bar);\n    |            ^^^ the trait `std::hash::Hash` is not implemented for `Bar`"}, {"sha": "2798e510904078fc7f3bb727a862bed8e8695184", "filename": "src/test/ui/issues/issue-27033.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fissues%2Fissue-27033.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fissues%2Fissue-27033.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27033.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n fn main() {\n     match Some(1) {\n         None @ _ => {} //~ ERROR match bindings cannot shadow unit variants"}, {"sha": "c0de0f14268a79086453fc0c627dccb0d80e5051", "filename": "src/test/ui/issues/issue-27033.stderr", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fissues%2Fissue-27033.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fissues%2Fissue-27033.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissues%2Fissue-27033.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0530]: match bindings cannot shadow unit variants\n-  --> $DIR/issue-27033.rs:4:9\n+  --> $DIR/issue-27033.rs:7:9\n    |\n LL |         None @ _ => {}\n    |         ^^^^ cannot be named the same as a unit variant\n@@ -10,7 +10,7 @@ LL | pub use crate::option::Option::{self, None, Some};\n    |                                       ---- the unit variant `None` is defined here\n \n error[E0530]: match bindings cannot shadow constants\n-  --> $DIR/issue-27033.rs:8:9\n+  --> $DIR/issue-27033.rs:11:9\n    |\n LL |     const C: u8 = 1;\n    |     ---------------- the constant `C` is defined here"}, {"sha": "6a1965f7cd358fd55cbb77136b3c33f0a0c2afca", "filename": "src/test/ui/no-send-res-ports.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fno-send-res-ports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fno-send-res-ports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fno-send-res-ports.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n use std::thread;\n use std::rc::Rc;\n "}, {"sha": "8cb690a35c874fef541483a04633c0c65b9e0925", "filename": "src/test/ui/no-send-res-ports.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fno-send-res-ports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Fno-send-res-ports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fno-send-res-ports.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `std::rc::Rc<()>` cannot be sent between threads safely\n-  --> $DIR/no-send-res-ports.rs:26:5\n+  --> $DIR/no-send-res-ports.rs:29:5\n    |\n LL |     thread::spawn(move|| {\n    |     ^^^^^^^^^^^^^ `std::rc::Rc<()>` cannot be sent between threads safely\n@@ -9,10 +9,10 @@ LL |     thread::spawn(move|| {\n LL |     F: Send + 'static,\n    |        ---- required by this bound in `std::thread::spawn`\n    |\n-   = help: within `[closure@$DIR/no-send-res-ports.rs:26:19: 30:6 x:main::Foo]`, the trait `std::marker::Send` is not implemented for `std::rc::Rc<()>`\n+   = help: within `[closure@$DIR/no-send-res-ports.rs:29:19: 33:6 x:main::Foo]`, the trait `std::marker::Send` is not implemented for `std::rc::Rc<()>`\n    = note: required because it appears within the type `Port<()>`\n    = note: required because it appears within the type `main::Foo`\n-   = note: required because it appears within the type `[closure@$DIR/no-send-res-ports.rs:26:19: 30:6 x:main::Foo]`\n+   = note: required because it appears within the type `[closure@$DIR/no-send-res-ports.rs:29:19: 33:6 x:main::Foo]`\n \n error: aborting due to previous error\n "}, {"sha": "519fb75be55aa4824c1146441e329134e56b2cd8", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-test-wrong-type.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,8 @@\n // compile-flags: --test\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n \n use std::num::ParseFloatError;\n "}, {"sha": "ed4f34b527fcbe3f61013c6a518d0a04cdb0bb01", "filename": "src/test/ui/rfc-1937-termination-trait/termination-trait-test-wrong-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Frfc-1937-termination-trait%2Ftermination-trait-test-wrong-type.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: `main` has invalid return type `std::result::Result<f32, std::num::ParseFloatError>`\n-  --> $DIR/termination-trait-test-wrong-type.rs:7:1\n+  --> $DIR/termination-trait-test-wrong-type.rs:10:1\n    |\n LL | / fn can_parse_zero_as_f32() -> Result<f32, ParseFloatError> {\n LL | |     \"0\".parse()"}, {"sha": "5b34ed0919001718d9f48b58a86c66a25aa45814", "filename": "src/test/ui/traits/trait-suggest-where-clause.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-where-clause.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-where-clause.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-where-clause.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,4 +1,7 @@\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n use std::mem;\n \n struct Misc<T:?Sized>(T);"}, {"sha": "831dd439298d9755bf482b63108399357671f8de", "filename": "src/test/ui/traits/trait-suggest-where-clause.stderr", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-where-clause.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-where-clause.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftraits%2Ftrait-suggest-where-clause.stderr?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,5 @@\n error[E0277]: the size for values of type `U` cannot be known at compilation time\n-  --> $DIR/trait-suggest-where-clause.rs:8:20\n+  --> $DIR/trait-suggest-where-clause.rs:11:20\n    |\n LL | fn check<T: Iterator, U: ?Sized>() {\n    |                       -- help: consider further restricting this bound: `U: std::marker::Sized +`\n@@ -16,7 +16,7 @@ LL | pub const fn size_of<T>() -> usize {\n    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n \n error[E0277]: the size for values of type `U` cannot be known at compilation time\n-  --> $DIR/trait-suggest-where-clause.rs:11:5\n+  --> $DIR/trait-suggest-where-clause.rs:14:5\n    |\n LL | fn check<T: Iterator, U: ?Sized>() {\n    |                       -- help: consider further restricting this bound: `U: std::marker::Sized +`\n@@ -34,31 +34,31 @@ LL | pub const fn size_of<T>() -> usize {\n    = note: required because it appears within the type `Misc<U>`\n \n error[E0277]: the trait bound `u64: std::convert::From<T>` is not satisfied\n-  --> $DIR/trait-suggest-where-clause.rs:16:5\n+  --> $DIR/trait-suggest-where-clause.rs:19:5\n    |\n LL |     <u64 as From<T>>::from;\n    |     ^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<T>` is not implemented for `u64`\n    |\n    = note: required by `std::convert::From::from`\n \n error[E0277]: the trait bound `u64: std::convert::From<<T as std::iter::Iterator>::Item>` is not satisfied\n-  --> $DIR/trait-suggest-where-clause.rs:19:5\n+  --> $DIR/trait-suggest-where-clause.rs:22:5\n    |\n LL |     <u64 as From<<T as Iterator>::Item>>::from;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<<T as std::iter::Iterator>::Item>` is not implemented for `u64`\n    |\n    = note: required by `std::convert::From::from`\n \n error[E0277]: the trait bound `Misc<_>: std::convert::From<T>` is not satisfied\n-  --> $DIR/trait-suggest-where-clause.rs:24:5\n+  --> $DIR/trait-suggest-where-clause.rs:27:5\n    |\n LL |     <Misc<_> as From<T>>::from;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<T>` is not implemented for `Misc<_>`\n    |\n    = note: required by `std::convert::From::from`\n \n error[E0277]: the size for values of type `[T]` cannot be known at compilation time\n-  --> $DIR/trait-suggest-where-clause.rs:29:20\n+  --> $DIR/trait-suggest-where-clause.rs:32:20\n    |\n LL |     mem::size_of::<[T]>();\n    |                    ^^^ doesn't have a size known at compile-time\n@@ -72,7 +72,7 @@ LL | pub const fn size_of<T>() -> usize {\n    = note: to learn more, visit <https://doc.rust-lang.org/book/ch19-04-advanced-types.html#dynamically-sized-types-and-the-sized-trait>\n \n error[E0277]: the size for values of type `[&U]` cannot be known at compilation time\n-  --> $DIR/trait-suggest-where-clause.rs:32:5\n+  --> $DIR/trait-suggest-where-clause.rs:35:5\n    |\n LL |     mem::size_of::<[&U]>();\n    |     ^^^^^^^^^^^^^^^^^^^^ doesn't have a size known at compile-time"}, {"sha": "0ecd5cf5fafaa9bf575305a92f33abd3a93e8918", "filename": "src/test/ui/type_length_limit.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Ftype_length_limit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftest%2Fui%2Ftype_length_limit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype_length_limit.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -1,5 +1,8 @@\n // build-fail\n-// ignore-x86 FIXME: missing sysroot spans (#53081)\n+// FIXME: missing sysroot spans (#53081)\n+// ignore-i586-unknown-linux-gnu\n+// ignore-i586-unknown-linux-musl\n+// ignore-i686-unknown-linux-musl\n // error-pattern: reached the type-length limit while instantiating\n \n // Test that the type length limit can be changed."}, {"sha": "093ee662ce446bf0c4d34e0b72457f557c39c48c", "filename": "src/tools/compiletest/src/header.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "raw_url": "https://github.com/rust-lang/rust/raw/00fc203b659767f5c42c3e258fe31f8ae4355abc/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fcompiletest%2Fsrc%2Fheader.rs?ref=00fc203b659767f5c42c3e258fe31f8ae4355abc", "patch": "@@ -897,6 +897,7 @@ impl Config {\n             let name = line[prefix.len() + 1..].split(&[':', ' '][..]).next().unwrap();\n \n             if name == \"test\" ||\n+                &self.target == name ||                             // triple\n                 util::matches_os(&self.target, name) ||             // target\n                 util::matches_env(&self.target, name) ||            // env\n                 name == util::get_arch(&self.target) ||             // architecture"}]}