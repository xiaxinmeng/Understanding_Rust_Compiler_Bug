{"sha": "4a0f8d517529cdaca6750966536052b5104b05be", "node_id": "C_kwDOAAsO6NoAKDRhMGY4ZDUxNzUyOWNkYWNhNjc1MDk2NjUzNjA1MmI1MTA0YjA1YmU", "commit": {"author": {"name": "rainy-me", "email": "github@yue.coffee", "date": "2022-04-13T18:22:02Z"}, "committer": {"name": "rainy-me", "email": "github@yue.coffee", "date": "2022-04-13T18:22:02Z"}, "message": "improve diagnostics for unterminated nested block comment", "tree": {"sha": "88ec8589c1597aa672f500cd7111aa71c164aef6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/88ec8589c1597aa672f500cd7111aa71c164aef6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4a0f8d517529cdaca6750966536052b5104b05be", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4a0f8d517529cdaca6750966536052b5104b05be", "html_url": "https://github.com/rust-lang/rust/commit/4a0f8d517529cdaca6750966536052b5104b05be", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4a0f8d517529cdaca6750966536052b5104b05be/comments", "author": {"login": "yue4u", "id": 26110087, "node_id": "MDQ6VXNlcjI2MTEwMDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26110087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yue4u", "html_url": "https://github.com/yue4u", "followers_url": "https://api.github.com/users/yue4u/followers", "following_url": "https://api.github.com/users/yue4u/following{/other_user}", "gists_url": "https://api.github.com/users/yue4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/yue4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yue4u/subscriptions", "organizations_url": "https://api.github.com/users/yue4u/orgs", "repos_url": "https://api.github.com/users/yue4u/repos", "events_url": "https://api.github.com/users/yue4u/events{/privacy}", "received_events_url": "https://api.github.com/users/yue4u/received_events", "type": "User", "site_admin": false}, "committer": {"login": "yue4u", "id": 26110087, "node_id": "MDQ6VXNlcjI2MTEwMDg3", "avatar_url": "https://avatars.githubusercontent.com/u/26110087?v=4", "gravatar_id": "", "url": "https://api.github.com/users/yue4u", "html_url": "https://github.com/yue4u", "followers_url": "https://api.github.com/users/yue4u/followers", "following_url": "https://api.github.com/users/yue4u/following{/other_user}", "gists_url": "https://api.github.com/users/yue4u/gists{/gist_id}", "starred_url": "https://api.github.com/users/yue4u/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/yue4u/subscriptions", "organizations_url": "https://api.github.com/users/yue4u/orgs", "repos_url": "https://api.github.com/users/yue4u/repos", "events_url": "https://api.github.com/users/yue4u/events{/privacy}", "received_events_url": "https://api.github.com/users/yue4u/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "399dd8049d4b27329350937e3e17077205bdc0bf", "url": "https://api.github.com/repos/rust-lang/rust/commits/399dd8049d4b27329350937e3e17077205bdc0bf", "html_url": "https://github.com/rust-lang/rust/commit/399dd8049d4b27329350937e3e17077205bdc0bf"}], "stats": {"total": 88, "additions": 78, "deletions": 10}, "files": [{"sha": "96513958eb06ba514526bce0f9aba95e1cf9ba34", "filename": "compiler/rustc_parse/src/lexer/mod.rs", "status": "modified", "additions": 53, "deletions": 10, "changes": 63, "blob_url": "https://github.com/rust-lang/rust/blob/4a0f8d517529cdaca6750966536052b5104b05be/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a0f8d517529cdaca6750966536052b5104b05be/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Flexer%2Fmod.rs?ref=4a0f8d517529cdaca6750966536052b5104b05be", "patch": "@@ -182,16 +182,7 @@ impl<'a> StringReader<'a> {\n             }\n             rustc_lexer::TokenKind::BlockComment { doc_style, terminated } => {\n                 if !terminated {\n-                    let msg = match doc_style {\n-                        Some(_) => \"unterminated block doc-comment\",\n-                        None => \"unterminated block comment\",\n-                    };\n-                    let last_bpos = self.pos;\n-                    self.sess.span_diagnostic.span_fatal_with_code(\n-                        self.mk_sp(start, last_bpos),\n-                        msg,\n-                        error_code!(E0758),\n-                    );\n+                    self.report_unterminated_block_comment(start, doc_style);\n                 }\n \n                 // Skip non-doc comments\n@@ -553,6 +544,58 @@ impl<'a> StringReader<'a> {\n         err.emit()\n     }\n \n+    fn report_unterminated_block_comment(&self, start: BytePos, doc_style: Option<DocStyle>) {\n+        let msg = match doc_style {\n+            Some(_) => \"unterminated block doc-comment\",\n+            None => \"unterminated block comment\",\n+        };\n+        let last_bpos = self.pos;\n+        let mut err = self.sess.span_diagnostic.struct_span_fatal_with_code(\n+            self.mk_sp(start, last_bpos),\n+            msg,\n+            error_code!(E0758),\n+        );\n+        let mut nested_block_comment_open_idxs = vec![];\n+        let mut last_nested_block_comment_idxs = None;\n+        let mut content_chars = self.str_from(start).char_indices();\n+\n+        if let Some((_, mut last_char)) = content_chars.next() {\n+            while let Some((idx, c)) = content_chars.next() {\n+                match c {\n+                    '*' if last_char == '/' => {\n+                        nested_block_comment_open_idxs.push(idx);\n+                    }\n+                    '/' if last_char == '*' => {\n+                        last_nested_block_comment_idxs =\n+                            nested_block_comment_open_idxs.pop().map(|open_idx| (open_idx, idx));\n+                    }\n+                    _ => {}\n+                };\n+                last_char = c;\n+            }\n+        }\n+\n+        if let Some((nested_open_idx, nested_close_idx)) = last_nested_block_comment_idxs {\n+            err.span_label(self.mk_sp(start, start + BytePos(2)), msg)\n+                .span_label(\n+                    self.mk_sp(\n+                        start + BytePos(nested_open_idx as u32 - 1),\n+                        start + BytePos(nested_open_idx as u32 + 1),\n+                    ),\n+                    \"...as last nested comment starts here, maybe you want to close this instead?\",\n+                )\n+                .span_label(\n+                    self.mk_sp(\n+                        start + BytePos(nested_close_idx as u32 - 1),\n+                        start + BytePos(nested_close_idx as u32 + 1),\n+                    ),\n+                    \"...and last nested comment terminates here\",\n+                );\n+        }\n+\n+        err.emit();\n+    }\n+\n     // RFC 3101 introduced the idea of (reserved) prefixes. As of Rust 2021,\n     // using a (unknown) prefix is an error. In earlier editions, however, they\n     // only result in a (allowed by default) lint, and are treated as regular"}, {"sha": "db5f2f3ba1358857690e58e5cb1d205e302f31b8", "filename": "src/test/ui/unterminated-nested-comment.rs", "status": "added", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/4a0f8d517529cdaca6750966536052b5104b05be/src%2Ftest%2Fui%2Funterminated-nested-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4a0f8d517529cdaca6750966536052b5104b05be/src%2Ftest%2Fui%2Funterminated-nested-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funterminated-nested-comment.rs?ref=4a0f8d517529cdaca6750966536052b5104b05be", "patch": "@@ -0,0 +1,4 @@\n+/* //~ ERROR E0758\n+/* */\n+/*\n+*/"}, {"sha": "eda8f2dcd24694c0b51c769944df1cf3acab9840", "filename": "src/test/ui/unterminated-nested-comment.stderr", "status": "added", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/4a0f8d517529cdaca6750966536052b5104b05be/src%2Ftest%2Fui%2Funterminated-nested-comment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/4a0f8d517529cdaca6750966536052b5104b05be/src%2Ftest%2Fui%2Funterminated-nested-comment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Funterminated-nested-comment.stderr?ref=4a0f8d517529cdaca6750966536052b5104b05be", "patch": "@@ -0,0 +1,21 @@\n+error[E0758]: unterminated block comment\n+  --> $DIR/unterminated-nested-comment.rs:1:1\n+   |\n+LL |   /*\n+   |   ^-\n+   |   |\n+   |  _unterminated block comment\n+   | |\n+LL | | /* */\n+LL | | /*\n+   | | --\n+   | | |\n+   | | ...as last nested comment starts here, maybe you want to close this instead?\n+LL | | */\n+   | |_--^\n+   |   |\n+   |   ...and last nested comment terminates here\n+\n+error: aborting due to previous error\n+\n+For more information about this error, try `rustc --explain E0758`."}]}