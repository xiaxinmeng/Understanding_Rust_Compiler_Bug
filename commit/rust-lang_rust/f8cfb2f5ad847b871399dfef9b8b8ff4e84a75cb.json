{"sha": "f8cfb2f5ad847b871399dfef9b8b8ff4e84a75cb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY4Y2ZiMmY1YWQ4NDdiODcxMzk5ZGZlZjliOGI4ZmY0ZTg0YTc1Y2I=", "commit": {"author": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-09-04T00:00:00Z"}, "committer": {"name": "Tomasz Mi\u0105sko", "email": "tomasz.miasko@gmail.com", "date": "2020-09-04T00:00:00Z"}, "message": "Add tests for overflow in String / VecDeque operations using ranges", "tree": {"sha": "27fc68092fa517bc10b36d4f1ce485bf3e15e6df", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/27fc68092fa517bc10b36d4f1ce485bf3e15e6df"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f8cfb2f5ad847b871399dfef9b8b8ff4e84a75cb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f8cfb2f5ad847b871399dfef9b8b8ff4e84a75cb", "html_url": "https://github.com/rust-lang/rust/commit/f8cfb2f5ad847b871399dfef9b8b8ff4e84a75cb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f8cfb2f5ad847b871399dfef9b8b8ff4e84a75cb/comments", "author": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "committer": {"login": "tmiasko", "id": 51362316, "node_id": "MDQ6VXNlcjUxMzYyMzE2", "avatar_url": "https://avatars.githubusercontent.com/u/51362316?v=4", "gravatar_id": "", "url": "https://api.github.com/users/tmiasko", "html_url": "https://github.com/tmiasko", "followers_url": "https://api.github.com/users/tmiasko/followers", "following_url": "https://api.github.com/users/tmiasko/following{/other_user}", "gists_url": "https://api.github.com/users/tmiasko/gists{/gist_id}", "starred_url": "https://api.github.com/users/tmiasko/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/tmiasko/subscriptions", "organizations_url": "https://api.github.com/users/tmiasko/orgs", "repos_url": "https://api.github.com/users/tmiasko/repos", "events_url": "https://api.github.com/users/tmiasko/events{/privacy}", "received_events_url": "https://api.github.com/users/tmiasko/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d98bac4e4e3cc87ec9b848c173d570ebe2aa30b6", "url": "https://api.github.com/repos/rust-lang/rust/commits/d98bac4e4e3cc87ec9b848c173d570ebe2aa30b6", "html_url": "https://github.com/rust-lang/rust/commit/d98bac4e4e3cc87ec9b848c173d570ebe2aa30b6"}], "stats": {"total": 45, "additions": 45, "deletions": 0}, "files": [{"sha": "a6912d3f5bcc39cc44e4d6c77b1a51264faf3b78", "filename": "library/alloc/tests/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/f8cfb2f5ad847b871399dfef9b8b8ff4e84a75cb/library%2Falloc%2Ftests%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8cfb2f5ad847b871399dfef9b8b8ff4e84a75cb/library%2Falloc%2Ftests%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Flib.rs?ref=f8cfb2f5ad847b871399dfef9b8b8ff4e84a75cb", "patch": "@@ -14,6 +14,7 @@\n #![feature(slice_ptr_get)]\n #![feature(split_inclusive)]\n #![feature(binary_heap_retain)]\n+#![feature(deque_range)]\n #![feature(inplace_iteration)]\n #![feature(iter_map_while)]\n "}, {"sha": "e2eb042f791723e860a265860c4f6135f395802f", "filename": "library/alloc/tests/string.rs", "status": "modified", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/f8cfb2f5ad847b871399dfef9b8b8ff4e84a75cb/library%2Falloc%2Ftests%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8cfb2f5ad847b871399dfef9b8b8ff4e84a75cb/library%2Falloc%2Ftests%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fstring.rs?ref=f8cfb2f5ad847b871399dfef9b8b8ff4e84a75cb", "patch": "@@ -1,6 +1,7 @@\n use std::borrow::Cow;\n use std::collections::TryReserveError::*;\n use std::mem::size_of;\n+use std::ops::Bound::*;\n \n pub trait IntoCow<'a, B: ?Sized>\n where\n@@ -463,6 +464,20 @@ fn test_drain() {\n     assert_eq!(t, \"\");\n }\n \n+#[test]\n+#[should_panic]\n+fn test_drain_start_overflow() {\n+    let mut s = String::from(\"abc\");\n+    s.drain((Excluded(usize::MAX), Included(0)));\n+}\n+\n+#[test]\n+#[should_panic]\n+fn test_drain_end_overflow() {\n+    let mut s = String::from(\"abc\");\n+    s.drain((Included(0), Included(usize::MAX)));\n+}\n+\n #[test]\n fn test_replace_range() {\n     let mut s = \"Hello, world!\".to_owned();\n@@ -500,6 +515,20 @@ fn test_replace_range_inclusive_out_of_bounds() {\n     s.replace_range(5..=5, \"789\");\n }\n \n+#[test]\n+#[should_panic]\n+fn test_replace_range_start_overflow() {\n+    let mut s = String::from(\"123\");\n+    s.replace_range((Excluded(usize::MAX), Included(0)), \"\");\n+}\n+\n+#[test]\n+#[should_panic]\n+fn test_replace_range_end_overflow() {\n+    let mut s = String::from(\"456\");\n+    s.replace_range((Included(0), Included(usize::MAX)), \"\");\n+}\n+\n #[test]\n fn test_replace_range_empty() {\n     let mut s = String::from(\"12345\");"}, {"sha": "46d8a3c4cb4931126d578fd51d675e3f8758ff79", "filename": "library/alloc/tests/vec_deque.rs", "status": "modified", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/f8cfb2f5ad847b871399dfef9b8b8ff4e84a75cb/library%2Falloc%2Ftests%2Fvec_deque.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f8cfb2f5ad847b871399dfef9b8b8ff4e84a75cb/library%2Falloc%2Ftests%2Fvec_deque.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec_deque.rs?ref=f8cfb2f5ad847b871399dfef9b8b8ff4e84a75cb", "patch": "@@ -2,6 +2,7 @@ use std::collections::TryReserveError::*;\n use std::collections::{vec_deque::Drain, VecDeque};\n use std::fmt::Debug;\n use std::mem::size_of;\n+use std::ops::Bound::*;\n use std::panic::{catch_unwind, AssertUnwindSafe};\n \n use crate::hash;\n@@ -115,6 +116,20 @@ fn test_index_out_of_bounds() {\n     deq[3];\n }\n \n+#[test]\n+#[should_panic]\n+fn test_range_start_overflow() {\n+    let deq = VecDeque::from(vec![1, 2, 3]);\n+    deq.range((Included(0), Included(usize::MAX)));\n+}\n+\n+#[test]\n+#[should_panic]\n+fn test_range_end_overflow() {\n+    let deq = VecDeque::from(vec![1, 2, 3]);\n+    deq.range((Excluded(usize::MAX), Included(0)));\n+}\n+\n #[derive(Clone, PartialEq, Debug)]\n enum Taggy {\n     One(i32),"}]}