{"sha": "282b40249e158376fcc4682879be40fb80c4e36f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI4MmI0MDI0OWUxNTgzNzZmY2M0NjgyODc5YmU0MGZiODBjNGUzNmY=", "commit": {"author": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-05-16T07:21:30Z"}, "committer": {"name": "Andre Bogus", "email": "bogusandre@gmail.com", "date": "2017-05-16T07:21:30Z"}, "message": "(hopefully) fix pprust error", "tree": {"sha": "73414480cab34616288839fc5970912e39b8d4d8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/73414480cab34616288839fc5970912e39b8d4d8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/282b40249e158376fcc4682879be40fb80c4e36f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/282b40249e158376fcc4682879be40fb80c4e36f", "html_url": "https://github.com/rust-lang/rust/commit/282b40249e158376fcc4682879be40fb80c4e36f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/282b40249e158376fcc4682879be40fb80c4e36f/comments", "author": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "committer": {"login": "llogiq", "id": 4200835, "node_id": "MDQ6VXNlcjQyMDA4MzU=", "avatar_url": "https://avatars.githubusercontent.com/u/4200835?v=4", "gravatar_id": "", "url": "https://api.github.com/users/llogiq", "html_url": "https://github.com/llogiq", "followers_url": "https://api.github.com/users/llogiq/followers", "following_url": "https://api.github.com/users/llogiq/following{/other_user}", "gists_url": "https://api.github.com/users/llogiq/gists{/gist_id}", "starred_url": "https://api.github.com/users/llogiq/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/llogiq/subscriptions", "organizations_url": "https://api.github.com/users/llogiq/orgs", "repos_url": "https://api.github.com/users/llogiq/repos", "events_url": "https://api.github.com/users/llogiq/events{/privacy}", "received_events_url": "https://api.github.com/users/llogiq/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "958c67d9c8ca74370e2052fd8a3d209b8184d1f4", "url": "https://api.github.com/repos/rust-lang/rust/commits/958c67d9c8ca74370e2052fd8a3d209b8184d1f4", "html_url": "https://github.com/rust-lang/rust/commit/958c67d9c8ca74370e2052fd8a3d209b8184d1f4"}], "stats": {"total": 4, "additions": 3, "deletions": 1}, "files": [{"sha": "83c289ff80b9251bd2df854ebed1207b7f5a09f0", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/282b40249e158376fcc4682879be40fb80c4e36f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/282b40249e158376fcc4682879be40fb80c4e36f/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=282b40249e158376fcc4682879be40fb80c4e36f", "patch": "@@ -961,9 +961,11 @@ impl<'a> State<'a> {\n     {\n         self.rbox(0, b)?;\n         let len = elts.len();\n-        for (i, elt) in elts.iter().enumerate() {\n+        let mut i = 0;\n+        for elt in elts {\n             self.maybe_print_comment(get_span(elt).hi)?;\n             op(self, elt)?;\n+            i += 1;\n             if i < len {\n                 word(&mut self.s, \",\")?;\n                 self.maybe_print_trailing_comment(get_span(elt),"}]}