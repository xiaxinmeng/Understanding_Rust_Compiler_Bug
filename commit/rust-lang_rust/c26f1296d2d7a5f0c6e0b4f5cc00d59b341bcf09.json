{"sha": "c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09", "node_id": "MDY6Q29tbWl0NzI0NzEyOmMyNmYxMjk2ZDJkN2E1ZjBjNmUwYjRmNWNjMDBkNTliMzQxYmNmMDk=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-09-25T14:26:14Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-09-25T14:26:14Z"}, "message": "Rollup merge of #62975 - ljedrz:kill_off_hir_to_node_id, r=Zoxc\n\nAlmost fully deprecate hir::map::Map.hir_to_node_id\n\n- HirIdify `doctree::Module.id`\n- HirIdify `hir::Crate.modules`\n- introduce a `HirId` to `DefIndex` map in `map::Definitions`\n\nThe only last uses of `hir::map::Map.hir_to_node_id` in the compiler are:\n- for the purposes of `driver::pretty` (in `map::nodes_matching_suffix`), but I don't know if we can remove `NodeId`s in there (I think when I attempted it previously there was some issue due to `HirId` not being representable with an integer)\n- in `ty::query::on_disk_cache` (not sure about the purpose of this one)\n- in `mir::transform::check_unsafety` (only important for error message order)\n\nAny suggestions how to kill these off?\n\nr? @Zoxc", "tree": {"sha": "0ad1d924929f83bda0e7db308753b84daced7c0c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0ad1d924929f83bda0e7db308753b84daced7c0c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdi3kGCRBK7hj4Ov3rIwAAdHIIAIpSD6Oodr2jheNOqi5nwzUt\npsVnWtsiCrzKSpVtVQW2JBSq7vcTl7mxope3ZbOsTnDpTNVA6m+yHfnPop8sKfQj\nszWIQqV5n2d6r6K4g63AOIlhD1LB1LlobrtagxpKHmxqJ7h7LG3UuGoRVlNlfHSB\nlWStx0xQM07kAr04rSvHMZ1BGMVt3XBbb0DmAm8GE7A/1uQxhD38zQ1HyWq8OEov\n8UeS9HdfFPQNw3CN7ESAcyP9W2ITlqsjmF4CQD6bzagXfjYTg9d394K6Tn4ehE1a\nE0l0Rskr900ZnKjPvTQgoEX5L6yoH2tPANeE19/olqghFEJXE0FC1B626zX8W5w=\n=ix32\n-----END PGP SIGNATURE-----\n", "payload": "tree 0ad1d924929f83bda0e7db308753b84daced7c0c\nparent acf7b50c737cfb8f4003477559305bedf3c316fe\nparent 9a6ca413714271adac017cbdd764a7de8b244001\nauthor Mazdak Farrokhzad <twingoow@gmail.com> 1569421574 +0200\ncommitter GitHub <noreply@github.com> 1569421574 +0200\n\nRollup merge of #62975 - ljedrz:kill_off_hir_to_node_id, r=Zoxc\n\nAlmost fully deprecate hir::map::Map.hir_to_node_id\n\n- HirIdify `doctree::Module.id`\n- HirIdify `hir::Crate.modules`\n- introduce a `HirId` to `DefIndex` map in `map::Definitions`\n\nThe only last uses of `hir::map::Map.hir_to_node_id` in the compiler are:\n- for the purposes of `driver::pretty` (in `map::nodes_matching_suffix`), but I don't know if we can remove `NodeId`s in there (I think when I attempted it previously there was some issue due to `HirId` not being representable with an integer)\n- in `ty::query::on_disk_cache` (not sure about the purpose of this one)\n- in `mir::transform::check_unsafety` (only important for error message order)\n\nAny suggestions how to kill these off?\n\nr? @Zoxc\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09", "html_url": "https://github.com/rust-lang/rust/commit/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "acf7b50c737cfb8f4003477559305bedf3c316fe", "url": "https://api.github.com/repos/rust-lang/rust/commits/acf7b50c737cfb8f4003477559305bedf3c316fe", "html_url": "https://github.com/rust-lang/rust/commit/acf7b50c737cfb8f4003477559305bedf3c316fe"}, {"sha": "9a6ca413714271adac017cbdd764a7de8b244001", "url": "https://api.github.com/repos/rust-lang/rust/commits/9a6ca413714271adac017cbdd764a7de8b244001", "html_url": "https://github.com/rust-lang/rust/commit/9a6ca413714271adac017cbdd764a7de8b244001"}], "stats": {"total": 43, "additions": 22, "deletions": 21}, "files": [{"sha": "25e4b03a604aaafb2531825a436262b024652cb4", "filename": "src/librustc/hir/lowering.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc%2Fhir%2Flowering.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc%2Fhir%2Flowering.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering.rs?ref=c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09", "patch": "@@ -97,7 +97,7 @@ pub struct LoweringContext<'a> {\n \n     trait_impls: BTreeMap<DefId, Vec<hir::HirId>>,\n \n-    modules: BTreeMap<NodeId, hir::ModuleItems>,\n+    modules: BTreeMap<hir::HirId, hir::ModuleItems>,\n \n     generator_kind: Option<hir::GeneratorKind>,\n \n@@ -141,7 +141,7 @@ pub struct LoweringContext<'a> {\n     /// vector.\n     in_scope_lifetimes: Vec<ParamName>,\n \n-    current_module: NodeId,\n+    current_module: hir::HirId,\n \n     type_def_lifetime_params: DefIdMap<usize>,\n \n@@ -262,7 +262,7 @@ pub fn lower_crate(\n         is_in_dyn_type: false,\n         anonymous_lifetime_mode: AnonymousLifetimeMode::PassThrough,\n         type_def_lifetime_params: Default::default(),\n-        current_module: CRATE_NODE_ID,\n+        current_module: hir::CRATE_HIR_ID,\n         current_hir_id_owner: vec![(CRATE_DEF_INDEX, 0)],\n         item_local_id_counters: Default::default(),\n         node_id_to_hir_id: IndexVec::new(),"}, {"sha": "5a8d5daaf09b89e80847cd1414df3b250eaa4d1b", "filename": "src/librustc/hir/lowering/item.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Flowering%2Fitem.rs?ref=c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09", "patch": "@@ -45,14 +45,16 @@ impl<'tcx, 'interner> ItemLowerer<'tcx, 'interner> {\n \n impl<'tcx, 'interner> Visitor<'tcx> for ItemLowerer<'tcx, 'interner> {\n     fn visit_mod(&mut self, m: &'tcx Mod, _s: Span, _attrs: &[Attribute], n: NodeId) {\n-        self.lctx.modules.insert(n, hir::ModuleItems {\n+        let hir_id = self.lctx.lower_node_id(n);\n+\n+        self.lctx.modules.insert(hir_id, hir::ModuleItems {\n             items: BTreeSet::new(),\n             trait_items: BTreeSet::new(),\n             impl_items: BTreeSet::new(),\n         });\n \n         let old = self.lctx.current_module;\n-        self.lctx.current_module = n;\n+        self.lctx.current_module = hir_id;\n         visit::walk_mod(self, m);\n         self.lctx.current_module = old;\n     }"}, {"sha": "b66c2ce1178a4aae1207c59003ca107a1ee94b26", "filename": "src/librustc/hir/map/hir_id_validator.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc%2Fhir%2Fmap%2Fhir_id_validator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc%2Fhir%2Fmap%2Fhir_id_validator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fhir_id_validator.rs?ref=c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09", "patch": "@@ -10,7 +10,7 @@ pub fn check_crate(hir_map: &hir::map::Map<'_>) {\n     let errors = Lock::new(Vec::new());\n \n     par_iter(&hir_map.krate().modules).for_each(|(module_id, _)| {\n-        let local_def_id = hir_map.local_def_id_from_node_id(*module_id);\n+        let local_def_id = hir_map.local_def_id(*module_id);\n         hir_map.visit_item_likes_in_module(local_def_id, &mut OuterVisitor {\n             hir_map,\n             errors: &errors,"}, {"sha": "956cb36c6b1396b604dee2354ae55f1b517d7484", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09", "patch": "@@ -536,9 +536,7 @@ impl<'hir> Map<'hir> {\n         // in the expect_* calls the loops below\n         self.read(hir_id);\n \n-        let node_id = self.hir_to_node_id[&hir_id];\n-\n-        let module = &self.forest.krate.modules[&node_id];\n+        let module = &self.forest.krate.modules[&hir_id];\n \n         for id in &module.items {\n             visitor.visit_item(self.expect_item(*id));"}, {"sha": "7bd9caaf16152ac749e5f2cf7d984ffe2853a4b9", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09", "patch": "@@ -766,7 +766,7 @@ pub struct Crate {\n \n     /// A list of modules written out in the order in which they\n     /// appear in the crate. This includes the main crate module.\n-    pub modules: BTreeMap<NodeId, ModuleItems>,\n+    pub modules: BTreeMap<HirId, ModuleItems>,\n }\n \n impl Crate {"}, {"sha": "f6063875ac40284aa72f09bcd17390fe96341848", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09", "patch": "@@ -1510,7 +1510,7 @@ pub fn check_crate<'tcx, T: for<'a> LateLintPass<'a, 'tcx>>(\n         time(tcx.sess, \"module lints\", || {\n             // Run per-module lints\n             par_iter(&tcx.hir().krate().modules).for_each(|(&module, _)| {\n-                tcx.ensure().lint_mod(tcx.hir().local_def_id_from_node_id(module));\n+                tcx.ensure().lint_mod(tcx.hir().local_def_id(module));\n             });\n         });\n     });"}, {"sha": "37b33466d70b83c22466c4878005508f760b6bec", "filename": "src/librustc_interface/passes.rs", "status": "modified", "additions": 8, "deletions": 7, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc_interface%2Fpasses.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc_interface%2Fpasses.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_interface%2Fpasses.rs?ref=c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09", "patch": "@@ -905,10 +905,10 @@ fn analysis(tcx: TyCtxt<'_>, cnum: CrateNum) -> Result<()> {\n             });\n         }, {\n             par_iter(&tcx.hir().krate().modules).for_each(|(&module, _)| {\n-                tcx.ensure().check_mod_loops(tcx.hir().local_def_id_from_node_id(module));\n-                tcx.ensure().check_mod_attrs(tcx.hir().local_def_id_from_node_id(module));\n-                tcx.ensure().check_mod_unstable_api_usage(\n-                    tcx.hir().local_def_id_from_node_id(module));\n+                let local_def_id = tcx.hir().local_def_id(module);\n+                tcx.ensure().check_mod_loops(local_def_id);\n+                tcx.ensure().check_mod_attrs(local_def_id);\n+                tcx.ensure().check_mod_unstable_api_usage(local_def_id);\n             });\n         });\n     });\n@@ -931,9 +931,10 @@ fn analysis(tcx: TyCtxt<'_>, cnum: CrateNum) -> Result<()> {\n                     // \"not all control paths return a value\" is reported here.\n                     //\n                     // maybe move the check to a MIR pass?\n-                    tcx.ensure().check_mod_liveness(tcx.hir().local_def_id_from_node_id(module));\n+                    let local_def_id = tcx.hir().local_def_id(module);\n \n-                    tcx.ensure().check_mod_intrinsics(tcx.hir().local_def_id_from_node_id(module));\n+                    tcx.ensure().check_mod_liveness(local_def_id);\n+                    tcx.ensure().check_mod_intrinsics(local_def_id);\n                 });\n             });\n         });\n@@ -993,7 +994,7 @@ fn analysis(tcx: TyCtxt<'_>, cnum: CrateNum) -> Result<()> {\n         }, {\n             time(sess, \"privacy checking modules\", || {\n                 par_iter(&tcx.hir().krate().modules).for_each(|(&module, _)| {\n-                    tcx.ensure().check_mod_privacy(tcx.hir().local_def_id_from_node_id(module));\n+                    tcx.ensure().check_mod_privacy(tcx.hir().local_def_id(module));\n                 });\n             });\n         });"}, {"sha": "854549bb66b331d51d9ada0027f05641fc7a8d7a", "filename": "src/librustc_typeck/impl_wf_check.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc_typeck%2Fimpl_wf_check.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc_typeck%2Fimpl_wf_check.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fimpl_wf_check.rs?ref=c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09", "patch": "@@ -54,7 +54,7 @@ pub fn impl_wf_check(tcx: TyCtxt<'_>) {\n     // but it's one that we must perform earlier than the rest of\n     // WfCheck.\n     for &module in tcx.hir().krate().modules.keys() {\n-        tcx.ensure().check_mod_impl_wf(tcx.hir().local_def_id_from_node_id(module));\n+        tcx.ensure().check_mod_impl_wf(tcx.hir().local_def_id(module));\n     }\n }\n "}, {"sha": "e97d6db5db08c64f995a55fec2aee5793995e023", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=c26f1296d2d7a5f0c6e0b4f5cc00d59b341bcf09", "patch": "@@ -303,7 +303,7 @@ pub fn check_crate(tcx: TyCtxt<'_>) -> Result<(), ErrorReported> {\n     tcx.sess.track_errors(|| {\n         time(tcx.sess, \"type collecting\", || {\n             for &module in tcx.hir().krate().modules.keys() {\n-                tcx.ensure().collect_mod_item_types(tcx.hir().local_def_id_from_node_id(module));\n+                tcx.ensure().collect_mod_item_types(tcx.hir().local_def_id(module));\n             }\n         });\n     })?;\n@@ -338,7 +338,7 @@ pub fn check_crate(tcx: TyCtxt<'_>) -> Result<(), ErrorReported> {\n \n     time(tcx.sess, \"item-types checking\", || {\n         for &module in tcx.hir().krate().modules.keys() {\n-            tcx.ensure().check_mod_item_types(tcx.hir().local_def_id_from_node_id(module));\n+            tcx.ensure().check_mod_item_types(tcx.hir().local_def_id(module));\n         }\n     });\n "}]}