{"sha": "8c95feda3961efaffe4461d775b029f92a1744c4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhjOTVmZWRhMzk2MWVmYWZmZTQ0NjFkNzc1YjAyOWY5MmExNzQ0YzQ=", "commit": {"author": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-08T01:39:41Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@mozilla.com", "date": "2012-08-08T01:40:02Z"}, "message": "Add minor debug mode for measuring type sizes, helper for #3025.", "tree": {"sha": "58f30249839c20bb64217d046af6211a4c9f8f3b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58f30249839c20bb64217d046af6211a4c9f8f3b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c95feda3961efaffe4461d775b029f92a1744c4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c95feda3961efaffe4461d775b029f92a1744c4", "html_url": "https://github.com/rust-lang/rust/commit/8c95feda3961efaffe4461d775b029f92a1744c4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c95feda3961efaffe4461d775b029f92a1744c4/comments", "author": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "438765da59075339c99499e201384e835187f0ae", "url": "https://api.github.com/repos/rust-lang/rust/commits/438765da59075339c99499e201384e835187f0ae", "html_url": "https://github.com/rust-lang/rust/commit/438765da59075339c99499e201384e835187f0ae"}], "stats": {"total": 14, "additions": 13, "deletions": 1}, "files": [{"sha": "712c7d2cc4132ba122a8ed68a6edba1becf6195a", "filename": "src/rustc/driver/session.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/8c95feda3961efaffe4461d775b029f92a1744c4/src%2Frustc%2Fdriver%2Fsession.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c95feda3961efaffe4461d775b029f92a1744c4/src%2Frustc%2Fdriver%2Fsession.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fdriver%2Fsession.rs?ref=8c95feda3961efaffe4461d775b029f92a1744c4", "patch": "@@ -41,6 +41,7 @@ const borrowck_note_pure: uint = 2048;\n const borrowck_note_loan: uint = 4096;\n const no_landing_pads: uint = 8192;\n const debug_llvm: uint = 16384;\n+const count_type_sizes: uint = 32768;\n \n fn debugging_opts_map() -> ~[(~str, ~str, uint)] {\n     ~[(~\"ppregions\", ~\"prettyprint regions with \\\n@@ -63,7 +64,9 @@ fn debugging_opts_map() -> ~[(~str, ~str, uint)] {\n       borrowck_note_loan),\n      (~\"no-landing-pads\", ~\"omit landing pads for unwinding\",\n       no_landing_pads),\n-     (~\"debug-llvm\", ~\"enable debug output from LLVM\", debug_llvm)\n+     (~\"debug-llvm\", ~\"enable debug output from LLVM\", debug_llvm),\n+     (~\"count-type-sizes\", ~\"count the sizes of aggregate types\",\n+      count_type_sizes)\n     ]\n }\n \n@@ -179,6 +182,7 @@ impl session for session {\n     fn ppregions() -> bool { self.debugging_opt(ppregions) }\n     fn time_passes() -> bool { self.debugging_opt(time_passes) }\n     fn count_llvm_insns() -> bool { self.debugging_opt(count_llvm_insns) }\n+    fn count_type_sizes() -> bool { self.debugging_opt(count_type_sizes) }\n     fn time_llvm_passes() -> bool { self.debugging_opt(time_llvm_passes) }\n     fn trans_stats() -> bool { self.debugging_opt(trans_stats) }\n     fn no_asm_comments() -> bool { self.debugging_opt(no_asm_comments) }"}, {"sha": "2c7885a3f0c31c9a4d238e257a518f297744eddb", "filename": "src/rustc/middle/trans/base.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/8c95feda3961efaffe4461d775b029f92a1744c4/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8c95feda3961efaffe4461d775b029f92a1744c4/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=8c95feda3961efaffe4461d775b029f92a1744c4", "patch": "@@ -490,6 +490,13 @@ fn note_unique_llvm_symbol(ccx: @crate_ctxt, sym: ~str) {\n fn declare_tydesc(ccx: @crate_ctxt, t: ty::t) -> @tydesc_info {\n     let _icx = ccx.insn_ctxt(~\"declare_tydesc\");\n     let llty = type_of(ccx, t);\n+\n+    if ccx.sess.count_type_sizes() {\n+        io::println(fmt!(\"%u\\t%s\",\n+                         llsize_of_real(ccx, llty),\n+                         ty_to_str(ccx.tcx, t)));\n+    }\n+\n     let llsize = llsize_of(ccx, llty);\n     let llalign = llalign_of(ccx, llty);\n     //XXX this triggers duplicate LLVM symbols\n@@ -576,6 +583,7 @@ fn emit_tydescs(ccx: @crate_ctxt) {\n     for ccx.tydescs.each |key, val| {\n         let glue_fn_ty = T_ptr(T_glue_fn(ccx));\n         let ti = val;\n+\n         let take_glue =\n             match copy ti.take_glue {\n               none => { ccx.stats.n_null_glues += 1u; C_null(glue_fn_ty) }"}]}