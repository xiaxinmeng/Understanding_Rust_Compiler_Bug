{"sha": "8093b2020151643a2dcba71044afcf28c48a006d", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgwOTNiMjAyMDE1MTY0M2EyZGNiYTcxMDQ0YWZjZjI4YzQ4YTAwNmQ=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2018-02-18T12:20:57Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2018-02-18T12:20:57Z"}, "message": "Rollup merge of #48194 - GuillaumeGomez:doc-test-command, r=Mark-Simulacrum\n\nDoc test command\n\nr? @Mark-Simulacrum", "tree": {"sha": "4665f66ef37e31a3f1beed520321a84f8e696b9a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/4665f66ef37e31a3f1beed520321a84f8e696b9a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8093b2020151643a2dcba71044afcf28c48a006d", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJaiW+pCRBK7hj4Ov3rIwAAdHIIAB9XSfL3K+MKJR1EDt54wrCe\nXxoKxaZ+g2XYXJs0vrfQsc5Tl+fR1jyR4bT/JDNwJZoulhKq1dytDqjBGjyu+m7Q\nhGGkDlCIAEHaJNpbWJ3dZwzy/+Fp8jKv1Zeh9fVhtFpGXckwHbCg6oZoaaGUQaAu\nd0q+3TfO1tf51WbRk3TZkWKXvNHrAEPT/MVDUDyyecoN0CwzFShYvRHxh/sBi/We\nqg7dCAaQHV+phrSxoZMA1fySKm/Wc3uyGzprM3Pz+wcAf8eeixOygfbOgDx5mWcY\nfRkeduDrMCSUBvW1FOIfvRk2BE2T6a6/oHFyiBTdE50C80zxTHlQpaSXauWe82Q=\n=onGw\n-----END PGP SIGNATURE-----\n", "payload": "tree 4665f66ef37e31a3f1beed520321a84f8e696b9a\nparent 1ad094d81c97b3d2dd8e980ccd1475a80647540d\nparent 8e46927235f27e097707674d7837faa52f92d874\nauthor Guillaume Gomez <guillaume1.gomez@gmail.com> 1518956457 +0100\ncommitter GitHub <noreply@github.com> 1518956457 +0100\n\nRollup merge of #48194 - GuillaumeGomez:doc-test-command, r=Mark-Simulacrum\n\nDoc test command\n\nr? @Mark-Simulacrum\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8093b2020151643a2dcba71044afcf28c48a006d", "html_url": "https://github.com/rust-lang/rust/commit/8093b2020151643a2dcba71044afcf28c48a006d", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8093b2020151643a2dcba71044afcf28c48a006d/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ad094d81c97b3d2dd8e980ccd1475a80647540d", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ad094d81c97b3d2dd8e980ccd1475a80647540d", "html_url": "https://github.com/rust-lang/rust/commit/1ad094d81c97b3d2dd8e980ccd1475a80647540d"}, {"sha": "8e46927235f27e097707674d7837faa52f92d874", "url": "https://api.github.com/repos/rust-lang/rust/commits/8e46927235f27e097707674d7837faa52f92d874", "html_url": "https://github.com/rust-lang/rust/commit/8e46927235f27e097707674d7837faa52f92d874"}], "stats": {"total": 15, "additions": 15, "deletions": 0}, "files": [{"sha": "eb5c3b8ce147f54ac3cc265d063d15df245b1a7a", "filename": "src/bootstrap/flags.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/8093b2020151643a2dcba71044afcf28c48a006d/src%2Fbootstrap%2Fflags.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8093b2020151643a2dcba71044afcf28c48a006d/src%2Fbootstrap%2Fflags.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fflags.rs?ref=8093b2020151643a2dcba71044afcf28c48a006d", "patch": "@@ -60,6 +60,7 @@ pub enum Subcommand {\n         test_args: Vec<String>,\n         rustc_args: Vec<String>,\n         fail_fast: bool,\n+        doc_tests: bool,\n     },\n     Bench {\n         paths: Vec<PathBuf>,\n@@ -164,6 +165,7 @@ To learn more about a subcommand, run `./x.py <subcommand> -h`\");\n                     \"extra options to pass the compiler when running tests\",\n                     \"ARGS\",\n                 );\n+                opts.optflag(\"\", \"doc\", \"run doc tests\");\n             },\n             \"bench\" => { opts.optmulti(\"\", \"test-args\", \"extra arguments\", \"ARGS\"); },\n             \"clean\" => { opts.optflag(\"\", \"all\", \"clean all build artifacts\"); },\n@@ -320,6 +322,7 @@ Arguments:\n                     test_args: matches.opt_strs(\"test-args\"),\n                     rustc_args: matches.opt_strs(\"rustc-args\"),\n                     fail_fast: !matches.opt_present(\"no-fail-fast\"),\n+                    doc_tests: matches.opt_present(\"doc\"),\n                 }\n             }\n             \"bench\" => {\n@@ -410,6 +413,13 @@ impl Subcommand {\n             _ => false,\n         }\n     }\n+\n+    pub fn doc_tests(&self) -> bool {\n+        match *self {\n+            Subcommand::Test { doc_tests, .. } => doc_tests,\n+            _ => false,\n+        }\n+    }\n }\n \n fn split(s: Vec<String>) -> Vec<String> {"}, {"sha": "90f50275b6bb462a6e75f258d3ba1cb9c2481cdb", "filename": "src/bootstrap/lib.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/8093b2020151643a2dcba71044afcf28c48a006d/src%2Fbootstrap%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8093b2020151643a2dcba71044afcf28c48a006d/src%2Fbootstrap%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Flib.rs?ref=8093b2020151643a2dcba71044afcf28c48a006d", "patch": "@@ -226,6 +226,7 @@ pub struct Build {\n     rustfmt_info: channel::GitInfo,\n     local_rebuild: bool,\n     fail_fast: bool,\n+    doc_tests: bool,\n     verbosity: usize,\n \n     // Targets for which to build.\n@@ -326,6 +327,7 @@ impl Build {\n             initial_cargo: config.initial_cargo.clone(),\n             local_rebuild: config.local_rebuild,\n             fail_fast: config.cmd.fail_fast(),\n+            doc_tests: config.cmd.doc_tests(),\n             verbosity: config.verbose,\n \n             build: config.build,"}, {"sha": "c969f102471807192694e761bc056eb5a8dbb18d", "filename": "src/bootstrap/test.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/8093b2020151643a2dcba71044afcf28c48a006d/src%2Fbootstrap%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8093b2020151643a2dcba71044afcf28c48a006d/src%2Fbootstrap%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Ftest.rs?ref=8093b2020151643a2dcba71044afcf28c48a006d", "patch": "@@ -1355,6 +1355,9 @@ impl Step for Crate {\n         if test_kind.subcommand() == \"test\" && !build.fail_fast {\n             cargo.arg(\"--no-fail-fast\");\n         }\n+        if build.doc_tests {\n+            cargo.arg(\"--doc\");\n+        }\n \n         cargo.arg(\"-p\").arg(krate);\n "}]}