{"sha": "7aaed02b8c4cad724506a44a53b5205132ff4d20", "node_id": "C_kwDOAAsO6NoAKDdhYWVkMDJiOGM0Y2FkNzI0NTA2YTQ0YTUzYjUyMDUxMzJmZjRkMjA", "commit": {"author": {"name": "ThibsG", "email": "thibsg@pm.me", "date": "2021-10-09T12:56:33Z"}, "committer": {"name": "ThibsG", "email": "thibsg@pm.me", "date": "2021-10-09T12:56:33Z"}, "message": "Fix false positive when `Drop` and `Copy` involved", "tree": {"sha": "c25dbc594df1d9cefb282c33aab7c3e06c796040", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c25dbc594df1d9cefb282c33aab7c3e06c796040"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7aaed02b8c4cad724506a44a53b5205132ff4d20", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7aaed02b8c4cad724506a44a53b5205132ff4d20", "html_url": "https://github.com/rust-lang/rust/commit/7aaed02b8c4cad724506a44a53b5205132ff4d20", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7aaed02b8c4cad724506a44a53b5205132ff4d20/comments", "author": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ThibsG", "id": 12683889, "node_id": "MDQ6VXNlcjEyNjgzODg5", "avatar_url": "https://avatars.githubusercontent.com/u/12683889?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ThibsG", "html_url": "https://github.com/ThibsG", "followers_url": "https://api.github.com/users/ThibsG/followers", "following_url": "https://api.github.com/users/ThibsG/following{/other_user}", "gists_url": "https://api.github.com/users/ThibsG/gists{/gist_id}", "starred_url": "https://api.github.com/users/ThibsG/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ThibsG/subscriptions", "organizations_url": "https://api.github.com/users/ThibsG/orgs", "repos_url": "https://api.github.com/users/ThibsG/repos", "events_url": "https://api.github.com/users/ThibsG/events{/privacy}", "received_events_url": "https://api.github.com/users/ThibsG/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "22144c02c2d790c2e3b74dc0363000511284f6d8", "url": "https://api.github.com/repos/rust-lang/rust/commits/22144c02c2d790c2e3b74dc0363000511284f6d8", "html_url": "https://github.com/rust-lang/rust/commit/22144c02c2d790c2e3b74dc0363000511284f6d8"}], "stats": {"total": 98, "additions": 97, "deletions": 1}, "files": [{"sha": "cde27d3ad2a0ce3def12b28ab0e5ebfddb640489", "filename": "clippy_lints/src/default.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7aaed02b8c4cad724506a44a53b5205132ff4d20/clippy_lints%2Fsrc%2Fdefault.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7aaed02b8c4cad724506a44a53b5205132ff4d20/clippy_lints%2Fsrc%2Fdefault.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Fdefault.rs?ref=7aaed02b8c4cad724506a44a53b5205132ff4d20", "patch": "@@ -1,5 +1,6 @@\n use clippy_utils::diagnostics::{span_lint_and_note, span_lint_and_sugg};\n use clippy_utils::source::snippet_with_macro_callsite;\n+use clippy_utils::ty::{has_drop, is_copy};\n use clippy_utils::{any_parent_is_automatically_derived, contains_name, in_macro, match_def_path, paths};\n use if_chain::if_chain;\n use rustc_data_structures::fx::FxHashSet;\n@@ -139,6 +140,13 @@ impl LateLintPass<'_> for Default {\n                     .fields\n                     .iter()\n                     .all(|field| field.vis.is_accessible_from(module_did, cx.tcx));\n+                let all_fields_are_copy = variant\n+                    .fields\n+                    .iter()\n+                    .all(|field| {\n+                        is_copy(cx, cx.tcx.type_of(field.did))\n+                    });\n+                if !has_drop(cx, binding_type) || all_fields_are_copy;\n                 then {\n                     (local, variant, ident.name, binding_type, expr.span)\n                 } else {"}, {"sha": "7367910eaa126fdc54319aa3d7232765dcca376d", "filename": "tests/ui/field_reassign_with_default.rs", "status": "modified", "additions": 64, "deletions": 0, "changes": 64, "blob_url": "https://github.com/rust-lang/rust/blob/7aaed02b8c4cad724506a44a53b5205132ff4d20/tests%2Fui%2Ffield_reassign_with_default.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7aaed02b8c4cad724506a44a53b5205132ff4d20/tests%2Fui%2Ffield_reassign_with_default.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffield_reassign_with_default.rs?ref=7aaed02b8c4cad724506a44a53b5205132ff4d20", "patch": "@@ -183,3 +183,67 @@ struct WrapperMulti<T, U> {\n     i: T,\n     j: U,\n }\n+\n+mod issue6312 {\n+    use std::sync::atomic::AtomicBool;\n+    use std::sync::Arc;\n+\n+    // do not lint: type implements `Drop` but not all fields are `Copy`\n+    #[derive(Clone, Default)]\n+    pub struct ImplDropNotAllCopy {\n+        name: String,\n+        delay_data_sync: Arc<AtomicBool>,\n+    }\n+\n+    impl Drop for ImplDropNotAllCopy {\n+        fn drop(&mut self) {\n+            self.close()\n+        }\n+    }\n+\n+    impl ImplDropNotAllCopy {\n+        fn new(name: &str) -> Self {\n+            let mut f = ImplDropNotAllCopy::default();\n+            f.name = name.to_owned();\n+            f\n+        }\n+        fn close(&self) {}\n+    }\n+\n+    // lint: type implements `Drop` and all fields are `Copy`\n+    #[derive(Clone, Default)]\n+    pub struct ImplDropAllCopy {\n+        name: usize,\n+        delay_data_sync: bool,\n+    }\n+\n+    impl Drop for ImplDropAllCopy {\n+        fn drop(&mut self) {\n+            self.close()\n+        }\n+    }\n+\n+    impl ImplDropAllCopy {\n+        fn new(name: &str) -> Self {\n+            let mut f = ImplDropAllCopy::default();\n+            f.name = name.len();\n+            f\n+        }\n+        fn close(&self) {}\n+    }\n+\n+    // lint: type does not implement `Drop` though all fields are `Copy`\n+    #[derive(Clone, Default)]\n+    pub struct NoDropAllCopy {\n+        name: usize,\n+        delay_data_sync: bool,\n+    }\n+\n+    impl NoDropAllCopy {\n+        fn new(name: &str) -> Self {\n+            let mut f = NoDropAllCopy::default();\n+            f.name = name.len();\n+            f\n+        }\n+    }\n+}"}, {"sha": "3ce4b91a54869d13c4b72ce7235cc51981a6169e", "filename": "tests/ui/field_reassign_with_default.stderr", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/7aaed02b8c4cad724506a44a53b5205132ff4d20/tests%2Fui%2Ffield_reassign_with_default.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/7aaed02b8c4cad724506a44a53b5205132ff4d20/tests%2Fui%2Ffield_reassign_with_default.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Ffield_reassign_with_default.stderr?ref=7aaed02b8c4cad724506a44a53b5205132ff4d20", "patch": "@@ -107,5 +107,29 @@ note: consider initializing the variable with `WrapperMulti::<i32, i64> { i: 42,\n LL |     let mut a: WrapperMulti<i32, i64> = Default::default();\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to 9 previous errors\n+error: field assignment outside of initializer for an instance created with Default::default()\n+  --> $DIR/field_reassign_with_default.rs:229:13\n+   |\n+LL |             f.name = name.len();\n+   |             ^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: consider initializing the variable with `issue6312::ImplDropAllCopy { name: name.len(), ..Default::default() }` and removing relevant reassignments\n+  --> $DIR/field_reassign_with_default.rs:228:13\n+   |\n+LL |             let mut f = ImplDropAllCopy::default();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: field assignment outside of initializer for an instance created with Default::default()\n+  --> $DIR/field_reassign_with_default.rs:245:13\n+   |\n+LL |             f.name = name.len();\n+   |             ^^^^^^^^^^^^^^^^^^^^\n+   |\n+note: consider initializing the variable with `issue6312::NoDropAllCopy { name: name.len(), ..Default::default() }` and removing relevant reassignments\n+  --> $DIR/field_reassign_with_default.rs:244:13\n+   |\n+LL |             let mut f = NoDropAllCopy::default();\n+   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+error: aborting due to 11 previous errors\n "}]}