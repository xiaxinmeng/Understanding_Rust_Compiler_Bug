{"sha": "e81a07268b233ec6940b65444a6c32ceef28ce10", "node_id": "C_kwDOAAsO6NoAKGU4MWEwNzI2OGIyMzNlYzY5NDBiNjU0NDRhNmMzMmNlZWYyOGNlMTA", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-18T11:04:24Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-18T11:04:24Z"}, "message": "Rollup merge of #109283 - notriddle:notriddle/visibility-to-src-with-space, r=jsha\n\nrustdoc: reduce allocations in `visibility_to_src_with_space`", "tree": {"sha": "84e4bc22fb0687a31153d7d47a30864ba3fbd4d6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/84e4bc22fb0687a31153d7d47a30864ba3fbd4d6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e81a07268b233ec6940b65444a6c32ceef28ce10", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkFZq4CRBK7hj4Ov3rIwAAjKkIAGarXxkhIN73Oz7glN9SK6cu\nEBLhY730cYpxHfa2Usv29m4ScI8MG+jYp80jiv3s8NFv/571razX4sna1Z1GoWMH\niAb09IwzQU3bfgjGRoJJOzH/fy2jWDSsh8uuc9P7ROOqM2+zmbvccN97UWT5/ua7\nXZKpTEFEAjrQnmGgrl8fA/tocg15inGo/s8YsUJ5MTAOIzZJpVdn73TGMsieUuXm\nwY8JVPUmxNOV3VUvbb7XAO1UAYmlvE3QaThpUz5IerDvKuhd6xqK3MX08FrkeI5y\nvfDOqjdm4ps6gBbSjm5mgwvz7br4vFzP0xKSxtlatXjlOmQteUMGLNCgYArW/hQ=\n=I/8S\n-----END PGP SIGNATURE-----\n", "payload": "tree 84e4bc22fb0687a31153d7d47a30864ba3fbd4d6\nparent 8417c93092fbf7974c02c19ace8a46582c97c007\nparent 8628e27da34f8b64ce4a02a6f2e74a6c4016612f\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679137464 +0100\ncommitter GitHub <noreply@github.com> 1679137464 +0100\n\nRollup merge of #109283 - notriddle:notriddle/visibility-to-src-with-space, r=jsha\n\nrustdoc: reduce allocations in `visibility_to_src_with_space`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e81a07268b233ec6940b65444a6c32ceef28ce10", "html_url": "https://github.com/rust-lang/rust/commit/e81a07268b233ec6940b65444a6c32ceef28ce10", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e81a07268b233ec6940b65444a6c32ceef28ce10/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8417c93092fbf7974c02c19ace8a46582c97c007", "url": "https://api.github.com/repos/rust-lang/rust/commits/8417c93092fbf7974c02c19ace8a46582c97c007", "html_url": "https://github.com/rust-lang/rust/commit/8417c93092fbf7974c02c19ace8a46582c97c007"}, {"sha": "8628e27da34f8b64ce4a02a6f2e74a6c4016612f", "url": "https://api.github.com/repos/rust-lang/rust/commits/8628e27da34f8b64ce4a02a6f2e74a6c4016612f", "html_url": "https://github.com/rust-lang/rust/commit/8628e27da34f8b64ce4a02a6f2e74a6c4016612f"}], "stats": {"total": 14, "additions": 7, "deletions": 7}, "files": [{"sha": "d526a8be0811adc383daba96a070d3bcffd35505", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 7, "deletions": 7, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/e81a07268b233ec6940b65444a6c32ceef28ce10/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e81a07268b233ec6940b65444a6c32ceef28ce10/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=e81a07268b233ec6940b65444a6c32ceef28ce10", "patch": "@@ -1502,27 +1502,27 @@ pub(crate) fn visibility_to_src_with_space<'a, 'tcx: 'a>(\n     tcx: TyCtxt<'tcx>,\n     item_did: DefId,\n ) -> impl fmt::Display + 'a + Captures<'tcx> {\n-    let to_print = match visibility {\n-        None => String::new(),\n-        Some(ty::Visibility::Public) => \"pub \".to_owned(),\n+    let to_print: Cow<'static, str> = match visibility {\n+        None => \"\".into(),\n+        Some(ty::Visibility::Public) => \"pub \".into(),\n         Some(ty::Visibility::Restricted(vis_did)) => {\n             // FIXME(camelid): This may not work correctly if `item_did` is a module.\n             //                 However, rustdoc currently never displays a module's\n             //                 visibility, so it shouldn't matter.\n             let parent_module = find_nearest_parent_module(tcx, item_did);\n \n             if vis_did.is_crate_root() {\n-                \"pub(crate) \".to_owned()\n+                \"pub(crate) \".into()\n             } else if parent_module == Some(vis_did) {\n                 // `pub(in foo)` where `foo` is the parent module\n                 // is the same as no visibility modifier\n-                String::new()\n+                \"\".into()\n             } else if parent_module.and_then(|parent| find_nearest_parent_module(tcx, parent))\n                 == Some(vis_did)\n             {\n-                \"pub(super) \".to_owned()\n+                \"pub(super) \".into()\n             } else {\n-                format!(\"pub(in {}) \", tcx.def_path_str(vis_did))\n+                format!(\"pub(in {}) \", tcx.def_path_str(vis_did)).into()\n             }\n         }\n     };"}]}