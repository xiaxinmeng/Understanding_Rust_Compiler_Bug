{"sha": "d1e5d7866b3dc39481ba5e83287ba5078963137e", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQxZTVkNzg2NmIzZGMzOTQ4MWJhNWU4MzI4N2JhNTA3ODk2MzEzN2U=", "commit": {"author": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-09T11:23:48Z"}, "committer": {"name": "Seiichi Uchida", "email": "seuchida@gmail.com", "date": "2017-12-11T02:47:19Z"}, "message": "Make CharClasses and FullCodeCharKind public", "tree": {"sha": "649ee87c76a7d3749448fabae1c3cd8836e6639b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/649ee87c76a7d3749448fabae1c3cd8836e6639b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d1e5d7866b3dc39481ba5e83287ba5078963137e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d1e5d7866b3dc39481ba5e83287ba5078963137e", "html_url": "https://github.com/rust-lang/rust/commit/d1e5d7866b3dc39481ba5e83287ba5078963137e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d1e5d7866b3dc39481ba5e83287ba5078963137e/comments", "author": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "committer": {"login": "topecongiro", "id": 21980157, "node_id": "MDQ6VXNlcjIxOTgwMTU3", "avatar_url": "https://avatars.githubusercontent.com/u/21980157?v=4", "gravatar_id": "", "url": "https://api.github.com/users/topecongiro", "html_url": "https://github.com/topecongiro", "followers_url": "https://api.github.com/users/topecongiro/followers", "following_url": "https://api.github.com/users/topecongiro/following{/other_user}", "gists_url": "https://api.github.com/users/topecongiro/gists{/gist_id}", "starred_url": "https://api.github.com/users/topecongiro/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/topecongiro/subscriptions", "organizations_url": "https://api.github.com/users/topecongiro/orgs", "repos_url": "https://api.github.com/users/topecongiro/repos", "events_url": "https://api.github.com/users/topecongiro/events{/privacy}", "received_events_url": "https://api.github.com/users/topecongiro/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6d78bd5fdc5c5ade539e221d7e91603538199452", "url": "https://api.github.com/repos/rust-lang/rust/commits/6d78bd5fdc5c5ade539e221d7e91603538199452", "html_url": "https://github.com/rust-lang/rust/commit/6d78bd5fdc5c5ade539e221d7e91603538199452"}], "stats": {"total": 18, "additions": 14, "deletions": 4}, "files": [{"sha": "bf462e38b7a98428b0f5f3c81c93024d4086891d", "filename": "src/comment.rs", "status": "modified", "additions": 14, "deletions": 4, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d1e5d7866b3dc39481ba5e83287ba5078963137e/src%2Fcomment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d1e5d7866b3dc39481ba5e83287ba5078963137e/src%2Fcomment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomment.rs?ref=d1e5d7866b3dc39481ba5e83287ba5078963137e", "patch": "@@ -581,7 +581,7 @@ pub fn remove_trailing_white_spaces(text: &str) -> String {\n     buffer\n }\n \n-struct CharClasses<T>\n+pub struct CharClasses<T>\n where\n     T: Iterator,\n     T::Item: RichChar,\n@@ -606,6 +606,12 @@ impl RichChar for (usize, char) {\n     }\n }\n \n+impl RichChar for (char, usize) {\n+    fn get_char(&self) -> char {\n+        self.0\n+    }\n+}\n+\n #[derive(PartialEq, Eq, Debug, Clone, Copy)]\n enum CharClassesStatus {\n     Normal,\n@@ -635,7 +641,7 @@ pub enum CodeCharKind {\n /// describing opening and closing of comments for ease when chunking\n /// code from tagged characters\n #[derive(PartialEq, Eq, Debug, Clone, Copy)]\n-enum FullCodeCharKind {\n+pub enum FullCodeCharKind {\n     Normal,\n     /// The first character of a comment, there is only one for a comment (always '/')\n     StartComment,\n@@ -649,7 +655,7 @@ enum FullCodeCharKind {\n }\n \n impl FullCodeCharKind {\n-    fn is_comment(&self) -> bool {\n+    pub fn is_comment(&self) -> bool {\n         match *self {\n             FullCodeCharKind::StartComment\n             | FullCodeCharKind::InComment\n@@ -658,6 +664,10 @@ impl FullCodeCharKind {\n         }\n     }\n \n+    pub fn is_string(&self) -> bool {\n+        *self == FullCodeCharKind::InString\n+    }\n+\n     fn to_codecharkind(&self) -> CodeCharKind {\n         if self.is_comment() {\n             CodeCharKind::Comment\n@@ -672,7 +682,7 @@ where\n     T: Iterator,\n     T::Item: RichChar,\n {\n-    fn new(base: T) -> CharClasses<T> {\n+    pub fn new(base: T) -> CharClasses<T> {\n         CharClasses {\n             base: base.peekable(),\n             status: CharClassesStatus::Normal,"}]}