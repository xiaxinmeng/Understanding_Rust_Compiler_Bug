{"sha": "2b43980ef44fe7394c1e800a0d93e82d05c47555", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiNDM5ODBlZjQ0ZmU3Mzk0YzFlODAwYTBkOTNlODJkMDVjNDc1NTU=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-12-13T02:05:38Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-12-13T02:05:38Z"}, "message": "Rollup merge of #79942 - JCTyblaidd:static-mem-init, r=RalfJung\n\nAdd post-init hook for static memory for miri.\n\nAdds a post-initialization hook to treat memory initialized using the interpreter as if it was initialized in a static context.\n\nSee: https://github.com/rust-lang/miri/pull/1644 & https://github.com/rust-lang/miri/issues/1643", "tree": {"sha": "3b764668217b5a8ed1646e589bc1556c57a1c57d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3b764668217b5a8ed1646e589bc1556c57a1c57d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b43980ef44fe7394c1e800a0d93e82d05c47555", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJf1XbyCRBK7hj4Ov3rIwAAdHIIABcMfO+KHD8V0+janvTNB9nc\nbonnTPhli7DXh7Es6tC2O7i8DzhFiwactwh+Sk8TvOR/leojsDonjtHa/J3DBvMK\n78qGmPmHPT0LRyMKGvHMow0AU4HN4tbRX19rZj5i+teKB+Q1d052KJQnxRU4MS9v\n+2fJAzwo/MURemQBmIQ/HCuk4+GRQ/Ws95Ir6a9mo/uz6Y0eVsj5hEQyt7eUjLUm\nKmQ0HripioX+zJW3Tw3FQmNjD33Ms5No5Ic2yH5lLC9+KNt/wmpArnty0JvGCASh\nAwuT76eBrkCCvs1zeLXmxlxrx8rwBgL05+mQS1MIKzhsTWCOnzllIc7clz2PMdw=\n=YwND\n-----END PGP SIGNATURE-----\n", "payload": "tree 3b764668217b5a8ed1646e589bc1556c57a1c57d\nparent 1b81f08d4cc817548f0b503f33c8b665455d60a6\nparent 175226a01c53a9b9779e05e2d1076d4a3ed37911\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1607825138 +0900\ncommitter GitHub <noreply@github.com> 1607825138 +0900\n\nRollup merge of #79942 - JCTyblaidd:static-mem-init, r=RalfJung\n\nAdd post-init hook for static memory for miri.\n\nAdds a post-initialization hook to treat memory initialized using the interpreter as if it was initialized in a static context.\n\nSee: https://github.com/rust-lang/miri/pull/1644 & https://github.com/rust-lang/miri/issues/1643\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b43980ef44fe7394c1e800a0d93e82d05c47555", "html_url": "https://github.com/rust-lang/rust/commit/2b43980ef44fe7394c1e800a0d93e82d05c47555", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b43980ef44fe7394c1e800a0d93e82d05c47555/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1b81f08d4cc817548f0b503f33c8b665455d60a6", "url": "https://api.github.com/repos/rust-lang/rust/commits/1b81f08d4cc817548f0b503f33c8b665455d60a6", "html_url": "https://github.com/rust-lang/rust/commit/1b81f08d4cc817548f0b503f33c8b665455d60a6"}, {"sha": "175226a01c53a9b9779e05e2d1076d4a3ed37911", "url": "https://api.github.com/repos/rust-lang/rust/commits/175226a01c53a9b9779e05e2d1076d4a3ed37911", "html_url": "https://github.com/rust-lang/rust/commit/175226a01c53a9b9779e05e2d1076d4a3ed37911"}], "stats": {"total": 19, "additions": 14, "deletions": 5}, "files": [{"sha": "f50cc6c16ea16b7a6bac788ba547dd1664e787e5", "filename": "compiler/rustc_mir/src/interpret/machine.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2b43980ef44fe7394c1e800a0d93e82d05c47555/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmachine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b43980ef44fe7394c1e800a0d93e82d05c47555/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmachine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fmachine.rs?ref=2b43980ef44fe7394c1e800a0d93e82d05c47555", "patch": "@@ -9,6 +9,7 @@ use std::hash::Hash;\n use rustc_middle::mir;\n use rustc_middle::ty::{self, Ty};\n use rustc_span::def_id::DefId;\n+use rustc_target::abi::Size;\n \n use super::{\n     AllocId, Allocation, AllocationExtra, CheckInAllocMsg, Frame, ImmTy, InterpCx, InterpResult,\n@@ -299,6 +300,15 @@ pub trait Machine<'mir, 'tcx>: Sized {\n         Ok(())\n     }\n \n+    /// Called after initializing static memory using the interpreter.\n+    fn after_static_mem_initialized(\n+        _ecx: &mut InterpCx<'mir, 'tcx, Self>,\n+        _ptr: Pointer<Self::PointerTag>,\n+        _size: Size,\n+    ) -> InterpResult<'tcx> {\n+        Ok(())\n+    }\n+\n     /// Executes a retagging operation\n     #[inline]\n     fn retag("}, {"sha": "09ce6bc0fb754b18c09183f8f651ff4084db1651", "filename": "compiler/rustc_mir/src/interpret/traits.rs", "status": "modified", "additions": 4, "deletions": 5, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/2b43980ef44fe7394c1e800a0d93e82d05c47555/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Ftraits.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b43980ef44fe7394c1e800a0d93e82d05c47555/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Ftraits.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Ftraits.rs?ref=2b43980ef44fe7394c1e800a0d93e82d05c47555", "patch": "@@ -56,11 +56,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         // If you touch this code, be sure to also make the corresponding changes to\n         // `get_vtable` in `rust_codegen_llvm/meth.rs`.\n         // /////////////////////////////////////////////////////////////////////////////////////////\n-        let vtable = self.memory.allocate(\n-            ptr_size * u64::try_from(methods.len()).unwrap().checked_add(3).unwrap(),\n-            ptr_align,\n-            MemoryKind::Vtable,\n-        );\n+        let vtable_size = ptr_size * u64::try_from(methods.len()).unwrap().checked_add(3).unwrap();\n+        let vtable = self.memory.allocate(vtable_size, ptr_align, MemoryKind::Vtable);\n \n         let drop = Instance::resolve_drop_in_place(tcx, ty);\n         let drop = self.memory.create_fn_alloc(FnVal::Instance(drop));\n@@ -93,6 +90,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n             }\n         }\n \n+        M::after_static_mem_initialized(self, vtable, vtable_size)?;\n+\n         self.memory.mark_immutable(vtable.alloc_id)?;\n         assert!(self.vtables.insert((ty, poly_trait_ref), vtable).is_none());\n "}]}