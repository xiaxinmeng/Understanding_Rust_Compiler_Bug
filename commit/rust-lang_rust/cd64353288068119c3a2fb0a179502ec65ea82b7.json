{"sha": "cd64353288068119c3a2fb0a179502ec65ea82b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmNkNjQzNTMyODgwNjgxMTljM2EyZmIwYTE3OTUwMmVjNjVlYTgyYjc=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-07-15T18:02:48Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-08-21T11:35:36Z"}, "message": "Adapt tests for correct behavior", "tree": {"sha": "5135c4c65beb37a14b9249d03fdc3e98da58ac4e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5135c4c65beb37a14b9249d03fdc3e98da58ac4e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/cd64353288068119c3a2fb0a179502ec65ea82b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/cd64353288068119c3a2fb0a179502ec65ea82b7", "html_url": "https://github.com/rust-lang/rust/commit/cd64353288068119c3a2fb0a179502ec65ea82b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/cd64353288068119c3a2fb0a179502ec65ea82b7/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5cff35505974ac91efb13d17866d3a80c498b972", "url": "https://api.github.com/repos/rust-lang/rust/commits/5cff35505974ac91efb13d17866d3a80c498b972", "html_url": "https://github.com/rust-lang/rust/commit/5cff35505974ac91efb13d17866d3a80c498b972"}], "stats": {"total": 48, "additions": 44, "deletions": 4}, "files": [{"sha": "dfbd09dde7d63e9372d2d6206f1d9d5e7df0a9dd", "filename": "crates/hir_ty/src/tests/coercion.rs", "status": "modified", "additions": 44, "deletions": 4, "changes": 48, "blob_url": "https://github.com/rust-lang/rust/blob/cd64353288068119c3a2fb0a179502ec65ea82b7/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/cd64353288068119c3a2fb0a179502ec65ea82b7/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs?ref=cd64353288068119c3a2fb0a179502ec65ea82b7", "patch": "@@ -390,7 +390,7 @@ fn test() {\n     let _: &Foo<[usize]> = &Foo { t: [1, 2, 3] };\n                                    //^^^^^^^^^ expected [usize], got [usize; 3]\n     let _: &Bar<[usize]> = &Bar(Foo { t: [1, 2, 3] });\n-                         //^^^^^^^^^^^^^^^^^^^^^^^^^^ expected &Bar<[usize]>, got &Bar<[i32; 3]>\n+                                       //^^^^^^^^^ expected [usize], got [usize; 3]\n }\n \"#,\n     );\n@@ -522,8 +522,7 @@ fn main() {\n \n #[test]\n fn coerce_unsize_expected_type_2() {\n-    // FIXME: this is wrong, #9560\n-    check(\n+    check_no_mismatches(\n         r#\"\n //- minicore: coerce_unsized\n struct InFile<T>;\n@@ -540,7 +539,48 @@ fn test() {\n     let x: InFile<()> = InFile;\n     let n = &RecordField;\n     takes_dyn(x.with_value(n));\n-           // ^^^^^^^^^^^^^^^ expected InFile<&dyn AstNode>, got InFile<&RecordField>\n+}\n+        \"#,\n+    );\n+}\n+\n+#[test]\n+fn coerce_unsize_expected_type_3() {\n+    check_no_mismatches(\n+        r#\"\n+//- minicore: coerce_unsized\n+enum Option<T> { Some(T), None }\n+struct RecordField;\n+trait AstNode {}\n+impl AstNode for RecordField {}\n+\n+fn takes_dyn(it: Option<&dyn AstNode>) {}\n+\n+fn test() {\n+    let x: InFile<()> = InFile;\n+    let n = &RecordField;\n+    takes_dyn(Option::Some(n));\n+}\n+        \"#,\n+    );\n+}\n+\n+#[test]\n+fn coerce_unsize_expected_type_4() {\n+    check_no_mismatches(\n+        r#\"\n+//- minicore: coerce_unsized\n+use core::{marker::Unsize, ops::CoerceUnsized};\n+\n+struct B<T: ?Sized>(*const T);\n+impl<T: ?Sized> B<T> {\n+    fn new(t: T) -> Self { B(&t) }\n+}\n+\n+impl<T: ?Sized + Unsize<U>, U: ?Sized> CoerceUnsized<B<U>> for B<T> {}\n+\n+fn test() {\n+    let _: B<[isize]> = B::new({ [1, 2, 3] });\n }\n         \"#,\n     );"}]}