{"sha": "44e9e0a6cf2188c404b9420d49de05fa29f3ea19", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ0ZTllMGE2Y2YyMTg4YzQwNGI5NDIwZDQ5ZGUwNWZhMjlmM2VhMTk=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-26T15:15:23Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-02-26T15:15:23Z"}, "message": "Auto merge of #40112 - alexcrichton:fetch-all, r=brson\n\n travis: Make more network requests retryable\n\nThis commit attempts to move more network operations to being retryable through\nvarious operations. For example git submodule updates, downloading snapshots,\netc, are now all in retryable steps.\n\nHopefully this commit can cut down on the number of network failures we've been\nseeing!", "tree": {"sha": "38ab9e6af26725baa1554812418d1444fb8d808b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/38ab9e6af26725baa1554812418d1444fb8d808b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/44e9e0a6cf2188c404b9420d49de05fa29f3ea19", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/44e9e0a6cf2188c404b9420d49de05fa29f3ea19", "html_url": "https://github.com/rust-lang/rust/commit/44e9e0a6cf2188c404b9420d49de05fa29f3ea19", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/44e9e0a6cf2188c404b9420d49de05fa29f3ea19/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "72e6d40f81b44ecda61ca0fcfd50e348679ad795", "url": "https://api.github.com/repos/rust-lang/rust/commits/72e6d40f81b44ecda61ca0fcfd50e348679ad795", "html_url": "https://github.com/rust-lang/rust/commit/72e6d40f81b44ecda61ca0fcfd50e348679ad795"}, {"sha": "c08f3824cd82ca2dfc51a0840d0cdea4816080f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/c08f3824cd82ca2dfc51a0840d0cdea4816080f3", "html_url": "https://github.com/rust-lang/rust/commit/c08f3824cd82ca2dfc51a0840d0cdea4816080f3"}], "stats": {"total": 59, "additions": 48, "deletions": 11}, "files": [{"sha": "9e90a1d2ddbf21b37311751f3d23a121dcd694ee", "filename": ".travis.yml", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/44e9e0a6cf2188c404b9420d49de05fa29f3ea19/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/44e9e0a6cf2188c404b9420d49de05fa29f3ea19/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=44e9e0a6cf2188c404b9420d49de05fa29f3ea19", "patch": "@@ -45,7 +45,7 @@ matrix:\n       os: osx\n       osx_image: xcode8.2\n       install: &osx_install_sccache >\n-        curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-02-24-sccache-x86_64-apple-darwin &&\n+        travis_retry curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-02-24-sccache-x86_64-apple-darwin &&\n           chmod +x /usr/local/bin/sccache\n     - env: >\n         RUST_CHECK_TARGET=check\n@@ -63,7 +63,7 @@ matrix:\n       os: osx\n       osx_image: xcode8.2\n       install: >\n-        curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-02-24-sccache-x86_64-apple-darwin &&\n+        travis_retry curl -o /usr/local/bin/sccache https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-02-24-sccache-x86_64-apple-darwin &&\n           chmod +x /usr/local/bin/sccache &&\n           brew uninstall --ignore-dependencies openssl &&\n           brew install openssl --universal --without-test"}, {"sha": "f76fc0f6466ffebff0843ac63035a9a6ab73f0c8", "filename": "appveyor.yml", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/44e9e0a6cf2188c404b9420d49de05fa29f3ea19/appveyor.yml", "raw_url": "https://github.com/rust-lang/rust/raw/44e9e0a6cf2188c404b9420d49de05fa29f3ea19/appveyor.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/appveyor.yml?ref=44e9e0a6cf2188c404b9420d49de05fa29f3ea19", "patch": "@@ -103,7 +103,7 @@ install:\n   # /usr/bin/python2.7.exe is not. To ensure we use the right interpreter we\n   # move `C:\\Python27` ahead in PATH and then also make sure the `python2.7.exe`\n   # file exists in there (which it doesn't by default).\n-  - if defined MINGW_URL appveyor DownloadFile %MINGW_URL%/%MINGW_ARCHIVE%\n+  - if defined MINGW_URL appveyor-retry appveyor DownloadFile %MINGW_URL%/%MINGW_ARCHIVE%\n   - if defined MINGW_URL 7z x -y %MINGW_ARCHIVE% > nul\n   - if defined MINGW_URL set PATH=%CD%\\%MINGW_DIR%\\bin;C:\\msys64\\usr\\bin;%PATH%\n \n@@ -115,12 +115,12 @@ install:\n   - set PATH=C:\\Python27;%PATH%\n \n   # Download and install sccache\n-  - appveyor DownloadFile https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-02-24-sccache-x86_64-pc-windows-msvc\n+  - appveyor-retry appveyor DownloadFile https://s3.amazonaws.com/rust-lang-ci/rust-ci-mirror/2017-02-24-sccache-x86_64-pc-windows-msvc\n   - mv 2017-02-24-sccache-x86_64-pc-windows-msvc sccache\n   - set PATH=%PATH%;%CD%\n \n   # Install InnoSetup to get `iscc` used to produce installers\n-  - choco install -y InnoSetup\n+  - appveyor-retry choco install -y InnoSetup\n   - set PATH=\"C:\\Program Files (x86)\\Inno Setup 5\";%PATH%\n \n   # Help debug some handle issues on AppVeyor\n@@ -131,7 +131,7 @@ install:\n   - handle.exe -accepteula -help\n \n test_script:\n-  - git submodule update --init\n+  - appveyor-retry sh -c 'git submodule deinit -f . && git submodule update --init'\n   - set SRC=.\n   - set NO_CCACHE=1\n   - sh src/ci/run.sh"}, {"sha": "457ac825832ce1d6ed6f4bb5b9bc719be6dcf524", "filename": "src/bootstrap/mk/Makefile.in", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/44e9e0a6cf2188c404b9420d49de05fa29f3ea19/src%2Fbootstrap%2Fmk%2FMakefile.in", "raw_url": "https://github.com/rust-lang/rust/raw/44e9e0a6cf2188c404b9420d49de05fa29f3ea19/src%2Fbootstrap%2Fmk%2FMakefile.in", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fmk%2FMakefile.in?ref=44e9e0a6cf2188c404b9420d49de05fa29f3ea19", "patch": "@@ -71,6 +71,8 @@ install:\n \t$(Q)$(BOOTSTRAP) dist --install $(BOOTSTRAP_ARGS)\n tidy:\n \t$(Q)$(BOOTSTRAP) test src/tools/tidy $(BOOTSTRAP_ARGS)\n+prepare:\n+\t$(Q)$(BOOTSTRAP) build nonexistent/path/to/trigger/cargo/metadata\n \n check-stage2-T-arm-linux-androideabi-H-x86_64-unknown-linux-gnu:\n \t$(Q)$(BOOTSTRAP) test --target arm-linux-androideabi"}, {"sha": "1e61f2169106cdf63a2678db2a36c587df43ff35", "filename": "src/ci/docker/run.sh", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/44e9e0a6cf2188c404b9420d49de05fa29f3ea19/src%2Fci%2Fdocker%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/44e9e0a6cf2188c404b9420d49de05fa29f3ea19/src%2Fci%2Fdocker%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Frun.sh?ref=44e9e0a6cf2188c404b9420d49de05fa29f3ea19", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/sh\n+#!/bin/bash\n # Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT.\n@@ -19,7 +19,9 @@ ci_dir=\"`dirname $docker_dir`\"\n src_dir=\"`dirname $ci_dir`\"\n root_dir=\"`dirname $src_dir`\"\n \n-docker \\\n+source \"$ci_dir/shared.sh\"\n+\n+retry docker \\\n   build \\\n   --rm \\\n   -t rust-ci \\"}, {"sha": "53d16f6239e66300823c282ccbf4ea0578907979", "filename": "src/ci/run.sh", "status": "modified", "additions": 7, "deletions": 3, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/44e9e0a6cf2188c404b9420d49de05fa29f3ea19/src%2Fci%2Frun.sh", "raw_url": "https://github.com/rust-lang/rust/raw/44e9e0a6cf2188c404b9420d49de05fa29f3ea19/src%2Fci%2Frun.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Frun.sh?ref=44e9e0a6cf2188c404b9420d49de05fa29f3ea19", "patch": "@@ -1,4 +1,4 @@\n-#!/bin/sh\n+#!/bin/bash\n # Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n # file at the top-level directory of this distribution and at\n # http://rust-lang.org/COPYRIGHT.\n@@ -20,6 +20,9 @@ if [ \"$NO_CHANGE_USER\" = \"\" ]; then\n   fi\n fi\n \n+ci_dir=`cd $(dirname $0) && pwd`\n+source \"$ci_dir/shared.sh\"\n+\n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-sccache\"\n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --enable-quiet-tests\"\n RUST_CONFIGURE_ARGS=\"$RUST_CONFIGURE_ARGS --disable-manage-submodules\"\n@@ -54,16 +57,17 @@ else\n   fi\n fi\n \n-set -ex\n-\n $SRC/configure $RUST_CONFIGURE_ARGS\n+retry make prepare\n \n if [ \"$TRAVIS_OS_NAME\" = \"osx\" ]; then\n     ncpus=$(sysctl -n hw.ncpu)\n else\n     ncpus=$(grep processor /proc/cpuinfo | wc -l)\n fi\n \n+set -x\n+\n if [ ! -z \"$SCRIPT\" ]; then\n   sh -x -c \"$SCRIPT\"\n else"}, {"sha": "ecd9b7e98a4823b0e13a9da3b1de6e2acf49b726", "filename": "src/ci/shared.sh", "status": "added", "additions": 29, "deletions": 0, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/44e9e0a6cf2188c404b9420d49de05fa29f3ea19/src%2Fci%2Fshared.sh", "raw_url": "https://github.com/rust-lang/rust/raw/44e9e0a6cf2188c404b9420d49de05fa29f3ea19/src%2Fci%2Fshared.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fshared.sh?ref=44e9e0a6cf2188c404b9420d49de05fa29f3ea19", "patch": "@@ -0,0 +1,29 @@\n+#!/bin/bash\n+# Copyright 2016 The Rust Project Developers. See the COPYRIGHT\n+# file at the top-level directory of this distribution and at\n+# http://rust-lang.org/COPYRIGHT.\n+#\n+# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+# http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+# <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+# option. This file may not be copied, modified, or distributed\n+# except according to those terms.\n+\n+# See http://unix.stackexchange.com/questions/82598\n+function retry {\n+  local n=1\n+  local max=5\n+  local delay=15\n+  while true; do\n+    echo \"Attempting:\" \"$@\"\n+    \"$@\" && break || {\n+      if [[ $n -lt $max ]]; then\n+        ((n++))\n+        echo \"Command failed. Attempt $n/$max:\"\n+      else\n+        echo \"The command has failed after $n attempts.\"\n+        exit 1\n+      fi\n+    }\n+  done\n+}"}]}