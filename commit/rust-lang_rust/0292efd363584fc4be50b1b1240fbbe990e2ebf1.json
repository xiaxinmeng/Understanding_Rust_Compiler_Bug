{"sha": "0292efd363584fc4be50b1b1240fbbe990e2ebf1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAyOTJlZmQzNjM1ODRmYzRiZTUwYjFiMTI0MGZiYmU5OTBlMmViZjE=", "commit": {"author": {"name": "Jade", "email": "software@lfcode.ca", "date": "2021-05-25T13:27:41Z"}, "committer": {"name": "Jade", "email": "software@lfcode.ca", "date": "2021-05-25T13:27:41Z"}, "message": "Also do goto implementation on assoc consts\n\nI forgot to put this into #8988, sorry.\n\nGoto implementation on a const on the trait will go to the\nimplementations with their respective definitions of the const, if\npresent.", "tree": {"sha": "9b952f814b4733f287ea9f5fb3f9bc412514a923", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9b952f814b4733f287ea9f5fb3f9bc412514a923"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0292efd363584fc4be50b1b1240fbbe990e2ebf1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0292efd363584fc4be50b1b1240fbbe990e2ebf1", "html_url": "https://github.com/rust-lang/rust/commit/0292efd363584fc4be50b1b1240fbbe990e2ebf1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0292efd363584fc4be50b1b1240fbbe990e2ebf1/comments", "author": {"login": "lf-", "id": 6652840, "node_id": "MDQ6VXNlcjY2NTI4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6652840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lf-", "html_url": "https://github.com/lf-", "followers_url": "https://api.github.com/users/lf-/followers", "following_url": "https://api.github.com/users/lf-/following{/other_user}", "gists_url": "https://api.github.com/users/lf-/gists{/gist_id}", "starred_url": "https://api.github.com/users/lf-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lf-/subscriptions", "organizations_url": "https://api.github.com/users/lf-/orgs", "repos_url": "https://api.github.com/users/lf-/repos", "events_url": "https://api.github.com/users/lf-/events{/privacy}", "received_events_url": "https://api.github.com/users/lf-/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lf-", "id": 6652840, "node_id": "MDQ6VXNlcjY2NTI4NDA=", "avatar_url": "https://avatars.githubusercontent.com/u/6652840?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lf-", "html_url": "https://github.com/lf-", "followers_url": "https://api.github.com/users/lf-/followers", "following_url": "https://api.github.com/users/lf-/following{/other_user}", "gists_url": "https://api.github.com/users/lf-/gists{/gist_id}", "starred_url": "https://api.github.com/users/lf-/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lf-/subscriptions", "organizations_url": "https://api.github.com/users/lf-/orgs", "repos_url": "https://api.github.com/users/lf-/repos", "events_url": "https://api.github.com/users/lf-/events{/privacy}", "received_events_url": "https://api.github.com/users/lf-/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f3cfd8afb6db1ee0a8449655703172a0c8cf5411", "url": "https://api.github.com/repos/rust-lang/rust/commits/f3cfd8afb6db1ee0a8449655703172a0c8cf5411", "html_url": "https://github.com/rust-lang/rust/commit/f3cfd8afb6db1ee0a8449655703172a0c8cf5411"}], "stats": {"total": 28, "additions": 26, "deletions": 2}, "files": [{"sha": "43356a94edf4f3ac62179fa82ac8c89fb9f889fa", "filename": "crates/ide/src/goto_implementation.rs", "status": "modified", "additions": 26, "deletions": 2, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/0292efd363584fc4be50b1b1240fbbe990e2ebf1/crates%2Fide%2Fsrc%2Fgoto_implementation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0292efd363584fc4be50b1b1240fbbe990e2ebf1/crates%2Fide%2Fsrc%2Fgoto_implementation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fide%2Fsrc%2Fgoto_implementation.rs?ref=0292efd363584fc4be50b1b1240fbbe990e2ebf1", "patch": "@@ -53,7 +53,13 @@ pub(crate) fn goto_implementation(\n             let assoc = f.as_assoc_item(sema.db)?;\n             let name = assoc.name(sema.db)?;\n             let trait_ = assoc.containing_trait(sema.db)?;\n-            impls_for_trait_fn(&sema, trait_, name)\n+            impls_for_trait_item(&sema, trait_, name)\n+        }\n+        hir::ModuleDef::Const(c) => {\n+            let assoc = c.as_assoc_item(sema.db)?;\n+            let name = assoc.name(sema.db)?;\n+            let trait_ = assoc.containing_trait(sema.db)?;\n+            impls_for_trait_item(&sema, trait_, name)\n         }\n         _ => return None,\n     };\n@@ -71,7 +77,7 @@ fn impls_for_trait(sema: &Semantics<RootDatabase>, trait_: hir::Trait) -> Vec<Na\n         .collect()\n }\n \n-fn impls_for_trait_fn(\n+fn impls_for_trait_item(\n     sema: &Semantics<RootDatabase>,\n     trait_: hir::Trait,\n     fun_name: hir::Name,\n@@ -303,6 +309,24 @@ impl Tr for S {\n         println!(\"Hello, world!\");\n     }\n }\n+\"#,\n+        );\n+    }\n+\n+    #[test]\n+    fn goto_implementation_trait_assoc_const() {\n+        check(\n+            r#\"\n+trait Tr {\n+    const C$0: usize;\n+}\n+\n+struct S;\n+\n+impl Tr for S {\n+    const C: usize = 4;\n+        //^\n+}\n \"#,\n         );\n     }"}]}