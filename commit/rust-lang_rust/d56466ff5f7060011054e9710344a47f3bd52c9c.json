{"sha": "d56466ff5f7060011054e9710344a47f3bd52c9c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ1NjQ2NmZmNWY3MDYwMDExMDU0ZTk3MTAzNDRhNDdmM2JkNTJjOWM=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2019-10-21T10:53:01Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2019-10-21T10:53:01Z"}, "message": "Rollup merge of #65544 - dorfsmay:doc_keyword_break, r=Dylan-DPC\n\nAdded doc on keyword break\n\nRE: #34601", "tree": {"sha": "8a67b3699dd9e3c2d410f2dabab47f68eae1fbda", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8a67b3699dd9e3c2d410f2dabab47f68eae1fbda"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d56466ff5f7060011054e9710344a47f3bd52c9c", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJdrY4NCRBK7hj4Ov3rIwAAdHIIAH0/gfPXyz1zMBtmY8NeHugA\n+F/wS8NLvy2h6I1rRy2l9IGcr4QWqIBd/83QR+PJ9PQCRSgiyIiGSeZ3hYrHXzFF\nj/nIOxmleZcWeYazQlombAYA/f9HnmFENHNK75uSXykaAiODLc2co/CpcyORHNB9\n4epY7fbWlU096CF0MiIItgQBNEFHdw2Ng5AfR7TmhGBSz4kJlqHeMbaciF/jGQ9l\n1U+r+GDrj/cYQdMGUHnq1QIxbswFLTMd1jYQwWiqYtacq2WRc6YhpAZNmfrTt1Eg\n+QjosH/ir2Rk5+okQt/8OaZr9WodICuSHiFrHQ5mfkmV/NG8VWSrLT7E6lGARgc=\n=HQCP\n-----END PGP SIGNATURE-----\n", "payload": "tree 8a67b3699dd9e3c2d410f2dabab47f68eae1fbda\nparent 1ba7b4ecefc64d89096501f59feb403e3c826d0f\nparent 11214a63125efc187ef0c3acd90f8f8cf7c93dc6\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1571655181 +0900\ncommitter GitHub <noreply@github.com> 1571655181 +0900\n\nRollup merge of #65544 - dorfsmay:doc_keyword_break, r=Dylan-DPC\n\nAdded doc on keyword break\n\nRE: #34601\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d56466ff5f7060011054e9710344a47f3bd52c9c", "html_url": "https://github.com/rust-lang/rust/commit/d56466ff5f7060011054e9710344a47f3bd52c9c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d56466ff5f7060011054e9710344a47f3bd52c9c/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1ba7b4ecefc64d89096501f59feb403e3c826d0f", "url": "https://api.github.com/repos/rust-lang/rust/commits/1ba7b4ecefc64d89096501f59feb403e3c826d0f", "html_url": "https://github.com/rust-lang/rust/commit/1ba7b4ecefc64d89096501f59feb403e3c826d0f"}, {"sha": "11214a63125efc187ef0c3acd90f8f8cf7c93dc6", "url": "https://api.github.com/repos/rust-lang/rust/commits/11214a63125efc187ef0c3acd90f8f8cf7c93dc6", "html_url": "https://github.com/rust-lang/rust/commit/11214a63125efc187ef0c3acd90f8f8cf7c93dc6"}], "stats": {"total": 67, "additions": 65, "deletions": 2}, "files": [{"sha": "ab8a55660cb0c3be93a2dc560b3c11bebea856d5", "filename": "src/libstd/keyword_docs.rs", "status": "modified", "additions": 65, "deletions": 2, "changes": 67, "blob_url": "https://github.com/rust-lang/rust/blob/d56466ff5f7060011054e9710344a47f3bd52c9c/src%2Flibstd%2Fkeyword_docs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d56466ff5f7060011054e9710344a47f3bd52c9c/src%2Flibstd%2Fkeyword_docs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fkeyword_docs.rs?ref=d56466ff5f7060011054e9710344a47f3bd52c9c", "patch": "@@ -33,9 +33,72 @@ mod as_keyword { }\n //\n /// Exit early from a loop.\n ///\n-/// The documentation for this keyword is [not yet complete]. Pull requests welcome!\n+/// When `break` is encountered, execution of the associated loop body is\n+/// immediately terminated.\n+///\n+/// ```rust\n+/// let mut last = 0;\n+///\n+/// for x in 1..100 {\n+///     if x > 12 {\n+///         break;\n+///     }\n+///     last = x;\n+/// }\n+///\n+/// assert_eq!(last, 12);\n+/// println!(\"{}\", last);\n+/// ```\n+///\n+/// A break expression is normally associated with the innermost loop enclosing the\n+/// `break` but a label can be used to specify which enclosing loop is affected.\n+///\n+///```rust\n+/// 'outer: for i in 1..=5 {\n+///     println!(\"outer iteration (i): {}\", i);\n+///\n+///     'inner: for j in 1..=200 {\n+///         println!(\"    inner iteration (j): {}\", j);\n+///         if j >= 3 {\n+///             // breaks from inner loop, let's outer loop continue.\n+///             break;\n+///         }\n+///         if i >= 2 {\n+///             // breaks from outer loop, and directly to \"Bye\".\n+///             break 'outer;\n+///         }\n+///     }\n+/// }\n+/// println!(\"Bye.\");\n+///```\n+///\n+/// When associated with `loop`, a break expression may be used to return a value from that loop.\n+/// This is only valid with `loop` and not with any other type of loop.\n+/// If no value is specified, `break;` returns `()`.\n+/// Every `break` within a loop must return the same type.\n+///\n+/// ```rust\n+/// let (mut a, mut b) = (1, 1);\n+/// let result = loop {\n+///     if b > 10 {\n+///         break b;\n+///     }\n+///     let c = a + b;\n+///     a = b;\n+///     b = c;\n+/// };\n+/// // first number in Fibonacci sequence over 10:\n+/// assert_eq!(result, 13);\n+/// println!(\"{}\", result);\n+/// ```\n+///\n+/// For more details consult the [Reference on \"break expression\"] and the [Reference on \"break and\n+/// loop values\"].\n+///\n+/// [Reference on \"break expression\"]: ../reference/expressions/loop-expr.html#break-expressions\n+/// [Reference on \"break and loop values\"]:\n+/// ../reference/expressions/loop-expr.html#break-and-loop-values\n ///\n-/// [not yet complete]: https://github.com/rust-lang/rust/issues/34601\n mod break_keyword { }\n \n #[doc(keyword = \"const\")]"}]}