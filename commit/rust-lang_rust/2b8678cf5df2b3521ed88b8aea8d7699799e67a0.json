{"sha": "2b8678cf5df2b3521ed88b8aea8d7699799e67a0", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJiODY3OGNmNWRmMmIzNTIxZWQ4OGI4YWVhOGQ3Njk5Nzk5ZTY3YTA=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-11T19:52:37Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2015-01-11T19:52:37Z"}, "message": "Give where clauses priority over builtin rules. Fixes #20959.", "tree": {"sha": "ea88717386d91d13b4fb08d8eeaac0410ac3b78e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ea88717386d91d13b4fb08d8eeaac0410ac3b78e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2b8678cf5df2b3521ed88b8aea8d7699799e67a0", "comment_count": 6, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2b8678cf5df2b3521ed88b8aea8d7699799e67a0", "html_url": "https://github.com/rust-lang/rust/commit/2b8678cf5df2b3521ed88b8aea8d7699799e67a0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2b8678cf5df2b3521ed88b8aea8d7699799e67a0/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "06e798a881d80eb959a71da5ebbd164f056a4531", "url": "https://api.github.com/repos/rust-lang/rust/commits/06e798a881d80eb959a71da5ebbd164f056a4531", "html_url": "https://github.com/rust-lang/rust/commit/06e798a881d80eb959a71da5ebbd164f056a4531"}], "stats": {"total": 31, "additions": 31, "deletions": 0}, "files": [{"sha": "c3cf23042f9beea616c1409d1e65c099d9921e3b", "filename": "src/librustc/middle/traits/select.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/2b8678cf5df2b3521ed88b8aea8d7699799e67a0/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b8678cf5df2b3521ed88b8aea8d7699799e67a0/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs?ref=2b8678cf5df2b3521ed88b8aea8d7699799e67a0", "patch": "@@ -1166,6 +1166,14 @@ impl<'cx, 'tcx> SelectionContext<'cx, 'tcx> {\n                         .is_ok()\n                 })\n             }\n+            (&BuiltinCandidate(_), &ParamCandidate(_)) => {\n+                // If we have a where-clause like `Option<K> : Send`,\n+                // then we wind up in a situation where there is a\n+                // default rule (`Option<K>:Send if K:Send) and the\n+                // where-clause that both seem applicable. Just take\n+                // the where-clause in that case.\n+                true\n+            }\n             (&ProjectionCandidate, &ParamCandidate(_)) => {\n                 // FIXME(#20297) -- this gives where clauses precedent\n                 // over projections. Really these are just two means"}, {"sha": "ca66a106c437efab2ddf15ede1018e7bcfc42907", "filename": "src/test/run-pass/trait-false-ambiguity-where-clause-builtin-bound.rs", "status": "added", "additions": 23, "deletions": 0, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/2b8678cf5df2b3521ed88b8aea8d7699799e67a0/src%2Ftest%2Frun-pass%2Ftrait-false-ambiguity-where-clause-builtin-bound.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2b8678cf5df2b3521ed88b8aea8d7699799e67a0/src%2Ftest%2Frun-pass%2Ftrait-false-ambiguity-where-clause-builtin-bound.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Ftrait-false-ambiguity-where-clause-builtin-bound.rs?ref=2b8678cf5df2b3521ed88b8aea8d7699799e67a0", "patch": "@@ -0,0 +1,23 @@\n+// Copyright 2015 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Test that we do not error out because of a (False) ambiguity\n+// between the builtin rules for Sized and the where clause. Issue\n+// #20959.\n+\n+fn foo<K>(x: Option<K>)\n+    where Option<K> : Sized\n+{\n+    let _y = x;\n+}\n+\n+fn main() {\n+    foo(Some(22));\n+}"}]}