{"sha": "0189ef360092dbebfef5bdfd7a2ebe0c0ccc0f3c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxODllZjM2MDA5MmRiZWJmZWY1YmRmZDdhMmViZTBjMGNjYzBmM2M=", "commit": {"author": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-03-29T19:34:14Z"}, "committer": {"name": "Daniel Micay", "email": "danielmicay@gmail.com", "date": "2013-03-29T19:45:10Z"}, "message": "tutorial: add an example of freezing a managed box", "tree": {"sha": "431af679f2988aa9ee1c1f268e19c6b320690640", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/431af679f2988aa9ee1c1f268e19c6b320690640"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0189ef360092dbebfef5bdfd7a2ebe0c0ccc0f3c", "comment_count": 5, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0189ef360092dbebfef5bdfd7a2ebe0c0ccc0f3c", "html_url": "https://github.com/rust-lang/rust/commit/0189ef360092dbebfef5bdfd7a2ebe0c0ccc0f3c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0189ef360092dbebfef5bdfd7a2ebe0c0ccc0f3c/comments", "author": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "committer": {"login": "thestinger", "id": 1505226, "node_id": "MDQ6VXNlcjE1MDUyMjY=", "avatar_url": "https://avatars.githubusercontent.com/u/1505226?v=4", "gravatar_id": "", "url": "https://api.github.com/users/thestinger", "html_url": "https://github.com/thestinger", "followers_url": "https://api.github.com/users/thestinger/followers", "following_url": "https://api.github.com/users/thestinger/following{/other_user}", "gists_url": "https://api.github.com/users/thestinger/gists{/gist_id}", "starred_url": "https://api.github.com/users/thestinger/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/thestinger/subscriptions", "organizations_url": "https://api.github.com/users/thestinger/orgs", "repos_url": "https://api.github.com/users/thestinger/repos", "events_url": "https://api.github.com/users/thestinger/events{/privacy}", "received_events_url": "https://api.github.com/users/thestinger/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f78af18127e2bc0075479e8495bfa63807e938fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/f78af18127e2bc0075479e8495bfa63807e938fc", "html_url": "https://github.com/rust-lang/rust/commit/f78af18127e2bc0075479e8495bfa63807e938fc"}], "stats": {"total": 19, "additions": 15, "deletions": 4}, "files": [{"sha": "7518e3ef6761453aa4ef01e2214a387d374d7346", "filename": "doc/tutorial.md", "status": "modified", "additions": 15, "deletions": 4, "changes": 19, "blob_url": "https://github.com/rust-lang/rust/blob/0189ef360092dbebfef5bdfd7a2ebe0c0ccc0f3c/doc%2Ftutorial.md", "raw_url": "https://github.com/rust-lang/rust/raw/0189ef360092dbebfef5bdfd7a2ebe0c0ccc0f3c/doc%2Ftutorial.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Ftutorial.md?ref=0189ef360092dbebfef5bdfd7a2ebe0c0ccc0f3c", "patch": "@@ -1173,10 +1173,7 @@ For a more in-depth explanation of borrowed pointers, read the\n ## Freezing\n \n Borrowing an immutable pointer to an object freezes it and prevents mutation.\n-`Owned` objects have freezing enforced statically at compile-time. Mutable\n-managed boxes handle freezing dynamically when any of their contents are\n-borrowed, and the task will fail if an attempt to modify them is made while\n-they are frozen.\n+`Owned` objects have freezing enforced statically at compile-time.\n \n ~~~~\n let mut x = 5;\n@@ -1186,6 +1183,20 @@ let mut x = 5;\n // x is now unfrozen again\n ~~~~\n \n+Mutable managed boxes handle freezing dynamically when any of their contents\n+are borrowed, and the task will fail if an attempt to modify them is made while\n+they are frozen:\n+\n+~~~~\n+let x = @mut 5;\n+let y = x;\n+{\n+    let y = &*y; // the managed box is now frozen\n+    // modifying it through x or y will cause a task failure\n+}\n+// the box is now unfrozen again\n+~~~~\n+\n # Dereferencing pointers\n \n Rust uses the unary star operator (`*`) to access the contents of a"}]}