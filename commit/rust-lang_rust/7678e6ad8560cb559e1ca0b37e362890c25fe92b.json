{"sha": "7678e6ad8560cb559e1ca0b37e362890c25fe92b", "node_id": "C_kwDOAAsO6NoAKDc2NzhlNmFkODU2MGNiNTU5ZTFjYTBiMzdlMzYyODkwYzI1ZmU5MmI", "commit": {"author": {"name": "Nika Layzell", "email": "nika@thelayzells.com", "date": "2021-06-28T23:43:40Z"}, "committer": {"name": "Nika Layzell", "email": "nika@thelayzells.com", "date": "2022-06-15T02:12:46Z"}, "message": "proc_macro: support encoding/decoding structs with type parameters", "tree": {"sha": "d3c756ec941b2bf668d059054177469e1810a50e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d3c756ec941b2bf668d059054177469e1810a50e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7678e6ad8560cb559e1ca0b37e362890c25fe92b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7678e6ad8560cb559e1ca0b37e362890c25fe92b", "html_url": "https://github.com/rust-lang/rust/commit/7678e6ad8560cb559e1ca0b37e362890c25fe92b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7678e6ad8560cb559e1ca0b37e362890c25fe92b/comments", "author": {"login": "mystor", "id": 1261662, "node_id": "MDQ6VXNlcjEyNjE2NjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1261662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mystor", "html_url": "https://github.com/mystor", "followers_url": "https://api.github.com/users/mystor/followers", "following_url": "https://api.github.com/users/mystor/following{/other_user}", "gists_url": "https://api.github.com/users/mystor/gists{/gist_id}", "starred_url": "https://api.github.com/users/mystor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mystor/subscriptions", "organizations_url": "https://api.github.com/users/mystor/orgs", "repos_url": "https://api.github.com/users/mystor/repos", "events_url": "https://api.github.com/users/mystor/events{/privacy}", "received_events_url": "https://api.github.com/users/mystor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mystor", "id": 1261662, "node_id": "MDQ6VXNlcjEyNjE2NjI=", "avatar_url": "https://avatars.githubusercontent.com/u/1261662?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mystor", "html_url": "https://github.com/mystor", "followers_url": "https://api.github.com/users/mystor/followers", "following_url": "https://api.github.com/users/mystor/following{/other_user}", "gists_url": "https://api.github.com/users/mystor/gists{/gist_id}", "starred_url": "https://api.github.com/users/mystor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mystor/subscriptions", "organizations_url": "https://api.github.com/users/mystor/orgs", "repos_url": "https://api.github.com/users/mystor/repos", "events_url": "https://api.github.com/users/mystor/events{/privacy}", "received_events_url": "https://api.github.com/users/mystor/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2d1e0750792529248ed6f11061940c7203d668c9", "url": "https://api.github.com/repos/rust-lang/rust/commits/2d1e0750792529248ed6f11061940c7203d668c9", "html_url": "https://github.com/rust-lang/rust/commit/2d1e0750792529248ed6f11061940c7203d668c9"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "e19fcf68c5c0c6b7377c026a89c9f2b77777c99a", "filename": "library/proc_macro/src/bridge/rpc.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/7678e6ad8560cb559e1ca0b37e362890c25fe92b/library%2Fproc_macro%2Fsrc%2Fbridge%2Frpc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7678e6ad8560cb559e1ca0b37e362890c25fe92b/library%2Fproc_macro%2Fsrc%2Fbridge%2Frpc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fproc_macro%2Fsrc%2Fbridge%2Frpc.rs?ref=7678e6ad8560cb559e1ca0b37e362890c25fe92b", "patch": "@@ -43,15 +43,17 @@ macro_rules! rpc_encode_decode {\n             }\n         }\n     };\n-    (struct $name:ident { $($field:ident),* $(,)? }) => {\n-        impl<S> Encode<S> for $name {\n+    (struct $name:ident $(<$($T:ident),+>)? { $($field:ident),* $(,)? }) => {\n+        impl<S, $($($T: Encode<S>),+)?> Encode<S> for $name $(<$($T),+>)? {\n             fn encode(self, w: &mut Writer, s: &mut S) {\n                 $(self.$field.encode(w, s);)*\n             }\n         }\n \n-        impl<S> DecodeMut<'_, '_, S> for $name {\n-            fn decode(r: &mut Reader<'_>, s: &mut S) -> Self {\n+        impl<'a, S, $($($T: for<'s> DecodeMut<'a, 's, S>),+)?> DecodeMut<'a, '_, S>\n+            for $name $(<$($T),+>)?\n+        {\n+            fn decode(r: &mut Reader<'a>, s: &mut S) -> Self {\n                 $name {\n                     $($field: DecodeMut::decode(r, s)),*\n                 }"}]}