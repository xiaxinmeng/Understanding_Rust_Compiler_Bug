{"sha": "36ab4ec2dc1795ed1d700d80437963c049ed551a", "node_id": "C_kwDOAAsO6NoAKDM2YWI0ZWMyZGMxNzk1ZWQxZDcwMGQ4MDQzNzk2M2MwNDllZDU1MWE", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-07-29T22:39:48Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-07-29T22:39:48Z"}, "message": "Rollup merge of #99227 - Lokathor:fix-thumbv4t-none-eabi-frame-pointer, r=davidtwco\n\nFix thumbv4t-none-eabi frame pointer setting\n\nThe `thumb_base` profile has changed since I last remember seeing it, and now it sets the frame pointer to \"always keep\", which is not desired for this target. Hooking a debugger to the running program is not really done, it's preferable to have the register available for actual program use, so the default \"may omit\" is now set.\n\nI thought that the target was already using \"may omit\" when I checked on it last month, because I forgot that the target was previously based on `thumb_base` rather than `Default::default()`. I only noticed the issue just now when creating the `armv4t-none-eabi` target (https://github.com/rust-lang/rust/pull/99226), though this PR is not in any way conditional on that one.", "tree": {"sha": "26a4fc099dbb82c8209d148cd12ad4916204f031", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/26a4fc099dbb82c8209d148cd12ad4916204f031"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/36ab4ec2dc1795ed1d700d80437963c049ed551a", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJi5GG0CRBK7hj4Ov3rIwAAPVoIAJwGA0lTqn0vnasFubAYRjFG\nLyNnJs7/Of1TO12TWohQwNG0D9zAUxFq+m6oByocbo0Tt850rTwvoYC0k+/oa8dz\nBnTHYwpzJykYQyDk5rQlSZH3U5VKNOmjcorwCWzc/gVc+xaucm+OUoMzOaABGfwx\nFAr9vBKQjCOIAfGvr/MhSKPgsYVg4ScN+V4tITvcje39b4/8q0vxUAAJj0Bxjrtn\nm2jVbLIYv45XSiRvVW6MX5zuYUGtBvwpJ7i8Kb65BCxFOwJ6fRBLHXPQxeIDvftQ\nWzQHuUSzxBnJMrx/FHKHb1KQA6Z6N6gYTwDI1ygkVXMQs9WtMZp5MZq9GgdCnNo=\n=T4ef\n-----END PGP SIGNATURE-----\n", "payload": "tree 26a4fc099dbb82c8209d148cd12ad4916204f031\nparent 3924dac7bb29bc8eb348059c901e8f912399c857\nparent 2eac6f30c8a1cd59dc640bf68bc58eb7fe656d61\nauthor Yuki Okushi <jtitor@2k36.org> 1659134388 +0900\ncommitter GitHub <noreply@github.com> 1659134388 +0900\n\nRollup merge of #99227 - Lokathor:fix-thumbv4t-none-eabi-frame-pointer, r=davidtwco\n\nFix thumbv4t-none-eabi frame pointer setting\n\nThe `thumb_base` profile has changed since I last remember seeing it, and now it sets the frame pointer to \"always keep\", which is not desired for this target. Hooking a debugger to the running program is not really done, it's preferable to have the register available for actual program use, so the default \"may omit\" is now set.\n\nI thought that the target was already using \"may omit\" when I checked on it last month, because I forgot that the target was previously based on `thumb_base` rather than `Default::default()`. I only noticed the issue just now when creating the `armv4t-none-eabi` target (https://github.com/rust-lang/rust/pull/99226), though this PR is not in any way conditional on that one.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/36ab4ec2dc1795ed1d700d80437963c049ed551a", "html_url": "https://github.com/rust-lang/rust/commit/36ab4ec2dc1795ed1d700d80437963c049ed551a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/36ab4ec2dc1795ed1d700d80437963c049ed551a/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3924dac7bb29bc8eb348059c901e8f912399c857", "url": "https://api.github.com/repos/rust-lang/rust/commits/3924dac7bb29bc8eb348059c901e8f912399c857", "html_url": "https://github.com/rust-lang/rust/commit/3924dac7bb29bc8eb348059c901e8f912399c857"}, {"sha": "2eac6f30c8a1cd59dc640bf68bc58eb7fe656d61", "url": "https://api.github.com/repos/rust-lang/rust/commits/2eac6f30c8a1cd59dc640bf68bc58eb7fe656d61", "html_url": "https://github.com/rust-lang/rust/commit/2eac6f30c8a1cd59dc640bf68bc58eb7fe656d61"}], "stats": {"total": 24, "additions": 21, "deletions": 3}, "files": [{"sha": "7125d141af7f5ad1672fd812c362c79864e6bb93", "filename": "compiler/rustc_target/src/spec/thumbv4t_none_eabi.rs", "status": "modified", "additions": 21, "deletions": 3, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/36ab4ec2dc1795ed1d700d80437963c049ed551a/compiler%2Frustc_target%2Fsrc%2Fspec%2Fthumbv4t_none_eabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/36ab4ec2dc1795ed1d700d80437963c049ed551a/compiler%2Frustc_target%2Fsrc%2Fspec%2Fthumbv4t_none_eabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_target%2Fsrc%2Fspec%2Fthumbv4t_none_eabi.rs?ref=36ab4ec2dc1795ed1d700d80437963c049ed551a", "patch": "@@ -4,11 +4,21 @@\n //!\n //! Please ping @Lokathor if changes are needed.\n //!\n-//! This target profile assumes that you have the ARM binutils in your path (specifically the linker, `arm-none-eabi-ld`). They can be obtained for free for all major OSes from the ARM developer's website, and they may also be available in your system's package manager. Unfortunately, the standard linker that Rust uses (`lld`) only supports as far back as `ARMv5TE`, so we must use the GNU `ld` linker.\n+//! This target profile assumes that you have the ARM binutils in your path\n+//! (specifically the linker, `arm-none-eabi-ld`). They can be obtained for free\n+//! for all major OSes from the ARM developer's website, and they may also be\n+//! available in your system's package manager. Unfortunately, the standard\n+//! linker that Rust uses (`lld`) only supports as far back as `ARMv5TE`, so we\n+//! must use the GNU `ld` linker.\n //!\n-//! **Important:** This target profile **does not** specify a linker script. You just get the default link script when you build a binary for this target. The default link script is very likely wrong, so you should use `-Clink-arg=-Tmy_script.ld` to override that with a correct linker script.\n+//! **Important:** This target profile **does not** specify a linker script. You\n+//! just get the default link script when you build a binary for this target.\n+//! The default link script is very likely wrong, so you should use\n+//! `-Clink-arg=-Tmy_script.ld` to override that with a correct linker script.\n \n-use crate::spec::{cvs, LinkerFlavor, Target, TargetOptions};\n+use crate::spec::{\n+    cvs, FramePointer, LinkerFlavor, PanicStrategy, RelocModel, Target, TargetOptions,\n+};\n \n pub fn target() -> Target {\n     Target {\n@@ -39,6 +49,14 @@ pub fn target() -> Target {\n             // minimum extra features, these cannot be disabled via -C\n             features: \"+soft-float,+strict-align\".into(),\n \n+            panic_strategy: PanicStrategy::Abort,\n+            relocation_model: RelocModel::Static,\n+            // suggested from thumb_base, rust-lang/rust#44993.\n+            emit_debug_gdb_scripts: false,\n+            // suggested from thumb_base, with no-os gcc/clang use 8-bit enums\n+            c_enum_min_bits: 8,\n+            frame_pointer: FramePointer::MayOmit,\n+\n             main_needs_argc_argv: false,\n \n             // don't have atomic compare-and-swap"}]}