{"sha": "5c58653e46b73bbc2bb6811be2eefa4b6675c942", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNTg2NTNlNDZiNzNiYmMyYmI2ODExYmUyZWVmYTRiNjY3NWM5NDI=", "commit": {"author": {"name": "Chris Stankus", "email": "cdstankus@gmail.com", "date": "2017-01-18T06:16:19Z"}, "committer": {"name": "Chris Stankus", "email": "cdstankus@gmail.com", "date": "2017-01-18T06:16:19Z"}, "message": "E0122 should apply with where clauses", "tree": {"sha": "0be338faf852011bef1f378b60c1dd1cbda36a88", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0be338faf852011bef1f378b60c1dd1cbda36a88"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c58653e46b73bbc2bb6811be2eefa4b6675c942", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c58653e46b73bbc2bb6811be2eefa4b6675c942", "html_url": "https://github.com/rust-lang/rust/commit/5c58653e46b73bbc2bb6811be2eefa4b6675c942", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c58653e46b73bbc2bb6811be2eefa4b6675c942/comments", "author": {"login": "circuitfox", "id": 6395282, "node_id": "MDQ6VXNlcjYzOTUyODI=", "avatar_url": "https://avatars.githubusercontent.com/u/6395282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/circuitfox", "html_url": "https://github.com/circuitfox", "followers_url": "https://api.github.com/users/circuitfox/followers", "following_url": "https://api.github.com/users/circuitfox/following{/other_user}", "gists_url": "https://api.github.com/users/circuitfox/gists{/gist_id}", "starred_url": "https://api.github.com/users/circuitfox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/circuitfox/subscriptions", "organizations_url": "https://api.github.com/users/circuitfox/orgs", "repos_url": "https://api.github.com/users/circuitfox/repos", "events_url": "https://api.github.com/users/circuitfox/events{/privacy}", "received_events_url": "https://api.github.com/users/circuitfox/received_events", "type": "User", "site_admin": false}, "committer": {"login": "circuitfox", "id": 6395282, "node_id": "MDQ6VXNlcjYzOTUyODI=", "avatar_url": "https://avatars.githubusercontent.com/u/6395282?v=4", "gravatar_id": "", "url": "https://api.github.com/users/circuitfox", "html_url": "https://github.com/circuitfox", "followers_url": "https://api.github.com/users/circuitfox/followers", "following_url": "https://api.github.com/users/circuitfox/following{/other_user}", "gists_url": "https://api.github.com/users/circuitfox/gists{/gist_id}", "starred_url": "https://api.github.com/users/circuitfox/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/circuitfox/subscriptions", "organizations_url": "https://api.github.com/users/circuitfox/orgs", "repos_url": "https://api.github.com/users/circuitfox/repos", "events_url": "https://api.github.com/users/circuitfox/events{/privacy}", "received_events_url": "https://api.github.com/users/circuitfox/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "c07a6ae77cd4ceb3cf591d34c5608ca91d1f75d4", "url": "https://api.github.com/repos/rust-lang/rust/commits/c07a6ae77cd4ceb3cf591d34c5608ca91d1f75d4", "html_url": "https://github.com/rust-lang/rust/commit/c07a6ae77cd4ceb3cf591d34c5608ca91d1f75d4"}], "stats": {"total": 27, "additions": 26, "deletions": 1}, "files": [{"sha": "e13434db5d886341ddc1abd0f65ee2a93407e78d", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/5c58653e46b73bbc2bb6811be2eefa4b6675c942/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c58653e46b73bbc2bb6811be2eefa4b6675c942/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=5c58653e46b73bbc2bb6811be2eefa4b6675c942", "patch": "@@ -716,6 +716,16 @@ fn ensure_no_ty_param_bounds(ccx: &CrateCtxt,\n         }\n     }\n \n+    for predicate in generics.where_clause.predicates.iter() {\n+        match *predicate {\n+            hir::WherePredicate::BoundPredicate(..) => {\n+                warn = true;\n+            }\n+            hir::WherePredicate::RegionPredicate(..) => { }\n+            hir::WherePredicate::EqPredicate(..) => { }\n+        }\n+    }\n+\n     if warn {\n         // According to accepted RFC #XXX, we should\n         // eventually accept these, but it will not be"}, {"sha": "ac15bd9d15b04ee2e137b1669900aef76be72a9c", "filename": "src/test/compile-fail/issue-17994.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/5c58653e46b73bbc2bb6811be2eefa4b6675c942/src%2Ftest%2Fcompile-fail%2Fissue-17994.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c58653e46b73bbc2bb6811be2eefa4b6675c942/src%2Ftest%2Fcompile-fail%2Fissue-17994.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-17994.rs?ref=5c58653e46b73bbc2bb6811be2eefa4b6675c942", "patch": "@@ -9,5 +9,6 @@\n // except according to those terms.\n \n trait Tr {}\n-type Huh<T> where T: Tr = isize; //~ ERROR type parameter `T` is unused\n+type Huh<T> where T: Tr = isize; //~  ERROR type parameter `T` is unused\n+                                 //~| WARNING E0122\n fn main() {}"}, {"sha": "2e8a740f89394d28cc093c678188a5c4f26e9195", "filename": "src/test/compile-fail/issue-39122.rs", "status": "added", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/5c58653e46b73bbc2bb6811be2eefa4b6675c942/src%2Ftest%2Fcompile-fail%2Fissue-39122.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c58653e46b73bbc2bb6811be2eefa4b6675c942/src%2Ftest%2Fcompile-fail%2Fissue-39122.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fissue-39122.rs?ref=5c58653e46b73bbc2bb6811be2eefa4b6675c942", "patch": "@@ -0,0 +1,13 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+type Foo<T: std::ops::Add> = T; //~ WARNING E0122\n+\n+type Bar<T> where T: std::ops::Add = T; //~ WARNING E0122"}, {"sha": "92d96595fd780a5f157cfe1dd82e6a6140381a22", "filename": "src/test/compile-fail/private-in-public-warn.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/5c58653e46b73bbc2bb6811be2eefa4b6675c942/src%2Ftest%2Fcompile-fail%2Fprivate-in-public-warn.rs", "raw_url": "https://github.com/rust-lang/rust/raw/5c58653e46b73bbc2bb6811be2eefa4b6675c942/src%2Ftest%2Fcompile-fail%2Fprivate-in-public-warn.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivate-in-public-warn.rs?ref=5c58653e46b73bbc2bb6811be2eefa4b6675c942", "patch": "@@ -89,6 +89,7 @@ mod traits_where {\n     pub type Alias<T> where T: PrivTr = T;\n         //~^ ERROR private trait `traits_where::PrivTr` in public interface\n         //~| WARNING hard error\n+        //~| WARNING E0122\n     pub trait Tr2<T> where T: PrivTr {}\n         //~^ ERROR private trait `traits_where::PrivTr` in public interface\n         //~| WARNING hard error"}]}