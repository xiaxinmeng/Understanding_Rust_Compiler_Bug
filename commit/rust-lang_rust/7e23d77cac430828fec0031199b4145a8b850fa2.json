{"sha": "7e23d77cac430828fec0031199b4145a8b850fa2", "node_id": "C_kwDOAAsO6NoAKDdlMjNkNzdjYWM0MzA4MjhmZWMwMDMxMTk5YjQxNDVhOGI4NTBmYTI", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-11T07:28:44Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-03-11T07:28:44Z"}, "message": "Auto merge of #109001 - matthiaskrgr:rollup-a3agnwp, r=matthiaskrgr\n\nRollup of 8 pull requests\n\nSuccessful merges:\n\n - #105798 (Relax ordering rules for `asm!` operands)\n - #105962 (Stabilize path_as_mut_os_str)\n - #106085 (use problem matchers for tidy CI)\n - #107711 (Stabilize movbe target feature)\n - #108017 (Add `--no-undefined-version` link flag and fix associated breakage)\n - #108891 (Remove an extraneous include)\n - #108902 (no more do while :<)\n - #108912 (Document tool lints)\n\nFailed merges:\n\nr? `@ghost`\n`@rustbot` modify labels: rollup", "tree": {"sha": "5167d70584c84a46a3a18184015774cc3bcc60d9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5167d70584c84a46a3a18184015774cc3bcc60d9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7e23d77cac430828fec0031199b4145a8b850fa2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7e23d77cac430828fec0031199b4145a8b850fa2", "html_url": "https://github.com/rust-lang/rust/commit/7e23d77cac430828fec0031199b4145a8b850fa2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7e23d77cac430828fec0031199b4145a8b850fa2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be445e1ab2f7188c337b3cc748d77a8f76aaeb45", "url": "https://api.github.com/repos/rust-lang/rust/commits/be445e1ab2f7188c337b3cc748d77a8f76aaeb45", "html_url": "https://github.com/rust-lang/rust/commit/be445e1ab2f7188c337b3cc748d77a8f76aaeb45"}, {"sha": "b23a3a36ed0bf8d749c4b1e9becd516950f2cdd2", "url": "https://api.github.com/repos/rust-lang/rust/commits/b23a3a36ed0bf8d749c4b1e9becd516950f2cdd2", "html_url": "https://github.com/rust-lang/rust/commit/b23a3a36ed0bf8d749c4b1e9becd516950f2cdd2"}], "stats": {"total": 28, "additions": 10, "deletions": 18}, "files": [{"sha": "2c246ceb37d54fa43940774b79a359f39c346da3", "filename": "src/allocator.rs", "status": "modified", "additions": 10, "deletions": 18, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/7e23d77cac430828fec0031199b4145a8b850fa2/src%2Fallocator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7e23d77cac430828fec0031199b4145a8b850fa2/src%2Fallocator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fallocator.rs?ref=7e23d77cac430828fec0031199b4145a8b850fa2", "patch": "@@ -4,6 +4,7 @@\n use crate::prelude::*;\n \n use rustc_ast::expand::allocator::{AllocatorKind, AllocatorTy, ALLOCATOR_METHODS};\n+use rustc_codegen_ssa::base::allocator_kind_for_codegen;\n use rustc_session::config::OomStrategy;\n use rustc_span::symbol::sym;\n \n@@ -13,24 +14,15 @@ pub(crate) fn codegen(\n     module: &mut impl Module,\n     unwind_context: &mut UnwindContext,\n ) -> bool {\n-    let any_dynamic_crate = tcx.dependency_formats(()).iter().any(|(_, list)| {\n-        use rustc_middle::middle::dependency_format::Linkage;\n-        list.iter().any(|&linkage| linkage == Linkage::Dynamic)\n-    });\n-    if any_dynamic_crate {\n-        false\n-    } else if let Some(kind) = tcx.allocator_kind(()) {\n-        codegen_inner(\n-            module,\n-            unwind_context,\n-            kind,\n-            tcx.alloc_error_handler_kind(()).unwrap(),\n-            tcx.sess.opts.unstable_opts.oom,\n-        );\n-        true\n-    } else {\n-        false\n-    }\n+    let Some(kind) = allocator_kind_for_codegen(tcx) else { return false };\n+    codegen_inner(\n+        module,\n+        unwind_context,\n+        kind,\n+        tcx.alloc_error_handler_kind(()).unwrap(),\n+        tcx.sess.opts.unstable_opts.oom,\n+    );\n+    true\n }\n \n fn codegen_inner("}]}