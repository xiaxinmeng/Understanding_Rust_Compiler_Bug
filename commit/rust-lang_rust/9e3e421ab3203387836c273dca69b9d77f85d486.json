{"sha": "9e3e421ab3203387836c273dca69b9d77f85d486", "node_id": "MDY6Q29tbWl0NzI0NzEyOjllM2U0MjFhYjMyMDMzODc4MzZjMjczZGNhNjliOWQ3N2Y4NWQ0ODY=", "commit": {"author": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-12-08T12:56:26Z"}, "committer": {"name": "Guillaume Gomez", "email": "guillaume1.gomez@gmail.com", "date": "2019-12-08T13:24:06Z"}, "message": "Sort auto trait and blanket implementations display", "tree": {"sha": "a13a4cd707a51f5aaf05ca199dc0c490bd89bde8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a13a4cd707a51f5aaf05ca199dc0c490bd89bde8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9e3e421ab3203387836c273dca69b9d77f85d486", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9e3e421ab3203387836c273dca69b9d77f85d486", "html_url": "https://github.com/rust-lang/rust/commit/9e3e421ab3203387836c273dca69b9d77f85d486", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9e3e421ab3203387836c273dca69b9d77f85d486/comments", "author": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "committer": {"login": "GuillaumeGomez", "id": 3050060, "node_id": "MDQ6VXNlcjMwNTAwNjA=", "avatar_url": "https://avatars.githubusercontent.com/u/3050060?v=4", "gravatar_id": "", "url": "https://api.github.com/users/GuillaumeGomez", "html_url": "https://github.com/GuillaumeGomez", "followers_url": "https://api.github.com/users/GuillaumeGomez/followers", "following_url": "https://api.github.com/users/GuillaumeGomez/following{/other_user}", "gists_url": "https://api.github.com/users/GuillaumeGomez/gists{/gist_id}", "starred_url": "https://api.github.com/users/GuillaumeGomez/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/GuillaumeGomez/subscriptions", "organizations_url": "https://api.github.com/users/GuillaumeGomez/orgs", "repos_url": "https://api.github.com/users/GuillaumeGomez/repos", "events_url": "https://api.github.com/users/GuillaumeGomez/events{/privacy}", "received_events_url": "https://api.github.com/users/GuillaumeGomez/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0", "url": "https://api.github.com/repos/rust-lang/rust/commits/d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0", "html_url": "https://github.com/rust-lang/rust/commit/d0126e8ed3cc0d6fcb9dd44c36a46f9ce65010a0"}], "stats": {"total": 34, "additions": 28, "deletions": 6}, "files": [{"sha": "fd620d467de48dd05a785dc17e6a46deb488c321", "filename": "src/librustdoc/html/format.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/9e3e421ab3203387836c273dca69b9d77f85d486/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e3e421ab3203387836c273dca69b9d77f85d486/src%2Flibrustdoc%2Fhtml%2Fformat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fformat.rs?ref=9e3e421ab3203387836c273dca69b9d77f85d486", "patch": "@@ -63,6 +63,13 @@ impl Buffer {\n         }\n     }\n \n+    crate fn new() -> Buffer {\n+        Buffer {\n+            for_html: false,\n+            buffer: String::new(),\n+        }\n+    }\n+\n     crate fn is_empty(&self) -> bool {\n         self.buffer.is_empty()\n     }\n@@ -106,6 +113,10 @@ impl Buffer {\n             write!(self, \"{:#}\", t);\n         }\n     }\n+\n+    crate fn is_for_html(&self) -> bool {\n+        self.for_html\n+    }\n }\n \n /// Wrapper struct for properly emitting a function or method declaration."}, {"sha": "86e5efbd7b3a4e98d14e7e1251374e435b03e246", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 17, "deletions": 6, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/9e3e421ab3203387836c273dca69b9d77f85d486/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9e3e421ab3203387836c273dca69b9d77f85d486/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=9e3e421ab3203387836c273dca69b9d77f85d486", "patch": "@@ -2282,12 +2282,23 @@ fn render_implementor(cx: &Context, implementor: &Impl, w: &mut Buffer,\n fn render_impls(cx: &Context, w: &mut Buffer,\n                 traits: &[&&Impl],\n                 containing_item: &clean::Item) {\n-    for i in traits {\n-        let did = i.trait_did().unwrap();\n-        let assoc_link = AssocItemLink::GotoSource(did, &i.inner_impl().provided_trait_methods);\n-        render_impl(w, cx, i, assoc_link,\n-                    RenderMode::Normal, containing_item.stable_since(), true, None, false, true);\n-    }\n+    let mut impls = traits.iter()\n+        .map(|i| {\n+            let did = i.trait_did().unwrap();\n+            let assoc_link = AssocItemLink::GotoSource(did, &i.inner_impl().provided_trait_methods);\n+            let mut buffer = if w.is_for_html() {\n+                Buffer::html()\n+            } else {\n+                Buffer::new()\n+            };\n+            render_impl(&mut buffer, cx, i, assoc_link,\n+                        RenderMode::Normal, containing_item.stable_since(),\n+                        true, None, false, true);\n+            buffer.into_inner()\n+        })\n+        .collect::<Vec<_>>();\n+    impls.sort();\n+    w.write_str(&impls.join(\"\"));\n }\n \n fn bounds(t_bounds: &[clean::GenericBound], trait_alias: bool) -> String {"}]}