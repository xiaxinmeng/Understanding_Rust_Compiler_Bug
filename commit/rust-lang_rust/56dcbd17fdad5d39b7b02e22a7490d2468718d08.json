{"sha": "56dcbd17fdad5d39b7b02e22a7490d2468718d08", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU2ZGNiZDE3ZmRhZDVkMzliN2IwMmUyMmE3NDkwZDI0Njg3MThkMDg=", "commit": {"author": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-04T03:42:21Z"}, "committer": {"name": "Jorge Aparicio", "email": "japaricious@gmail.com", "date": "2015-01-04T03:42:21Z"}, "message": "sed -i -s 's/\\bmod,/self,/g' **/*.rs", "tree": {"sha": "b846c1e3a491e54feca36375f4894e5cc882528e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/b846c1e3a491e54feca36375f4894e5cc882528e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/56dcbd17fdad5d39b7b02e22a7490d2468718d08", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/56dcbd17fdad5d39b7b02e22a7490d2468718d08", "html_url": "https://github.com/rust-lang/rust/commit/56dcbd17fdad5d39b7b02e22a7490d2468718d08", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/56dcbd17fdad5d39b7b02e22a7490d2468718d08/comments", "author": null, "committer": null, "parents": [{"sha": "c6c786671d692d7b13c2e5c68a53001327b4b125", "url": "https://api.github.com/repos/rust-lang/rust/commits/c6c786671d692d7b13c2e5c68a53001327b4b125", "html_url": "https://github.com/rust-lang/rust/commit/c6c786671d692d7b13c2e5c68a53001327b4b125"}], "stats": {"total": 582, "additions": 291, "deletions": 291}, "files": [{"sha": "56e1736196ece3ea57a105b61dfdad25f6a59d09", "filename": "src/grammar/verify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Fgrammar%2Fverify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Fgrammar%2Fverify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fgrammar%2Fverify.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -26,7 +26,7 @@ use std::io::File;\n \n use syntax::parse;\n use syntax::parse::lexer;\n-use rustc::session::{mod, config};\n+use rustc::session::{self, config};\n \n use syntax::ast;\n use syntax::ast::Name;"}, {"sha": "e00f4c45017fe2c8cdc0143cb6f77c8741ada050", "filename": "src/liballoc/arc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Fliballoc%2Farc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Fliballoc%2Farc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Farc.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -71,7 +71,7 @@ use core::atomic;\n use core::atomic::Ordering::{Relaxed, Release, Acquire, SeqCst};\n use core::borrow::BorrowFrom;\n use core::clone::Clone;\n-use core::fmt::{mod, Show};\n+use core::fmt::{self, Show};\n use core::cmp::{Eq, Ord, PartialEq, PartialOrd, Ordering};\n use core::default::Default;\n use core::kinds::{Sync, Send};\n@@ -81,7 +81,7 @@ use core::nonzero::NonZero;\n use core::ops::{Drop, Deref};\n use core::option::Option;\n use core::option::Option::{Some, None};\n-use core::ptr::{mod, PtrExt};\n+use core::ptr::{self, PtrExt};\n use heap::deallocate;\n \n /// An atomically reference counted wrapper for shared state."}, {"sha": "362f6c66b599d4b28bc16736197b75effe312376", "filename": "src/liballoc/boxed.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Fliballoc%2Fboxed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Fliballoc%2Fboxed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fboxed.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -17,7 +17,7 @@ use core::clone::Clone;\n use core::cmp::{PartialEq, PartialOrd, Eq, Ord, Ordering};\n use core::default::Default;\n use core::fmt;\n-use core::hash::{mod, Hash};\n+use core::hash::{self, Hash};\n use core::kinds::Sized;\n use core::mem;\n use core::option::Option;"}, {"sha": "c4b455aff5c53cea59eecc9ff87489e29bb1d731", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -147,14 +147,14 @@ use core::clone::Clone;\n use core::cmp::{PartialEq, PartialOrd, Eq, Ord, Ordering};\n use core::default::Default;\n use core::fmt;\n-use core::hash::{mod, Hash};\n+use core::hash::{self, Hash};\n use core::kinds::marker;\n use core::mem::{transmute, min_align_of, size_of, forget};\n use core::nonzero::NonZero;\n use core::ops::{Deref, Drop};\n use core::option::Option;\n use core::option::Option::{Some, None};\n-use core::ptr::{mod, PtrExt};\n+use core::ptr::{self, PtrExt};\n use core::result::Result;\n use core::result::Result::{Ok, Err};\n \n@@ -264,7 +264,7 @@ pub fn is_unique<T>(rc: &Rc<T>) -> bool {\n /// # Example\n ///\n /// ```\n-/// use std::rc::{mod, Rc};\n+/// use std::rc::{self, Rc};\n ///\n /// let x = Rc::new(3u);\n /// assert_eq!(rc::try_unwrap(x), Ok(3u));\n@@ -298,7 +298,7 @@ pub fn try_unwrap<T>(rc: Rc<T>) -> Result<T, Rc<T>> {\n /// # Example\n ///\n /// ```\n-/// use std::rc::{mod, Rc};\n+/// use std::rc::{self, Rc};\n ///\n /// let mut x = Rc::new(3u);\n /// *rc::get_mut(&mut x).unwrap() = 4u;"}, {"sha": "b561df56cb8dea93a84058b9c11c825e32fe670d", "filename": "src/libcollections/binary_heap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fbinary_heap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fbinary_heap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbinary_heap.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -157,7 +157,7 @@ use core::mem::{zeroed, replace, swap};\n use core::ptr;\n \n use slice;\n-use vec::{mod, Vec};\n+use vec::{self, Vec};\n \n /// A priority queue implemented with a binary heap.\n ///"}, {"sha": "922c8bbad190f440fa95ce14534f73c56b0994b4", "filename": "src/libcollections/bit.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fbit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fbit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbit.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -89,7 +89,7 @@ use core::fmt;\n use core::hash;\n use core::iter::RandomAccessIterator;\n use core::iter::{Chain, Enumerate, Repeat, Skip, Take, repeat, Cloned};\n-use core::iter::{mod, FromIterator};\n+use core::iter::{self, FromIterator};\n use core::num::Int;\n use core::ops::Index;\n use core::slice;"}, {"sha": "24ba63a500105fa22023850050e42a0ffcd23b0a", "filename": "src/libcollections/btree/map.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fbtree%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fbtree%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fmap.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -33,9 +33,9 @@ use ring_buf::RingBuf;\n use self::Continuation::{Continue, Finished};\n use self::StackOp::*;\n use super::node::ForceResult::{Leaf, Internal};\n-use super::node::TraversalItem::{mod, Elem, Edge};\n+use super::node::TraversalItem::{self, Elem, Edge};\n use super::node::{Traversal, MutTraversal, MoveTraversal};\n-use super::node::{mod, Node, Found, GoDown};\n+use super::node::{self, Node, Found, GoDown};\n \n // FIXME(conventions): implement bounded iterators\n \n@@ -505,7 +505,7 @@ mod stack {\n     use core::mem;\n     use core::ops::{Deref, DerefMut};\n     use super::BTreeMap;\n-    use super::super::node::{mod, Node, Fit, Split, Internal, Leaf};\n+    use super::super::node::{self, Node, Fit, Split, Internal, Leaf};\n     use super::super::node::handle;\n     use vec::Vec;\n "}, {"sha": "623cf080539b5c5a6e70bddacfa09fa260553e64", "filename": "src/libcollections/btree/set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fbtree%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fbtree%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fbtree%2Fset.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -14,7 +14,7 @@\n use core::prelude::*;\n \n use core::borrow::BorrowFrom;\n-use core::cmp::Ordering::{mod, Less, Greater, Equal};\n+use core::cmp::Ordering::{self, Less, Greater, Equal};\n use core::default::Default;\n use core::fmt::Show;\n use core::fmt;"}, {"sha": "9bd9d34a44300fc4a7c0e870378005e228efc34a", "filename": "src/libcollections/dlist.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fdlist.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fdlist.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fdlist.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -26,7 +26,7 @@ use core::cmp::Ordering;\n use core::default::Default;\n use core::fmt;\n use core::hash::{Writer, Hash};\n-use core::iter::{mod, FromIterator};\n+use core::iter::{self, FromIterator};\n use core::mem;\n use core::ptr;\n "}, {"sha": "e46297b5e564772400e99d5832ae42a53bdf33a4", "filename": "src/libcollections/ring_buf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fring_buf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fring_buf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fring_buf.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -17,7 +17,7 @@ use core::prelude::*;\n use core::cmp::Ordering;\n use core::default::Default;\n use core::fmt;\n-use core::iter::{mod, FromIterator, RandomAccessIterator};\n+use core::iter::{self, FromIterator, RandomAccessIterator};\n use core::kinds::marker;\n use core::mem;\n use core::num::{Int, UnsignedInt};"}, {"sha": "12e0feae2d9a1d87aeb06d45ab3d37725a4c7b0b", "filename": "src/libcollections/slice.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fslice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fslice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fslice.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -90,15 +90,15 @@\n use alloc::boxed::Box;\n use core::borrow::{BorrowFrom, BorrowFromMut, ToOwned};\n use core::clone::Clone;\n-use core::cmp::Ordering::{mod, Greater, Less};\n-use core::cmp::{mod, Ord, PartialEq};\n+use core::cmp::Ordering::{self, Greater, Less};\n+use core::cmp::{self, Ord, PartialEq};\n use core::iter::{Iterator, IteratorExt, IteratorCloneExt};\n use core::iter::{range, range_step, MultiplicativeIterator};\n use core::kinds::Sized;\n use core::mem::size_of;\n use core::mem;\n use core::ops::{FnMut, SliceMut};\n-use core::option::Option::{mod, Some, None};\n+use core::option::Option::{self, Some, None};\n use core::ptr::PtrExt;\n use core::ptr;\n use core::result::Result;"}, {"sha": "1c3c14f6d905c0738e2728286f7c018ae961f3d1", "filename": "src/libcollections/str.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fstr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fstr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstr.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -64,10 +64,10 @@ use core::default::Default;\n use core::fmt;\n use core::hash;\n use core::iter::AdditiveIterator;\n-use core::iter::{mod, range, Iterator, IteratorExt};\n+use core::iter::{self, range, Iterator, IteratorExt};\n use core::kinds::Sized;\n use core::ops;\n-use core::option::Option::{mod, Some, None};\n+use core::option::Option::{self, Some, None};\n use core::slice::AsSlice;\n use core::str as core_str;\n use unicode::str::{UnicodeStr, Utf16Encoder};"}, {"sha": "599f1caa6654c304ea9fa96da58a7271effb098d", "filename": "src/libcollections/string.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fstring.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fstring.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fstring.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -23,13 +23,13 @@ use core::fmt;\n use core::hash;\n use core::iter::FromIterator;\n use core::mem;\n-use core::ops::{mod, Deref, Add};\n+use core::ops::{self, Deref, Add};\n use core::ptr;\n use core::raw::Slice as RawSlice;\n use unicode::str as unicode_str;\n use unicode::str::Utf16Item;\n \n-use str::{mod, CharRange, FromStr, Utf8Error};\n+use str::{self, CharRange, FromStr, Utf8Error};\n use vec::{DerefVec, Vec, as_vec};\n \n /// A growable string stored as a UTF-8 encoded buffer."}, {"sha": "03870274b71e54567c86f636e3691803e9adce7e", "filename": "src/libcollections/vec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcollections%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Fvec.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -53,7 +53,7 @@ use core::cmp::max;\n use core::cmp::{Equiv, Ordering};\n use core::default::Default;\n use core::fmt;\n-use core::hash::{mod, Hash};\n+use core::hash::{self, Hash};\n use core::iter::{repeat, FromIterator};\n use core::kinds::marker::{ContravariantLifetime, InvariantType};\n use core::mem;"}, {"sha": "203b6fb38b16acff7707bee10df6f21546b31392", "filename": "src/libcore/cmp.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Fcmp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Fcmp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fcmp.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -44,7 +44,7 @@\n use self::Ordering::*;\n \n use kinds::Sized;\n-use option::Option::{mod, Some, None};\n+use option::Option::{self, Some, None};\n \n /// Trait for equality comparisons which are [partial equivalence relations](\n /// http://en.wikipedia.org/wiki/Partial_equivalence_relation)."}, {"sha": "9e62226220c0ee84970da6e8273d8774f8fd018f", "filename": "src/libcore/fmt/float.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Ffmt%2Ffloat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Ffmt%2Ffloat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Ffloat.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -22,8 +22,8 @@ use num::{cast, Float, ToPrimitive};\n use num::FpCategory as Fp;\n use ops::FnOnce;\n use result::Result::Ok;\n-use slice::{mod, SliceExt};\n-use str::{mod, StrExt};\n+use slice::{self, SliceExt};\n+use str::{self, StrExt};\n \n /// A flag that specifies whether to use exponential (scientific) notation.\n pub enum ExponentFormat {"}, {"sha": "149f61225a51ded2fbbd8662616b38a5a5705e12", "filename": "src/libcore/fmt/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Ffmt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Ffmt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Ffmt%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -24,7 +24,7 @@ use result::Result::{Ok, Err};\n use result;\n use slice::SliceExt;\n use slice;\n-use str::{mod, StrExt, Utf8Error};\n+use str::{self, StrExt, Utf8Error};\n \n pub use self::num::radix;\n pub use self::num::Radix;"}, {"sha": "ca3cf7aec2f1b5eb891c67165d5fee49601cb0e5", "filename": "src/libcore/iter.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Fiter.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Fiter.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fiter.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -1176,7 +1176,7 @@ impl<T: Clone> MinMaxResult<T> {\n     /// # Example\n     ///\n     /// ```rust\n-    /// use std::iter::MinMaxResult::{mod, NoElements, OneElement, MinMax};\n+    /// use std::iter::MinMaxResult::{self, NoElements, OneElement, MinMax};\n     ///\n     /// let r: MinMaxResult<int> = NoElements;\n     /// assert_eq!(r.into_option(), None);"}, {"sha": "7a689bec6cfa412c2e60f17b005bf9344d1ce22b", "filename": "src/libcore/ops.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Fops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Fops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fops.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -62,7 +62,7 @@\n use clone::Clone;\n use iter::{Step, Iterator,DoubleEndedIterator,ExactSizeIterator};\n use kinds::Sized;\n-use option::Option::{mod, Some, None};\n+use option::Option::{self, Some, None};\n \n /// The `Drop` trait is used to run some code when a value goes out of scope. This\n /// is sometimes called a 'destructor'."}, {"sha": "64f13a8f123a8a634f227205cd24cf0d02c3c577", "filename": "src/libcore/prelude.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Fprelude.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Fprelude.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fprelude.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -45,8 +45,8 @@ pub use iter::{Extend, IteratorExt};\n pub use iter::{Iterator, DoubleEndedIterator};\n pub use iter::{IteratorCloneExt, CloneIteratorExt};\n pub use iter::{IteratorOrdExt, ExactSizeIterator};\n-pub use option::Option::{mod, Some, None};\n+pub use option::Option::{self, Some, None};\n pub use ptr::{PtrExt, MutPtrExt};\n-pub use result::Result::{mod, Ok, Err};\n+pub use result::Result::{self, Ok, Err};\n pub use slice::{AsSlice, SliceExt};\n pub use str::{Str, StrExt};"}, {"sha": "9aed78d0737cd8da6d5a6f084d840bac5881a267", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -91,11 +91,11 @@\n use mem;\n use clone::Clone;\n use intrinsics;\n-use option::Option::{mod, Some, None};\n+use option::Option::{self, Some, None};\n use kinds::{Send, Sized, Sync};\n \n use cmp::{PartialEq, Eq, Ord, PartialOrd, Equiv};\n-use cmp::Ordering::{mod, Less, Equal, Greater};\n+use cmp::Ordering::{self, Less, Equal, Greater};\n \n // FIXME #19649: instrinsic docs don't render, so these have no docs :(\n "}, {"sha": "71d62f021a976cb55a412125523188548964b65c", "filename": "src/libcore/result.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Fresult.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Fresult.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fresult.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -236,7 +236,7 @@ use clone::Clone;\n use fmt::Show;\n use iter::{Iterator, IteratorExt, DoubleEndedIterator, FromIterator, ExactSizeIterator};\n use ops::{FnMut, FnOnce};\n-use option::Option::{mod, None, Some};\n+use option::Option::{self, None, Some};\n use slice::AsSlice;\n use slice;\n "}, {"sha": "6744e2d851f57f23c0363b3314abcef0e35bf1c0", "filename": "src/libcore/str/mod.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Fstr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibcore%2Fstr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fstr%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -18,7 +18,7 @@\n \n use self::Searcher::{Naive, TwoWay, TwoWayLong};\n \n-use cmp::{mod, Eq};\n+use cmp::{self, Eq};\n use default::Default;\n use iter::range;\n use iter::ExactSizeIterator;\n@@ -27,11 +27,11 @@ use kinds::Sized;\n use mem;\n use num::Int;\n use ops::{Fn, FnMut};\n-use option::Option::{mod, None, Some};\n+use option::Option::{self, None, Some};\n use ptr::PtrExt;\n use raw::{Repr, Slice};\n-use result::Result::{mod, Ok, Err};\n-use slice::{mod, SliceExt};\n+use result::Result::{self, Ok, Err};\n+use slice::{self, SliceExt};\n use uint;\n \n macro_rules! delegate_iter {"}, {"sha": "79efebc64045e3b8d0e15ae2c373b700d805c031", "filename": "src/libregex/vm.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibregex%2Fvm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibregex%2Fvm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibregex%2Fvm.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -37,7 +37,7 @@ pub use self::MatchKind::*;\n pub use self::StepState::*;\n \n use std::cmp;\n-use std::cmp::Ordering::{mod, Less, Equal, Greater};\n+use std::cmp::Ordering::{self, Less, Equal, Greater};\n use std::mem;\n use std::iter::repeat;\n use std::slice::SliceExt;"}, {"sha": "382b889ed219a37cf427ff548e7689dbfafc13ec", "filename": "src/librustc/lint/builtin.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Flint%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Flint%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fbuiltin.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -29,7 +29,7 @@ use self::MethodContext::*;\n use metadata::csearch;\n use middle::def::*;\n use middle::subst::Substs;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::{def, pat_util, stability};\n use middle::const_eval::{eval_const_expr_partial, const_int, const_uint};\n use util::ppaux::{ty_to_string};\n@@ -43,13 +43,13 @@ use std::{i8, i16, i32, i64, u8, u16, u32, u64, f32, f64};\n \n use syntax::{abi, ast, ast_map};\n use syntax::ast_util::is_shift_binop;\n-use syntax::attr::{mod, AttrMetaMethods};\n+use syntax::attr::{self, AttrMetaMethods};\n use syntax::codemap::{Span, DUMMY_SP};\n use syntax::parse::token;\n use syntax::ast::{TyI, TyU, TyI8, TyU8, TyI16, TyU16, TyI32, TyU32, TyI64, TyU64};\n use syntax::ast_util;\n use syntax::ptr::P;\n-use syntax::visit::{mod, Visitor};\n+use syntax::visit::{self, Visitor};\n \n declare_lint! {\n     WHILE_TRUE,"}, {"sha": "69e5b4889c28837ab5169d956a944e0df09a3c7d", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -26,7 +26,7 @@\n use self::TargetLint::*;\n \n use middle::privacy::ExportedItems;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use session::{early_error, Session};\n use lint::{Level, LevelSource, Lint, LintId, LintArray, LintPass, LintPassObject};\n use lint::{Default, CommandLine, Node, Allow, Warn, Deny, Forbid};"}, {"sha": "3ae9525e4b525e8ceb76e297fc8b9a1bb7b57384", "filename": "src/librustc/metadata/decoder.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmetadata%2Fdecoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fdecoder.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -29,7 +29,7 @@ use middle::def;\n use middle::lang_items;\n use middle::subst;\n use middle::ty::{ImplContainer, TraitContainer};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::astencode::vtable_decoder_helpers;\n \n use std::collections::HashMap;"}, {"sha": "fd2650939cdb08202562002689b12032be19ed77", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -23,7 +23,7 @@ use metadata::decoder;\n use metadata::tyencode;\n use middle::def;\n use middle::ty::{lookup_item_type};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::stability;\n use util::nodemap::{FnvHashMap, NodeMap, NodeSet};\n \n@@ -32,7 +32,7 @@ use std::cell::RefCell;\n use std::hash::Hash;\n use std::hash;\n use syntax::abi;\n-use syntax::ast::{mod, DefId, NodeId};\n+use syntax::ast::{self, DefId, NodeId};\n use syntax::ast_map::{PathElem, PathElems};\n use syntax::ast_map;\n use syntax::ast_util::*;"}, {"sha": "066bc6d0932d750c87178bf4efefa0ea62771528", "filename": "src/librustc/metadata/tydecode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmetadata%2Ftydecode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftydecode.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -21,7 +21,7 @@ pub use self::DefIdSource::*;\n use middle::region;\n use middle::subst;\n use middle::subst::VecPerParamSpace;\n-use middle::ty::{mod, AsPredicate, Ty};\n+use middle::ty::{self, AsPredicate, Ty};\n \n use std::rc::Rc;\n use std::str;"}, {"sha": "5f0f51ce9033d3b4f9a5ecfda313839e0dfa9423", "filename": "src/librustc/metadata/tyencode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmetadata%2Ftyencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Ftyencode.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -19,7 +19,7 @@ use middle::region;\n use middle::subst;\n use middle::subst::VecPerParamSpace;\n use middle::ty::ParamTy;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use util::nodemap::FnvHashMap;\n \n use syntax::abi::Abi;"}, {"sha": "b2ad77467276f8e38fa676a2424bfd34cd2a0096", "filename": "src/librustc/middle/astconv_util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fastconv_util.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fastconv_util.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastconv_util.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -15,7 +15,7 @@\n  */\n \n use middle::def;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use syntax::ast;\n use util::ppaux::Repr;\n "}, {"sha": "e4d407d66a2ee91db813b8ff572303e0bc668425", "filename": "src/librustc/middle/astencode.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fastencode.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fastencode.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -26,7 +26,7 @@ use metadata::tyencode;\n use middle::mem_categorization::Typer;\n use middle::subst;\n use middle::subst::VecPerParamSpace;\n-use middle::ty::{mod, Ty, MethodCall, MethodCallee, MethodOrigin};\n+use middle::ty::{self, Ty, MethodCall, MethodCallee, MethodOrigin};\n use util::ppaux::ty_to_string;\n \n use syntax::{ast, ast_map, ast_util, codemap, fold};"}, {"sha": "64cfd293ee474afb393d207ff040ad1d451933cc", "filename": "src/librustc/middle/check_match.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fcheck_match.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -27,14 +27,14 @@ use std::fmt;\n use std::iter::{range_inclusive, AdditiveIterator, FromIterator, repeat};\n use std::num::Float;\n use std::slice;\n-use syntax::ast::{mod, DUMMY_NODE_ID, NodeId, Pat};\n+use syntax::ast::{self, DUMMY_NODE_ID, NodeId, Pat};\n use syntax::ast_util::walk_pat;\n use syntax::codemap::{Span, Spanned, DUMMY_SP};\n use syntax::fold::{Folder, noop_fold_pat};\n use syntax::print::pprust::pat_to_string;\n use syntax::parse::token;\n use syntax::ptr::P;\n-use syntax::visit::{mod, Visitor, FnKind};\n+use syntax::visit::{self, Visitor, FnKind};\n use util::ppaux::ty_to_string;\n \n pub const DUMMY_WILD_PAT: &'static Pat = &Pat {"}, {"sha": "03f1bc1cd7bcad7908113269e835c1492c1f7ca4", "filename": "src/librustc/middle/const_eval.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fconst_eval.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -21,10 +21,10 @@ use middle::ty::{mod};\n use middle::astconv_util::{ast_ty_to_prim_ty};\n use util::nodemap::DefIdMap;\n \n-use syntax::ast::{mod, Expr};\n+use syntax::ast::{self, Expr};\n use syntax::parse::token::InternedString;\n use syntax::ptr::P;\n-use syntax::visit::{mod, Visitor};\n+use syntax::visit::{self, Visitor};\n use syntax::{ast_map, ast_util, codemap};\n \n use std::collections::hash_map::Entry::Vacant;"}, {"sha": "5a2085bee24c5f483997f7fa9cf105648a2dec86", "filename": "src/librustc/middle/dead.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fdead.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fdead.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fdead.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -19,8 +19,8 @@ use util::nodemap::NodeSet;\n use std::collections::HashSet;\n use syntax::{ast, ast_map, codemap};\n use syntax::ast_util::{local_def, is_local, PostExpansionMethod};\n-use syntax::attr::{mod, AttrMetaMethods};\n-use syntax::visit::{mod, Visitor};\n+use syntax::attr::{self, AttrMetaMethods};\n+use syntax::visit::{self, Visitor};\n \n // Any local node that may call something in its body block should be\n // explored. For example, if it's a live NodeItem that is a"}, {"sha": "927275c7389567a2445a8aa9434515cc0eb06e99", "filename": "src/librustc/middle/effect.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Feffect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Feffect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Feffect.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -13,7 +13,7 @@\n use self::UnsafeContext::*;\n \n use middle::def;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::ty::MethodCall;\n use util::ppaux;\n "}, {"sha": "40b8e60d296b91520752a030575debf6ad63a22a", "filename": "src/librustc/middle/fast_reject.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ffast_reject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ffast_reject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ffast_reject.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use syntax::ast;\n \n use self::SimplifiedType::*;"}, {"sha": "f6f62e035900e0ea9ae06a4a3fbbfa962e539a10", "filename": "src/librustc/middle/infer/coercion.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fcoercion.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -67,7 +67,7 @@ use super::sub::Sub;\n use middle::subst;\n use middle::ty::{AutoPtr, AutoDerefRef, AdjustDerefRef, AutoUnsize, AutoUnsafe};\n use middle::ty::{mt};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use util::ppaux;\n use util::ppaux::Repr;\n "}, {"sha": "f7d7fc81e0dbf983a844b931fbd5ed0c3b1f4688", "filename": "src/librustc/middle/infer/combine.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fcombine.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fcombine.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fcombine.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -46,7 +46,7 @@ use middle::subst::{ErasedRegions, NonerasedRegions, Substs};\n use middle::ty::{FloatVar, FnSig, IntVar, TyVar};\n use middle::ty::{IntType, UintType};\n use middle::ty::{BuiltinBounds};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::ty_fold;\n use middle::ty_fold::{TypeFoldable};\n use util::ppaux::Repr;"}, {"sha": "f6ac746156700d6efef3c2b6568243be838626a1", "filename": "src/librustc/middle/infer/equate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fequate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fequate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fequate.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use middle::ty::{BuiltinBounds};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::ty::TyVar;\n use middle::infer::combine::*;\n use middle::infer::{cres};"}, {"sha": "7ff585087f508eb3e12635a51f08b6f2fdc5c109", "filename": "src/librustc/middle/infer/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Ferror_reporting.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -74,7 +74,7 @@ use std::collections::HashSet;\n use middle::def;\n use middle::infer;\n use middle::subst;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::ty::{Region, ReFree};\n use std::cell::{Cell, RefCell};\n use std::char::from_u32;"}, {"sha": "0ae4a3d851e7ffaf341760b7ddc561bf0ee671b7", "filename": "src/librustc/middle/infer/freshen.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Ffreshen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Ffreshen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Ffreshen.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -30,11 +30,11 @@\n //! variable only once, and it does so as soon as it can, so it is reasonable to ask what the type\n //! inferencer knows \"so far\".\n \n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::ty_fold;\n use middle::ty_fold::TypeFoldable;\n use middle::ty_fold::TypeFolder;\n-use std::collections::hash_map::{mod, Entry};\n+use std::collections::hash_map::{self, Entry};\n \n use super::InferCtxt;\n use super::unify::InferCtxtMethodsForSimplyUnifiableTypes;"}, {"sha": "2683d00b858c17c248e53f9153ba61505c89c90c", "filename": "src/librustc/middle/infer/glb.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fglb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fglb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fglb.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -18,7 +18,7 @@ use super::{cres, InferCtxt};\n use super::{TypeTrace, Subtype};\n \n use middle::ty::{BuiltinBounds};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use syntax::ast::{Many, Once, MutImmutable, MutMutable};\n use syntax::ast::{Onceness, Unsafety};\n use util::ppaux::mt_to_string;"}, {"sha": "bf0a9cfbea66dae686571b73e9b335329d613ca5", "filename": "src/librustc/middle/infer/higher_ranked/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fhigher_ranked%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fhigher_ranked%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fhigher_ranked%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -14,8 +14,8 @@\n use super::{CombinedSnapshot, cres, InferCtxt, HigherRankedType, SkolemizationMap};\n use super::combine::{Combine, Combineable};\n \n-use middle::ty::{mod, Binder};\n-use middle::ty_fold::{mod, TypeFoldable};\n+use middle::ty::{self, Binder};\n+use middle::ty_fold::{self, TypeFoldable};\n use syntax::codemap::Span;\n use util::nodemap::{FnvHashMap, FnvHashSet};\n use util::ppaux::Repr;"}, {"sha": "121e5405f26dc79c0595c91f5c71018082a54705", "filename": "src/librustc/middle/infer/lattice.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Flattice.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Flattice.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Flattice.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -35,7 +35,7 @@ use super::glb::Glb;\n use super::lub::Lub;\n \n use middle::ty::{TyVar};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use util::ppaux::Repr;\n \n pub trait LatticeDir<'tcx> {"}, {"sha": "e4cab0f88990de8c942b2372ce17b567cf737d88", "filename": "src/librustc/middle/infer/lub.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Flub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Flub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Flub.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -18,7 +18,7 @@ use super::{cres, InferCtxt};\n use super::{TypeTrace, Subtype};\n \n use middle::ty::{BuiltinBounds};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use syntax::ast::{Many, Once};\n use syntax::ast::{Onceness, Unsafety};\n use syntax::ast::{MutMutable, MutImmutable};"}, {"sha": "8c3ee83e40d940166cb70d4e113a09b3fbc9c3d9", "filename": "src/librustc/middle/infer/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -25,7 +25,7 @@ use middle::subst;\n use middle::subst::Substs;\n use middle::ty::{TyVid, IntVid, FloatVid, RegionVid, UnconstrainedNumeric};\n use middle::ty::replace_late_bound_regions;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::ty_fold::{TypeFolder, TypeFoldable};\n use std::cell::{RefCell};\n use std::rc::Rc;"}, {"sha": "f31c0d509c538a101a1045b8981f93149c411969", "filename": "src/librustc/middle/infer/region_inference/graphviz.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fregion_inference%2Fgraphviz.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fregion_inference%2Fgraphviz.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fregion_inference%2Fgraphviz.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -27,7 +27,7 @@ use util::nodemap::{FnvHashMap, FnvHashSet};\n use util::ppaux::Repr;\n \n use std::collections::hash_map::Entry::Vacant;\n-use std::io::{mod, File};\n+use std::io::{self, File};\n use std::os;\n use std::sync::atomic;\n use syntax::ast;"}, {"sha": "9c1aa673ccfa787c547686fe506dbfddc1b01604", "filename": "src/librustc/middle/infer/region_inference/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fregion_inference%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fregion_inference%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fregion_inference%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -33,7 +33,7 @@ use util::nodemap::{FnvHashMap, FnvHashSet};\n use util::ppaux::Repr;\n \n use std::cell::{Cell, RefCell};\n-use std::cmp::Ordering::{mod, Less, Greater, Equal};\n+use std::cmp::Ordering::{self, Less, Greater, Equal};\n use std::iter::repeat;\n use std::u32;\n use syntax::ast;"}, {"sha": "3ed866d4aba8f6a59e3cf21f272a228f405b8b10", "filename": "src/librustc/middle/infer/resolve.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fresolve.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -9,8 +9,8 @@\n // except according to those terms.\n \n use super::{InferCtxt, fixup_err, fres, unresolved_ty, unresolved_int_ty, unresolved_float_ty};\n-use middle::ty::{mod, Ty};\n-use middle::ty_fold::{mod, TypeFoldable};\n+use middle::ty::{self, Ty};\n+use middle::ty_fold::{self, TypeFoldable};\n use util::ppaux::Repr;\n \n ///////////////////////////////////////////////////////////////////////////"}, {"sha": "4f8364fa44a95cf669ac26510ff7958f8105011f", "filename": "src/librustc/middle/infer/sub.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fsub.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Fsub.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Fsub.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -19,7 +19,7 @@ use super::{TypeTrace, Subtype};\n use super::type_variable::{SubtypeOf, SupertypeOf};\n \n use middle::ty::{BuiltinBounds};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::ty::TyVar;\n use util::ppaux::{Repr};\n "}, {"sha": "30cf0318aad0ba982c758eeffb4e6efdcff1e005", "filename": "src/librustc/middle/infer/type_variable.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Ftype_variable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Ftype_variable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Ftype_variable.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -12,7 +12,7 @@ pub use self::RelationDir::*;\n use self::TypeVariableValue::*;\n use self::UndoEntry::*;\n \n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use std::cmp::min;\n use std::mem;\n use std::u32;"}, {"sha": "03e00ef67695307a0c2d046e5d248d900e7842ac", "filename": "src/librustc/middle/infer/unify.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Funify.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Finfer%2Funify.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Finfer%2Funify.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -13,7 +13,7 @@ pub use self::VarValue::*;\n use std::kinds::marker;\n \n use middle::ty::{expected_found, IntVarValue};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::infer::{uok, ures};\n use middle::infer::InferCtxt;\n use std::cell::RefCell;"}, {"sha": "e3763689ef41a46f3995257b906979a4f2ef7ecd", "filename": "src/librustc/middle/intrinsicck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fintrinsicck.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -12,7 +12,7 @@ use metadata::csearch;\n use middle::def::DefFn;\n use middle::subst::{Subst, Substs, EnumeratedItems};\n use middle::ty::{TransmuteRestriction, ctxt, ty_bare_fn};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use util::ppaux::Repr;\n \n use syntax::abi::RustIntrinsic;"}, {"sha": "b6ce8fa8d2ed6027729db4b5ae6b2192bd6ee42b", "filename": "src/librustc/middle/liveness.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fliveness.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fliveness.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -120,13 +120,13 @@ use util::nodemap::NodeMap;\n use std::{fmt, io, uint};\n use std::rc::Rc;\n use std::iter::repeat;\n-use syntax::ast::{mod, NodeId, Expr};\n+use syntax::ast::{self, NodeId, Expr};\n use syntax::codemap::{BytePos, original_sp, Span};\n-use syntax::parse::token::{mod, special_idents};\n+use syntax::parse::token::{self, special_idents};\n use syntax::print::pprust::{expr_to_string, block_to_string};\n use syntax::ptr::P;\n use syntax::ast_util;\n-use syntax::visit::{mod, Visitor, FnKind};\n+use syntax::visit::{self, Visitor, FnKind};\n \n /// For use with `propagate_through_loop`.\n enum LoopKind<'a> {"}, {"sha": "969c0a0f6f323a176d3580cea743a54169b11d9f", "filename": "src/librustc/middle/mem_categorization.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fmem_categorization.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -73,7 +73,7 @@ pub use self::categorization::*;\n \n use middle::def;\n use middle::region;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use util::nodemap::{NodeMap};\n use util::ppaux::{Repr};\n "}, {"sha": "0d3ed13753c7cf61d8e153c48a2295e1b79a09dc", "filename": "src/librustc/middle/privacy.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fprivacy.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fprivacy.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -21,7 +21,7 @@ use std::mem::replace;\n \n use metadata::csearch;\n use middle::def;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::ty::{MethodCall, MethodMap, MethodOrigin, MethodParam, MethodTypeParam};\n use middle::ty::{MethodStatic, MethodStaticUnboxedClosure, MethodObject, MethodTraitObject};\n use util::nodemap::{DefIdSet, NodeMap, NodeSet};\n@@ -30,7 +30,7 @@ use syntax::{ast, ast_map};\n use syntax::ast_util::{is_local, local_def, PostExpansionMethod};\n use syntax::codemap::Span;\n use syntax::parse::token;\n-use syntax::visit::{mod, Visitor};\n+use syntax::visit::{self, Visitor};\n \n type Context<'a, 'tcx> = (&'a MethodMap<'tcx>, &'a def::ExportMap);\n "}, {"sha": "c0820408e2eedb439fa265007e339dd67ba602c3", "filename": "src/librustc/middle/region.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fregion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fregion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fregion.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -17,7 +17,7 @@\n //! `middle/typeck/infer/region_inference.rs`\n \n use session::Session;\n-use middle::ty::{mod, Ty, FreeRegion};\n+use middle::ty::{self, Ty, FreeRegion};\n use util::nodemap::{FnvHashMap, FnvHashSet, NodeMap};\n use util::common::can_reach;\n "}, {"sha": "809871c325597ee60c5cb5902c147266e741272a", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -19,7 +19,7 @@ pub use self::DefRegion::*;\n use self::ScopeChain::*;\n \n use session::Session;\n-use middle::def::{mod, DefMap};\n+use middle::def::{self, DefMap};\n use middle::region;\n use middle::subst;\n use middle::ty;"}, {"sha": "875c3f6e0d9e88835d5ceaaee19677a05d4c9f42", "filename": "src/librustc/middle/subst.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fsubst.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fsubst.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -13,8 +13,8 @@\n pub use self::ParamSpace::*;\n pub use self::RegionSubsts::*;\n \n-use middle::ty::{mod, Ty};\n-use middle::ty_fold::{mod, TypeFoldable, TypeFolder};\n+use middle::ty::{self, Ty};\n+use middle::ty_fold::{self, TypeFoldable, TypeFolder};\n use util::ppaux::Repr;\n \n use std::fmt;"}, {"sha": "e6805cddae05aab1c9a26432c422ada8424a194d", "filename": "src/librustc/middle/traits/coherence.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fcoherence.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -15,7 +15,7 @@ use super::{Obligation, ObligationCause};\n use super::util;\n \n use middle::subst::Subst;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::infer::InferCtxt;\n use std::collections::HashSet;\n use std::rc::Rc;"}, {"sha": "59322fcc632e8296e99b07853cb94553ccf07c9d", "filename": "src/librustc/middle/traits/error_reporting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Ferror_reporting.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -19,7 +19,7 @@ use super::{\n };\n \n use middle::infer::InferCtxt;\n-use middle::ty::{mod, AsPredicate, ReferencesError, ToPolyTraitRef};\n+use middle::ty::{self, AsPredicate, ReferencesError, ToPolyTraitRef};\n use syntax::codemap::Span;\n use util::ppaux::{Repr, UserString};\n "}, {"sha": "8bb7012fb075cbaed45fd423712f064e5de2dbdd", "filename": "src/librustc/middle/traits/fulfill.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Ffulfill.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Ffulfill.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Ffulfill.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -10,7 +10,7 @@\n \n use middle::infer::{InferCtxt};\n use middle::mem_categorization::Typer;\n-use middle::ty::{mod, RegionEscape, Ty};\n+use middle::ty::{self, RegionEscape, Ty};\n use std::collections::HashSet;\n use std::collections::hash_map::Entry::{Occupied, Vacant};\n use std::default::Default;"}, {"sha": "8fe851092dceb53a418c38947b7955a06756a786", "filename": "src/librustc/middle/traits/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -17,7 +17,7 @@ pub use self::ObligationCauseCode::*;\n \n use middle::mem_categorization::Typer;\n use middle::subst;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::infer::InferCtxt;\n use std::slice::Iter;\n use std::rc::Rc;"}, {"sha": "53068ea2bece1aa45383d73e305467fd9fbca63e", "filename": "src/librustc/middle/traits/object_safety.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Fobject_safety.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Fobject_safety.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fobject_safety.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -20,9 +20,9 @@\n use super::supertraits;\n use super::elaborate_predicates;\n \n-use middle::subst::{mod, SelfSpace};\n+use middle::subst::{self, SelfSpace};\n use middle::traits;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use std::rc::Rc;\n use syntax::ast;\n use util::ppaux::Repr;"}, {"sha": "d053b7fa70cf687b59af9e5d746f5cdb9567ba15", "filename": "src/librustc/middle/traits/project.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fproject.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -21,9 +21,9 @@ use super::VtableImplData;\n \n use middle::infer;\n use middle::subst::Subst;\n-use middle::ty::{mod, AsPredicate, ReferencesError, RegionEscape,\n+use middle::ty::{self, AsPredicate, ReferencesError, RegionEscape,\n                  HasProjectionTypes, ToPolyTraitRef, Ty};\n-use middle::ty_fold::{mod, TypeFoldable, TypeFolder};\n+use middle::ty_fold::{self, TypeFoldable, TypeFolder};\n use std::rc::Rc;\n use util::ppaux::Repr;\n "}, {"sha": "86365a1ae495378b290950d7e68b94717e60d791", "filename": "src/librustc/middle/traits/select.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Fselect.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -33,7 +33,7 @@ use super::{util};\n use middle::fast_reject;\n use middle::mem_categorization::Typer;\n use middle::subst::{Subst, Substs, TypeSpace, VecPerParamSpace};\n-use middle::ty::{mod, AsPredicate, RegionEscape, ToPolyTraitRef, Ty};\n+use middle::ty::{self, AsPredicate, RegionEscape, ToPolyTraitRef, Ty};\n use middle::infer;\n use middle::infer::{InferCtxt, TypeFreshener};\n use middle::ty_fold::TypeFoldable;"}, {"sha": "ab8888f9a33ebd83dce4a5aa6a5164a7ede28a49", "filename": "src/librustc/middle/traits/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftraits%2Futil.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -10,7 +10,7 @@\n \n use middle::subst::{Substs, VecPerParamSpace};\n use middle::infer::InferCtxt;\n-use middle::ty::{mod, Ty, AsPredicate, ToPolyTraitRef};\n+use middle::ty::{self, Ty, AsPredicate, ToPolyTraitRef};\n use std::collections::HashSet;\n use std::fmt;\n use std::rc::Rc;"}, {"sha": "a53278305d1b50edee144a83cd0ce54522ea2994", "filename": "src/librustc/middle/ty.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -46,7 +46,7 @@ use lint;\n use metadata::csearch;\n use middle;\n use middle::const_eval;\n-use middle::def::{mod, DefMap, ExportMap};\n+use middle::def::{self, DefMap, ExportMap};\n use middle::dependency_format;\n use middle::lang_items::{FnTraitLangItem, FnMutTraitLangItem};\n use middle::lang_items::{FnOnceTraitLangItem, TyDescStructLangItem};\n@@ -55,10 +55,10 @@ use middle::region;\n use middle::resolve_lifetime;\n use middle::infer;\n use middle::stability;\n-use middle::subst::{mod, Subst, Substs, VecPerParamSpace};\n+use middle::subst::{self, Subst, Substs, VecPerParamSpace};\n use middle::traits;\n use middle::ty;\n-use middle::ty_fold::{mod, TypeFoldable, TypeFolder};\n+use middle::ty_fold::{self, TypeFoldable, TypeFolder};\n use middle::ty_walk::TypeWalker;\n use util::ppaux::{note_and_explain_region, bound_region_ptr_to_string};\n use util::ppaux::{trait_store_to_string, ty_to_string};\n@@ -70,8 +70,8 @@ use util::nodemap::{FnvHashMap};\n use arena::TypedArena;\n use std::borrow::BorrowFrom;\n use std::cell::{Cell, RefCell};\n-use std::cmp::{mod, Ordering};\n-use std::fmt::{mod, Show};\n+use std::cmp::{self, Ordering};\n+use std::fmt::{self, Show};\n use std::hash::{Hash, sip, Writer};\n use std::mem;\n use std::ops;\n@@ -84,10 +84,10 @@ use syntax::ast::{CrateNum, DefId, Ident, ItemTrait, LOCAL_CRATE};\n use syntax::ast::{MutImmutable, MutMutable, Name, NamedField, NodeId};\n use syntax::ast::{Onceness, StmtExpr, StmtSemi, StructField, UnnamedField};\n use syntax::ast::{Visibility};\n-use syntax::ast_util::{mod, is_local, lit_is_str, local_def, PostExpansionMethod};\n-use syntax::attr::{mod, AttrMetaMethods};\n+use syntax::ast_util::{self, is_local, lit_is_str, local_def, PostExpansionMethod};\n+use syntax::attr::{self, AttrMetaMethods};\n use syntax::codemap::Span;\n-use syntax::parse::token::{mod, InternedString, special_idents};\n+use syntax::parse::token::{self, InternedString, special_idents};\n use syntax::{ast, ast_map};\n \n pub type Disr = u64;"}, {"sha": "9a66b98ee5841918d35c091111febeafdf91ed09", "filename": "src/librustc/middle/ty_fold.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fty_fold.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fty_fold.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty_fold.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -36,7 +36,7 @@\n \n use middle::subst;\n use middle::subst::VecPerParamSpace;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::traits;\n use std::rc::Rc;\n use syntax::owned_slice::OwnedSlice;"}, {"sha": "6070a4208f663709a3d0d3ae03eafea13cd1edea", "filename": "src/librustc/middle/ty_walk.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fty_walk.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fmiddle%2Fty_walk.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fty_walk.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -10,7 +10,7 @@\n \n //! An iterator over the type substructure.\n \n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use std::iter::Iterator;\n \n pub struct TypeWalker<'tcx> {"}, {"sha": "770e8d73ec7614f70ceb16982a5bdd7f9838f72a", "filename": "src/librustc/session/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fsession%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc%2Fsession%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fsession%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -17,7 +17,7 @@ use util::nodemap::NodeMap;\n \n use syntax::ast::NodeId;\n use syntax::codemap::Span;\n-use syntax::diagnostic::{mod, Emitter};\n+use syntax::diagnostic::{self, Emitter};\n use syntax::diagnostics;\n use syntax::feature_gate;\n use syntax::parse;"}, {"sha": "430e85d0b6c84ba6399b0fa455ea3e2e87d4067d", "filename": "src/librustc_borrowck/borrowck/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_borrowck%2Fborrowck%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -25,7 +25,7 @@ use rustc::middle::dataflow::DataFlowOperator;\n use rustc::middle::expr_use_visitor as euv;\n use rustc::middle::mem_categorization as mc;\n use rustc::middle::region;\n-use rustc::middle::ty::{mod, Ty};\n+use rustc::middle::ty::{self, Ty};\n use rustc::util::ppaux::{note_and_explain_region, Repr, UserString};\n use std::rc::Rc;\n use std::string::String;"}, {"sha": "1455aa3c99bb3680403e7a33897672319d1187cf", "filename": "src/librustc_driver/driver.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_driver%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_driver%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fdriver.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use rustc::session::Session;\n-use rustc::session::config::{mod, Input, OutputFilenames};\n+use rustc::session::config::{self, Input, OutputFilenames};\n use rustc::session::search_paths::PathKind;\n use rustc::lint;\n use rustc::metadata::creader;"}, {"sha": "b2f4070d2007ed637544094f37bdfa0e34b58492", "filename": "src/librustc_driver/pretty.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_driver%2Fpretty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_driver%2Fpretty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Fpretty.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -23,21 +23,21 @@ use rustc::middle::ty;\n use rustc::middle::cfg;\n use rustc::middle::cfg::graphviz::LabelledCFG;\n use rustc::session::Session;\n-use rustc::session::config::{mod, Input};\n+use rustc::session::config::{self, Input};\n use rustc::util::ppaux;\n use rustc_borrowck as borrowck;\n use rustc_borrowck::graphviz as borrowck_dot;\n \n use syntax::ast;\n-use syntax::ast_map::{mod, blocks, NodePrinter};\n+use syntax::ast_map::{self, blocks, NodePrinter};\n use syntax::codemap;\n-use syntax::fold::{mod, Folder};\n+use syntax::fold::{self, Folder};\n use syntax::print::{pp, pprust};\n use syntax::ptr::P;\n \n use graphviz as dot;\n \n-use std::io::{mod, MemReader};\n+use std::io::{self, MemReader};\n use std::option;\n use std::str::FromStr;\n "}, {"sha": "ab41ade576a5898c4dd3f3dda73a54ff672974d4", "filename": "src/librustc_driver/test.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_driver%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_driver%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Ftest.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -15,19 +15,19 @@ use diagnostic::Emitter;\n use driver;\n use rustc_resolve as resolve;\n use rustc_typeck::middle::lang_items;\n-use rustc_typeck::middle::region::{mod, CodeExtent};\n+use rustc_typeck::middle::region::{self, CodeExtent};\n use rustc_typeck::middle::resolve_lifetime;\n use rustc_typeck::middle::stability;\n use rustc_typeck::middle::subst;\n use rustc_typeck::middle::subst::Subst;\n-use rustc_typeck::middle::ty::{mod, Ty};\n+use rustc_typeck::middle::ty::{self, Ty};\n use rustc_typeck::middle::infer::combine::Combine;\n use rustc_typeck::middle::infer;\n use rustc_typeck::middle::infer::lub::Lub;\n use rustc_typeck::middle::infer::glb::Glb;\n use rustc_typeck::middle::infer::sub::Sub;\n use rustc_typeck::util::ppaux::{ty_to_string, Repr, UserString};\n-use rustc::session::{mod,config};\n+use rustc::session::{self,config};\n use syntax::{abi, ast, ast_map};\n use syntax::codemap;\n use syntax::codemap::{Span, CodeMap, DUMMY_SP};"}, {"sha": "2fc039764ae63b391a0c9e8143e45bf91f3237bd", "filename": "src/librustc_resolve/build_reduced_graph.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fbuild_reduced_graph.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -15,13 +15,13 @@\n \n use {DefModifiers, PUBLIC, IMPORTABLE};\n use ImportDirective;\n-use ImportDirectiveSubclass::{mod, SingleImport, GlobImport};\n+use ImportDirectiveSubclass::{self, SingleImport, GlobImport};\n use ImportResolution;\n use Module;\n use ModuleKind::*;\n use Namespace::{TypeNS, ValueNS};\n use NameBindings;\n-use ParentLink::{mod, ModuleParentLink, BlockParentLink};\n+use ParentLink::{self, ModuleParentLink, BlockParentLink};\n use Resolver;\n use RibKind::*;\n use Shadowable;\n@@ -55,11 +55,11 @@ use syntax::ast::{ViewItemUse, ViewPathGlob, ViewPathList, ViewPathSimple};\n use syntax::ast::{Visibility};\n use syntax::ast::TyPath;\n use syntax::ast;\n-use syntax::ast_util::{mod, PostExpansionMethod, local_def};\n+use syntax::ast_util::{self, PostExpansionMethod, local_def};\n use syntax::attr::AttrMetaMethods;\n-use syntax::parse::token::{mod, special_idents};\n+use syntax::parse::token::{self, special_idents};\n use syntax::codemap::{Span, DUMMY_SP};\n-use syntax::visit::{mod, Visitor};\n+use syntax::visit::{self, Visitor};\n \n use std::mem::replace;\n use std::ops::{Deref, DerefMut};"}, {"sha": "26b1058d18341781742acd22b0f7f12934e1391c", "filename": "src/librustc_resolve/check_unused.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_resolve%2Fcheck_unused.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_resolve%2Fcheck_unused.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Fcheck_unused.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -28,7 +28,7 @@ use syntax::ast;\n use syntax::ast::{ViewItem, ViewItemExternCrate, ViewItemUse};\n use syntax::ast::{ViewPathGlob, ViewPathList, ViewPathSimple};\n use syntax::codemap::{Span, DUMMY_SP};\n-use syntax::visit::{mod, Visitor};\n+use syntax::visit::{self, Visitor};\n \n struct UnusedImportCheckVisitor<'a, 'b:'a, 'tcx:'b> {\n     resolver: &'a mut Resolver<'b, 'tcx>"}, {"sha": "f28e012b7369bbb5ba2c2d227763386e8bc1b42f", "filename": "src/librustc_resolve/lib.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_resolve%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_resolve%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Flib.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -81,10 +81,10 @@ use syntax::ast_map;\n use syntax::ast_util::{PostExpansionMethod, local_def, walk_pat};\n use syntax::attr::AttrMetaMethods;\n use syntax::ext::mtwt;\n-use syntax::parse::token::{mod, special_names, special_idents};\n+use syntax::parse::token::{self, special_names, special_idents};\n use syntax::codemap::{Span, Pos};\n use syntax::owned_slice::OwnedSlice;\n-use syntax::visit::{mod, Visitor};\n+use syntax::visit::{self, Visitor};\n \n use std::collections::{HashMap, HashSet};\n use std::collections::hash_map::Entry::{Occupied, Vacant};"}, {"sha": "84fd3c936719b7a94eeddd572d54a19516981631", "filename": "src/librustc_resolve/record_exports.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_resolve%2Frecord_exports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_resolve%2Frecord_exports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_resolve%2Frecord_exports.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -19,7 +19,7 @@\n // processing.\n \n use {Module, NameBindings, Resolver};\n-use Namespace::{mod, TypeNS, ValueNS};\n+use Namespace::{self, TypeNS, ValueNS};\n \n use build_reduced_graph;\n "}, {"sha": "8fbeadc55b38751cb58cf4de42319cf466de8c1b", "filename": "src/librustc_trans/back/link.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Fback%2Flink.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Fback%2Flink.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flink.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -22,7 +22,7 @@ use metadata::common::LinkMeta;\n use metadata::{encoder, cstore, filesearch, csearch, creader};\n use metadata::filesearch::FileDoesntMatch;\n use trans::{CrateContext, CrateTranslation, gensym_name};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use util::common::time;\n use util::ppaux;\n use util::sha2::{Digest, Sha256};"}, {"sha": "c6488ec6638a3efe83d1a199c0d87277c592d5c0", "filename": "src/librustc_trans/back/lto.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Fback%2Flto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Fback%2Flto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fback%2Flto.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -10,7 +10,7 @@\n \n use super::link;\n use super::write;\n-use rustc::session::{mod, config};\n+use rustc::session::{self, config};\n use llvm;\n use llvm::archive_ro::ArchiveRO;\n use llvm::{ModuleRef, TargetMachineRef, True, False};"}, {"sha": "55bdff819101182f7145c6b24b2f4ecc801e68f4", "filename": "src/librustc_trans/save/mod.rs", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Fsave%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fsave%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -30,20 +30,20 @@\n use session::Session;\n \n use middle::def;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n \n use std::cell::Cell;\n-use std::io::{mod, File, fs};\n+use std::io::{self, File, fs};\n use std::os;\n \n-use syntax::ast_util::{mod, PostExpansionMethod};\n-use syntax::ast::{mod, NodeId, DefId};\n+use syntax::ast_util::{self, PostExpansionMethod};\n+use syntax::ast::{self, NodeId, DefId};\n use syntax::ast_map::NodeItem;\n use syntax::attr;\n use syntax::codemap::*;\n-use syntax::parse::token::{mod, get_ident, keywords};\n+use syntax::parse::token::{self, get_ident, keywords};\n use syntax::owned_slice::OwnedSlice;\n-use syntax::visit::{mod, Visitor};\n+use syntax::visit::{self, Visitor};\n use syntax::print::pprust::{path_to_string,ty_to_string};\n use syntax::ptr::P;\n "}, {"sha": "6fe530d6e1d8c1b5d80db722686c22b8ef67c011", "filename": "src/librustc_trans/trans/_match.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2F_match.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -193,7 +193,7 @@ use llvm::{ValueRef, BasicBlockRef};\n use middle::check_match::StaticInliner;\n use middle::check_match;\n use middle::const_eval;\n-use middle::def::{mod, DefMap};\n+use middle::def::{self, DefMap};\n use middle::expr_use_visitor as euv;\n use middle::lang_items::StrEqFnLangItem;\n use middle::mem_categorization as mc;\n@@ -204,15 +204,15 @@ use trans::build::{AddCase, And, BitCast, Br, CondBr, GEPi, InBoundsGEP, Load};\n use trans::build::{Mul, Not, Store, Sub, add_comment};\n use trans::build;\n use trans::callee;\n-use trans::cleanup::{mod, CleanupMethods};\n+use trans::cleanup::{self, CleanupMethods};\n use trans::common::*;\n use trans::consts;\n use trans::datum::*;\n-use trans::expr::{mod, Dest};\n+use trans::expr::{self, Dest};\n use trans::tvec;\n use trans::type_of;\n use trans::debuginfo;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use session::config::FullDebugInfo;\n use util::common::indenter;\n use util::nodemap::FnvHashMap;"}, {"sha": "881068325da87f25b422781a90d1d03991dca8c3", "filename": "src/librustc_trans/trans/adt.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fadt.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fadt.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fadt.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -61,7 +61,7 @@ use trans::datum;\n use trans::machine;\n use trans::type_::Type;\n use trans::type_of;\n-use middle::ty::{mod, Ty, UnboxedClosureTyper};\n+use middle::ty::{self, Ty, UnboxedClosureTyper};\n use middle::ty::Disr;\n use syntax::ast;\n use syntax::attr;"}, {"sha": "bf37f399fa8b97be1c7999ff4c6447df936cedff", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -43,8 +43,8 @@ use middle::lang_items::{LangItem, ExchangeMallocFnLangItem, StartFnLangItem};\n use middle::subst;\n use middle::weak_lang_items;\n use middle::subst::{Subst, Substs};\n-use middle::ty::{mod, Ty, UnboxedClosureTyper};\n-use session::config::{mod, NoDebugInfo, FullDebugInfo};\n+use middle::ty::{self, Ty, UnboxedClosureTyper};\n+use session::config::{self, NoDebugInfo, FullDebugInfo};\n use session::Session;\n use trans::_match;\n use trans::adt;"}, {"sha": "c65394c174a4c539d0638405f881d2f829983e7f", "filename": "src/librustc_trans/trans/callee.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcallee.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -48,7 +48,7 @@ use trans::meth;\n use trans::monomorphize;\n use trans::type_::Type;\n use trans::type_of;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::ty::MethodCall;\n use util::ppaux::Repr;\n use util::ppaux::ty_to_string;"}, {"sha": "f0ed8f4efcb3d1fb601d95239bdebb3449333fb6", "filename": "src/librustc_trans/trans/cleanup.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcleanup.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -27,7 +27,7 @@ use trans::glue;\n // Temporary due to slicing syntax hacks (KILLME)\n //use middle::region;\n use trans::type_::Type;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use std::fmt;\n use syntax::ast;\n use util::ppaux::Repr;"}, {"sha": "a6a83447cd68661e849bcb8da1c2e2351cbdd06d", "filename": "src/librustc_trans/trans/closure.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fclosure.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -22,10 +22,10 @@ use trans::common::*;\n use trans::datum::{Datum, DatumBlock, Expr, Lvalue, rvalue_scratch_datum};\n use trans::debuginfo;\n use trans::expr;\n-use trans::monomorphize::{mod, MonoId};\n+use trans::monomorphize::{self, MonoId};\n use trans::type_of::*;\n use trans::type_::Type;\n-use middle::ty::{mod, Ty, UnboxedClosureTyper};\n+use middle::ty::{self, Ty, UnboxedClosureTyper};\n use middle::subst::{Substs};\n use session::config::FullDebugInfo;\n use util::ppaux::Repr;"}, {"sha": "d0ea0f69c05455a631af160893b2b86d23635177", "filename": "src/librustc_trans/trans/common.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcommon.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -24,7 +24,7 @@ use middle::infer;\n use middle::lang_items::LangItem;\n use middle::mem_categorization as mc;\n use middle::region;\n-use middle::subst::{mod, Subst, Substs};\n+use middle::subst::{self, Subst, Substs};\n use trans::base;\n use trans::build;\n use trans::cleanup;\n@@ -35,7 +35,7 @@ use trans::monomorphize;\n use trans::type_::Type;\n use trans::type_of;\n use middle::traits;\n-use middle::ty::{mod, HasProjectionTypes, Ty};\n+use middle::ty::{self, HasProjectionTypes, Ty};\n use middle::ty_fold;\n use middle::ty_fold::{TypeFolder, TypeFoldable};\n use util::ppaux::Repr;"}, {"sha": "4f8554195e56954ec0fd2d30b6ba0a8b0e108ad4", "filename": "src/librustc_trans/trans/consts.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fconsts.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -17,11 +17,11 @@ use llvm::{IntEQ, IntNE, IntUGT, IntUGE, IntULT, IntULE, IntSGT, IntSGE, IntSLT,\n use metadata::csearch;\n use middle::{const_eval, def};\n use trans::{adt, closure, consts, debuginfo, expr, inline, machine};\n-use trans::base::{mod, push_ctxt};\n+use trans::base::{self, push_ctxt};\n use trans::common::*;\n use trans::type_::Type;\n use trans::type_of;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use util::ppaux::{Repr, ty_to_string};\n \n use std::c_str::ToCStr;"}, {"sha": "e5a0e2e9234d5ed1b022736dabc0f7e57abe243e", "filename": "src/librustc_trans/trans/context.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fcontext.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -22,7 +22,7 @@ use trans::common::{ExternMap,tydesc_info,BuilderRef_res};\n use trans::debuginfo;\n use trans::monomorphize::MonoId;\n use trans::type_::{Type, TypeNames};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use session::config::NoDebugInfo;\n use session::Session;\n use util::ppaux::Repr;"}, {"sha": "96013bc7423eb1076615700572652a7448a413e5", "filename": "src/librustc_trans/trans/datum.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fdatum.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fdatum.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdatum.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -23,7 +23,7 @@ use trans::cleanup::CleanupMethods;\n use trans::expr;\n use trans::tvec;\n use trans::type_of;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use util::ppaux::{ty_to_string};\n \n use std::fmt;"}, {"sha": "74cb6ea099a5d0e8e8d151810ee392babe9bc44f", "filename": "src/librustc_trans/trans/debuginfo.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fdebuginfo.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -194,15 +194,15 @@ use llvm;\n use llvm::{ModuleRef, ContextRef, ValueRef};\n use llvm::debuginfo::*;\n use metadata::csearch;\n-use middle::subst::{mod, Substs};\n-use trans::{mod, adt, machine, type_of};\n+use middle::subst::{self, Substs};\n+use trans::{self, adt, machine, type_of};\n use trans::common::*;\n use trans::_match::{BindingInfo, TrByCopy, TrByMove, TrByRef};\n use trans::monomorphize;\n use trans::type_::Type;\n-use middle::ty::{mod, Ty, UnboxedClosureTyper};\n+use middle::ty::{self, Ty, UnboxedClosureTyper};\n use middle::pat_util;\n-use session::config::{mod, FullDebugInfo, LimitedDebugInfo, NoDebugInfo};\n+use session::config::{self, FullDebugInfo, LimitedDebugInfo, NoDebugInfo};\n use util::nodemap::{DefIdMap, NodeMap, FnvHashMap, FnvHashSet};\n use util::ppaux;\n \n@@ -215,7 +215,7 @@ use syntax::util::interner::Interner;\n use syntax::codemap::{Span, Pos};\n use syntax::{ast, codemap, ast_util, ast_map, attr};\n use syntax::ast_util::PostExpansionMethod;\n-use syntax::parse::token::{mod, special_idents};\n+use syntax::parse::token::{self, special_idents};\n \n const DW_LANG_RUST: c_uint = 0x9000;\n "}, {"sha": "f1721f22315e813acdc5f28102bbbae6667130e2", "filename": "src/librustc_trans/trans/expr.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fexpr.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -36,14 +36,14 @@ pub use self::Dest::*;\n use self::lazy_binop_ty::*;\n \n use back::abi;\n-use llvm::{mod, ValueRef};\n+use llvm::{self, ValueRef};\n use middle::def;\n use middle::mem_categorization::Typer;\n-use middle::subst::{mod, Substs};\n+use middle::subst::{self, Substs};\n use trans::{_match, adt, asm, base, callee, closure, consts, controlflow};\n use trans::base::*;\n use trans::build::*;\n-use trans::cleanup::{mod, CleanupMethods};\n+use trans::cleanup::{self, CleanupMethods};\n use trans::common::*;\n use trans::datum::*;\n use trans::debuginfo;\n@@ -56,7 +56,7 @@ use trans::type_of;\n use middle::ty::{struct_fields, tup_fields};\n use middle::ty::{AdjustDerefRef, AdjustReifyFnPointer, AdjustAddEnv, AutoUnsafe};\n use middle::ty::{AutoPtr};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::ty::MethodCall;\n use util::common::indenter;\n use util::ppaux::Repr;"}, {"sha": "a4cfec791d8172e5fa32385e83eac4fa7f98cdd3", "filename": "src/librustc_trans/trans/foreign.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fforeign.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -23,7 +23,7 @@ use trans::monomorphize;\n use trans::type_::Type;\n use trans::type_of::*;\n use trans::type_of;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::subst::{Substs};\n use std::cmp;\n use std::c_str::ToCStr;"}, {"sha": "0ff53a1af7118190f82f8f630224815677a14ec5", "filename": "src/librustc_trans/trans/glue.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fglue.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fglue.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -34,7 +34,7 @@ use trans::machine::*;\n use trans::tvec;\n use trans::type_::Type;\n use trans::type_of::{type_of, sizing_type_of, align_of};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use util::ppaux::{ty_to_short_str, Repr};\n use util::ppaux;\n "}, {"sha": "6e716538911818bc971e6370f2901b03460c02f7", "filename": "src/librustc_trans/trans/intrinsic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fintrinsic.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -28,7 +28,7 @@ use trans::type_of;\n use trans::machine;\n use trans::machine::llsize_of;\n use trans::type_::Type;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use syntax::abi::RustIntrinsic;\n use syntax::ast;\n use syntax::parse::token;"}, {"sha": "ca17f3558aef29a53fe6c8c7469663c4618ee28d", "filename": "src/librustc_trans/trans/meth.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fmeth.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fmeth.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmeth.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -11,7 +11,7 @@\n use arena::TypedArena;\n use back::abi;\n use back::link;\n-use llvm::{mod, ValueRef, get_param};\n+use llvm::{self, ValueRef, get_param};\n use metadata::csearch;\n use middle::subst::{Subst, Substs};\n use middle::subst::VecPerParamSpace;\n@@ -30,7 +30,7 @@ use trans::glue;\n use trans::machine;\n use trans::type_::Type;\n use trans::type_of::*;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::ty::MethodCall;\n use util::ppaux::Repr;\n "}, {"sha": "d172f0a18e84834eda59de3bc6da0272aa58c7dc", "filename": "src/librustc_trans/trans/monomorphize.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fmonomorphize.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Fmonomorphize.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fmonomorphize.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -23,7 +23,7 @@ use trans::base::{trans_fn, decl_internal_rust_fn};\n use trans::base;\n use trans::common::*;\n use trans::foreign;\n-use middle::ty::{mod, HasProjectionTypes, Ty};\n+use middle::ty::{self, HasProjectionTypes, Ty};\n use util::ppaux::Repr;\n \n use syntax::abi;"}, {"sha": "0cb4f61a302b97e558f2a43a2f99b3be0df6572a", "filename": "src/librustc_trans/trans/tvec.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Ftvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Ftvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Ftvec.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -27,7 +27,7 @@ use trans::machine;\n use trans::machine::{nonzero_llsize_of, llsize_of_alloc};\n use trans::type_::Type;\n use trans::type_of;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use util::ppaux::ty_to_string;\n \n use syntax::ast;"}, {"sha": "94f75f4804efbf6f723da1d26d94829cd77b99e2", "filename": "src/librustc_trans/trans/type_of.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Ftype_of.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -17,7 +17,7 @@ use trans::adt;\n use trans::common::*;\n use trans::foreign;\n use trans::machine;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use util::ppaux;\n use util::ppaux::Repr;\n "}, {"sha": "1d62733875e0047da75a52697bbd8b4107d09f89", "filename": "src/librustc_typeck/astconv.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fastconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fastconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fastconv.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -53,13 +53,13 @@ use middle::def;\n use middle::resolve_lifetime as rl;\n use middle::subst::{FnSpace, TypeSpace, SelfSpace, Subst, Substs};\n use middle::subst::{VecPerParamSpace};\n-use middle::ty::{mod, RegionEscape, Ty};\n-use rscope::{mod, UnelidableRscope, RegionScope, SpecificRscope,\n+use middle::ty::{self, RegionEscape, Ty};\n+use rscope::{self, UnelidableRscope, RegionScope, SpecificRscope,\n              ShiftedRscope, BindingRscope};\n use TypeAndSubsts;\n use util::common::ErrorReported;\n use util::nodemap::DefIdMap;\n-use util::ppaux::{mod, Repr, UserString};\n+use util::ppaux::{self, Repr, UserString};\n \n use std::rc::Rc;\n use std::iter::{repeat, AdditiveIterator};"}, {"sha": "d8b410abf84492056bb9d57b9790eb5531cba866", "filename": "src/librustc_typeck/check/_match.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2F_match.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2F_match.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -12,7 +12,7 @@ use middle::def;\n use middle::infer;\n use middle::pat_util::{PatIdMap, pat_id_map, pat_is_binding, pat_is_const};\n use middle::subst::{Substs};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use check::{check_expr, check_expr_has_type, check_expr_with_expectation};\n use check::{check_expr_coercable_to_type, demand, FnCtxt, Expectation};\n use check::{instantiate_path, structurally_resolved_type, valid_range_bounds};"}, {"sha": "26b6d4e0296cd4765fc86f9e3e0dbfc344d8e4cf", "filename": "src/librustc_typeck/check/assoc.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fassoc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fassoc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fassoc.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -9,9 +9,9 @@\n // except according to those terms.\n \n use middle::infer::InferCtxt;\n-use middle::traits::{mod, FulfillmentContext, Normalized, MiscObligation,\n+use middle::traits::{self, FulfillmentContext, Normalized, MiscObligation,\n                      SelectionContext, ObligationCause};\n-use middle::ty::{mod, HasProjectionTypes};\n+use middle::ty::{self, HasProjectionTypes};\n use middle::ty_fold::{TypeFoldable, TypeFolder};\n use syntax::ast;\n use syntax::codemap::Span;"}, {"sha": "db84f1dce975110459fe775e623f1f7c19b17c71", "filename": "src/librustc_typeck/check/closure.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fclosure.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -16,7 +16,7 @@ use astconv;\n use middle::infer;\n use middle::region::CodeExtent;\n use middle::subst;\n-use middle::ty::{mod, ToPolyTraitRef, Ty};\n+use middle::ty::{self, ToPolyTraitRef, Ty};\n use rscope::RegionScope;\n use syntax::abi;\n use syntax::ast;"}, {"sha": "5b586bb0b669a2503468444881436e886b75605c", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -10,7 +10,7 @@\n \n \n use check::FnCtxt;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::infer;\n \n use std::result::Result::{Err, Ok};"}, {"sha": "81cc62bcd678b81441ad5aca61fefbad5899cdf1", "filename": "src/librustc_typeck/check/method/confirm.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fconfirm.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -10,11 +10,11 @@\n \n use super::probe;\n \n-use check::{mod, FnCtxt, NoPreference, PreferMutLvalue, callee, demand};\n+use check::{self, FnCtxt, NoPreference, PreferMutLvalue, callee, demand};\n use middle::mem_categorization::Typer;\n use middle::subst::{mod};\n use middle::traits;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::ty::{MethodCall, MethodCallee, MethodObject, MethodOrigin,\n                  MethodParam, MethodStatic, MethodTraitObject, MethodTypeParam};\n use middle::ty_fold::TypeFoldable;"}, {"sha": "e3813fc8951f7b208420fc84064e87ddfa22e982", "filename": "src/librustc_typeck/check/method/probe.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmethod%2Fprobe.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -18,7 +18,7 @@ use middle::fast_reject;\n use middle::subst;\n use middle::subst::Subst;\n use middle::traits;\n-use middle::ty::{mod, Ty, ToPolyTraitRef};\n+use middle::ty::{self, Ty, ToPolyTraitRef};\n use middle::ty_fold::TypeFoldable;\n use middle::infer;\n use middle::infer::InferCtxt;"}, {"sha": "01d61d446799130cc9eeadd2ac0501f7d5a6960c", "filename": "src/librustc_typeck/check/mod.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -81,20 +81,20 @@ pub use self::Expectation::*;\n use self::IsBinopAssignment::*;\n use self::TupleArgumentsFlag::*;\n \n-use astconv::{mod, ast_region_to_region, ast_ty_to_ty, AstConv};\n+use astconv::{self, ast_region_to_region, ast_ty_to_ty, AstConv};\n use check::_match::pat_ctxt;\n use middle::{const_eval, def};\n use middle::infer;\n use middle::lang_items::IteratorItem;\n use middle::mem_categorization as mc;\n use middle::mem_categorization::McResult;\n-use middle::pat_util::{mod, pat_id_map};\n+use middle::pat_util::{self, pat_id_map};\n use middle::region::CodeExtent;\n-use middle::subst::{mod, Subst, Substs, VecPerParamSpace, ParamSpace};\n+use middle::subst::{self, Subst, Substs, VecPerParamSpace, ParamSpace};\n use middle::traits;\n use middle::ty::{FnSig, VariantInfo, TypeScheme};\n use middle::ty::{Disr, ParamTy, ParameterEnvironment};\n-use middle::ty::{mod, HasProjectionTypes, RegionEscape, Ty};\n+use middle::ty::{self, HasProjectionTypes, RegionEscape, Ty};\n use middle::ty::liberate_late_bound_regions;\n use middle::ty::{MethodCall, MethodCallee, MethodMap, ObjectCastMap};\n use middle::ty_fold::{TypeFolder, TypeFoldable};\n@@ -105,22 +105,22 @@ use TypeAndSubsts;\n use middle::lang_items::TypeIdLangItem;\n use lint;\n use util::common::{block_query, indenter, loop_query};\n-use util::ppaux::{mod, UserString, Repr};\n+use util::ppaux::{self, UserString, Repr};\n use util::nodemap::{DefIdMap, FnvHashMap, NodeMap};\n \n use std::cell::{Cell, Ref, RefCell};\n use std::mem::replace;\n use std::rc::Rc;\n use std::iter::repeat;\n-use syntax::{mod, abi, attr};\n-use syntax::ast::{mod, ProvidedMethod, RequiredMethod, TypeTraitItem, DefId};\n-use syntax::ast_util::{mod, local_def, PostExpansionMethod};\n-use syntax::codemap::{mod, Span};\n+use syntax::{self, abi, attr};\n+use syntax::ast::{self, ProvidedMethod, RequiredMethod, TypeTraitItem, DefId};\n+use syntax::ast_util::{self, local_def, PostExpansionMethod};\n+use syntax::codemap::{self, Span};\n use syntax::owned_slice::OwnedSlice;\n use syntax::parse::token;\n use syntax::print::pprust;\n use syntax::ptr::P;\n-use syntax::visit::{mod, Visitor};\n+use syntax::visit::{self, Visitor};\n \n mod assoc;\n pub mod _match;"}, {"sha": "b5ddb528c2f2f405589c33c16207c3a9ead7c722", "filename": "src/librustc_typeck/check/regionck.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionck.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -91,7 +91,7 @@ use middle::mem_categorization as mc;\n use middle::region::CodeExtent;\n use middle::traits;\n use middle::ty::{ReScope};\n-use middle::ty::{mod, Ty, MethodCall};\n+use middle::ty::{self, Ty, MethodCall};\n use middle::infer;\n use middle::pat_util;\n use util::ppaux::{ty_to_string, Repr};"}, {"sha": "66cf077d4c21fbc9925cbc33b1b4d3233775d3f1", "filename": "src/librustc_typeck/check/regionmanip.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fregionmanip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fregionmanip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fregionmanip.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -13,7 +13,7 @@\n pub use self::WfConstraint::*;\n \n use middle::subst::{ParamSpace, Subst, Substs};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::ty_fold::{TypeFolder};\n \n use syntax::ast;"}, {"sha": "2a85bfad0add67f2cd31bc164fb10cb7d84fef57", "filename": "src/librustc_typeck/check/upvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fupvar.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -48,7 +48,7 @@ use middle::ty::{mod};\n use middle::infer::{InferCtxt, UpvarRegion};\n use syntax::ast;\n use syntax::codemap::Span;\n-use syntax::visit::{mod, Visitor};\n+use syntax::visit::{self, Visitor};\n use util::ppaux::Repr;\n \n ///////////////////////////////////////////////////////////////////////////"}, {"sha": "87ede24226bdba8d653b8452e2f30b5f8d0da6b9", "filename": "src/librustc_typeck/check/vtable.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fvtable.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -9,10 +9,10 @@\n // except according to those terms.\n \n use check::{FnCtxt, structurally_resolved_type};\n-use middle::traits::{mod, ObjectSafetyViolation, MethodViolationCode};\n+use middle::traits::{self, ObjectSafetyViolation, MethodViolationCode};\n use middle::traits::{Obligation, ObligationCause};\n use middle::traits::report_fulfillment_errors;\n-use middle::ty::{mod, Ty, AsPredicate};\n+use middle::ty::{self, Ty, AsPredicate};\n use middle::infer;\n use syntax::ast;\n use syntax::codemap::Span;"}, {"sha": "704025f38ce0d726c5454830bdf487a827a0e77b", "filename": "src/librustc_typeck/check/wf.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fwf.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fwf.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwf.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -14,7 +14,7 @@ use CrateCtxt;\n use middle::region;\n use middle::subst;\n use middle::traits;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use middle::ty::liberate_late_bound_regions;\n use middle::ty_fold::{TypeFolder, TypeFoldable, super_fold_ty};\n use util::ppaux::Repr;"}, {"sha": "ada7f982805650f7d2fa978c527254f8ae5bfbd2", "filename": "src/librustc_typeck/check/writeback.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fwriteback.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -16,7 +16,7 @@ use self::ResolveReason::*;\n use astconv::AstConv;\n use check::FnCtxt;\n use middle::pat_util;\n-use middle::ty::{mod, Ty, MethodCall, MethodCallee};\n+use middle::ty::{self, Ty, MethodCall, MethodCallee};\n use middle::ty_fold::{TypeFolder,TypeFoldable};\n use middle::infer;\n use write_substs_to_tcx;"}, {"sha": "45b248dac9353e7dee18a721b6bd653ec2a555d5", "filename": "src/librustc_typeck/coherence/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -18,7 +18,7 @@\n \n use metadata::csearch::{each_impl, get_impl_trait};\n use metadata::csearch;\n-use middle::subst::{mod, Subst};\n+use middle::subst::{self, Subst};\n use middle::ty::RegionEscape;\n use middle::ty::{ImplContainer, ImplOrTraitItemId, MethodTraitItemId};\n use middle::ty::{ParameterEnvironment, TypeTraitItemId, lookup_item_type};"}, {"sha": "f618a79e27de791a63fb7ec2bca4431c3b046364", "filename": "src/librustc_typeck/coherence/overlap.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcoherence%2Foverlap.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -13,7 +13,7 @@\n \n use middle::traits;\n use middle::ty;\n-use middle::infer::{mod, new_infer_ctxt};\n+use middle::infer::{self, new_infer_ctxt};\n use syntax::ast::{DefId};\n use syntax::ast::{LOCAL_CRATE};\n use syntax::ast;"}, {"sha": "009f1e50e9b4b535c16dde3631cbb9f175a4a6d9", "filename": "src/librustc_typeck/collect.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcollect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fcollect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcollect.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -29,16 +29,16 @@ bounds for each parameter.  Type parameters themselves are represented\n as `ty_param()` instances.\n \n */\n-use astconv::{mod, AstConv, ty_of_arg, ast_ty_to_ty, ast_region_to_region};\n+use astconv::{self, AstConv, ty_of_arg, ast_ty_to_ty, ast_region_to_region};\n use metadata::csearch;\n use middle::lang_items::SizedTraitLangItem;\n use middle::region;\n use middle::resolve_lifetime;\n use middle::subst;\n use middle::subst::{Substs};\n use middle::ty::{AsPredicate, ImplContainer, ImplOrTraitItemContainer, TraitContainer};\n-use middle::ty::{mod, RegionEscape, Ty, TypeScheme};\n-use middle::ty_fold::{mod, TypeFolder, TypeFoldable};\n+use middle::ty::{self, RegionEscape, Ty, TypeScheme};\n+use middle::ty_fold::{self, TypeFolder, TypeFoldable};\n use middle::infer;\n use rscope::*;\n use {CrateCtxt, no_params, write_ty_to_tcx};"}, {"sha": "48f9b129719719bedc2dc22ab2a4613aaa782c1a", "filename": "src/librustc_typeck/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Flib.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -93,7 +93,7 @@ use middle::def;\n use middle::infer;\n use middle::subst;\n use middle::subst::VecPerParamSpace;\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use session::config;\n use util::common::time;\n use util::ppaux::Repr;"}, {"sha": "a8bc01a36fea3fa0045ac80ff3712a5c736899c1", "filename": "src/librustc_typeck/variance.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fvariance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustc_typeck%2Fvariance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fvariance.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -196,7 +196,7 @@ use arena::Arena;\n use middle::resolve_lifetime as rl;\n use middle::subst;\n use middle::subst::{ParamSpace, FnSpace, TypeSpace, SelfSpace, VecPerParamSpace};\n-use middle::ty::{mod, Ty};\n+use middle::ty::{self, Ty};\n use std::fmt;\n use std::rc::Rc;\n use std::iter::repeat;"}, {"sha": "f60334292d61e600c7a8ded776d179d29fc779e9", "filename": "src/librustdoc/clean/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustdoc%2Fclean%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustdoc%2Fclean%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fclean%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -34,15 +34,15 @@ use syntax::ast_util::PostExpansionMethod;\n use syntax::attr;\n use syntax::attr::{AttributeMethods, AttrMetaMethods};\n use syntax::codemap::{DUMMY_SP, Pos, Spanned};\n-use syntax::parse::token::{mod, InternedString, special_idents};\n+use syntax::parse::token::{self, InternedString, special_idents};\n use syntax::ptr::P;\n \n use rustc_trans::back::link;\n use rustc::metadata::cstore;\n use rustc::metadata::csearch;\n use rustc::metadata::decoder;\n use rustc::middle::def;\n-use rustc::middle::subst::{mod, ParamSpace, VecPerParamSpace};\n+use rustc::middle::subst::{self, ParamSpace, VecPerParamSpace};\n use rustc::middle::ty;\n use rustc::middle::stability;\n use rustc::session::config;"}, {"sha": "a69437f7a669ca6b4526a3647c4d3992bfdb3667", "filename": "src/librustdoc/core.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustdoc%2Fcore.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustdoc%2Fcore.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fcore.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -10,7 +10,7 @@\n pub use self::MaybeTyped::*;\n \n use rustc_driver::driver;\n-use rustc::session::{mod, config};\n+use rustc::session::{self, config};\n use rustc::session::search_paths::SearchPaths;\n use rustc::middle::{privacy, ty};\n use rustc::lint;"}, {"sha": "fd9ada365bcacb69b35addf5d4fa1d495bf02dbe", "filename": "src/librustdoc/html/render.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustdoc%2Fhtml%2Frender.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustdoc%2Fhtml%2Frender.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Frender.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -35,7 +35,7 @@\n pub use self::ExternalLocation::*;\n \n use std::cell::RefCell;\n-use std::cmp::Ordering::{mod, Less, Greater, Equal};\n+use std::cmp::Ordering::{self, Less, Greater, Equal};\n use std::collections::hash_map::Entry::{Occupied, Vacant};\n use std::collections::{HashMap, HashSet};\n use std::default::Default;"}, {"sha": "125bc21d79d067dc99f17903f953c88ebe638a21", "filename": "src/librustdoc/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustdoc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustdoc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Flib.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -44,7 +44,7 @@ use std::io;\n use std::rc::Rc;\n use externalfiles::ExternalHtml;\n use serialize::Decodable;\n-use serialize::json::{mod, Json};\n+use serialize::json::{self, Json};\n use rustc::session::search_paths::SearchPaths;\n \n // reexported from `clean` so it can be easily updated with the mod itself"}, {"sha": "bded371e5002d2858f15a1a7431f92a4bd436fc2", "filename": "src/librustdoc/test.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustdoc%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibrustdoc%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Ftest.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -20,7 +20,7 @@ use std::thunk::Thunk;\n \n use std::collections::{HashSet, HashMap};\n use testing;\n-use rustc::session::{mod, config};\n+use rustc::session::{self, config};\n use rustc::session::search_paths::{SearchPaths, PathKind};\n use rustc_driver::driver;\n use syntax::ast;"}, {"sha": "f8f6f8c02b29b8a16abac18c6170bb74f76b31e4", "filename": "src/libserialize/json.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibserialize%2Fjson.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibserialize%2Fjson.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibserialize%2Fjson.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -114,7 +114,7 @@\n //! ```notrust\n //! // FIXME(#19470): this cannot be ```rust``` because it fails orphan checking at the moment\n //! extern crate serialize;\n-//! use serialize::json::{mod, ToJson, Json};\n+//! use serialize::json::{self, ToJson, Json};\n //!\n //! // A custom data structure\n //! struct ComplexNum {\n@@ -155,7 +155,7 @@\n //! // FIXME(#19470): this cannot be ```rust``` because it fails orphan checking at the moment\n //! extern crate serialize;\n //! use std::collections::BTreeMap;\n-//! use serialize::json::{mod, Json, ToJson};\n+//! use serialize::json::{self, Json, ToJson};\n //!\n //! // Only generate `Decodable` trait implementation\n //! #[deriving(Decodable)]"}, {"sha": "f81f23885f5ae7561e78f4d19deb01ec37b23dd3", "filename": "src/libstd/c_str.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fc_str.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fc_str.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fc_str.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -77,7 +77,7 @@ use fmt;\n use hash;\n use mem;\n use ptr;\n-use slice::{mod, IntSliceExt};\n+use slice::{self, IntSliceExt};\n use str;\n use string::String;\n use core::kinds::marker;"}, {"sha": "20e46845f0ab1f095c5c48f56dfc5c275dc1ed89", "filename": "src/libstd/collections/hash/map.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fmap.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -18,11 +18,11 @@ use borrow::BorrowFrom;\n use clone::Clone;\n use cmp::{max, Eq, Equiv, PartialEq};\n use default::Default;\n-use fmt::{mod, Show};\n+use fmt::{self, Show};\n use hash::{Hash, Hasher, RandomSipHasher};\n-use iter::{mod, Iterator, IteratorExt, FromIterator, Extend, Map};\n+use iter::{self, Iterator, IteratorExt, FromIterator, Extend, Map};\n use kinds::Sized;\n-use mem::{mod, replace};\n+use mem::{self, replace};\n use num::{Int, UnsignedInt};\n use ops::{Deref, FnMut, Index, IndexMut};\n use option::Option;\n@@ -31,7 +31,7 @@ use result::Result;\n use result::Result::{Ok, Err};\n \n use super::table::{\n-    mod,\n+    self,\n     Bucket,\n     EmptyBucket,\n     FullBucket,"}, {"sha": "556e0e61d2dbde5f7ebc9fd16100d2142dec05af", "filename": "src/libstd/collections/hash/set.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcollections%2Fhash%2Fset.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -23,7 +23,7 @@ use ops::{BitOr, BitAnd, BitXor, Sub};\n use option::Option::{Some, None, mod};\n use result::Result::{Ok, Err};\n \n-use super::map::{mod, HashMap, Keys, INITIAL_CAPACITY};\n+use super::map::{self, HashMap, Keys, INITIAL_CAPACITY};\n \n // Future Optimization (FIXME!)\n // ============================="}, {"sha": "a4012b743a0cfe04d0907d0e31a9a9440836a701", "filename": "src/libstd/io/mem.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fio%2Fmem.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fio%2Fmem.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fmem.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -19,7 +19,7 @@ use option::Option::None;\n use result::Result::{Err, Ok};\n use io;\n use io::{Reader, Writer, Seek, Buffer, IoError, SeekStyle, IoResult};\n-use slice::{mod, AsSlice, SliceExt};\n+use slice::{self, AsSlice, SliceExt};\n use vec::Vec;\n \n const BUF_CAPACITY: uint = 128;"}, {"sha": "ba746c0109c7471e7a34cc651e28a3905e5b10b9", "filename": "src/libstd/io/net/ip.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fio%2Fnet%2Fip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fio%2Fnet%2Fip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fio%2Fnet%2Fip.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -18,7 +18,7 @@\n pub use self::IpAddr::*;\n \n use fmt;\n-use io::{mod, IoResult, IoError};\n+use io::{self, IoResult, IoError};\n use io::net;\n use iter::{Iterator, IteratorExt};\n use ops::FnOnce;"}, {"sha": "c2d2fe2bec375c63cbcc9e5e750de8ed979b8916", "filename": "src/libstd/num/strconv.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fnum%2Fstrconv.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fnum%2Fstrconv.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fnum%2Fstrconv.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -16,8 +16,8 @@ use self::ExponentFormat::*;\n use self::SignificantDigits::*;\n use self::SignFormat::*;\n \n-use char::{mod, Char};\n-use num::{mod, Int, Float, ToPrimitive};\n+use char::{self, Char};\n+use num::{self, Int, Float, ToPrimitive};\n use num::FpCategory as Fp;\n use ops::FnMut;\n use slice::SliceExt;"}, {"sha": "067595c5199fdac8a7a361f2915d7f9945e70cec", "filename": "src/libstd/path/posix.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fpath%2Fposix.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fpath%2Fposix.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fposix.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -450,10 +450,10 @@ mod tests {\n \n     use clone::Clone;\n     use iter::IteratorExt;\n-    use option::Option::{mod, Some, None};\n+    use option::Option::{self, Some, None};\n     use path::GenericPath;\n     use slice::{AsSlice, SliceExt};\n-    use str::{mod, Str, StrExt};\n+    use str::{self, Str, StrExt};\n     use string::ToString;\n     use vec::Vec;\n "}, {"sha": "6c355634c06d50ddbbd8e0217f0eaa7b3b0817ec", "filename": "src/libstd/path/windows.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fpath%2Fwindows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fpath%2Fwindows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fpath%2Fwindows.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -1125,7 +1125,7 @@ mod tests {\n \n     use clone::Clone;\n     use iter::IteratorExt;\n-    use option::Option::{mod, Some, None};\n+    use option::Option::{self, Some, None};\n     use path::GenericPath;\n     use slice::{AsSlice, SliceExt};\n     use str::Str;"}, {"sha": "a122cb81b8c423ed169d9259079b490ed3668f82", "filename": "src/libstd/prelude/v1.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fprelude%2Fv1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fprelude%2Fv1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fprelude%2Fv1.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -30,9 +30,9 @@\n #[stable] #[doc(no_inline)] pub use iter::ExactSizeIterator;\n #[stable] #[doc(no_inline)] pub use iter::{Iterator, IteratorExt, Extend};\n #[stable] #[doc(no_inline)] pub use iter::{IteratorCloneExt, IteratorOrdExt};\n-#[stable] #[doc(no_inline)] pub use option::Option::{mod, Some, None};\n+#[stable] #[doc(no_inline)] pub use option::Option::{self, Some, None};\n #[stable] #[doc(no_inline)] pub use ptr::{PtrExt, MutPtrExt};\n-#[stable] #[doc(no_inline)] pub use result::Result::{mod, Ok, Err};\n+#[stable] #[doc(no_inline)] pub use result::Result::{self, Ok, Err};\n #[stable] #[doc(no_inline)] pub use slice::AsSlice;\n #[stable] #[doc(no_inline)] pub use slice::{SliceExt, SliceConcatExt};\n #[stable] #[doc(no_inline)] pub use str::{Str, StrExt};"}, {"sha": "2b0639c570537f09a6cdb39a6ca8c8f7f580c0b1", "filename": "src/libstd/rt/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Frt%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Frt%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -66,7 +66,7 @@ fn lang_start(main: *const u8, argc: int, argv: *const *const u8) -> int {\n     use mem;\n     use os;\n     use rt;\n-    use sys_common::thread_info::{mod, NewThread};\n+    use sys_common::thread_info::{self, NewThread};\n     use sys_common;\n     use thread::Thread;\n "}, {"sha": "d6cf35ee3cd909345be9e2ee9bbac38fb039d2df", "filename": "src/libstd/rt/util.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Frt%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Frt%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Frt%2Futil.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -15,7 +15,7 @@ use prelude::v1::*;\n use cmp;\n use fmt;\n use intrinsics;\n-use libc::{mod, uintptr_t};\n+use libc::{self, uintptr_t};\n use os;\n use slice;\n use str;"}, {"sha": "3652b45ce973b38a5954727006b253152c48ebe4", "filename": "src/libstd/sync/atomic.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fatomic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fatomic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fatomic.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -104,7 +104,7 @@ pub use core::atomic::{AtomicBool, AtomicInt, AtomicUint, AtomicPtr};\n pub use core::atomic::{INIT_ATOMIC_BOOL, INIT_ATOMIC_INT, INIT_ATOMIC_UINT};\n pub use core::atomic::{ATOMIC_BOOL_INIT, ATOMIC_INT_INIT, ATOMIC_UINT_INIT};\n pub use core::atomic::fence;\n-pub use core::atomic::Ordering::{mod, Relaxed, Release, Acquire, AcqRel, SeqCst};\n+pub use core::atomic::Ordering::{self, Relaxed, Release, Acquire, AcqRel, SeqCst};\n \n /// An atomic, nullable unique pointer\n ///"}, {"sha": "28c36922ca6f88d347554244bc41b1b3e0afab5a", "filename": "src/libstd/sync/condvar.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fcondvar.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -10,8 +10,8 @@\n \n use prelude::v1::*;\n \n-use sync::atomic::{mod, AtomicUint};\n-use sync::poison::{mod, LockResult};\n+use sync::atomic::{self, AtomicUint};\n+use sync::poison::{self, LockResult};\n use sys_common::condvar as sys;\n use sys_common::mutex as sys_mutex;\n use time::Duration;"}, {"sha": "2811f403c6c3d0b2e4035e956e14c1a0281ffe09", "filename": "src/libstd/sync/mpsc/oneshot.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fmpsc%2Foneshot.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fmpsc%2Foneshot.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Foneshot.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -40,7 +40,7 @@ use self::MyUpgrade::*;\n use core::prelude::*;\n \n use sync::mpsc::Receiver;\n-use sync::mpsc::blocking::{mod, SignalToken};\n+use sync::mpsc::blocking::{self, SignalToken};\n use core::mem;\n use sync::atomic;\n "}, {"sha": "f8197622f40b0b7303d88fd2bd1fb03dd3e64a4e", "filename": "src/libstd/sync/mpsc/select.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fmpsc%2Fselect.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fmpsc%2Fselect.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fselect.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -62,7 +62,7 @@ use core::mem;\n use core::uint;\n \n use sync::mpsc::{Receiver, RecvError};\n-use sync::mpsc::blocking::{mod, SignalToken};\n+use sync::mpsc::blocking::{self, SignalToken};\n \n /// The \"receiver set\" of the select interface. This structure is used to manage\n /// a set of receivers which are being selected over."}, {"sha": "cadac8e62724ecc5147048e16d62f037fd7ad24d", "filename": "src/libstd/sync/mpsc/shared.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fmpsc%2Fshared.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fmpsc%2Fshared.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fshared.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -27,7 +27,7 @@ use core::int;\n \n use sync::{atomic, Mutex, MutexGuard};\n use sync::mpsc::mpsc_queue as mpsc;\n-use sync::mpsc::blocking::{mod, SignalToken};\n+use sync::mpsc::blocking::{self, SignalToken};\n use sync::mpsc::select::StartResult;\n use sync::mpsc::select::StartResult::*;\n use thread::Thread;"}, {"sha": "c526e6acb8f15f90787c689a983c4484e18426f9", "filename": "src/libstd/sync/mpsc/stream.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fmpsc%2Fstream.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fmpsc%2Fstream.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fstream.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -28,7 +28,7 @@ use core::cmp;\n use core::int;\n use thread::Thread;\n \n-use sync::mpsc::blocking::{mod, SignalToken};\n+use sync::mpsc::blocking::{self, SignalToken};\n use sync::mpsc::spsc_queue as spsc;\n use sync::mpsc::Receiver;\n use sync::atomic;"}, {"sha": "ce5781dbc037c8b033ff221b967a137bdfc1c439", "filename": "src/libstd/sync/mpsc/sync.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fmpsc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fmpsc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmpsc%2Fsync.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -42,8 +42,8 @@ use vec::Vec;\n use core::mem;\n \n use sync::{atomic, Mutex, MutexGuard};\n-use sync::mpsc::blocking::{mod, WaitToken, SignalToken};\n-use sync::mpsc::select::StartResult::{mod, Installed, Abort};\n+use sync::mpsc::blocking::{self, WaitToken, SignalToken};\n+use sync::mpsc::select::StartResult::{self, Installed, Abort};\n \n pub struct Packet<T> {\n     /// Only field outside of the mutex. Just done for kicks, but mainly because"}, {"sha": "b158bd69c7b506addc9ecd1df5fdf4d8e82a58ea", "filename": "src/libstd/sync/mutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Fmutex.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -13,7 +13,7 @@ use prelude::v1::*;\n use cell::UnsafeCell;\n use kinds::marker;\n use ops::{Deref, DerefMut};\n-use sync::poison::{mod, TryLockError, TryLockResult, LockResult};\n+use sync::poison::{self, TryLockError, TryLockResult, LockResult};\n use sys_common::mutex as sys;\n \n /// A mutual exclusion primitive useful for protecting shared data"}, {"sha": "b2367ff8352fbb8d30f62b7f59080b93eb3bd9cb", "filename": "src/libstd/sync/rwlock.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Frwlock.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsync%2Frwlock.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsync%2Frwlock.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -13,7 +13,7 @@ use prelude::v1::*;\n use cell::UnsafeCell;\n use kinds::marker;\n use ops::{Deref, DerefMut};\n-use sync::poison::{mod, LockResult, TryLockError, TryLockResult};\n+use sync::poison::{self, LockResult, TryLockError, TryLockResult};\n use sys_common::rwlock as sys;\n \n /// A reader-writer lock\n@@ -362,7 +362,7 @@ impl<'a, T> Drop for RWLockWriteGuard<'a, T> {\n mod tests {\n     use prelude::v1::*;\n \n-    use rand::{mod, Rng};\n+    use rand::{self, Rng};\n     use sync::mpsc::channel;\n     use thread::Thread;\n     use sync::{Arc, RWLock, StaticRWLock, RWLOCK_INIT};"}, {"sha": "32fa6ec590335d3695062fd31bbf84a43e64e5fc", "filename": "src/libstd/sys/common/condvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fcommon%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fcommon%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fcondvar.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -9,7 +9,7 @@\n // except according to those terms.\n \n use time::Duration;\n-use sys_common::mutex::{mod, Mutex};\n+use sys_common::mutex::{self, Mutex};\n use sys::condvar as imp;\n \n /// An OS-based condition variable."}, {"sha": "a441e55a732b01049a187df94b611ce36e8edafe", "filename": "src/libstd/sys/common/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fcommon%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fcommon%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -11,7 +11,7 @@\n #![allow(missing_docs)]\n #![allow(dead_code)]\n \n-use io::{mod, IoError, IoResult};\n+use io::{self, IoError, IoResult};\n use prelude::v1::*;\n use sys::{last_error, retry};\n use c_str::CString;"}, {"sha": "86833af5654b9ef11a1367a3a8b50bccfc475e35", "filename": "src/libstd/sys/common/net.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fnet.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -16,16 +16,16 @@ use c_str::ToCStr;\n use io::net::addrinfo;\n use io::net::ip::{SocketAddr, IpAddr, Ipv4Addr, Ipv6Addr};\n use io::{IoResult, IoError};\n-use libc::{mod, c_char, c_int};\n+use libc::{self, c_char, c_int};\n use c_str::CString;\n use mem;\n use num::Int;\n-use ptr::{mod, null, null_mut};\n-use sys::{mod, retry, c, sock_t, last_error, last_net_error, last_gai_error, close_sock,\n+use ptr::{self, null, null_mut};\n+use sys::{self, retry, c, sock_t, last_error, last_net_error, last_gai_error, close_sock,\n           wrlen, msglen_t, os, wouldblock, set_nonblocking, timer, ms_to_timeval,\n           decode_error_detailed};\n use sync::{Arc, Mutex, MutexGuard};\n-use sys_common::{mod, keep_going, short_write, timeout};\n+use sys_common::{self, keep_going, short_write, timeout};\n use cmp;\n use io;\n "}, {"sha": "158fd3a8382a21bbe3e62b687818077ba1e564c0", "filename": "src/libstd/sys/common/thread_local.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fcommon%2Fthread_local.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fcommon%2Fthread_local.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fcommon%2Fthread_local.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -58,7 +58,7 @@\n \n use prelude::v1::*;\n \n-use sync::atomic::{mod, AtomicUint};\n+use sync::atomic::{self, AtomicUint};\n use sync::{Mutex, Once, ONCE_INIT};\n \n use sys::thread_local as imp;"}, {"sha": "5b261ea6b9e58a85e9c5a94bc6da6ae4304ff890", "filename": "src/libstd/sys/unix/backtrace.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fbacktrace.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -87,7 +87,7 @@ use c_str::CString;\n use io::{IoResult, Writer};\n use libc;\n use mem;\n-use option::Option::{mod, Some, None};\n+use option::Option::{self, Some, None};\n use result::Result::{Ok, Err};\n use sync::{StaticMutex, MUTEX_INIT};\n "}, {"sha": "3aa4825f3be99375abbc6478af4884b4446962cb", "filename": "src/libstd/sys/unix/condvar.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fcondvar.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -10,7 +10,7 @@\n \n use cell::UnsafeCell;\n use libc;\n-use sys::mutex::{mod, Mutex};\n+use sys::mutex::{self, Mutex};\n use sys::sync as ffi;\n use time::Duration;\n "}, {"sha": "b49ace8e2f8d83509a13525f0744f7d206d1d28d", "filename": "src/libstd/sys/unix/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ffs.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -17,7 +17,7 @@ use io::{FilePermission, Write, UnstableFileStat, Open, FileAccess, FileMode};\n use io::{IoResult, FileStat, SeekStyle};\n use io::{Read, Truncate, SeekCur, SeekSet, ReadWrite, SeekEnd, Append};\n use io;\n-use libc::{mod, c_int, c_void};\n+use libc::{self, c_int, c_void};\n use mem;\n use sys::retry;\n use sys_common::{keep_going, eof, mkerr_libc};"}, {"sha": "ea0d230e8b210c751d80df67a093e7f25f146dd5", "filename": "src/libstd/sys/unix/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -20,7 +20,7 @@ extern crate libc;\n use num;\n use num::{Int, SignedInt};\n use prelude::v1::*;\n-use io::{mod, IoResult, IoError};\n+use io::{self, IoResult, IoError};\n use sys_common::mkerr_libc;\n \n macro_rules! helper_init { (static $name:ident: Helper<$m:ty>) => ("}, {"sha": "690574301d7dcebac289556fd6acc83e217eb47a", "filename": "src/libstd/sys/unix/os.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Fos.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fos.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -16,7 +16,7 @@ use c_str::ToCStr;\n use error::{FromError, Error};\n use fmt;\n use io::{IoError, IoResult};\n-use libc::{mod, c_int, c_char, c_void};\n+use libc::{self, c_int, c_char, c_void};\n use os;\n use path::{BytesContainer};\n use ptr;"}, {"sha": "fcbfb383d3cc865295d18800bb5390d6415ff4a3", "filename": "src/libstd/sys/unix/pipe.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fpipe.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -14,9 +14,9 @@ use libc;\n use c_str::CString;\n use mem;\n use sync::{atomic, Arc, Mutex};\n-use io::{mod, IoResult, IoError};\n+use io::{self, IoResult, IoError};\n \n-use sys::{mod, timer, retry, c, set_nonblocking, wouldblock};\n+use sys::{self, timer, retry, c, set_nonblocking, wouldblock};\n use sys::fs::{fd_t, FileDesc};\n use sys_common::net::*;\n use sys_common::net::SocketStatus::*;"}, {"sha": "b73919fe2a2cc5b063b65624bea6c1a467b734dd", "filename": "src/libstd/sys/unix/process.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fprocess.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -15,15 +15,15 @@ use c_str::{CString, ToCStr};\n use collections;\n use hash::Hash;\n use io::process::{ProcessExit, ExitStatus, ExitSignal};\n-use io::{mod, IoResult, IoError, EndOfFile};\n-use libc::{mod, pid_t, c_void, c_int};\n+use io::{self, IoResult, IoError, EndOfFile};\n+use libc::{self, pid_t, c_void, c_int};\n use mem;\n use os;\n use path::BytesContainer;\n use ptr;\n use sync::mpsc::{channel, Sender, Receiver};\n use sys::fs::FileDesc;\n-use sys::{mod, retry, c, wouldblock, set_nonblocking, ms_to_timeval};\n+use sys::{self, retry, c, wouldblock, set_nonblocking, ms_to_timeval};\n use sys_common::helper_thread::Helper;\n use sys_common::{AsInner, mkerr_libc, timeout};\n "}, {"sha": "bee3d440a16c2bab6bf2c6539e7a271214650525", "filename": "src/libstd/sys/unix/tty.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Ftty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Funix%2Ftty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Ftty.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -11,8 +11,8 @@\n use prelude::v1::*;\n \n use sys::fs::FileDesc;\n-use libc::{mod, c_int};\n-use io::{mod, IoResult, IoError};\n+use libc::{self, c_int};\n+use io::{self, IoResult, IoError};\n use sys_common;\n \n pub struct TTY {"}, {"sha": "291a8024cfccec76080f25deccdac04b98463501", "filename": "src/libstd/sys/windows/condvar.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Fcondvar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Fcondvar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fcondvar.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -9,9 +9,9 @@\n // except according to those terms.\n \n use cell::UnsafeCell;\n-use libc::{mod, DWORD};\n+use libc::{self, DWORD};\n use os;\n-use sys::mutex::{mod, Mutex};\n+use sys::mutex::{self, Mutex};\n use sys::sync as ffi;\n use time::Duration;\n "}, {"sha": "9a9423006568020e2d83e73fae538d8fd4c944b7", "filename": "src/libstd/sys/windows/fs.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ffs.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -11,7 +11,7 @@\n //! Blocking Windows-based file I/O\n \n use alloc::arc::Arc;\n-use libc::{mod, c_int};\n+use libc::{self, c_int};\n \n use c_str::CString;\n use mem;"}, {"sha": "a9fb2c682276715b3eadb2ad52057da118415082", "filename": "src/libstd/sys/windows/helper_signal.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Fhelper_signal.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Fhelper_signal.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fhelper_signal.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -8,7 +8,7 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-use libc::{mod, BOOL, LPCSTR, HANDLE, LPSECURITY_ATTRIBUTES, CloseHandle};\n+use libc::{self, BOOL, LPCSTR, HANDLE, LPSECURITY_ATTRIBUTES, CloseHandle};\n use ptr;\n \n pub type signal = HANDLE;"}, {"sha": "0e706c3cc6a57881794fd782fbfbaf75463a096a", "filename": "src/libstd/sys/windows/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -22,7 +22,7 @@ use prelude::v1::*;\n \n use num;\n use mem;\n-use io::{mod, IoResult, IoError};\n+use io::{self, IoResult, IoError};\n use sync::{Once, ONCE_INIT};\n \n macro_rules! helper_init { (static $name:ident: Helper<$m:ty>) => ("}, {"sha": "f561e0121b3e611d46de08483433bda95883bfa5", "filename": "src/libstd/sys/windows/mutex.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fmutex.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -11,7 +11,7 @@\n use prelude::v1::*;\n \n use sync::atomic;\n-use alloc::{mod, heap};\n+use alloc::{self, heap};\n \n use libc::DWORD;\n use sys::sync as ffi;"}, {"sha": "0edae75a9ce64ad37316526ce6c2521e3d482b92", "filename": "src/libstd/sys/windows/pipe.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fpipe.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -91,9 +91,9 @@ use c_str::CString;\n use mem;\n use ptr;\n use sync::{atomic, Arc, Mutex};\n-use io::{mod, IoError, IoResult};\n+use io::{self, IoError, IoResult};\n \n-use sys_common::{mod, eof};\n+use sys_common::{self, eof};\n \n use super::{c, os, timer, to_utf16, decode_error_detailed};\n "}, {"sha": "81e8f974a12238abf9fad4e13d79571078cc050f", "filename": "src/libstd/sys/windows/process.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Fprocess.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -24,7 +24,7 @@ use hash::Hash;\n use io::{IoResult, IoError};\n \n use sys::fs;\n-use sys::{mod, retry, c, wouldblock, set_nonblocking, ms_to_timeval, timer};\n+use sys::{self, retry, c, wouldblock, set_nonblocking, ms_to_timeval, timer};\n use sys::fs::FileDesc;\n use sys_common::helper_thread::Helper;\n use sys_common::{AsInner, mkerr_libc, timeout};"}, {"sha": "1c8ec2a80a7e405c480cbfb136ff137a3176b512", "filename": "src/libstd/sys/windows/tcp.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Ftcp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Ftcp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ftcp.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -17,8 +17,8 @@ use prelude::v1::*;\n use super::{last_error, last_net_error, retry, sock_t};\n use sync::{Arc, atomic};\n use sys::fs::FileDesc;\n-use sys::{mod, c, set_nonblocking, wouldblock, timer};\n-use sys_common::{mod, timeout, eof, net};\n+use sys::{self, c, set_nonblocking, wouldblock, timer};\n+use sys_common::{self, timeout, eof, net};\n \n pub use sys_common::net::TcpStream;\n "}, {"sha": "4305f7743b56411e8224572f97a8e7bec6c7516c", "filename": "src/libstd/sys/windows/tty.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Ftty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fsys%2Fwindows%2Ftty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Fwindows%2Ftty.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -27,7 +27,7 @@\n \n use prelude::v1::*;\n \n-use io::{mod, IoError, IoResult, MemReader};\n+use io::{self, IoError, IoResult, MemReader};\n use iter::repeat;\n use libc::types::os::arch::extra::LPCVOID;\n use libc::{c_int, HANDLE, LPDWORD, DWORD, LPVOID};"}, {"sha": "097ecf338d3ae746d41470a9b5b9d5773329fe5c", "filename": "src/libstd/thread.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibstd%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fthread.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -131,12 +131,12 @@ use cell::UnsafeCell;\n use clone::Clone;\n use kinds::{Send, Sync};\n use ops::{Drop, FnOnce};\n-use option::Option::{mod, Some, None};\n+use option::Option::{self, Some, None};\n use result::Result::{Err, Ok};\n use sync::{Mutex, Condvar, Arc};\n use str::Str;\n use string::String;\n-use rt::{mod, unwind};\n+use rt::{self, unwind};\n use io::{Writer, stdio};\n use thunk::Thunk;\n "}, {"sha": "ea61415d61f56dc63766b005093d289d40eb4711", "filename": "src/libsyntax/ast_map/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibsyntax%2Fast_map%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibsyntax%2Fast_map%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fast_map%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -20,13 +20,13 @@ use fold::Folder;\n use parse::token;\n use print::pprust;\n use ptr::P;\n-use visit::{mod, Visitor};\n+use visit::{self, Visitor};\n \n use arena::TypedArena;\n use std::cell::RefCell;\n use std::fmt;\n use std::io::IoResult;\n-use std::iter::{mod, repeat};\n+use std::iter::{self, repeat};\n use std::mem;\n use std::slice;\n "}, {"sha": "55443dedfca48f162df662faea1945b8023423ce", "filename": "src/libsyntax/ext/deriving/generic/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fext%2Fderiving%2Fgeneric%2Fmod.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -196,7 +196,7 @@ use attr;\n use attr::AttrMetaMethods;\n use ext::base::ExtCtxt;\n use ext::build::AstBuilder;\n-use codemap::{mod, DUMMY_SP};\n+use codemap::{self, DUMMY_SP};\n use codemap::Span;\n use fold::MoveMap;\n use owned_slice::OwnedSlice;"}, {"sha": "95badb5df25bfbe17c2a3fa4782b7c096e0e26fe", "filename": "src/libsyntax/parse/parser.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibsyntax%2Fparse%2Fparser.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibsyntax%2Fparse%2Fparser.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fparse%2Fparser.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -65,8 +65,8 @@ use ast::{ViewItem, ViewItem_, ViewItemExternCrate, ViewItemUse};\n use ast::{ViewPath, ViewPathGlob, ViewPathList, ViewPathSimple};\n use ast::{Visibility, WhereClause};\n use ast;\n-use ast_util::{mod, as_prec, ident_to_path, operator_prec};\n-use codemap::{mod, Span, BytePos, Spanned, spanned, mk_sp, DUMMY_SP};\n+use ast_util::{self, as_prec, ident_to_path, operator_prec};\n+use codemap::{self, Span, BytePos, Spanned, spanned, mk_sp, DUMMY_SP};\n use diagnostic;\n use ext::tt::macro_parser;\n use parse;\n@@ -75,7 +75,7 @@ use parse::classify;\n use parse::common::{SeqSep, seq_sep_none, seq_sep_trailing_allowed};\n use parse::lexer::{Reader, TokenAndSpan};\n use parse::obsolete::*;\n-use parse::token::{mod, MatchNt, SubstNt, InternedString};\n+use parse::token::{self, MatchNt, SubstNt, InternedString};\n use parse::token::{keywords, special_idents};\n use parse::{new_sub_parser_from_file, ParseSess};\n use print::pprust;"}, {"sha": "8e5766bdacc40c03b56c341d004f2b351d51f858", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -11,25 +11,25 @@\n pub use self::AnnNode::*;\n \n use abi;\n-use ast::{mod, FnUnboxedClosureKind, FnMutUnboxedClosureKind};\n+use ast::{self, FnUnboxedClosureKind, FnMutUnboxedClosureKind};\n use ast::{FnOnceUnboxedClosureKind};\n use ast::{MethodImplItem, RegionTyParamBound, TraitTyParamBound, TraitBoundModifier};\n use ast::{RequiredMethod, ProvidedMethod, TypeImplItem, TypeTraitItem};\n use ast::{UnboxedClosureKind};\n use ast_util;\n use owned_slice::OwnedSlice;\n use attr::{AttrMetaMethods, AttributeMethods};\n-use codemap::{mod, CodeMap, BytePos};\n+use codemap::{self, CodeMap, BytePos};\n use diagnostic;\n-use parse::token::{mod, BinOpToken, Token};\n+use parse::token::{self, BinOpToken, Token};\n use parse::lexer::comments;\n use parse;\n-use print::pp::{mod, break_offset, word, space, zerobreak, hardbreak};\n+use print::pp::{self, break_offset, word, space, zerobreak, hardbreak};\n use print::pp::{Breaks, Consistent, Inconsistent, eof};\n use ptr::P;\n \n use std::{ascii, mem};\n-use std::io::{mod, IoResult};\n+use std::io::{self, IoResult};\n use std::iter;\n \n pub enum AnnNode<'a> {"}, {"sha": "6eee1d903ea642fec7652cbddc303c641a3b2f50", "filename": "src/libsyntax/ptr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibsyntax%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibsyntax%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fptr.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -36,7 +36,7 @@\n //!   implementation changes (using a special thread-local heap, for example).\n //!   Moreover, a switch to, e.g. `P<'a, T>` would be easy and mostly automated.\n \n-use std::fmt::{mod, Show};\n+use std::fmt::{self, Show};\n use std::hash::Hash;\n use std::ops::Deref;\n use std::ptr;"}, {"sha": "6a37f2db33c4e718d5736df6cd7cfb22b7813bd7", "filename": "src/libtest/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibtest%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibtest%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Flib.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -73,7 +73,7 @@ use std::num::{Float, FloatMath, Int};\n use std::os;\n use std::str::{FromStr, from_str};\n use std::sync::mpsc::{channel, Sender};\n-use std::thread::{mod, Thread};\n+use std::thread::{self, Thread};\n use std::thunk::{Thunk, Invoke};\n use std::time::Duration;\n "}, {"sha": "bf42743a692f51b75c19a2c30f3f71442d467b29", "filename": "src/libtest/stats.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibtest%2Fstats.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibtest%2Fstats.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtest%2Fstats.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -10,7 +10,7 @@\n \n #![allow(missing_docs)]\n \n-use std::cmp::Ordering::{mod, Less, Greater, Equal};\n+use std::cmp::Ordering::{self, Less, Greater, Equal};\n use std::collections::hash_map::Entry::{Occupied, Vacant};\n use std::collections::hash_map;\n use std::fmt::Show;"}, {"sha": "adb4b5300c1f9615ae594fe6b761be71b92291ed", "filename": "src/libtime/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibtime%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Flibtime%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibtime%2Flib.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -35,7 +35,7 @@ extern crate libc;\n pub use self::ParseError::*;\n use self::Fmt::*;\n \n-use std::fmt::{mod, Show};\n+use std::fmt::{self, Show};\n use std::num::SignedInt;\n use std::ops::{Add, Sub};\n use std::time::Duration;"}, {"sha": "44abd1d09d1d814174afc9fd06646ac8137ddc65", "filename": "src/test/bench/shootout-k-nucleotide-pipes.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/56dcbd17fdad5d39b7b02e22a7490d2468718d08/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-k-nucleotide-pipes.rs?ref=56dcbd17fdad5d39b7b02e22a7490d2468718d08", "patch": "@@ -18,7 +18,7 @@\n extern crate collections;\n \n use std::ascii::{AsciiExt, OwnedAsciiExt};\n-use std::cmp::Ordering::{mod, Less, Greater, Equal};\n+use std::cmp::Ordering::{self, Less, Greater, Equal};\n use std::collections::HashMap;\n use std::sync::mpsc::{channel, Sender, Receiver};\n use std::mem::replace;"}]}