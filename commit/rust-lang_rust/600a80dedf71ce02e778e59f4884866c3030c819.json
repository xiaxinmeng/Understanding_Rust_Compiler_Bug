{"sha": "600a80dedf71ce02e778e59f4884866c3030c819", "node_id": "C_kwDOAAsO6NoAKDYwMGE4MGRlZGY3MWNlMDJlNzc4ZTU5ZjQ4ODQ4NjZjMzAzMGM4MTk", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-24T06:05:30Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2022-03-24T06:05:30Z"}, "message": "Auto merge of #95233 - compiler-errors:chalk-up, r=jackh726\n\nUpgrade chalk to `0.80.0`\n\nr? `@jackh726`", "tree": {"sha": "5def2e18c46a0e63b2a269cb75a50f67713f142f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5def2e18c46a0e63b2a269cb75a50f67713f142f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/600a80dedf71ce02e778e59f4884866c3030c819", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/600a80dedf71ce02e778e59f4884866c3030c819", "html_url": "https://github.com/rust-lang/rust/commit/600a80dedf71ce02e778e59f4884866c3030c819", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/600a80dedf71ce02e778e59f4884866c3030c819/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6970f88db3ac2a9cefa9c585228291ae1f18fb04", "url": "https://api.github.com/repos/rust-lang/rust/commits/6970f88db3ac2a9cefa9c585228291ae1f18fb04", "html_url": "https://github.com/rust-lang/rust/commit/6970f88db3ac2a9cefa9c585228291ae1f18fb04"}, {"sha": "376d100e7473d094acb202dab08022be8cf65a83", "url": "https://api.github.com/repos/rust-lang/rust/commits/376d100e7473d094acb202dab08022be8cf65a83", "html_url": "https://github.com/rust-lang/rust/commit/376d100e7473d094acb202dab08022be8cf65a83"}], "stats": {"total": 71, "additions": 49, "deletions": 22}, "files": [{"sha": "80f0a0b8b5ba3c3464ac08440d37c6541b3cf4d0", "filename": "Cargo.lock", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/600a80dedf71ce02e778e59f4884866c3030c819/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/600a80dedf71ce02e778e59f4884866c3030c819/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=600a80dedf71ce02e778e59f4884866c3030c819", "patch": "@@ -515,9 +515,9 @@ checksum = \"baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd\"\n \n [[package]]\n name = \"chalk-derive\"\n-version = \"0.76.0\"\n+version = \"0.80.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"58c24b8052ea1e3adbb6f9ab7ba5fcc18b9d12591c042de4c833f709ce81e0e0\"\n+checksum = \"d0001adf0cf12361e08b65e1898ea138f8f77d8f5177cbf29b6b3b3532252bd6\"\n dependencies = [\n  \"proc-macro2\",\n  \"quote\",\n@@ -527,9 +527,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-engine\"\n-version = \"0.76.0\"\n+version = \"0.80.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"0eca186b6ea9af798312f4b568fd094c82e7946ac08be5dc5fea22decc6d2ed8\"\n+checksum = \"c44ee96f2d67cb5193d1503f185db1abad9933a1c6e6b4169c176f90baecd393\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\",\n@@ -540,9 +540,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-ir\"\n-version = \"0.76.0\"\n+version = \"0.80.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"f3cad5c3f1edd4b4a2c9bda24ae558ceb4f88336f88f944c2e35d0bfeb13c818\"\n+checksum = \"92d8a95548f23618fda86426e4304e563ec2bb7ba0216139f0748d63c107b5f1\"\n dependencies = [\n  \"bitflags\",\n  \"chalk-derive\",\n@@ -551,9 +551,9 @@ dependencies = [\n \n [[package]]\n name = \"chalk-solve\"\n-version = \"0.76.0\"\n+version = \"0.80.0\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"94533188d3452bc72cbd5618d166f45fc7646b674ad3fe9667d557bc25236dee\"\n+checksum = \"f37f492dacfafe2e21319b80827da2779932909bb392f0cc86b2bd5c07c1b4e1\"\n dependencies = [\n  \"chalk-derive\",\n  \"chalk-ir\","}, {"sha": "9cfc5f5b444dfe9bcf199c3a679aa4e780b3df8f", "filename": "compiler/rustc_middle/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/600a80dedf71ce02e778e59f4884866c3030c819/compiler%2Frustc_middle%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/600a80dedf71ce02e778e59f4884866c3030c819/compiler%2Frustc_middle%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2FCargo.toml?ref=600a80dedf71ce02e778e59f4884866c3030c819", "patch": "@@ -29,7 +29,7 @@ rustc_index = { path = \"../rustc_index\" }\n rustc_serialize = { path = \"../rustc_serialize\" }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_span = { path = \"../rustc_span\" }\n-chalk-ir = \"0.76.0\"\n+chalk-ir = \"0.80.0\"\n smallvec = { version = \"1.6.1\", features = [\"union\", \"may_dangle\"] }\n rustc_session = { path = \"../rustc_session\" }\n rustc_type_ir = { path = \"../rustc_type_ir\" }"}, {"sha": "67f878df31cb545bae51629fb464773c91f13402", "filename": "compiler/rustc_traits/Cargo.toml", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/600a80dedf71ce02e778e59f4884866c3030c819/compiler%2Frustc_traits%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/600a80dedf71ce02e778e59f4884866c3030c819/compiler%2Frustc_traits%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2FCargo.toml?ref=600a80dedf71ce02e778e59f4884866c3030c819", "patch": "@@ -12,9 +12,9 @@ rustc_hir = { path = \"../rustc_hir\" }\n rustc_index = { path = \"../rustc_index\" }\n rustc_ast = { path = \"../rustc_ast\" }\n rustc_span = { path = \"../rustc_span\" }\n-chalk-ir = \"0.76.0\"\n-chalk-engine = \"0.76.0\"\n-chalk-solve = \"0.76.0\"\n+chalk-ir = \"0.80.0\"\n+chalk-engine = \"0.80.0\"\n+chalk-solve = \"0.80.0\"\n smallvec = { version = \"1.6.1\", features = [\"union\", \"may_dangle\"] }\n rustc_infer = { path = \"../rustc_infer\" }\n rustc_trait_selection = { path = \"../rustc_trait_selection\" }"}, {"sha": "6424b907478764ce6698c23112d3234732a1485d", "filename": "compiler/rustc_traits/src/chalk/db.rs", "status": "modified", "additions": 37, "deletions": 10, "changes": 47, "blob_url": "https://github.com/rust-lang/rust/blob/600a80dedf71ce02e778e59f4884866c3030c819/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/600a80dedf71ce02e778e59f4884866c3030c819/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fchalk%2Fdb.rs?ref=600a80dedf71ce02e778e59f4884866c3030c819", "patch": "@@ -100,6 +100,8 @@ impl<'tcx> chalk_solve::RustIrDatabase<RustInterner<'tcx>> for RustIrDatabase<'t\n         &self,\n         trait_id: chalk_ir::TraitId<RustInterner<'tcx>>,\n     ) -> Arc<chalk_solve::rust_ir::TraitDatum<RustInterner<'tcx>>> {\n+        use chalk_solve::rust_ir::WellKnownTrait::*;\n+\n         let def_id = trait_id.0;\n         let trait_def = self.interner.tcx.trait_def(def_id);\n \n@@ -119,25 +121,27 @@ impl<'tcx> chalk_solve::RustIrDatabase<RustInterner<'tcx>> for RustIrDatabase<'t\n \n         let lang_items = self.interner.tcx.lang_items();\n         let well_known = if lang_items.sized_trait() == Some(def_id) {\n-            Some(chalk_solve::rust_ir::WellKnownTrait::Sized)\n+            Some(Sized)\n         } else if lang_items.copy_trait() == Some(def_id) {\n-            Some(chalk_solve::rust_ir::WellKnownTrait::Copy)\n+            Some(Copy)\n         } else if lang_items.clone_trait() == Some(def_id) {\n-            Some(chalk_solve::rust_ir::WellKnownTrait::Clone)\n+            Some(Clone)\n         } else if lang_items.drop_trait() == Some(def_id) {\n-            Some(chalk_solve::rust_ir::WellKnownTrait::Drop)\n+            Some(Drop)\n         } else if lang_items.fn_trait() == Some(def_id) {\n-            Some(chalk_solve::rust_ir::WellKnownTrait::Fn)\n+            Some(Fn)\n         } else if lang_items.fn_once_trait() == Some(def_id) {\n-            Some(chalk_solve::rust_ir::WellKnownTrait::FnOnce)\n+            Some(FnOnce)\n         } else if lang_items.fn_mut_trait() == Some(def_id) {\n-            Some(chalk_solve::rust_ir::WellKnownTrait::FnMut)\n+            Some(FnMut)\n         } else if lang_items.unsize_trait() == Some(def_id) {\n-            Some(chalk_solve::rust_ir::WellKnownTrait::Unsize)\n+            Some(Unsize)\n         } else if lang_items.unpin_trait() == Some(def_id) {\n-            Some(chalk_solve::rust_ir::WellKnownTrait::Unpin)\n+            Some(Unpin)\n         } else if lang_items.coerce_unsized_trait() == Some(def_id) {\n-            Some(chalk_solve::rust_ir::WellKnownTrait::CoerceUnsized)\n+            Some(CoerceUnsized)\n+        } else if lang_items.dispatch_from_dyn_trait() == Some(def_id) {\n+            Some(DispatchFromDyn)\n         } else {\n             None\n         };\n@@ -232,6 +236,28 @@ impl<'tcx> chalk_solve::RustIrDatabase<RustInterner<'tcx>> for RustIrDatabase<'t\n         })\n     }\n \n+    fn adt_size_align(\n+        &self,\n+        adt_id: chalk_ir::AdtId<RustInterner<'tcx>>,\n+    ) -> Arc<chalk_solve::rust_ir::AdtSizeAlign> {\n+        let tcx = self.interner.tcx;\n+        let did = adt_id.0.did();\n+\n+        // Grab the ADT and the param we might need to calculate its layout\n+        let param_env = tcx.param_env(did);\n+        let adt_ty = tcx.type_of(did);\n+\n+        // The ADT is a 1-zst if it's a ZST and its alignment is 1.\n+        // Mark the ADT as _not_ a 1-zst if there was a layout error.\n+        let one_zst = if let Ok(layout) = tcx.layout_of(param_env.and(adt_ty)) {\n+            layout.is_zst() && layout.align.abi.bytes() == 1\n+        } else {\n+            false\n+        };\n+\n+        Arc::new(chalk_solve::rust_ir::AdtSizeAlign::from_one_zst(one_zst))\n+    }\n+\n     fn fn_def_datum(\n         &self,\n         fn_def_id: chalk_ir::FnDefId<RustInterner<'tcx>>,\n@@ -540,6 +566,7 @@ impl<'tcx> chalk_solve::RustIrDatabase<RustInterner<'tcx>> for RustIrDatabase<'t\n             Unpin => lang_items.unpin_trait(),\n             CoerceUnsized => lang_items.coerce_unsized_trait(),\n             DiscriminantKind => lang_items.discriminant_kind_trait(),\n+            DispatchFromDyn => lang_items.dispatch_from_dyn_trait(),\n         };\n         def_id.map(chalk_ir::TraitId)\n     }"}]}