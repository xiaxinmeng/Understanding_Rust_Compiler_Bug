{"sha": "295c8d4f7f9ce9d3dc67e8a988914d90424c1b7e", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI5NWM4ZDRmN2Y5Y2U5ZDNkYzY3ZThhOTg4OTE0ZDkwNDI0YzFiN2U=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-23T18:38:36Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-23T18:38:36Z"}, "message": "Complicate\n\nFixing test fallout unfortunately requires more work, we need to do\nit, but let's merge something at least!", "tree": {"sha": "a3fc00ca2a19fa1294cf93030ff0d4a8d80f647f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a3fc00ca2a19fa1294cf93030ff0d4a8d80f647f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/295c8d4f7f9ce9d3dc67e8a988914d90424c1b7e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/295c8d4f7f9ce9d3dc67e8a988914d90424c1b7e", "html_url": "https://github.com/rust-lang/rust/commit/295c8d4f7f9ce9d3dc67e8a988914d90424c1b7e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/295c8d4f7f9ce9d3dc67e8a988914d90424c1b7e/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a34f9b7fb343114446be08c7867b699b2210710f", "url": "https://api.github.com/repos/rust-lang/rust/commits/a34f9b7fb343114446be08c7867b699b2210710f", "html_url": "https://github.com/rust-lang/rust/commit/a34f9b7fb343114446be08c7867b699b2210710f"}], "stats": {"total": 58, "additions": 52, "deletions": 6}, "files": [{"sha": "20f29156830d08298b1c629d7f73db7387acc79c", "filename": "crates/ra_db/src/fixture.rs", "status": "modified", "additions": 48, "deletions": 3, "changes": 51, "blob_url": "https://github.com/rust-lang/rust/blob/295c8d4f7f9ce9d3dc67e8a988914d90424c1b7e/crates%2Fra_db%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/295c8d4f7f9ce9d3dc67e8a988914d90424c1b7e/crates%2Fra_db%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Ffixture.rs?ref=295c8d4f7f9ce9d3dc67e8a988914d90424c1b7e", "patch": "@@ -74,9 +74,8 @@ pub const WORKSPACE: SourceRootId = SourceRootId(0);\n pub trait WithFixture: Default + SourceDatabaseExt + 'static {\n     fn with_single_file(text: &str) -> (Self, FileId) {\n         let mut db = Self::default();\n-        let (_, files) = with_files(&mut db, text);\n-        assert!(files.len() == 1);\n-        (db, files[0])\n+        let file_id = with_single_file(&mut db, text);\n+        (db, file_id)\n     }\n \n     fn with_files(ra_fixture: &str) -> Self {\n@@ -103,6 +102,52 @@ pub trait WithFixture: Default + SourceDatabaseExt + 'static {\n \n impl<DB: SourceDatabaseExt + Default + 'static> WithFixture for DB {}\n \n+fn with_single_file(db: &mut dyn SourceDatabaseExt, ra_fixture: &str) -> FileId {\n+    let file_id = FileId(0);\n+    let mut file_set = vfs::file_set::FileSet::default();\n+    file_set.insert(file_id, vfs::VfsPath::new_virtual_path(\"/main.rs\".to_string()));\n+\n+    let source_root = SourceRoot::new_local(file_set);\n+\n+    let crate_graph = if let Some(meta) = ra_fixture.lines().find(|it| it.contains(\"//-\")) {\n+        let entry = Fixture::parse_single(meta.trim());\n+        let meta = match ParsedMeta::from(&entry) {\n+            ParsedMeta::File(it) => it,\n+        };\n+\n+        let mut crate_graph = CrateGraph::default();\n+        crate_graph.add_crate_root(\n+            file_id,\n+            meta.edition,\n+            meta.krate.map(|name| {\n+                CrateName::new(&name).expect(\"Fixture crate name should not contain dashes\")\n+            }),\n+            meta.cfg,\n+            meta.env,\n+            Default::default(),\n+        );\n+        crate_graph\n+    } else {\n+        let mut crate_graph = CrateGraph::default();\n+        crate_graph.add_crate_root(\n+            file_id,\n+            Edition::Edition2018,\n+            None,\n+            CfgOptions::default(),\n+            Env::default(),\n+            Default::default(),\n+        );\n+        crate_graph\n+    };\n+\n+    db.set_file_text(file_id, Arc::new(ra_fixture.to_string()));\n+    db.set_file_source_root(file_id, WORKSPACE);\n+    db.set_source_root(WORKSPACE, Arc::new(source_root));\n+    db.set_crate_graph(Arc::new(crate_graph));\n+\n+    file_id\n+}\n+\n fn with_files(\n     db: &mut dyn SourceDatabaseExt,\n     fixture: &str,"}, {"sha": "9108e49d9661bdb373ee04cc86abe8131976bbe8", "filename": "crates/test_utils/src/fixture.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/295c8d4f7f9ce9d3dc67e8a988914d90424c1b7e/crates%2Ftest_utils%2Fsrc%2Ffixture.rs", "raw_url": "https://github.com/rust-lang/rust/raw/295c8d4f7f9ce9d3dc67e8a988914d90424c1b7e/crates%2Ftest_utils%2Fsrc%2Ffixture.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Ftest_utils%2Fsrc%2Ffixture.rs?ref=295c8d4f7f9ce9d3dc67e8a988914d90424c1b7e", "patch": "@@ -55,8 +55,7 @@ The offending line: {:?}\"#,\n         let mut res: Vec<Fixture> = Vec::new();\n         for line in lines.by_ref() {\n             if line.starts_with(\"//-\") {\n-                let meta = line[\"//-\".len()..].trim().to_string();\n-                let meta = Fixture::parse_single(&meta);\n+                let meta = Fixture::parse_single(line);\n                 res.push(meta)\n             } else if let Some(entry) = res.last_mut() {\n                 entry.text.push_str(line);\n@@ -67,7 +66,9 @@ The offending line: {:?}\"#,\n     }\n \n     //- /lib.rs crate:foo deps:bar,baz cfg:foo=a,bar=b env:OUTDIR=path/to,OTHER=foo\n-    fn parse_single(meta: &str) -> Fixture {\n+    pub fn parse_single(meta: &str) -> Fixture {\n+        assert!(meta.starts_with(\"//-\"));\n+        let meta = meta[\"//-\".len()..].trim();\n         let components = meta.split_ascii_whitespace().collect::<Vec<_>>();\n \n         let path = components[0].to_string();"}]}