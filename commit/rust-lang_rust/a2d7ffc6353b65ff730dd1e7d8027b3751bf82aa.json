{"sha": "a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "node_id": "C_kwDOAAsO6NoAKGEyZDdmZmM2MzUzYjY1ZmY3MzBkZDFlN2Q4MDI3YjM3NTFiZjgyYWE", "commit": {"author": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-05-09T20:18:22Z"}, "committer": {"name": "Michael Goulet", "email": "michael@errs.io", "date": "2023-05-25T03:21:21Z"}, "message": "Move DefiningAnchor", "tree": {"sha": "9c7ee3fae1a2fe2a9c687fbc3f199e4c0f1665ab", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/9c7ee3fae1a2fe2a9c687fbc3f199e4c0f1665ab"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "html_url": "https://github.com/rust-lang/rust/commit/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/comments", "author": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "compiler-errors", "id": 3674314, "node_id": "MDQ6VXNlcjM2NzQzMTQ=", "avatar_url": "https://avatars.githubusercontent.com/u/3674314?v=4", "gravatar_id": "", "url": "https://api.github.com/users/compiler-errors", "html_url": "https://github.com/compiler-errors", "followers_url": "https://api.github.com/users/compiler-errors/followers", "following_url": "https://api.github.com/users/compiler-errors/following{/other_user}", "gists_url": "https://api.github.com/users/compiler-errors/gists{/gist_id}", "starred_url": "https://api.github.com/users/compiler-errors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/compiler-errors/subscriptions", "organizations_url": "https://api.github.com/users/compiler-errors/orgs", "repos_url": "https://api.github.com/users/compiler-errors/repos", "events_url": "https://api.github.com/users/compiler-errors/events{/privacy}", "received_events_url": "https://api.github.com/users/compiler-errors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "4d80b8090c30980c03ff4bb6f47a7560ffaa68a4", "url": "https://api.github.com/repos/rust-lang/rust/commits/4d80b8090c30980c03ff4bb6f47a7560ffaa68a4", "html_url": "https://github.com/rust-lang/rust/commit/4d80b8090c30980c03ff4bb6f47a7560ffaa68a4"}], "stats": {"total": 61, "additions": 34, "deletions": 27}, "files": [{"sha": "d257145373f72e9a562c4f7802771b966387c2d0", "filename": "compiler/rustc_borrowck/src/consumers.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_borrowck%2Fsrc%2Fconsumers.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_borrowck%2Fsrc%2Fconsumers.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fconsumers.rs?ref=a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "patch": "@@ -4,8 +4,9 @@\n \n use rustc_hir::def_id::LocalDefId;\n use rustc_index::{IndexSlice, IndexVec};\n-use rustc_infer::infer::{DefiningAnchor, TyCtxtInferExt};\n+use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::mir::{Body, Promoted};\n+use rustc_middle::traits::DefiningAnchor;\n use rustc_middle::ty::TyCtxt;\n use std::rc::Rc;\n "}, {"sha": "9277a262f97891e18c7036c5cc6f1ab63e3e4d2f", "filename": "compiler/rustc_borrowck/src/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Flib.rs?ref=a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "patch": "@@ -26,7 +26,7 @@ use rustc_hir::def_id::LocalDefId;\n use rustc_index::bit_set::ChunkedBitSet;\n use rustc_index::{IndexSlice, IndexVec};\n use rustc_infer::infer::{\n-    DefiningAnchor, InferCtxt, NllRegionVariableOrigin, RegionVariableOrigin, TyCtxtInferExt,\n+    InferCtxt, NllRegionVariableOrigin, RegionVariableOrigin, TyCtxtInferExt,\n };\n use rustc_middle::mir::{\n     traversal, Body, ClearCrossCrate, Local, Location, Mutability, NonDivergingIntrinsic, Operand,\n@@ -36,6 +36,7 @@ use rustc_middle::mir::{AggregateKind, BasicBlock, BorrowCheckResult, BorrowKind\n use rustc_middle::mir::{InlineAsmOperand, Terminator, TerminatorKind};\n use rustc_middle::mir::{ProjectionElem, Promoted, Rvalue, Statement, StatementKind};\n use rustc_middle::query::Providers;\n+use rustc_middle::traits::DefiningAnchor;\n use rustc_middle::ty::{self, CapturedPlace, ParamEnv, RegionVid, TyCtxt};\n use rustc_session::lint::builtin::UNUSED_MUT;\n use rustc_span::{Span, Symbol};"}, {"sha": "7fc89e89a359951633aad842df8270232a861018", "filename": "compiler/rustc_borrowck/src/region_infer/opaque_types.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_borrowck%2Fsrc%2Fregion_infer%2Fopaque_types.rs?ref=a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "patch": "@@ -2,9 +2,10 @@ use rustc_data_structures::fx::{FxIndexMap, FxIndexSet};\n use rustc_errors::ErrorGuaranteed;\n use rustc_hir::def_id::LocalDefId;\n use rustc_hir::OpaqueTyOrigin;\n+use rustc_infer::infer::InferCtxt;\n use rustc_infer::infer::TyCtxtInferExt as _;\n-use rustc_infer::infer::{DefiningAnchor, InferCtxt};\n use rustc_infer::traits::{Obligation, ObligationCause};\n+use rustc_middle::traits::DefiningAnchor;\n use rustc_middle::ty::subst::{GenericArgKind, InternalSubsts};\n use rustc_middle::ty::visit::TypeVisitableExt;\n use rustc_middle::ty::{self, OpaqueHiddenType, OpaqueTypeKey, Ty, TyCtxt, TypeFoldable};"}, {"sha": "d6a2ffb75111a1b9794d701fe91a66cc9be199b9", "filename": "compiler/rustc_const_eval/src/util/compare_types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_const_eval%2Fsrc%2Futil%2Fcompare_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_const_eval%2Fsrc%2Futil%2Fcompare_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Futil%2Fcompare_types.rs?ref=a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "patch": "@@ -3,8 +3,8 @@\n //! FIXME: Move this to a more general place. The utility of this extends to\n //! other areas of the compiler as well.\n \n-use rustc_infer::infer::{DefiningAnchor, TyCtxtInferExt};\n-use rustc_infer::traits::ObligationCause;\n+use rustc_infer::infer::TyCtxtInferExt;\n+use rustc_middle::traits::{DefiningAnchor, ObligationCause};\n use rustc_middle::ty::{ParamEnv, Ty, TyCtxt};\n use rustc_trait_selection::traits::ObligationCtxt;\n "}, {"sha": "3b2c052e8f459d4492107de25f18b1ce02acbd01", "filename": "compiler/rustc_hir_analysis/src/check/check.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcheck%2Fcheck.rs?ref=a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "patch": "@@ -13,11 +13,12 @@ use rustc_hir::intravisit::Visitor;\n use rustc_hir::{ItemKind, Node, PathSegment};\n use rustc_infer::infer::opaque_types::ConstrainOpaqueTypeRegionVisitor;\n use rustc_infer::infer::outlives::env::OutlivesEnvironment;\n-use rustc_infer::infer::{DefiningAnchor, RegionVariableOrigin, TyCtxtInferExt};\n+use rustc_infer::infer::{RegionVariableOrigin, TyCtxtInferExt};\n use rustc_infer::traits::{Obligation, TraitEngineExt as _};\n use rustc_lint_defs::builtin::REPR_TRANSPARENT_EXTERNAL_PRIVATE_FIELDS;\n use rustc_middle::hir::nested_filter;\n use rustc_middle::middle::stability::EvalResult;\n+use rustc_middle::traits::DefiningAnchor;\n use rustc_middle::ty::layout::{LayoutError, MAX_SIMD_LANES};\n use rustc_middle::ty::subst::GenericArgKind;\n use rustc_middle::ty::util::{Discr, IntTypeExt};"}, {"sha": "294c3bb78a5ba9524f65a92512fc7d33ff571927", "filename": "compiler/rustc_hir_typeck/src/inherited.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_hir_typeck%2Fsrc%2Finherited.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_hir_typeck%2Fsrc%2Finherited.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_typeck%2Fsrc%2Finherited.rs?ref=a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "patch": "@@ -4,7 +4,8 @@ use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n use rustc_hir as hir;\n use rustc_hir::def_id::LocalDefId;\n use rustc_hir::HirIdMap;\n-use rustc_infer::infer::{DefiningAnchor, InferCtxt, InferOk, TyCtxtInferExt};\n+use rustc_infer::infer::{InferCtxt, InferOk, TyCtxtInferExt};\n+use rustc_middle::traits::DefiningAnchor;\n use rustc_middle::ty::visit::TypeVisitableExt;\n use rustc_middle::ty::{self, Ty, TyCtxt};\n use rustc_span::def_id::LocalDefIdMap;"}, {"sha": "cd99fc312129b31257b5ea4df9ac854664245997", "filename": "compiler/rustc_infer/src/infer/mod.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fmod.rs?ref=a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "patch": "@@ -24,7 +24,7 @@ use rustc_middle::infer::unify_key::{ConstVarValue, ConstVariableValue};\n use rustc_middle::infer::unify_key::{ConstVariableOrigin, ConstVariableOriginKind, ToType};\n use rustc_middle::mir::interpret::{ErrorHandled, EvalToValTreeResult};\n use rustc_middle::mir::ConstraintCategory;\n-use rustc_middle::traits::select;\n+use rustc_middle::traits::{select, DefiningAnchor};\n use rustc_middle::ty::error::{ExpectedFound, TypeError};\n use rustc_middle::ty::fold::BoundVarReplacerDelegate;\n use rustc_middle::ty::fold::{TypeFoldable, TypeFolder, TypeSuperFoldable};\n@@ -231,17 +231,6 @@ impl<'tcx> InferCtxtInner<'tcx> {\n     }\n }\n \n-#[derive(Clone, Copy, Debug, PartialEq, Eq)]\n-pub enum DefiningAnchor {\n-    /// `DefId` of the item.\n-    Bind(LocalDefId),\n-    /// When opaque types are not resolved, we `Bubble` up, meaning\n-    /// return the opaque/hidden type pair from query, for caller of query to handle it.\n-    Bubble,\n-    /// Used to catch type mismatch errors when handling opaque types.\n-    Error,\n-}\n-\n pub struct InferCtxt<'tcx> {\n     pub tcx: TyCtxt<'tcx>,\n "}, {"sha": "38bb5a3143b357904fc4f900946a3409d43551da", "filename": "compiler/rustc_infer/src/infer/opaque_types.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_infer%2Fsrc%2Finfer%2Fopaque_types.rs?ref=a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "patch": "@@ -1,14 +1,14 @@\n use super::type_variable::{TypeVariableOrigin, TypeVariableOriginKind};\n use super::{DefineOpaqueTypes, InferResult};\n use crate::errors::OpaqueHiddenTypeDiag;\n-use crate::infer::{DefiningAnchor, InferCtxt, InferOk};\n+use crate::infer::{InferCtxt, InferOk};\n use crate::traits::{self, PredicateObligation};\n use hir::def_id::{DefId, LocalDefId};\n use hir::OpaqueTyOrigin;\n use rustc_data_structures::fx::FxIndexMap;\n use rustc_data_structures::sync::Lrc;\n use rustc_hir as hir;\n-use rustc_middle::traits::ObligationCause;\n+use rustc_middle::traits::{DefiningAnchor, ObligationCause};\n use rustc_middle::ty::error::{ExpectedFound, TypeError};\n use rustc_middle::ty::fold::BottomUpFolder;\n use rustc_middle::ty::GenericArgKind;"}, {"sha": "0a903a76974da3db000477f1c66148137145a6ba", "filename": "compiler/rustc_middle/src/traits/mod.rs", "status": "modified", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_middle%2Fsrc%2Ftraits%2Fmod.rs?ref=a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "patch": "@@ -1108,3 +1108,14 @@ pub enum CodegenObligationError {\n     Unimplemented,\n     FulfillmentError,\n }\n+\n+#[derive(Debug, PartialEq, Eq, Clone, Copy, Hash, TypeFoldable, TypeVisitable)]\n+pub enum DefiningAnchor {\n+    /// `DefId` of the item.\n+    Bind(LocalDefId),\n+    /// When opaque types are not resolved, we `Bubble` up, meaning\n+    /// return the opaque/hidden type pair from query, for caller of query to handle it.\n+    Bubble,\n+    /// Used to catch type mismatch errors when handling opaque types.\n+    Error,\n+}"}, {"sha": "e8c5a8fab2a37d97e66e5d4a0376f5bf861368e3", "filename": "compiler/rustc_trait_selection/src/traits/coherence.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fcoherence.rs?ref=a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "patch": "@@ -17,9 +17,10 @@ use crate::traits::{\n use rustc_data_structures::fx::FxIndexSet;\n use rustc_errors::Diagnostic;\n use rustc_hir::def_id::{DefId, CRATE_DEF_ID, LOCAL_CRATE};\n-use rustc_infer::infer::{DefineOpaqueTypes, DefiningAnchor, InferCtxt, TyCtxtInferExt};\n+use rustc_infer::infer::{DefineOpaqueTypes, InferCtxt, TyCtxtInferExt};\n use rustc_infer::traits::util;\n use rustc_middle::traits::specialization_graph::OverlapMode;\n+use rustc_middle::traits::DefiningAnchor;\n use rustc_middle::ty::fast_reject::{DeepRejectCtxt, TreatParams};\n use rustc_middle::ty::visit::{TypeVisitable, TypeVisitableExt};\n use rustc_middle::ty::{self, ImplSubject, Ty, TyCtxt, TypeVisitor};"}, {"sha": "ddba03b0b12b3444b7436bd20cd8755fa8c4fc21", "filename": "compiler/rustc_traits/src/codegen.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_traits%2Fsrc%2Fcodegen.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_traits%2Fsrc%2Fcodegen.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fcodegen.rs?ref=a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "patch": "@@ -3,9 +3,9 @@\n // seems likely that they should eventually be merged into more\n // general routines.\n \n-use rustc_infer::infer::{DefiningAnchor, TyCtxtInferExt};\n+use rustc_infer::infer::TyCtxtInferExt;\n use rustc_infer::traits::{FulfillmentErrorCode, TraitEngineExt as _};\n-use rustc_middle::traits::CodegenObligationError;\n+use rustc_middle::traits::{CodegenObligationError, DefiningAnchor};\n use rustc_middle::ty::{self, TyCtxt};\n use rustc_trait_selection::traits::error_reporting::TypeErrCtxtExt;\n use rustc_trait_selection::traits::{"}, {"sha": "3d630f14f87f0eaaf355f8d9b7598baa63055c5b", "filename": "compiler/rustc_traits/src/evaluate_obligation.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_traits%2Fsrc%2Fevaluate_obligation.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_traits%2Fsrc%2Fevaluate_obligation.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Fevaluate_obligation.rs?ref=a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "patch": "@@ -1,5 +1,6 @@\n-use rustc_infer::infer::{DefiningAnchor, TyCtxtInferExt};\n+use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::query::Providers;\n+use rustc_middle::traits::DefiningAnchor;\n use rustc_middle::ty::{ParamEnvAnd, TyCtxt};\n use rustc_span::source_map::DUMMY_SP;\n use rustc_trait_selection::traits::query::CanonicalPredicateGoal;"}, {"sha": "b1cbd88ce27eaa888bc894495c739c76017d781c", "filename": "compiler/rustc_traits/src/type_op.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_traits%2Fsrc%2Ftype_op.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa/compiler%2Frustc_traits%2Fsrc%2Ftype_op.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_traits%2Fsrc%2Ftype_op.rs?ref=a2d7ffc6353b65ff730dd1e7d8027b3751bf82aa", "patch": "@@ -1,8 +1,8 @@\n use rustc_hir as hir;\n use rustc_infer::infer::canonical::{Canonical, QueryResponse};\n-use rustc_infer::infer::{DefiningAnchor, TyCtxtInferExt};\n-use rustc_infer::traits::ObligationCauseCode;\n+use rustc_infer::infer::TyCtxtInferExt;\n use rustc_middle::query::Providers;\n+use rustc_middle::traits::{DefiningAnchor, ObligationCauseCode};\n use rustc_middle::ty::{self, FnSig, Lift, PolyFnSig, Ty, TyCtxt, TypeFoldable};\n use rustc_middle::ty::{ParamEnvAnd, Predicate};\n use rustc_middle::ty::{UserSelfTy, UserSubsts, UserType};"}]}