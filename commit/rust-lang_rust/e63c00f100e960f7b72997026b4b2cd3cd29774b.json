{"sha": "e63c00f100e960f7b72997026b4b2cd3cd29774b", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU2M2MwMGYxMDBlOTYwZjdiNzI5OTcwMjZiNGIyY2QzY2QyOTc3NGI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-05T12:55:23Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-05T12:58:30Z"}, "message": "Rename resolve_relative_path -> resolve_path\n\nFor things like `concant!(env!(\"OUT_DIR\"))`, we need to support abs paths", "tree": {"sha": "f789502d1e45282980e1eb8bfa1f5e96f45636b9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f789502d1e45282980e1eb8bfa1f5e96f45636b9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e63c00f100e960f7b72997026b4b2cd3cd29774b", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e63c00f100e960f7b72997026b4b2cd3cd29774b", "html_url": "https://github.com/rust-lang/rust/commit/e63c00f100e960f7b72997026b4b2cd3cd29774b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e63c00f100e960f7b72997026b4b2cd3cd29774b/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f98d057218ca30d052da2a119fa0b3108ba3a091", "url": "https://api.github.com/repos/rust-lang/rust/commits/f98d057218ca30d052da2a119fa0b3108ba3a091", "html_url": "https://github.com/rust-lang/rust/commit/f98d057218ca30d052da2a119fa0b3108ba3a091"}], "stats": {"total": 45, "additions": 12, "deletions": 33}, "files": [{"sha": "07e1b8aba33e6c20b0fa26b2486f31200b44d218", "filename": "crates/ra_db/src/lib.rs", "status": "modified", "additions": 2, "deletions": 7, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/e63c00f100e960f7b72997026b4b2cd3cd29774b/crates%2Fra_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e63c00f100e960f7b72997026b4b2cd3cd29774b/crates%2Fra_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_db%2Fsrc%2Flib.rs?ref=e63c00f100e960f7b72997026b4b2cd3cd29774b", "patch": "@@ -89,8 +89,7 @@ pub const DEFAULT_LRU_CAP: usize = 128;\n pub trait FileLoader {\n     /// Text of the file.\n     fn file_text(&self, file_id: FileId) -> Arc<String>;\n-    fn resolve_relative_path(&self, anchor: FileId, relative_path: &RelativePath)\n-        -> Option<FileId>;\n+    fn resolve_path(&self, anchor: FileId, relative_path: &RelativePath) -> Option<FileId>;\n     fn relevant_crates(&self, file_id: FileId) -> Arc<Vec<CrateId>>;\n \n     fn resolve_extern_path(\n@@ -155,11 +154,7 @@ impl<T: SourceDatabaseExt> FileLoader for FileLoaderDelegate<&'_ T> {\n     fn file_text(&self, file_id: FileId) -> Arc<String> {\n         SourceDatabaseExt::file_text(self.0, file_id)\n     }\n-    fn resolve_relative_path(\n-        &self,\n-        anchor: FileId,\n-        relative_path: &RelativePath,\n-    ) -> Option<FileId> {\n+    fn resolve_path(&self, anchor: FileId, relative_path: &RelativePath) -> Option<FileId> {\n         let path = {\n             let mut path = self.0.file_relative_path(anchor);\n             assert!(path.pop());"}, {"sha": "7af922c2157edf97b7491b0822b3959690eb30f6", "filename": "crates/ra_hir_def/src/nameres/mod_resolution.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e63c00f100e960f7b72997026b4b2cd3cd29774b/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e63c00f100e960f7b72997026b4b2cd3cd29774b/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Fnameres%2Fmod_resolution.rs?ref=e63c00f100e960f7b72997026b4b2cd3cd29774b", "patch": "@@ -61,7 +61,7 @@ impl ModDir {\n         };\n \n         for candidate in candidate_files.iter() {\n-            if let Some(file_id) = db.resolve_relative_path(file_id, candidate) {\n+            if let Some(file_id) = db.resolve_path(file_id, candidate) {\n                 let mut root_non_dir_owner = false;\n                 let mut mod_path = RelativePathBuf::new();\n                 if !(candidate.ends_with(\"mod.rs\") || attr_path.is_some()) {"}, {"sha": "d33b57c93ac1885564c9908c9f75154011d6cef9", "filename": "crates/ra_hir_def/src/test_db.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e63c00f100e960f7b72997026b4b2cd3cd29774b/crates%2Fra_hir_def%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e63c00f100e960f7b72997026b4b2cd3cd29774b/crates%2Fra_hir_def%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_def%2Fsrc%2Ftest_db.rs?ref=e63c00f100e960f7b72997026b4b2cd3cd29774b", "patch": "@@ -58,12 +58,8 @@ impl FileLoader for TestDB {\n     fn file_text(&self, file_id: FileId) -> Arc<String> {\n         FileLoaderDelegate(self).file_text(file_id)\n     }\n-    fn resolve_relative_path(\n-        &self,\n-        anchor: FileId,\n-        relative_path: &RelativePath,\n-    ) -> Option<FileId> {\n-        FileLoaderDelegate(self).resolve_relative_path(anchor, relative_path)\n+    fn resolve_path(&self, anchor: FileId, relative_path: &RelativePath) -> Option<FileId> {\n+        FileLoaderDelegate(self).resolve_path(anchor, relative_path)\n     }\n     fn relevant_crates(&self, file_id: FileId) -> Arc<Vec<CrateId>> {\n         FileLoaderDelegate(self).relevant_crates(file_id)"}, {"sha": "4374d9eda3310529e2a775bb6a4b2ae509b5e572", "filename": "crates/ra_hir_expand/src/builtin_macro.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e63c00f100e960f7b72997026b4b2cd3cd29774b/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e63c00f100e960f7b72997026b4b2cd3cd29774b/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fbuiltin_macro.rs?ref=e63c00f100e960f7b72997026b4b2cd3cd29774b", "patch": "@@ -297,7 +297,7 @@ fn relative_file(db: &dyn AstDatabase, call_id: MacroCallId, path: &str) -> Opti\n     let call_site = call_id.as_file().original_file(db);\n \n     // Handle trivial case\n-    if let Some(res) = db.resolve_relative_path(call_site, &RelativePath::new(&path)) {\n+    if let Some(res) = db.resolve_path(call_site, &RelativePath::new(&path)) {\n         // Prevent include itself\n         return if res == call_site { None } else { Some(res) };\n     }"}, {"sha": "60321fa0a3be0a0fd09deac724e991d1279f4873", "filename": "crates/ra_hir_expand/src/test_db.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e63c00f100e960f7b72997026b4b2cd3cd29774b/crates%2Fra_hir_expand%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e63c00f100e960f7b72997026b4b2cd3cd29774b/crates%2Fra_hir_expand%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Ftest_db.rs?ref=e63c00f100e960f7b72997026b4b2cd3cd29774b", "patch": "@@ -41,12 +41,8 @@ impl FileLoader for TestDB {\n     fn file_text(&self, file_id: FileId) -> Arc<String> {\n         FileLoaderDelegate(self).file_text(file_id)\n     }\n-    fn resolve_relative_path(\n-        &self,\n-        anchor: FileId,\n-        relative_path: &RelativePath,\n-    ) -> Option<FileId> {\n-        FileLoaderDelegate(self).resolve_relative_path(anchor, relative_path)\n+    fn resolve_path(&self, anchor: FileId, relative_path: &RelativePath) -> Option<FileId> {\n+        FileLoaderDelegate(self).resolve_path(anchor, relative_path)\n     }\n     fn relevant_crates(&self, file_id: FileId) -> Arc<Vec<CrateId>> {\n         FileLoaderDelegate(self).relevant_crates(file_id)"}, {"sha": "43927c99155d6d1537c0ffd5398cf0c70ecd326b", "filename": "crates/ra_hir_ty/src/test_db.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e63c00f100e960f7b72997026b4b2cd3cd29774b/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e63c00f100e960f7b72997026b4b2cd3cd29774b/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Ftest_db.rs?ref=e63c00f100e960f7b72997026b4b2cd3cd29774b", "patch": "@@ -72,12 +72,8 @@ impl FileLoader for TestDB {\n     fn file_text(&self, file_id: FileId) -> Arc<String> {\n         FileLoaderDelegate(self).file_text(file_id)\n     }\n-    fn resolve_relative_path(\n-        &self,\n-        anchor: FileId,\n-        relative_path: &RelativePath,\n-    ) -> Option<FileId> {\n-        FileLoaderDelegate(self).resolve_relative_path(anchor, relative_path)\n+    fn resolve_path(&self, anchor: FileId, relative_path: &RelativePath) -> Option<FileId> {\n+        FileLoaderDelegate(self).resolve_path(anchor, relative_path)\n     }\n     fn relevant_crates(&self, file_id: FileId) -> Arc<Vec<CrateId>> {\n         FileLoaderDelegate(self).relevant_crates(file_id)"}, {"sha": "72793d63d3f9af18d3972605a87cdb954842cbc4", "filename": "crates/ra_ide_db/src/lib.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/e63c00f100e960f7b72997026b4b2cd3cd29774b/crates%2Fra_ide_db%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e63c00f100e960f7b72997026b4b2cd3cd29774b/crates%2Fra_ide_db%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_db%2Fsrc%2Flib.rs?ref=e63c00f100e960f7b72997026b4b2cd3cd29774b", "patch": "@@ -57,12 +57,8 @@ impl FileLoader for RootDatabase {\n     fn file_text(&self, file_id: FileId) -> Arc<String> {\n         FileLoaderDelegate(self).file_text(file_id)\n     }\n-    fn resolve_relative_path(\n-        &self,\n-        anchor: FileId,\n-        relative_path: &RelativePath,\n-    ) -> Option<FileId> {\n-        FileLoaderDelegate(self).resolve_relative_path(anchor, relative_path)\n+    fn resolve_path(&self, anchor: FileId, relative_path: &RelativePath) -> Option<FileId> {\n+        FileLoaderDelegate(self).resolve_path(anchor, relative_path)\n     }\n     fn relevant_crates(&self, file_id: FileId) -> Arc<Vec<CrateId>> {\n         FileLoaderDelegate(self).relevant_crates(file_id)"}]}