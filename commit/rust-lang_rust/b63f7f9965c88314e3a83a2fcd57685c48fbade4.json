{"sha": "b63f7f9965c88314e3a83a2fcd57685c48fbade4", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2M2Y3Zjk5NjVjODgzMTRlM2E4M2EyZmNkNTc2ODVjNDhmYmFkZTQ=", "commit": {"author": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-05-24T21:29:44Z"}, "committer": {"name": "Scott McMurray", "email": "scottmcm@users.noreply.github.com", "date": "2021-05-24T21:29:44Z"}, "message": "Demote ControlFlow::{from|into}_try to pub(crate)", "tree": {"sha": "ef8bc57ffe1907a81410a1a11504ddd9cbe9bdc9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef8bc57ffe1907a81410a1a11504ddd9cbe9bdc9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b63f7f9965c88314e3a83a2fcd57685c48fbade4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b63f7f9965c88314e3a83a2fcd57685c48fbade4", "html_url": "https://github.com/rust-lang/rust/commit/b63f7f9965c88314e3a83a2fcd57685c48fbade4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b63f7f9965c88314e3a83a2fcd57685c48fbade4/comments", "author": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "committer": {"login": "scottmcm", "id": 18526288, "node_id": "MDQ6VXNlcjE4NTI2Mjg4", "avatar_url": "https://avatars.githubusercontent.com/u/18526288?v=4", "gravatar_id": "", "url": "https://api.github.com/users/scottmcm", "html_url": "https://github.com/scottmcm", "followers_url": "https://api.github.com/users/scottmcm/followers", "following_url": "https://api.github.com/users/scottmcm/following{/other_user}", "gists_url": "https://api.github.com/users/scottmcm/gists{/gist_id}", "starred_url": "https://api.github.com/users/scottmcm/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/scottmcm/subscriptions", "organizations_url": "https://api.github.com/users/scottmcm/orgs", "repos_url": "https://api.github.com/users/scottmcm/repos", "events_url": "https://api.github.com/users/scottmcm/events{/privacy}", "received_events_url": "https://api.github.com/users/scottmcm/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3bcaeb0bf9e1c29d18abc32928fd2f23d1bed0bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/3bcaeb0bf9e1c29d18abc32928fd2f23d1bed0bd", "html_url": "https://github.com/rust-lang/rust/commit/3bcaeb0bf9e1c29d18abc32928fd2f23d1bed0bd"}], "stats": {"total": 15, "additions": 7, "deletions": 8}, "files": [{"sha": "419675cf641c3c4490be72707bfebf9ed0fe7a1f", "filename": "library/core/src/ops/control_flow.rs", "status": "modified", "additions": 7, "deletions": 8, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/b63f7f9965c88314e3a83a2fcd57685c48fbade4/library%2Fcore%2Fsrc%2Fops%2Fcontrol_flow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b63f7f9965c88314e3a83a2fcd57685c48fbade4/library%2Fcore%2Fsrc%2Fops%2Fcontrol_flow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fops%2Fcontrol_flow.rs?ref=b63f7f9965c88314e3a83a2fcd57685c48fbade4", "patch": "@@ -186,42 +186,41 @@ impl<B, C> ControlFlow<B, C> {\n #[cfg(bootstrap)]\n impl<R: ops::TryV1> ControlFlow<R, R::Output> {\n     /// Create a `ControlFlow` from any type implementing `Try`.\n-    #[unstable(feature = \"control_flow_enum\", reason = \"new API\", issue = \"75744\")]\n     #[inline]\n-    pub fn from_try(r: R) -> Self {\n+    pub(crate) fn from_try(r: R) -> Self {\n         match R::into_result(r) {\n             Ok(v) => ControlFlow::Continue(v),\n             Err(v) => ControlFlow::Break(R::from_error(v)),\n         }\n     }\n \n     /// Convert a `ControlFlow` into any type implementing `Try`;\n-    #[unstable(feature = \"control_flow_enum\", reason = \"new API\", issue = \"75744\")]\n     #[inline]\n-    pub fn into_try(self) -> R {\n+    pub(crate) fn into_try(self) -> R {\n         match self {\n             ControlFlow::Continue(v) => R::from_ok(v),\n             ControlFlow::Break(v) => v,\n         }\n     }\n }\n \n+/// These are used only as part of implementing the iterator adapters.\n+/// They have mediocre names and non-obvious semantics, so aren't\n+/// currently on a path to potential stabilization.\n #[cfg(not(bootstrap))]\n impl<R: ops::TryV2> ControlFlow<R, R::Output> {\n     /// Create a `ControlFlow` from any type implementing `Try`.\n-    #[unstable(feature = \"control_flow_enum\", reason = \"new API\", issue = \"75744\")]\n     #[inline]\n-    pub fn from_try(r: R) -> Self {\n+    pub(crate) fn from_try(r: R) -> Self {\n         match R::branch(r) {\n             ControlFlow::Continue(v) => ControlFlow::Continue(v),\n             ControlFlow::Break(v) => ControlFlow::Break(R::from_residual(v)),\n         }\n     }\n \n     /// Convert a `ControlFlow` into any type implementing `Try`;\n-    #[unstable(feature = \"control_flow_enum\", reason = \"new API\", issue = \"75744\")]\n     #[inline]\n-    pub fn into_try(self) -> R {\n+    pub(crate) fn into_try(self) -> R {\n         match self {\n             ControlFlow::Continue(v) => R::from_output(v),\n             ControlFlow::Break(v) => v,"}]}