{"sha": "8c8305843bd9f80acc871a41ea6e04f5e1760526", "node_id": "C_kwDOAAsO6NoAKDhjODMwNTg0M2JkOWY4MGFjYzg3MWE0MWVhNmUwNGY1ZTE3NjA1MjY", "commit": {"author": {"name": "Matthias Kr\u00fcger", "email": "matthias.krueger@famsik.de", "date": "2023-03-25T02:37:11Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2023-03-25T02:37:11Z"}, "message": "Rollup merge of #109542 - notriddle:notriddle/storage-js, r=GuillaumeGomez\n\nrustdoc: clean up `storage.js`", "tree": {"sha": "003f0f5829964e58a7e7f046a6aaba6f7b957aa7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/003f0f5829964e58a7e7f046a6aaba6f7b957aa7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8c8305843bd9f80acc871a41ea6e04f5e1760526", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJkHl5XCRBK7hj4Ov3rIwAAsccIAKN++TFRl8DA6bpnHEVjgLP+\nF7LjzCEVCQdbZDCicll+pIiMAs1ffcyoDr365Z6i981MJMSLjb4TgwkT9Wbpy5F7\nH7ak8jPGT4A7HlFNSa9drRKS5ZWkouMTDkP0ztvBCQhQrDJUp6zqehR3L8w/Vkqs\n03ciYOpoi8atBXZc6q4j0WP8fcfKXLd6GrR06YEub6cZjcmNRIcoghrtf8ZRCuo2\nyyMQm1Fo2V4YF6LXCjfsKoT4f8B8shgYxIQSgSIWZA862WNEvn1HLiT3wzCFzC1z\nwpYpjabFPJtzd3Om8WrBAXdoKxKOV2cukePg2w4MZaoK+GdkNgPl4emZhoThyEc=\n=KKxZ\n-----END PGP SIGNATURE-----\n", "payload": "tree 003f0f5829964e58a7e7f046a6aaba6f7b957aa7\nparent 15ea2276ff451a37dcbeb43c9943934ee80332e3\nparent 95ef91c573c7c49d620688e81ffe1c97fd22501c\nauthor Matthias Kr\u00fcger <matthias.krueger@famsik.de> 1679711831 +0100\ncommitter GitHub <noreply@github.com> 1679711831 +0100\n\nRollup merge of #109542 - notriddle:notriddle/storage-js, r=GuillaumeGomez\n\nrustdoc: clean up `storage.js`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8c8305843bd9f80acc871a41ea6e04f5e1760526", "html_url": "https://github.com/rust-lang/rust/commit/8c8305843bd9f80acc871a41ea6e04f5e1760526", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8c8305843bd9f80acc871a41ea6e04f5e1760526/comments", "author": {"login": "matthiaskrgr", "id": 476013, "node_id": "MDQ6VXNlcjQ3NjAxMw==", "avatar_url": "https://avatars.githubusercontent.com/u/476013?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matthiaskrgr", "html_url": "https://github.com/matthiaskrgr", "followers_url": "https://api.github.com/users/matthiaskrgr/followers", "following_url": "https://api.github.com/users/matthiaskrgr/following{/other_user}", "gists_url": "https://api.github.com/users/matthiaskrgr/gists{/gist_id}", "starred_url": "https://api.github.com/users/matthiaskrgr/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matthiaskrgr/subscriptions", "organizations_url": "https://api.github.com/users/matthiaskrgr/orgs", "repos_url": "https://api.github.com/users/matthiaskrgr/repos", "events_url": "https://api.github.com/users/matthiaskrgr/events{/privacy}", "received_events_url": "https://api.github.com/users/matthiaskrgr/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "15ea2276ff451a37dcbeb43c9943934ee80332e3", "url": "https://api.github.com/repos/rust-lang/rust/commits/15ea2276ff451a37dcbeb43c9943934ee80332e3", "html_url": "https://github.com/rust-lang/rust/commit/15ea2276ff451a37dcbeb43c9943934ee80332e3"}, {"sha": "95ef91c573c7c49d620688e81ffe1c97fd22501c", "url": "https://api.github.com/repos/rust-lang/rust/commits/95ef91c573c7c49d620688e81ffe1c97fd22501c", "html_url": "https://github.com/rust-lang/rust/commit/95ef91c573c7c49d620688e81ffe1c97fd22501c"}], "stats": {"total": 96, "additions": 19, "deletions": 77}, "files": [{"sha": "933a44c5aa78d77f46dcef4def1f7827eb2fcdae", "filename": "src/librustdoc/html/static/css/rustdoc.css", "status": "modified", "additions": 1, "deletions": 16, "changes": 17, "blob_url": "https://github.com/rust-lang/rust/blob/8c8305843bd9f80acc871a41ea6e04f5e1760526/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "raw_url": "https://github.com/rust-lang/rust/raw/8c8305843bd9f80acc871a41ea6e04f5e1760526/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fcss%2Frustdoc.css?ref=8c8305843bd9f80acc871a41ea6e04f5e1760526", "patch": "@@ -87,21 +87,6 @@\n \tbox-sizing: border-box;\n }\n \n-/* This part handles the \"default\" theme being used depending on the system one. */\n-html {\n-\tcontent: \"\";\n-}\n-@media (prefers-color-scheme: light) {\n-\thtml {\n-\t\tcontent: \"light\";\n-\t}\n-}\n-@media (prefers-color-scheme: dark) {\n-\thtml {\n-\t\tcontent: \"dark\";\n-\t}\n-}\n-\n /* General structure and fonts */\n \n body {\n@@ -1538,7 +1523,7 @@ However, it's not needed with smaller screen width because the doc/code block is\n /*\n WARNING: RUSTDOC_MOBILE_BREAKPOINT MEDIA QUERY\n If you update this line, then you also need to update the line with the same warning\n-in storage.js\n+in main.js\n */\n @media (max-width: 700px) {\n \t/* When linking to an item with an `id` (for instance, by clicking a link in the sidebar,"}, {"sha": "1487ebf9b0aa1a4c01f19ebc3f8f1b28e9afe9d4", "filename": "src/librustdoc/html/static/js/main.js", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/8c8305843bd9f80acc871a41ea6e04f5e1760526/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "raw_url": "https://github.com/rust-lang/rust/raw/8c8305843bd9f80acc871a41ea6e04f5e1760526/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fmain.js?ref=8c8305843bd9f80acc871a41ea6e04f5e1760526", "patch": "@@ -4,6 +4,11 @@\n \n \"use strict\";\n \n+// WARNING: RUSTDOC_MOBILE_BREAKPOINT MEDIA QUERY\n+// If you update this line, then you also need to update the media query with the same\n+// warning in rustdoc.css\n+window.RUSTDOC_MOBILE_BREAKPOINT = 700;\n+\n // Given a basename (e.g. \"storage\") and an extension (e.g. \".js\"), return a URL\n // for a resource under the root-path, with the resource-suffix.\n function resourcePath(basename, extension) {"}, {"sha": "8d82b5b78edbbee8dc5ee57e39fbe674e718b2ee", "filename": "src/librustdoc/html/static/js/storage.js", "status": "modified", "additions": 13, "deletions": 61, "changes": 74, "blob_url": "https://github.com/rust-lang/rust/blob/8c8305843bd9f80acc871a41ea6e04f5e1760526/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "raw_url": "https://github.com/rust-lang/rust/raw/8c8305843bd9f80acc871a41ea6e04f5e1760526/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fstatic%2Fjs%2Fstorage.js?ref=8c8305843bd9f80acc871a41ea6e04f5e1760526", "patch": "@@ -8,37 +8,22 @@\n const darkThemes = [\"dark\", \"ayu\"];\n window.currentTheme = document.getElementById(\"themeStyle\");\n \n-// WARNING: RUSTDOC_MOBILE_BREAKPOINT MEDIA QUERY\n-// If you update this line, then you also need to update the media query with the same\n-// warning in rustdoc.css\n-window.RUSTDOC_MOBILE_BREAKPOINT = 700;\n-\n const settingsDataset = (function() {\n     const settingsElement = document.getElementById(\"default-settings\");\n-    if (settingsElement === null) {\n-        return null;\n-    }\n-    const dataset = settingsElement.dataset;\n-    if (dataset === undefined) {\n-        return null;\n-    }\n-    return dataset;\n+    return settingsElement && settingsElement.dataset ? settingsElement.dataset : null;\n })();\n \n function getSettingValue(settingName) {\n     const current = getCurrentValue(settingName);\n-    if (current !== null) {\n-        return current;\n-    }\n-    if (settingsDataset !== null) {\n+    if (current === null && settingsDataset !== null) {\n         // See the comment for `default_settings.into_iter()` etc. in\n         // `Options::from_matches` in `librustdoc/config.rs`.\n         const def = settingsDataset[settingName.replace(/-/g,\"_\")];\n         if (def !== undefined) {\n             return def;\n         }\n     }\n-    return null;\n+    return current;\n }\n \n const localStoredTheme = getSettingValue(\"theme\");\n@@ -49,18 +34,16 @@ function hasClass(elem, className) {\n }\n \n function addClass(elem, className) {\n-    if (!elem || !elem.classList) {\n-        return;\n+    if (elem && elem.classList) {\n+        elem.classList.add(className);\n     }\n-    elem.classList.add(className);\n }\n \n // eslint-disable-next-line no-unused-vars\n function removeClass(elem, className) {\n-    if (!elem || !elem.classList) {\n-        return;\n+    if (elem && elem.classList) {\n+        elem.classList.remove(className);\n     }\n-    elem.classList.remove(className);\n }\n \n /**\n@@ -127,11 +110,7 @@ function getCurrentValue(name) {\n // Rust to the JS. If there is no such element, return null.\n const getVar = (function getVar(name) {\n     const el = document.getElementById(\"rustdoc-vars\");\n-    if (el) {\n-        return el.attributes[\"data-\" + name].value;\n-    } else {\n-        return null;\n-    }\n+    return el ? el.attributes[\"data-\" + name].value : null;\n });\n \n function switchTheme(newThemeName, saveTheme) {\n@@ -158,6 +137,9 @@ function switchTheme(newThemeName, saveTheme) {\n }\n \n const updateTheme = (function() {\n+    // only listen to (prefers-color-scheme: dark) because light is the default\n+    const mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n+\n     /**\n      * Update the current theme to match whatever the current combination of\n      * * the preference for using the system theme\n@@ -177,7 +159,7 @@ const updateTheme = (function() {\n             const lightTheme = getSettingValue(\"preferred-light-theme\") || \"light\";\n             const darkTheme = getSettingValue(\"preferred-dark-theme\") || \"dark\";\n \n-            if (isDarkMode()) {\n+            if (mql.matches) {\n                 use(darkTheme, true);\n             } else {\n                 // prefers a light theme, or has no preference\n@@ -191,37 +173,7 @@ const updateTheme = (function() {\n         }\n     }\n \n-    // This is always updated below to a function () => bool.\n-    let isDarkMode;\n-\n-    // Determine the function for isDarkMode, and if we have\n-    // `window.matchMedia`, set up an event listener on the preferred color\n-    // scheme.\n-    //\n-    // Otherwise, fall back to the prefers-color-scheme value CSS captured in\n-    // the \"content\" property.\n-    if (window.matchMedia) {\n-        // only listen to (prefers-color-scheme: dark) because light is the default\n-        const mql = window.matchMedia(\"(prefers-color-scheme: dark)\");\n-\n-        isDarkMode = () => mql.matches;\n-\n-        if (mql.addEventListener) {\n-            mql.addEventListener(\"change\", updateTheme);\n-        } else {\n-            // This is deprecated, see:\n-            // https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/addListener\n-            mql.addListener(updateTheme);\n-        }\n-    } else {\n-        // fallback to the CSS computed value\n-        const cssContent = getComputedStyle(document.documentElement)\n-            .getPropertyValue(\"content\");\n-        // (Note: the double-quotes come from that this is a CSS value, which\n-        // might be a length, string, etc.)\n-        const cssColorScheme = cssContent || \"\\\"light\\\"\";\n-        isDarkMode = () => (cssColorScheme === \"\\\"dark\\\"\");\n-    }\n+    mql.addEventListener(\"change\", updateTheme);\n \n     return updateTheme;\n })();"}]}