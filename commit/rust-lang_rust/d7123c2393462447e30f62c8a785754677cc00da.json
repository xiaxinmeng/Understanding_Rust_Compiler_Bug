{"sha": "d7123c2393462447e30f62c8a785754677cc00da", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQ3MTIzYzIzOTM0NjI0NDdlMzBmNjJjOGE3ODU3NTQ2NzdjYzAwZGE=", "commit": {"author": {"name": "Yuki Okushi", "email": "huyuumi.dev@gmail.com", "date": "2020-10-06T07:26:00Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-10-06T07:26:00Z"}, "message": "Rollup merge of #77228 - GuillaumeGomez:maybeuninit-examples, r=pickfire\n\nAdd missing examples for MaybeUninit\n\nr? @Dylan-DPC", "tree": {"sha": "58694d203fbd57f20aadba51dd1764cb9c799d18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/58694d203fbd57f20aadba51dd1764cb9c799d18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d7123c2393462447e30f62c8a785754677cc00da", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJffBwICRBK7hj4Ov3rIwAAdHIIAHK+P3aTrKMFw1iaILgmX/g2\nsMvLvLIdsjOz2V8ckB8PQcaQ3+KoXhtNb+v/Uqw5cRjL6w2LQC94qxufTCFRNWWO\npGqXCaYehBBn2JsPbFscO/Zqt0cvN1PSaZGs2z4lAZ1GVRlbas1fAniLcOLNyFGk\nQzF/WXd4Rb751uGtXkieTlqEFfWa5wWGbJDaVyegcw24ASV0jjBZ6DLAkxtrGlWo\noLz+F704ugN0+r6+SOc/QtDQODQf6amTwAraplKBbSMhx+ZKKXmCxDIZeLZvkljF\nFhNKmAFPT2J+nveY0HfpA0MsxBwpdrniUI6Bg13x73ZgYkbKTwHC7toYj7f5FQQ=\n=tsdu\n-----END PGP SIGNATURE-----\n", "payload": "tree 58694d203fbd57f20aadba51dd1764cb9c799d18\nparent d50349ba8d2baaa023eadacf7207516c83225f1f\nparent b1ce6190ae4cb412c21207932924889e7201d4df\nauthor Yuki Okushi <huyuumi.dev@gmail.com> 1601969160 +0900\ncommitter GitHub <noreply@github.com> 1601969160 +0900\n\nRollup merge of #77228 - GuillaumeGomez:maybeuninit-examples, r=pickfire\n\nAdd missing examples for MaybeUninit\n\nr? @Dylan-DPC\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d7123c2393462447e30f62c8a785754677cc00da", "html_url": "https://github.com/rust-lang/rust/commit/d7123c2393462447e30f62c8a785754677cc00da", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d7123c2393462447e30f62c8a785754677cc00da/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d50349ba8d2baaa023eadacf7207516c83225f1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d50349ba8d2baaa023eadacf7207516c83225f1f", "html_url": "https://github.com/rust-lang/rust/commit/d50349ba8d2baaa023eadacf7207516c83225f1f"}, {"sha": "b1ce6190ae4cb412c21207932924889e7201d4df", "url": "https://api.github.com/repos/rust-lang/rust/commits/b1ce6190ae4cb412c21207932924889e7201d4df", "html_url": "https://github.com/rust-lang/rust/commit/b1ce6190ae4cb412c21207932924889e7201d4df"}], "stats": {"total": 18, "additions": 16, "deletions": 2}, "files": [{"sha": "862c452a4348082098dab16edbcdfc245d6124d7", "filename": "library/core/src/mem/maybe_uninit.rs", "status": "modified", "additions": 16, "deletions": 2, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/d7123c2393462447e30f62c8a785754677cc00da/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d7123c2393462447e30f62c8a785754677cc00da/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fmem%2Fmaybe_uninit.rs?ref=d7123c2393462447e30f62c8a785754677cc00da", "patch": "@@ -246,6 +246,14 @@ impl<T> MaybeUninit<T> {\n     /// Note that dropping a `MaybeUninit<T>` will never call `T`'s drop code.\n     /// It is your responsibility to make sure `T` gets dropped if it got initialized.\n     ///\n+    /// # Example\n+    ///\n+    /// ```\n+    /// use std::mem::MaybeUninit;\n+    ///\n+    /// let v: MaybeUninit<Vec<u8>> = MaybeUninit::new(vec![42]);\n+    /// ```\n+    ///\n     /// [`assume_init`]: MaybeUninit::assume_init\n     #[stable(feature = \"maybe_uninit\", since = \"1.36.0\")]\n     #[rustc_const_stable(feature = \"const_maybe_uninit\", since = \"1.36.0\")]\n@@ -259,9 +267,15 @@ impl<T> MaybeUninit<T> {\n     /// Note that dropping a `MaybeUninit<T>` will never call `T`'s drop code.\n     /// It is your responsibility to make sure `T` gets dropped if it got initialized.\n     ///\n-    /// See the [type-level documentation][type] for some examples.\n+    /// See the [type-level documentation][MaybeUninit] for some examples.\n     ///\n-    /// [type]: union.MaybeUninit.html\n+    /// # Example\n+    ///\n+    /// ```\n+    /// use std::mem::MaybeUninit;\n+    ///\n+    /// let v: MaybeUninit<String> = MaybeUninit::uninit();\n+    /// ```\n     #[stable(feature = \"maybe_uninit\", since = \"1.36.0\")]\n     #[rustc_const_stable(feature = \"const_maybe_uninit\", since = \"1.36.0\")]\n     #[inline(always)]"}]}