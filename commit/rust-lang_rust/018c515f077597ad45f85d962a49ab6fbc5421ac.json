{"sha": "018c515f077597ad45f85d962a49ab6fbc5421ac", "node_id": "MDY6Q29tbWl0NzI0NzEyOjAxOGM1MTVmMDc3NTk3YWQ0NWY4NWQ5NjJhNDlhYjZmYmM1NDIxYWM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-09-28T20:55:15Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2018-10-27T12:41:12Z"}, "message": "move `PlaceholderIndices` into `MirTypeckRegionConstraints` struct", "tree": {"sha": "8445b9bf80473f72aa7db6b1455ae321c8a4ab01", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8445b9bf80473f72aa7db6b1455ae321c8a4ab01"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/018c515f077597ad45f85d962a49ab6fbc5421ac", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/018c515f077597ad45f85d962a49ab6fbc5421ac", "html_url": "https://github.com/rust-lang/rust/commit/018c515f077597ad45f85d962a49ab6fbc5421ac", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/018c515f077597ad45f85d962a49ab6fbc5421ac/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "42c11de47b6b1da71537eb161b102177d798a08d", "url": "https://api.github.com/repos/rust-lang/rust/commits/42c11de47b6b1da71537eb161b102177d798a08d", "html_url": "https://github.com/rust-lang/rust/commit/42c11de47b6b1da71537eb161b102177d798a08d"}], "stats": {"total": 15, "additions": 6, "deletions": 9}, "files": [{"sha": "03cdb5f4cb8832fefc7e3e3c010389256be2a37f", "filename": "src/librustc_mir/borrow_check/nll/mod.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/018c515f077597ad45f85d962a49ab6fbc5421ac/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/018c515f077597ad45f85d962a49ab6fbc5421ac/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs?ref=018c515f077597ad45f85d962a49ab6fbc5421ac", "patch": "@@ -107,7 +107,6 @@ pub(in borrow_check) fn compute_regions<'cx, 'gcx, 'tcx>(\n     // Run the MIR type-checker.\n     let MirTypeckResults {\n         constraints,\n-        placeholder_indices,\n         universal_region_relations,\n     } = type_check::type_check(\n         infcx,\n@@ -123,8 +122,6 @@ pub(in borrow_check) fn compute_regions<'cx, 'gcx, 'tcx>(\n         elements,\n     );\n \n-    let placeholder_indices = Rc::new(placeholder_indices);\n-\n     if let Some(all_facts) = &mut all_facts {\n         all_facts\n             .universal_region\n@@ -136,11 +133,13 @@ pub(in borrow_check) fn compute_regions<'cx, 'gcx, 'tcx>(\n     // base constraints generated by the type-check.\n     let var_origins = infcx.take_region_var_origins();\n     let MirTypeckRegionConstraints {\n+        placeholder_indices,\n         mut liveness_constraints,\n         outlives_constraints,\n         closure_bounds_mapping,\n         type_tests,\n     } = constraints;\n+    let placeholder_indices = Rc::new(placeholder_indices);\n \n     constraint_generation::generate_constraints(\n         infcx,"}, {"sha": "bcf73c5c644a1f8825b64d2e7bf4d8b40ad143bf", "filename": "src/librustc_mir/borrow_check/nll/type_check/mod.rs", "status": "modified", "additions": 3, "deletions": 5, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/018c515f077597ad45f85d962a49ab6fbc5421ac/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/018c515f077597ad45f85d962a49ab6fbc5421ac/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Fmod.rs?ref=018c515f077597ad45f85d962a49ab6fbc5421ac", "patch": "@@ -126,12 +126,12 @@ pub(crate) fn type_check<'gcx, 'tcx>(\n ) -> MirTypeckResults<'tcx> {\n     let implicit_region_bound = infcx.tcx.mk_region(ty::ReVar(universal_regions.fr_fn_body));\n     let mut constraints = MirTypeckRegionConstraints {\n+        placeholder_indices: PlaceholderIndices::default(),\n         liveness_constraints: LivenessValues::new(elements),\n         outlives_constraints: ConstraintSet::default(),\n         closure_bounds_mapping: Default::default(),\n         type_tests: Vec::default(),\n     };\n-    let mut placeholder_indices = PlaceholderIndices::default();\n \n     let CreateResult {\n         universal_region_relations,\n@@ -151,7 +151,6 @@ pub(crate) fn type_check<'gcx, 'tcx>(\n         borrow_set,\n         all_facts,\n         constraints: &mut constraints,\n-        placeholder_indices: &mut placeholder_indices,\n     };\n \n     type_check_internal(\n@@ -175,7 +174,6 @@ pub(crate) fn type_check<'gcx, 'tcx>(\n \n     MirTypeckResults {\n         constraints,\n-        placeholder_indices,\n         universal_region_relations,\n     }\n }\n@@ -730,18 +728,18 @@ struct BorrowCheckContext<'a, 'tcx: 'a> {\n     all_facts: &'a mut Option<AllFacts>,\n     borrow_set: &'a BorrowSet<'tcx>,\n     constraints: &'a mut MirTypeckRegionConstraints<'tcx>,\n-    placeholder_indices: &'a mut PlaceholderIndices,\n }\n \n crate struct MirTypeckResults<'tcx> {\n     crate constraints: MirTypeckRegionConstraints<'tcx>,\n-    crate placeholder_indices: PlaceholderIndices,\n     crate universal_region_relations: Rc<UniversalRegionRelations<'tcx>>,\n }\n \n /// A collection of region constraints that must be satisfied for the\n /// program to be considered well-typed.\n crate struct MirTypeckRegionConstraints<'tcx> {\n+    crate placeholder_indices: PlaceholderIndices,\n+\n     /// In general, the type-checker is not responsible for enforcing\n     /// liveness constraints; this job falls to the region inferencer,\n     /// which performs a liveness analysis. However, in some limited"}, {"sha": "5c699b5295dbead48046fb7ffc074b00fc4d80d3", "filename": "src/librustc_mir/borrow_check/nll/type_check/relate_tys.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/018c515f077597ad45f85d962a49ab6fbc5421ac/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Frelate_tys.rs", "raw_url": "https://github.com/rust-lang/rust/raw/018c515f077597ad45f85d962a49ab6fbc5421ac/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Frelate_tys.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Ftype_check%2Frelate_tys.rs?ref=018c515f077597ad45f85d962a49ab6fbc5421ac", "patch": "@@ -83,7 +83,7 @@ impl TypeRelatingDelegate<'tcx> for NllTypeRelatingDelegate<'_, '_, '_, 'tcx> {\n     fn next_placeholder_region(&mut self, placeholder: ty::Placeholder) -> ty::Region<'tcx> {\n         let origin = NLLRegionVariableOrigin::Placeholder(placeholder);\n         if let Some(borrowck_context) = &mut self.borrowck_context {\n-            borrowck_context.placeholder_indices.insert(placeholder);\n+            borrowck_context.constraints.placeholder_indices.insert(placeholder);\n         }\n         self.infcx.next_nll_region_var(origin)\n     }"}]}