{"sha": "d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6", "node_id": "MDY6Q29tbWl0NzI0NzEyOmQyMmFlNzVjOWQ2YWViNGJiNzliNTFlN2M2ZmMzZDgyNGM3MzZhYzY=", "commit": {"author": {"name": "Cameron Hart", "email": "cameron.hart@gmail.com", "date": "2018-10-30T15:54:56Z"}, "committer": {"name": "Cameron Hart", "email": "cameron.hart@gmail.com", "date": "2018-10-30T16:28:06Z"}, "message": "Fix feature gate only being checked on first repr attr.", "tree": {"sha": "1cfcd33225cd0497501ae882340ecee43d62a6e5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1cfcd33225cd0497501ae882340ecee43d62a6e5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6", "html_url": "https://github.com/rust-lang/rust/commit/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6/comments", "author": {"login": "bitshifter", "id": 135700, "node_id": "MDQ6VXNlcjEzNTcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/135700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitshifter", "html_url": "https://github.com/bitshifter", "followers_url": "https://api.github.com/users/bitshifter/followers", "following_url": "https://api.github.com/users/bitshifter/following{/other_user}", "gists_url": "https://api.github.com/users/bitshifter/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitshifter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitshifter/subscriptions", "organizations_url": "https://api.github.com/users/bitshifter/orgs", "repos_url": "https://api.github.com/users/bitshifter/repos", "events_url": "https://api.github.com/users/bitshifter/events{/privacy}", "received_events_url": "https://api.github.com/users/bitshifter/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bitshifter", "id": 135700, "node_id": "MDQ6VXNlcjEzNTcwMA==", "avatar_url": "https://avatars.githubusercontent.com/u/135700?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bitshifter", "html_url": "https://github.com/bitshifter", "followers_url": "https://api.github.com/users/bitshifter/followers", "following_url": "https://api.github.com/users/bitshifter/following{/other_user}", "gists_url": "https://api.github.com/users/bitshifter/gists{/gist_id}", "starred_url": "https://api.github.com/users/bitshifter/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bitshifter/subscriptions", "organizations_url": "https://api.github.com/users/bitshifter/orgs", "repos_url": "https://api.github.com/users/bitshifter/repos", "events_url": "https://api.github.com/users/bitshifter/events{/privacy}", "received_events_url": "https://api.github.com/users/bitshifter/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e8aef7cae14bc7a56859408c90253e9bcc07fcff", "url": "https://api.github.com/repos/rust-lang/rust/commits/e8aef7cae14bc7a56859408c90253e9bcc07fcff", "html_url": "https://github.com/rust-lang/rust/commit/e8aef7cae14bc7a56859408c90253e9bcc07fcff"}], "stats": {"total": 35, "additions": 32, "deletions": 3}, "files": [{"sha": "6487665947729e21f277a768503a8cb8cbeb9d40", "filename": "src/libsyntax/attr/mod.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6/src%2Flibsyntax%2Fattr%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6/src%2Flibsyntax%2Fattr%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fattr%2Fmod.rs?ref=d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6", "patch": "@@ -455,6 +455,11 @@ pub fn find_by_name<'a>(attrs: &'a [Attribute], name: &str) -> Option<&'a Attrib\n     attrs.iter().find(|attr| attr.check_name(name))\n }\n \n+pub fn filter_by_name<'a>(attrs: &'a [Attribute], name: &'a str)\n+    -> impl Iterator<Item = &'a Attribute> {\n+    attrs.iter().filter(move |attr| attr.check_name(name))\n+}\n+\n pub fn first_attr_value_str_by_name(attrs: &[Attribute], name: &str) -> Option<Symbol> {\n     attrs.iter()\n         .find(|at| at.check_name(name))"}, {"sha": "d4dc1f8b50851d30ce7a2e2c0d5fe61861016188", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6", "patch": "@@ -1625,7 +1625,7 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n             }\n \n             ast::ItemKind::Struct(..) => {\n-                if let Some(attr) = attr::find_by_name(&i.attrs[..], \"repr\") {\n+                for attr in attr::filter_by_name(&i.attrs[..], \"repr\") {\n                     for item in attr.meta_item_list().unwrap_or_else(Vec::new) {\n                         if item.check_name(\"simd\") {\n                             gate_feature_post!(&self, repr_simd, attr.span,"}, {"sha": "a70f2758abb5972bccadefc877be6432b6a5a540", "filename": "src/test/ui/feature-gates/feature-gate-repr-simd.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr-simd.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr-simd.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr-simd.rs?ref=d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6", "patch": "@@ -11,4 +11,8 @@\n #[repr(simd)] //~ error: SIMD types are experimental\n struct Foo(u64, u64);\n \n+#[repr(C)]\n+#[repr(simd)] //~ error: SIMD types are experimental\n+struct Bar(u64, u64);\n+\n fn main() {}"}, {"sha": "2f98bd24d4f7994644f74d2f7b10767dfd1fb2cb", "filename": "src/test/ui/feature-gates/feature-gate-repr-simd.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr-simd.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr-simd.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr-simd.stderr?ref=d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6", "patch": "@@ -6,6 +6,14 @@ LL | #[repr(simd)] //~ error: SIMD types are experimental\n    |\n    = help: add #![feature(repr_simd)] to the crate attributes to enable\n \n-error: aborting due to previous error\n+error[E0658]: SIMD types are experimental and possibly buggy (see issue #27731)\n+  --> $DIR/feature-gate-repr-simd.rs:15:1\n+   |\n+LL | #[repr(simd)] //~ error: SIMD types are experimental\n+   | ^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(repr_simd)] to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}, {"sha": "65e3be288fdf72447a0a038a32a819775c655158", "filename": "src/test/ui/feature-gates/feature-gate-repr_packed.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr_packed.rs", "raw_url": "https://github.com/rust-lang/rust/raw/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr_packed.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr_packed.rs?ref=d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6", "patch": "@@ -11,4 +11,8 @@\n #[repr(packed(1))] //~ error: the `#[repr(packed(n))]` attribute is experimental\n struct Foo(u64);\n \n+#[repr(C)]\n+#[repr(packed(1))] //~ error: the `#[repr(packed(n))]` attribute is experimental\n+struct Bar(u64);\n+\n fn main() {}"}, {"sha": "ed89a3f6b3169373f6290c0ecf2eda56ffee56f9", "filename": "src/test/ui/feature-gates/feature-gate-repr_packed.stderr", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr_packed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr_packed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffeature-gates%2Ffeature-gate-repr_packed.stderr?ref=d22ae75c9d6aeb4bb79b51e7c6fc3d824c736ac6", "patch": "@@ -6,6 +6,14 @@ LL | #[repr(packed(1))] //~ error: the `#[repr(packed(n))]` attribute is experim\n    |\n    = help: add #![feature(repr_packed)] to the crate attributes to enable\n \n-error: aborting due to previous error\n+error[E0658]: the `#[repr(packed(n))]` attribute is experimental (see issue #33158)\n+  --> $DIR/feature-gate-repr_packed.rs:15:1\n+   |\n+LL | #[repr(packed(1))] //~ error: the `#[repr(packed(n))]` attribute is experimental\n+   | ^^^^^^^^^^^^^^^^^^\n+   |\n+   = help: add #![feature(repr_packed)] to the crate attributes to enable\n+\n+error: aborting due to 2 previous errors\n \n For more information about this error, try `rustc --explain E0658`."}]}