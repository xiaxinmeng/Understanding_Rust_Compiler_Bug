{"sha": "8fd7d49c9552108025e6d79cefd3c27c3d5d6f5a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhmZDdkNDljOTU1MjEwODAyNWU2ZDc5Y2VmZDNjMjdjM2Q1ZDZmNWE=", "commit": {"author": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-02-15T09:52:26Z"}, "committer": {"name": "John K\u00e5re Alsaker", "email": "john.kare.alsaker@gmail.com", "date": "2018-03-27T23:27:59Z"}, "message": "Make HirMap thread-safe", "tree": {"sha": "be4d77506af3e0df92dfb28760e2eb97502ca453", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/be4d77506af3e0df92dfb28760e2eb97502ca453"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8fd7d49c9552108025e6d79cefd3c27c3d5d6f5a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8fd7d49c9552108025e6d79cefd3c27c3d5d6f5a", "html_url": "https://github.com/rust-lang/rust/commit/8fd7d49c9552108025e6d79cefd3c27c3d5d6f5a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8fd7d49c9552108025e6d79cefd3c27c3d5d6f5a/comments", "author": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Zoxc", "id": 25784, "node_id": "MDQ6VXNlcjI1Nzg0", "avatar_url": "https://avatars.githubusercontent.com/u/25784?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Zoxc", "html_url": "https://github.com/Zoxc", "followers_url": "https://api.github.com/users/Zoxc/followers", "following_url": "https://api.github.com/users/Zoxc/following{/other_user}", "gists_url": "https://api.github.com/users/Zoxc/gists{/gist_id}", "starred_url": "https://api.github.com/users/Zoxc/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Zoxc/subscriptions", "organizations_url": "https://api.github.com/users/Zoxc/orgs", "repos_url": "https://api.github.com/users/Zoxc/repos", "events_url": "https://api.github.com/users/Zoxc/events{/privacy}", "received_events_url": "https://api.github.com/users/Zoxc/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dc0fb52fcc2a9a1f44ab5921f09100826ba5d547", "url": "https://api.github.com/repos/rust-lang/rust/commits/dc0fb52fcc2a9a1f44ab5921f09100826ba5d547", "html_url": "https://github.com/rust-lang/rust/commit/dc0fb52fcc2a9a1f44ab5921f09100826ba5d547"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "1e348e3a31ce215225c4a269e5fa792e235b4439", "filename": "src/librustc/hir/map/mod.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/8fd7d49c9552108025e6d79cefd3c27c3d5d6f5a/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/8fd7d49c9552108025e6d79cefd3c27c3d5d6f5a/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmap%2Fmod.rs?ref=8fd7d49c9552108025e6d79cefd3c27c3d5d6f5a", "patch": "@@ -33,10 +33,11 @@ use hir::svh::Svh;\n use util::nodemap::{DefIdMap, FxHashMap};\n \n use arena::TypedArena;\n-use std::cell::RefCell;\n use std::io;\n use ty::TyCtxt;\n \n+use rustc_data_structures::sync::Lock;\n+\n pub mod blocks;\n mod collector;\n mod def_collector;\n@@ -264,7 +265,7 @@ pub struct Map<'hir> {\n     definitions: &'hir Definitions,\n \n     /// Bodies inlined from other crates are cached here.\n-    inlined_bodies: RefCell<DefIdMap<&'hir Body>>,\n+    inlined_bodies: Lock<DefIdMap<&'hir Body>>,\n \n     /// The reverse mapping of `node_to_hir_id`.\n     hir_to_node_id: FxHashMap<HirId, NodeId>,\n@@ -927,8 +928,13 @@ impl<'hir> Map<'hir> {\n     }\n \n     pub fn intern_inlined_body(&self, def_id: DefId, body: Body) -> &'hir Body {\n+        let mut inlined_bodies = self.inlined_bodies.borrow_mut();\n+        if let Some(&b) = inlined_bodies.get(&def_id) {\n+            debug_assert_eq!(&body, b);\n+            return b;\n+        }\n         let body = self.forest.inlined_bodies.alloc(body);\n-        self.inlined_bodies.borrow_mut().insert(def_id, body);\n+        inlined_bodies.insert(def_id, body);\n         body\n     }\n \n@@ -1189,7 +1195,7 @@ pub fn map_crate<'hir>(sess: &::session::Session,\n         map,\n         hir_to_node_id,\n         definitions,\n-        inlined_bodies: RefCell::new(DefIdMap()),\n+        inlined_bodies: Lock::new(DefIdMap()),\n     };\n \n     hir_id_validator::check_crate(&map);"}]}