{"sha": "59b161c7c84e48b9379fbed877a2fa5c13db0526", "node_id": "MDY6Q29tbWl0NzI0NzEyOjU5YjE2MWM3Yzg0ZTQ4YjkzNzlmYmVkODc3YTJmYTVjMTNkYjA1MjY=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-05T20:32:15Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-07-10T11:12:28Z"}, "message": "Stop Option-wrapping comments\n\nWe always check against the length before indexing anyway.", "tree": {"sha": "14e5578a6615211925dd7357a97223c905b52b1f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/14e5578a6615211925dd7357a97223c905b52b1f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/59b161c7c84e48b9379fbed877a2fa5c13db0526", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/59b161c7c84e48b9379fbed877a2fa5c13db0526", "html_url": "https://github.com/rust-lang/rust/commit/59b161c7c84e48b9379fbed877a2fa5c13db0526", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/59b161c7c84e48b9379fbed877a2fa5c13db0526/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a573d143a2b7ef9d04a8fe6904667762e47157bc", "url": "https://api.github.com/repos/rust-lang/rust/commits/a573d143a2b7ef9d04a8fe6904667762e47157bc", "html_url": "https://github.com/rust-lang/rust/commit/a573d143a2b7ef9d04a8fe6904667762e47157bc"}], "stats": {"total": 32, "additions": 14, "deletions": 18}, "files": [{"sha": "9acf6d895e3e622c3c8cd3d0600411ce98444f55", "filename": "src/librustc/hir/print.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/59b161c7c84e48b9379fbed877a2fa5c13db0526/src%2Flibrustc%2Fhir%2Fprint.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59b161c7c84e48b9379fbed877a2fa5c13db0526/src%2Flibrustc%2Fhir%2Fprint.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fprint.rs?ref=59b161c7c84e48b9379fbed877a2fa5c13db0526", "patch": "@@ -72,7 +72,7 @@ impl PpAnn for hir::Crate {\n pub struct State<'a> {\n     pub s: pp::Printer<'a>,\n     cm: Option<&'a SourceMap>,\n-    comments: Option<Vec<comments::Comment>>,\n+    comments: Vec<comments::Comment>,\n     cur_cmnt: usize,\n     ann: &'a (dyn PpAnn + 'a),\n }\n@@ -82,7 +82,7 @@ impl<'a> PrintState<'a> for State<'a> {\n         &mut self.s\n     }\n \n-    fn comments(&mut self) -> &mut Option<Vec<comments::Comment>> {\n+    fn comments(&mut self) -> &mut Vec<comments::Comment> {\n         &mut self.comments\n     }\n \n@@ -134,7 +134,7 @@ impl<'a> State<'a> {\n         State {\n             s: pp::mk_printer(out),\n             cm: Some(cm),\n-            comments,\n+            comments: comments.unwrap_or_default(),\n             cur_cmnt: 0,\n             ann,\n         }\n@@ -149,7 +149,7 @@ pub fn to_string<F>(ann: &dyn PpAnn, f: F) -> String\n         let mut printer = State {\n             s: pp::mk_printer(&mut wr),\n             cm: None,\n-            comments: None,\n+            comments: Vec::new(),\n             cur_cmnt: 0,\n             ann,\n         };"}, {"sha": "460c443471282f22ed51ef47ab26ba81b85c52d5", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 10, "deletions": 14, "changes": 24, "blob_url": "https://github.com/rust-lang/rust/blob/59b161c7c84e48b9379fbed877a2fa5c13db0526/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/59b161c7c84e48b9379fbed877a2fa5c13db0526/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=59b161c7c84e48b9379fbed877a2fa5c13db0526", "patch": "@@ -46,7 +46,7 @@ impl PpAnn for NoAnn {}\n pub struct State<'a> {\n     pub s: pp::Printer<'a>,\n     cm: Option<&'a SourceMap>,\n-    comments: Option<Vec<comments::Comment>>,\n+    comments: Vec<comments::Comment>,\n     cur_cmnt: usize,\n     ann: &'a (dyn PpAnn+'a),\n     is_expanded: bool\n@@ -110,7 +110,7 @@ impl<'a> State<'a> {\n         State {\n             s: pp::mk_printer(out),\n             cm: Some(cm),\n-            comments,\n+            comments: comments.unwrap_or_default(),\n             cur_cmnt: 0,\n             ann,\n             is_expanded,\n@@ -126,7 +126,7 @@ pub fn to_string<F>(f: F) -> String where\n         let mut printer = State {\n             s: pp::mk_printer(&mut wr),\n             cm: None,\n-            comments: None,\n+            comments: Vec::new(),\n             cur_cmnt: 0,\n             ann: &NoAnn,\n             is_expanded: false\n@@ -423,7 +423,7 @@ fn visibility_qualified(vis: &ast::Visibility, s: &str) -> String {\n \n pub trait PrintState<'a> {\n     fn writer(&mut self) -> &mut pp::Printer<'a>;\n-    fn comments(&mut self) -> &mut Option<Vec<comments::Comment>>;\n+    fn comments(&mut self) -> &mut Vec<comments::Comment>;\n     fn cur_cmnt(&mut self) -> &mut usize;\n \n     fn word_space<S: Into<Cow<'static, str>>>(&mut self, w: S) {\n@@ -550,15 +550,11 @@ pub trait PrintState<'a> {\n \n     fn next_comment(&mut self) -> Option<comments::Comment> {\n         let cur_cmnt = *self.cur_cmnt();\n-        match *self.comments() {\n-            Some(ref cmnts) => {\n-                if cur_cmnt < cmnts.len() {\n-                    Some(cmnts[cur_cmnt].clone())\n-                } else {\n-                    None\n-                }\n-            }\n-            _ => None\n+        let cmnts = &*self.comments();\n+        if cur_cmnt < cmnts.len() {\n+            Some(cmnts[cur_cmnt].clone())\n+        } else {\n+            None\n         }\n     }\n \n@@ -756,7 +752,7 @@ impl<'a> PrintState<'a> for State<'a> {\n         &mut self.s\n     }\n \n-    fn comments(&mut self) -> &mut Option<Vec<comments::Comment>> {\n+    fn comments(&mut self) -> &mut Vec<comments::Comment> {\n         &mut self.comments\n     }\n "}]}