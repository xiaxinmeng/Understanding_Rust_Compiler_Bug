{"sha": "f4ded11b49aa24dcd8c0e114b427757b5d08dbe7", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY0ZGVkMTFiNDlhYTI0ZGNkOGMwZTExNGI0Mjc3NTdiNWQwOGRiZTc=", "commit": {"author": {"name": "Michal 'vorner' Vaner", "email": "vorner@vorner.cz", "date": "2020-04-13T17:08:33Z"}, "committer": {"name": "Michal 'vorner' Vaner", "email": "vorner@vorner.cz", "date": "2020-04-19T07:38:16Z"}, "message": "weak-into-raw: Add {Arc,Rc}::as_ptr\n\nFor consistency with Weak", "tree": {"sha": "60803e603f5a5429e63def452a230d4c1844b097", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/60803e603f5a5429e63def452a230d4c1844b097"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f4ded11b49aa24dcd8c0e114b427757b5d08dbe7", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEQ8wy/3jh6tM0kr/e9wDQwBnkxm8FAl6b/+oACgkQ9wDQwBnk\nxm+2nxAAzSI/5F42H2ngf644bhauji59RtnaUVa1TT91dy3NFHY8t5f5U4Ur3fAb\n7yemyKDnsubO3SwtzTZq9FXQH54vnGGDIANi16KU/jLaweBbv7EK8jYhmKt5mouP\njC6ugPw/6xZ6Q4uL2WeLy41ovJZnLTnNLqKFQZA6PHkrww8rq5PuRRk58rC/FumD\n5lg9CM7PGJvkAk+JtWEie6FNWulINzIn0UMmlv//g4OAT8xOG/j7PNRahLP5mjQS\ns3qpgRvAGAjx1OpRKH/Rnggqtcui0LA8bImCoU2BQh/ahR927al3C1dwRBA4Ubod\nux7astxl8iSuqm9L7pEWYK57LJA9Iaml5qJbckXxSV4PRsZxq5qVHfBKsaZ3yLKx\nfO7dv7SK59ZQ5cawpTuCz6nrBm4GAUGPzi6erS6PGYnOhlhW4JjdPCkFA8/4EHzM\nzgrzDS2dQTcMT3TuiMEF9f0fAaTVRLgYPRcihHMHx7NMHiNTbwlK+1+rLqgLbGvd\ncT8KqWOft9uOpT/ULvBzh244zss6oPl0+Z8ngywRbr1c+VG8u485evYljKNz8DY8\nl2SE8GtPe1o8ma0eaNFYIyOfFRKmGIxFd8sH/2hHvruVFwicevViZBoIRUgS+GFR\n4xL6HVD8Gw+ioWSpRS8w8/ibFJP019diwtSPFgGwXas0n7psRGw=\n=r8n1\n-----END PGP SIGNATURE-----", "payload": "tree 60803e603f5a5429e63def452a230d4c1844b097\nparent 80ccddc0ed8627c0fc5e15c7526f2702ce64adb9\nauthor Michal 'vorner' Vaner <vorner@vorner.cz> 1586797713 +0200\ncommitter Michal 'vorner' Vaner <vorner@vorner.cz> 1587281896 +0200\n\nweak-into-raw: Add {Arc,Rc}::as_ptr\n\nFor consistency with Weak\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f4ded11b49aa24dcd8c0e114b427757b5d08dbe7", "html_url": "https://github.com/rust-lang/rust/commit/f4ded11b49aa24dcd8c0e114b427757b5d08dbe7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f4ded11b49aa24dcd8c0e114b427757b5d08dbe7/comments", "author": {"login": "vorner", "id": 11783500, "node_id": "MDQ6VXNlcjExNzgzNTAw", "avatar_url": "https://avatars.githubusercontent.com/u/11783500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vorner", "html_url": "https://github.com/vorner", "followers_url": "https://api.github.com/users/vorner/followers", "following_url": "https://api.github.com/users/vorner/following{/other_user}", "gists_url": "https://api.github.com/users/vorner/gists{/gist_id}", "starred_url": "https://api.github.com/users/vorner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vorner/subscriptions", "organizations_url": "https://api.github.com/users/vorner/orgs", "repos_url": "https://api.github.com/users/vorner/repos", "events_url": "https://api.github.com/users/vorner/events{/privacy}", "received_events_url": "https://api.github.com/users/vorner/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vorner", "id": 11783500, "node_id": "MDQ6VXNlcjExNzgzNTAw", "avatar_url": "https://avatars.githubusercontent.com/u/11783500?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vorner", "html_url": "https://github.com/vorner", "followers_url": "https://api.github.com/users/vorner/followers", "following_url": "https://api.github.com/users/vorner/following{/other_user}", "gists_url": "https://api.github.com/users/vorner/gists{/gist_id}", "starred_url": "https://api.github.com/users/vorner/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vorner/subscriptions", "organizations_url": "https://api.github.com/users/vorner/orgs", "repos_url": "https://api.github.com/users/vorner/repos", "events_url": "https://api.github.com/users/vorner/events{/privacy}", "received_events_url": "https://api.github.com/users/vorner/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "80ccddc0ed8627c0fc5e15c7526f2702ce64adb9", "url": "https://api.github.com/repos/rust-lang/rust/commits/80ccddc0ed8627c0fc5e15c7526f2702ce64adb9", "html_url": "https://github.com/rust-lang/rust/commit/80ccddc0ed8627c0fc5e15c7526f2702ce64adb9"}], "stats": {"total": 52, "additions": 50, "deletions": 2}, "files": [{"sha": "e106b4354e4e942e731192ec822834a12bb299f7", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f4ded11b49aa24dcd8c0e114b427757b5d08dbe7/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4ded11b49aa24dcd8c0e114b427757b5d08dbe7/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=f4ded11b49aa24dcd8c0e114b427757b5d08dbe7", "patch": "@@ -569,9 +569,33 @@ impl<T: ?Sized> Rc<T> {\n     /// ```\n     #[stable(feature = \"rc_raw\", since = \"1.17.0\")]\n     pub fn into_raw(this: Self) -> *const T {\n+        let ptr = Self::as_ptr(&this);\n+        mem::forget(this);\n+        ptr\n+    }\n+\n+    /// Provides a raw pointer to the data.\n+    ///\n+    /// The counts are not affected in any way and the `Rc` is not consumed. The pointer is valid\n+    /// for as long there are strong counts in the `Rc`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(weak_into_raw)]\n+    ///\n+    /// use std::rc::Rc;\n+    ///\n+    /// let x = Rc::new(\"hello\".to_owned());\n+    /// let y = Rc::clone(&x);\n+    /// let x_ptr = Rc::as_ptr(&x);\n+    /// assert_eq!(x_ptr, Rc::as_ptr(&y));\n+    /// assert_eq!(unsafe { &*x_ptr }, \"hello\");\n+    /// ```\n+    #[unstable(feature = \"weak_into_raw\", issue = \"60728\")]\n+    pub fn as_ptr(this: &Self) -> *const T {\n         let ptr: *mut RcBox<T> = NonNull::as_ptr(this.ptr);\n         let fake_ptr = ptr as *mut T;\n-        mem::forget(this);\n \n         // SAFETY: This cannot go through Deref::deref.\n         // Instead, we manually offset the pointer rather than manifesting a reference."}, {"sha": "54df2b60857803541ab7dbb15e13904bcf1a1b76", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 25, "deletions": 1, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/f4ded11b49aa24dcd8c0e114b427757b5d08dbe7/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f4ded11b49aa24dcd8c0e114b427757b5d08dbe7/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=f4ded11b49aa24dcd8c0e114b427757b5d08dbe7", "patch": "@@ -566,9 +566,33 @@ impl<T: ?Sized> Arc<T> {\n     /// ```\n     #[stable(feature = \"rc_raw\", since = \"1.17.0\")]\n     pub fn into_raw(this: Self) -> *const T {\n+        let ptr = Self::as_ptr(&this);\n+        mem::forget(this);\n+        ptr\n+    }\n+\n+    /// Provides a raw pointer to the data.\n+    ///\n+    /// The counts are not affected in way and the `Arc` is not consumed. The pointer is valid for\n+    /// as long as there are strong counts in the `Arc`.\n+    ///\n+    /// # Examples\n+    ///\n+    /// ```\n+    /// #![feature(weak_into_raw)]\n+    ///\n+    /// use std::sync::Arc;\n+    ///\n+    /// let x = Arc::new(\"hello\".to_owned());\n+    /// let y = Arc::clone(&x);\n+    /// let x_ptr = Arc::as_ptr(&x);\n+    /// assert_eq!(x_ptr, Arc::as_ptr(&y));\n+    /// assert_eq!(unsafe { &*x_ptr }, \"hello\");\n+    /// ```\n+    #[unstable(feature = \"weak_into_raw\", issue = \"60728\")]\n+    pub fn as_ptr(this: &Self) -> *const T {\n         let ptr: *mut ArcInner<T> = NonNull::as_ptr(this.ptr);\n         let fake_ptr = ptr as *mut T;\n-        mem::forget(this);\n \n         // SAFETY: This cannot go through Deref::deref.\n         // Instead, we manually offset the pointer rather than manifesting a reference."}]}