{"sha": "b3c9912dbad13d7a3c369df4913e36d7fd7315ad", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIzYzk5MTJkYmFkMTNkN2EzYzM2OWRmNDkxM2UzNmQ3ZmQ3MzE1YWQ=", "commit": {"author": {"name": "Yashhwanth Ram", "email": "ryr397@gmail.com", "date": "2020-04-10T13:07:44Z"}, "committer": {"name": "Yashhwanth Ram", "email": "ryr397@gmail.com", "date": "2020-04-10T13:29:06Z"}, "message": "Suggest x.into() when it is a better choice than x.try_into() when\nconverting ints in librustc_typeck\nFixes #70851", "tree": {"sha": "d2a295b5dc0a81be728461fff115bfb7293ddeb7", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d2a295b5dc0a81be728461fff115bfb7293ddeb7"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b3c9912dbad13d7a3c369df4913e36d7fd7315ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b3c9912dbad13d7a3c369df4913e36d7fd7315ad", "html_url": "https://github.com/rust-lang/rust/commit/b3c9912dbad13d7a3c369df4913e36d7fd7315ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b3c9912dbad13d7a3c369df4913e36d7fd7315ad/comments", "author": {"login": "ryr3", "id": 17092480, "node_id": "MDQ6VXNlcjE3MDkyNDgw", "avatar_url": "https://avatars.githubusercontent.com/u/17092480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryr3", "html_url": "https://github.com/ryr3", "followers_url": "https://api.github.com/users/ryr3/followers", "following_url": "https://api.github.com/users/ryr3/following{/other_user}", "gists_url": "https://api.github.com/users/ryr3/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryr3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryr3/subscriptions", "organizations_url": "https://api.github.com/users/ryr3/orgs", "repos_url": "https://api.github.com/users/ryr3/repos", "events_url": "https://api.github.com/users/ryr3/events{/privacy}", "received_events_url": "https://api.github.com/users/ryr3/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ryr3", "id": 17092480, "node_id": "MDQ6VXNlcjE3MDkyNDgw", "avatar_url": "https://avatars.githubusercontent.com/u/17092480?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ryr3", "html_url": "https://github.com/ryr3", "followers_url": "https://api.github.com/users/ryr3/followers", "following_url": "https://api.github.com/users/ryr3/following{/other_user}", "gists_url": "https://api.github.com/users/ryr3/gists{/gist_id}", "starred_url": "https://api.github.com/users/ryr3/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ryr3/subscriptions", "organizations_url": "https://api.github.com/users/ryr3/orgs", "repos_url": "https://api.github.com/users/ryr3/repos", "events_url": "https://api.github.com/users/ryr3/events{/privacy}", "received_events_url": "https://api.github.com/users/ryr3/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "39b62533c7f9d0581a6ea9b9fc2cc51f21c3b5b0", "url": "https://api.github.com/repos/rust-lang/rust/commits/39b62533c7f9d0581a6ea9b9fc2cc51f21c3b5b0", "html_url": "https://github.com/rust-lang/rust/commit/39b62533c7f9d0581a6ea9b9fc2cc51f21c3b5b0"}], "stats": {"total": 2, "additions": 2, "deletions": 0}, "files": [{"sha": "7ef4bfb01418aa3c0165f5c917c4ba3f2c02f62d", "filename": "src/librustc_typeck/check/demand.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b3c9912dbad13d7a3c369df4913e36d7fd7315ad/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b3c9912dbad13d7a3c369df4913e36d7fd7315ad/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fdemand.rs?ref=b3c9912dbad13d7a3c369df4913e36d7fd7315ad", "patch": "@@ -755,6 +755,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 (&ty::Int(ref exp), &ty::Int(ref found)) => {\n                     let is_fallible = match (found.bit_width(), exp.bit_width()) {\n                         (Some(found), Some(exp)) if found > exp => true,\n+                        (None, Some(8 | 16)) | (Some(8 | 16), None) => false,\n                         (None, _) | (_, None) => true,\n                         _ => false,\n                     };\n@@ -764,6 +765,7 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 (&ty::Uint(ref exp), &ty::Uint(ref found)) => {\n                     let is_fallible = match (found.bit_width(), exp.bit_width()) {\n                         (Some(found), Some(exp)) if found > exp => true,\n+                        (None, Some(8 | 16)) | (Some(8 | 16), None) => false,\n                         (None, _) | (_, None) => true,\n                         _ => false,\n                     };"}]}