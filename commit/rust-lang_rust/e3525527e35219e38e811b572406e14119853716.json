{"sha": "e3525527e35219e38e811b572406e14119853716", "node_id": "MDY6Q29tbWl0NzI0NzEyOmUzNTI1NTI3ZTM1MjE5ZTM4ZTgxMWI1NzI0MDZlMTQxMTk4NTM3MTY=", "commit": {"author": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-27T07:49:22Z"}, "committer": {"name": "Ville Penttinen", "email": "villem.penttinen@gmail.com", "date": "2019-02-27T07:49:22Z"}, "message": "Add support for hovering over the name of an item", "tree": {"sha": "1b5d2058ff7250e3ba99d949e082510d493956a1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b5d2058ff7250e3ba99d949e082510d493956a1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e3525527e35219e38e811b572406e14119853716", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e3525527e35219e38e811b572406e14119853716", "html_url": "https://github.com/rust-lang/rust/commit/e3525527e35219e38e811b572406e14119853716", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e3525527e35219e38e811b572406e14119853716/comments", "author": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vipentti", "id": 4726680, "node_id": "MDQ6VXNlcjQ3MjY2ODA=", "avatar_url": "https://avatars.githubusercontent.com/u/4726680?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vipentti", "html_url": "https://github.com/vipentti", "followers_url": "https://api.github.com/users/vipentti/followers", "following_url": "https://api.github.com/users/vipentti/following{/other_user}", "gists_url": "https://api.github.com/users/vipentti/gists{/gist_id}", "starred_url": "https://api.github.com/users/vipentti/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vipentti/subscriptions", "organizations_url": "https://api.github.com/users/vipentti/orgs", "repos_url": "https://api.github.com/users/vipentti/repos", "events_url": "https://api.github.com/users/vipentti/events{/privacy}", "received_events_url": "https://api.github.com/users/vipentti/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "79114c67b10698d6b73b84bdd782d7407752d3ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/79114c67b10698d6b73b84bdd782d7407752d3ca", "html_url": "https://github.com/rust-lang/rust/commit/79114c67b10698d6b73b84bdd782d7407752d3ca"}], "stats": {"total": 30, "additions": 28, "deletions": 2}, "files": [{"sha": "da33739be38e3fb1920a7a74bd9abc342bc60440", "filename": "crates/ra_ide_api/src/goto_definition.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/e3525527e35219e38e811b572406e14119853716/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3525527e35219e38e811b572406e14119853716/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fgoto_definition.rs?ref=e3525527e35219e38e811b572406e14119853716", "patch": "@@ -110,7 +110,7 @@ pub(crate) fn reference_definition(\n     Approximate(navs)\n }\n \n-fn name_definition(\n+pub(crate) fn name_definition(\n     db: &RootDatabase,\n     file_id: FileId,\n     name: &ast::Name,"}, {"sha": "ef3b5df292a3154493326e79fca74488547b1c8c", "filename": "crates/ra_ide_api/src/hover.rs", "status": "modified", "additions": 27, "deletions": 1, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/e3525527e35219e38e811b572406e14119853716/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e3525527e35219e38e811b572406e14119853716/crates%2Fra_ide_api%2Fsrc%2Fhover.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_ide_api%2Fsrc%2Fhover.rs?ref=e3525527e35219e38e811b572406e14119853716", "patch": "@@ -88,6 +88,18 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n         if !res.is_empty() {\n             range = Some(name_ref.syntax().range())\n         }\n+    } else if let Some(name) = find_node_at_offset::<ast::Name>(file.syntax(), position.offset) {\n+        let navs = crate::goto_definition::name_definition(db, position.file_id, name);\n+\n+        if let Some(navs) = navs {\n+            for nav in navs {\n+                res.extend(doc_text_for(db, nav))\n+            }\n+        }\n+\n+        if !res.is_empty() && range.is_none() {\n+            range = Some(name.syntax().range());\n+        }\n     }\n \n     if range.is_none() {\n@@ -97,7 +109,7 @@ pub(crate) fn hover(db: &RootDatabase, position: FilePosition) -> Option<RangeIn\n         let frange = FileRange { file_id: position.file_id, range: node.range() };\n         res.extend(type_of(db, frange).map(Into::into));\n         range = Some(node.range());\n-    };\n+    }\n \n     let range = range?;\n     if res.is_empty() {\n@@ -294,6 +306,20 @@ mod tests {\n         );\n     }\n \n+    #[test]\n+    fn hover_shows_fn_signature_on_fn_name() {\n+        check_hover_result(\n+            r#\"\n+            //- /main.rs\n+            pub fn foo<|>(a: u32, b: u32) -> u32 {}\n+\n+            fn main() {\n+            }\n+        \"#,\n+            &[\"pub fn foo(a: u32, b: u32) -> u32\"],\n+        );\n+    }\n+\n     #[test]\n     fn hover_some() {\n         let (analysis, position) = single_file_with_position("}]}