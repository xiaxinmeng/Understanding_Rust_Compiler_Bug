{"sha": "1fca2ce9010a581798fa39d1742eddcaada359ad", "node_id": "C_kwDOAAsO6NoAKDFmY2EyY2U5MDEwYTU4MTc5OGZhMzlkMTc0MmVkZGNhYWRhMzU5YWQ", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2021-09-28T23:27:47Z"}, "committer": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2021-09-28T23:27:47Z"}, "message": "Additional docs about Vec::leak behavior", "tree": {"sha": "7b041c0e9f711a0a0fa54fdc438b1ceed232bf66", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b041c0e9f711a0a0fa54fdc438b1ceed232bf66"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1fca2ce9010a581798fa39d1742eddcaada359ad", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1fca2ce9010a581798fa39d1742eddcaada359ad", "html_url": "https://github.com/rust-lang/rust/commit/1fca2ce9010a581798fa39d1742eddcaada359ad", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1fca2ce9010a581798fa39d1742eddcaada359ad/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "58b1a127d66b71e1a2180b509856f2c52feca9b3", "url": "https://api.github.com/repos/rust-lang/rust/commits/58b1a127d66b71e1a2180b509856f2c52feca9b3", "html_url": "https://github.com/rust-lang/rust/commit/58b1a127d66b71e1a2180b509856f2c52feca9b3"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "30cd95d69598916f4342764bc2c741f4771fb963", "filename": "library/alloc/src/vec/mod.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/1fca2ce9010a581798fa39d1742eddcaada359ad/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1fca2ce9010a581798fa39d1742eddcaada359ad/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Fsrc%2Fvec%2Fmod.rs?ref=1fca2ce9010a581798fa39d1742eddcaada359ad", "patch": "@@ -1952,8 +1952,11 @@ impl<T, A: Allocator> Vec<T, A> {\n     /// `'a`. If the type has only static references, or none at all, then this\n     /// may be chosen to be `'static`.\n     ///\n-    /// This function is similar to the [`leak`][Box::leak] function on [`Box`]\n-    /// except that there is no way to recover the leaked memory.\n+    /// This method does not reallocate or shrink the `Vec`, so the leaked\n+    /// allocation may include unused capacity that is not part of the returned\n+    /// slice.  Unsafe code that later reconstructs or deallocates the `Vec`\n+    /// (for example, by calling [`Vec::from_raw_parts`]) must keep track of the\n+    /// original capacity.\n     ///\n     /// This function is mainly useful for data that lives for the remainder of\n     /// the program's life. Dropping the returned reference will cause a memory"}]}