{"sha": "a6d79398559b2f8e423391a0ebb394228b03064b", "node_id": "C_kwDOAAsO6NoAKGE2ZDc5Mzk4NTU5YjJmOGU0MjMzOTFhMGViYjM5NDIyOGIwMzA2NGI", "commit": {"author": {"name": "Dylan DPC", "email": "99973273+Dylan-DPC@users.noreply.github.com", "date": "2022-06-03T09:18:25Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-06-03T09:18:25Z"}, "message": "Rollup merge of #97663 - RalfJung:keine-halben-sachen, r=oli-obk\n\ntake back half-baked noaliasing check in Assignment\n\nDoing an aliasing check in `copy_op` does not make a ton of sense. We have to eventually do something in the `Assignment` statement handling instead.", "tree": {"sha": "6ee8d3c5e5ed62be4a3996695bada40b74c21f39", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6ee8d3c5e5ed62be4a3996695bada40b74c21f39"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a6d79398559b2f8e423391a0ebb394228b03064b", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJimdHiCRBK7hj4Ov3rIwAABS8IAHby8aNlecajKl7wgyXowADT\nl3cTjZBqCJjL74GbwwYyiOO646C6jNxSz7KdIPSiOc3MDzLYHTtRh1gxa9jyfm36\naGcLr7PvrknQZQr8aOJ91iLfNTxh5Bxr2Bolhc45GTbBxj5nB+D3sFimO/50hE+k\ntE2QaToFOlE5lfwXVFDfZXdwa01R0B9E1hN3sV1Uw2XqEmMlzeTcBKSC5qPdrOSh\nyEVZSWzzmGKTI52P7PrH09U1CM4CJzeNs0CoadpEiON5akBMXASfmC7nU5Dy8xG5\nFr0Q7VEhpffOfqS46WKPVccwPismO4qXcLkwY9gcSq7CkrTRF5eLOcxs7pGqWoU=\n=uf8o\n-----END PGP SIGNATURE-----\n", "payload": "tree 6ee8d3c5e5ed62be4a3996695bada40b74c21f39\nparent f116dd76ed93b8d5bd920ec95f3a0d52ce6a525c\nparent 7676f07d0e6e8d13575652ce7e71a67c1bbd871c\nauthor Dylan DPC <99973273+Dylan-DPC@users.noreply.github.com> 1654247905 +0200\ncommitter GitHub <noreply@github.com> 1654247905 +0200\n\nRollup merge of #97663 - RalfJung:keine-halben-sachen, r=oli-obk\n\ntake back half-baked noaliasing check in Assignment\n\nDoing an aliasing check in `copy_op` does not make a ton of sense. We have to eventually do something in the `Assignment` statement handling instead.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a6d79398559b2f8e423391a0ebb394228b03064b", "html_url": "https://github.com/rust-lang/rust/commit/a6d79398559b2f8e423391a0ebb394228b03064b", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a6d79398559b2f8e423391a0ebb394228b03064b/comments", "author": {"login": "Dylan-DPC", "id": 99973273, "node_id": "U_kgDOBfV4mQ", "avatar_url": "https://avatars.githubusercontent.com/u/99973273?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Dylan-DPC", "html_url": "https://github.com/Dylan-DPC", "followers_url": "https://api.github.com/users/Dylan-DPC/followers", "following_url": "https://api.github.com/users/Dylan-DPC/following{/other_user}", "gists_url": "https://api.github.com/users/Dylan-DPC/gists{/gist_id}", "starred_url": "https://api.github.com/users/Dylan-DPC/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Dylan-DPC/subscriptions", "organizations_url": "https://api.github.com/users/Dylan-DPC/orgs", "repos_url": "https://api.github.com/users/Dylan-DPC/repos", "events_url": "https://api.github.com/users/Dylan-DPC/events{/privacy}", "received_events_url": "https://api.github.com/users/Dylan-DPC/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f116dd76ed93b8d5bd920ec95f3a0d52ce6a525c", "url": "https://api.github.com/repos/rust-lang/rust/commits/f116dd76ed93b8d5bd920ec95f3a0d52ce6a525c", "html_url": "https://github.com/rust-lang/rust/commit/f116dd76ed93b8d5bd920ec95f3a0d52ce6a525c"}, {"sha": "7676f07d0e6e8d13575652ce7e71a67c1bbd871c", "url": "https://api.github.com/repos/rust-lang/rust/commits/7676f07d0e6e8d13575652ce7e71a67c1bbd871c", "html_url": "https://github.com/rust-lang/rust/commit/7676f07d0e6e8d13575652ce7e71a67c1bbd871c"}], "stats": {"total": 6, "additions": 3, "deletions": 3}, "files": [{"sha": "ae7180b674ffd01464a058461e36cd777cdaf28e", "filename": "compiler/rustc_const_eval/src/interpret/place.rs", "status": "modified", "additions": 1, "deletions": 3, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/a6d79398559b2f8e423391a0ebb394228b03064b/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fplace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d79398559b2f8e423391a0ebb394228b03064b/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fplace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fplace.rs?ref=a6d79398559b2f8e423391a0ebb394228b03064b", "patch": "@@ -869,8 +869,6 @@ where\n             Ok(src_val) => {\n                 assert!(!src.layout.is_unsized(), \"cannot have unsized immediates\");\n                 // Yay, we got a value that we can write directly.\n-                // FIXME: Add a check to make sure that if `src` is indirect,\n-                // it does not overlap with `dest`.\n                 return self.write_immediate_no_validate(*src_val, dest);\n             }\n             Err(mplace) => mplace,\n@@ -890,7 +888,7 @@ where\n         });\n         assert_eq!(src.meta, dest.meta, \"Can only copy between equally-sized instances\");\n \n-        self.mem_copy(src.ptr, src.align, dest.ptr, dest.align, size, /*nonoverlapping*/ true)\n+        self.mem_copy(src.ptr, src.align, dest.ptr, dest.align, size, /*nonoverlapping*/ false)\n     }\n \n     /// Copies the data from an operand to a place. The layouts may disagree, but they must"}, {"sha": "9ac86911c7d968f718654af8d232415632dc2b4d", "filename": "compiler/rustc_const_eval/src/interpret/step.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/a6d79398559b2f8e423391a0ebb394228b03064b/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a6d79398559b2f8e423391a0ebb394228b03064b/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_const_eval%2Fsrc%2Finterpret%2Fstep.rs?ref=a6d79398559b2f8e423391a0ebb394228b03064b", "patch": "@@ -158,6 +158,8 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         place: mir::Place<'tcx>,\n     ) -> InterpResult<'tcx> {\n         let dest = self.eval_place(place)?;\n+        // FIXME: ensure some kind of non-aliasing between LHS and RHS?\n+        // Also see https://github.com/rust-lang/rust/issues/68364.\n \n         use rustc_middle::mir::Rvalue::*;\n         match *rvalue {"}]}