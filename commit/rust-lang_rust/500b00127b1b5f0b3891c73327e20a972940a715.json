{"sha": "500b00127b1b5f0b3891c73327e20a972940a715", "node_id": "MDY6Q29tbWl0NzI0NzEyOjUwMGIwMDEyN2IxYjVmMGIzODkxYzczMzI3ZTIwYTk3Mjk0MGE3MTU=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-13T17:35:46Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2019-07-15T09:42:07Z"}, "message": "pprust: Use `print_mac_common` for `macro_rules` definitions", "tree": {"sha": "3d59a2e4812f79e7d7325a4d8c7a7112dda8890a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3d59a2e4812f79e7d7325a4d8c7a7112dda8890a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/500b00127b1b5f0b3891c73327e20a972940a715", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/500b00127b1b5f0b3891c73327e20a972940a715", "html_url": "https://github.com/rust-lang/rust/commit/500b00127b1b5f0b3891c73327e20a972940a715", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/500b00127b1b5f0b3891c73327e20a972940a715/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65a714a6a0848d5604e1d5f847a06e196951e669", "url": "https://api.github.com/repos/rust-lang/rust/commits/65a714a6a0848d5604e1d5f847a06e196951e669", "html_url": "https://github.com/rust-lang/rust/commit/65a714a6a0848d5604e1d5f847a06e196951e669"}], "stats": {"total": 50, "additions": 21, "deletions": 29}, "files": [{"sha": "8542be8ea60857299234cff03d033904ec095dd2", "filename": "src/libsyntax/print/pprust.rs", "status": "modified", "additions": 16, "deletions": 26, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/500b00127b1b5f0b3891c73327e20a972940a715/src%2Flibsyntax%2Fprint%2Fpprust.rs", "raw_url": "https://github.com/rust-lang/rust/raw/500b00127b1b5f0b3891c73327e20a972940a715/src%2Flibsyntax%2Fprint%2Fpprust.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Fprint%2Fpprust.rs?ref=500b00127b1b5f0b3891c73327e20a972940a715", "patch": "@@ -703,6 +703,7 @@ pub trait PrintState<'a>: std::ops::Deref<Target=pp::Printer> + std::ops::DerefM\n         &mut self,\n         path: &ast::Path,\n         has_bang: bool,\n+        ident: Option<ast::Ident>,\n         tts: TokenStream,\n         delim: MacDelimiter,\n         span: Span,\n@@ -711,6 +712,11 @@ pub trait PrintState<'a>: std::ops::Deref<Target=pp::Printer> + std::ops::DerefM\n         if has_bang {\n             self.word(\"!\");\n         }\n+        if let Some(ident) = ident {\n+            self.space();\n+            self.print_ident(ident);\n+            self.space();\n+        }\n         match delim {\n             MacDelimiter::Parenthesis => self.popen(),\n             MacDelimiter::Bracket => self.word(\"[\"),\n@@ -1329,33 +1335,17 @@ impl<'a> State<'a> {\n                 self.s.word(\";\");\n             }\n             ast::ItemKind::Mac(ref mac) => {\n-                if item.ident.name == kw::Invalid {\n-                    self.print_mac(mac);\n-                    match mac.node.delim {\n-                        MacDelimiter::Brace => {}\n-                        _ => self.s.word(\";\"),\n-                    }\n-                } else {\n-                    self.print_path(&mac.node.path, false, 0);\n-                    self.s.word(\"! \");\n-                    self.print_ident(item.ident);\n-                    self.cbox(INDENT_UNIT);\n-                    self.popen();\n-                    self.print_tts(mac.node.stream(), true);\n-                    self.pclose();\n-                    self.s.word(\";\");\n-                    self.end();\n+                self.print_mac(mac);\n+                match mac.node.delim {\n+                    MacDelimiter::Brace => {}\n+                    _ => self.s.word(\";\"),\n                 }\n             }\n-            ast::ItemKind::MacroDef(ref tts) => {\n-                self.s.word(\"macro_rules! \");\n-                self.print_ident(item.ident);\n-                self.cbox(INDENT_UNIT);\n-                self.popen();\n-                self.print_tts(tts.stream(), true);\n-                self.pclose();\n-                self.s.word(\";\");\n-                self.end();\n+            ast::ItemKind::MacroDef(ref macro_def) => {\n+                let path = &ast::Path::from_ident(ast::Ident::with_empty_ctxt(sym::macro_rules));\n+                self.print_mac_common(\n+                    path, true, Some(item.ident), macro_def.stream(), MacDelimiter::Brace, item.span\n+                );\n             }\n         }\n         self.ann.post(self, AnnNode::Item(item))\n@@ -1743,7 +1733,7 @@ impl<'a> State<'a> {\n     }\n \n     crate fn print_mac(&mut self, m: &ast::Mac) {\n-        self.print_mac_common(&m.node.path, true, m.node.stream(), m.node.delim, m.span);\n+        self.print_mac_common(&m.node.path, true, None, m.node.stream(), m.node.delim, m.span);\n     }\n \n "}, {"sha": "c9fd78163603312b0b915ef8295ed7fe7554d55b", "filename": "src/test/pretty/cast-lt.pp", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/500b00127b1b5f0b3891c73327e20a972940a715/src%2Ftest%2Fpretty%2Fcast-lt.pp", "raw_url": "https://github.com/rust-lang/rust/raw/500b00127b1b5f0b3891c73327e20a972940a715/src%2Ftest%2Fpretty%2Fcast-lt.pp", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fcast-lt.pp?ref=500b00127b1b5f0b3891c73327e20a972940a715", "patch": "@@ -8,6 +8,6 @@\n // pretty-mode:expanded\n // pp-exact:cast-lt.pp\n \n-macro_rules! negative(( $ e : expr ) => { $ e < 0 });\n+macro_rules! negative {( $ e : expr ) => { $ e < 0 } }\n \n fn main() { (1 as i32) < 0; }"}, {"sha": "0d438d457bf305e60093d861350f09988fd83290", "filename": "src/test/pretty/stmt_expr_attributes.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/500b00127b1b5f0b3891c73327e20a972940a715/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/500b00127b1b5f0b3891c73327e20a972940a715/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fpretty%2Fstmt_expr_attributes.rs?ref=500b00127b1b5f0b3891c73327e20a972940a715", "patch": "@@ -111,7 +111,9 @@ fn _8() {\n }\n \n fn _9() {\n-    macro_rules! stmt_mac((  ) => { let _ = (  ) ; });\n+    macro_rules!\n+    stmt_mac\n+    {(  ) => { let _ = (  ) ; } }\n \n     #[rustc_dummy]\n     stmt_mac!();\n@@ -128,7 +130,7 @@ fn _9() {\n     let _ = ();\n }\n \n-macro_rules! expr_mac((  ) => { (  ) });\n+macro_rules! expr_mac {(  ) => { (  ) } }\n \n fn _10() {\n     let _ = #[rustc_dummy] expr_mac!();"}]}