{"sha": "9c918464e186c7b19550004a771104589c0952d2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljOTE4NDY0ZTE4NmM3YjE5NTUwMDA0YTc3MTEwNDU4OWMwOTUyZDI=", "commit": {"author": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-17T16:47:09Z"}, "committer": {"name": "Oliver Schneider", "email": "git-spam-no-reply9815368754983@oli-obk.de", "date": "2017-03-24T15:19:32Z"}, "message": "Remove zst hacks", "tree": {"sha": "41a3b1cdf91cb5760d0d1105146e7f1519df4087", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/41a3b1cdf91cb5760d0d1105146e7f1519df4087"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c918464e186c7b19550004a771104589c0952d2", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEYFTdM4NKd7XQft77pp+NIls619kFAljVOQQACgkQpp+NIls6\n19mxCA/9EJSQ9Zr8Wf7Wyidpk9BfF16EgB2g+IuQEiZWn7x+rGp3z5Ki4/SS3V6v\nof9ab6/eiTJke9WzjYy3fzKg1tP/l8w6IdxaSwWrRVcTrzbi/kz0k8ZtvvNErGol\nxlvsM5JLtDuM0pVRQBJLH2C4JzSKwmGWUCgo3kZoyVKl3VDWIluUKJh1oRymcM0r\nBENv91bsQe4QtYE+/6ZZ24VBkpSZo3dpSz9Tq5Nc8zw5vGmf0w1fivWzv994/Mak\niU8hFE1NBVxh5D42Tys/E9ijn9a5TumNkI/rbv0815Mklg8l5l2Uxd1ayVOYHkoP\nDi3NtlirU99dr3SvNiZ7xKkF+onlDX6cMB0HRnRPZEPu3rKCHmge41/nGDfym2aQ\nFo8pRj5iHy6qyFAg4JSVgf9lHZVX5hshkvH573P+XrEiz/2r9NCFYYKtI6tFwdhA\nSrPSVZhA6UQRKuYXjh1G8rHy9c5VCKKYfmST/toHpyL+Jzy1Bp0in0eZMyeQpYEC\nCL5dW/xIXZ41AgwustqdAl+ZvWhH9/JzMaQbNqdZxhyKHJS+5464108jQ8xYQajH\nGWICHe6fnQsy6hWD6xZap8koRRPkBUNdi9f4RvzMNidafaptE65ABTLO47vAnPgo\n/OEn4iboyI6Toh2+uDpUf2KhSXvtcO/pzYpCfb7HdprcMdmlFKU=\n=LuNF\n-----END PGP SIGNATURE-----", "payload": "tree 41a3b1cdf91cb5760d0d1105146e7f1519df4087\nparent b0d9afbc04483a8c19f15e13e3a61ce11892536d\nauthor Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1489769229 +0100\ncommitter Oliver Schneider <git-spam-no-reply9815368754983@oli-obk.de> 1490368772 +0100\n\nRemove zst hacks"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c918464e186c7b19550004a771104589c0952d2", "html_url": "https://github.com/rust-lang/rust/commit/9c918464e186c7b19550004a771104589c0952d2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c918464e186c7b19550004a771104589c0952d2/comments", "author": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "committer": {"login": "oli-obk", "id": 332036, "node_id": "MDQ6VXNlcjMzMjAzNg==", "avatar_url": "https://avatars.githubusercontent.com/u/332036?v=4", "gravatar_id": "", "url": "https://api.github.com/users/oli-obk", "html_url": "https://github.com/oli-obk", "followers_url": "https://api.github.com/users/oli-obk/followers", "following_url": "https://api.github.com/users/oli-obk/following{/other_user}", "gists_url": "https://api.github.com/users/oli-obk/gists{/gist_id}", "starred_url": "https://api.github.com/users/oli-obk/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/oli-obk/subscriptions", "organizations_url": "https://api.github.com/users/oli-obk/orgs", "repos_url": "https://api.github.com/users/oli-obk/repos", "events_url": "https://api.github.com/users/oli-obk/events{/privacy}", "received_events_url": "https://api.github.com/users/oli-obk/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b0d9afbc04483a8c19f15e13e3a61ce11892536d", "url": "https://api.github.com/repos/rust-lang/rust/commits/b0d9afbc04483a8c19f15e13e3a61ce11892536d", "html_url": "https://github.com/rust-lang/rust/commit/b0d9afbc04483a8c19f15e13e3a61ce11892536d"}], "stats": {"total": 14, "additions": 0, "deletions": 14}, "files": [{"sha": "dbd928194c0329834a14f47eb0a45ed12ae98d1d", "filename": "src/librustc_trans/mir/constant.rs", "status": "modified", "additions": 0, "deletions": 14, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/9c918464e186c7b19550004a771104589c0952d2/src%2Flibrustc_trans%2Fmir%2Fconstant.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c918464e186c7b19550004a771104589c0952d2/src%2Flibrustc_trans%2Fmir%2Fconstant.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Fmir%2Fconstant.rs?ref=9c918464e186c7b19550004a771104589c0952d2", "patch": "@@ -479,13 +479,6 @@ impl<'a, 'tcx> MirConstContext<'a, 'tcx> {\n                 let ty = self.monomorphize(&constant.ty);\n                 match constant.literal.clone() {\n                     mir::Literal::Item { def_id, substs } => {\n-                        // Shortcut for zero-sized types\n-                        // which would not work with MirConstContext.\n-                        if common::type_is_zero_size(self.ccx, ty) {\n-                            let llty = type_of::type_of(self.ccx, ty);\n-                            return Ok(Const::new(C_null(llty), ty));\n-                        }\n-\n                         let substs = self.monomorphize(&substs);\n                         MirConstContext::trans_def(self.ccx, def_id, substs, IndexVec::new())\n                     }\n@@ -927,13 +920,6 @@ impl<'a, 'tcx> MirContext<'a, 'tcx> {\n         let ty = self.monomorphize(&constant.ty);\n         let result = match constant.literal.clone() {\n             mir::Literal::Item { def_id, substs } => {\n-                // Shortcut for zero-sized types\n-                // which would not work with MirConstContext.\n-                if common::type_is_zero_size(bcx.ccx, ty) {\n-                    let llty = type_of::type_of(bcx.ccx, ty);\n-                    return Const::new(C_null(llty), ty);\n-                }\n-\n                 let substs = self.monomorphize(&substs);\n                 MirConstContext::trans_def(bcx.ccx, def_id, substs, IndexVec::new())\n             }"}]}