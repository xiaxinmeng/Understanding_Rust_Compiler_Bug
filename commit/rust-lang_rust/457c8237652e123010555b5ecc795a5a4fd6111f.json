{"sha": "457c8237652e123010555b5ecc795a5a4fd6111f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ1N2M4MjM3NjUyZTEyMzAxMDU1NWI1ZWNjNzk1YTVhNGZkNjExMWY=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-03T07:06:48Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-03T08:47:28Z"}, "message": "only treat integer operations as such", "tree": {"sha": "092acd3e9ad498966dadcb27c7242254892b8642", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/092acd3e9ad498966dadcb27c7242254892b8642"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/457c8237652e123010555b5ecc795a5a4fd6111f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/457c8237652e123010555b5ecc795a5a4fd6111f", "html_url": "https://github.com/rust-lang/rust/commit/457c8237652e123010555b5ecc795a5a4fd6111f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/457c8237652e123010555b5ecc795a5a4fd6111f/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "44298d86f0bbf41a54aad51b33bee974a2535427", "url": "https://api.github.com/repos/rust-lang/rust/commits/44298d86f0bbf41a54aad51b33bee974a2535427", "html_url": "https://github.com/rust-lang/rust/commit/44298d86f0bbf41a54aad51b33bee974a2535427"}], "stats": {"total": 8, "additions": 4, "deletions": 4}, "files": [{"sha": "31def2fec0e03b2b7b0356851d2a529dbe416439", "filename": "src/operator.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/457c8237652e123010555b5ecc795a5a4fd6111f/src%2Foperator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/457c8237652e123010555b5ecc795a5a4fd6111f/src%2Foperator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Foperator.rs?ref=457c8237652e123010555b5ecc795a5a4fd6111f", "patch": "@@ -56,10 +56,10 @@ impl<'mir, 'tcx> EvalContextExt<'tcx> for super::MiriEvalContext<'mir, 'tcx> {\n \n         trace!(\"ptr_op: {:?} {:?} {:?}\", *left, bin_op, *right);\n \n-        // If intptrcast is enabled and the operation is not an offset\n-        // we can force the cast from pointers to integer addresses and\n-        // then dispatch to rustc binary operation method\n-        if self.memory().extra.rng.is_some() && bin_op != Offset {\n+        // If intptrcast is enabled, treat everything of integer *type* at integer *value*.\n+        if self.memory().extra.rng.is_some() && left.layout.ty.is_integral() {\n+            // This is actually an integer operation, so dispatch back to the core engine.\n+            assert!(right.layout.ty.is_integral());\n             let l_bits = self.force_bits(left.imm.to_scalar()?, left.layout.size)?;\n             let r_bits = self.force_bits(right.imm.to_scalar()?, right.layout.size)?;\n             "}]}