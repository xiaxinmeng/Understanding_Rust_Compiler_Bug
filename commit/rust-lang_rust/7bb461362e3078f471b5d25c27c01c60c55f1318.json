{"sha": "7bb461362e3078f471b5d25c27c01c60c55f1318", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiYjQ2MTM2MmUzMDc4ZjQ3MWI1ZDI1YzI3YzAxYzYwYzU1ZjEzMTg=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-21T20:35:47Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-04-21T20:35:47Z"}, "message": "Travis: test cargo miri on foreign arch", "tree": {"sha": "a81e0eaf799c06c584742052c5e6837a22bdcaa5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a81e0eaf799c06c584742052c5e6837a22bdcaa5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7bb461362e3078f471b5d25c27c01c60c55f1318", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7bb461362e3078f471b5d25c27c01c60c55f1318", "html_url": "https://github.com/rust-lang/rust/commit/7bb461362e3078f471b5d25c27c01c60c55f1318", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7bb461362e3078f471b5d25c27c01c60c55f1318/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8fd40db4bc6148b146da5160202671a57d9db82e", "url": "https://api.github.com/repos/rust-lang/rust/commits/8fd40db4bc6148b146da5160202671a57d9db82e", "html_url": "https://github.com/rust-lang/rust/commit/8fd40db4bc6148b146da5160202671a57d9db82e"}], "stats": {"total": 46, "additions": 33, "deletions": 13}, "files": [{"sha": "ec77875d4900fd323afbf529be1a62824e001d9e", "filename": "test-cargo-miri/run-test.py", "status": "modified", "additions": 17, "deletions": 5, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7bb461362e3078f471b5d25c27c01c60c55f1318/test-cargo-miri%2Frun-test.py", "raw_url": "https://github.com/rust-lang/rust/raw/7bb461362e3078f471b5d25c27c01c60c55f1318/test-cargo-miri%2Frun-test.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/test-cargo-miri%2Frun-test.py?ref=7bb461362e3078f471b5d25c27c01c60c55f1318", "patch": "@@ -5,12 +5,18 @@\n and the working directory to contain the cargo-miri-test project.\n '''\n \n-import sys, subprocess\n+import sys, subprocess, os\n \n def fail(msg):\n     print(\"TEST FAIL: {}\".format(msg))\n     sys.exit(1)\n \n+def cargo_miri(cmd):\n+    args = [\"cargo\", \"miri\", cmd, \"-q\"]\n+    if 'MIRI_TEST_TARGET' in os.environ:\n+        args += [\"--target\", os.environ['MIRI_TEST_TARGET']]\n+    return args\n+\n def test(name, cmd, stdout_ref, stderr_ref):\n     print(\"==> Testing `{}` <==\".format(name))\n     ## Call `cargo miri`, capture all output\n@@ -36,16 +42,22 @@ def test(name, cmd, stdout_ref, stderr_ref):\n         fail(\"stderr does not match reference\")\n \n def test_cargo_miri_run():\n-    test(\"cargo miri run\", [\"cargo\", \"miri\", \"run\", \"-q\"], \"stdout.ref\", \"stderr.ref\")\n+    test(\"cargo miri run\",\n+        cargo_miri(\"run\"),\n+        \"stdout.ref\", \"stderr.ref\"\n+    )\n     test(\"cargo miri run (with arguments)\",\n-        [\"cargo\", \"miri\", \"run\", \"-q\", \"--\", \"--\", \"hello world\", '\"hello world\"'],\n+        cargo_miri(\"run\") + [\"--\", \"--\", \"hello world\", '\"hello world\"'],\n         \"stdout.ref\", \"stderr.ref2\"\n     )\n \n def test_cargo_miri_test():\n-    test(\"cargo miri test\", [\"cargo\", \"miri\", \"test\", \"-q\", \"--\", \"-Zmiri-seed=feed\"], \"test.stdout.ref\", \"test.stderr.ref\")\n+    test(\"cargo miri test\",\n+        cargo_miri(\"test\") + [\"--\", \"-Zmiri-seed=feed\"],\n+        \"test.stdout.ref\", \"test.stderr.ref\"\n+    )\n     test(\"cargo miri test (with filter)\",\n-        [\"cargo\", \"miri\", \"test\", \"-q\", \"--\", \"--\", \"impl\"],\n+        cargo_miri(\"test\") + [\"--\", \"--\", \"impl\"],\n         \"test.stdout.ref2\", \"test.stderr.ref\"\n     )\n "}, {"sha": "7f2c8966472fbdf06aa62796916abcc0ea3c61a8", "filename": "tests/compiletest.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/7bb461362e3078f471b5d25c27c01c60c55f1318/tests%2Fcompiletest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7bb461362e3078f471b5d25c27c01c60c55f1318/tests%2Fcompiletest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fcompiletest.rs?ref=7bb461362e3078f471b5d25c27c01c60c55f1318", "patch": "@@ -101,7 +101,7 @@ fn get_host() -> String {\n }\n \n fn get_target() -> String {\n-    std::env::var(\"MIRI_COMPILETEST_TARGET\").unwrap_or_else(|_| get_host())\n+    std::env::var(\"MIRI_TEST_TARGET\").unwrap_or_else(|_| get_host())\n }\n \n fn run_pass_miri(opt: bool) {"}, {"sha": "77768cf031148625806cbbef77fe0621699b32cb", "filename": "travis.sh", "status": "modified", "additions": 15, "deletions": 7, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/7bb461362e3078f471b5d25c27c01c60c55f1318/travis.sh", "raw_url": "https://github.com/rust-lang/rust/raw/7bb461362e3078f471b5d25c27c01c60c55f1318/travis.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/travis.sh?ref=7bb461362e3078f471b5d25c27c01c60c55f1318", "patch": "@@ -3,13 +3,14 @@ set -euo pipefail\n \n # Determine configuration\n if [ \"$TRAVIS_OS_NAME\" == osx ]; then\n-  export MIRI_SYSROOT_BASE=~/Library/Caches/miri.miri.miri/\n+  MIRI_SYSROOT_BASE=~/Library/Caches/miri.miri.miri/\n   FOREIGN_TARGET=i686-apple-darwin\n else\n-  export MIRI_SYSROOT_BASE=~/.cache/miri/\n+  MIRI_SYSROOT_BASE=~/.cache/miri/\n   FOREIGN_TARGET=i686-unknown-linux-gnu\n fi\n \n+# Prepare\n echo \"Build and install miri\"\n cargo build --release --all-features --all-targets\n cargo install --all-features --force --path .\n@@ -20,11 +21,18 @@ cargo miri setup\n cargo miri setup --target \"$FOREIGN_TARGET\"\n echo\n \n-echo \"Test miri with full MIR, on the host and other architectures\"\n-MIRI_SYSROOT=\"$MIRI_SYSROOT_BASE\"/HOST cargo test --release --all-features\n-MIRI_SYSROOT=\"$MIRI_SYSROOT_BASE\" MIRI_COMPILETEST_TARGET=\"$FOREIGN_TARGET\" cargo test --release --all-features\n+# Test\n+function run_tests {\n+  cargo test --release --all-features\n+  (cd test-cargo-miri && ./run-test.py)\n+}\n+\n+echo \"Test host architecture\"\n+export MIRI_SYSROOT=\"$MIRI_SYSROOT_BASE\"/HOST\n+run_tests\n echo\n \n-echo \"Test cargo integration\"\n-(cd test-cargo-miri && MIRI_SYSROOT=\"$MIRI_SYSROOT_BASE\"/HOST ./run-test.py)\n+echo \"Test foreign architecture ($FOREIGN_TARGET)\"\n+export MIRI_SYSROOT=\"$MIRI_SYSROOT_BASE\" MIRI_TEST_TARGET=\"$FOREIGN_TARGET\"\n+run_tests\n echo"}]}