{"sha": "3ce5a026b076276a01ddec5b4b1ffbc171e8fce2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjNjZTVhMDI2YjA3NjI3NmEwMWRkZWM1YjRiMWZmYmMxNzFlOGZjZTI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-03T09:21:02Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-09-03T09:21:02Z"}, "message": "auto merge of #16940 : treeman/rust/fail-non-utf8, r=pnkfelix\n\nCloses #16877.", "tree": {"sha": "590a8c4a3c214fa82f3b5536e1f43c6d17e808a6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/590a8c4a3c214fa82f3b5536e1f43c6d17e808a6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/3ce5a026b076276a01ddec5b4b1ffbc171e8fce2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/3ce5a026b076276a01ddec5b4b1ffbc171e8fce2", "html_url": "https://github.com/rust-lang/rust/commit/3ce5a026b076276a01ddec5b4b1ffbc171e8fce2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/3ce5a026b076276a01ddec5b4b1ffbc171e8fce2/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b7d456dfea5487c13ff0389c905693aad85f775f", "url": "https://api.github.com/repos/rust-lang/rust/commits/b7d456dfea5487c13ff0389c905693aad85f775f", "html_url": "https://github.com/rust-lang/rust/commit/b7d456dfea5487c13ff0389c905693aad85f775f"}, {"sha": "968b1280e34848f7cf37358c9fd76af18cac2ec7", "url": "https://api.github.com/repos/rust-lang/rust/commits/968b1280e34848f7cf37358c9fd76af18cac2ec7", "html_url": "https://github.com/rust-lang/rust/commit/968b1280e34848f7cf37358c9fd76af18cac2ec7"}], "stats": {"total": 30, "additions": 29, "deletions": 1}, "files": [{"sha": "fbbc1a08fd9516763a9b8f533fcd50782a9ab70f", "filename": "src/librustrt/unwind.rs", "status": "modified", "additions": 3, "deletions": 1, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/3ce5a026b076276a01ddec5b4b1ffbc171e8fce2/src%2Flibrustrt%2Funwind.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ce5a026b076276a01ddec5b4b1ffbc171e8fce2/src%2Flibrustrt%2Funwind.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustrt%2Funwind.rs?ref=3ce5a026b076276a01ddec5b4b1ffbc171e8fce2", "patch": "@@ -61,6 +61,7 @@ use core::prelude::*;\n \n use alloc::boxed::Box;\n use collections::string::String;\n+use collections::str::StrAllocating;\n use collections::vec::Vec;\n use core::any::Any;\n use core::atomic;\n@@ -525,7 +526,8 @@ pub fn begin_unwind_fmt(msg: &fmt::Arguments, file_line: &(&'static str, uint))\n     let mut v = Vec::new();\n     let _ = write!(&mut VecWriter { v: &mut v }, \"{}\", msg);\n \n-    begin_unwind_inner(box String::from_utf8(v).unwrap(), file_line)\n+    let msg = box String::from_utf8_lossy(v.as_slice()).into_string();\n+    begin_unwind_inner(msg, file_line)\n }\n \n /// This is the entry point of unwinding for fail!() and assert!()."}, {"sha": "88720b421e6870d7f397147e7400362f7b1fb698", "filename": "src/test/run-fail/fail-non-utf8.rs", "status": "added", "additions": 26, "deletions": 0, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/3ce5a026b076276a01ddec5b4b1ffbc171e8fce2/src%2Ftest%2Frun-fail%2Ffail-non-utf8.rs", "raw_url": "https://github.com/rust-lang/rust/raw/3ce5a026b076276a01ddec5b4b1ffbc171e8fce2/src%2Ftest%2Frun-fail%2Ffail-non-utf8.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-fail%2Ffail-non-utf8.rs?ref=3ce5a026b076276a01ddec5b4b1ffbc171e8fce2", "patch": "@@ -0,0 +1,26 @@\n+\n+// Copyright 2013 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Previously failed formating invalid utf8.\n+// cc #16877\n+\n+// error-pattern:failed at 'hello\ufffd'\n+\n+struct Foo;\n+impl std::fmt::Show for Foo {\n+    fn fmt(&self, fmtr:&mut std::fmt::Formatter) -> std::fmt::Result {\n+        // Purge invalid utf8: 0xff\n+        fmtr.write(&[104, 101, 108, 108, 111, 0xff])\n+    }\n+}\n+fn main() {\n+    fail!(\"{}\", Foo)\n+}"}]}