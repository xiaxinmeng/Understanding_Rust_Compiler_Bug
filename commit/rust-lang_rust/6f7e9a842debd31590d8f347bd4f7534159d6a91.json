{"sha": "6f7e9a842debd31590d8f347bd4f7534159d6a91", "node_id": "MDY6Q29tbWl0NzI0NzEyOjZmN2U5YTg0MmRlYmQzMTU5MGQ4ZjM0N2JkNGY3NTM0MTU5ZDZhOTE=", "commit": {"author": {"name": "mibac138", "email": "5672750+mibac138@users.noreply.github.com", "date": "2020-05-05T16:43:37Z"}, "committer": {"name": "mibac138", "email": "5672750+mibac138@users.noreply.github.com", "date": "2020-05-05T23:05:58Z"}, "message": "Add strikethrough support to rustdoc", "tree": {"sha": "1f2a46a0f0d5918133150f91f824cfb5a8f43ee6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f2a46a0f0d5918133150f91f824cfb5a8f43ee6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6f7e9a842debd31590d8f347bd4f7534159d6a91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6f7e9a842debd31590d8f347bd4f7534159d6a91", "html_url": "https://github.com/rust-lang/rust/commit/6f7e9a842debd31590d8f347bd4f7534159d6a91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6f7e9a842debd31590d8f347bd4f7534159d6a91/comments", "author": {"login": "mibac138", "id": 5672750, "node_id": "MDQ6VXNlcjU2NzI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5672750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mibac138", "html_url": "https://github.com/mibac138", "followers_url": "https://api.github.com/users/mibac138/followers", "following_url": "https://api.github.com/users/mibac138/following{/other_user}", "gists_url": "https://api.github.com/users/mibac138/gists{/gist_id}", "starred_url": "https://api.github.com/users/mibac138/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mibac138/subscriptions", "organizations_url": "https://api.github.com/users/mibac138/orgs", "repos_url": "https://api.github.com/users/mibac138/repos", "events_url": "https://api.github.com/users/mibac138/events{/privacy}", "received_events_url": "https://api.github.com/users/mibac138/received_events", "type": "User", "site_admin": false}, "committer": {"login": "mibac138", "id": 5672750, "node_id": "MDQ6VXNlcjU2NzI3NTA=", "avatar_url": "https://avatars.githubusercontent.com/u/5672750?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mibac138", "html_url": "https://github.com/mibac138", "followers_url": "https://api.github.com/users/mibac138/followers", "following_url": "https://api.github.com/users/mibac138/following{/other_user}", "gists_url": "https://api.github.com/users/mibac138/gists{/gist_id}", "starred_url": "https://api.github.com/users/mibac138/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mibac138/subscriptions", "organizations_url": "https://api.github.com/users/mibac138/orgs", "repos_url": "https://api.github.com/users/mibac138/repos", "events_url": "https://api.github.com/users/mibac138/events{/privacy}", "received_events_url": "https://api.github.com/users/mibac138/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "f8d394e5184fe3af761ea1e5ba73f993cfb36dfe", "url": "https://api.github.com/repos/rust-lang/rust/commits/f8d394e5184fe3af761ea1e5ba73f993cfb36dfe", "html_url": "https://github.com/rust-lang/rust/commit/f8d394e5184fe3af761ea1e5ba73f993cfb36dfe"}], "stats": {"total": 14, "additions": 11, "deletions": 3}, "files": [{"sha": "bdda45fdcd4d98ac7d5337e1ad1c3a307d7a1c78", "filename": "src/librustdoc/html/markdown.rs", "status": "modified", "additions": 11, "deletions": 3, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/6f7e9a842debd31590d8f347bd4f7534159d6a91/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6f7e9a842debd31590d8f347bd4f7534159d6a91/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustdoc%2Fhtml%2Fmarkdown.rs?ref=6f7e9a842debd31590d8f347bd4f7534159d6a91", "patch": "@@ -44,7 +44,7 @@ use pulldown_cmark::{html, CodeBlockKind, CowStr, Event, Options, Parser, Tag};\n mod tests;\n \n fn opts() -> Options {\n-    Options::ENABLE_TABLES | Options::ENABLE_FOOTNOTES\n+    Options::ENABLE_TABLES | Options::ENABLE_FOOTNOTES | Options::ENABLE_STRIKETHROUGH\n }\n \n /// When `to_string` is called, this struct will emit the HTML corresponding to\n@@ -933,7 +933,11 @@ impl MarkdownSummaryLine<'_> {\n             }\n         };\n \n-        let p = Parser::new_with_broken_link_callback(md, Options::empty(), Some(&replacer));\n+        let p = Parser::new_with_broken_link_callback(\n+            md,\n+            Options::ENABLE_STRIKETHROUGH,\n+            Some(&replacer),\n+        );\n \n         let mut s = String::new();\n \n@@ -975,7 +979,11 @@ pub fn plain_summary_line(md: &str) -> String {\n         }\n     }\n     let mut s = String::with_capacity(md.len() * 3 / 2);\n-    let p = ParserWrapper { inner: Parser::new(md), is_in: 0, is_first: true };\n+    let p = ParserWrapper {\n+        inner: Parser::new_ext(md, Options::ENABLE_STRIKETHROUGH),\n+        is_in: 0,\n+        is_first: true,\n+    };\n     p.filter(|t| !t.is_empty()).for_each(|i| s.push_str(&i));\n     s\n }"}]}