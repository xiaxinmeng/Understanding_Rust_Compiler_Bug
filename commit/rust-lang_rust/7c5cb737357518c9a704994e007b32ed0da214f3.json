{"sha": "7c5cb737357518c9a704994e007b32ed0da214f3", "node_id": "C_kwDOAAsO6NoAKDdjNWNiNzM3MzU3NTE4YzlhNzA0OTk0ZTAwN2IzMmVkMGRhMjE0ZjM", "commit": {"author": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2022-12-20T21:11:19Z"}, "committer": {"name": "kadmin", "email": "julianknodt@gmail.com", "date": "2023-01-09T08:41:21Z"}, "message": "Check for duplicates", "tree": {"sha": "3e84bab01a37213d0b52169ca7676d0ffdfd5a36", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3e84bab01a37213d0b52169ca7676d0ffdfd5a36"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7c5cb737357518c9a704994e007b32ed0da214f3", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7c5cb737357518c9a704994e007b32ed0da214f3", "html_url": "https://github.com/rust-lang/rust/commit/7c5cb737357518c9a704994e007b32ed0da214f3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7c5cb737357518c9a704994e007b32ed0da214f3/comments", "author": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "committer": {"login": "JulianKnodt", "id": 7675847, "node_id": "MDQ6VXNlcjc2NzU4NDc=", "avatar_url": "https://avatars.githubusercontent.com/u/7675847?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JulianKnodt", "html_url": "https://github.com/JulianKnodt", "followers_url": "https://api.github.com/users/JulianKnodt/followers", "following_url": "https://api.github.com/users/JulianKnodt/following{/other_user}", "gists_url": "https://api.github.com/users/JulianKnodt/gists{/gist_id}", "starred_url": "https://api.github.com/users/JulianKnodt/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JulianKnodt/subscriptions", "organizations_url": "https://api.github.com/users/JulianKnodt/orgs", "repos_url": "https://api.github.com/users/JulianKnodt/repos", "events_url": "https://api.github.com/users/JulianKnodt/events{/privacy}", "received_events_url": "https://api.github.com/users/JulianKnodt/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b79a9a0900dd1d29d8bf49e73b5ac75acafd9c3b", "url": "https://api.github.com/repos/rust-lang/rust/commits/b79a9a0900dd1d29d8bf49e73b5ac75acafd9c3b", "html_url": "https://github.com/rust-lang/rust/commit/b79a9a0900dd1d29d8bf49e73b5ac75acafd9c3b"}], "stats": {"total": 18, "additions": 15, "deletions": 3}, "files": [{"sha": "c4d5cf0309b9c584965782e4cf4083e528983f88", "filename": "compiler/rustc_trait_selection/src/traits/const_evaluatable.rs", "status": "modified", "additions": 15, "deletions": 3, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/7c5cb737357518c9a704994e007b32ed0da214f3/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7c5cb737357518c9a704994e007b32ed0da214f3/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_trait_selection%2Fsrc%2Ftraits%2Fconst_evaluatable.rs?ref=7c5cb737357518c9a704994e007b32ed0da214f3", "patch": "@@ -181,8 +181,11 @@ fn satisfied_from_param_env<'tcx>(\n                     && ocx.eq(&ObligationCause::dummy(), self.param_env, c, self.ct).is_ok()\n                     && ocx.select_all_or_error().is_empty()\n             }) {\n-                self.single_match =\n-                    if self.single_match.is_none() { Some(Ok(c)) } else { Some(Err(())) };\n+                self.single_match = match self.single_match {\n+                    None => Some(Ok(c)),\n+                    Some(Ok(o)) if o == c => Some(Ok(c)),\n+                    Some(_) => Some(Err(())),\n+                };\n                 ControlFlow::CONTINUE\n             } else if let ty::ConstKind::Expr(e) = c.kind() {\n                 e.visit_with(self)\n@@ -207,8 +210,17 @@ fn satisfied_from_param_env<'tcx>(\n                 let b_ct = tcx.expand_abstract_consts(ce);\n                 let mut v = Visitor { ct, infcx, param_env, single_match: None };\n                 let _ = b_ct.visit_with(&mut v);\n+\n                 if let Some(inner) = v.single_match {\n-                    single_match = if single_match.is_none() { Some(inner) } else { Some(Err(())) };\n+                    single_match = if let Ok(inner) = inner {\n+                        match single_match {\n+                            None => Some(Ok(inner)),\n+                            Some(Ok(prev)) if prev == inner => Some(Ok(prev)),\n+                            Some(_) => Some(Err(())),\n+                        }\n+                    } else {\n+                        Some(Err(()))\n+                    };\n                 }\n             }\n             _ => {} // don't care"}]}