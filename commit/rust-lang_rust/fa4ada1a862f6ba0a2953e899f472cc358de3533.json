{"sha": "fa4ada1a862f6ba0a2953e899f472cc358de3533", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhNGFkYTFhODYyZjZiYTBhMjk1M2U4OTlmNDcyY2MzNThkZTM1MzM=", "commit": {"author": {"name": "Manish Goregaokar", "email": "manishsmail@gmail.com", "date": "2020-07-14T05:23:13Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-07-14T05:23:13Z"}, "message": "Rollup merge of #74285 - wangtheo:issue-71669, r=lcnr\n\n#71669: add ui, codegen tests for volatile + nearby int intrinsics\n\nAdded some tests for intrinsics. See https://github.com/rust-lang/rust/issues/71669.", "tree": {"sha": "c4d1f368d295be036887e5fc91c45222b2bb1507", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c4d1f368d295be036887e5fc91c45222b2bb1507"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa4ada1a862f6ba0a2953e899f472cc358de3533", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfDUFBCRBK7hj4Ov3rIwAAdHIIAEv2nuStr4K6TIEioPxqTpVc\nJPqtx3Wtu504w0FoPulU5gDxp7F6WdUhIDq8nUWFUwdyCzI+ffGXu6mIQyGJSF8H\nwX5fx1H6AUQ6M5rXJcKQjK4L+cDi1dn82GUHy4kvl+DL7e9C4KlsPW6M/p8o5FoY\nOloGciZ3caCRQRs9iQnNJ+5pi72W55BKr0PHOqJpx9kt9wxW2tb7JLh4vDCasfRS\nmWp1l1pU7flkPZMHTx77Vwno5RuHPrrKBqZ+UquogFqe/uoeqU4KLxRtyQMIDqwo\nT0JiKimavIFkDv+nrAXRfnd8tziTcXgK9jsyFbng6GOKA+v/Y9sJMJyPLRPez0g=\n=q8i6\n-----END PGP SIGNATURE-----\n", "payload": "tree c4d1f368d295be036887e5fc91c45222b2bb1507\nparent e4a9b361267b1bcd9ead320f19ef15a6fa4e48f2\nparent 8df79fcc76814d0a47d64446eafbbb881f7204ca\nauthor Manish Goregaokar <manishsmail@gmail.com> 1594704193 -0700\ncommitter GitHub <noreply@github.com> 1594704193 -0700\n\nRollup merge of #74285 - wangtheo:issue-71669, r=lcnr\n\n#71669: add ui, codegen tests for volatile + nearby int intrinsics\n\nAdded some tests for intrinsics. See https://github.com/rust-lang/rust/issues/71669.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa4ada1a862f6ba0a2953e899f472cc358de3533", "html_url": "https://github.com/rust-lang/rust/commit/fa4ada1a862f6ba0a2953e899f472cc358de3533", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa4ada1a862f6ba0a2953e899f472cc358de3533/comments", "author": {"login": "Manishearth", "id": 1617736, "node_id": "MDQ6VXNlcjE2MTc3MzY=", "avatar_url": "https://avatars.githubusercontent.com/u/1617736?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Manishearth", "html_url": "https://github.com/Manishearth", "followers_url": "https://api.github.com/users/Manishearth/followers", "following_url": "https://api.github.com/users/Manishearth/following{/other_user}", "gists_url": "https://api.github.com/users/Manishearth/gists{/gist_id}", "starred_url": "https://api.github.com/users/Manishearth/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Manishearth/subscriptions", "organizations_url": "https://api.github.com/users/Manishearth/orgs", "repos_url": "https://api.github.com/users/Manishearth/repos", "events_url": "https://api.github.com/users/Manishearth/events{/privacy}", "received_events_url": "https://api.github.com/users/Manishearth/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "e4a9b361267b1bcd9ead320f19ef15a6fa4e48f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/e4a9b361267b1bcd9ead320f19ef15a6fa4e48f2", "html_url": "https://github.com/rust-lang/rust/commit/e4a9b361267b1bcd9ead320f19ef15a6fa4e48f2"}, {"sha": "8df79fcc76814d0a47d64446eafbbb881f7204ca", "url": "https://api.github.com/repos/rust-lang/rust/commits/8df79fcc76814d0a47d64446eafbbb881f7204ca", "html_url": "https://github.com/rust-lang/rust/commit/8df79fcc76814d0a47d64446eafbbb881f7204ca"}], "stats": {"total": 146, "additions": 146, "deletions": 0}, "files": [{"sha": "520fe2f1886ebea54bd02293869c455da47f46ee", "filename": "src/test/codegen/intrinsics/nearby.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fa4ada1a862f6ba0a2953e899f472cc358de3533/src%2Ftest%2Fcodegen%2Fintrinsics%2Fnearby.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa4ada1a862f6ba0a2953e899f472cc358de3533/src%2Ftest%2Fcodegen%2Fintrinsics%2Fnearby.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fintrinsics%2Fnearby.rs?ref=fa4ada1a862f6ba0a2953e899f472cc358de3533", "patch": "@@ -0,0 +1,18 @@\n+#![crate_type = \"lib\"]\n+#![feature(core_intrinsics)]\n+\n+use std::intrinsics;\n+\n+// CHECK-LABEL: @nearbyintf32\n+#[no_mangle]\n+pub unsafe fn nearbyintf32(a: f32) -> f32 {\n+    // CHECK: llvm.nearbyint.f32\n+    intrinsics::nearbyintf32(a)\n+}\n+\n+// CHECK-LABEL: @nearbyintf64\n+#[no_mangle]\n+pub unsafe fn nearbyintf64(a: f64) -> f64 {\n+    // CHECK: llvm.nearbyint.f64\n+    intrinsics::nearbyintf64(a)\n+}"}, {"sha": "1970517e7326249069b1e5f3eff1ea4e012c20a0", "filename": "src/test/codegen/intrinsics/volatile.rs", "status": "added", "additions": 55, "deletions": 0, "changes": 55, "blob_url": "https://github.com/rust-lang/rust/blob/fa4ada1a862f6ba0a2953e899f472cc358de3533/src%2Ftest%2Fcodegen%2Fintrinsics%2Fvolatile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa4ada1a862f6ba0a2953e899f472cc358de3533/src%2Ftest%2Fcodegen%2Fintrinsics%2Fvolatile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fintrinsics%2Fvolatile.rs?ref=fa4ada1a862f6ba0a2953e899f472cc358de3533", "patch": "@@ -0,0 +1,55 @@\n+// compile-flags: -C no-prepopulate-passes\n+\n+#![crate_type = \"lib\"]\n+#![feature(core_intrinsics)]\n+\n+use std::intrinsics;\n+\n+// CHECK-LABEL: @volatile_copy_memory\n+#[no_mangle]\n+pub unsafe fn volatile_copy_memory(a: *mut u8, b: *const u8) {\n+    // CHECK: llvm.memmove.p0i8.p0i8.{{\\w*(.*true)}}\n+    intrinsics::volatile_copy_memory(a, b, 1)\n+}\n+\n+// CHECK-LABEL: @volatile_copy_nonoverlapping_memory\n+#[no_mangle]\n+pub unsafe fn volatile_copy_nonoverlapping_memory(a: *mut u8, b: *const u8) {\n+    // CHECK: llvm.memcpy.p0i8.p0i8.{{\\w*(.*true)}}\n+    intrinsics::volatile_copy_nonoverlapping_memory(a, b, 1)\n+}\n+\n+// CHECK-LABEL: @volatile_set_memory\n+#[no_mangle]\n+pub unsafe fn volatile_set_memory(a: *mut u8, b: u8) {\n+    // CHECK: llvm.memset.p0i8.{{\\w*(.*true)}}\n+    intrinsics::volatile_set_memory(a, b, 1)\n+}\n+\n+// CHECK-LABEL: @volatile_load\n+#[no_mangle]\n+pub unsafe fn volatile_load(a: *const u8) -> u8 {\n+    // CHECK: load volatile\n+    intrinsics::volatile_load(a)\n+}\n+\n+// CHECK-LABEL: @volatile_store\n+#[no_mangle]\n+pub unsafe fn volatile_store(a: *mut u8, b: u8) {\n+    // CHECK: store volatile\n+    intrinsics::volatile_store(a, b)\n+}\n+\n+// CHECK-LABEL: @unaligned_volatile_load\n+#[no_mangle]\n+pub unsafe fn unaligned_volatile_load(a: *const u8) -> u8 {\n+    // CHECK: load volatile\n+    intrinsics::unaligned_volatile_load(a)\n+}\n+\n+// CHECK-LABEL: @unaligned_volatile_store\n+#[no_mangle]\n+pub unsafe fn unaligned_volatile_store(a: *mut u8, b: u8) {\n+    // CHECK: store volatile\n+    intrinsics::unaligned_volatile_store(a, b)\n+}"}, {"sha": "29331219ba6ee121e5a6273f332dad98f93ffd41", "filename": "src/test/codegen/intrinsics/volatile_order.rs", "status": "added", "additions": 18, "deletions": 0, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/fa4ada1a862f6ba0a2953e899f472cc358de3533/src%2Ftest%2Fcodegen%2Fintrinsics%2Fvolatile_order.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa4ada1a862f6ba0a2953e899f472cc358de3533/src%2Ftest%2Fcodegen%2Fintrinsics%2Fvolatile_order.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcodegen%2Fintrinsics%2Fvolatile_order.rs?ref=fa4ada1a862f6ba0a2953e899f472cc358de3533", "patch": "@@ -0,0 +1,18 @@\n+#![crate_type = \"lib\"]\n+#![feature(core_intrinsics)]\n+\n+use std::intrinsics::*;\n+\n+pub unsafe fn test_volatile_order() {\n+    let mut a: Box<u8> = Box::new(0);\n+    // CHECK: load volatile\n+    let x = volatile_load(&*a);\n+    // CHECK: load volatile\n+    let x = volatile_load(&*a);\n+    // CHECK: store volatile\n+    volatile_store(&mut *a, 12);\n+    // CHECK: store volatile\n+    unaligned_volatile_store(&mut *a, 12);\n+    // CHECK: llvm.memset.p0i8\n+    volatile_set_memory(&mut *a, 12, 1)\n+}"}, {"sha": "7b1d1eeaadbd0d69fe6e314f2402901fcc790ee2", "filename": "src/test/ui/intrinsics/intrinsic-nearby.rs", "status": "added", "additions": 11, "deletions": 0, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/fa4ada1a862f6ba0a2953e899f472cc358de3533/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-nearby.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa4ada1a862f6ba0a2953e899f472cc358de3533/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-nearby.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-nearby.rs?ref=fa4ada1a862f6ba0a2953e899f472cc358de3533", "patch": "@@ -0,0 +1,11 @@\n+// run-pass\n+#![feature(core_intrinsics)]\n+\n+use std::intrinsics::*;\n+\n+fn main() {\n+    unsafe {\n+        assert_eq!(nearbyintf32(5.234f32), 5f32);\n+        assert_eq!(nearbyintf64(6.777f64), 7f64);\n+    }\n+}"}, {"sha": "7b2c825a2084b400ca062abf6b33d622b322fbb9", "filename": "src/test/ui/intrinsics/intrinsic-volatile.rs", "status": "added", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/fa4ada1a862f6ba0a2953e899f472cc358de3533/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-volatile.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa4ada1a862f6ba0a2953e899f472cc358de3533/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-volatile.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fintrinsics%2Fintrinsic-volatile.rs?ref=fa4ada1a862f6ba0a2953e899f472cc358de3533", "patch": "@@ -0,0 +1,44 @@\n+// run-pass\n+\n+#![feature(core_intrinsics)]\n+\n+use std::intrinsics::*;\n+\n+pub fn main() {\n+    unsafe {\n+        let mut x: Box<u8> = Box::new(0);\n+        let mut y: Box<u8> = Box::new(0);\n+\n+        // test volatile load\n+        assert_eq!(volatile_load(&*x), 0);\n+        *x = 1;\n+        assert_eq!(volatile_load(&*x), 1);\n+\n+        // test volatile store\n+        volatile_store(&mut *x, 2);\n+        assert_eq!(*x, 2);\n+\n+        // test volatile copy memory\n+        volatile_copy_memory(&mut *y, &*x, 1);\n+        assert_eq!(*y, 2);\n+\n+        // test volatile copy non-overlapping memory\n+        *x = 3;\n+        volatile_copy_nonoverlapping_memory(&mut *y, &*x, 1);\n+        assert_eq!(*y, 3);\n+\n+        // test volatile set memory\n+        volatile_set_memory(&mut *x, 4, 1);\n+        assert_eq!(*x, 4);\n+\n+        // test unaligned volatile load\n+        let arr: [u8; 3] = [1, 2, 3];\n+        let ptr = arr[1..].as_ptr() as *const u16;\n+        assert_eq!(unaligned_volatile_load(ptr), u16::from_ne_bytes([arr[1], arr[2]]));\n+\n+        // test unaligned volatile store\n+        let ptr = arr[1..].as_ptr() as *mut u16;\n+        unaligned_volatile_store(ptr, 0);\n+        assert_eq!(arr, [1, 0, 0]);\n+    }\n+}"}]}