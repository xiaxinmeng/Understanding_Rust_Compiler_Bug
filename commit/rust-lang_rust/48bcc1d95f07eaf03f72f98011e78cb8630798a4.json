{"sha": "48bcc1d95f07eaf03f72f98011e78cb8630798a4", "node_id": "C_kwDOAAsO6NoAKDQ4YmNjMWQ5NWYwN2VhZjAzZjcyZjk4MDExZTc4Y2I4NjMwNzk4YTQ", "commit": {"author": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-03-17T23:53:28Z"}, "committer": {"name": "Jason Newcomb", "email": "jsnewcomb@pm.me", "date": "2022-04-15T01:33:32Z"}, "message": "Move `let_unit_value` back into `style`", "tree": {"sha": "594baccc4791f2a5bee80ee45c5f158ff06d1013", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/594baccc4791f2a5bee80ee45c5f158ff06d1013"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48bcc1d95f07eaf03f72f98011e78cb8630798a4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48bcc1d95f07eaf03f72f98011e78cb8630798a4", "html_url": "https://github.com/rust-lang/rust/commit/48bcc1d95f07eaf03f72f98011e78cb8630798a4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48bcc1d95f07eaf03f72f98011e78cb8630798a4/comments", "author": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Jarcho", "id": 7761774, "node_id": "MDQ6VXNlcjc3NjE3NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/7761774?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Jarcho", "html_url": "https://github.com/Jarcho", "followers_url": "https://api.github.com/users/Jarcho/followers", "following_url": "https://api.github.com/users/Jarcho/following{/other_user}", "gists_url": "https://api.github.com/users/Jarcho/gists{/gist_id}", "starred_url": "https://api.github.com/users/Jarcho/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Jarcho/subscriptions", "organizations_url": "https://api.github.com/users/Jarcho/orgs", "repos_url": "https://api.github.com/users/Jarcho/repos", "events_url": "https://api.github.com/users/Jarcho/events{/privacy}", "received_events_url": "https://api.github.com/users/Jarcho/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d68ac9ccce85b88de5f9f7eed169ef301bdaae3f", "url": "https://api.github.com/repos/rust-lang/rust/commits/d68ac9ccce85b88de5f9f7eed169ef301bdaae3f", "html_url": "https://github.com/rust-lang/rust/commit/d68ac9ccce85b88de5f9f7eed169ef301bdaae3f"}], "stats": {"total": 560, "additions": 303, "deletions": 257}, "files": [{"sha": "097064ae26f898e59ce438615ec16a5e28e29068", "filename": "clippy_lints/src/lib.register_all.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/clippy_lints%2Fsrc%2Flib.register_all.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/clippy_lints%2Fsrc%2Flib.register_all.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_all.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -308,6 +308,7 @@ store.register_group(true, \"clippy::all\", Some(\"clippy_all\"), vec![\n     LintId::of(uninit_vec::UNINIT_VEC),\n     LintId::of(unit_hash::UNIT_HASH),\n     LintId::of(unit_return_expecting_ord::UNIT_RETURN_EXPECTING_ORD),\n+    LintId::of(unit_types::LET_UNIT_VALUE),\n     LintId::of(unit_types::UNIT_ARG),\n     LintId::of(unit_types::UNIT_CMP),\n     LintId::of(unnamed_address::FN_ADDRESS_COMPARISONS),"}, {"sha": "96cdc4577d53d9fc46a4c1621f8048165a5419bb", "filename": "clippy_lints/src/lib.register_pedantic.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/clippy_lints%2Fsrc%2Flib.register_pedantic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_pedantic.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -89,7 +89,6 @@ store.register_group(true, \"clippy::pedantic\", Some(\"clippy_pedantic\"), vec![\n     LintId::of(types::LINKEDLIST),\n     LintId::of(types::OPTION_OPTION),\n     LintId::of(unicode::UNICODE_NOT_NFC),\n-    LintId::of(unit_types::LET_UNIT_VALUE),\n     LintId::of(unnecessary_wraps::UNNECESSARY_WRAPS),\n     LintId::of(unnested_or_patterns::UNNESTED_OR_PATTERNS),\n     LintId::of(unused_async::UNUSED_ASYNC),"}, {"sha": "5a85a9e209ebe5f784fa3e39ba89b215b673f1db", "filename": "clippy_lints/src/lib.register_style.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/clippy_lints%2Fsrc%2Flib.register_style.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/clippy_lints%2Fsrc%2Flib.register_style.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Flib.register_style.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -107,6 +107,7 @@ store.register_group(true, \"clippy::style\", Some(\"clippy_style\"), vec![\n     LintId::of(single_component_path_imports::SINGLE_COMPONENT_PATH_IMPORTS),\n     LintId::of(tabs_in_doc_comments::TABS_IN_DOC_COMMENTS),\n     LintId::of(to_digit_is_some::TO_DIGIT_IS_SOME),\n+    LintId::of(unit_types::LET_UNIT_VALUE),\n     LintId::of(unnecessary_owned_empty_strings::UNNECESSARY_OWNED_EMPTY_STRINGS),\n     LintId::of(unsafe_removed_from_name::UNSAFE_REMOVED_FROM_NAME),\n     LintId::of(unused_unit::UNUSED_UNIT),"}, {"sha": "a9e2073dec251de0d50b62c3b8d12df6531409f3", "filename": "clippy_lints/src/unit_types/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/clippy_lints%2Fsrc%2Funit_types%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/clippy_lints%2Fsrc%2Funit_types%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/clippy_lints%2Fsrc%2Funit_types%2Fmod.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -23,7 +23,7 @@ declare_clippy_lint! {\n     /// ```\n     #[clippy::version = \"pre 1.29.0\"]\n     pub LET_UNIT_VALUE,\n-    pedantic,\n+    style,\n     \"creating a `let` binding to a value of unit type, which usually can't be used afterwards\"\n }\n "}, {"sha": "eaea218e128886373d6c4ebc82fe5e377a831ce8", "filename": "tests/ui-internal/interning_defined_symbol.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui-internal%2Finterning_defined_symbol.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui-internal%2Finterning_defined_symbol.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Finterning_defined_symbol.fixed?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n #![deny(clippy::internal)]\n-#![allow(clippy::missing_clippy_version_attribute)]\n+#![allow(clippy::missing_clippy_version_attribute, clippy::let_unit_value)]\n #![feature(rustc_private)]\n \n extern crate rustc_span;"}, {"sha": "7efebb8fae486f456a3ade83ac5c510acb81fdc4", "filename": "tests/ui-internal/interning_defined_symbol.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui-internal%2Finterning_defined_symbol.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui-internal%2Finterning_defined_symbol.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-internal%2Finterning_defined_symbol.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n #![deny(clippy::internal)]\n-#![allow(clippy::missing_clippy_version_attribute)]\n+#![allow(clippy::missing_clippy_version_attribute, clippy::let_unit_value)]\n #![feature(rustc_private)]\n \n extern crate rustc_span;"}, {"sha": "4ac0378544c7d724ac4f49e28a7168791e21044a", "filename": "tests/ui-toml/functions_maxlines/test.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui-toml%2Ffunctions_maxlines%2Ftest.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui-toml%2Ffunctions_maxlines%2Ftest.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ffunctions_maxlines%2Ftest.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::too_many_lines)]\n+#![allow(clippy::let_unit_value)]\n \n // This function should be considered one line.\n fn many_comments_but_one_line_of_code() {"}, {"sha": "dc255bdcabafea568c725c28f65b79074ec024a4", "filename": "tests/ui-toml/functions_maxlines/test.stderr", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui-toml%2Ffunctions_maxlines%2Ftest.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui-toml%2Ffunctions_maxlines%2Ftest.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui-toml%2Ffunctions_maxlines%2Ftest.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,5 +1,5 @@\n error: this function has too many lines (2/1)\n-  --> $DIR/test.rs:18:1\n+  --> $DIR/test.rs:19:1\n    |\n LL | / fn too_many_lines() {\n LL | |     println!(\"This is bad.\");\n@@ -10,7 +10,7 @@ LL | | }\n    = note: `-D clippy::too-many-lines` implied by `-D warnings`\n \n error: this function has too many lines (4/1)\n-  --> $DIR/test.rs:24:1\n+  --> $DIR/test.rs:25:1\n    |\n LL | / async fn async_too_many_lines() {\n LL | |     println!(\"This is bad.\");\n@@ -19,7 +19,7 @@ LL | | }\n    | |_^\n \n error: this function has too many lines (4/1)\n-  --> $DIR/test.rs:30:1\n+  --> $DIR/test.rs:31:1\n    |\n LL | / fn closure_too_many_lines() {\n LL | |     let _ = {\n@@ -30,7 +30,7 @@ LL | | }\n    | |_^\n \n error: this function has too many lines (2/1)\n-  --> $DIR/test.rs:52:1\n+  --> $DIR/test.rs:53:1\n    |\n LL | / fn comment_before_code() {\n LL | |     let _ = \"test\";"}, {"sha": "57270fcf52b52d9193f844c24ac6927f12075345", "filename": "tests/ui/cast_slice_different_sizes.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fcast_slice_different_sizes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fcast_slice_different_sizes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_slice_different_sizes.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,3 +1,5 @@\n+#![allow(clippy::let_unit_value)]\n+\n fn main() {\n     let x: [i32; 3] = [1_i32, 2, 3];\n     let r_x = &x;"}, {"sha": "993e93c2bf3660696ed51b8fc097d0637e17e9f9", "filename": "tests/ui/cast_slice_different_sizes.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fcast_slice_different_sizes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fcast_slice_different_sizes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcast_slice_different_sizes.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,31 +1,31 @@\n error: casting between raw pointers to `[i32]` (element size 4) and `[u8]` (element size 1) does not adjust the count\n-  --> $DIR/cast_slice_different_sizes.rs:7:13\n+  --> $DIR/cast_slice_different_sizes.rs:9:13\n    |\n LL |     let b = a as *const [u8];\n    |             ^^^^^^^^^^^^^^^^ help: replace with `ptr::slice_from_raw_parts`: `core::ptr::slice_from_raw_parts(a as *const u8, ..)`\n    |\n    = note: `#[deny(clippy::cast_slice_different_sizes)]` on by default\n \n error: casting between raw pointers to `[u8]` (element size 1) and `[u32]` (element size 4) does not adjust the count\n-  --> $DIR/cast_slice_different_sizes.rs:8:13\n+  --> $DIR/cast_slice_different_sizes.rs:10:13\n    |\n LL |     let c = b as *const [u32];\n    |             ^^^^^^^^^^^^^^^^^ help: replace with `ptr::slice_from_raw_parts`: `core::ptr::slice_from_raw_parts(b as *const u32, ..)`\n \n error: casting between raw pointers to `[i32]` (element size 4) and `[u8]` (element size 1) does not adjust the count\n-  --> $DIR/cast_slice_different_sizes.rs:11:16\n+  --> $DIR/cast_slice_different_sizes.rs:13:16\n    |\n LL |     let loss = r_x as *const [i32] as *const [u8];\n    |                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with `ptr::slice_from_raw_parts`: `core::ptr::slice_from_raw_parts(r_x as *const [i32] as *const u8, ..)`\n \n error: casting between raw pointers to `[i32]` (element size 4) and `[u8]` (element size 1) does not adjust the count\n-  --> $DIR/cast_slice_different_sizes.rs:18:24\n+  --> $DIR/cast_slice_different_sizes.rs:20:24\n    |\n LL |     let loss_block_1 = { r_x as *const [i32] } as *const [u8];\n    |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with `ptr::slice_from_raw_parts`: `core::ptr::slice_from_raw_parts({ r_x as *const [i32] } as *const u8, ..)`\n \n error: casting between raw pointers to `[i32]` (element size 4) and `[u8]` (element size 1) does not adjust the count\n-  --> $DIR/cast_slice_different_sizes.rs:19:24\n+  --> $DIR/cast_slice_different_sizes.rs:21:24\n    |\n LL |       let loss_block_2 = {\n    |  ________________________^\n@@ -43,7 +43,7 @@ LL ~     } as *const u8, ..);\n    |\n \n error: casting between raw pointers to `[i32]` (element size 4) and `[u8]` (element size 1) does not adjust the count\n-  --> $DIR/cast_slice_different_sizes.rs:36:27\n+  --> $DIR/cast_slice_different_sizes.rs:38:27\n    |\n LL |     let long_chain_loss = r_x as *const [i32] as *const [u32] as *const [u16] as *const [i8] as *const [u8];\n    |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: replace with `ptr::slice_from_raw_parts`: `core::ptr::slice_from_raw_parts(r_x as *const [i32] as *const [u32] as *const [u16] as *const [i8] as *const u8, ..)`"}, {"sha": "ce46bc1acc1b7fbd718f5ffe8de0f19c38e0fe1e", "filename": "tests/ui/crashes/ice-5944.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fcrashes%2Fice-5944.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fcrashes%2Fice-5944.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fcrashes%2Fice-5944.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::repeat_once)]\n+#![allow(clippy::let_unit_value)]\n \n trait Repeat {\n     fn repeat(&self) {}"}, {"sha": "a28bff76755b62f982bf364d3e8f3fbfaeb01db7", "filename": "tests/ui/default_numeric_fallback_f64.fixed", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdefault_numeric_fallback_f64.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdefault_numeric_fallback_f64.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_numeric_fallback_f64.fixed?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -2,12 +2,15 @@\n // aux-build:macro_rules.rs\n \n #![warn(clippy::default_numeric_fallback)]\n-#![allow(unused)]\n-#![allow(clippy::never_loop)]\n-#![allow(clippy::no_effect)]\n-#![allow(clippy::unnecessary_operation)]\n-#![allow(clippy::branches_sharing_code)]\n-#![allow(clippy::match_single_binding)]\n+#![allow(\n+    unused,\n+    clippy::never_loop,\n+    clippy::no_effect,\n+    clippy::unnecessary_operation,\n+    clippy::branches_sharing_code,\n+    clippy::match_single_binding,\n+    clippy::let_unit_value\n+)]\n \n #[macro_use]\n extern crate macro_rules;"}, {"sha": "b48435cc7b282a049e8c4425381898e7b31b2702", "filename": "tests/ui/default_numeric_fallback_f64.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdefault_numeric_fallback_f64.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdefault_numeric_fallback_f64.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_numeric_fallback_f64.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -2,12 +2,15 @@\n // aux-build:macro_rules.rs\n \n #![warn(clippy::default_numeric_fallback)]\n-#![allow(unused)]\n-#![allow(clippy::never_loop)]\n-#![allow(clippy::no_effect)]\n-#![allow(clippy::unnecessary_operation)]\n-#![allow(clippy::branches_sharing_code)]\n-#![allow(clippy::match_single_binding)]\n+#![allow(\n+    unused,\n+    clippy::never_loop,\n+    clippy::no_effect,\n+    clippy::unnecessary_operation,\n+    clippy::branches_sharing_code,\n+    clippy::match_single_binding,\n+    clippy::let_unit_value\n+)]\n \n #[macro_use]\n extern crate macro_rules;"}, {"sha": "f8b6c7746edbb728f1ee699b2b345bb1963ecd66", "filename": "tests/ui/default_numeric_fallback_f64.stderr", "status": "modified", "additions": 23, "deletions": 23, "changes": 46, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdefault_numeric_fallback_f64.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdefault_numeric_fallback_f64.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_numeric_fallback_f64.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,139 +1,139 @@\n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:18:17\n+  --> $DIR/default_numeric_fallback_f64.rs:21:17\n    |\n LL |         let x = 0.12;\n    |                 ^^^^ help: consider adding suffix: `0.12_f64`\n    |\n    = note: `-D clippy::default-numeric-fallback` implied by `-D warnings`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:19:18\n+  --> $DIR/default_numeric_fallback_f64.rs:22:18\n    |\n LL |         let x = [1., 2., 3.];\n    |                  ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:19:22\n+  --> $DIR/default_numeric_fallback_f64.rs:22:22\n    |\n LL |         let x = [1., 2., 3.];\n    |                      ^^ help: consider adding suffix: `2.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:19:26\n+  --> $DIR/default_numeric_fallback_f64.rs:22:26\n    |\n LL |         let x = [1., 2., 3.];\n    |                          ^^ help: consider adding suffix: `3.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:20:28\n+  --> $DIR/default_numeric_fallback_f64.rs:23:28\n    |\n LL |         let x = if true { (1., 2.) } else { (3., 4.) };\n    |                            ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:20:32\n+  --> $DIR/default_numeric_fallback_f64.rs:23:32\n    |\n LL |         let x = if true { (1., 2.) } else { (3., 4.) };\n    |                                ^^ help: consider adding suffix: `2.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:20:46\n+  --> $DIR/default_numeric_fallback_f64.rs:23:46\n    |\n LL |         let x = if true { (1., 2.) } else { (3., 4.) };\n    |                                              ^^ help: consider adding suffix: `3.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:20:50\n+  --> $DIR/default_numeric_fallback_f64.rs:23:50\n    |\n LL |         let x = if true { (1., 2.) } else { (3., 4.) };\n    |                                                  ^^ help: consider adding suffix: `4.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:21:23\n+  --> $DIR/default_numeric_fallback_f64.rs:24:23\n    |\n LL |         let x = match 1. {\n    |                       ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:22:18\n+  --> $DIR/default_numeric_fallback_f64.rs:25:18\n    |\n LL |             _ => 1.,\n    |                  ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:40:21\n+  --> $DIR/default_numeric_fallback_f64.rs:43:21\n    |\n LL |             let y = 1.;\n    |                     ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:48:21\n+  --> $DIR/default_numeric_fallback_f64.rs:51:21\n    |\n LL |             let y = 1.;\n    |                     ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:54:21\n+  --> $DIR/default_numeric_fallback_f64.rs:57:21\n    |\n LL |             let y = 1.;\n    |                     ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:66:9\n+  --> $DIR/default_numeric_fallback_f64.rs:69:9\n    |\n LL |         1.\n    |         ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:72:27\n+  --> $DIR/default_numeric_fallback_f64.rs:75:27\n    |\n LL |         let f = || -> _ { 1. };\n    |                           ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:76:29\n+  --> $DIR/default_numeric_fallback_f64.rs:79:29\n    |\n LL |         let f = || -> f64 { 1. };\n    |                             ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:90:21\n+  --> $DIR/default_numeric_fallback_f64.rs:93:21\n    |\n LL |         generic_arg(1.);\n    |                     ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:93:32\n+  --> $DIR/default_numeric_fallback_f64.rs:96:32\n    |\n LL |         let x: _ = generic_arg(1.);\n    |                                ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:111:28\n+  --> $DIR/default_numeric_fallback_f64.rs:114:28\n    |\n LL |         GenericStruct { x: 1. };\n    |                            ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:114:36\n+  --> $DIR/default_numeric_fallback_f64.rs:117:36\n    |\n LL |         let _ = GenericStruct { x: 1. };\n    |                                    ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:132:24\n+  --> $DIR/default_numeric_fallback_f64.rs:135:24\n    |\n LL |         GenericEnum::X(1.);\n    |                        ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:152:23\n+  --> $DIR/default_numeric_fallback_f64.rs:155:23\n    |\n LL |         s.generic_arg(1.);\n    |                       ^^ help: consider adding suffix: `1.0_f64`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_f64.rs:159:21\n+  --> $DIR/default_numeric_fallback_f64.rs:162:21\n    |\n LL |             let x = 22.;\n    |                     ^^^ help: consider adding suffix: `22.0_f64`"}, {"sha": "fa85d278c8fcad8c82cd3fba79a9de7d81dcd287", "filename": "tests/ui/default_numeric_fallback_i32.fixed", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdefault_numeric_fallback_i32.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdefault_numeric_fallback_i32.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_numeric_fallback_i32.fixed?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -2,11 +2,14 @@\n // aux-build:macro_rules.rs\n \n #![warn(clippy::default_numeric_fallback)]\n-#![allow(unused)]\n-#![allow(clippy::never_loop)]\n-#![allow(clippy::no_effect)]\n-#![allow(clippy::unnecessary_operation)]\n-#![allow(clippy::branches_sharing_code)]\n+#![allow(\n+    unused,\n+    clippy::never_loop,\n+    clippy::no_effect,\n+    clippy::unnecessary_operation,\n+    clippy::branches_sharing_code,\n+    clippy::let_unit_value\n+)]\n \n #[macro_use]\n extern crate macro_rules;"}, {"sha": "71acccd702b062de3964431c62fdf4bed3e1c88b", "filename": "tests/ui/default_numeric_fallback_i32.rs", "status": "modified", "additions": 8, "deletions": 5, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdefault_numeric_fallback_i32.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdefault_numeric_fallback_i32.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_numeric_fallback_i32.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -2,11 +2,14 @@\n // aux-build:macro_rules.rs\n \n #![warn(clippy::default_numeric_fallback)]\n-#![allow(unused)]\n-#![allow(clippy::never_loop)]\n-#![allow(clippy::no_effect)]\n-#![allow(clippy::unnecessary_operation)]\n-#![allow(clippy::branches_sharing_code)]\n+#![allow(\n+    unused,\n+    clippy::never_loop,\n+    clippy::no_effect,\n+    clippy::unnecessary_operation,\n+    clippy::branches_sharing_code,\n+    clippy::let_unit_value\n+)]\n \n #[macro_use]\n extern crate macro_rules;"}, {"sha": "3cc84ff1132321873e65e03dcde9d1017e75b379", "filename": "tests/ui/default_numeric_fallback_i32.stderr", "status": "modified", "additions": 25, "deletions": 25, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdefault_numeric_fallback_i32.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdefault_numeric_fallback_i32.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdefault_numeric_fallback_i32.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,151 +1,151 @@\n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:17:17\n+  --> $DIR/default_numeric_fallback_i32.rs:20:17\n    |\n LL |         let x = 22;\n    |                 ^^ help: consider adding suffix: `22_i32`\n    |\n    = note: `-D clippy::default-numeric-fallback` implied by `-D warnings`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:18:18\n+  --> $DIR/default_numeric_fallback_i32.rs:21:18\n    |\n LL |         let x = [1, 2, 3];\n    |                  ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:18:21\n+  --> $DIR/default_numeric_fallback_i32.rs:21:21\n    |\n LL |         let x = [1, 2, 3];\n    |                     ^ help: consider adding suffix: `2_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:18:24\n+  --> $DIR/default_numeric_fallback_i32.rs:21:24\n    |\n LL |         let x = [1, 2, 3];\n    |                        ^ help: consider adding suffix: `3_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:19:28\n+  --> $DIR/default_numeric_fallback_i32.rs:22:28\n    |\n LL |         let x = if true { (1, 2) } else { (3, 4) };\n    |                            ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:19:31\n+  --> $DIR/default_numeric_fallback_i32.rs:22:31\n    |\n LL |         let x = if true { (1, 2) } else { (3, 4) };\n    |                               ^ help: consider adding suffix: `2_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:19:44\n+  --> $DIR/default_numeric_fallback_i32.rs:22:44\n    |\n LL |         let x = if true { (1, 2) } else { (3, 4) };\n    |                                            ^ help: consider adding suffix: `3_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:19:47\n+  --> $DIR/default_numeric_fallback_i32.rs:22:47\n    |\n LL |         let x = if true { (1, 2) } else { (3, 4) };\n    |                                               ^ help: consider adding suffix: `4_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:20:23\n+  --> $DIR/default_numeric_fallback_i32.rs:23:23\n    |\n LL |         let x = match 1 {\n    |                       ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:21:13\n+  --> $DIR/default_numeric_fallback_i32.rs:24:13\n    |\n LL |             1 => 1,\n    |             ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:21:18\n+  --> $DIR/default_numeric_fallback_i32.rs:24:18\n    |\n LL |             1 => 1,\n    |                  ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:22:18\n+  --> $DIR/default_numeric_fallback_i32.rs:25:18\n    |\n LL |             _ => 2,\n    |                  ^ help: consider adding suffix: `2_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:39:21\n+  --> $DIR/default_numeric_fallback_i32.rs:42:21\n    |\n LL |             let y = 1;\n    |                     ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:47:21\n+  --> $DIR/default_numeric_fallback_i32.rs:50:21\n    |\n LL |             let y = 1;\n    |                     ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:53:21\n+  --> $DIR/default_numeric_fallback_i32.rs:56:21\n    |\n LL |             let y = 1;\n    |                     ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:65:9\n+  --> $DIR/default_numeric_fallback_i32.rs:68:9\n    |\n LL |         1\n    |         ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:71:27\n+  --> $DIR/default_numeric_fallback_i32.rs:74:27\n    |\n LL |         let f = || -> _ { 1 };\n    |                           ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:75:29\n+  --> $DIR/default_numeric_fallback_i32.rs:78:29\n    |\n LL |         let f = || -> i32 { 1 };\n    |                             ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:89:21\n+  --> $DIR/default_numeric_fallback_i32.rs:92:21\n    |\n LL |         generic_arg(1);\n    |                     ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:92:32\n+  --> $DIR/default_numeric_fallback_i32.rs:95:32\n    |\n LL |         let x: _ = generic_arg(1);\n    |                                ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:110:28\n+  --> $DIR/default_numeric_fallback_i32.rs:113:28\n    |\n LL |         GenericStruct { x: 1 };\n    |                            ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:113:36\n+  --> $DIR/default_numeric_fallback_i32.rs:116:36\n    |\n LL |         let _ = GenericStruct { x: 1 };\n    |                                    ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:131:24\n+  --> $DIR/default_numeric_fallback_i32.rs:134:24\n    |\n LL |         GenericEnum::X(1);\n    |                        ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:151:23\n+  --> $DIR/default_numeric_fallback_i32.rs:154:23\n    |\n LL |         s.generic_arg(1);\n    |                       ^ help: consider adding suffix: `1_i32`\n \n error: default numeric fallback might occur\n-  --> $DIR/default_numeric_fallback_i32.rs:158:21\n+  --> $DIR/default_numeric_fallback_i32.rs:161:21\n    |\n LL |             let x = 22;\n    |                     ^^ help: consider adding suffix: `22_i32`"}, {"sha": "b91f7aa0dd8d2bfe51710c8ab57adea3861d498d", "filename": "tests/ui/doc_unsafe.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdoc_unsafe.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdoc_unsafe.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc_unsafe.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,5 +1,7 @@\n // aux-build:doc_unsafe_macros.rs\n \n+#![allow(clippy::let_unit_value)]\n+\n #[macro_use]\n extern crate doc_unsafe_macros;\n "}, {"sha": "904b88eaef62280a1a56991466904e7afd57ef9c", "filename": "tests/ui/doc_unsafe.stderr", "status": "modified", "additions": 6, "deletions": 6, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdoc_unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fdoc_unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fdoc_unsafe.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,5 +1,5 @@\n error: unsafe function's docs miss `# Safety` section\n-  --> $DIR/doc_unsafe.rs:7:1\n+  --> $DIR/doc_unsafe.rs:9:1\n    |\n LL | / pub unsafe fn destroy_the_planet() {\n LL | |     unimplemented!();\n@@ -9,37 +9,37 @@ LL | | }\n    = note: `-D clippy::missing-safety-doc` implied by `-D warnings`\n \n error: unsafe function's docs miss `# Safety` section\n-  --> $DIR/doc_unsafe.rs:30:5\n+  --> $DIR/doc_unsafe.rs:32:5\n    |\n LL | /     pub unsafe fn republished() {\n LL | |         unimplemented!();\n LL | |     }\n    | |_____^\n \n error: unsafe function's docs miss `# Safety` section\n-  --> $DIR/doc_unsafe.rs:38:5\n+  --> $DIR/doc_unsafe.rs:40:5\n    |\n LL |     unsafe fn woefully_underdocumented(self);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: docs for unsafe trait missing `# Safety` section\n-  --> $DIR/doc_unsafe.rs:44:1\n+  --> $DIR/doc_unsafe.rs:46:1\n    |\n LL | / pub unsafe trait UnsafeTrait {\n LL | |     fn method();\n LL | | }\n    | |_^\n \n error: unsafe function's docs miss `# Safety` section\n-  --> $DIR/doc_unsafe.rs:74:5\n+  --> $DIR/doc_unsafe.rs:76:5\n    |\n LL | /     pub unsafe fn more_undocumented_unsafe() -> Self {\n LL | |         unimplemented!();\n LL | |     }\n    | |_____^\n \n error: unsafe function's docs miss `# Safety` section\n-  --> $DIR/doc_unsafe.rs:90:9\n+  --> $DIR/doc_unsafe.rs:92:9\n    |\n LL | /         pub unsafe fn whee() {\n LL | |             unimplemented!()"}, {"sha": "7c2b05d837ba89828bff9c637927f78e54cbc2b6", "filename": "tests/ui/iter_overeager_cloned.fixed", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fiter_overeager_cloned.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fiter_overeager_cloned.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_overeager_cloned.fixed?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n #![warn(clippy::iter_overeager_cloned, clippy::redundant_clone, clippy::filter_next)]\n-#![allow(dead_code)]\n+#![allow(dead_code, clippy::let_unit_value)]\n \n fn main() {\n     let vec = vec![\"1\".to_string(), \"2\".to_string(), \"3\".to_string()];"}, {"sha": "f2d0b155d2c2aa20553caee5e59618d6fc1e923f", "filename": "tests/ui/iter_overeager_cloned.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fiter_overeager_cloned.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fiter_overeager_cloned.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fiter_overeager_cloned.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,6 +1,6 @@\n // run-rustfix\n #![warn(clippy::iter_overeager_cloned, clippy::redundant_clone, clippy::filter_next)]\n-#![allow(dead_code)]\n+#![allow(dead_code, clippy::let_unit_value)]\n \n fn main() {\n     let vec = vec![\"1\".to_string(), \"2\".to_string(), \"3\".to_string()];"}, {"sha": "11b50492ab29055ec6223164a2a768a53b9083a8", "filename": "tests/ui/let_underscore_drop.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Flet_underscore_drop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Flet_underscore_drop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_drop.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::let_underscore_drop)]\n+#![allow(clippy::let_unit_value)]\n \n struct Droppable;\n "}, {"sha": "ee7bbe995f1684e28bbf064d9cd79cdb2e6c4257", "filename": "tests/ui/let_underscore_drop.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Flet_underscore_drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Flet_underscore_drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Flet_underscore_drop.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,5 +1,5 @@\n error: non-binding `let` on a type that implements `Drop`\n-  --> $DIR/let_underscore_drop.rs:16:5\n+  --> $DIR/let_underscore_drop.rs:17:5\n    |\n LL |     let _ = Box::new(());\n    |     ^^^^^^^^^^^^^^^^^^^^^\n@@ -8,15 +8,15 @@ LL |     let _ = Box::new(());\n    = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n \n error: non-binding `let` on a type that implements `Drop`\n-  --> $DIR/let_underscore_drop.rs:17:5\n+  --> $DIR/let_underscore_drop.rs:18:5\n    |\n LL |     let _ = Droppable;\n    |     ^^^^^^^^^^^^^^^^^^\n    |\n    = help: consider using an underscore-prefixed named binding or dropping explicitly with `std::mem::drop`\n \n error: non-binding `let` on a type that implements `Drop`\n-  --> $DIR/let_underscore_drop.rs:18:5\n+  --> $DIR/let_underscore_drop.rs:19:5\n    |\n LL |     let _ = Some(Droppable);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "c1685f7b6d7adeba6f5783c4cb7320d669c61904", "filename": "tests/ui/needless_for_each_fixable.fixed", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fneedless_for_each_fixable.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fneedless_for_each_fixable.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_for_each_fixable.fixed?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,6 +1,11 @@\n // run-rustfix\n #![warn(clippy::needless_for_each)]\n-#![allow(unused, clippy::needless_return, clippy::match_single_binding)]\n+#![allow(\n+    unused,\n+    clippy::needless_return,\n+    clippy::match_single_binding,\n+    clippy::let_unit_value\n+)]\n \n use std::collections::HashMap;\n "}, {"sha": "ad17b0956fa93149d2fe436ae3e22755ba1edeb2", "filename": "tests/ui/needless_for_each_fixable.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fneedless_for_each_fixable.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fneedless_for_each_fixable.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_for_each_fixable.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,6 +1,11 @@\n // run-rustfix\n #![warn(clippy::needless_for_each)]\n-#![allow(unused, clippy::needless_return, clippy::match_single_binding)]\n+#![allow(\n+    unused,\n+    clippy::needless_return,\n+    clippy::match_single_binding,\n+    clippy::let_unit_value\n+)]\n \n use std::collections::HashMap;\n "}, {"sha": "08e995851d7a5c9717bbb5e7c9a7239a80003ae9", "filename": "tests/ui/needless_for_each_fixable.stderr", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fneedless_for_each_fixable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fneedless_for_each_fixable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_for_each_fixable.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,5 +1,5 @@\n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:10:5\n+  --> $DIR/needless_for_each_fixable.rs:15:5\n    |\n LL | /     v.iter().for_each(|elem| {\n LL | |         acc += elem;\n@@ -15,7 +15,7 @@ LL +     }\n    |\n \n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:13:5\n+  --> $DIR/needless_for_each_fixable.rs:18:5\n    |\n LL | /     v.into_iter().for_each(|elem| {\n LL | |         acc += elem;\n@@ -30,7 +30,7 @@ LL +     }\n    |\n \n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:17:5\n+  --> $DIR/needless_for_each_fixable.rs:22:5\n    |\n LL | /     [1, 2, 3].iter().for_each(|elem| {\n LL | |         acc += elem;\n@@ -45,7 +45,7 @@ LL +     }\n    |\n \n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:22:5\n+  --> $DIR/needless_for_each_fixable.rs:27:5\n    |\n LL | /     hash_map.iter().for_each(|(k, v)| {\n LL | |         acc += k + v;\n@@ -60,7 +60,7 @@ LL +     }\n    |\n \n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:25:5\n+  --> $DIR/needless_for_each_fixable.rs:30:5\n    |\n LL | /     hash_map.iter_mut().for_each(|(k, v)| {\n LL | |         acc += *k + *v;\n@@ -75,7 +75,7 @@ LL +     }\n    |\n \n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:28:5\n+  --> $DIR/needless_for_each_fixable.rs:33:5\n    |\n LL | /     hash_map.keys().for_each(|k| {\n LL | |         acc += k;\n@@ -90,7 +90,7 @@ LL +     }\n    |\n \n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:31:5\n+  --> $DIR/needless_for_each_fixable.rs:36:5\n    |\n LL | /     hash_map.values().for_each(|v| {\n LL | |         acc += v;\n@@ -105,7 +105,7 @@ LL +     }\n    |\n \n error: needless use of `for_each`\n-  --> $DIR/needless_for_each_fixable.rs:38:5\n+  --> $DIR/needless_for_each_fixable.rs:43:5\n    |\n LL | /     my_vec().iter().for_each(|elem| {\n LL | |         acc += elem;"}, {"sha": "3cfbfb6033bd89ee42a8ec7c7693599ecaf143e2", "filename": "tests/ui/needless_late_init.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fneedless_late_init.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fneedless_late_init.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,4 +1,5 @@\n #![allow(unused)]\n+#![allow(clippy::let_unit_value)]\n \n fn main() {\n     let a;"}, {"sha": "9ef8bb23df6a6230b034ef5547ada393056b1328", "filename": "tests/ui/needless_late_init.stderr", "status": "modified", "additions": 9, "deletions": 9, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fneedless_late_init.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fneedless_late_init.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fneedless_late_init.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,5 +1,5 @@\n error: unneeded late initalization\n-  --> $DIR/needless_late_init.rs:4:5\n+  --> $DIR/needless_late_init.rs:5:5\n    |\n LL |     let a;\n    |     ^^^^^^\n@@ -21,7 +21,7 @@ LL |     };\n    |      +\n \n error: unneeded late initalization\n-  --> $DIR/needless_late_init.rs:13:5\n+  --> $DIR/needless_late_init.rs:14:5\n    |\n LL |     let b;\n    |     ^^^^^^\n@@ -42,7 +42,7 @@ LL |     };\n    |      +\n \n error: unneeded late initalization\n-  --> $DIR/needless_late_init.rs:20:5\n+  --> $DIR/needless_late_init.rs:21:5\n    |\n LL |     let c;\n    |     ^^^^^^\n@@ -63,7 +63,7 @@ LL |     };\n    |      +\n \n error: unneeded late initalization\n-  --> $DIR/needless_late_init.rs:27:5\n+  --> $DIR/needless_late_init.rs:28:5\n    |\n LL |     let d;\n    |     ^^^^^^\n@@ -84,7 +84,7 @@ LL |     };\n    |      +\n \n error: unneeded late initalization\n-  --> $DIR/needless_late_init.rs:35:5\n+  --> $DIR/needless_late_init.rs:36:5\n    |\n LL |     let e;\n    |     ^^^^^^\n@@ -105,7 +105,7 @@ LL |     };\n    |      +\n \n error: unneeded late initalization\n-  --> $DIR/needless_late_init.rs:42:5\n+  --> $DIR/needless_late_init.rs:43:5\n    |\n LL |     let f;\n    |     ^^^^^^\n@@ -121,7 +121,7 @@ LL +         1 => \"three\",\n    | \n \n error: unneeded late initalization\n-  --> $DIR/needless_late_init.rs:48:5\n+  --> $DIR/needless_late_init.rs:49:5\n    |\n LL |     let g: usize;\n    |     ^^^^^^^^^^^^^\n@@ -141,7 +141,7 @@ LL |     };\n    |      +\n \n error: unneeded late initalization\n-  --> $DIR/needless_late_init.rs:63:5\n+  --> $DIR/needless_late_init.rs:64:5\n    |\n LL |     let a;\n    |     ^^^^^^\n@@ -162,7 +162,7 @@ LL |     };\n    |      +\n \n error: unneeded late initalization\n-  --> $DIR/needless_late_init.rs:80:5\n+  --> $DIR/needless_late_init.rs:81:5\n    |\n LL |     let a;\n    |     ^^^^^^"}, {"sha": "583096ac054a15dcc076570b91eb6991d84c258c", "filename": "tests/ui/non_expressive_names.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fnon_expressive_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fnon_expressive_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fnon_expressive_names.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,5 +1,5 @@\n #![warn(clippy::all)]\n-#![allow(unused, clippy::println_empty_string, non_snake_case)]\n+#![allow(unused, clippy::println_empty_string, non_snake_case, clippy::let_unit_value)]\n \n #[derive(Clone, Debug)]\n enum MaybeInst {"}, {"sha": "e12e13a57f1f0b43286aa3b2cf498e385566342e", "filename": "tests/ui/option_if_let_else.fixed", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Foption_if_let_else.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Foption_if_let_else.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.fixed?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,6 +1,11 @@\n // run-rustfix\n #![warn(clippy::option_if_let_else)]\n-#![allow(clippy::redundant_closure, clippy::ref_option_ref, clippy::equatable_if_let)]\n+#![allow(\n+    clippy::redundant_closure,\n+    clippy::ref_option_ref,\n+    clippy::equatable_if_let,\n+    clippy::let_unit_value\n+)]\n \n fn bad1(string: Option<&str>) -> (bool, &str) {\n     string.map_or((false, \"hello\"), |x| (true, x))"}, {"sha": "b5206fc26a9e13ae091cfe7cbdb528d56c19901a", "filename": "tests/ui/option_if_let_else.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Foption_if_let_else.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Foption_if_let_else.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,6 +1,11 @@\n // run-rustfix\n #![warn(clippy::option_if_let_else)]\n-#![allow(clippy::redundant_closure, clippy::ref_option_ref, clippy::equatable_if_let)]\n+#![allow(\n+    clippy::redundant_closure,\n+    clippy::ref_option_ref,\n+    clippy::equatable_if_let,\n+    clippy::let_unit_value\n+)]\n \n fn bad1(string: Option<&str>) -> (bool, &str) {\n     if let Some(x) = string {"}, {"sha": "40aef977b989bfd057c7c7fb1b4b7805fd79e08f", "filename": "tests/ui/option_if_let_else.stderr", "status": "modified", "additions": 15, "deletions": 15, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Foption_if_let_else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Foption_if_let_else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Foption_if_let_else.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,5 +1,5 @@\n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:6:5\n+  --> $DIR/option_if_let_else.rs:11:5\n    |\n LL | /     if let Some(x) = string {\n LL | |         (true, x)\n@@ -11,19 +11,19 @@ LL | |     }\n    = note: `-D clippy::option-if-let-else` implied by `-D warnings`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:24:13\n+  --> $DIR/option_if_let_else.rs:29:13\n    |\n LL |     let _ = if let Some(s) = *string { s.len() } else { 0 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `string.map_or(0, |s| s.len())`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:25:13\n+  --> $DIR/option_if_let_else.rs:30:13\n    |\n LL |     let _ = if let Some(s) = &num { s } else { &0 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `num.as_ref().map_or(&0, |s| s)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:26:13\n+  --> $DIR/option_if_let_else.rs:31:13\n    |\n LL |       let _ = if let Some(s) = &mut num {\n    |  _____________^\n@@ -43,13 +43,13 @@ LL ~     });\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:32:13\n+  --> $DIR/option_if_let_else.rs:37:13\n    |\n LL |     let _ = if let Some(ref s) = num { s } else { &0 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `num.as_ref().map_or(&0, |s| s)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:33:13\n+  --> $DIR/option_if_let_else.rs:38:13\n    |\n LL |       let _ = if let Some(mut s) = num {\n    |  _____________^\n@@ -69,7 +69,7 @@ LL ~     });\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:39:13\n+  --> $DIR/option_if_let_else.rs:44:13\n    |\n LL |       let _ = if let Some(ref mut s) = num {\n    |  _____________^\n@@ -89,7 +89,7 @@ LL ~     });\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:48:5\n+  --> $DIR/option_if_let_else.rs:53:5\n    |\n LL | /     if let Some(x) = arg {\n LL | |         let y = x * x;\n@@ -108,7 +108,7 @@ LL +     })\n    |\n \n error: use Option::map_or_else instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:61:13\n+  --> $DIR/option_if_let_else.rs:66:13\n    |\n LL |       let _ = if let Some(x) = arg {\n    |  _____________^\n@@ -120,7 +120,7 @@ LL | |     };\n    | |_____^ help: try: `arg.map_or_else(|| side_effect(), |x| x)`\n \n error: use Option::map_or_else instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:70:13\n+  --> $DIR/option_if_let_else.rs:75:13\n    |\n LL |       let _ = if let Some(x) = arg {\n    |  _____________^\n@@ -143,7 +143,7 @@ LL ~     }, |x| x * x * x * x);\n    |\n \n error: use Option::map_or_else instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:103:13\n+  --> $DIR/option_if_let_else.rs:108:13\n    |\n LL | /             if let Some(idx) = s.find('.') {\n LL | |                 vec![s[..idx].to_string(), s[idx..].to_string()]\n@@ -153,13 +153,13 @@ LL | |             }\n    | |_____________^ help: try: `s.find('.').map_or_else(|| vec![s.to_string()], |idx| vec![s[..idx].to_string(), s[idx..].to_string()])`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:127:13\n+  --> $DIR/option_if_let_else.rs:132:13\n    |\n LL |     let _ = if let Some(x) = optional { x + 2 } else { 5 };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `optional.map_or(5, |x| x + 2)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:136:13\n+  --> $DIR/option_if_let_else.rs:141:13\n    |\n LL |       let _ = if let Some(x) = Some(0) {\n    |  _____________^\n@@ -181,13 +181,13 @@ LL ~         });\n    |\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:164:13\n+  --> $DIR/option_if_let_else.rs:169:13\n    |\n LL |     let _ = if let Some(x) = Some(0) { s.len() + x } else { s.len() };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `Some(0).map_or(s.len(), |x| s.len() + x)`\n \n error: use Option::map_or instead of an if let/else\n-  --> $DIR/option_if_let_else.rs:168:13\n+  --> $DIR/option_if_let_else.rs:173:13\n    |\n LL |       let _ = if let Some(x) = Some(0) {\n    |  _____________^"}, {"sha": "a394ef8f25c675b529db3c275eb97308fe835b5b", "filename": "tests/ui/shadow.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fshadow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fshadow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshadow.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::shadow_same, clippy::shadow_reuse, clippy::shadow_unrelated)]\n+#![allow(clippy::let_unit_value)]\n \n fn shadow_same() {\n     let x = 1;"}, {"sha": "3bd41d0626049da49e07ce5c0f50ce10c6f2c0d4", "filename": "tests/ui/shadow.stderr", "status": "modified", "additions": 44, "deletions": 44, "changes": 88, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fshadow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fshadow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fshadow.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,266 +1,266 @@\n error: `x` is shadowed by itself in `x`\n-  --> $DIR/shadow.rs:5:9\n+  --> $DIR/shadow.rs:6:9\n    |\n LL |     let x = x;\n    |         ^\n    |\n    = note: `-D clippy::shadow-same` implied by `-D warnings`\n note: previous binding is here\n-  --> $DIR/shadow.rs:4:9\n+  --> $DIR/shadow.rs:5:9\n    |\n LL |     let x = 1;\n    |         ^\n \n error: `mut x` is shadowed by itself in `&x`\n-  --> $DIR/shadow.rs:6:13\n+  --> $DIR/shadow.rs:7:13\n    |\n LL |     let mut x = &x;\n    |             ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:5:9\n+  --> $DIR/shadow.rs:6:9\n    |\n LL |     let x = x;\n    |         ^\n \n error: `x` is shadowed by itself in `&mut x`\n-  --> $DIR/shadow.rs:7:9\n+  --> $DIR/shadow.rs:8:9\n    |\n LL |     let x = &mut x;\n    |         ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:6:9\n+  --> $DIR/shadow.rs:7:9\n    |\n LL |     let mut x = &x;\n    |         ^^^^^\n \n error: `x` is shadowed by itself in `*x`\n-  --> $DIR/shadow.rs:8:9\n+  --> $DIR/shadow.rs:9:9\n    |\n LL |     let x = *x;\n    |         ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:7:9\n+  --> $DIR/shadow.rs:8:9\n    |\n LL |     let x = &mut x;\n    |         ^\n \n error: `x` is shadowed\n-  --> $DIR/shadow.rs:13:9\n+  --> $DIR/shadow.rs:14:9\n    |\n LL |     let x = x.0;\n    |         ^\n    |\n    = note: `-D clippy::shadow-reuse` implied by `-D warnings`\n note: previous binding is here\n-  --> $DIR/shadow.rs:12:9\n+  --> $DIR/shadow.rs:13:9\n    |\n LL |     let x = ([[0]], ());\n    |         ^\n \n error: `x` is shadowed\n-  --> $DIR/shadow.rs:14:9\n+  --> $DIR/shadow.rs:15:9\n    |\n LL |     let x = x[0];\n    |         ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:13:9\n+  --> $DIR/shadow.rs:14:9\n    |\n LL |     let x = x.0;\n    |         ^\n \n error: `x` is shadowed\n-  --> $DIR/shadow.rs:15:10\n+  --> $DIR/shadow.rs:16:10\n    |\n LL |     let [x] = x;\n    |          ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:14:9\n+  --> $DIR/shadow.rs:15:9\n    |\n LL |     let x = x[0];\n    |         ^\n \n error: `x` is shadowed\n-  --> $DIR/shadow.rs:16:9\n+  --> $DIR/shadow.rs:17:9\n    |\n LL |     let x = Some(x);\n    |         ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:15:10\n+  --> $DIR/shadow.rs:16:10\n    |\n LL |     let [x] = x;\n    |          ^\n \n error: `x` is shadowed\n-  --> $DIR/shadow.rs:17:9\n+  --> $DIR/shadow.rs:18:9\n    |\n LL |     let x = foo(x);\n    |         ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:16:9\n+  --> $DIR/shadow.rs:17:9\n    |\n LL |     let x = Some(x);\n    |         ^\n \n error: `x` is shadowed\n-  --> $DIR/shadow.rs:18:9\n+  --> $DIR/shadow.rs:19:9\n    |\n LL |     let x = || x;\n    |         ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:17:9\n+  --> $DIR/shadow.rs:18:9\n    |\n LL |     let x = foo(x);\n    |         ^\n \n error: `x` is shadowed\n-  --> $DIR/shadow.rs:19:9\n+  --> $DIR/shadow.rs:20:9\n    |\n LL |     let x = Some(1).map(|_| x)?;\n    |         ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:18:9\n+  --> $DIR/shadow.rs:19:9\n    |\n LL |     let x = || x;\n    |         ^\n \n error: `y` is shadowed\n-  --> $DIR/shadow.rs:21:9\n+  --> $DIR/shadow.rs:22:9\n    |\n LL |     let y = match y {\n    |         ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:20:9\n+  --> $DIR/shadow.rs:21:9\n    |\n LL |     let y = 1;\n    |         ^\n \n error: `x` shadows a previous, unrelated binding\n-  --> $DIR/shadow.rs:30:9\n+  --> $DIR/shadow.rs:31:9\n    |\n LL |     let x = 2;\n    |         ^\n    |\n    = note: `-D clippy::shadow-unrelated` implied by `-D warnings`\n note: previous binding is here\n-  --> $DIR/shadow.rs:29:9\n+  --> $DIR/shadow.rs:30:9\n    |\n LL |     let x = 1;\n    |         ^\n \n error: `x` shadows a previous, unrelated binding\n-  --> $DIR/shadow.rs:35:13\n+  --> $DIR/shadow.rs:36:13\n    |\n LL |         let x = 1;\n    |             ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:34:10\n+  --> $DIR/shadow.rs:35:10\n    |\n LL |     fn f(x: u32) {\n    |          ^\n \n error: `x` shadows a previous, unrelated binding\n-  --> $DIR/shadow.rs:40:14\n+  --> $DIR/shadow.rs:41:14\n    |\n LL |         Some(x) => {\n    |              ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:37:9\n+  --> $DIR/shadow.rs:38:9\n    |\n LL |     let x = 1;\n    |         ^\n \n error: `x` shadows a previous, unrelated binding\n-  --> $DIR/shadow.rs:41:17\n+  --> $DIR/shadow.rs:42:17\n    |\n LL |             let x = 1;\n    |                 ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:40:14\n+  --> $DIR/shadow.rs:41:14\n    |\n LL |         Some(x) => {\n    |              ^\n \n error: `x` shadows a previous, unrelated binding\n-  --> $DIR/shadow.rs:45:17\n+  --> $DIR/shadow.rs:46:17\n    |\n LL |     if let Some(x) = Some(1) {}\n    |                 ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:37:9\n+  --> $DIR/shadow.rs:38:9\n    |\n LL |     let x = 1;\n    |         ^\n \n error: `x` shadows a previous, unrelated binding\n-  --> $DIR/shadow.rs:46:20\n+  --> $DIR/shadow.rs:47:20\n    |\n LL |     while let Some(x) = Some(1) {}\n    |                    ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:37:9\n+  --> $DIR/shadow.rs:38:9\n    |\n LL |     let x = 1;\n    |         ^\n \n error: `x` shadows a previous, unrelated binding\n-  --> $DIR/shadow.rs:47:15\n+  --> $DIR/shadow.rs:48:15\n    |\n LL |     let _ = |[x]: [u32; 1]| {\n    |               ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:37:9\n+  --> $DIR/shadow.rs:38:9\n    |\n LL |     let x = 1;\n    |         ^\n \n error: `x` shadows a previous, unrelated binding\n-  --> $DIR/shadow.rs:48:13\n+  --> $DIR/shadow.rs:49:13\n    |\n LL |         let x = 1;\n    |             ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:47:15\n+  --> $DIR/shadow.rs:48:15\n    |\n LL |     let _ = |[x]: [u32; 1]| {\n    |               ^\n \n error: `y` is shadowed\n-  --> $DIR/shadow.rs:51:17\n+  --> $DIR/shadow.rs:52:17\n    |\n LL |     if let Some(y) = y {}\n    |                 ^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:50:9\n+  --> $DIR/shadow.rs:51:9\n    |\n LL |     let y = Some(1);\n    |         ^\n \n error: `_b` shadows a previous, unrelated binding\n-  --> $DIR/shadow.rs:87:9\n+  --> $DIR/shadow.rs:88:9\n    |\n LL |     let _b = _a;\n    |         ^^\n    |\n note: previous binding is here\n-  --> $DIR/shadow.rs:86:28\n+  --> $DIR/shadow.rs:87:28\n    |\n LL | pub async fn foo2(_a: i32, _b: i64) {\n    |                            ^^"}, {"sha": "c21225d153bd6cf7d928592030e8e44a25cb1cc2", "filename": "tests/ui/similar_names.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fsimilar_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fsimilar_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsimilar_names.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -3,7 +3,8 @@\n     unused,\n     clippy::println_empty_string,\n     clippy::empty_loop,\n-    clippy::diverging_sub_expression\n+    clippy::diverging_sub_expression,\n+    clippy::let_unit_value\n )]\n \n struct Foo {"}, {"sha": "6e77269389737946b636198d686918ec9e8b2f5a", "filename": "tests/ui/similar_names.stderr", "status": "modified", "additions": 14, "deletions": 14, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fsimilar_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fsimilar_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsimilar_names.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,84 +1,84 @@\n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:20:9\n+  --> $DIR/similar_names.rs:21:9\n    |\n LL |     let bpple: i32;\n    |         ^^^^^\n    |\n    = note: `-D clippy::similar-names` implied by `-D warnings`\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:18:9\n+  --> $DIR/similar_names.rs:19:9\n    |\n LL |     let apple: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:22:9\n+  --> $DIR/similar_names.rs:23:9\n    |\n LL |     let cpple: i32;\n    |         ^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:18:9\n+  --> $DIR/similar_names.rs:19:9\n    |\n LL |     let apple: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:46:9\n+  --> $DIR/similar_names.rs:47:9\n    |\n LL |     let bluby: i32;\n    |         ^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:45:9\n+  --> $DIR/similar_names.rs:46:9\n    |\n LL |     let blubx: i32;\n    |         ^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:50:9\n+  --> $DIR/similar_names.rs:51:9\n    |\n LL |     let coke: i32;\n    |         ^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:48:9\n+  --> $DIR/similar_names.rs:49:9\n    |\n LL |     let cake: i32;\n    |         ^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:68:9\n+  --> $DIR/similar_names.rs:69:9\n    |\n LL |     let xyzeabc: i32;\n    |         ^^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:66:9\n+  --> $DIR/similar_names.rs:67:9\n    |\n LL |     let xyz1abc: i32;\n    |         ^^^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:72:9\n+  --> $DIR/similar_names.rs:73:9\n    |\n LL |     let parsee: i32;\n    |         ^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:70:9\n+  --> $DIR/similar_names.rs:71:9\n    |\n LL |     let parser: i32;\n    |         ^^^^^^\n \n error: binding's name is too similar to existing binding\n-  --> $DIR/similar_names.rs:93:16\n+  --> $DIR/similar_names.rs:94:16\n    |\n LL |         bpple: sprang,\n    |                ^^^^^^\n    |\n note: existing binding defined here\n-  --> $DIR/similar_names.rs:92:16\n+  --> $DIR/similar_names.rs:93:16\n    |\n LL |         apple: spring,\n    |                ^^^^^^"}, {"sha": "69c5b236f7cf8dea4d221d6c444cc7fcb12e058e", "filename": "tests/ui/single_char_lifetime_names.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fsingle_char_lifetime_names.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fsingle_char_lifetime_names.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_lifetime_names.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::single_char_lifetime_names)]\n+#![allow(clippy::let_unit_value)]\n \n // Lifetimes should only be linted when they're introduced\n struct DiagnosticCtx<'a, 'b>"}, {"sha": "1438b3999dba85ad1b4ddc810854958fb0296dfb", "filename": "tests/ui/single_char_lifetime_names.stderr", "status": "modified", "additions": 5, "deletions": 5, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fsingle_char_lifetime_names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fsingle_char_lifetime_names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsingle_char_lifetime_names.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,5 +1,5 @@\n error: single-character lifetime names are likely uninformative\n-  --> $DIR/single_char_lifetime_names.rs:4:22\n+  --> $DIR/single_char_lifetime_names.rs:5:22\n    |\n LL | struct DiagnosticCtx<'a, 'b>\n    |                      ^^\n@@ -8,31 +8,31 @@ LL | struct DiagnosticCtx<'a, 'b>\n    = help: use a more informative name\n \n error: single-character lifetime names are likely uninformative\n-  --> $DIR/single_char_lifetime_names.rs:4:26\n+  --> $DIR/single_char_lifetime_names.rs:5:26\n    |\n LL | struct DiagnosticCtx<'a, 'b>\n    |                          ^^\n    |\n    = help: use a more informative name\n \n error: single-character lifetime names are likely uninformative\n-  --> $DIR/single_char_lifetime_names.rs:13:6\n+  --> $DIR/single_char_lifetime_names.rs:14:6\n    |\n LL | impl<'a, 'b> DiagnosticCtx<'a, 'b> {\n    |      ^^\n    |\n    = help: use a more informative name\n \n error: single-character lifetime names are likely uninformative\n-  --> $DIR/single_char_lifetime_names.rs:13:10\n+  --> $DIR/single_char_lifetime_names.rs:14:10\n    |\n LL | impl<'a, 'b> DiagnosticCtx<'a, 'b> {\n    |          ^^\n    |\n    = help: use a more informative name\n \n error: single-character lifetime names are likely uninformative\n-  --> $DIR/single_char_lifetime_names.rs:33:15\n+  --> $DIR/single_char_lifetime_names.rs:34:15\n    |\n LL | fn split_once<'a>(base: &'a str, other: &'_ str) -> (&'a str, Option<&'a str>) {\n    |               ^^"}, {"sha": "21753e5dc6a47c0546f43f6210392062821d9c9a", "filename": "tests/ui/suspicious_else_formatting.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fsuspicious_else_formatting.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fsuspicious_else_formatting.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fsuspicious_else_formatting.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,7 +1,7 @@\n // aux-build:proc_macro_suspicious_else_formatting.rs\n \n #![warn(clippy::suspicious_else_formatting)]\n-#![allow(clippy::if_same_then_else)]\n+#![allow(clippy::if_same_then_else, clippy::let_unit_value)]\n \n extern crate proc_macro_suspicious_else_formatting;\n use proc_macro_suspicious_else_formatting::DeriveBadSpan;"}, {"sha": "7be15b0b2dd3d4669f7202a15d18bd1b9a2d7c20", "filename": "tests/ui/undocumented_unsafe_blocks.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fundocumented_unsafe_blocks.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fundocumented_unsafe_blocks.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fundocumented_unsafe_blocks.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,6 +1,7 @@\n // aux-build:proc_macro_unsafe.rs\n \n #![warn(clippy::undocumented_unsafe_blocks)]\n+#![allow(clippy::let_unit_value)]\n \n extern crate proc_macro_unsafe;\n "}, {"sha": "87d445bd7b86b12e39844c8718076717ff517aaf", "filename": "tests/ui/undocumented_unsafe_blocks.stderr", "status": "modified", "additions": 18, "deletions": 18, "changes": 36, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fundocumented_unsafe_blocks.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fundocumented_unsafe_blocks.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fundocumented_unsafe_blocks.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,5 +1,5 @@\n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:256:19\n+  --> $DIR/undocumented_unsafe_blocks.rs:257:19\n    |\n LL |     /* Safety: */ unsafe {}\n    |                   ^^^^^^^^^\n@@ -8,103 +8,103 @@ LL |     /* Safety: */ unsafe {}\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:260:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:261:5\n    |\n LL |     unsafe {}\n    |     ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:264:14\n+  --> $DIR/undocumented_unsafe_blocks.rs:265:14\n    |\n LL |     let _ = [unsafe { 14 }, unsafe { 15 }, 42, unsafe { 16 }];\n    |              ^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:264:29\n+  --> $DIR/undocumented_unsafe_blocks.rs:265:29\n    |\n LL |     let _ = [unsafe { 14 }, unsafe { 15 }, 42, unsafe { 16 }];\n    |                             ^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:264:48\n+  --> $DIR/undocumented_unsafe_blocks.rs:265:48\n    |\n LL |     let _ = [unsafe { 14 }, unsafe { 15 }, 42, unsafe { 16 }];\n    |                                                ^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:268:18\n+  --> $DIR/undocumented_unsafe_blocks.rs:269:18\n    |\n LL |     let _ = (42, unsafe {}, \"test\", unsafe {});\n    |                  ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:268:37\n+  --> $DIR/undocumented_unsafe_blocks.rs:269:37\n    |\n LL |     let _ = (42, unsafe {}, \"test\", unsafe {});\n    |                                     ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:272:14\n+  --> $DIR/undocumented_unsafe_blocks.rs:273:14\n    |\n LL |     let _ = *unsafe { &42 };\n    |              ^^^^^^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:277:19\n+  --> $DIR/undocumented_unsafe_blocks.rs:278:19\n    |\n LL |     let _ = match unsafe {} {\n    |                   ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:283:14\n+  --> $DIR/undocumented_unsafe_blocks.rs:284:14\n    |\n LL |     let _ = &unsafe {};\n    |              ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:287:14\n+  --> $DIR/undocumented_unsafe_blocks.rs:288:14\n    |\n LL |     let _ = [unsafe {}; 5];\n    |              ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:291:13\n+  --> $DIR/undocumented_unsafe_blocks.rs:292:13\n    |\n LL |     let _ = unsafe {};\n    |             ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:301:8\n+  --> $DIR/undocumented_unsafe_blocks.rs:302:8\n    |\n LL |     t!(unsafe {});\n    |        ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:307:13\n+  --> $DIR/undocumented_unsafe_blocks.rs:308:13\n    |\n LL |             unsafe {}\n    |             ^^^^^^^^^\n@@ -116,31 +116,31 @@ LL |     t!();\n    = note: this error originates in the macro `t` (in Nightly builds, run with -Z macro-backtrace for more info)\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:315:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:316:5\n    |\n LL |     unsafe {} // SAFETY:\n    |     ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:319:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:320:5\n    |\n LL |     unsafe {\n    |     ^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:329:5\n+  --> $DIR/undocumented_unsafe_blocks.rs:330:5\n    |\n LL |     unsafe {};\n    |     ^^^^^^^^^\n    |\n    = help: consider adding a safety comment on the preceding line\n \n error: unsafe block missing a safety comment\n-  --> $DIR/undocumented_unsafe_blocks.rs:333:20\n+  --> $DIR/undocumented_unsafe_blocks.rs:334:20\n    |\n LL |     println!(\"{}\", unsafe { String::from_utf8_unchecked(vec![]) });\n    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "dac5ce272c02665133022468802bbfe679768d0d", "filename": "tests/ui/uninit.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Funinit.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Funinit.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinit.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,4 +1,5 @@\n #![feature(stmt_expr_attributes)]\n+#![allow(clippy::let_unit_value)]\n \n use std::mem::{self, MaybeUninit};\n "}, {"sha": "15ef2349489fa711a5ed4a68557a2a8d3b8b3dfd", "filename": "tests/ui/uninit.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Funinit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Funinit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funinit.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,19 +1,19 @@\n error: this call for this type may be undefined behavior\n-  --> $DIR/uninit.rs:6:29\n+  --> $DIR/uninit.rs:7:29\n    |\n LL |     let _: usize = unsafe { MaybeUninit::uninit().assume_init() };\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n    |\n    = note: `#[deny(clippy::uninit_assumed_init)]` on by default\n \n error: this call for this type may be undefined behavior\n-  --> $DIR/uninit.rs:9:31\n+  --> $DIR/uninit.rs:10:31\n    |\n LL |     let _: [u8; 0] = unsafe { MaybeUninit::uninit().assume_init() };\n    |                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n error: this call for this type may be undefined behavior\n-  --> $DIR/uninit.rs:24:29\n+  --> $DIR/uninit.rs:25:29\n    |\n LL |     let _: usize = unsafe { mem::MaybeUninit::uninit().assume_init() };\n    |                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^"}, {"sha": "38be87bddf19845de6797e70384317bdbfb91162", "filename": "tests/ui/unit_arg.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Funit_arg.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Funit_arg.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -7,7 +7,8 @@\n     clippy::unnecessary_wraps,\n     clippy::or_fun_call,\n     clippy::needless_question_mark,\n-    clippy::self_named_constructors\n+    clippy::self_named_constructors,\n+    clippy::let_unit_value\n )]\n \n use std::fmt::Debug;"}, {"sha": "394dee29dc96e5c802826bb52830063e25024ae6", "filename": "tests/ui/unit_arg.stderr", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Funit_arg.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Funit_arg.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_arg.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,5 +1,5 @@\n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:56:5\n+  --> $DIR/unit_arg.rs:57:5\n    |\n LL | /     foo({\n LL | |         1;\n@@ -20,7 +20,7 @@ LL ~     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:59:5\n+  --> $DIR/unit_arg.rs:60:5\n    |\n LL |     foo(foo(1));\n    |     ^^^^^^^^^^^\n@@ -32,7 +32,7 @@ LL ~     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:60:5\n+  --> $DIR/unit_arg.rs:61:5\n    |\n LL | /     foo({\n LL | |         foo(1);\n@@ -54,7 +54,7 @@ LL ~     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:65:5\n+  --> $DIR/unit_arg.rs:66:5\n    |\n LL | /     b.bar({\n LL | |         1;\n@@ -74,7 +74,7 @@ LL ~     b.bar(());\n    |\n \n error: passing unit values to a function\n-  --> $DIR/unit_arg.rs:68:5\n+  --> $DIR/unit_arg.rs:69:5\n    |\n LL |     taking_multiple_units(foo(0), foo(1));\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n@@ -87,7 +87,7 @@ LL ~     taking_multiple_units((), ());\n    |\n \n error: passing unit values to a function\n-  --> $DIR/unit_arg.rs:69:5\n+  --> $DIR/unit_arg.rs:70:5\n    |\n LL | /     taking_multiple_units(foo(0), {\n LL | |         foo(1);\n@@ -110,7 +110,7 @@ LL ~     taking_multiple_units((), ());\n    |\n \n error: passing unit values to a function\n-  --> $DIR/unit_arg.rs:73:5\n+  --> $DIR/unit_arg.rs:74:5\n    |\n LL | /     taking_multiple_units(\n LL | |         {\n@@ -140,7 +140,7 @@ LL +         foo(2);\n  ...\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:84:13\n+  --> $DIR/unit_arg.rs:85:13\n    |\n LL |     None.or(Some(foo(2)));\n    |             ^^^^^^^^^^^^\n@@ -154,7 +154,7 @@ LL ~     });\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:87:5\n+  --> $DIR/unit_arg.rs:88:5\n    |\n LL |     foo(foo(()));\n    |     ^^^^^^^^^^^^\n@@ -166,7 +166,7 @@ LL ~     foo(());\n    |\n \n error: passing a unit value to a function\n-  --> $DIR/unit_arg.rs:124:5\n+  --> $DIR/unit_arg.rs:125:5\n    |\n LL |     Some(foo(1))\n    |     ^^^^^^^^^^^^"}, {"sha": "43eb54eff477b72518c92b93e5b9448830aea6f0", "filename": "tests/ui/unit_hash.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Funit_hash.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Funit_hash.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_hash.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,4 +1,5 @@\n #![warn(clippy::unit_hash)]\n+#![allow(clippy::let_unit_value)]\n \n use std::collections::hash_map::DefaultHasher;\n use std::hash::Hash;"}, {"sha": "050fa55a12bea71bab7f4c44f11b81724d1400cf", "filename": "tests/ui/unit_hash.stderr", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Funit_hash.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Funit_hash.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Funit_hash.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,5 +1,5 @@\n error: this call to `hash` on the unit type will do nothing\n-  --> $DIR/unit_hash.rs:18:23\n+  --> $DIR/unit_hash.rs:19:23\n    |\n LL |         Foo::Empty => ().hash(&mut state),\n    |                       ^^^^^^^^^^^^^^^^^^^ help: remove the call to `hash` or consider using: `0_u8.hash(&mut state)`\n@@ -8,15 +8,15 @@ LL |         Foo::Empty => ().hash(&mut state),\n    = note: the implementation of `Hash` for `()` is a no-op\n \n error: this call to `hash` on the unit type will do nothing\n-  --> $DIR/unit_hash.rs:23:5\n+  --> $DIR/unit_hash.rs:24:5\n    |\n LL |     res.hash(&mut state);\n    |     ^^^^^^^^^^^^^^^^^^^^ help: remove the call to `hash` or consider using: `0_u8.hash(&mut state)`\n    |\n    = note: the implementation of `Hash` for `()` is a no-op\n \n error: this call to `hash` on the unit type will do nothing\n-  --> $DIR/unit_hash.rs:26:5\n+  --> $DIR/unit_hash.rs:27:5\n    |\n LL |     do_nothing().hash(&mut state);\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: remove the call to `hash` or consider using: `0_u8.hash(&mut state)`"}, {"sha": "b6f47ae906b73709b6096e5ffeeb4caa36dedab3", "filename": "tests/ui/wildcard_imports.fixed", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fwildcard_imports.fixed", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fwildcard_imports.fixed", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.fixed?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -8,8 +8,7 @@\n // FIXME: We should likely add another edition 2021 test case for this lint\n \n #![warn(clippy::wildcard_imports)]\n-#![allow(unused)]\n-#![allow(clippy::unnecessary_wraps)]\n+#![allow(unused, clippy::unnecessary_wraps, clippy::let_unit_value)]\n #![warn(unused_imports)]\n \n extern crate wildcard_imports_helper;"}, {"sha": "eb404b7a3de5f661cbb2af6b428ca042830ac985", "filename": "tests/ui/wildcard_imports.rs", "status": "modified", "additions": 1, "deletions": 2, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fwildcard_imports.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fwildcard_imports.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.rs?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -8,8 +8,7 @@\n // FIXME: We should likely add another edition 2021 test case for this lint\n \n #![warn(clippy::wildcard_imports)]\n-#![allow(unused)]\n-#![allow(clippy::unnecessary_wraps)]\n+#![allow(unused, clippy::unnecessary_wraps, clippy::let_unit_value)]\n #![warn(unused_imports)]\n \n extern crate wildcard_imports_helper;"}, {"sha": "626c1754fc82c8720bbc3e1ac84c0f932dbce630", "filename": "tests/ui/wildcard_imports.stderr", "status": "modified", "additions": 21, "deletions": 21, "changes": 42, "blob_url": "https://github.com/rust-lang/rust/blob/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fwildcard_imports.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/48bcc1d95f07eaf03f72f98011e78cb8630798a4/tests%2Fui%2Fwildcard_imports.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fui%2Fwildcard_imports.stderr?ref=48bcc1d95f07eaf03f72f98011e78cb8630798a4", "patch": "@@ -1,129 +1,129 @@\n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:17:5\n+  --> $DIR/wildcard_imports.rs:16:5\n    |\n LL | use crate::fn_mod::*;\n    |     ^^^^^^^^^^^^^^^^ help: try: `crate::fn_mod::foo`\n    |\n    = note: `-D clippy::wildcard-imports` implied by `-D warnings`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:18:5\n+  --> $DIR/wildcard_imports.rs:17:5\n    |\n LL | use crate::mod_mod::*;\n    |     ^^^^^^^^^^^^^^^^^ help: try: `crate::mod_mod::inner_mod`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:19:5\n+  --> $DIR/wildcard_imports.rs:18:5\n    |\n LL | use crate::multi_fn_mod::*;\n    |     ^^^^^^^^^^^^^^^^^^^^^^ help: try: `crate::multi_fn_mod::{multi_bar, multi_foo, multi_inner_mod}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:21:5\n+  --> $DIR/wildcard_imports.rs:20:5\n    |\n LL | use crate::struct_mod::*;\n    |     ^^^^^^^^^^^^^^^^^^^^ help: try: `crate::struct_mod::{A, inner_struct_mod}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:25:5\n+  --> $DIR/wildcard_imports.rs:24:5\n    |\n LL | use wildcard_imports_helper::inner::inner_for_self_import::*;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::inner::inner_for_self_import::inner_extern_bar`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:26:5\n+  --> $DIR/wildcard_imports.rs:25:5\n    |\n LL | use wildcard_imports_helper::*;\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::{ExternA, extern_foo}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:97:13\n+  --> $DIR/wildcard_imports.rs:96:13\n    |\n LL |         use crate::fn_mod::*;\n    |             ^^^^^^^^^^^^^^^^ help: try: `crate::fn_mod::foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:103:75\n+  --> $DIR/wildcard_imports.rs:102:75\n    |\n LL |         use wildcard_imports_helper::inner::inner_for_self_import::{self, *};\n    |                                                                           ^ help: try: `inner_extern_foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:104:13\n+  --> $DIR/wildcard_imports.rs:103:13\n    |\n LL |         use wildcard_imports_helper::*;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::{ExternA, extern_foo}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:115:20\n+  --> $DIR/wildcard_imports.rs:114:20\n    |\n LL |         use self::{inner::*, inner2::*};\n    |                    ^^^^^^^^ help: try: `inner::inner_foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:115:30\n+  --> $DIR/wildcard_imports.rs:114:30\n    |\n LL |         use self::{inner::*, inner2::*};\n    |                              ^^^^^^^^^ help: try: `inner2::inner_bar`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:122:13\n+  --> $DIR/wildcard_imports.rs:121:13\n    |\n LL |         use wildcard_imports_helper::*;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `wildcard_imports_helper::{ExternExportedEnum, ExternExportedStruct, extern_exported}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:151:9\n+  --> $DIR/wildcard_imports.rs:150:9\n    |\n LL |     use crate::in_fn_test::*;\n    |         ^^^^^^^^^^^^^^^^^^^^ help: try: `crate::in_fn_test::{ExportedEnum, ExportedStruct, exported}`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:160:9\n+  --> $DIR/wildcard_imports.rs:159:9\n    |\n LL |     use crate:: in_fn_test::  * ;\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `crate:: in_fn_test::exported`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:161:9\n+  --> $DIR/wildcard_imports.rs:160:9\n    |\n LL |       use crate:: fn_mod::\n    |  _________^\n LL | |         *;\n    | |_________^ help: try: `crate:: fn_mod::foo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:172:13\n+  --> $DIR/wildcard_imports.rs:171:13\n    |\n LL |         use super::*;\n    |             ^^^^^^^^ help: try: `super::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:207:17\n+  --> $DIR/wildcard_imports.rs:206:17\n    |\n LL |             use super::*;\n    |                 ^^^^^^^^ help: try: `super::insidefoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:215:13\n+  --> $DIR/wildcard_imports.rs:214:13\n    |\n LL |         use super_imports::*;\n    |             ^^^^^^^^^^^^^^^^ help: try: `super_imports::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:224:17\n+  --> $DIR/wildcard_imports.rs:223:17\n    |\n LL |             use super::super::*;\n    |                 ^^^^^^^^^^^^^^^ help: try: `super::super::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:233:13\n+  --> $DIR/wildcard_imports.rs:232:13\n    |\n LL |         use super::super::super_imports::*;\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: try: `super::super::super_imports::foofoo`\n \n error: usage of wildcard import\n-  --> $DIR/wildcard_imports.rs:241:13\n+  --> $DIR/wildcard_imports.rs:240:13\n    |\n LL |         use super::*;\n    |             ^^^^^^^^ help: try: `super::foofoo`"}]}