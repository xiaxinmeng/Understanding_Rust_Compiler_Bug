{"sha": "07dc0f3a74f3bba5620c91a12320e5bf2773f7b8", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA3ZGMwZjNhNzRmM2JiYTU2MjBjOTFhMTIzMjBlNWJmMjc3M2Y3Yjg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-19T23:05:16Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-12-26T21:01:25Z"}, "message": "libstd: Make a temporary separate `stage0` implementation for `Cell` to\navoid a crash in later stages", "tree": {"sha": "cbe3eb604482267af2dca76cba7d4a33288d15d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/cbe3eb604482267af2dca76cba7d4a33288d15d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/07dc0f3a74f3bba5620c91a12320e5bf2773f7b8", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/07dc0f3a74f3bba5620c91a12320e5bf2773f7b8", "html_url": "https://github.com/rust-lang/rust/commit/07dc0f3a74f3bba5620c91a12320e5bf2773f7b8", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/07dc0f3a74f3bba5620c91a12320e5bf2773f7b8/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "d40974a5fe0b1d3899647be1876ee021b8364983", "url": "https://api.github.com/repos/rust-lang/rust/commits/d40974a5fe0b1d3899647be1876ee021b8364983", "html_url": "https://github.com/rust-lang/rust/commit/d40974a5fe0b1d3899647be1876ee021b8364983"}], "stats": {"total": 27, "additions": 27, "deletions": 0}, "files": [{"sha": "c5fdddfec7625ec01c72a053fcaab89d34187e8c", "filename": "src/libstd/cell.rs", "status": "modified", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/07dc0f3a74f3bba5620c91a12320e5bf2773f7b8/src%2Flibstd%2Fcell.rs", "raw_url": "https://github.com/rust-lang/rust/raw/07dc0f3a74f3bba5620c91a12320e5bf2773f7b8/src%2Flibstd%2Fcell.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fcell.rs?ref=07dc0f3a74f3bba5620c91a12320e5bf2773f7b8", "patch": "@@ -21,6 +21,33 @@ pub struct Cell<T> {\n     priv value: T,\n }\n \n+#[cfg(stage0)]\n+impl<T> Cell<T> {\n+    /// Creates a new `Cell` containing the given value.\n+    pub fn new(value: T) -> Cell<T> {\n+        Cell {\n+            value: value,\n+        }\n+    }\n+\n+    /// Returns a copy of the contained value.\n+    #[inline]\n+    pub fn get(&self) -> T {\n+        unsafe {\n+            ::cast::transmute_copy(&self.value)\n+        }\n+    }\n+\n+    /// Sets the contained value.\n+    #[inline]\n+    pub fn set(&self, value: T) {\n+        unsafe {\n+            *cast::transmute_mut(&self.value) = value\n+        }\n+    }\n+}\n+\n+#[cfg(not(stage0))]\n impl<T: ::kinds::Pod> Cell<T> {\n     /// Creates a new `Cell` containing the given value.\n     pub fn new(value: T) -> Cell<T> {"}]}