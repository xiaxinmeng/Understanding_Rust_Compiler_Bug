{"sha": "2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f", "node_id": "MDY6Q29tbWl0NzI0NzEyOjJhZjFlYmZiZGYwMWU0YWE0M2ZkOWIxYjVhZjYwMmI1NDUxMDFlMWY=", "commit": {"author": {"name": "Gus Wynn", "email": "guswynn@gmail.com", "date": "2021-09-13T15:19:40Z"}, "committer": {"name": "Gus Wynn", "email": "guswynn@gmail.com", "date": "2021-09-13T15:19:40Z"}, "message": "error formatting and fix build", "tree": {"sha": "61263b7478f56fd26bb4b3638167105dbab06eee", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/61263b7478f56fd26bb4b3638167105dbab06eee"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f", "html_url": "https://github.com/rust-lang/rust/commit/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/comments", "author": {"login": "guswynn", "id": 5404303, "node_id": "MDQ6VXNlcjU0MDQzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5404303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guswynn", "html_url": "https://github.com/guswynn", "followers_url": "https://api.github.com/users/guswynn/followers", "following_url": "https://api.github.com/users/guswynn/following{/other_user}", "gists_url": "https://api.github.com/users/guswynn/gists{/gist_id}", "starred_url": "https://api.github.com/users/guswynn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guswynn/subscriptions", "organizations_url": "https://api.github.com/users/guswynn/orgs", "repos_url": "https://api.github.com/users/guswynn/repos", "events_url": "https://api.github.com/users/guswynn/events{/privacy}", "received_events_url": "https://api.github.com/users/guswynn/received_events", "type": "User", "site_admin": false}, "committer": {"login": "guswynn", "id": 5404303, "node_id": "MDQ6VXNlcjU0MDQzMDM=", "avatar_url": "https://avatars.githubusercontent.com/u/5404303?v=4", "gravatar_id": "", "url": "https://api.github.com/users/guswynn", "html_url": "https://github.com/guswynn", "followers_url": "https://api.github.com/users/guswynn/followers", "following_url": "https://api.github.com/users/guswynn/following{/other_user}", "gists_url": "https://api.github.com/users/guswynn/gists{/gist_id}", "starred_url": "https://api.github.com/users/guswynn/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/guswynn/subscriptions", "organizations_url": "https://api.github.com/users/guswynn/orgs", "repos_url": "https://api.github.com/users/guswynn/repos", "events_url": "https://api.github.com/users/guswynn/events{/privacy}", "received_events_url": "https://api.github.com/users/guswynn/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ee1d2ea3b73d07d95d5c22ccd1e884e3674fcec6", "url": "https://api.github.com/repos/rust-lang/rust/commits/ee1d2ea3b73d07d95d5c22ccd1e884e3674fcec6", "html_url": "https://github.com/rust-lang/rust/commit/ee1d2ea3b73d07d95d5c22ccd1e884e3674fcec6"}], "stats": {"total": 110, "additions": 67, "deletions": 43}, "files": [{"sha": "6ab925cfa9b7f70ae0bebcb457324d8165e12e34", "filename": "compiler/rustc_feature/src/active.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/compiler%2Frustc_feature%2Fsrc%2Factive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_feature%2Fsrc%2Factive.rs?ref=2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f", "patch": "@@ -679,8 +679,8 @@ declare_features! (\n     /// Allows `let...else` statements.\n     (active, let_else, \"1.56.0\", Some(87335), None),\n \n-    /// Allows `#[must_not_suspend]`.\n-    (active, must_not_suspend, \"1.56.0\", Some(83310), None),\n+    /// Allows the `#[must_not_suspend]` attribute.\n+    (active, must_not_suspend, \"1.57.0\", Some(83310), None),\n \n \n     // -------------------------------------------------------------------------"}, {"sha": "a192056e244bd2c6216fdd8d3bd1d114781067b8", "filename": "compiler/rustc_lint_defs/src/builtin.rs", "status": "modified", "additions": 17, "deletions": 9, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_lint_defs%2Fsrc%2Fbuiltin.rs?ref=2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f", "patch": "@@ -315,14 +315,8 @@ declare_lint! {\n }\n \n declare_lint! {\n-    /// The `must_not_suspend` lint detects values that are marked with the `#[must_not_suspend]`\n-    /// attribute being held across yield points. A \"yield\" point is usually a `.await` in an async\n-    /// function.\n-    ///\n-    /// This attribute can be used to mark values that are semantically incorrect across yields\n-    /// (like certain types of timers), values that have async alternatives, and values that\n-    /// regularly cause problems with the `Send`-ness of async fn's returned futures (like\n-    /// `MutexGuard`'s)\n+    /// The `must_not_suspend` lint guards against values that shouldn't be held across yield points\n+    /// (`.await`)\n     ///\n     /// ### Example\n     ///\n@@ -339,9 +333,23 @@ declare_lint! {\n     ///     yield_now().await;\n     /// }\n     /// ```\n+    ///\n+    /// {{produces}}\n+    ///\n+    /// ### Explanation\n+    ///\n+    /// The `must_not_suspend` lint detects values that are marked with the `#[must_not_suspend]`\n+    /// attribute being held across yield points. A \"yield\" point is usually a `.await` in an async\n+    /// function.\n+    ///\n+    /// This attribute can be used to mark values that are semantically incorrect across yields\n+    /// (like certain types of timers), values that have async alternatives, and values that\n+    /// regularly cause problems with the `Send`-ness of async fn's returned futures (like\n+    /// `MutexGuard`'s)\n+    ///\n     pub MUST_NOT_SUSPEND,\n     Warn,\n-    \"Use of a `#[must_not_suspend]` value across a yield point\",\n+    \"use of a `#[must_not_suspend]` value across a yield point\",\n }\n \n declare_lint! {"}, {"sha": "7e4bc08c1723c50b89ee8225eb63f9f2cc8582df", "filename": "compiler/rustc_typeck/src/check/generator_interior.rs", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "raw_url": "https://github.com/rust-lang/rust/raw/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_typeck%2Fsrc%2Fcheck%2Fgenerator_interior.rs?ref=2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f", "patch": "@@ -463,8 +463,10 @@ pub fn check_must_not_suspend_ty<'tcx>(\n     plural_len: usize,\n ) -> bool {\n     if ty.is_unit()\n+    // FIXME: should this check `is_ty_uninhabited_from`. This query is not available in this stage\n+    // of typeck (before ReVar and RePlaceholder are removed), but may remove noise, like in\n+    // `must_use`\n     // || fcx.tcx.is_ty_uninhabited_from(fcx.tcx.parent_module(hir_id).to_def_id(), ty, fcx.param_env)\n-    // FIXME: should this check is_ty_uninhabited_from\n     {\n         return true;\n     }\n@@ -496,6 +498,7 @@ pub fn check_must_not_suspend_ty<'tcx>(\n             descr_pre,\n             descr_post,\n         ),\n+        // FIXME: support adding the attribute to TAITs\n         ty::Opaque(def, _) => {\n             let mut has_emitted = false;\n             for &(predicate, _) in fcx.tcx.explicit_item_bounds(def) {\n@@ -604,18 +607,18 @@ fn check_must_not_suspend_def(\n                     );\n                     let mut err = lint.build(&msg);\n \n+                    // add span pointing to the offending yield/await\n+                    err.span_label(yield_span, \"the value is held across this yield point\");\n+\n                     // Add optional reason note\n                     if let Some(note) = attr.value_str() {\n-                        err.note(&note.as_str());\n+                        err.span_note(source_span, &note.as_str());\n                     }\n \n-                    // add span pointing to the offending yield/await)\n-                    err.span_label(yield_span, \"The value is held across this yield point\");\n-\n                     // Add some quick suggestions on what to do\n                     err.span_help(\n                         source_span,\n-                        \"`drop` this value before the yield point, or use a block (`{ ... }`) \\\"\n+                        \"`drop` this value before the yield point, or use a block (`{ ... }`) \\\n                         to shrink its scope\",\n                     );\n "}, {"sha": "7bd80405b5de61d9916f7b3646ec067d361271d4", "filename": "src/test/ui/lint/must_not_suspend/boxed.stderr", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fboxed.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fboxed.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fboxed.stderr?ref=2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f", "patch": "@@ -4,16 +4,19 @@ error: boxed `Umm` held across a yield point, but should not be\n LL |     let _guard = bar();\n    |         ^^^^^^\n LL |     other().await;\n-   |     ------------- The value is held across this yield point\n+   |     ------------- the value is held across this yield point\n    |\n note: the lint level is defined here\n   --> $DIR/boxed.rs:3:9\n    |\n LL | #![deny(must_not_suspend)]\n    |         ^^^^^^^^^^^^^^^^\n-   = note: You gotta use Umm's, ya know?\n-help: `drop` this value before the yield point, or use a block (`{ ... }`) \"\n-                        to shrink its scope\n+note: You gotta use Umm's, ya know?\n+  --> $DIR/boxed.rs:20:9\n+   |\n+LL |     let _guard = bar();\n+   |         ^^^^^^\n+help: `drop` this value before the yield point, or use a block (`{ ... }`) to shrink its scope\n   --> $DIR/boxed.rs:20:9\n    |\n LL |     let _guard = bar();"}, {"sha": "d2a550d7b45d4807e8d6a1ebd257e5b863a63e54", "filename": "src/test/ui/lint/must_not_suspend/ref.stderr", "status": "modified", "additions": 14, "deletions": 8, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fref.stderr?ref=2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f", "patch": "@@ -5,16 +5,19 @@ LL |         let guard = &mut self.u;\n    |                          ^^^^^^\n ...\n LL |         other().await;\n-   |         ------------- The value is held across this yield point\n+   |         ------------- the value is held across this yield point\n    |\n note: the lint level is defined here\n   --> $DIR/ref.rs:3:9\n    |\n LL | #![deny(must_not_suspend)]\n    |         ^^^^^^^^^^^^^^^^\n-   = note: You gotta use Umm's, ya know?\n-help: `drop` this value before the yield point, or use a block (`{ ... }`) \"\n-                        to shrink its scope\n+note: You gotta use Umm's, ya know?\n+  --> $DIR/ref.rs:18:26\n+   |\n+LL |         let guard = &mut self.u;\n+   |                          ^^^^^^\n+help: `drop` this value before the yield point, or use a block (`{ ... }`) to shrink its scope\n   --> $DIR/ref.rs:18:26\n    |\n LL |         let guard = &mut self.u;\n@@ -27,11 +30,14 @@ LL |         let guard = &mut self.u;\n    |                          ^^^^^^\n ...\n LL |         other().await;\n-   |         ------------- The value is held across this yield point\n+   |         ------------- the value is held across this yield point\n    |\n-   = note: You gotta use Umm's, ya know?\n-help: `drop` this value before the yield point, or use a block (`{ ... }`) \"\n-                        to shrink its scope\n+note: You gotta use Umm's, ya know?\n+  --> $DIR/ref.rs:18:26\n+   |\n+LL |         let guard = &mut self.u;\n+   |                          ^^^^^^\n+help: `drop` this value before the yield point, or use a block (`{ ... }`) to shrink its scope\n   --> $DIR/ref.rs:18:26\n    |\n LL |         let guard = &mut self.u;"}, {"sha": "8d7bb80876440cbddcedd1e67d9fc67c2b4f7baa", "filename": "src/test/ui/lint/must_not_suspend/trait.stderr", "status": "modified", "additions": 4, "deletions": 6, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Ftrait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Ftrait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Ftrait.stderr?ref=2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f", "patch": "@@ -5,15 +5,14 @@ LL |     let _guard1 = r#impl();\n    |         ^^^^^^^\n ...\n LL |     other().await;\n-   |     ------------- The value is held across this yield point\n+   |     ------------- the value is held across this yield point\n    |\n note: the lint level is defined here\n   --> $DIR/trait.rs:3:9\n    |\n LL | #![deny(must_not_suspend)]\n    |         ^^^^^^^^^^^^^^^^\n-help: `drop` this value before the yield point, or use a block (`{ ... }`) \"\n-                        to shrink its scope\n+help: `drop` this value before the yield point, or use a block (`{ ... }`) to shrink its scope\n   --> $DIR/trait.rs:21:9\n    |\n LL |     let _guard1 = r#impl();\n@@ -26,10 +25,9 @@ LL |     let _guard2 = r#dyn();\n    |         ^^^^^^^\n LL | \n LL |     other().await;\n-   |     ------------- The value is held across this yield point\n+   |     ------------- the value is held across this yield point\n    |\n-help: `drop` this value before the yield point, or use a block (`{ ... }`) \"\n-                        to shrink its scope\n+help: `drop` this value before the yield point, or use a block (`{ ... }`) to shrink its scope\n   --> $DIR/trait.rs:22:9\n    |\n LL |     let _guard2 = r#dyn();"}, {"sha": "87e0fd27e70f2c73d4c548c295d461cc0c9d6500", "filename": "src/test/ui/lint/must_not_suspend/unit.stderr", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Funit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Funit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Funit.stderr?ref=2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f", "patch": "@@ -4,16 +4,19 @@ error: `Umm` held across a yield point, but should not be\n LL |     let _guard = bar();\n    |         ^^^^^^\n LL |     other().await;\n-   |     ------------- The value is held across this yield point\n+   |     ------------- the value is held across this yield point\n    |\n note: the lint level is defined here\n   --> $DIR/unit.rs:3:9\n    |\n LL | #![deny(must_not_suspend)]\n    |         ^^^^^^^^^^^^^^^^\n-   = note: You gotta use Umm's, ya know?\n-help: `drop` this value before the yield point, or use a block (`{ ... }`) \"\n-                        to shrink its scope\n+note: You gotta use Umm's, ya know?\n+  --> $DIR/unit.rs:20:9\n+   |\n+LL |     let _guard = bar();\n+   |         ^^^^^^\n+help: `drop` this value before the yield point, or use a block (`{ ... }`) to shrink its scope\n   --> $DIR/unit.rs:20:9\n    |\n LL |     let _guard = bar();"}, {"sha": "03b77520c9f9f526113032b02a5eea7f322b2556", "filename": "src/test/ui/lint/must_not_suspend/warn.stderr", "status": "modified", "additions": 7, "deletions": 4, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fwarn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fwarn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fmust_not_suspend%2Fwarn.stderr?ref=2af1ebfbdf01e4aa43fd9b1b5af602b545101e1f", "patch": "@@ -4,12 +4,15 @@ warning: `Umm` held across a yield point, but should not be\n LL |     let _guard = bar();\n    |         ^^^^^^\n LL |     other().await;\n-   |     ------------- The value is held across this yield point\n+   |     ------------- the value is held across this yield point\n    |\n    = note: `#[warn(must_not_suspend)]` on by default\n-   = note: You gotta use Umm's, ya know?\n-help: `drop` this value before the yield point, or use a block (`{ ... }`) \"\n-                        to shrink its scope\n+note: You gotta use Umm's, ya know?\n+  --> $DIR/warn.rs:20:9\n+   |\n+LL |     let _guard = bar();\n+   |         ^^^^^^\n+help: `drop` this value before the yield point, or use a block (`{ ... }`) to shrink its scope\n   --> $DIR/warn.rs:20:9\n    |\n LL |     let _guard = bar();"}]}