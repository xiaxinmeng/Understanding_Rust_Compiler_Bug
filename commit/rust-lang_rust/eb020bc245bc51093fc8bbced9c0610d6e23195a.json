{"sha": "eb020bc245bc51093fc8bbced9c0610d6e23195a", "node_id": "MDY6Q29tbWl0NzI0NzEyOmViMDIwYmMyNDViYzUxMDkzZmM4YmJjZWQ5YzA2MTBkNmUyMzE5NWE=", "commit": {"author": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-19T21:58:20Z"}, "committer": {"name": "Mazdak Farrokhzad", "email": "twingoow@gmail.com", "date": "2019-12-19T21:58:20Z"}, "message": "`lower_pattern_unadjusted`: simplify `Binding(..)` branch.\n\nAvoid calling `.node_type(...)` again.", "tree": {"sha": "d80db403be464f5fb3a075ea7a4295a7d2f74252", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d80db403be464f5fb3a075ea7a4295a7d2f74252"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eb020bc245bc51093fc8bbced9c0610d6e23195a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eb020bc245bc51093fc8bbced9c0610d6e23195a", "html_url": "https://github.com/rust-lang/rust/commit/eb020bc245bc51093fc8bbced9c0610d6e23195a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eb020bc245bc51093fc8bbced9c0610d6e23195a/comments", "author": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Centril", "id": 855702, "node_id": "MDQ6VXNlcjg1NTcwMg==", "avatar_url": "https://avatars.githubusercontent.com/u/855702?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Centril", "html_url": "https://github.com/Centril", "followers_url": "https://api.github.com/users/Centril/followers", "following_url": "https://api.github.com/users/Centril/following{/other_user}", "gists_url": "https://api.github.com/users/Centril/gists{/gist_id}", "starred_url": "https://api.github.com/users/Centril/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Centril/subscriptions", "organizations_url": "https://api.github.com/users/Centril/orgs", "repos_url": "https://api.github.com/users/Centril/repos", "events_url": "https://api.github.com/users/Centril/events{/privacy}", "received_events_url": "https://api.github.com/users/Centril/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "be6381e9e0d3d883baf3c2557f54af51ca18abb0", "url": "https://api.github.com/repos/rust-lang/rust/commits/be6381e9e0d3d883baf3c2557f54af51ca18abb0", "html_url": "https://github.com/rust-lang/rust/commit/be6381e9e0d3d883baf3c2557f54af51ca18abb0"}], "stats": {"total": 4, "additions": 2, "deletions": 2}, "files": [{"sha": "7ebef2d983331b7351666b8cded0832e4e34855f", "filename": "src/librustc_mir/hair/pattern/mod.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/eb020bc245bc51093fc8bbced9c0610d6e23195a/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eb020bc245bc51093fc8bbced9c0610d6e23195a/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fhair%2Fpattern%2Fmod.rs?ref=eb020bc245bc51093fc8bbced9c0610d6e23195a", "patch": "@@ -573,7 +573,6 @@ impl<'a, 'tcx> PatCtxt<'a, 'tcx> {\n             }\n \n             hir::PatKind::Binding(_, id, ident, ref sub) => {\n-                let var_ty = self.tables.node_type(pat.hir_id);\n                 let bm = *self.tables.pat_binding_modes().get(pat.hir_id)\n                                                          .expect(\"missing binding mode\");\n                 let (mutability, mode) = match bm {\n@@ -591,13 +590,14 @@ impl<'a, 'tcx> PatCtxt<'a, 'tcx> {\n \n                 // A ref x pattern is the same node used for x, and as such it has\n                 // x's type, which is &T, where we want T (the type being matched).\n+                let var_ty = ty;\n                 if let ty::BindByReference(_) = bm {\n                     if let ty::Ref(_, rty, _) = ty.kind {\n                         ty = rty;\n                     } else {\n                         bug!(\"`ref {}` has wrong type {}\", ident, ty);\n                     }\n-                }\n+                };\n \n                 PatKind::Binding {\n                     mutability,"}]}