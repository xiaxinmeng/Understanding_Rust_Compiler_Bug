{"sha": "f5c0a24bb05381bb94051d4da8e9ebf66d6a4025", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY1YzBhMjRiYjA1MzgxYmI5NDA1MWQ0ZGE4ZTllYmY2NmQ2YTQwMjU=", "commit": {"author": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-10-17T03:08:45Z"}, "committer": {"name": "Scott Olson", "email": "scott@solson.me", "date": "2016-10-17T03:08:45Z"}, "message": "Make locals debug printing configurable.", "tree": {"sha": "70319ac21519e718359030a1996093e01a1d66ac", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/70319ac21519e718359030a1996093e01a1d66ac"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f5c0a24bb05381bb94051d4da8e9ebf66d6a4025", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f5c0a24bb05381bb94051d4da8e9ebf66d6a4025", "html_url": "https://github.com/rust-lang/rust/commit/f5c0a24bb05381bb94051d4da8e9ebf66d6a4025", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f5c0a24bb05381bb94051d4da8e9ebf66d6a4025/comments", "author": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "committer": {"login": "solson", "id": 26806, "node_id": "MDQ6VXNlcjI2ODA2", "avatar_url": "https://avatars.githubusercontent.com/u/26806?v=4", "gravatar_id": "", "url": "https://api.github.com/users/solson", "html_url": "https://github.com/solson", "followers_url": "https://api.github.com/users/solson/followers", "following_url": "https://api.github.com/users/solson/following{/other_user}", "gists_url": "https://api.github.com/users/solson/gists{/gist_id}", "starred_url": "https://api.github.com/users/solson/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/solson/subscriptions", "organizations_url": "https://api.github.com/users/solson/orgs", "repos_url": "https://api.github.com/users/solson/repos", "events_url": "https://api.github.com/users/solson/events{/privacy}", "received_events_url": "https://api.github.com/users/solson/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65031485896b49b4e8fec9a87495cdf26b3c31bd", "url": "https://api.github.com/repos/rust-lang/rust/commits/65031485896b49b4e8fec9a87495cdf26b3c31bd", "html_url": "https://github.com/rust-lang/rust/commit/65031485896b49b4e8fec9a87495cdf26b3c31bd"}], "stats": {"total": 6, "additions": 5, "deletions": 1}, "files": [{"sha": "df478c2bd8667cb7baae8a4ee58f11bff40596ad", "filename": "src/interpreter/mod.rs", "status": "modified", "additions": 5, "deletions": 1, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/f5c0a24bb05381bb94051d4da8e9ebf66d6a4025/src%2Finterpreter%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f5c0a24bb05381bb94051d4da8e9ebf66d6a4025/src%2Finterpreter%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Finterpreter%2Fmod.rs?ref=f5c0a24bb05381bb94051d4da8e9ebf66d6a4025", "patch": "@@ -1503,7 +1503,11 @@ pub fn eval_main<'a, 'tcx: 'a>(\n     for _ in 0..step_limit {\n         match ecx.step() {\n             Ok(true) => {\n-                ecx.dump_locals(5);\n+                use std::env::var;\n+                let limit_opt = var(\"MIRI_LOG_LOCALS_LIMIT\").ok().and_then(|s| s.parse().ok());\n+                if let Some(limit) = limit_opt {\n+                    ecx.dump_locals(limit);\n+                }\n             }\n             Ok(false) => return,\n             Err(e) => {"}]}