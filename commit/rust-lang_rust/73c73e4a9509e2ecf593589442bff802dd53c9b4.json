{"sha": "73c73e4a9509e2ecf593589442bff802dd53c9b4", "node_id": "MDY6Q29tbWl0NzI0NzEyOjczYzczZTRhOTUwOWUyZWNmNTkzNTg5NDQyYmZmODAyZGQ1M2M5YjQ=", "commit": {"author": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-05-17T21:22:52Z"}, "committer": {"name": "Vadim Petrochenkov", "email": "vadim.petrochenkov@gmail.com", "date": "2017-05-26T21:52:20Z"}, "message": "Stabilize unions with `Copy` fields and no destructor", "tree": {"sha": "c0e4a7074737eb58b9ff722634ff5cb616dd625f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c0e4a7074737eb58b9ff722634ff5cb616dd625f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/73c73e4a9509e2ecf593589442bff802dd53c9b4", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/73c73e4a9509e2ecf593589442bff802dd53c9b4", "html_url": "https://github.com/rust-lang/rust/commit/73c73e4a9509e2ecf593589442bff802dd53c9b4", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/73c73e4a9509e2ecf593589442bff802dd53c9b4/comments", "author": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "committer": {"login": "petrochenkov", "id": 5751617, "node_id": "MDQ6VXNlcjU3NTE2MTc=", "avatar_url": "https://avatars.githubusercontent.com/u/5751617?v=4", "gravatar_id": "", "url": "https://api.github.com/users/petrochenkov", "html_url": "https://github.com/petrochenkov", "followers_url": "https://api.github.com/users/petrochenkov/followers", "following_url": "https://api.github.com/users/petrochenkov/following{/other_user}", "gists_url": "https://api.github.com/users/petrochenkov/gists{/gist_id}", "starred_url": "https://api.github.com/users/petrochenkov/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/petrochenkov/subscriptions", "organizations_url": "https://api.github.com/users/petrochenkov/orgs", "repos_url": "https://api.github.com/users/petrochenkov/repos", "events_url": "https://api.github.com/users/petrochenkov/events{/privacy}", "received_events_url": "https://api.github.com/users/petrochenkov/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "557967766be6139bd747ab2c3dc56ff0c9b8852a", "url": "https://api.github.com/repos/rust-lang/rust/commits/557967766be6139bd747ab2c3dc56ff0c9b8852a", "html_url": "https://github.com/rust-lang/rust/commit/557967766be6139bd747ab2c3dc56ff0c9b8852a"}], "stats": {"total": 104, "additions": 42, "deletions": 62}, "files": [{"sha": "72ff6575ca13725bc230059c04b0a6645119ae9e", "filename": "src/libcollections/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Flibcollections%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Flibcollections%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcollections%2Flib.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -65,7 +65,6 @@\n #![feature(trusted_len)]\n #![feature(unicode)]\n #![feature(unique)]\n-#![feature(untagged_unions)]\n #![cfg_attr(not(test), feature(str_checked_slicing))]\n #![cfg_attr(test, feature(rand, test))]\n #![feature(offset_to)]"}, {"sha": "e27990c29cf9ea370a2eea5cb1ad1a7fcb41d826", "filename": "src/librustc/middle/stability.rs", "status": "modified", "additions": 21, "deletions": 0, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Flibrustc%2Fmiddle%2Fstability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Flibrustc%2Fmiddle%2Fstability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fstability.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -625,6 +625,27 @@ impl<'a, 'tcx> Visitor<'tcx> for Checker<'a, 'tcx> {\n                 }\n             }\n \n+            // There's no good place to insert stability check for non-Copy unions,\n+            // so semi-randomly perform it here in stability.rs\n+            hir::ItemUnion(..) if !self.tcx.sess.features.borrow().untagged_unions => {\n+                let def_id = self.tcx.hir.local_def_id(item.id);\n+                let adt_def = self.tcx.adt_def(def_id);\n+                let ty = self.tcx.type_of(def_id);\n+\n+                if adt_def.has_dtor(self.tcx) {\n+                    emit_feature_err(&self.tcx.sess.parse_sess,\n+                                     \"untagged_unions\", item.span, GateIssue::Language,\n+                                     \"unions with `Drop` implementations are unstable\");\n+                } else {\n+                    let param_env = self.tcx.param_env(def_id);\n+                    if !param_env.can_type_implement_copy(self.tcx, ty, item.span).is_ok() {\n+                        emit_feature_err(&self.tcx.sess.parse_sess,\n+                                        \"untagged_unions\", item.span, GateIssue::Language,\n+                                        \"unions with non-`Copy` fields are unstable\");\n+                    }\n+                }\n+            }\n+\n             _ => (/* pass */)\n         }\n         intravisit::walk_item(self, item);"}, {"sha": "83cd5cef00cfec147211d52a8eef8dc1a3cda0a2", "filename": "src/librustc_data_structures/lib.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Flibrustc_data_structures%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Flibrustc_data_structures%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_data_structures%2Flib.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -29,7 +29,6 @@\n #![feature(nonzero)]\n #![feature(unboxed_closures)]\n #![feature(fn_traits)]\n-#![feature(untagged_unions)]\n #![feature(associated_consts)]\n #![feature(unsize)]\n #![feature(i128_type)]"}, {"sha": "c119fad1b736e599d7d1a969df5a9356000d529b", "filename": "src/libsyntax/feature_gate.rs", "status": "modified", "additions": 0, "deletions": 6, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Flibsyntax%2Ffeature_gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Flibsyntax%2Ffeature_gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibsyntax%2Ffeature_gate.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -1207,12 +1207,6 @@ impl<'a> Visitor<'a> for PostExpansionVisitor<'a> {\n                 }\n             }\n \n-            ast::ItemKind::Union(..) => {\n-                gate_feature_post!(&self, untagged_unions,\n-                                   i.span,\n-                                   \"unions are unstable and possibly buggy\");\n-            }\n-\n             ast::ItemKind::DefaultImpl(..) => {\n                 gate_feature_post!(&self, optin_builtin_traits,\n                                    i.span,"}, {"sha": "6298c87453ca6cdf66a242a175772a8c33367cb8", "filename": "src/test/compile-fail/borrowck/borrowck-union-borrow-nested.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-union-borrow-nested.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-union-borrow-nested.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-union-borrow-nested.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,10 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-// ignore-tidy-linelength\n-\n-#![feature(untagged_unions)]\n-\n #[derive(Clone, Copy)]\n struct S {\n     a: u8,"}, {"sha": "20b882e1f807c82dc24b78b5f9e0534cac176f61", "filename": "src/test/compile-fail/borrowck/borrowck-union-borrow.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-union-borrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-union-borrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-union-borrow.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -10,8 +10,6 @@\n \n // ignore-tidy-linelength\n \n-#![feature(untagged_unions)]\n-\n #[derive(Clone, Copy)]\n union U {\n     a: u8,"}, {"sha": "81376a1a169d49ad2aea6e68ac097764844dc909", "filename": "src/test/compile-fail/borrowck/borrowck-union-uninitialized.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-union-uninitialized.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-union-uninitialized.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Fborrowck-union-uninitialized.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n struct S {\n     a: u8,\n }"}, {"sha": "eeebb1b737a943cefe3c16c37abc35daa178e07e", "filename": "src/test/compile-fail/privacy/union-field-privacy-1.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Fprivacy%2Funion-field-privacy-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Fprivacy%2Funion-field-privacy-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Funion-field-privacy-1.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n mod m {\n     pub union U {\n         pub a: u8,"}, {"sha": "d6bb765202da53a3732b543d00b6dbb5cc356438", "filename": "src/test/compile-fail/privacy/union-field-privacy-2.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Fprivacy%2Funion-field-privacy-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Fprivacy%2Funion-field-privacy-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fprivacy%2Funion-field-privacy-2.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n mod m {\n     pub union U {\n         pub a: u8,"}, {"sha": "ee4d9fe99eeb80c6c24aa9a3148bbffec0c3494f", "filename": "src/test/compile-fail/union/union-const-eval.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-const-eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-const-eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funion%2Funion-const-eval.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n union U {\n     a: usize,\n     b: usize,"}, {"sha": "5f75e3cc4a2d60fd8ba7d4bbe40d8e39950d6cfa", "filename": "src/test/compile-fail/union/union-const-pat.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-const-pat.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-const-pat.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funion%2Funion-const-pat.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n union U {\n     a: usize,\n     b: usize,"}, {"sha": "ffd290fb073db18c67a41b580e585cbe00c5016b", "filename": "src/test/compile-fail/union/union-derive.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-derive.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-derive.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funion%2Funion-derive.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -10,8 +10,6 @@\n \n // Most traits cannot be derived for unions.\n \n-#![feature(untagged_unions)]\n-\n #[derive(\n     PartialEq, //~ ERROR this trait cannot be derived for unions\n     PartialOrd, //~ ERROR this trait cannot be derived for unions"}, {"sha": "1f499c49a6870b3b94f67420a689478b59424610", "filename": "src/test/compile-fail/union/union-empty.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-empty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-empty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funion%2Funion-empty.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n union U {} //~ ERROR unions cannot have zero fields\n \n fn main() {}"}, {"sha": "8a0490cdc6b6dd7b6519972652a6cf37f44d0990", "filename": "src/test/compile-fail/union/union-feature-gate.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-feature-gate.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-feature-gate.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funion%2Funion-feature-gate.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -10,8 +10,28 @@\n \n // gate-test-untagged_unions\n \n-union U { //~ ERROR unions are unstable and possibly buggy\n+union U1 { // OK\n     a: u8,\n }\n \n+union U2<T: Copy> { // OK\n+    a: T,\n+}\n+\n+union U3 { //~ ERROR unions with non-`Copy` fields are unstable\n+    a: String,\n+}\n+\n+union U4<T> { //~ ERROR unions with non-`Copy` fields are unstable\n+    a: T,\n+}\n+\n+union U5 { //~ ERROR unions with `Drop` implementations are unstable\n+    a: u8,\n+}\n+\n+impl Drop for U5 {\n+    fn drop(&mut self) {}\n+}\n+\n fn main() {}"}, {"sha": "b5d582a5746f729d6bed5d74d2987ae8a6a608c1", "filename": "src/test/compile-fail/union/union-fields.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-fields.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-fields.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funion%2Funion-fields.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n union U {\n     a: u8,\n     b: u16,"}, {"sha": "8bd422b42d879d65438ad90c01f92ee233d579de", "filename": "src/test/compile-fail/union/union-generic.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-generic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-generic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funion%2Funion-generic.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n use std::rc::Rc;\n \n union U<T: Copy> {"}, {"sha": "a64187c5f2344d3de2cc0fe98d056c1bf3d25bd2", "filename": "src/test/compile-fail/union/union-lint-dead-code.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-lint-dead-code.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-lint-dead-code.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funion%2Funion-lint-dead-code.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n #![deny(dead_code)]\n \n union Foo {"}, {"sha": "15a4197fe94c97804f74a5d764cf9a7ce013db5e", "filename": "src/test/compile-fail/union/union-repr-c.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-repr-c.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-repr-c.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funion%2Funion-repr-c.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,7 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n #![allow(unused)]\n #![deny(improper_ctypes)]\n "}, {"sha": "65c7c980b8ac25fccb7edf1656fffaf8a6c15675", "filename": "src/test/compile-fail/union/union-suggest-field.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-suggest-field.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fcompile-fail%2Funion%2Funion-suggest-field.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funion%2Funion-suggest-field.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n union U {\n     principal: u8,\n }"}, {"sha": "433196b526c5cfadc4ab3bdd0fb05873846f84ee", "filename": "src/test/debuginfo/union-smoke.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fdebuginfo%2Funion-smoke.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fdebuginfo%2Funion-smoke.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fdebuginfo%2Funion-smoke.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -34,7 +34,6 @@\n #![allow(unused)]\n #![feature(omit_gdb_pretty_printer_section)]\n #![omit_gdb_pretty_printer_section]\n-#![feature(untagged_unions)]\n \n union U {\n     a: (u8, u8),"}, {"sha": "2c4945622abdce2d3dec7fefe7e40b7abd354bcc", "filename": "src/test/run-pass/union/auxiliary/union.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Fauxiliary%2Funion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Fauxiliary%2Funion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funion%2Fauxiliary%2Funion.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n pub union U {\n     pub a: u8,\n     pub b: u16,"}, {"sha": "b706a81850ce8e89fa0017a279f374980af21945", "filename": "src/test/run-pass/union/union-backcomp.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-backcomp.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-backcomp.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funion%2Funion-backcomp.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n macro_rules! union {\n     () => (struct S;)\n }"}, {"sha": "5e5b2d4d7ce7b111fac70eae0c7fb03c1243ff9b", "filename": "src/test/run-pass/union/union-basic.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-basic.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-basic.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funion%2Funion-basic.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -13,8 +13,6 @@\n // FIXME: This test case makes little-endian assumptions.\n // ignore-s390x\n \n-#![feature(untagged_unions)]\n-\n extern crate union;\n use std::mem::{size_of, align_of, zeroed};\n "}, {"sha": "b3df7d658b15f34ef7d8c5b81bf3cbc07651535e", "filename": "src/test/run-pass/union/union-c-interop.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-c-interop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-c-interop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funion%2Funion-c-interop.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n #[derive(Clone, Copy)]\n #[repr(C)]\n struct LARGE_INTEGER_U {"}, {"sha": "77270364bb5e969ff480721a7409dd6ec0915c4d", "filename": "src/test/run-pass/union/union-const-trans.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-const-trans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-const-trans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funion%2Funion-const-trans.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n union U {\n     a: u64,\n     b: u64,"}, {"sha": "a88fdc57a3ef40eaceb83a1da3c7c930b78eaead", "filename": "src/test/run-pass/union/union-inherent-method.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-inherent-method.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-inherent-method.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funion%2Funion-inherent-method.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n union U {\n     a: u8,\n }"}, {"sha": "b6141ae82c37139d3700569cb3fac5d7ac6ab4eb", "filename": "src/test/run-pass/union/union-macro.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-macro.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-macro.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funion%2Funion-macro.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n macro_rules! duplicate {\n    ($i: item) => {\n         mod m1 {"}, {"sha": "81607236c9ecd295fd45e722d301fd57ae310977", "filename": "src/test/run-pass/union/union-pat-refutability.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-pat-refutability.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-pat-refutability.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funion%2Funion-pat-refutability.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n #[repr(u32)]\n enum Tag { I, F }\n "}, {"sha": "1cdaff2cab7c8c7e25efe55464f7744d03fdf8d3", "filename": "src/test/run-pass/union/union-trait-impl.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-trait-impl.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-trait-impl.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funion%2Funion-trait-impl.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n use std::fmt;\n \n union U {"}, {"sha": "7233687aaab532677de571dfdd7b7eab10b485b5", "filename": "src/test/run-pass/union/union-transmute.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-transmute.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frun-pass%2Funion%2Funion-transmute.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Funion%2Funion-transmute.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n extern crate core;\n use core::f32;\n "}, {"sha": "2eb25d9b7ddac34228f0689ea8ecf038d048121b", "filename": "src/test/rustdoc/union.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frustdoc%2Funion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Frustdoc%2Funion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frustdoc%2Funion.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -8,8 +8,6 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-#![feature(untagged_unions)]\n-\n // @has union/union.U.html\n pub union U {\n     // @has - //pre \"pub a: u8\""}, {"sha": "7f278e71b21c6118a3e8e524aa492dac622c3018", "filename": "src/test/ui/print_type_sizes/packed.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpacked.rs", "raw_url": "https://github.com/rust-lang/rust/raw/73c73e4a9509e2ecf593589442bff802dd53c9b4/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpacked.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fprint_type_sizes%2Fpacked.rs?ref=73c73e4a9509e2ecf593589442bff802dd53c9b4", "patch": "@@ -18,8 +18,6 @@\n // aligned (while on most it is 8-byte aligned) and so the resulting\n // padding and overall computed sizes can be quite different.\n \n-#![feature(untagged_unions)]\n-\n #![allow(dead_code)]\n \n #[derive(Default)]"}]}