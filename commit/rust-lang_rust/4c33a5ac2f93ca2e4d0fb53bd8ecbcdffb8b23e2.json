{"sha": "4c33a5ac2f93ca2e4d0fb53bd8ecbcdffb8b23e2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjRjMzNhNWFjMmY5M2NhMmU0ZDBmYjUzYmQ4ZWNiY2RmZmI4YjIzZTI=", "commit": {"author": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-11-19T06:55:59Z"}, "committer": {"name": "Nicholas Nethercote", "email": "nnethercote@mozilla.com", "date": "2019-11-19T06:55:59Z"}, "message": "Use a `SmallVec` for `Candidate::match_pairs`.\n\nThis is a small win for `encoding`.", "tree": {"sha": "5b61fa475f44df78efc208a72e5462b181373e86", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/5b61fa475f44df78efc208a72e5462b181373e86"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/4c33a5ac2f93ca2e4d0fb53bd8ecbcdffb8b23e2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/4c33a5ac2f93ca2e4d0fb53bd8ecbcdffb8b23e2", "html_url": "https://github.com/rust-lang/rust/commit/4c33a5ac2f93ca2e4d0fb53bd8ecbcdffb8b23e2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/4c33a5ac2f93ca2e4d0fb53bd8ecbcdffb8b23e2/comments", "author": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nnethercote", "id": 1940286, "node_id": "MDQ6VXNlcjE5NDAyODY=", "avatar_url": "https://avatars.githubusercontent.com/u/1940286?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nnethercote", "html_url": "https://github.com/nnethercote", "followers_url": "https://api.github.com/users/nnethercote/followers", "following_url": "https://api.github.com/users/nnethercote/following{/other_user}", "gists_url": "https://api.github.com/users/nnethercote/gists{/gist_id}", "starred_url": "https://api.github.com/users/nnethercote/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nnethercote/subscriptions", "organizations_url": "https://api.github.com/users/nnethercote/orgs", "repos_url": "https://api.github.com/users/nnethercote/repos", "events_url": "https://api.github.com/users/nnethercote/events{/privacy}", "received_events_url": "https://api.github.com/users/nnethercote/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "0f0c640e0ee5a9ad365e78e3c62239b3d65b7045", "url": "https://api.github.com/repos/rust-lang/rust/commits/0f0c640e0ee5a9ad365e78e3c62239b3d65b7045", "html_url": "https://github.com/rust-lang/rust/commit/0f0c640e0ee5a9ad365e78e3c62239b3d65b7045"}], "stats": {"total": 10, "additions": 6, "deletions": 4}, "files": [{"sha": "d33ddd1ecae33f10560add45a5894794c68193db", "filename": "src/librustc_mir/build/matches/mod.rs", "status": "modified", "additions": 4, "deletions": 3, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/4c33a5ac2f93ca2e4d0fb53bd8ecbcdffb8b23e2/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c33a5ac2f93ca2e4d0fb53bd8ecbcdffb8b23e2/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Fmod.rs?ref=4c33a5ac2f93ca2e4d0fb53bd8ecbcdffb8b23e2", "patch": "@@ -17,6 +17,7 @@ use rustc::ty::{self, CanonicalUserTypeAnnotation, Ty};\n use rustc::ty::layout::VariantIdx;\n use rustc_index::bit_set::BitSet;\n use rustc_data_structures::fx::{FxHashMap, FxHashSet};\n+use smallvec::{SmallVec, smallvec};\n use syntax::ast::Name;\n use syntax_pos::Span;\n \n@@ -166,7 +167,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n                         |(pattern, pre_binding_block)| {\n                             Candidate {\n                                 span: pattern.span,\n-                                match_pairs: vec![\n+                                match_pairs: smallvec![\n                                     MatchPair::new(scrutinee_place.clone(), pattern),\n                                 ],\n                                 bindings: vec![],\n@@ -421,7 +422,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n         // create a dummy candidate\n         let mut candidate = Candidate {\n             span: irrefutable_pat.span,\n-            match_pairs: vec![MatchPair::new(initializer.clone(), &irrefutable_pat)],\n+            match_pairs: smallvec![MatchPair::new(initializer.clone(), &irrefutable_pat)],\n             bindings: vec![],\n             ascriptions: vec![],\n \n@@ -671,7 +672,7 @@ pub struct Candidate<'pat, 'tcx> {\n     span: Span,\n \n     // all of these must be satisfied...\n-    match_pairs: Vec<MatchPair<'pat, 'tcx>>,\n+    match_pairs: SmallVec<[MatchPair<'pat, 'tcx>; 1]>,\n \n     // ...these bindings established...\n     bindings: Vec<Binding<'tcx>>,"}, {"sha": "aec9e6e57d46c263527978fd7b4a1dcbceebda35", "filename": "src/librustc_mir/build/matches/util.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/4c33a5ac2f93ca2e4d0fb53bd8ecbcdffb8b23e2/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Futil.rs", "raw_url": "https://github.com/rust-lang/rust/raw/4c33a5ac2f93ca2e4d0fb53bd8ecbcdffb8b23e2/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Futil.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fbuild%2Fmatches%2Futil.rs?ref=4c33a5ac2f93ca2e4d0fb53bd8ecbcdffb8b23e2", "patch": "@@ -2,6 +2,7 @@ use crate::build::Builder;\n use crate::build::matches::MatchPair;\n use crate::hair::*;\n use rustc::mir::*;\n+use smallvec::SmallVec;\n use std::u32;\n use std::convert::TryInto;\n \n@@ -25,7 +26,7 @@ impl<'a, 'tcx> Builder<'a, 'tcx> {\n     }\n \n     pub fn prefix_slice_suffix<'pat>(&mut self,\n-                                     match_pairs: &mut Vec<MatchPair<'pat, 'tcx>>,\n+                                     match_pairs: &mut SmallVec<[MatchPair<'pat, 'tcx>; 1]>,\n                                      place: &Place<'tcx>,\n                                      prefix: &'pat [Pat<'tcx>],\n                                      opt_slice: Option<&'pat Pat<'tcx>>,"}]}