{"sha": "7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdiNWMzZDJiMjA4ZjQ3YjA3NTBlYTZjMzlmNmYzZjk3Y2IxY2ExYmI=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-17T15:42:55Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-05-17T15:42:55Z"}, "message": "Auto merge of #41857 - dhardy:master, r=steveklabnik\n\nloop_break_value: add documentation for book\n\nSome notes at the top of the file.\n\nr? @steveklabnik", "tree": {"sha": "7b6ac64fb18707e9b9412d4474efea6f009351b8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7b6ac64fb18707e9b9412d4474efea6f009351b8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb", "html_url": "https://github.com/rust-lang/rust/commit/7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "2b6ed3a05149325448a42a119a3174093caa41f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/2b6ed3a05149325448a42a119a3174093caa41f3", "html_url": "https://github.com/rust-lang/rust/commit/2b6ed3a05149325448a42a119a3174093caa41f3"}, {"sha": "7ab35b703a2213eba91cadcad90aefa169f48f1f", "url": "https://api.github.com/repos/rust-lang/rust/commits/7ab35b703a2213eba91cadcad90aefa169f48f1f", "html_url": "https://github.com/rust-lang/rust/commit/7ab35b703a2213eba91cadcad90aefa169f48f1f"}], "stats": {"total": 73, "additions": 73, "deletions": 0}, "files": [{"sha": "e8fefe3b73344b4376cfce092dc8b9d37cf21bff", "filename": "src/doc/unstable-book/src/language-features/loop-break-value.md", "status": "modified", "additions": 73, "deletions": 0, "changes": 73, "blob_url": "https://github.com/rust-lang/rust/blob/7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Floop-break-value.md", "raw_url": "https://github.com/rust-lang/rust/raw/7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Floop-break-value.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Floop-break-value.md?ref=7b5c3d2b208f47b0750ea6c39f6f3f97cb1ca1bb", "patch": "@@ -4,7 +4,80 @@ The tracking issue for this feature is: [#37339]\n \n [#37339]: https://github.com/rust-lang/rust/issues/37339\n \n+Documentation to be appended to section G of the book.\n+\n ------------------------\n \n+### Loops as expressions\n+\n+Like most things in Rust, loops are expressions, and have a value; normally `()` unless the loop\n+never exits.\n+A `loop` can instead evaluate to a useful value via *break with value*:\n+\n+```rust\n+#![feature(loop_break_value)]\n+\n+// Find the first square number over 1000:\n+let mut n = 1;\n+let square = loop {\n+    if n * n > 1000 {\n+        break n * n;\n+    }\n+    n += 1;\n+};\n+```\n+\n+The evaluation type may be specified externally:\n+\n+```rust\n+#![feature(loop_break_value)]\n+\n+// Declare that value returned is unsigned 64-bit:\n+let n: u64 = loop {\n+    break 1;\n+};\n+```\n+\n+It is an error if types do not agree, either between a \"break\" value and an external requirement,\n+or between multiple \"break\" values:\n+\n+```no_compile\n+#![feature(loop_break_value)]\n+\n+loop {\n+    if true {\n+        break 1u32;\n+    } else {\n+        break 0u8;  // error: types do not agree\n+    }\n+};\n+\n+let n: i32 = loop {\n+    break 0u32; // error: type does not agree with external requirement\n+};\n+```\n+\n+#### Break: label, value\n+\n+Four forms of `break` are available, where EXPR is some expression which evaluates to a value:\n+\n+1.  `break;`\n+2.  `break 'label;`\n+3.  `break EXPR;`\n+4.  `break 'label EXPR;`\n+\n+When no value is given, the value `()` is assumed, thus `break;` is equivalent to `break ();`.\n+\n+Using a label allows returning a value from an inner loop:\n \n+```rust\n+#![feature(loop_break_value)]\n \n+let result = 'outer: loop {\n+    for n in 1..10 {\n+        if n > 4 {\n+            break 'outer n;\n+        }\n+    }\n+};\n+```"}]}