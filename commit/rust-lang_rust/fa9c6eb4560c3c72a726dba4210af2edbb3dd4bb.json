{"sha": "fa9c6eb4560c3c72a726dba4210af2edbb3dd4bb", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZhOWM2ZWI0NTYwYzNjNzJhNzI2ZGJhNDIxMGFmMmVkYmIzZGQ0YmI=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-23T10:01:45Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2021-03-23T10:04:43Z"}, "message": "Improve readability", "tree": {"sha": "254ec6603c9d9b0b3a09b135c05bf86fffe884d5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/254ec6603c9d9b0b3a09b135c05bf86fffe884d5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fa9c6eb4560c3c72a726dba4210af2edbb3dd4bb", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fa9c6eb4560c3c72a726dba4210af2edbb3dd4bb", "html_url": "https://github.com/rust-lang/rust/commit/fa9c6eb4560c3c72a726dba4210af2edbb3dd4bb", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fa9c6eb4560c3c72a726dba4210af2edbb3dd4bb/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "ba48c0d8bd93a0cb5c141f9296843bf5028d960d", "url": "https://api.github.com/repos/rust-lang/rust/commits/ba48c0d8bd93a0cb5c141f9296843bf5028d960d", "html_url": "https://github.com/rust-lang/rust/commit/ba48c0d8bd93a0cb5c141f9296843bf5028d960d"}], "stats": {"total": 1, "additions": 1, "deletions": 0}, "files": [{"sha": "07628935f0e86d23c80c2730b49501766721ba3d", "filename": "crates/base_db/src/input.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fa9c6eb4560c3c72a726dba4210af2edbb3dd4bb/crates%2Fbase_db%2Fsrc%2Finput.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fa9c6eb4560c3c72a726dba4210af2edbb3dd4bb/crates%2Fbase_db%2Fsrc%2Finput.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fbase_db%2Fsrc%2Finput.rs?ref=fa9c6eb4560c3c72a726dba4210af2edbb3dd4bb", "patch": "@@ -280,6 +280,7 @@ impl CrateGraph {\n         let mut worklist = vec![of];\n         let mut rev_deps = FxHashSet::default();\n         rev_deps.insert(of);\n+\n         let mut inverted_graph = FxHashMap::<_, Vec<_>>::default();\n         self.arena.iter().for_each(|(&krate, data)| {\n             data.dependencies"}]}