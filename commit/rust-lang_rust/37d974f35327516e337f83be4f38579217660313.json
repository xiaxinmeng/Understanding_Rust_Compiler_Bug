{"sha": "37d974f35327516e337f83be4f38579217660313", "node_id": "MDY6Q29tbWl0NzI0NzEyOjM3ZDk3NGYzNTMyNzUxNmUzMzdmODNiZTRmMzg1NzkyMTc2NjAzMTM=", "commit": {"author": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-08-17T19:14:08Z"}, "committer": {"name": "Niko Matsakis", "email": "niko@alum.mit.edu", "date": "2016-08-17T19:21:59Z"}, "message": "remove seemingly unnecessary call to encode_predicates", "tree": {"sha": "fae06e5a61594cd4d817c1932be2c474a0ee10e4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fae06e5a61594cd4d817c1932be2c474a0ee10e4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/37d974f35327516e337f83be4f38579217660313", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/37d974f35327516e337f83be4f38579217660313", "html_url": "https://github.com/rust-lang/rust/commit/37d974f35327516e337f83be4f38579217660313", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/37d974f35327516e337f83be4f38579217660313/comments", "author": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "committer": {"login": "nikomatsakis", "id": 155238, "node_id": "MDQ6VXNlcjE1NTIzOA==", "avatar_url": "https://avatars.githubusercontent.com/u/155238?v=4", "gravatar_id": "", "url": "https://api.github.com/users/nikomatsakis", "html_url": "https://github.com/nikomatsakis", "followers_url": "https://api.github.com/users/nikomatsakis/followers", "following_url": "https://api.github.com/users/nikomatsakis/following{/other_user}", "gists_url": "https://api.github.com/users/nikomatsakis/gists{/gist_id}", "starred_url": "https://api.github.com/users/nikomatsakis/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/nikomatsakis/subscriptions", "organizations_url": "https://api.github.com/users/nikomatsakis/orgs", "repos_url": "https://api.github.com/users/nikomatsakis/repos", "events_url": "https://api.github.com/users/nikomatsakis/events{/privacy}", "received_events_url": "https://api.github.com/users/nikomatsakis/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6b33f47514f47267d9e07bebbf4c97b2404fa58c", "url": "https://api.github.com/repos/rust-lang/rust/commits/6b33f47514f47267d9e07bebbf4c97b2404fa58c", "html_url": "https://github.com/rust-lang/rust/commit/6b33f47514f47267d9e07bebbf4c97b2404fa58c"}], "stats": {"total": 4, "additions": 0, "deletions": 4}, "files": [{"sha": "420dfbc58bf19e95efd5efca1d1908156bb04ea9", "filename": "src/librustc_metadata/encoder.rs", "status": "modified", "additions": 0, "deletions": 4, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/37d974f35327516e337f83be4f38579217660313/src%2Flibrustc_metadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/37d974f35327516e337f83be4f38579217660313/src%2Flibrustc_metadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_metadata%2Fencoder.rs?ref=37d974f35327516e337f83be4f38579217660313", "patch": "@@ -767,10 +767,6 @@ impl<'a, 'tcx, 'encoder> ItemContentBuilder<'a, 'tcx, 'encoder> {\n         if let Some(ii) = impl_item_opt {\n             encode_attributes(self.rbml_w, &ii.attrs);\n             encode_defaultness(self.rbml_w, ii.defaultness);\n-        } else {\n-            // TODO this looks bogus and unnecessary\n-            self.encode_predicates(&ecx.tcx.lookup_predicates(associated_type.def_id),\n-                                   tag_item_generics);\n         }\n \n         if let Some(ty) = associated_type.ty {"}]}