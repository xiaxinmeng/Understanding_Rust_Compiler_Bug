{"sha": "da4a12038bac647b8d07211588c21f1ca07c12e3", "node_id": "MDY6Q29tbWl0NzI0NzEyOmRhNGExMjAzOGJhYzY0N2I4ZDA3MjExNTg4YzIxZjFjYTA3YzEyZTM=", "commit": {"author": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-09-30T19:19:55Z"}, "committer": {"name": "David Wood", "email": "david@davidtw.co", "date": "2018-10-01T11:50:21Z"}, "message": "Introduce language items for `Arc` and `Rc`.\n\nThis commit introduces language items for `Arc` and `Rc` so that types\ncan later be checked to be `Arc` or `Rc` in the NLL borrow checker. The\n`lang` attribute is currently limited to `stage1` as it requires a\ncompiler built with knowledge of the expected language items.", "tree": {"sha": "e739f669e9665a433a53a16f9062e325450cff3f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e739f669e9665a433a53a16f9062e325450cff3f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/da4a12038bac647b8d07211588c21f1ca07c12e3", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCgAdFiEEWwgxPGhT5b/6kagXAXYLT59T8VQFAluyCf0ACgkQAXYLT59T\n8VQ30Q//TBeL1cQ0Joez+8+STwBDcVXVOd6uJqorDwAV0um+8KDQum5e2IPQX1tS\nzTVlIBBpLzqYP/mdR2xomfKiLt7ivDS6ZSnv/n68ld/s8Rj2kKlOaqf2OTtLriZU\nM0y8CooO2YAbbwUITiD1nSa8F9OG423kzLyhld3JFCdgFmwBkAZxxzwF5jyW+p86\nBxAaOraE/0pGAD/wxwIS1VWbN0eQP1DD9kPUHxz51p/Pj9yCcJEmOjDuppvMd5WZ\n9EsLqeRLCWmAGf3jO0/iucYzp9B/na9NJ4supjMCyFyvvL6efaKxmJa6pQwQT0go\nHb9F7ptxQHpNkdxrVRpz4AtuYWLrghGYBGDgzWS8erj1Ymc+R9wcdk4HljQh5lHq\ncEq0kZQcFj4Lcc4paMAlhUBH+wmGk9cUpSpun4SQrc2Z4Uv8OEWrSyad2IMoazKA\nYJJgidnelLTK4XanirfhKw5RSuijUiguNpA2za0X9GaM1swlcytHKX1i99nAN+bS\nSrXI2ruQASSib33hHT0tXbrcryhhZ6DRrQaySG7cmaGCfIu4taS/fYXdhjNDky36\n8vpxYHUyr1kL8B8gdApbcXKNumhCvm1cvnlxjUbUw3UDlzujqQ0+ZZQraCcpnNIj\nZPp8pl0Dwt5SU5EslKxp1muLvmd4YKhVY2LWaBKUTTAW9jaO6Kc=\n=2CBA\n-----END PGP SIGNATURE-----", "payload": "tree e739f669e9665a433a53a16f9062e325450cff3f\nparent 1886d5fe1cdd1a016ecea9fc93d68b3052c528c8\nauthor David Wood <david@davidtw.co> 1538335195 +0200\ncommitter David Wood <david@davidtw.co> 1538394621 +0200\n\nIntroduce language items for `Arc` and `Rc`.\n\nThis commit introduces language items for `Arc` and `Rc` so that types\ncan later be checked to be `Arc` or `Rc` in the NLL borrow checker. The\n`lang` attribute is currently limited to `stage1` as it requires a\ncompiler built with knowledge of the expected language items.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/da4a12038bac647b8d07211588c21f1ca07c12e3", "html_url": "https://github.com/rust-lang/rust/commit/da4a12038bac647b8d07211588c21f1ca07c12e3", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/da4a12038bac647b8d07211588c21f1ca07c12e3/comments", "author": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "committer": {"login": "davidtwco", "id": 1295100, "node_id": "MDQ6VXNlcjEyOTUxMDA=", "avatar_url": "https://avatars.githubusercontent.com/u/1295100?v=4", "gravatar_id": "", "url": "https://api.github.com/users/davidtwco", "html_url": "https://github.com/davidtwco", "followers_url": "https://api.github.com/users/davidtwco/followers", "following_url": "https://api.github.com/users/davidtwco/following{/other_user}", "gists_url": "https://api.github.com/users/davidtwco/gists{/gist_id}", "starred_url": "https://api.github.com/users/davidtwco/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/davidtwco/subscriptions", "organizations_url": "https://api.github.com/users/davidtwco/orgs", "repos_url": "https://api.github.com/users/davidtwco/repos", "events_url": "https://api.github.com/users/davidtwco/events{/privacy}", "received_events_url": "https://api.github.com/users/davidtwco/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "url": "https://api.github.com/repos/rust-lang/rust/commits/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8", "html_url": "https://github.com/rust-lang/rust/commit/1886d5fe1cdd1a016ecea9fc93d68b3052c528c8"}], "stats": {"total": 45, "additions": 44, "deletions": 1}, "files": [{"sha": "b16739b4743a9ebb0070527216419f6388da4fb3", "filename": "src/doc/unstable-book/src/language-features/lang-items.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/da4a12038bac647b8d07211588c21f1ca07c12e3/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md", "raw_url": "https://github.com/rust-lang/rust/raw/da4a12038bac647b8d07211588c21f1ca07c12e3/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdoc%2Funstable-book%2Fsrc%2Flanguage-features%2Flang-items.md?ref=da4a12038bac647b8d07211588c21f1ca07c12e3", "patch": "@@ -311,3 +311,5 @@ the source code.\n   - `freeze`: `libcore/marker.rs`\n   - `debug_trait`: `libcore/fmt/mod.rs`\n   - `non_zero`: `libcore/nonzero.rs`\n+  - `arc`: `liballoc/sync.rs`\n+  - `rc`: `liballoc/rc.rs`"}, {"sha": "915b8e7787e998d0d12fb19147172675cda8a236", "filename": "src/liballoc/rc.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/da4a12038bac647b8d07211588c21f1ca07c12e3/src%2Fliballoc%2Frc.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da4a12038bac647b8d07211588c21f1ca07c12e3/src%2Fliballoc%2Frc.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Frc.rs?ref=da4a12038bac647b8d07211588c21f1ca07c12e3", "patch": "@@ -282,6 +282,7 @@ struct RcBox<T: ?Sized> {\n /// type `T`.\n ///\n /// [get_mut]: #method.get_mut\n+#[cfg_attr(all(not(stage0), not(test)), lang = \"rc\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Rc<T: ?Sized> {\n     ptr: NonNull<RcBox<T>>,"}, {"sha": "9e245fbd7bbe563595a72054a70f69ed72a5dffe", "filename": "src/liballoc/sync.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/da4a12038bac647b8d07211588c21f1ca07c12e3/src%2Fliballoc%2Fsync.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da4a12038bac647b8d07211588c21f1ca07c12e3/src%2Fliballoc%2Fsync.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fliballoc%2Fsync.rs?ref=da4a12038bac647b8d07211588c21f1ca07c12e3", "patch": "@@ -199,6 +199,7 @@ const MAX_REFCOUNT: usize = (isize::MAX) as usize;\n /// counting in general.\n ///\n /// [rc_examples]: ../../std/rc/index.html#examples\n+#[cfg_attr(all(not(stage0), not(test)), lang = \"arc\")]\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct Arc<T: ?Sized> {\n     ptr: NonNull<ArcInner<T>>,"}, {"sha": "ef70a4cc45d56e0c95082d90bc88d6db1631d000", "filename": "src/librustc/middle/lang_items.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/da4a12038bac647b8d07211588c21f1ca07c12e3/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da4a12038bac647b8d07211588c21f1ca07c12e3/src%2Flibrustc%2Fmiddle%2Flang_items.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Flang_items.rs?ref=da4a12038bac647b8d07211588c21f1ca07c12e3", "patch": "@@ -362,6 +362,9 @@ language_item_table! {\n     AlignOffsetLangItem,             \"align_offset\",            align_offset_fn;\n \n     TerminationTraitLangItem,        \"termination\",             termination;\n+\n+    Arc,                             \"arc\",                     arc;\n+    Rc,                              \"rc\",                      rc;\n }\n \n impl<'a, 'tcx, 'gcx> TyCtxt<'a, 'tcx, 'gcx> {"}, {"sha": "633551aed18a73155f0e63a23fe2ec53fef9851b", "filename": "src/librustc/ty/mod.rs", "status": "modified", "additions": 21, "deletions": 1, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/da4a12038bac647b8d07211588c21f1ca07c12e3/src%2Flibrustc%2Fty%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da4a12038bac647b8d07211588c21f1ca07c12e3/src%2Flibrustc%2Fty%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fmod.rs?ref=da4a12038bac647b8d07211588c21f1ca07c12e3", "patch": "@@ -1694,9 +1694,13 @@ bitflags! {\n         const IS_FUNDAMENTAL      = 1 << 2;\n         const IS_UNION            = 1 << 3;\n         const IS_BOX              = 1 << 4;\n+        /// Indicates whether the type is an `Arc`.\n+        const IS_ARC              = 1 << 5;\n+        /// Indicates whether the type is an `Rc`.\n+        const IS_RC               = 1 << 6;\n         /// Indicates whether the variant list of this ADT is `#[non_exhaustive]`.\n         /// (i.e., this flag is never set unless this ADT is an enum).\n-        const IS_VARIANT_LIST_NON_EXHAUSTIVE   = 1 << 5;\n+        const IS_VARIANT_LIST_NON_EXHAUSTIVE   = 1 << 7;\n     }\n }\n \n@@ -2016,6 +2020,12 @@ impl<'a, 'gcx, 'tcx> AdtDef {\n         if Some(did) == tcx.lang_items().owned_box() {\n             flags = flags | AdtFlags::IS_BOX;\n         }\n+        if Some(did) == tcx.lang_items().arc() {\n+            flags = flags | AdtFlags::IS_ARC;\n+        }\n+        if Some(did) == tcx.lang_items().rc() {\n+            flags = flags | AdtFlags::IS_RC;\n+        }\n         if kind == AdtKind::Enum && tcx.has_attr(did, \"non_exhaustive\") {\n             debug!(\"found non-exhaustive variant list for {:?}\", did);\n             flags = flags | AdtFlags::IS_VARIANT_LIST_NON_EXHAUSTIVE;\n@@ -2094,6 +2104,16 @@ impl<'a, 'gcx, 'tcx> AdtDef {\n         self.flags.intersects(AdtFlags::IS_PHANTOM_DATA)\n     }\n \n+    /// Returns `true` if this is `Arc<T>`.\n+    pub fn is_arc(&self) -> bool {\n+        self.flags.intersects(AdtFlags::IS_ARC)\n+    }\n+\n+    /// Returns `true` if this is `Rc<T>`.\n+    pub fn is_rc(&self) -> bool {\n+        self.flags.intersects(AdtFlags::IS_RC)\n+    }\n+\n     /// Returns true if this is Box<T>.\n     #[inline]\n     pub fn is_box(&self) -> bool {"}, {"sha": "4f80bf45ab1f9f9300e03adea3bcd4ab75b57efc", "filename": "src/librustc/ty/sty.rs", "status": "modified", "additions": 16, "deletions": 0, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/da4a12038bac647b8d07211588c21f1ca07c12e3/src%2Flibrustc%2Fty%2Fsty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/da4a12038bac647b8d07211588c21f1ca07c12e3/src%2Flibrustc%2Fty%2Fsty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fty%2Fsty.rs?ref=da4a12038bac647b8d07211588c21f1ca07c12e3", "patch": "@@ -1598,6 +1598,22 @@ impl<'a, 'gcx, 'tcx> TyS<'tcx> {\n         }\n     }\n \n+    /// Returns `true` if this type is an `Arc<T>`.\n+    pub fn is_arc(&self) -> bool {\n+        match self.sty {\n+            Adt(def, _) => def.is_arc(),\n+            _ => false,\n+        }\n+    }\n+\n+    /// Returns `true` if this type is an `Rc<T>`.\n+    pub fn is_rc(&self) -> bool {\n+        match self.sty {\n+            Adt(def, _) => def.is_rc(),\n+            _ => false,\n+        }\n+    }\n+\n     pub fn is_box(&self) -> bool {\n         match self.sty {\n             Adt(def, _) => def.is_box(),"}]}