{"sha": "b26a472ccb32a520eb809505a7dc465f8050268f", "node_id": "MDY6Q29tbWl0NzI0NzEyOmIyNmE0NzJjY2IzMmE1MjBlYjgwOTUwNWE3ZGM0NjVmODA1MDI2OGY=", "commit": {"author": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-05-25T09:15:02Z"}, "committer": {"name": "Florian Diebold", "email": "flodiebold@gmail.com", "date": "2021-05-25T09:15:02Z"}, "message": "Fix type mismatch caused by macros\n\nMacroStmts should be completely transparent, but it prevented\ncoercion. (I should maybe give `infer_expr` and `infer_expr_inner`\nbetter names.)", "tree": {"sha": "a74c14f9e99375a75ecfa2efb4c2ea0a6544fb46", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a74c14f9e99375a75ecfa2efb4c2ea0a6544fb46"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b26a472ccb32a520eb809505a7dc465f8050268f", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b26a472ccb32a520eb809505a7dc465f8050268f", "html_url": "https://github.com/rust-lang/rust/commit/b26a472ccb32a520eb809505a7dc465f8050268f", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b26a472ccb32a520eb809505a7dc465f8050268f/comments", "author": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "committer": {"login": "flodiebold", "id": 906069, "node_id": "MDQ6VXNlcjkwNjA2OQ==", "avatar_url": "https://avatars.githubusercontent.com/u/906069?v=4", "gravatar_id": "", "url": "https://api.github.com/users/flodiebold", "html_url": "https://github.com/flodiebold", "followers_url": "https://api.github.com/users/flodiebold/followers", "following_url": "https://api.github.com/users/flodiebold/following{/other_user}", "gists_url": "https://api.github.com/users/flodiebold/gists{/gist_id}", "starred_url": "https://api.github.com/users/flodiebold/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/flodiebold/subscriptions", "organizations_url": "https://api.github.com/users/flodiebold/orgs", "repos_url": "https://api.github.com/users/flodiebold/repos", "events_url": "https://api.github.com/users/flodiebold/events{/privacy}", "received_events_url": "https://api.github.com/users/flodiebold/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "8b049ec393230e4b9fea3022a3ebf34e2af5395d", "url": "https://api.github.com/repos/rust-lang/rust/commits/8b049ec393230e4b9fea3022a3ebf34e2af5395d", "html_url": "https://github.com/rust-lang/rust/commit/8b049ec393230e4b9fea3022a3ebf34e2af5395d"}], "stats": {"total": 46, "additions": 45, "deletions": 1}, "files": [{"sha": "79a7321060011276daf83919653ab62abdc66f71", "filename": "crates/hir_ty/src/infer/expr.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b26a472ccb32a520eb809505a7dc465f8050268f/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b26a472ccb32a520eb809505a7dc465f8050268f/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Finfer%2Fexpr.rs?ref=b26a472ccb32a520eb809505a7dc465f8050268f", "patch": "@@ -805,7 +805,7 @@ impl<'a> InferenceContext<'a> {\n                     None => self.table.new_float_var(),\n                 },\n             },\n-            Expr::MacroStmts { tail } => self.infer_expr(*tail, expected),\n+            Expr::MacroStmts { tail } => self.infer_expr_inner(*tail, expected),\n         };\n         // use a new type variable if we got unknown here\n         let ty = self.insert_type_vars_shallow(ty);"}, {"sha": "7e9fc8735b27ed12fd9e279277e931758fda42b6", "filename": "crates/hir_ty/src/tests/coercion.rs", "status": "modified", "additions": 44, "deletions": 0, "changes": 44, "blob_url": "https://github.com/rust-lang/rust/blob/b26a472ccb32a520eb809505a7dc465f8050268f/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b26a472ccb32a520eb809505a7dc465f8050268f/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fhir_ty%2Fsrc%2Ftests%2Fcoercion.rs?ref=b26a472ccb32a520eb809505a7dc465f8050268f", "patch": "@@ -912,3 +912,47 @@ fn test() -> i32 {\n         \"#,\n     )\n }\n+\n+#[test]\n+fn panic_macro() {\n+    check_infer_with_mismatches(\n+        r#\"\n+mod panic {\n+    #[macro_export]\n+    pub macro panic_2015 {\n+        () => (\n+            $crate::panicking::panic(\"explicit panic\")\n+        ),\n+    }\n+}\n+\n+mod panicking {\n+    pub fn panic() -> ! { loop {} }\n+}\n+\n+#[rustc_builtin_macro = \"core_panic\"]\n+macro_rules! panic {\n+    // Expands to either `$crate::panic::panic_2015` or `$crate::panic::panic_2021`\n+    // depending on the edition of the caller.\n+    ($($arg:tt)*) => {\n+        /* compiler built-in */\n+    };\n+}\n+\n+fn main() {\n+    panic!(\"internal error: entered unreachable code\")\n+}\n+        \"#,\n+        expect![[r#\"\n+            190..201 '{ loop {} }': !\n+            192..199 'loop {}': !\n+            197..199 '{}': ()\n+            !0..24 '$crate...:panic': fn panic() -> !\n+            !0..42 '$crate...anic\")': !\n+            !0..42 '$crate...anic\")': !\n+            !0..70 '$crate...code\")': !\n+            !25..41 '\"expli...panic\"': &str\n+            470..528 '{     ...de\") }': ()\n+        \"#]],\n+    );\n+}"}]}