{"sha": "e46a8bde3c2ef7b1281f3d01e31febc687be2d12", "node_id": "MDY6Q29tbWl0NzI0NzEyOmU0NmE4YmRlM2MyZWY3YjEyODFmM2QwMWUzMWZlYmM2ODdiZTJkMTI=", "commit": {"author": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-03-20T21:13:27Z"}, "committer": {"name": "Alex Crichton", "email": "alex@alexcrichton.com", "date": "2017-04-18T13:49:39Z"}, "message": "std: Back out backtrace pruning logic\n\nIt was discovered #40264 that this backtrace pruning logic is a little too\naggressive, so while we figure how out to handle #40264 this commit backs out\nthe changes to prune frames. Note that other cosmetic changes, such as better\npath printing and such remain.", "tree": {"sha": "fd22fefc0b57a7cdfa7c52f435540f41a2a9e330", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/fd22fefc0b57a7cdfa7c52f435540f41a2a9e330"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/e46a8bde3c2ef7b1281f3d01e31febc687be2d12", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/e46a8bde3c2ef7b1281f3d01e31febc687be2d12", "html_url": "https://github.com/rust-lang/rust/commit/e46a8bde3c2ef7b1281f3d01e31febc687be2d12", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/e46a8bde3c2ef7b1281f3d01e31febc687be2d12/comments", "author": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "alexcrichton", "id": 64996, "node_id": "MDQ6VXNlcjY0OTk2", "avatar_url": "https://avatars.githubusercontent.com/u/64996?v=4", "gravatar_id": "", "url": "https://api.github.com/users/alexcrichton", "html_url": "https://github.com/alexcrichton", "followers_url": "https://api.github.com/users/alexcrichton/followers", "following_url": "https://api.github.com/users/alexcrichton/following{/other_user}", "gists_url": "https://api.github.com/users/alexcrichton/gists{/gist_id}", "starred_url": "https://api.github.com/users/alexcrichton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/alexcrichton/subscriptions", "organizations_url": "https://api.github.com/users/alexcrichton/orgs", "repos_url": "https://api.github.com/users/alexcrichton/repos", "events_url": "https://api.github.com/users/alexcrichton/events{/privacy}", "received_events_url": "https://api.github.com/users/alexcrichton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5516bcc4588ea6192298b4e3682eb1d09581912a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5516bcc4588ea6192298b4e3682eb1d09581912a", "html_url": "https://github.com/rust-lang/rust/commit/5516bcc4588ea6192298b4e3682eb1d09581912a"}], "stats": {"total": 84, "additions": 4, "deletions": 80}, "files": [{"sha": "04fe5f78b03ce71bc99654739c2433e14d162d5c", "filename": "src/libstd/sys_common/backtrace.rs", "status": "modified", "additions": 4, "deletions": 80, "changes": 84, "blob_url": "https://github.com/rust-lang/rust/blob/e46a8bde3c2ef7b1281f3d01e31febc687be2d12/src%2Flibstd%2Fsys_common%2Fbacktrace.rs", "raw_url": "https://github.com/rust-lang/rust/raw/e46a8bde3c2ef7b1281f3d01e31febc687be2d12/src%2Flibstd%2Fsys_common%2Fbacktrace.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys_common%2Fbacktrace.rs?ref=e46a8bde3c2ef7b1281f3d01e31febc687be2d12", "patch": "@@ -93,87 +93,11 @@ fn _print(w: &mut Write, format: PrintFormat) -> io::Result<()> {\n     Ok(())\n }\n \n-fn filter_frames(frames: &[Frame],\n-                 format: PrintFormat,\n-                 context: &BacktraceContext) -> (usize, usize)\n+fn filter_frames(_frames: &[Frame],\n+                 _format: PrintFormat,\n+                 _context: &BacktraceContext) -> (usize, usize)\n {\n-    if format == PrintFormat::Full {\n-        return (0, 0);\n-    }\n-\n-    // We want to filter out frames with some prefixes\n-    // from both top and bottom of the call stack.\n-    static BAD_PREFIXES_TOP: &'static [&'static str] = &[\n-        \"_ZN3std3sys3imp9backtrace\",\n-        \"ZN3std3sys3imp9backtrace\",\n-        \"std::sys::imp::backtrace\",\n-        \"_ZN3std10sys_common9backtrace\",\n-        \"ZN3std10sys_common9backtrace\",\n-        \"std::sys_common::backtrace\",\n-        \"_ZN3std9panicking\",\n-        \"ZN3std9panicking\",\n-        \"std::panicking\",\n-        \"_ZN4core9panicking\",\n-        \"ZN4core9panicking\",\n-        \"core::panicking\",\n-        \"_ZN4core6result13unwrap_failed\",\n-        \"ZN4core6result13unwrap_failed\",\n-        \"core::result::unwrap_failed\",\n-        \"rust_begin_unwind\",\n-        \"_ZN4drop\",\n-        \"mingw_set_invalid_parameter_handler\",\n-    ];\n-    static BAD_PREFIXES_BOTTOM: &'static [&'static str] = &[\n-        \"_ZN3std9panicking\",\n-        \"ZN3std9panicking\",\n-        \"std::panicking\",\n-        \"_ZN3std5panic\",\n-        \"ZN3std5panic\",\n-        \"std::panic\",\n-        \"_ZN4core9panicking\",\n-        \"ZN4core9panicking\",\n-        \"core::panicking\",\n-        \"_ZN3std2rt10lang_start\",\n-        \"ZN3std2rt10lang_start\",\n-        \"std::rt::lang_start\",\n-        \"panic_unwind::__rust_maybe_catch_panic\",\n-        \"__rust_maybe_catch_panic\",\n-        \"_rust_maybe_catch_panic\",\n-        \"__libc_start_main\",\n-        \"__rust_try\",\n-        \"_start\",\n-        \"main\",\n-        \"BaseThreadInitThunk\",\n-        \"RtlInitializeExceptionChain\",\n-        \"__scrt_common_main_seh\",\n-        \"_ZN4drop\",\n-        \"mingw_set_invalid_parameter_handler\",\n-    ];\n-\n-    let is_good_frame = |frame: Frame, bad_prefixes: &[&str]| {\n-        resolve_symname(frame, |symname| {\n-            if let Some(mangled_symbol_name) = symname {\n-                if !bad_prefixes.iter().any(|s| mangled_symbol_name.starts_with(s)) {\n-                    return Ok(())\n-                }\n-            }\n-            Err(io::Error::from(io::ErrorKind::Other))\n-        }, context).is_ok()\n-    };\n-\n-    let skipped_before = frames.iter().position(|frame| {\n-        is_good_frame(*frame, BAD_PREFIXES_TOP)\n-    }).unwrap_or(frames.len());\n-    let skipped_after = frames[skipped_before..].iter().rev().position(|frame| {\n-        is_good_frame(*frame, BAD_PREFIXES_BOTTOM)\n-    }).unwrap_or(frames.len() - skipped_before);\n-\n-    if skipped_before + skipped_after == frames.len() {\n-        // Avoid showing completely empty backtraces\n-        return (0, 0);\n-    }\n-\n-    (skipped_before, skipped_after)\n+    (0, 0)\n }\n \n /// Controls how the backtrace should be formated."}]}