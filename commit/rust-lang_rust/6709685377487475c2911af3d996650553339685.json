{"sha": "6709685377487475c2911af3d996650553339685", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY3MDk2ODUzNzc0ODc0NzVjMjkxMWFmM2Q5OTY2NTA1NTMzMzk2ODU=", "commit": {"author": {"name": "Mathieu David", "email": "mathieudavid@mathieudavid.org", "date": "2015-06-12T09:32:25Z"}, "committer": {"name": "Mathieu David", "email": "mathieudavid@mathieudavid.org", "date": "2015-06-24T20:59:44Z"}, "message": "separate css and js from rust", "tree": {"sha": "778e7d5d4ddec307c51d862c874dcbd0875fdb0b", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/778e7d5d4ddec307c51d862c874dcbd0875fdb0b"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/6709685377487475c2911af3d996650553339685", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/6709685377487475c2911af3d996650553339685", "html_url": "https://github.com/rust-lang/rust/commit/6709685377487475c2911af3d996650553339685", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/6709685377487475c2911af3d996650553339685/comments", "author": {"login": "azerupi", "id": 7647338, "node_id": "MDQ6VXNlcjc2NDczMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/7647338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azerupi", "html_url": "https://github.com/azerupi", "followers_url": "https://api.github.com/users/azerupi/followers", "following_url": "https://api.github.com/users/azerupi/following{/other_user}", "gists_url": "https://api.github.com/users/azerupi/gists{/gist_id}", "starred_url": "https://api.github.com/users/azerupi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azerupi/subscriptions", "organizations_url": "https://api.github.com/users/azerupi/orgs", "repos_url": "https://api.github.com/users/azerupi/repos", "events_url": "https://api.github.com/users/azerupi/events{/privacy}", "received_events_url": "https://api.github.com/users/azerupi/received_events", "type": "User", "site_admin": false}, "committer": {"login": "azerupi", "id": 7647338, "node_id": "MDQ6VXNlcjc2NDczMzg=", "avatar_url": "https://avatars.githubusercontent.com/u/7647338?v=4", "gravatar_id": "", "url": "https://api.github.com/users/azerupi", "html_url": "https://github.com/azerupi", "followers_url": "https://api.github.com/users/azerupi/followers", "following_url": "https://api.github.com/users/azerupi/following{/other_user}", "gists_url": "https://api.github.com/users/azerupi/gists{/gist_id}", "starred_url": "https://api.github.com/users/azerupi/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/azerupi/subscriptions", "organizations_url": "https://api.github.com/users/azerupi/orgs", "repos_url": "https://api.github.com/users/azerupi/repos", "events_url": "https://api.github.com/users/azerupi/events{/privacy}", "received_events_url": "https://api.github.com/users/azerupi/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "98633de498f9dc7132eed2dddf1c9acf997f18f3", "url": "https://api.github.com/repos/rust-lang/rust/commits/98633de498f9dc7132eed2dddf1c9acf997f18f3", "html_url": "https://github.com/rust-lang/rust/commit/98633de498f9dc7132eed2dddf1c9acf997f18f3"}], "stats": {"total": 157, "additions": 75, "deletions": 82}, "files": [{"sha": "afae4276507c3c54b59f968cdf118b01a3929f11", "filename": "src/rustbook/build.rs", "status": "modified", "additions": 13, "deletions": 5, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/6709685377487475c2911af3d996650553339685/src%2Frustbook%2Fbuild.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6709685377487475c2911af3d996650553339685/src%2Frustbook%2Fbuild.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Fbuild.rs?ref=6709685377487475c2911af3d996650553339685", "patch": "@@ -22,7 +22,7 @@ use term::Term;\n use error::{err, CliResult, CommandResult};\n use book;\n use book::{Book, BookItem};\n-use css;\n+\n use javascript;\n \n use rustdoc;\n@@ -146,7 +146,8 @@ fn render(book: &Book, tgt: &Path) -> CliResult<()> {\n             format!(\"--markdown-playground-url=http://play.rust-lang.org\"),\n             format!(\"--markdown-css={}\", item.path_to_root.join(\"rust-book.css\").display()),\n             format!(\"--markdown-css={}\",\n-            \"http://fonts.googleapis.com/css?family&#61;Open+Sans:400italic,700italic,400,700\"),\n+                \"http://fonts.googleapis.com/css?family&#61;Open+Sans:400italic,700italic,400,700\"\n+                ),\n             \"--markdown-no-toc\".to_string(),\n         ];\n         let output_result = rustdoc::main_args(rustdoc_args);\n@@ -197,9 +198,16 @@ impl Subcommand for Build {\n         }\n         try!(fs::create_dir(&tgt));\n \n-        try!(File::create(&tgt.join(\"rust-book.css\")).and_then(|mut f| {\n-            f.write_all(css::STYLE.as_bytes())\n-        }));\n+        // Copy static files\n+        try!(fs::copy(\n+            &cwd.join(\"src/rustbook/static/rustbook.css\"),\n+            &tgt.join(\"rust-book.css\")\n+        ));\n+\n+        try!(fs::copy(\n+            &cwd.join(\"src/rustbook/static/rustbook.js\"),\n+            &tgt.join(\"rust-book.js\")\n+        ));\n \n         let mut summary = try!(File::open(&src.join(\"SUMMARY.md\")));\n         match book::parse_summary(&mut summary, &src) {"}, {"sha": "beddc23fe2bdd2a82e6c586118121ad4494b3fd4", "filename": "src/rustbook/javascript.rs", "status": "modified", "additions": 1, "deletions": 61, "changes": 62, "blob_url": "https://github.com/rust-lang/rust/blob/6709685377487475c2911af3d996650553339685/src%2Frustbook%2Fjavascript.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6709685377487475c2911af3d996650553339685/src%2Frustbook%2Fjavascript.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Fjavascript.rs?ref=6709685377487475c2911af3d996650553339685", "patch": "@@ -11,66 +11,6 @@\n // The rust-book JavaScript in string form.\n \n pub static JAVASCRIPT: &'static str = r#\"\n-<script type=\"text/javascript\">\n-document.addEventListener(\"DOMContentLoaded\", function(event) {\n-  document.getElementById(\"toggle-nav\").onclick = toggleNav;\n-  function toggleNav() {\n-    var toc = document.getElementById(\"toc\");\n-    var pagewrapper = document.getElementById(\"page-wrapper\");\n-    toggleClass(toc, \"mobile-hidden\");\n-    toggleClass(pagewrapper, \"mobile-hidden\");\n-  };\n-\n-  function toggleClass(el, className) {\n-     // from http://youmightnotneedjquery.com/\n-     if (el.classList) {\n-       el.classList.toggle(className);\n-     } else {\n-       var classes = el.className.split(' ');\n-       var existingIndex = classes.indexOf(className);\n-\n-       if (existingIndex >= 0) {\n-         classes.splice(existingIndex, 1);\n-       } else {\n-         classes.push(className);\n-       }\n-\n-       el.className = classes.join(' ');\n-     }\n-  }\n-\n-  // The below code is used to add prev and next navigation links to the bottom\n-  // of each of the sections.\n-  // It works by extracting the current page based on the url and iterates over\n-  // the menu links until it finds the menu item for the current page. We then\n-  // create a copy of the preceding and following menu links and add the\n-  // correct css class and insert them into the bottom of the page.\n-  var toc = document.getElementById('toc').getElementsByTagName('a');\n-  var href = document.location.pathname.split('/').pop();\n-  if (href === 'index.html' || href === '') {\n-    href = 'README.html';\n-  }\n-\n-  for (var i = 0; i < toc.length; i++) {\n-    if (toc[i].attributes['href'].value.split('/').pop() === href) {\n-      var nav = document.createElement('p');\n-      nav.className = 'nav-previous-next'\n-      if (i > 0) {\n-        var prevNode = toc[i-1].cloneNode(true);\n-        prevNode.className = 'left';\n-        nav.appendChild(prevNode);\n-      }\n-      if (i < toc.length - 1) {\n-        var nextNode = toc[i+1].cloneNode(true);\n-        nextNode.className = 'right';\n-        nav.appendChild(nextNode);\n-      }\n-      document.getElementById('page').appendChild(nav);\n-      break;\n-    }\n-  }\n-\n-});\n-</script>\n+<script type=\"text/javascript\" src=\"rust-book.js\"></script>\n <script type=\"text/javascript\" src=\"playpen.js\"></script>\n \"#;"}, {"sha": "81f8c8c40fdff7a23c220e54f320793aaae327d4", "filename": "src/rustbook/main.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/6709685377487475c2911af3d996650553339685/src%2Frustbook%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6709685377487475c2911af3d996650553339685/src%2Frustbook%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Fmain.rs?ref=6709685377487475c2911af3d996650553339685", "patch": "@@ -35,7 +35,6 @@ mod build;\n mod serve;\n mod test;\n \n-mod css;\n mod javascript;\n \n static EXIT_STATUS: AtomicIsize = ATOMIC_ISIZE_INIT;"}, {"sha": "955f4ab3817ce09fa4d2c67f1712fbe02771198c", "filename": "src/rustbook/static/rustbook.css", "status": "renamed", "additions": 1, "deletions": 15, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/6709685377487475c2911af3d996650553339685/src%2Frustbook%2Fstatic%2Frustbook.css", "raw_url": "https://github.com/rust-lang/rust/raw/6709685377487475c2911af3d996650553339685/src%2Frustbook%2Fstatic%2Frustbook.css", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Fstatic%2Frustbook.css?ref=6709685377487475c2911af3d996650553339685", "patch": "@@ -1,16 +1,3 @@\n-// Copyright 2014 The Rust Project Developers. See the COPYRIGHT\n-// file at the top-level directory of this distribution and at\n-// http://rust-lang.org/COPYRIGHT.\n-//\n-// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n-// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n-// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n-// option. This file may not be copied, modified, or distributed\n-// except according to those terms.\n-\n-// The rust-book CSS in string form.\n-\n-pub static STYLE: &'static str = r#\"\n @import url(\"../rust.css\");\n \n body {\n@@ -57,7 +44,7 @@ h1, h2, h3, h4, h5, h6 {\n }\n \n @media only print {\n-    #toc, #nav {\n+    #toc, #nav, #menu-bar {\n         display: none;\n     }\n }\n@@ -174,4 +161,3 @@ pre {\n .right {\n     float: right;\n }\n-\"#;", "previous_filename": "src/rustbook/css.rs"}, {"sha": "af4e2a80a3889936a0eb4dd1fe63d59554d5c1be", "filename": "src/rustbook/static/rustbook.js", "status": "added", "additions": 60, "deletions": 0, "changes": 60, "blob_url": "https://github.com/rust-lang/rust/blob/6709685377487475c2911af3d996650553339685/src%2Frustbook%2Fstatic%2Frustbook.js", "raw_url": "https://github.com/rust-lang/rust/raw/6709685377487475c2911af3d996650553339685/src%2Frustbook%2Fstatic%2Frustbook.js", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Frustbook%2Fstatic%2Frustbook.js?ref=6709685377487475c2911af3d996650553339685", "patch": "@@ -0,0 +1,60 @@\n+document.addEventListener(\"DOMContentLoaded\", function(event) {\n+\n+    document.getElementById(\"toggle-nav\").onclick = toggleNav;\n+    function toggleNav() {\n+        var toc = document.getElementById(\"toc\");\n+        var pagewrapper = document.getElementById(\"page-wrapper\");\n+        toggleClass(toc, \"mobile-hidden\");\n+        toggleClass(pagewrapper, \"mobile-hidden\");\n+    }\n+\n+    function toggleClass(el, className) {\n+        // from http://youmightnotneedjquery.com/\n+        if (el.classList) {\n+            el.classList.toggle(className);\n+        } else {\n+            var classes = el.className.split(' ');\n+            var existingIndex = classes.indexOf(className);\n+\n+            if (existingIndex >= 0) {\n+                classes.splice(existingIndex, 1);\n+            } else {\n+                classes.push(className);\n+            }\n+\n+            el.className = classes.join(' ');\n+        }\n+    }\n+\n+    // The below code is used to add prev and next navigation links to the bottom\n+    // of each of the sections.\n+    // It works by extracting the current page based on the url and iterates over\n+    // the menu links until it finds the menu item for the current page. We then\n+    // create a copy of the preceding and following menu links and add the\n+    // correct css class and insert them into the bottom of the page.\n+    var toc = document.getElementById('toc').getElementsByTagName('a');\n+    var href = document.location.pathname.split('/').pop();\n+    if (href === 'index.html' || href === '') {\n+        href = 'README.html';\n+    }\n+\n+    for (var i = 0; i < toc.length; i++) {\n+        if (toc[i].attributes['href'].value.split('/').pop() === href) {\n+            var nav = document.createElement('p');\n+            nav.className = 'nav-previous-next';\n+            if (i > 0) {\n+                var prevNode = toc[i-1].cloneNode(true);\n+                prevNode.className = 'left';\n+                nav.appendChild(prevNode);\n+            }\n+            if (i < toc.length - 1) {\n+                var nextNode = toc[i+1].cloneNode(true);\n+                nextNode.className = 'right';\n+                nav.appendChild(nextNode);\n+            }\n+            document.getElementById('page').appendChild(nav);\n+            break;\n+        }\n+    }\n+\n+});"}]}