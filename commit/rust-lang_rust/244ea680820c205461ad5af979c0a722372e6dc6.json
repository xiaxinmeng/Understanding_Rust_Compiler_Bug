{"sha": "244ea680820c205461ad5af979c0a722372e6dc6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI0NGVhNjgwODIwYzIwNTQ2MWFkNWFmOTc5YzBhNzIyMzcyZTZkYzY=", "commit": {"author": {"name": "Matt Brubeck", "email": "mbrubeck@limpet.net", "date": "2010-07-08T09:01:25Z"}, "committer": {"name": "Graydon Hoare", "email": "graydon@pobox.com", "date": "2010-07-08T14:43:15Z"}, "message": "Issue 66: Multi-line comments", "tree": {"sha": "45d4da70ea8f68b84105bfdac48f8556519fb14e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/45d4da70ea8f68b84105bfdac48f8556519fb14e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/244ea680820c205461ad5af979c0a722372e6dc6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/244ea680820c205461ad5af979c0a722372e6dc6", "html_url": "https://github.com/rust-lang/rust/commit/244ea680820c205461ad5af979c0a722372e6dc6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/244ea680820c205461ad5af979c0a722372e6dc6/comments", "author": {"login": "mbrubeck", "id": 5920, "node_id": "MDQ6VXNlcjU5MjA=", "avatar_url": "https://avatars.githubusercontent.com/u/5920?v=4", "gravatar_id": "", "url": "https://api.github.com/users/mbrubeck", "html_url": "https://github.com/mbrubeck", "followers_url": "https://api.github.com/users/mbrubeck/followers", "following_url": "https://api.github.com/users/mbrubeck/following{/other_user}", "gists_url": "https://api.github.com/users/mbrubeck/gists{/gist_id}", "starred_url": "https://api.github.com/users/mbrubeck/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/mbrubeck/subscriptions", "organizations_url": "https://api.github.com/users/mbrubeck/orgs", "repos_url": "https://api.github.com/users/mbrubeck/repos", "events_url": "https://api.github.com/users/mbrubeck/events{/privacy}", "received_events_url": "https://api.github.com/users/mbrubeck/received_events", "type": "User", "site_admin": false}, "committer": {"login": "graydon", "id": 14097, "node_id": "MDQ6VXNlcjE0MDk3", "avatar_url": "https://avatars.githubusercontent.com/u/14097?v=4", "gravatar_id": "", "url": "https://api.github.com/users/graydon", "html_url": "https://github.com/graydon", "followers_url": "https://api.github.com/users/graydon/followers", "following_url": "https://api.github.com/users/graydon/following{/other_user}", "gists_url": "https://api.github.com/users/graydon/gists{/gist_id}", "starred_url": "https://api.github.com/users/graydon/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/graydon/subscriptions", "organizations_url": "https://api.github.com/users/graydon/orgs", "repos_url": "https://api.github.com/users/graydon/repos", "events_url": "https://api.github.com/users/graydon/events{/privacy}", "received_events_url": "https://api.github.com/users/graydon/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "115e14a32c1940a4868ae8633039a296450740ea", "url": "https://api.github.com/repos/rust-lang/rust/commits/115e14a32c1940a4868ae8633039a296450740ea", "html_url": "https://github.com/rust-lang/rust/commit/115e14a32c1940a4868ae8633039a296450740ea"}], "stats": {"total": 42, "additions": 39, "deletions": 3}, "files": [{"sha": "3e6a93b29e6fa34cff87768f6f3f903aec4e922a", "filename": "doc/rust.texi", "status": "modified", "additions": 8, "deletions": 2, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/244ea680820c205461ad5af979c0a722372e6dc6/doc%2Frust.texi", "raw_url": "https://github.com/rust-lang/rust/raw/244ea680820c205461ad5af979c0a722372e6dc6/doc%2Frust.texi", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Frust.texi?ref=244ea680820c205461ad5af979c0a722372e6dc6", "patch": "@@ -616,11 +616,17 @@ otherwise a free-form language.\n @dfn{Whitespace} is any of the following Unicode characters: U+0020 (space),\n U+0009 (tab, @code{'\\t'}), U+000A (LF, @code{'\\n'}), U+000D (CR, @code{'\\r'}).\n \n-@dfn{Comments} are any sequence of Unicode characters beginning with U+002F\n-U+002F (@code{\"//\"}) and extending to the next U+000A character,\n+@dfn{Comments} are @emph{single-line comments} or @emph{multi-line comments}.\n+\n+A @dfn{single-line comment} is any sequence of Unicode characters beginning\n+with U+002F U+002F (@code{\"//\"}) and extending to the next U+000A character,\n @emph{excluding} cases in which such a sequence occurs within a string literal\n token or a syntactic extension token.\n \n+A @dfn{multi-line comments} is any sequence of Unicode characters beginning\n+with U+002F U+002A (@code{\"/*\"}) and ending with U+002A U+002F (@code{\"*/\"}),\n+@emph{excluding} cases in which such a sequence occurs within a string literal\n+token or a syntactic extension token.  Multi-line comments may be nested.\n \n @node       Ref.Lex.Ident\n @subsection Ref.Lex.Ident"}, {"sha": "090da25f8546c54b9dad7214806fb01dec4d0c74", "filename": "src/boot/fe/lexer.mll", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/244ea680820c205461ad5af979c0a722372e6dc6/src%2Fboot%2Ffe%2Flexer.mll", "raw_url": "https://github.com/rust-lang/rust/raw/244ea680820c205461ad5af979c0a722372e6dc6/src%2Fboot%2Ffe%2Flexer.mll", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fboot%2Ffe%2Flexer.mll?ref=244ea680820c205461ad5af979c0a722372e6dc6", "patch": "@@ -139,7 +139,7 @@ rule token = parse\n                                      <- (bump_line lexbuf.Lexing.lex_curr_p);\n                                  token lexbuf }\n | \"//\" [^'\\n']*                { token lexbuf }\n-\n+| \"/*\"                         { comment 1 lexbuf }\n | '+'                          { PLUS       }\n | '-'                          { MINUS      }\n | '*'                          { STAR       }\n@@ -362,3 +362,16 @@ and bracequote buf depth = parse\n | [^'\\\\' '{' '}']+              { let s = Lexing.lexeme lexbuf in\n                                     Buffer.add_string buf s;\n                                     bracequote buf depth lexbuf        }\n+\n+\n+and comment depth = parse\n+\n+  '/' '*'                       { comment (depth+1) lexbuf      }\n+\n+| '*' '/'                       { if depth = 1\n+                                  then token lexbuf\n+                                  else comment (depth-1) lexbuf }\n+\n+| '*' [^'{']                   { comment depth lexbuf           }\n+| '/' [^'*']                   { comment depth lexbuf           }\n+| [^'/' '*']+                  { comment depth lexbuf           }"}, {"sha": "c22df4ec6f70816a9add53d58535661856d52e16", "filename": "src/test/compile-fail/unbalanced-comment.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/244ea680820c205461ad5af979c0a722372e6dc6/src%2Ftest%2Fcompile-fail%2Funbalanced-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/244ea680820c205461ad5af979c0a722372e6dc6/src%2Ftest%2Fcompile-fail%2Funbalanced-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Funbalanced-comment.rs?ref=244ea680820c205461ad5af979c0a722372e6dc6", "patch": "@@ -0,0 +1,9 @@\n+// -*- rust -*-\n+\n+/*\n+ * This is an un-balanced /* multi-line comment.\n+ */\n+\n+fn main() {\n+  log \"hello, world.\";\n+}"}, {"sha": "3b8464333e3aa486ebb847673089eca5624d2a6b", "filename": "src/test/run-pass/multiline-comment.rs", "status": "added", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/244ea680820c205461ad5af979c0a722372e6dc6/src%2Ftest%2Frun-pass%2Fmultiline-comment.rs", "raw_url": "https://github.com/rust-lang/rust/raw/244ea680820c205461ad5af979c0a722372e6dc6/src%2Ftest%2Frun-pass%2Fmultiline-comment.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fmultiline-comment.rs?ref=244ea680820c205461ad5af979c0a722372e6dc6", "patch": "@@ -0,0 +1,8 @@\n+// -*- rust -*-\n+\n+/*\n+ * This is a /* depth-balanced */ multi-line comment.\n+ */\n+\n+fn main() {\n+}"}]}