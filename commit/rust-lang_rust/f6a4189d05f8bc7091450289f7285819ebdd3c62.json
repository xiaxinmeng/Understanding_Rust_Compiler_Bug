{"sha": "f6a4189d05f8bc7091450289f7285819ebdd3c62", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2YTQxODlkMDVmOGJjNzA5MTQ1MDI4OWY3Mjg1ODE5ZWJkZDNjNjI=", "commit": {"author": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-09-11T21:20:24Z"}, "committer": {"name": "Alexis Bourget", "email": "alexis.bourget@gmail.com", "date": "2020-09-21T19:50:27Z"}, "message": "Move vec-cycle-wrapped test", "tree": {"sha": "56dc1c947235a10945aeeb42ccdda3ad69f6b1a0", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/56dc1c947235a10945aeeb42ccdda3ad69f6b1a0"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6a4189d05f8bc7091450289f7285819ebdd3c62", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6a4189d05f8bc7091450289f7285819ebdd3c62", "html_url": "https://github.com/rust-lang/rust/commit/f6a4189d05f8bc7091450289f7285819ebdd3c62", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6a4189d05f8bc7091450289f7285819ebdd3c62/comments", "author": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "committer": {"login": "poliorcetics", "id": 7951708, "node_id": "MDQ6VXNlcjc5NTE3MDg=", "avatar_url": "https://avatars.githubusercontent.com/u/7951708?v=4", "gravatar_id": "", "url": "https://api.github.com/users/poliorcetics", "html_url": "https://github.com/poliorcetics", "followers_url": "https://api.github.com/users/poliorcetics/followers", "following_url": "https://api.github.com/users/poliorcetics/following{/other_user}", "gists_url": "https://api.github.com/users/poliorcetics/gists{/gist_id}", "starred_url": "https://api.github.com/users/poliorcetics/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/poliorcetics/subscriptions", "organizations_url": "https://api.github.com/users/poliorcetics/orgs", "repos_url": "https://api.github.com/users/poliorcetics/repos", "events_url": "https://api.github.com/users/poliorcetics/events{/privacy}", "received_events_url": "https://api.github.com/users/poliorcetics/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "6bc0357dadd9d41a8166d4c2ab8a27c0bb8150d3", "url": "https://api.github.com/repos/rust-lang/rust/commits/6bc0357dadd9d41a8166d4c2ab8a27c0bb8150d3", "html_url": "https://github.com/rust-lang/rust/commit/6bc0357dadd9d41a8166d4c2ab8a27c0bb8150d3"}], "stats": {"total": 91, "additions": 41, "deletions": 50}, "files": [{"sha": "b7c7138db4f522a62b74b9f86489ce96a966e99a", "filename": "library/alloc/tests/vec.rs", "status": "modified", "additions": 41, "deletions": 0, "changes": 41, "blob_url": "https://github.com/rust-lang/rust/blob/f6a4189d05f8bc7091450289f7285819ebdd3c62/library%2Falloc%2Ftests%2Fvec.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6a4189d05f8bc7091450289f7285819ebdd3c62/library%2Falloc%2Ftests%2Fvec.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Falloc%2Ftests%2Fvec.rs?ref=f6a4189d05f8bc7091450289f7285819ebdd3c62", "patch": "@@ -1870,3 +1870,44 @@ fn test_vec_cycle() {\n     c3.v[0].set(Some(&c1));\n     c3.v[1].set(Some(&c2));\n }\n+\n+#[test]\n+fn test_vec_cycle_wrapped() {\n+    struct Refs<'a> {\n+        v: Vec<Cell<Option<&'a C<'a>>>>,\n+    }\n+\n+    struct C<'a> {\n+        refs: Refs<'a>,\n+    }\n+\n+    impl<'a> Refs<'a> {\n+        fn new() -> Refs<'a> {\n+            Refs { v: Vec::new() }\n+        }\n+    }\n+\n+    impl<'a> C<'a> {\n+        fn new() -> C<'a> {\n+            C { refs: Refs::new() }\n+        }\n+    }\n+\n+    let mut c1 = C::new();\n+    let mut c2 = C::new();\n+    let mut c3 = C::new();\n+\n+    c1.refs.v.push(Cell::new(None));\n+    c1.refs.v.push(Cell::new(None));\n+    c2.refs.v.push(Cell::new(None));\n+    c2.refs.v.push(Cell::new(None));\n+    c3.refs.v.push(Cell::new(None));\n+    c3.refs.v.push(Cell::new(None));\n+\n+    c1.refs.v[0].set(Some(&c2));\n+    c1.refs.v[1].set(Some(&c3));\n+    c2.refs.v[0].set(Some(&c2));\n+    c2.refs.v[1].set(Some(&c3));\n+    c3.refs.v[0].set(Some(&c1));\n+    c3.refs.v[1].set(Some(&c2));\n+}"}, {"sha": "1a3606d5e8d5af87c0cf5565f8c4dda8ce1abbb3", "filename": "src/test/ui/array-slice-vec/vec_cycle_wrapped.rs", "status": "removed", "additions": 0, "deletions": 50, "changes": 50, "blob_url": "https://github.com/rust-lang/rust/blob/6bc0357dadd9d41a8166d4c2ab8a27c0bb8150d3/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec_cycle_wrapped.rs", "raw_url": "https://github.com/rust-lang/rust/raw/6bc0357dadd9d41a8166d4c2ab8a27c0bb8150d3/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec_cycle_wrapped.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Farray-slice-vec%2Fvec_cycle_wrapped.rs?ref=6bc0357dadd9d41a8166d4c2ab8a27c0bb8150d3", "patch": "@@ -1,50 +0,0 @@\n-// run-pass\n-\n-use std::cell::Cell;\n-\n-#[derive(Debug)]\n-struct Refs<'a> {\n-    v: Vec<Cell<Option<&'a C<'a>>>>,\n-}\n-\n-#[derive(Debug)]\n-struct C<'a> {\n-    refs: Refs<'a>,\n-}\n-\n-impl<'a> Refs<'a> {\n-    fn new() -> Refs<'a> {\n-        Refs { v: Vec::new() }\n-    }\n-}\n-\n-impl<'a> C<'a> {\n-    fn new() -> C<'a> {\n-        C { refs: Refs::new() }\n-    }\n-}\n-\n-fn f() {\n-    let (mut c1, mut c2, mut c3);\n-    c1 = C::new();\n-    c2 = C::new();\n-    c3 = C::new();\n-\n-    c1.refs.v.push(Cell::new(None));\n-    c1.refs.v.push(Cell::new(None));\n-    c2.refs.v.push(Cell::new(None));\n-    c2.refs.v.push(Cell::new(None));\n-    c3.refs.v.push(Cell::new(None));\n-    c3.refs.v.push(Cell::new(None));\n-\n-    c1.refs.v[0].set(Some(&c2));\n-    c1.refs.v[1].set(Some(&c3));\n-    c2.refs.v[0].set(Some(&c2));\n-    c2.refs.v[1].set(Some(&c3));\n-    c3.refs.v[0].set(Some(&c1));\n-    c3.refs.v[1].set(Some(&c2));\n-}\n-\n-fn main() {\n-    f();\n-}"}]}