{"sha": "265b04df9a5c75ed021c35abfbda3439e9858018", "node_id": "MDY6Q29tbWl0NzI0NzEyOjI2NWIwNGRmOWE1Yzc1ZWQwMjFjMzVhYmZiZGEzNDM5ZTk4NTgwMTg=", "commit": {"author": {"name": "Vytautas Astrauskas", "email": "vastrauskas@gmail.com", "date": "2018-06-02T12:20:04Z"}, "committer": {"name": "Vytautas Astrauskas", "email": "vastrauskas@gmail.com", "date": "2018-06-02T12:20:04Z"}, "message": "Change the log level of the message reporting the selected Polonius algorithm to debug.", "tree": {"sha": "d454d349068c78aee8b58229289b1fd6baaabdc1", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/d454d349068c78aee8b58229289b1fd6baaabdc1"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/265b04df9a5c75ed021c35abfbda3439e9858018", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/265b04df9a5c75ed021c35abfbda3439e9858018", "html_url": "https://github.com/rust-lang/rust/commit/265b04df9a5c75ed021c35abfbda3439e9858018", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/265b04df9a5c75ed021c35abfbda3439e9858018/comments", "author": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "committer": {"login": "vakaras", "id": 75347, "node_id": "MDQ6VXNlcjc1MzQ3", "avatar_url": "https://avatars.githubusercontent.com/u/75347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/vakaras", "html_url": "https://github.com/vakaras", "followers_url": "https://api.github.com/users/vakaras/followers", "following_url": "https://api.github.com/users/vakaras/following{/other_user}", "gists_url": "https://api.github.com/users/vakaras/gists{/gist_id}", "starred_url": "https://api.github.com/users/vakaras/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/vakaras/subscriptions", "organizations_url": "https://api.github.com/users/vakaras/orgs", "repos_url": "https://api.github.com/users/vakaras/repos", "events_url": "https://api.github.com/users/vakaras/events{/privacy}", "received_events_url": "https://api.github.com/users/vakaras/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "1404c00eb05931399e23338df30461ea1203fabd", "url": "https://api.github.com/repos/rust-lang/rust/commits/1404c00eb05931399e23338df30461ea1203fabd", "html_url": "https://github.com/rust-lang/rust/commit/1404c00eb05931399e23338df30461ea1203fabd"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "c3d9dd8378d4a80c7a4f228411356838026d5ed0", "filename": "src/librustc_mir/borrow_check/nll/mod.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/265b04df9a5c75ed021c35abfbda3439e9858018/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/265b04df9a5c75ed021c35abfbda3439e9858018/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fnll%2Fmod.rs?ref=265b04df9a5c75ed021c35abfbda3439e9858018", "patch": "@@ -161,7 +161,7 @@ pub(in borrow_check) fn compute_regions<'cx, 'gcx, 'tcx>(\n             let algorithm = env::var(\"POLONIUS_ALGORITHM\")\n                 .unwrap_or(String::from(\"DatafrogOpt\"));\n             let algorithm = Algorithm::from_str(&algorithm).unwrap();\n-            info!(\"Using Polonius algorithm: {:?}\", algorithm);\n+            debug!(\"compute_regions: using polonius algorithm {:?}\", algorithm);\n             Some(Rc::new(Output::compute(\n                 &all_facts,\n                 algorithm,"}]}