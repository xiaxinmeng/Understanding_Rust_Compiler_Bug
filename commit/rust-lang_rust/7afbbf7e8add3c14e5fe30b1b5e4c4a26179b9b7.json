{"sha": "7afbbf7e8add3c14e5fe30b1b5e4c4a26179b9b7", "node_id": "MDY6Q29tbWl0NzI0NzEyOjdhZmJiZjdlOGFkZDNjMTRlNWZlMzBiMWI1ZTRjNGEyNjE3OWI5Yjc=", "commit": {"author": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-12-06T15:11:28Z"}, "committer": {"name": "Adam Perry", "email": "adam.n.perry@gmail.com", "date": "2019-12-07T02:37:54Z"}, "message": "Always call const fns with #[track_caller].\n\nThe caller location is passed as an implicit argument, so we must consider it when checking the sizedness of arguments.", "tree": {"sha": "92effc181ea969ddbe3fbd1ef42b6cc77b386bd9", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/92effc181ea969ddbe3fbd1ef42b6cc77b386bd9"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/7afbbf7e8add3c14e5fe30b1b5e4c4a26179b9b7", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/7afbbf7e8add3c14e5fe30b1b5e4c4a26179b9b7", "html_url": "https://github.com/rust-lang/rust/commit/7afbbf7e8add3c14e5fe30b1b5e4c4a26179b9b7", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/7afbbf7e8add3c14e5fe30b1b5e4c4a26179b9b7/comments", "author": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "committer": {"login": "anp", "id": 6812281, "node_id": "MDQ6VXNlcjY4MTIyODE=", "avatar_url": "https://avatars.githubusercontent.com/u/6812281?v=4", "gravatar_id": "", "url": "https://api.github.com/users/anp", "html_url": "https://github.com/anp", "followers_url": "https://api.github.com/users/anp/followers", "following_url": "https://api.github.com/users/anp/following{/other_user}", "gists_url": "https://api.github.com/users/anp/gists{/gist_id}", "starred_url": "https://api.github.com/users/anp/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/anp/subscriptions", "organizations_url": "https://api.github.com/users/anp/orgs", "repos_url": "https://api.github.com/users/anp/repos", "events_url": "https://api.github.com/users/anp/events{/privacy}", "received_events_url": "https://api.github.com/users/anp/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cc574be985c4932f6f80c6a8a52ece26d5883300", "url": "https://api.github.com/repos/rust-lang/rust/commits/cc574be985c4932f6f80c6a8a52ece26d5883300", "html_url": "https://github.com/rust-lang/rust/commit/cc574be985c4932f6f80c6a8a52ece26d5883300"}], "stats": {"total": 8, "additions": 6, "deletions": 2}, "files": [{"sha": "0123d68d878d5391c4320b4062452b97e0ee978f", "filename": "src/librustc_mir/const_eval.rs", "status": "modified", "additions": 6, "deletions": 2, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/7afbbf7e8add3c14e5fe30b1b5e4c4a26179b9b7/src%2Flibrustc_mir%2Fconst_eval.rs", "raw_url": "https://github.com/rust-lang/rust/raw/7afbbf7e8add3c14e5fe30b1b5e4c4a26179b9b7/src%2Flibrustc_mir%2Fconst_eval.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fconst_eval.rs?ref=7afbbf7e8add3c14e5fe30b1b5e4c4a26179b9b7", "patch": "@@ -12,7 +12,7 @@ use rustc::hir::def_id::DefId;\n use rustc::mir::interpret::{ConstEvalErr, ErrorHandled, ScalarMaybeUndef};\n use rustc::mir;\n use rustc::ty::{self, Ty, TyCtxt, subst::Subst};\n-use rustc::ty::layout::{self, LayoutOf, VariantIdx};\n+use rustc::ty::layout::{self, HasTyCtxt, LayoutOf, VariantIdx};\n use rustc::traits::Reveal;\n use rustc_data_structures::fx::FxHashMap;\n use crate::interpret::eval_nullary_intrinsic;\n@@ -347,7 +347,11 @@ impl<'mir, 'tcx> interpret::Machine<'mir, 'tcx> for CompileTimeInterpreter<'mir,\n                 //\n                 // For the moment we only do this for functions which take no arguments\n                 // (or all arguments are ZSTs) so that we don't memoize too much.\n-                if args.iter().all(|a| a.layout.is_zst()) {\n+                //\n+                // Because `#[track_caller]` adds an implicit non-ZST argument, we also cannot\n+                // perform this optimization on items tagged with it.\n+                let no_implicit_args = !instance.def.requires_caller_location(ecx.tcx());\n+                if args.iter().all(|a| a.layout.is_zst()) && no_implicit_args {\n                     let gid = GlobalId { instance, promoted: None };\n                     ecx.eval_const_fn_call(gid, ret)?;\n                     return Ok(None);"}]}