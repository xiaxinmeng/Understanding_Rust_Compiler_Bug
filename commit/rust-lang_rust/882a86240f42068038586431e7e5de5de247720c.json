{"sha": "882a86240f42068038586431e7e5de5de247720c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4MmE4NjI0MGY0MjA2ODAzODU4NjQzMWU3ZTVkZTVkZTI0NzcyMGM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-01T15:12:31Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-01-01T19:15:35Z"}, "message": "rename", "tree": {"sha": "eb7fc927ce33ba3ee60add688e42b49f664db8e2", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/eb7fc927ce33ba3ee60add688e42b49f664db8e2"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/882a86240f42068038586431e7e5de5de247720c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/882a86240f42068038586431e7e5de5de247720c", "html_url": "https://github.com/rust-lang/rust/commit/882a86240f42068038586431e7e5de5de247720c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/882a86240f42068038586431e7e5de5de247720c/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b2fec18098b6a99613012d185801fed72e424997", "url": "https://api.github.com/repos/rust-lang/rust/commits/b2fec18098b6a99613012d185801fed72e424997", "html_url": "https://github.com/rust-lang/rust/commit/b2fec18098b6a99613012d185801fed72e424997"}], "stats": {"total": 38, "additions": 19, "deletions": 19}, "files": [{"sha": "86c15f4ee098b7d1420b81c3ee031bef37842a88", "filename": "crates/ra_analysis/src/db.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/882a86240f42068038586431e7e5de5de247720c/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/882a86240f42068038586431e7e5de5de247720c/crates%2Fra_analysis%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdb.rs?ref=882a86240f42068038586431e7e5de5de247720c", "patch": "@@ -15,7 +15,7 @@ pub(crate) struct RootDatabase {\n #[derive(Default)]\n struct IdMaps {\n     defs: LocationIntener<hir::DefLoc, hir::DefId>,\n-    macros: LocationIntener<hir::MacroInvocationLoc, hir::MacroInvocationId>,\n+    macros: LocationIntener<hir::MacroCallLoc, hir::MacroCallId>,\n }\n \n impl fmt::Debug for IdMaps {\n@@ -65,8 +65,8 @@ impl AsRef<LocationIntener<hir::DefLoc, hir::DefId>> for RootDatabase {\n     }\n }\n \n-impl AsRef<LocationIntener<hir::MacroInvocationLoc, hir::MacroInvocationId>> for RootDatabase {\n-    fn as_ref(&self) -> &LocationIntener<hir::MacroInvocationLoc, hir::MacroInvocationId> {\n+impl AsRef<LocationIntener<hir::MacroCallLoc, hir::MacroCallId>> for RootDatabase {\n+    fn as_ref(&self) -> &LocationIntener<hir::MacroCallLoc, hir::MacroCallId> {\n         &self.id_maps.macros\n     }\n }\n@@ -91,7 +91,7 @@ salsa::database_storage! {\n             fn library_symbols() for symbol_index::LibrarySymbolsQuery;\n         }\n         impl hir::db::HirDatabase {\n-            fn expand_macro_invocation() for hir::db::ExpandMacroInvocationQuery;\n+            fn expand_macro_invocation() for hir::db::ExpandMacroCallQuery;\n             fn module_tree() for hir::db::ModuleTreeQuery;\n             fn fn_scopes() for hir::db::FnScopesQuery;\n             fn file_items() for hir::db::SourceFileItemsQuery;"}, {"sha": "95d8da2001f63b06780506a8cbf48a4652fcbe25", "filename": "crates/ra_hir/src/db.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/882a86240f42068038586431e7e5de5de247720c/crates%2Fra_hir%2Fsrc%2Fdb.rs", "raw_url": "https://github.com/rust-lang/rust/raw/882a86240f42068038586431e7e5de5de247720c/crates%2Fra_hir%2Fsrc%2Fdb.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fdb.rs?ref=882a86240f42068038586431e7e5de5de247720c", "patch": "@@ -8,7 +8,7 @@ use crate::{\n     SourceFileItems, SourceItemId,\n     query_definitions,\n     FnScopes,\n-    macros::{MacroInvocationLoc, MacroInvocationId, MacroInput, MacroDef, MacroExpansion},\n+    macros::{MacroCallLoc, MacroCallId, MacroInput, MacroDef, MacroExpansion},\n     module::{ModuleId, ModuleTree, ModuleSource,\n     nameres::{ItemMap, InputModuleItems}},\n     ty::{InferenceResult, Ty},\n@@ -19,10 +19,10 @@ salsa::query_group! {\n \n pub trait HirDatabase: SyntaxDatabase\n     + AsRef<LocationIntener<DefLoc, DefId>>\n-    + AsRef<LocationIntener<MacroInvocationLoc, MacroInvocationId>>\n+    + AsRef<LocationIntener<MacroCallLoc, MacroCallId>>\n {\n-    fn expand_macro_invocation(invoc: MacroInvocationId) -> Option<Arc<MacroExpansion>> {\n-        type ExpandMacroInvocationQuery;\n+    fn expand_macro_invocation(invoc: MacroCallId) -> Option<Arc<MacroExpansion>> {\n+        type ExpandMacroCallQuery;\n         use fn crate::macros::expand_macro_invocation;\n     }\n "}, {"sha": "4422ac45b4f6eb91570c55b618983c948584d5ca", "filename": "crates/ra_hir/src/lib.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/882a86240f42068038586431e7e5de5de247720c/crates%2Fra_hir%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/882a86240f42068038586431e7e5de5de247720c/crates%2Fra_hir%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Flib.rs?ref=882a86240f42068038586431e7e5de5de247720c", "patch": "@@ -46,7 +46,7 @@ pub use self::{\n     path::{Path, PathKind},\n     name::Name,\n     krate::Crate,\n-    macros::{MacroDef, MacroInput, MacroExpansion, MacroInvocationId, MacroInvocationLoc},\n+    macros::{MacroDef, MacroInput, MacroExpansion, MacroCallId, MacroCallLoc},\n     module::{Module, ModuleId, Problem, nameres::{ItemMap, PerNs, Namespace}, ModuleScope, Resolution},\n     function::{Function, FnScopes},\n     adt::{Struct, Enum},"}, {"sha": "d9de2d8bdc57009181bb3b88d4fd0c48b9d40dce", "filename": "crates/ra_hir/src/macros.rs", "status": "modified", "additions": 10, "deletions": 10, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/882a86240f42068038586431e7e5de5de247720c/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/882a86240f42068038586431e7e5de5de247720c/crates%2Fra_hir%2Fsrc%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir%2Fsrc%2Fmacros.rs?ref=882a86240f42068038586431e7e5de5de247720c", "patch": "@@ -11,31 +11,31 @@ use crate::{SourceRootId, module::ModuleId, SourceItemId, HirDatabase};\n /// Def's are a core concept of hir. A `Def` is an Item (function, module, etc)\n /// in a specific module.\n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n-pub struct MacroInvocationId(u32);\n-ra_db::impl_numeric_id!(MacroInvocationId);\n+pub struct MacroCallId(u32);\n+ra_db::impl_numeric_id!(MacroCallId);\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, Hash)]\n-pub struct MacroInvocationLoc {\n+pub struct MacroCallLoc {\n     source_root_id: SourceRootId,\n     module_id: ModuleId,\n     source_item_id: SourceItemId,\n }\n \n-impl MacroInvocationId {\n+impl MacroCallId {\n     pub(crate) fn loc(\n         self,\n-        db: &impl AsRef<LocationIntener<MacroInvocationLoc, MacroInvocationId>>,\n-    ) -> MacroInvocationLoc {\n+        db: &impl AsRef<LocationIntener<MacroCallLoc, MacroCallId>>,\n+    ) -> MacroCallLoc {\n         db.as_ref().id2loc(self)\n     }\n }\n \n-impl MacroInvocationLoc {\n+impl MacroCallLoc {\n     #[allow(unused)]\n     pub(crate) fn id(\n         &self,\n-        db: &impl AsRef<LocationIntener<MacroInvocationLoc, MacroInvocationId>>,\n-    ) -> MacroInvocationId {\n+        db: &impl AsRef<LocationIntener<MacroCallLoc, MacroCallId>>,\n+    ) -> MacroCallId {\n         db.as_ref().loc2id(&self)\n     }\n }\n@@ -150,7 +150,7 @@ impl MacroExpansion {\n \n pub(crate) fn expand_macro_invocation(\n     db: &impl HirDatabase,\n-    invoc: MacroInvocationId,\n+    invoc: MacroCallId,\n ) -> Option<Arc<MacroExpansion>> {\n     let loc = invoc.loc(db);\n     let syntax = db.file_item(loc.source_item_id);"}]}