{"sha": "ba02a55330d2ec9a0ea2c5cd457b82782ae299e9", "node_id": "MDY6Q29tbWl0NzI0NzEyOmJhMDJhNTUzMzBkMmVjOWEwZWEyYzVjZDQ1N2I4Mjc4MmFlMjk5ZTk=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-28T19:58:02Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-28T19:58:02Z"}, "message": "simplify", "tree": {"sha": "99f5fb731559f15428eb7ddc2273206a921e311f", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/99f5fb731559f15428eb7ddc2273206a921e311f"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/ba02a55330d2ec9a0ea2c5cd457b82782ae299e9", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/ba02a55330d2ec9a0ea2c5cd457b82782ae299e9", "html_url": "https://github.com/rust-lang/rust/commit/ba02a55330d2ec9a0ea2c5cd457b82782ae299e9", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/ba02a55330d2ec9a0ea2c5cd457b82782ae299e9/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "69eeae0c9903931f13038f4e350fd53b1903530d", "url": "https://api.github.com/repos/rust-lang/rust/commits/69eeae0c9903931f13038f4e350fd53b1903530d", "html_url": "https://github.com/rust-lang/rust/commit/69eeae0c9903931f13038f4e350fd53b1903530d"}], "stats": {"total": 43, "additions": 8, "deletions": 35}, "files": [{"sha": "684b8243a4baedd175a3ed8bac67f2c7d101daba", "filename": "crates/libeditor/src/code_actions.rs", "status": "modified", "additions": 5, "deletions": 35, "changes": 40, "blob_url": "https://github.com/rust-lang/rust/blob/ba02a55330d2ec9a0ea2c5cd457b82782ae299e9/crates%2Flibeditor%2Fsrc%2Fcode_actions.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba02a55330d2ec9a0ea2c5cd457b82782ae299e9/crates%2Flibeditor%2Fsrc%2Fcode_actions.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibeditor%2Fsrc%2Fcode_actions.rs?ref=ba02a55330d2ec9a0ea2c5cd457b82782ae299e9", "patch": "@@ -1,7 +1,3 @@\n-use std::{\n-    fmt::{self, Write},\n-};\n-\n use join_to_string::join;\n \n use libsyntax2::{\n@@ -78,17 +74,15 @@ pub fn add_impl<'a>(file: &'a File, offset: TextUnit) -> Option<impl FnOnce() ->\n         let mut buf = String::new();\n         buf.push_str(\"\\n\\nimpl\");\n         if let Some(type_params) = type_params {\n-            buf.push_display(&type_params.syntax().text());\n+            type_params.syntax().text()\n+                .push_to(&mut buf);\n         }\n         buf.push_str(\" \");\n         buf.push_str(name.text().as_str());\n         if let Some(type_params) = type_params {\n-            comma_list(\n-                &mut buf, \"<\", \">\",\n-                type_params.type_params()\n-                    .filter_map(|it| it.name())\n-                    .map(|it| it.text())\n-            );\n+            join(type_params.type_params().filter_map(|it| it.name()).map(|it| it.text()))\n+                .surround_with(\"<\", \">\")\n+                .to_buf(&mut buf);\n         }\n         buf.push_str(\" {\\n\");\n         let offset = start_offset + TextUnit::of_str(&buf);\n@@ -107,30 +101,6 @@ fn non_trivia_sibling(node: SyntaxNodeRef, direction: Direction) -> Option<Synta\n         .find(|node| !node.kind().is_trivia())\n }\n \n-fn comma_list(buf: &mut String, bra: &str, ket: &str, items: impl Iterator<Item=impl fmt::Display>) {\n-    buf.push_str(bra);\n-    let mut first = true;\n-    for item in items {\n-        if !first {\n-            buf.push_str(\", \");\n-        }\n-        first = false;\n-        write!(buf, \"{}\", item).unwrap();\n-    }\n-    buf.push_str(ket);\n-}\n-\n-trait PushDisplay {\n-    fn push_display<T: fmt::Display>(&mut self, item: &T);\n-}\n-\n-impl PushDisplay for String {\n-    fn push_display<T: fmt::Display>(&mut self, item: &T) {\n-        use std::fmt::Write;\n-        write!(self, \"{}\", item).unwrap()\n-    }\n-}\n-\n #[cfg(test)]\n mod tests {\n     use super::*;"}, {"sha": "b855687c4d95229a9149287ce4e2c1722bfca1b7", "filename": "crates/libsyntax2/src/yellow/syntax_text.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/ba02a55330d2ec9a0ea2c5cd457b82782ae299e9/crates%2Flibsyntax2%2Fsrc%2Fyellow%2Fsyntax_text.rs", "raw_url": "https://github.com/rust-lang/rust/raw/ba02a55330d2ec9a0ea2c5cd457b82782ae299e9/crates%2Flibsyntax2%2Fsrc%2Fyellow%2Fsyntax_text.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Flibsyntax2%2Fsrc%2Fyellow%2Fsyntax_text.rs?ref=ba02a55330d2ec9a0ea2c5cd457b82782ae299e9", "patch": "@@ -31,6 +31,9 @@ impl<'a> SyntaxText<'a> {\n                 Some(&text[range])\n             })\n     }\n+    pub fn push_to(&self, buf: &mut String) {\n+        self.chunks().for_each(|it| buf.push_str(it));\n+    }\n     pub fn to_string(&self) -> String {\n         self.chunks().collect()\n     }"}]}