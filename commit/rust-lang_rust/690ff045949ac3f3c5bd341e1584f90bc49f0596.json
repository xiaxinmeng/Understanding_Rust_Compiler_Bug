{"sha": "690ff045949ac3f3c5bd341e1584f90bc49f0596", "node_id": "MDY6Q29tbWl0NzI0NzEyOjY5MGZmMDQ1OTQ5YWMzZjNjNWJkMzQxZTE1ODRmOTBiYzQ5ZjA1OTY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-29T15:22:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2017-10-29T15:22:38Z"}, "message": "Auto merge of #45611 - Manishearth:lint-generics, r=petrochenkov\n\nAdd generics to LateContext\n\nFixes clippy breakage from https://github.com/rust-lang/rust/pull/44766 as discussed in https://github.com/rust-lang-nursery/rust-clippy/pull/2140#issuecomment-336973875\n\nr? @nikomatsakis", "tree": {"sha": "6f3749dfc390fddadd395b0178c977f7c25d4f5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6f3749dfc390fddadd395b0178c977f7c25d4f5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/690ff045949ac3f3c5bd341e1584f90bc49f0596", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/690ff045949ac3f3c5bd341e1584f90bc49f0596", "html_url": "https://github.com/rust-lang/rust/commit/690ff045949ac3f3c5bd341e1584f90bc49f0596", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/690ff045949ac3f3c5bd341e1584f90bc49f0596/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7d475a28dfa5399600c9b4121193fa57786ab88b", "url": "https://api.github.com/repos/rust-lang/rust/commits/7d475a28dfa5399600c9b4121193fa57786ab88b", "html_url": "https://github.com/rust-lang/rust/commit/7d475a28dfa5399600c9b4121193fa57786ab88b"}, {"sha": "84f1fc951dc0b80334d36e27ca408cb56c028e02", "url": "https://api.github.com/repos/rust-lang/rust/commits/84f1fc951dc0b80334d36e27ca408cb56c028e02", "html_url": "https://github.com/rust-lang/rust/commit/84f1fc951dc0b80334d36e27ca408cb56c028e02"}], "stats": {"total": 39, "additions": 36, "deletions": 3}, "files": [{"sha": "3df5b74c30ea9cefadb36a2e682bae7e4086de02", "filename": "src/Cargo.lock", "status": "modified", "additions": 7, "deletions": 0, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/690ff045949ac3f3c5bd341e1584f90bc49f0596/src%2FCargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/690ff045949ac3f3c5bd341e1584f90bc49f0596/src%2FCargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2FCargo.lock?ref=690ff045949ac3f3c5bd341e1584f90bc49f0596", "patch": "@@ -290,6 +290,7 @@ version = \"0.1.0\"\n name = \"clippy_lints\"\n version = \"0.0.166\"\n dependencies = [\n+ \"if_chain 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"itertools 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"lazy_static 0.2.9 (registry+https://github.com/rust-lang/crates.io-index)\",\n  \"matches 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)\",\n@@ -789,6 +790,11 @@ dependencies = [\n  \"unicode-normalization 0.1.5 (registry+https://github.com/rust-lang/crates.io-index)\",\n ]\n \n+[[package]]\n+name = \"if_chain\"\n+version = \"0.1.2\"\n+source = \"registry+https://github.com/rust-lang/crates.io-index\"\n+\n [[package]]\n name = \"ignore\"\n version = \"0.2.2\"\n@@ -2665,6 +2671,7 @@ source = \"registry+https://github.com/rust-lang/crates.io-index\"\n \"checksum html-diff 0.0.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"5298d63081a642508fce965740ddb03a386c5d81bf1fef0579a815cf49cb8c68\"\n \"checksum html5ever 0.18.0 (registry+https://github.com/rust-lang/crates.io-index)\" = \"a49d5001dd1bddf042ea41ed4e0a671d50b1bf187e66b349d7ec613bdce4ad90\"\n \"checksum idna 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"014b298351066f1512874135335d62a789ffe78a9974f94b43ed5621951eaf7d\"\n+\"checksum if_chain 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"61bb90bdd39e3af69b0172dfc6130f6cd6332bf040fbb9bdd4401d37adbd48b8\"\n \"checksum ignore 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)\" = \"b3fcaf2365eb14b28ec7603c98c06cc531f19de9eb283d89a3dff8417c8c99f5\"\n \"checksum itertools 0.6.5 (registry+https://github.com/rust-lang/crates.io-index)\" = \"d3f2be4da1690a039e9ae5fd575f706a63ad5a2120f161b1d653c9da3930dd21\"\n \"checksum itoa 0.3.4 (registry+https://github.com/rust-lang/crates.io-index)\" = \"8324a32baf01e2ae060e9de58ed0bc2320c9a2833491ee36cd3b4c414de4db8c\""}, {"sha": "58f1b1f9a41e73a05f5e110b000d92b343546f7c", "filename": "src/librustc/hir/mod.rs", "status": "modified", "additions": 13, "deletions": 0, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/690ff045949ac3f3c5bd341e1584f90bc49f0596/src%2Flibrustc%2Fhir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690ff045949ac3f3c5bd341e1584f90bc49f0596/src%2Flibrustc%2Fhir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fhir%2Fmod.rs?ref=690ff045949ac3f3c5bd341e1584f90bc49f0596", "patch": "@@ -1854,6 +1854,19 @@ impl Item_ {\n             _ => None,\n         }\n     }\n+\n+    pub fn generics(&self) -> Option<&Generics> {\n+        Some(match *self {\n+            ItemFn(_, _, _, _, ref generics, _) |\n+            ItemTy(_, ref generics) |\n+            ItemEnum(_, ref generics) |\n+            ItemStruct(_, ref generics) |\n+            ItemUnion(_, ref generics) |\n+            ItemTrait(_, ref generics, _, _) |\n+            ItemImpl(_, _, _, ref generics, _, _, _)=> generics,\n+            _ => return None\n+        })\n+    }\n }\n \n /// A reference from an trait to one of its associated items. This"}, {"sha": "601e0316d4af92cfe00a0dca46551e81d74dbd08", "filename": "src/librustc/lint/context.rs", "status": "modified", "additions": 14, "deletions": 1, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/690ff045949ac3f3c5bd341e1584f90bc49f0596/src%2Flibrustc%2Flint%2Fcontext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/690ff045949ac3f3c5bd341e1584f90bc49f0596/src%2Flibrustc%2Flint%2Fcontext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flint%2Fcontext.rs?ref=690ff045949ac3f3c5bd341e1584f90bc49f0596", "patch": "@@ -352,6 +352,9 @@ pub struct LateContext<'a, 'tcx: 'a> {\n     lint_sess: LintSession<'tcx, LateLintPassObject>,\n \n     last_ast_node_with_lint_attrs: ast::NodeId,\n+\n+    /// Generic type parameters in scope for the item we are in.\n+    pub generics: Option<&'tcx hir::Generics>,\n }\n \n /// Context for lint checking of the AST, after expansion, before lowering to\n@@ -646,13 +649,16 @@ impl<'a, 'tcx> hir_visit::Visitor<'tcx> for LateContext<'a, 'tcx> {\n     }\n \n     fn visit_item(&mut self, it: &'tcx hir::Item) {\n+        let generics = self.generics.take();\n+        self.generics = it.node.generics();\n         self.with_lint_attrs(it.id, &it.attrs, |cx| {\n             cx.with_param_env(it.id, |cx| {\n                 run_lints!(cx, check_item, late_passes, it);\n                 hir_visit::walk_item(cx, it);\n                 run_lints!(cx, check_item_post, late_passes, it);\n             });\n-        })\n+        });\n+        self.generics = generics;\n     }\n \n     fn visit_foreign_item(&mut self, it: &'tcx hir::ForeignItem) {\n@@ -774,23 +780,29 @@ impl<'a, 'tcx> hir_visit::Visitor<'tcx> for LateContext<'a, 'tcx> {\n     }\n \n     fn visit_trait_item(&mut self, trait_item: &'tcx hir::TraitItem) {\n+        let generics = self.generics.take();\n+        self.generics = Some(&trait_item.generics);\n         self.with_lint_attrs(trait_item.id, &trait_item.attrs, |cx| {\n             cx.with_param_env(trait_item.id, |cx| {\n                 run_lints!(cx, check_trait_item, late_passes, trait_item);\n                 hir_visit::walk_trait_item(cx, trait_item);\n                 run_lints!(cx, check_trait_item_post, late_passes, trait_item);\n             });\n         });\n+        self.generics = generics;\n     }\n \n     fn visit_impl_item(&mut self, impl_item: &'tcx hir::ImplItem) {\n+        let generics = self.generics.take();\n+        self.generics = Some(&impl_item.generics);\n         self.with_lint_attrs(impl_item.id, &impl_item.attrs, |cx| {\n             cx.with_param_env(impl_item.id, |cx| {\n                 run_lints!(cx, check_impl_item, late_passes, impl_item);\n                 hir_visit::walk_impl_item(cx, impl_item);\n                 run_lints!(cx, check_impl_item_post, late_passes, impl_item);\n             });\n         });\n+        self.generics = generics;\n     }\n \n     fn visit_lifetime(&mut self, lt: &'tcx hir::Lifetime) {\n@@ -991,6 +1003,7 @@ pub fn check_crate<'a, 'tcx>(tcx: TyCtxt<'a, 'tcx, 'tcx>) {\n         access_levels,\n         lint_sess: LintSession::new(&tcx.sess.lint_store),\n         last_ast_node_with_lint_attrs: ast::CRATE_NODE_ID,\n+        generics: None,\n     };\n \n     // Visit the whole crate."}, {"sha": "f76225e3887170743403af9204887918b5db5a80", "filename": "src/tools/clippy", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": null, "raw_url": null, "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fclippy?ref=690ff045949ac3f3c5bd341e1584f90bc49f0596", "patch": "@@ -1 +1 @@\n-Subproject commit 281bd790de7b992831a1ff8a589c0fc38c842c95\n+Subproject commit f76225e3887170743403af9204887918b5db5a80"}, {"sha": "da4d26d78dabc0cb9e1d4926559b9d6c2f3f5bae", "filename": "src/tools/toolstate.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/690ff045949ac3f3c5bd341e1584f90bc49f0596/src%2Ftools%2Ftoolstate.toml", "raw_url": "https://github.com/rust-lang/rust/raw/690ff045949ac3f3c5bd341e1584f90bc49f0596/src%2Ftools%2Ftoolstate.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Ftoolstate.toml?ref=690ff045949ac3f3c5bd341e1584f90bc49f0596", "patch": "@@ -26,7 +26,7 @@\n miri = \"Broken\"\n \n # ping @Manishearth @llogiq @mcarton @oli-obk\n-clippy = \"Broken\"\n+clippy = \"Compiling\"\n \n # ping @nrc\n rls = \"Broken\""}]}