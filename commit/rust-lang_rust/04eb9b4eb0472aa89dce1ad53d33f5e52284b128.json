{"sha": "04eb9b4eb0472aa89dce1ad53d33f5e52284b128", "node_id": "MDY6Q29tbWl0NzI0NzEyOjA0ZWI5YjRlYjA0NzJhYTg5ZGNlMWFkNTNkMzNmNWU1MjI4NGIxMjg=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-01-31T20:40:05Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2013-02-04T01:50:27Z"}, "message": "librustc: Fix bugs regarding to impl privacy. rs=bugfix", "tree": {"sha": "6736b65caf9907427ce8cdc25ee1b6e8bbc4fae6", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/6736b65caf9907427ce8cdc25ee1b6e8bbc4fae6"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/04eb9b4eb0472aa89dce1ad53d33f5e52284b128", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/04eb9b4eb0472aa89dce1ad53d33f5e52284b128", "html_url": "https://github.com/rust-lang/rust/commit/04eb9b4eb0472aa89dce1ad53d33f5e52284b128", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/04eb9b4eb0472aa89dce1ad53d33f5e52284b128/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d03612f9d643b6a49678535972715456dd6ac19", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d03612f9d643b6a49678535972715456dd6ac19", "html_url": "https://github.com/rust-lang/rust/commit/5d03612f9d643b6a49678535972715456dd6ac19"}], "stats": {"total": 50, "additions": 47, "deletions": 3}, "files": [{"sha": "c6be09725e4d6f52d8bae5c9b9dddc1b0c8a7b85", "filename": "src/librustc/metadata/encoder.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/04eb9b4eb0472aa89dce1ad53d33f5e52284b128/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04eb9b4eb0472aa89dce1ad53d33f5e52284b128/src%2Flibrustc%2Fmetadata%2Fencoder.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmetadata%2Fencoder.rs?ref=04eb9b4eb0472aa89dce1ad53d33f5e52284b128", "patch": "@@ -547,8 +547,8 @@ fn encode_info_for_item(ecx: @encode_ctxt, ebml_w: writer::Encoder,\n     let tcx = ecx.tcx;\n     let must_write =\n         match item.node {\n-          item_enum(_, _) | item_impl(*)\n-          | item_trait(*) | item_struct(*) => true,\n+          item_enum(_, _) | item_impl(*) | item_trait(*) | item_struct(*) |\n+          item_mod(*) | item_foreign_mod(*) => true,\n           _ => false\n         };\n     if !must_write && !reachable(ecx, item.id) { return; }"}, {"sha": "09886913bc5332057ae9a6273119a13291302e7f", "filename": "src/librustc/middle/resolve.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/04eb9b4eb0472aa89dce1ad53d33f5e52284b128/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04eb9b4eb0472aa89dce1ad53d33f5e52284b128/src%2Flibrustc%2Fmiddle%2Fresolve.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve.rs?ref=04eb9b4eb0472aa89dce1ad53d33f5e52284b128", "patch": "@@ -1212,7 +1212,7 @@ pub impl Resolver {\n                         let parent_link = self.get_parent_link(new_parent,\n                                                                ident);\n                         let def_id = local_def(item.id);\n-                        name_bindings.define_module(privacy,\n+                        name_bindings.define_module(Public,\n                                                     parent_link,\n                                                     Some(def_id),\n                                                     TraitModuleKind,"}, {"sha": "05d5cee47f2c866b822fb6fa754961c9e74c2d4c", "filename": "src/test/auxiliary/impl_privacy_xc_1.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/04eb9b4eb0472aa89dce1ad53d33f5e52284b128/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04eb9b4eb0472aa89dce1ad53d33f5e52284b128/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_1.rs?ref=04eb9b4eb0472aa89dce1ad53d33f5e52284b128", "patch": "@@ -0,0 +1,10 @@\n+#[crate_type = \"lib\"];\n+\n+pub struct Fish {\n+    x: int\n+}\n+\n+impl Fish {\n+    fn swim(&self) {}\n+}\n+"}, {"sha": "009e132f5985daac75c0308456941c921eb85e75", "filename": "src/test/auxiliary/impl_privacy_xc_2.rs", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/04eb9b4eb0472aa89dce1ad53d33f5e52284b128/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04eb9b4eb0472aa89dce1ad53d33f5e52284b128/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fauxiliary%2Fimpl_privacy_xc_2.rs?ref=04eb9b4eb0472aa89dce1ad53d33f5e52284b128", "patch": "@@ -0,0 +1,15 @@\n+#[crate_type = \"lib\"];\n+\n+pub struct Fish {\n+    x: int\n+}\n+\n+mod unexported {\n+    use super::Fish;\n+    impl Fish : Eq {\n+        pure fn eq(&self, _: &Fish) -> bool { true }\n+        pure fn ne(&self, _: &Fish) -> bool { false }\n+    }\n+}\n+\n+"}, {"sha": "0fbb88e2ff8f1a1e723b884a49e475c545970022", "filename": "src/test/run-pass/impl-privacy-xc-1.rs", "status": "added", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/04eb9b4eb0472aa89dce1ad53d33f5e52284b128/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-1.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04eb9b4eb0472aa89dce1ad53d33f5e52284b128/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-1.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-1.rs?ref=04eb9b4eb0472aa89dce1ad53d33f5e52284b128", "patch": "@@ -0,0 +1,9 @@\n+// aux-build:impl_privacy_xc_1.rs\n+\n+extern mod impl_privacy_xc_1;\n+\n+fn main() {\n+    let fish = impl_privacy_xc_1::Fish { x: 1 };\n+    fish.swim();\n+}\n+"}, {"sha": "ab0612ab82d10a07966e444a8bbd3f4dbecd7c6c", "filename": "src/test/run-pass/impl-privacy-xc-2.rs", "status": "added", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/04eb9b4eb0472aa89dce1ad53d33f5e52284b128/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-2.rs", "raw_url": "https://github.com/rust-lang/rust/raw/04eb9b4eb0472aa89dce1ad53d33f5e52284b128/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-2.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fimpl-privacy-xc-2.rs?ref=04eb9b4eb0472aa89dce1ad53d33f5e52284b128", "patch": "@@ -0,0 +1,10 @@\n+// aux-build:impl_privacy_xc_2.rs\n+\n+extern mod impl_privacy_xc_2;\n+\n+fn main() {\n+    let fish1 = impl_privacy_xc_2::Fish { x: 1 };\n+    let fish2 = impl_privacy_xc_2::Fish { x: 2 };\n+    io::println(if fish1.eq(&fish2) { \"yes\" } else { \"no \" });\n+}\n+"}]}