{"sha": "956b96a19d83ffd9feb920c053f0ea31e8dad46e", "node_id": "C_kwDOAAsO6NoAKDk1NmI5NmExOWQ4M2ZmZDlmZWI5MjBjMDUzZjBlYTMxZThkYWQ0NmU", "commit": {"author": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-10-25T11:43:26Z"}, "committer": {"name": "Lauren\u021biu Nicola", "email": "lnicola@dend.ro", "date": "2022-10-25T11:43:26Z"}, "message": "Switch to upstream positionEncoding", "tree": {"sha": "85494921c7cd14b1b9acc99421dce7cbe3680a3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/85494921c7cd14b1b9acc99421dce7cbe3680a3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/956b96a19d83ffd9feb920c053f0ea31e8dad46e", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/956b96a19d83ffd9feb920c053f0ea31e8dad46e", "html_url": "https://github.com/rust-lang/rust/commit/956b96a19d83ffd9feb920c053f0ea31e8dad46e", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/956b96a19d83ffd9feb920c053f0ea31e8dad46e/comments", "author": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "committer": {"login": "lnicola", "id": 308347, "node_id": "MDQ6VXNlcjMwODM0Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/308347?v=4", "gravatar_id": "", "url": "https://api.github.com/users/lnicola", "html_url": "https://github.com/lnicola", "followers_url": "https://api.github.com/users/lnicola/followers", "following_url": "https://api.github.com/users/lnicola/following{/other_user}", "gists_url": "https://api.github.com/users/lnicola/gists{/gist_id}", "starred_url": "https://api.github.com/users/lnicola/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/lnicola/subscriptions", "organizations_url": "https://api.github.com/users/lnicola/orgs", "repos_url": "https://api.github.com/users/lnicola/repos", "events_url": "https://api.github.com/users/lnicola/events{/privacy}", "received_events_url": "https://api.github.com/users/lnicola/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "53b6d69e931a52cca44ef94c3b713b4d255754b8", "url": "https://api.github.com/repos/rust-lang/rust/commits/53b6d69e931a52cca44ef94c3b713b4d255754b8", "html_url": "https://github.com/rust-lang/rust/commit/53b6d69e931a52cca44ef94c3b713b4d255754b8"}], "stats": {"total": 107, "additions": 56, "deletions": 51}, "files": [{"sha": "8931c17bbdc16fec06fd99243ef9a62e40f62ab1", "filename": "Cargo.lock", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/Cargo.lock", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/Cargo.lock", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/Cargo.lock?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -872,9 +872,9 @@ dependencies = [\n \n [[package]]\n name = \"lsp-types\"\n-version = \"0.93.1\"\n+version = \"0.93.2\"\n source = \"registry+https://github.com/rust-lang/crates.io-index\"\n-checksum = \"a3bcfee315dde785ba887edb540b08765fd7df75a7d948844be6bf5712246734\"\n+checksum = \"9be6e9c7e2d18f651974370d7aff703f9513e0df6e464fd795660edc77e6ca51\"\n dependencies = [\n  \"bitflags\",\n  \"serde\","}, {"sha": "37e1cf663fc924d2f547c1e90df9d5f96190b4e4", "filename": "crates/rust-analyzer/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2FCargo.toml?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -23,7 +23,7 @@ crossbeam-channel = \"0.5.5\"\n dissimilar = \"1.0.4\"\n itertools = \"0.10.5\"\n scip = \"0.1.1\"\n-lsp-types = { version = \"0.93.1\", features = [\"proposed\"] }\n+lsp-types = { version = \"0.93.2\", features = [\"proposed\"] }\n parking_lot = \"0.12.1\"\n xflags = \"0.3.0\"\n oorandom = \"11.1.3\""}, {"sha": "7bf595d2a45f51c8a0784c6790bab4af0ae6f72d", "filename": "crates/rust-analyzer/src/bin/main.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fbin%2Fmain.rs?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -11,7 +11,7 @@ use std::{env, fs, path::Path, process};\n \n use lsp_server::Connection;\n use project_model::ProjectManifest;\n-use rust_analyzer::{cli::flags, config::Config, from_json, lsp_ext::supports_utf8, Result};\n+use rust_analyzer::{cli::flags, config::Config, from_json, Result};\n use vfs::AbsPathBuf;\n \n #[cfg(all(feature = \"mimalloc\"))]\n@@ -191,11 +191,7 @@ fn run_server() -> Result<()> {\n             name: String::from(\"rust-analyzer\"),\n             version: Some(rust_analyzer::version().to_string()),\n         }),\n-        offset_encoding: if supports_utf8(config.caps()) {\n-            Some(\"utf-8\".to_string())\n-        } else {\n-            None\n-        },\n+        offset_encoding: None,\n     };\n \n     let initialize_result = serde_json::to_value(initialize_result).unwrap();"}, {"sha": "723b888d9abc8a1100184debf1e4b47c33c6a740", "filename": "crates/rust-analyzer/src/caps.rs", "status": "modified", "additions": 10, "deletions": 4, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcaps.rs?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -6,19 +6,25 @@ use lsp_types::{\n     FileOperationFilter, FileOperationPattern, FileOperationPatternKind,\n     FileOperationRegistrationOptions, FoldingRangeProviderCapability, HoverProviderCapability,\n     ImplementationProviderCapability, InlayHintOptions, InlayHintServerCapabilities, OneOf,\n-    RenameOptions, SaveOptions, SelectionRangeProviderCapability, SemanticTokensFullOptions,\n-    SemanticTokensLegend, SemanticTokensOptions, ServerCapabilities, SignatureHelpOptions,\n-    TextDocumentSyncCapability, TextDocumentSyncKind, TextDocumentSyncOptions,\n-    TypeDefinitionProviderCapability, WorkDoneProgressOptions,\n+    PositionEncodingKind, RenameOptions, SaveOptions, SelectionRangeProviderCapability,\n+    SemanticTokensFullOptions, SemanticTokensLegend, SemanticTokensOptions, ServerCapabilities,\n+    SignatureHelpOptions, TextDocumentSyncCapability, TextDocumentSyncKind,\n+    TextDocumentSyncOptions, TypeDefinitionProviderCapability, WorkDoneProgressOptions,\n     WorkspaceFileOperationsServerCapabilities, WorkspaceServerCapabilities,\n };\n use serde_json::json;\n \n use crate::config::{Config, RustfmtConfig};\n+use crate::lsp_ext::supports_utf8;\n use crate::semantic_tokens;\n \n pub fn server_capabilities(config: &Config) -> ServerCapabilities {\n     ServerCapabilities {\n+        position_encoding: if supports_utf8(config.caps()) {\n+            Some(PositionEncodingKind::UTF8)\n+        } else {\n+            None\n+        },\n         text_document_sync: Some(TextDocumentSyncCapability::Options(TextDocumentSyncOptions {\n             open_close: Some(true),\n             change: Some(TextDocumentSyncKind::INCREMENTAL),"}, {"sha": "5ff347b9bd7227dd886e73bf2b7bec69ce012a30", "filename": "crates/rust-analyzer/src/cli/lsif.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fcli%2Flsif.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fcli%2Flsif.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Flsif.rs?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -20,7 +20,7 @@ use crate::cli::{\n     load_cargo::{load_workspace, LoadCargoConfig},\n     Result,\n };\n-use crate::line_index::{LineEndings, LineIndex, OffsetEncoding};\n+use crate::line_index::{LineEndings, LineIndex, PositionEncoding};\n use crate::to_proto;\n use crate::version::version;\n \n@@ -126,7 +126,7 @@ impl LsifManager<'_> {\n         let line_index = self.db.line_index(file_id);\n         let line_index = LineIndex {\n             index: line_index,\n-            encoding: OffsetEncoding::Utf16,\n+            encoding: PositionEncoding::Utf16,\n             endings: LineEndings::Unix,\n         };\n         let range_id = self.add_vertex(lsif::Vertex::Range {\n@@ -248,7 +248,7 @@ impl LsifManager<'_> {\n         let line_index = self.db.line_index(file_id);\n         let line_index = LineIndex {\n             index: line_index,\n-            encoding: OffsetEncoding::Utf16,\n+            encoding: PositionEncoding::Utf16,\n             endings: LineEndings::Unix,\n         };\n         let result = folds"}, {"sha": "16298862b50f39fbaee254c76ccb8190ad4ec017", "filename": "crates/rust-analyzer/src/cli/scip.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fscip.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fscip.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fcli%2Fscip.rs?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -5,7 +5,7 @@ use std::{\n     time::Instant,\n };\n \n-use crate::line_index::{LineEndings, LineIndex, OffsetEncoding};\n+use crate::line_index::{LineEndings, LineIndex, PositionEncoding};\n use hir::Name;\n use ide::{\n     LineCol, MonikerDescriptorKind, StaticIndex, StaticIndexedFile, TextRange, TokenId,\n@@ -91,7 +91,7 @@ impl flags::Scip {\n \n             let line_index = LineIndex {\n                 index: db.line_index(file_id),\n-                encoding: OffsetEncoding::Utf8,\n+                encoding: PositionEncoding::Utf8,\n                 endings: LineEndings::Unix,\n             };\n "}, {"sha": "1ed8f2bb5f35a639e16d7a4b641677ce94ead90c", "filename": "crates/rust-analyzer/src/config.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fconfig.rs?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -32,7 +32,7 @@ use vfs::AbsPathBuf;\n use crate::{\n     caps::completion_item_edit_resolve,\n     diagnostics::DiagnosticsMapConfig,\n-    line_index::OffsetEncoding,\n+    line_index::PositionEncoding,\n     lsp_ext::{self, supports_utf8, WorkspaceSymbolSearchKind, WorkspaceSymbolSearchScope},\n };\n \n@@ -948,11 +948,11 @@ impl Config {\n         .is_some()\n     }\n \n-    pub fn offset_encoding(&self) -> OffsetEncoding {\n+    pub fn position_encoding(&self) -> PositionEncoding {\n         if supports_utf8(&self.caps) {\n-            OffsetEncoding::Utf8\n+            PositionEncoding::Utf8\n         } else {\n-            OffsetEncoding::Utf16\n+            PositionEncoding::Utf16\n         }\n     }\n "}, {"sha": "189ac2fbf53393a1752ab1c50114803751ae3c58", "filename": "crates/rust-analyzer/src/diagnostics/to_proto.rs", "status": "modified", "additions": 8, "deletions": 8, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fdiagnostics%2Fto_proto.rs?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -8,7 +8,7 @@ use stdx::format_to;\n use vfs::{AbsPath, AbsPathBuf};\n \n use crate::{\n-    global_state::GlobalStateSnapshot, line_index::OffsetEncoding, lsp_ext,\n+    global_state::GlobalStateSnapshot, line_index::PositionEncoding, lsp_ext,\n     to_proto::url_from_abs_path,\n };\n \n@@ -66,17 +66,17 @@ fn location(\n     let uri = url_from_abs_path(&file_name);\n \n     let range = {\n-        let offset_encoding = snap.config.offset_encoding();\n+        let position_encoding = snap.config.position_encoding();\n         lsp_types::Range::new(\n-            position(&offset_encoding, span, span.line_start, span.column_start),\n-            position(&offset_encoding, span, span.line_end, span.column_end),\n+            position(&position_encoding, span, span.line_start, span.column_start),\n+            position(&position_encoding, span, span.line_end, span.column_end),\n         )\n     };\n     lsp_types::Location::new(uri, range)\n }\n \n fn position(\n-    offset_encoding: &OffsetEncoding,\n+    position_encoding: &PositionEncoding,\n     span: &DiagnosticSpan,\n     line_offset: usize,\n     column_offset: usize,\n@@ -93,9 +93,9 @@ fn position(\n             };\n         }\n         let mut char_offset = 0;\n-        let len_func = match offset_encoding {\n-            OffsetEncoding::Utf8 => char::len_utf8,\n-            OffsetEncoding::Utf16 => char::len_utf16,\n+        let len_func = match position_encoding {\n+            PositionEncoding::Utf8 => char::len_utf8,\n+            PositionEncoding::Utf16 => char::len_utf16,\n         };\n         for c in line.text.chars() {\n             char_offset += 1;"}, {"sha": "936957bab4882a41d3cfbdd3b7330c102c7c56e9", "filename": "crates/rust-analyzer/src/from_proto.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Ffrom_proto.rs?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -8,7 +8,7 @@ use vfs::AbsPathBuf;\n use crate::{\n     from_json,\n     global_state::GlobalStateSnapshot,\n-    line_index::{LineIndex, OffsetEncoding},\n+    line_index::{LineIndex, PositionEncoding},\n     lsp_ext,\n     lsp_utils::invalid_params_error,\n     Result,\n@@ -25,10 +25,10 @@ pub(crate) fn vfs_path(url: &lsp_types::Url) -> Result<vfs::VfsPath> {\n \n pub(crate) fn offset(line_index: &LineIndex, position: lsp_types::Position) -> Result<TextSize> {\n     let line_col = match line_index.encoding {\n-        OffsetEncoding::Utf8 => {\n+        PositionEncoding::Utf8 => {\n             LineCol { line: position.line as u32, col: position.character as u32 }\n         }\n-        OffsetEncoding::Utf16 => {\n+        PositionEncoding::Utf16 => {\n             let line_col =\n                 LineColUtf16 { line: position.line as u32, col: position.character as u32 };\n             line_index.index.to_utf8(line_col)"}, {"sha": "74277ff2e576e45e6fa8501cd702b4c7f479061f", "filename": "crates/rust-analyzer/src/global_state.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fglobal_state.rs?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -383,7 +383,7 @@ impl GlobalStateSnapshot {\n     pub(crate) fn file_line_index(&self, file_id: FileId) -> Cancellable<LineIndex> {\n         let endings = self.vfs.read().1[&file_id];\n         let index = self.analysis.file_line_index(file_id)?;\n-        let res = LineIndex { index, endings, encoding: self.config.offset_encoding() };\n+        let res = LineIndex { index, endings, encoding: self.config.position_encoding() };\n         Ok(res)\n     }\n "}, {"sha": "0d424b915703a7db1e56c56dd22bd955e44cdd81", "filename": "crates/rust-analyzer/src/line_index.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fline_index.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fline_index.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fline_index.rs?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -7,15 +7,15 @@\n \n use std::sync::Arc;\n \n-pub enum OffsetEncoding {\n+pub enum PositionEncoding {\n     Utf8,\n     Utf16,\n }\n \n pub(crate) struct LineIndex {\n     pub(crate) index: Arc<ide::LineIndex>,\n     pub(crate) endings: LineEndings,\n-    pub(crate) encoding: OffsetEncoding,\n+    pub(crate) encoding: PositionEncoding,\n }\n \n #[derive(Debug, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, Hash)]"}, {"sha": "8cc5648f3ce0cfb3e9f4f6d369b6553cc3c8a24a", "filename": "crates/rust-analyzer/src/lsp_ext.rs", "status": "modified", "additions": 10, "deletions": 1, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_ext.rs?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -3,6 +3,7 @@\n use std::{collections::HashMap, path::PathBuf};\n \n use lsp_types::request::Request;\n+use lsp_types::PositionEncodingKind;\n use lsp_types::{\n     notification::Notification, CodeActionKind, DocumentOnTypeFormattingParams,\n     PartialResultParams, Position, Range, TextDocumentIdentifier, WorkDoneProgressParams,\n@@ -455,7 +456,15 @@ pub(crate) enum CodeLensResolveData {\n }\n \n pub fn supports_utf8(caps: &lsp_types::ClientCapabilities) -> bool {\n-    caps.offset_encoding.as_deref().unwrap_or_default().iter().any(|it| it == \"utf-8\")\n+    match &caps.general {\n+        Some(general) => general\n+            .position_encodings\n+            .as_deref()\n+            .unwrap_or_default()\n+            .iter()\n+            .any(|it| it == &PositionEncodingKind::UTF8),\n+        _ => false,\n+    }\n }\n \n pub enum MoveItem {}"}, {"sha": "c6a4db9a453ac5069a27b3b2f6472ff21e40e997", "filename": "crates/rust-analyzer/src/lsp_utils.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Flsp_utils.rs?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -6,7 +6,7 @@ use lsp_server::Notification;\n use crate::{\n     from_proto,\n     global_state::GlobalState,\n-    line_index::{LineEndings, LineIndex, OffsetEncoding},\n+    line_index::{LineEndings, LineIndex, PositionEncoding},\n     LspError,\n };\n \n@@ -140,7 +140,7 @@ pub(crate) fn apply_document_changes(\n         index: Arc::new(ide::LineIndex::new(old_text)),\n         // We don't care about line endings or offset encoding here.\n         endings: LineEndings::Unix,\n-        encoding: OffsetEncoding::Utf16,\n+        encoding: PositionEncoding::Utf16,\n     };\n \n     // The changes we got must be applied sequentially, but can cross lines so we"}, {"sha": "6c84a2069cd5779a439c43e7056f62ea8e8b9fc0", "filename": "crates/rust-analyzer/src/to_proto.rs", "status": "modified", "additions": 4, "deletions": 4, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fto_proto.rs?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -21,7 +21,7 @@ use crate::{\n     cargo_target_spec::CargoTargetSpec,\n     config::{CallInfoConfig, Config},\n     global_state::GlobalStateSnapshot,\n-    line_index::{LineEndings, LineIndex, OffsetEncoding},\n+    line_index::{LineEndings, LineIndex, PositionEncoding},\n     lsp_ext,\n     lsp_utils::invalid_params_error,\n     semantic_tokens, Result,\n@@ -30,8 +30,8 @@ use crate::{\n pub(crate) fn position(line_index: &LineIndex, offset: TextSize) -> lsp_types::Position {\n     let line_col = line_index.index.line_col(offset);\n     match line_index.encoding {\n-        OffsetEncoding::Utf8 => lsp_types::Position::new(line_col.line, line_col.col),\n-        OffsetEncoding::Utf16 => {\n+        PositionEncoding::Utf8 => lsp_types::Position::new(line_col.line, line_col.col),\n+        PositionEncoding::Utf16 => {\n             let line_col = line_index.index.to_utf16(line_col);\n             lsp_types::Position::new(line_col.line, line_col.col)\n         }\n@@ -1394,7 +1394,7 @@ fn main() {\n         let line_index = LineIndex {\n             index: Arc::new(ide::LineIndex::new(text)),\n             endings: LineEndings::Unix,\n-            encoding: OffsetEncoding::Utf16,\n+            encoding: PositionEncoding::Utf16,\n         };\n         let converted: Vec<lsp_types::FoldingRange> =\n             folds.into_iter().map(|it| folding_range(text, &line_index, true, it)).collect();"}, {"sha": "fe316fcae9b8817c51402932947cc26a0308bc92", "filename": "docs/dev/lsp-extensions.md", "status": "modified", "additions": 1, "deletions": 7, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/docs%2Fdev%2Flsp-extensions.md", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/docs%2Fdev%2Flsp-extensions.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/docs%2Fdev%2Flsp-extensions.md?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -1,5 +1,5 @@\n <!---\n-lsp_ext.rs hash: 7b710095d773b978\n+lsp_ext.rs hash: 62068e53ac202dc8\n \n If you need to change the above hash to make the test pass, please check if you\n need to adjust this doc as well and ping this issue:\n@@ -19,12 +19,6 @@ Requests, which are likely to always remain specific to `rust-analyzer` are unde\n \n If you want to be notified about the changes to this document, subscribe to [#4604](https://github.com/rust-lang/rust-analyzer/issues/4604).\n \n-## UTF-8 offsets\n-\n-rust-analyzer supports clangd's extension for opting into UTF-8 as the coordinate space for offsets (by default, LSP uses UTF-16 offsets).\n-\n-https://clangd.llvm.org/extensions.html#utf-8-offsets\n-\n ## Configuration in `initializationOptions`\n \n **Upstream Issue:** https://github.com/microsoft/language-server-protocol/issues/567"}, {"sha": "782275257053a1422af68d44e91621a92d840fe6", "filename": "lib/lsp-server/Cargo.toml", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/956b96a19d83ffd9feb920c053f0ea31e8dad46e/lib%2Flsp-server%2FCargo.toml", "raw_url": "https://github.com/rust-lang/rust/raw/956b96a19d83ffd9feb920c053f0ea31e8dad46e/lib%2Flsp-server%2FCargo.toml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/lib%2Flsp-server%2FCargo.toml?ref=956b96a19d83ffd9feb920c053f0ea31e8dad46e", "patch": "@@ -13,4 +13,4 @@ serde = { version = \"1.0.144\", features = [\"derive\"] }\n crossbeam-channel = \"0.5.6\"\n \n [dev-dependencies]\n-lsp-types = \"0.93.1\"\n+lsp-types = \"0.93.2\""}]}