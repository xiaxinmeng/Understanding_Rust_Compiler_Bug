{"sha": "21184a1b2a4bea57a7666432749b171414136c60", "node_id": "MDY6Q29tbWl0NzI0NzEyOjIxMTg0YTFiMmE0YmVhNTdhNzY2NjQzMjc0OWIxNzE0MTQxMzZjNjA=", "commit": {"author": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-07-27T20:56:57Z"}, "committer": {"name": "Kirill Bulatov", "email": "mail4score@gmail.com", "date": "2020-08-11T12:09:08Z"}, "message": "Restore accidentally removed public method", "tree": {"sha": "f009a6df8b59ee88952f722534312b9567930c51", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f009a6df8b59ee88952f722534312b9567930c51"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/21184a1b2a4bea57a7666432749b171414136c60", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/21184a1b2a4bea57a7666432749b171414136c60", "html_url": "https://github.com/rust-lang/rust/commit/21184a1b2a4bea57a7666432749b171414136c60", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/21184a1b2a4bea57a7666432749b171414136c60/comments", "author": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "committer": {"login": "SomeoneToIgnore", "id": 2690773, "node_id": "MDQ6VXNlcjI2OTA3NzM=", "avatar_url": "https://avatars.githubusercontent.com/u/2690773?v=4", "gravatar_id": "", "url": "https://api.github.com/users/SomeoneToIgnore", "html_url": "https://github.com/SomeoneToIgnore", "followers_url": "https://api.github.com/users/SomeoneToIgnore/followers", "following_url": "https://api.github.com/users/SomeoneToIgnore/following{/other_user}", "gists_url": "https://api.github.com/users/SomeoneToIgnore/gists{/gist_id}", "starred_url": "https://api.github.com/users/SomeoneToIgnore/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/SomeoneToIgnore/subscriptions", "organizations_url": "https://api.github.com/users/SomeoneToIgnore/orgs", "repos_url": "https://api.github.com/users/SomeoneToIgnore/repos", "events_url": "https://api.github.com/users/SomeoneToIgnore/events{/privacy}", "received_events_url": "https://api.github.com/users/SomeoneToIgnore/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d", "url": "https://api.github.com/repos/rust-lang/rust/commits/cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d", "html_url": "https://github.com/rust-lang/rust/commit/cb0b13a583c0c20b57fd3529e2c01ab42bd8f04d"}], "stats": {"total": 21, "additions": 11, "deletions": 10}, "files": [{"sha": "23f28a7f71dc5f2a30e3d11b1a8abcd2963fbbc3", "filename": "crates/ra_hir_expand/src/diagnostics.rs", "status": "modified", "additions": 6, "deletions": 1, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/21184a1b2a4bea57a7666432749b171414136c60/crates%2Fra_hir_expand%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21184a1b2a4bea57a7666432749b171414136c60/crates%2Fra_hir_expand%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_expand%2Fsrc%2Fdiagnostics.rs?ref=21184a1b2a4bea57a7666432749b171414136c60", "patch": "@@ -16,7 +16,7 @@\n \n use std::{any::Any, fmt};\n \n-use ra_syntax::SyntaxNodePtr;\n+use ra_syntax::{SyntaxNode, SyntaxNodePtr};\n \n use crate::{db::AstDatabase, InFile};\n \n@@ -38,6 +38,11 @@ pub trait AstDiagnostic {\n }\n \n impl dyn Diagnostic {\n+    pub fn syntax_node(&self, db: &impl AstDatabase) -> SyntaxNode {\n+        let node = db.parse_or_expand(self.source().file_id).unwrap();\n+        self.source().value.to_node(&node)\n+    }\n+\n     pub fn downcast_ref<D: Diagnostic>(&self) -> Option<&D> {\n         self.as_any().downcast_ref()\n     }"}, {"sha": "9d29f307166d7e3eaa70aafbd8d83259105f6e78", "filename": "crates/ra_hir_ty/src/diagnostics.rs", "status": "modified", "additions": 5, "deletions": 9, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/21184a1b2a4bea57a7666432749b171414136c60/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/21184a1b2a4bea57a7666432749b171414136c60/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_hir_ty%2Fsrc%2Fdiagnostics.rs?ref=21184a1b2a4bea57a7666432749b171414136c60", "patch": "@@ -262,10 +262,7 @@ impl AstDiagnostic for MismatchedArgCount {\n #[cfg(test)]\n mod tests {\n     use hir_def::{db::DefDatabase, AssocItemId, ModuleDefId};\n-    use hir_expand::{\n-        db::AstDatabase,\n-        diagnostics::{Diagnostic, DiagnosticSinkBuilder},\n-    };\n+    use hir_expand::diagnostics::{Diagnostic, DiagnosticSinkBuilder};\n     use ra_db::{fixture::WithFixture, FileId, SourceDatabase, SourceDatabaseExt};\n     use ra_syntax::{TextRange, TextSize};\n     use rustc_hash::FxHashMap;\n@@ -310,12 +307,11 @@ mod tests {\n \n         let mut actual: FxHashMap<FileId, Vec<(TextRange, String)>> = FxHashMap::default();\n         db.diagnostics(|d| {\n-            // FXIME: macros...\n-            let source = d.source();\n-            let root = db.parse_or_expand(source.file_id).unwrap();\n-            let range = source.value.to_node(&root).text_range();\n+            // FIXME: macros...\n+            let file_id = d.source().file_id.original_file(&db);\n+            let range = d.syntax_node(&db).text_range();\n             let message = d.message().to_owned();\n-            actual.entry(source.file_id.original_file(&db)).or_default().push((range, message));\n+            actual.entry(file_id).or_default().push((range, message));\n         });\n \n         for (file_id, diags) in actual.iter_mut() {"}]}