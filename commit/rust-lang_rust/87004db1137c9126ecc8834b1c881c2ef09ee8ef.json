{"sha": "87004db1137c9126ecc8834b1c881c2ef09ee8ef", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg3MDA0ZGIxMTM3YzkxMjZlY2M4ODM0YjFjODgxYzJlZjA5ZWU4ZWY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-29T14:26:38Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2014-01-29T14:26:38Z"}, "message": "auto merge of #11867 : dmanescu/rust/8784-arena-glob, r=huonw\n\nIn line with the dissolution of libextra - #8784 - this moves arena and glob into\r\ntheir own respective modules. Updates .gitignore with the entries\r\ndoc/{arena,glob} in accordance.", "tree": {"sha": "ca737f2ab1b7393f375c31f3768e68191ab2dbba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca737f2ab1b7393f375c31f3768e68191ab2dbba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/87004db1137c9126ecc8834b1c881c2ef09ee8ef", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/87004db1137c9126ecc8834b1c881c2ef09ee8ef", "html_url": "https://github.com/rust-lang/rust/commit/87004db1137c9126ecc8834b1c881c2ef09ee8ef", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/87004db1137c9126ecc8834b1c881c2ef09ee8ef/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7b1432f6c0a18f27fc0003bdd8676ba7ec061306", "url": "https://api.github.com/repos/rust-lang/rust/commits/7b1432f6c0a18f27fc0003bdd8676ba7ec061306", "html_url": "https://github.com/rust-lang/rust/commit/7b1432f6c0a18f27fc0003bdd8676ba7ec061306"}, {"sha": "93398d16ec816cd56eb5321d27ccbf46b9049815", "url": "https://api.github.com/repos/rust-lang/rust/commits/93398d16ec816cd56eb5321d27ccbf46b9049815", "html_url": "https://github.com/rust-lang/rust/commit/93398d16ec816cd56eb5321d27ccbf46b9049815"}], "stats": {"total": 60, "additions": 39, "deletions": 21}, "files": [{"sha": "a4d7203c2b41a047ccb0c955677dc88d256872b5", "filename": ".gitignore", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87004db1137c9126ecc8834b1c881c2ef09ee8ef/.gitignore", "raw_url": "https://github.com/rust-lang/rust/raw/87004db1137c9126ecc8834b1c881c2ef09ee8ef/.gitignore", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.gitignore?ref=87004db1137c9126ecc8834b1c881c2ef09ee8ef", "patch": "@@ -74,8 +74,10 @@ src/.DS_Store\n /doc/html\n /doc/latex\n /doc/std\n+/doc/arena\n /doc/extra\n /doc/flate\n+/doc/glob\n /doc/green\n /doc/native\n /doc/rustc"}, {"sha": "d3270a96d803682a317ec6cbca01a3d4cc22fa73", "filename": "doc/index.md", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87004db1137c9126ecc8834b1c881c2ef09ee8ef/doc%2Findex.md", "raw_url": "https://github.com/rust-lang/rust/raw/87004db1137c9126ecc8834b1c881c2ef09ee8ef/doc%2Findex.md", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/doc%2Findex.md?ref=87004db1137c9126ecc8834b1c881c2ef09ee8ef", "patch": "@@ -37,7 +37,9 @@ li {list-style-type: none; }\n * [The Rust parser, `libsyntax`](syntax/index.html)\n * [The Rust compiler, `librustc`](rustc/index.html)\n \n+* [The `arena` allocation library](arena/index.html)\n * [The `flate` compression library](flate/index.html)\n+* [The `glob` file path matching library](glob/index.html)\n \n # Tooling\n "}, {"sha": "a8f14bab1e891f2bedf7a0b907672378a3e95958", "filename": "mk/crates.mk", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/87004db1137c9126ecc8834b1c881c2ef09ee8ef/mk%2Fcrates.mk", "raw_url": "https://github.com/rust-lang/rust/raw/87004db1137c9126ecc8834b1c881c2ef09ee8ef/mk%2Fcrates.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fcrates.mk?ref=87004db1137c9126ecc8834b1c881c2ef09ee8ef", "patch": "@@ -49,7 +49,7 @@\n # automatically generated for all stage/host/target combinations.\n ################################################################################\n \n-TARGET_CRATES := std extra green rustuv native flate\n+TARGET_CRATES := std extra green rustuv native flate arena glob\n HOST_CRATES := syntax rustc rustdoc rustpkg\n CRATES := $(TARGET_CRATES) $(HOST_CRATES)\n TOOLS := compiletest rustpkg rustdoc rustc\n@@ -60,10 +60,12 @@ DEPS_green := std\n DEPS_rustuv := std native:uv native:uv_support\n DEPS_native := std\n DEPS_syntax := std extra\n-DEPS_rustc := syntax native:rustllvm flate\n+DEPS_rustc := syntax native:rustllvm flate arena\n DEPS_rustdoc := rustc native:sundown\n DEPS_rustpkg := rustc\n DEPS_flate := std native:miniz\n+DEPS_arena := std extra\n+DEPS_glob := std\n \n TOOL_DEPS_compiletest := extra green rustuv\n TOOL_DEPS_rustpkg := rustpkg green rustuv"}, {"sha": "27dad55c42946a50b4b55361eb5fa01bc9a6b5d1", "filename": "src/libarena/lib.rs", "status": "renamed", "additions": 10, "deletions": 3, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Flibarena%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Flibarena%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibarena%2Flib.rs?ref=87004db1137c9126ecc8834b1c881c2ef09ee8ef", "patch": "@@ -15,10 +15,17 @@\n //! of individual objects while the arena itself is still alive. The benefit\n //! of an arena is very fast allocation; just a pointer bump.\n \n+#[crate_id = \"arena#0.10-pre\"];\n+#[crate_type = \"rlib\"];\n+#[crate_type = \"dylib\"];\n+#[license = \"MIT/ASL2\"];\n #[allow(missing_doc)];\n+#[feature(managed_boxes)];\n \n-use list::{List, Cons, Nil};\n-use list;\n+extern mod extra;\n+\n+use extra::list::{List, Cons, Nil};\n+use extra::list;\n \n use std::at_vec;\n use std::cast::{transmute, transmute_mut, transmute_mut_region};\n@@ -493,7 +500,7 @@ impl<T> Drop for TypedArena<T> {\n #[cfg(test)]\n mod test {\n     use super::{Arena, TypedArena};\n-    use test::BenchHarness;\n+    use extra::test::BenchHarness;\n \n     struct Point {\n         x: int,", "previous_filename": "src/libextra/arena.rs"}, {"sha": "bb89915dfd13563654442e932cd511f03ab46aa2", "filename": "src/libextra/lib.rs", "status": "modified", "additions": 0, "deletions": 2, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Flibextra%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Flibextra%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibextra%2Flib.rs?ref=87004db1137c9126ecc8834b1c881c2ef09ee8ef", "patch": "@@ -67,10 +67,8 @@ pub mod ebml;\n pub mod getopts;\n pub mod json;\n pub mod tempfile;\n-pub mod glob;\n pub mod term;\n pub mod time;\n-pub mod arena;\n pub mod base64;\n pub mod workcache;\n pub mod enum_set;"}, {"sha": "98bf5533210ee2535e2e072155a25db78bbc6aba", "filename": "src/libglob/lib.rs", "status": "renamed", "additions": 8, "deletions": 3, "changes": 11, "blob_url": "https://github.com/rust-lang/rust/blob/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Flibglob%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Flibglob%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibglob%2Flib.rs?ref=87004db1137c9126ecc8834b1c881c2ef09ee8ef", "patch": "@@ -23,6 +23,11 @@\n  * `glob`/`fnmatch` functions.\n  */\n \n+#[crate_id = \"glob#0.10-pre\"];\n+#[crate_type = \"rlib\"];\n+#[crate_type = \"dylib\"];\n+#[license = \"MIT/ASL2\"];\n+\n use std::{os, path};\n use std::io;\n use std::io::fs;\n@@ -53,7 +58,7 @@ pub struct Paths {\n /// `puppies.jpg` and `hamsters.gif`:\n ///\n /// ```rust\n-/// use extra::glob::glob;\n+/// use glob::glob;\n ///\n /// for path in glob(\"/media/pictures/*.jpg\") {\n ///     println!(\"{}\", path.display());\n@@ -297,7 +302,7 @@ impl Pattern {\n      * # Example\n      *\n      * ```rust\n-     * use extra::glob::Pattern;\n+     * use glob::Pattern;\n      *\n      * assert!(Pattern::new(\"c?t\").matches(\"cat\"));\n      * assert!(Pattern::new(\"k[!e]tteh\").matches(\"kitteh\"));\n@@ -537,7 +542,7 @@ impl MatchOptions {\n #[cfg(test)]\n mod test {\n     use std::os;\n-    use super::*;\n+    use super::{glob, Pattern, MatchOptions};\n \n     #[test]\n     fn test_absolute_pattern() {", "previous_filename": "src/libextra/glob.rs"}, {"sha": "c840faecb559bc3b0cd122c5631731427a4a52a1", "filename": "src/librustc/lib.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Flibrustc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Flibrustc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Flib.rs?ref=87004db1137c9126ecc8834b1c881c2ef09ee8ef", "patch": "@@ -31,6 +31,7 @@ This API is completely unstable and subject to change.\n \n extern mod extra;\n extern mod flate;\n+extern mod arena;\n extern mod syntax;\n \n use back::link;"}, {"sha": "44349cc892b13fcb9491f57e7466620f204f8793", "filename": "src/librustc/middle/trans/base.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fbase.rs?ref=87004db1137c9126ecc8834b1c881c2ef09ee8ef", "patch": "@@ -68,7 +68,7 @@ use util::common::indenter;\n use util::ppaux::{Repr, ty_to_str};\n use util::sha2::Sha256;\n \n-use extra::arena::TypedArena;\n+use arena::TypedArena;\n use extra::time;\n use std::c_str::ToCStr;\n use std::cell::{Cell, RefCell};"}, {"sha": "18a6727dee06966eb20af3f50a8410ab32858625", "filename": "src/librustc/middle/trans/common.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftrans%2Fcommon.rs?ref=87004db1137c9126ecc8834b1c881c2ef09ee8ef", "patch": "@@ -31,7 +31,7 @@ use middle::typeck;\n use util::ppaux::Repr;\n \n \n-use extra::arena::TypedArena;\n+use arena::TypedArena;\n use std::c_str::ToCStr;\n use std::cast::transmute;\n use std::cast;"}, {"sha": "dc57ad747ebd762a1ed9c082b2c5dc566e86cca8", "filename": "src/librustc/middle/typeck/variance.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fvariance.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fvariance.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Ftypeck%2Fvariance.rs?ref=87004db1137c9126ecc8834b1c881c2ef09ee8ef", "patch": "@@ -193,8 +193,8 @@ represents the \"variance transform\" as defined in the paper:\n */\n \n use std::hashmap::HashMap;\n-use extra::arena;\n-use extra::arena::Arena;\n+use arena;\n+use arena::Arena;\n use middle::ty;\n use std::vec;\n use syntax::ast;"}, {"sha": "5b0a90f280dc91667e19d94894aab93e028f62c6", "filename": "src/test/bench/shootout-binarytrees.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fbench%2Fshootout-binarytrees.rs?ref=87004db1137c9126ecc8834b1c881c2ef09ee8ef", "patch": "@@ -9,10 +9,11 @@\n // except according to those terms.\n \n extern mod extra;\n+extern mod arena;\n \n use std::iter::range_step;\n use extra::future::Future;\n-use extra::arena::TypedArena;\n+use arena::TypedArena;\n \n enum Tree<'a> {\n     Nil,"}, {"sha": "9e724d86df5eb0b5ddf30d1708b6e6da81bff0e2", "filename": "src/test/run-pass/glob-std.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Ftest%2Frun-pass%2Fglob-std.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Ftest%2Frun-pass%2Fglob-std.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fglob-std.rs?ref=87004db1137c9126ecc8834b1c881c2ef09ee8ef", "patch": "@@ -12,8 +12,9 @@\n // xfail-win32 TempDir may cause IoError on windows: #10462\n \n extern mod extra;\n+extern mod glob;\n \n-use extra::glob::glob;\n+use glob::glob;\n use extra::tempfile::TempDir;\n use std::unstable::finally::Finally;\n use std::{os, unstable};"}, {"sha": "3e26dc69a84f63a6e69ac952f9658546878c034e", "filename": "src/test/run-pass/placement-new-arena.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Ftest%2Frun-pass%2Fplacement-new-arena.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Ftest%2Frun-pass%2Fplacement-new-arena.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fplacement-new-arena.rs?ref=87004db1137c9126ecc8834b1c881c2ef09ee8ef", "patch": "@@ -10,8 +10,8 @@\n // option. This file may not be copied, modified, or distributed\n // except according to those terms.\n \n-extern mod extra;\n-use extra::arena::Arena;\n+extern mod arena;\n+use arena::Arena;\n \n pub fn main() {\n     let mut arena = Arena::new();"}, {"sha": "3b5893358bf1dc4a4b335110599c418530ca66b0", "filename": "src/test/run-pass/regions-mock-tcx.rs", "status": "modified", "additions": 2, "deletions": 3, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Ftest%2Frun-pass%2Fregions-mock-tcx.rs", "raw_url": "https://github.com/rust-lang/rust/raw/87004db1137c9126ecc8834b1c881c2ef09ee8ef/src%2Ftest%2Frun-pass%2Fregions-mock-tcx.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Frun-pass%2Fregions-mock-tcx.rs?ref=87004db1137c9126ecc8834b1c881c2ef09ee8ef", "patch": "@@ -16,10 +16,9 @@\n // - Multiple lifetime parameters\n // - Arenas\n \n-extern mod extra;\n+extern mod arena;\n \n-use extra::arena;\n-use extra::arena::Arena;\n+use arena::Arena;\n use std::hashmap::HashMap;\n use std::cast;\n use std::libc;"}]}