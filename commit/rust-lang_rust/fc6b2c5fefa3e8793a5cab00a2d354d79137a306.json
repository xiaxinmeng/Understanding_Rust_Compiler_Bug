{"sha": "fc6b2c5fefa3e8793a5cab00a2d354d79137a306", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjNmIyYzVmZWZhM2U4NzkzYTVjYWIwMGEyZDM1NGQ3OTEzN2EzMDY=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-05T06:03:47Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2018-05-05T06:03:47Z"}, "message": "Auto merge of #50423 - hberntsen:armv5te_unknown_linux_musl, r=alexcrichton\n\nAdd armv5te-unknown-linux-musl target\n\nThis PR adds the armv5te-unknown-linux-musl target. The following steps should let you produce a fully statically linked binary now:\n1. Running `./src/ci/docker/run.sh dist-armv5te-linux-musl`\n2. Changing the run.sh script to start bash instead of the build process and running the container\n3.\n   ```sh\n   export USER=root\n   export PATH=/checkout/obj/build/x86_64-unknown-linux-gnu/stage2/bin:/checkout/obj/build/x86_64-unknown-linux-gnu/stage0/bin:$PATH\n   ```\n4. Configuring Cargo\n   ```yaml\n   [target.armv5te-unknown-linux-musl]\n   linker = \"arm-linux-gnueabi-gcc\"\n   ```\n5. Building a project\n   ```sh\n   cargo new --bin hello\n   cd hello\n   cargo build --target=armv5te-unknown-linux-musl --release\n   ```", "tree": {"sha": "05a16a7a17c79c22117cbf76be085359955faa5d", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/05a16a7a17c79c22117cbf76be085359955faa5d"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc6b2c5fefa3e8793a5cab00a2d354d79137a306", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc6b2c5fefa3e8793a5cab00a2d354d79137a306", "html_url": "https://github.com/rust-lang/rust/commit/fc6b2c5fefa3e8793a5cab00a2d354d79137a306", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc6b2c5fefa3e8793a5cab00a2d354d79137a306/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5d6c757268434c55763b897a754cb2593d7af588", "url": "https://api.github.com/repos/rust-lang/rust/commits/5d6c757268434c55763b897a754cb2593d7af588", "html_url": "https://github.com/rust-lang/rust/commit/5d6c757268434c55763b897a754cb2593d7af588"}, {"sha": "235af75d15860503f4f358ce2ad7b806d1b7f514", "url": "https://api.github.com/repos/rust-lang/rust/commits/235af75d15860503f4f358ce2ad7b806d1b7f514", "html_url": "https://github.com/rust-lang/rust/commit/235af75d15860503f4f358ce2ad7b806d1b7f514"}], "stats": {"total": 52, "additions": 51, "deletions": 1}, "files": [{"sha": "3574b7d210a2d3b641931660eee488aad45f1068", "filename": "src/bootstrap/configure.py", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/fc6b2c5fefa3e8793a5cab00a2d354d79137a306/src%2Fbootstrap%2Fconfigure.py", "raw_url": "https://github.com/rust-lang/rust/raw/fc6b2c5fefa3e8793a5cab00a2d354d79137a306/src%2Fbootstrap%2Fconfigure.py", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fbootstrap%2Fconfigure.py?ref=fc6b2c5fefa3e8793a5cab00a2d354d79137a306", "patch": "@@ -120,6 +120,8 @@ def v(*args):\n   \"arm-unknown-linux-musleabi install directory\")\n v(\"musl-root-armhf\", \"target.arm-unknown-linux-musleabihf.musl-root\",\n   \"arm-unknown-linux-musleabihf install directory\")\n+v(\"musl-root-armv5te\", \"target.armv5te-unknown-linux-musleabi.musl-root\",\n+  \"armv5te-unknown-linux-musleabi install directory\")\n v(\"musl-root-armv7\", \"target.armv7-unknown-linux-musleabihf.musl-root\",\n   \"armv7-unknown-linux-musleabihf install directory\")\n v(\"musl-root-aarch64\", \"target.aarch64-unknown-linux-musl.musl-root\","}, {"sha": "b195decfcf57421f4df8e22bc938c15db52199a0", "filename": "src/ci/docker/dist-various-1/Dockerfile", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/fc6b2c5fefa3e8793a5cab00a2d354d79137a306/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "raw_url": "https://github.com/rust-lang/rust/raw/fc6b2c5fefa3e8793a5cab00a2d354d79137a306/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fci%2Fdocker%2Fdist-various-1%2FDockerfile?ref=fc6b2c5fefa3e8793a5cab00a2d354d79137a306", "patch": "@@ -43,6 +43,10 @@ ENV STAGING_DIR=/tmp\n \n COPY scripts/musl.sh /build\n RUN env \\\n+    CC=arm-linux-gnueabi-gcc CFLAGS=\"-march=armv5te -marm -mfloat-abi=soft\" \\\n+    CXX=arm-linux-gnueabi-g++ CXXFLAGS=\"-march=armv5te -marm -mfloat-abi=soft\" \\\n+    bash musl.sh armv5te && \\\n+    env \\\n     CC=arm-linux-gnueabi-gcc CFLAGS=\"-march=armv6 -marm\" \\\n     CXX=arm-linux-gnueabi-g++ CXXFLAGS=\"-march=armv6 -marm\" \\\n     bash musl.sh arm && \\\n@@ -84,6 +88,7 @@ ENV TARGETS=$TARGETS,mipsel-unknown-linux-musl\n ENV TARGETS=$TARGETS,arm-unknown-linux-musleabi\n ENV TARGETS=$TARGETS,arm-unknown-linux-musleabihf\n ENV TARGETS=$TARGETS,armv5te-unknown-linux-gnueabi\n+ENV TARGETS=$TARGETS,armv5te-unknown-linux-musleabi\n ENV TARGETS=$TARGETS,armv7-unknown-linux-musleabihf\n ENV TARGETS=$TARGETS,aarch64-unknown-linux-musl\n ENV TARGETS=$TARGETS,sparc64-unknown-linux-gnu\n@@ -100,9 +105,12 @@ ENV CC_mipsel_unknown_linux_musl=mipsel-openwrt-linux-gcc \\\n     CC_sparc64_unknown_linux_gnu=sparc64-linux-gnu-gcc \\\n     CC_x86_64_unknown_redox=x86_64-unknown-redox-gcc \\\n     CC_armv5te_unknown_linux_gnueabi=arm-linux-gnueabi-gcc \\\n-    CFLAGS_armv5te_unknown_linux_gnueabi=\"-march=armv5te -marm -mfloat-abi=soft\"\n+    CFLAGS_armv5te_unknown_linux_gnueabi=\"-march=armv5te -marm -mfloat-abi=soft\" \\\n+    CC_armv5te_unknown_linux_musleabi=arm-linux-gnueabi-gcc \\\n+    CFLAGS_armv5te_unknown_linux_musleabi=\"-march=armv5te -marm -mfloat-abi=soft\"\n \n ENV RUST_CONFIGURE_ARGS \\\n+      --musl-root-armv5te=/musl-armv5te \\\n       --musl-root-arm=/musl-arm \\\n       --musl-root-armhf=/musl-armhf \\\n       --musl-root-armv7=/musl-armv7 \\"}, {"sha": "2d4e95ab01d6f58bff6db92fb0b641af53340412", "filename": "src/librustc_target/spec/armv5te_unknown_linux_musleabi.rs", "status": "added", "additions": 38, "deletions": 0, "changes": 38, "blob_url": "https://github.com/rust-lang/rust/blob/fc6b2c5fefa3e8793a5cab00a2d354d79137a306/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_musleabi.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc6b2c5fefa3e8793a5cab00a2d354d79137a306/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_musleabi.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Farmv5te_unknown_linux_musleabi.rs?ref=fc6b2c5fefa3e8793a5cab00a2d354d79137a306", "patch": "@@ -0,0 +1,38 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+use spec::{LinkerFlavor, Target, TargetOptions, TargetResult};\n+\n+pub fn target() -> TargetResult {\n+    let base = super::linux_musl_base::opts();\n+    Ok(Target {\n+        // It's important we use \"gnueabihf\" and not \"musleabihf\" here. LLVM\n+        // uses it to determine the calling convention and float ABI, and LLVM\n+        // doesn't support the \"musleabihf\" value.\n+        llvm_target: \"armv5te-unknown-linux-gnueabi\".to_string(),\n+        target_endian: \"little\".to_string(),\n+        target_pointer_width: \"32\".to_string(),\n+        target_c_int_width: \"32\".to_string(),\n+        data_layout: \"e-m:e-p:32:32-i64:64-v128:64:128-a:0:32-n32-S64\".to_string(),\n+        arch: \"arm\".to_string(),\n+        target_os: \"linux\".to_string(),\n+        target_env: \"musl\".to_string(),\n+        target_vendor: \"unknown\".to_string(),\n+        linker_flavor: LinkerFlavor::Gcc,\n+\n+        options: TargetOptions {\n+            features: \"+soft-float,+strict-align\".to_string(),\n+            // Atomic operations provided by compiler-builtins\n+            max_atomic_width: Some(32),\n+            abi_blacklist: super::arm_base::abi_blacklist(),\n+            .. base\n+        }\n+    })\n+}"}, {"sha": "48e771e0aafab3c942cf8922825cc28cc4276be9", "filename": "src/librustc_target/spec/mod.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc6b2c5fefa3e8793a5cab00a2d354d79137a306/src%2Flibrustc_target%2Fspec%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc6b2c5fefa3e8793a5cab00a2d354d79137a306/src%2Flibrustc_target%2Fspec%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_target%2Fspec%2Fmod.rs?ref=fc6b2c5fefa3e8793a5cab00a2d354d79137a306", "patch": "@@ -283,6 +283,7 @@ supported_targets! {\n     (\"arm-unknown-linux-musleabihf\", arm_unknown_linux_musleabihf),\n     (\"armv4t-unknown-linux-gnueabi\", armv4t_unknown_linux_gnueabi),\n     (\"armv5te-unknown-linux-gnueabi\", armv5te_unknown_linux_gnueabi),\n+    (\"armv5te-unknown-linux-musleabi\", armv5te_unknown_linux_musleabi),\n     (\"armv7-unknown-linux-gnueabihf\", armv7_unknown_linux_gnueabihf),\n     (\"armv7-unknown-linux-musleabihf\", armv7_unknown_linux_musleabihf),\n     (\"aarch64-unknown-linux-gnu\", aarch64_unknown_linux_gnu),"}, {"sha": "6b548742fb36075cd2299a10dfc21a2bf01f00a4", "filename": "src/tools/build-manifest/src/main.rs", "status": "modified", "additions": 1, "deletions": 0, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/fc6b2c5fefa3e8793a5cab00a2d354d79137a306/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc6b2c5fefa3e8793a5cab00a2d354d79137a306/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftools%2Fbuild-manifest%2Fsrc%2Fmain.rs?ref=fc6b2c5fefa3e8793a5cab00a2d354d79137a306", "patch": "@@ -57,6 +57,7 @@ static TARGETS: &'static [&'static str] = &[\n     \"arm-unknown-linux-musleabi\",\n     \"arm-unknown-linux-musleabihf\",\n     \"armv5te-unknown-linux-gnueabi\",\n+    \"armv5te-unknown-linux-musleabi\",\n     \"armv7-apple-ios\",\n     \"armv7-linux-androideabi\",\n     \"armv7-unknown-cloudabi-eabihf\","}]}