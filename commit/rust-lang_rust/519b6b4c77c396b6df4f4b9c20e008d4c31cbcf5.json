{"sha": "519b6b4c77c396b6df4f4b9c20e008d4c31cbcf5", "node_id": "C_kwDOAAsO6NoAKDUxOWI2YjRjNzdjMzk2YjZkZjRmNGI5YzIwZTAwOGQ0YzMxY2JjZjU", "commit": {"author": {"name": "Yuki Okushi", "email": "jtitor@2k36.org", "date": "2022-05-17T10:01:34Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2022-05-17T10:01:34Z"}, "message": "Rollup merge of #97093 - pvdrz:migrate-maybe-recover-from-bad-type-plus, r=davidtwco\n\nMigrate `maybe_recover_from_bad_type_plus` diagnostic\n\nr? `@davidtwco`", "tree": {"sha": "7460dddd0365bc8e5ebd88e960f3c66a99aa7bae", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/7460dddd0365bc8e5ebd88e960f3c66a99aa7bae"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/519b6b4c77c396b6df4f4b9c20e008d4c31cbcf5", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJig3J+CRBK7hj4Ov3rIwAApgcIAH+YtYCRkD9DVC1qgXta4ipZ\n3JkvL2dc9pX43I2w93gHcg/UxbU2Q3yDlt86wGIVfgX9+k6zLqcuuP1FMxYYRF1u\njmjimC+DsbOmnpaTU6tAQumwpbu+QcpJ5JCMaD9fJ9HNrUkJOGVsBsZUQXkbKaEv\nwZn0D1ERiHhYhhriVQ8ljXyfJplmiKOW55SDQW7cHjZO0Opvqr6RqZlBOhYAQbdu\nV4GMTUQE68rZoJcKL4qFNvUeI34c7u9wILHe53i/oPrHn+uOV/yhsHMZ+koM87ih\njzLO1WdiZesIDyBmVXnNTRf6NPZ4lkIek9kCYm4tAN/C8rt4k/6pzr+oWZmhyrw=\n=Nx7D\n-----END PGP SIGNATURE-----\n", "payload": "tree 7460dddd0365bc8e5ebd88e960f3c66a99aa7bae\nparent 13ee094260700e3922c5b6bdba7487fa63707741\nparent 7cafefec4a3dc847d029f62893eb7b023ac6887d\nauthor Yuki Okushi <jtitor@2k36.org> 1652781694 +0900\ncommitter GitHub <noreply@github.com> 1652781694 +0900\n\nRollup merge of #97093 - pvdrz:migrate-maybe-recover-from-bad-type-plus, r=davidtwco\n\nMigrate `maybe_recover_from_bad_type_plus` diagnostic\n\nr? `@davidtwco`\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/519b6b4c77c396b6df4f4b9c20e008d4c31cbcf5", "html_url": "https://github.com/rust-lang/rust/commit/519b6b4c77c396b6df4f4b9c20e008d4c31cbcf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/519b6b4c77c396b6df4f4b9c20e008d4c31cbcf5/comments", "author": {"login": "JohnTitor", "id": 25030997, "node_id": "MDQ6VXNlcjI1MDMwOTk3", "avatar_url": "https://avatars.githubusercontent.com/u/25030997?v=4", "gravatar_id": "", "url": "https://api.github.com/users/JohnTitor", "html_url": "https://github.com/JohnTitor", "followers_url": "https://api.github.com/users/JohnTitor/followers", "following_url": "https://api.github.com/users/JohnTitor/following{/other_user}", "gists_url": "https://api.github.com/users/JohnTitor/gists{/gist_id}", "starred_url": "https://api.github.com/users/JohnTitor/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/JohnTitor/subscriptions", "organizations_url": "https://api.github.com/users/JohnTitor/orgs", "repos_url": "https://api.github.com/users/JohnTitor/repos", "events_url": "https://api.github.com/users/JohnTitor/events{/privacy}", "received_events_url": "https://api.github.com/users/JohnTitor/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "13ee094260700e3922c5b6bdba7487fa63707741", "url": "https://api.github.com/repos/rust-lang/rust/commits/13ee094260700e3922c5b6bdba7487fa63707741", "html_url": "https://github.com/rust-lang/rust/commit/13ee094260700e3922c5b6bdba7487fa63707741"}, {"sha": "7cafefec4a3dc847d029f62893eb7b023ac6887d", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cafefec4a3dc847d029f62893eb7b023ac6887d", "html_url": "https://github.com/rust-lang/rust/commit/7cafefec4a3dc847d029f62893eb7b023ac6887d"}], "stats": {"total": 79, "additions": 55, "deletions": 24}, "files": [{"sha": "c98989b23c1a5edde8a615e7066103bc490e6903", "filename": "compiler/rustc_error_messages/locales/en-US/parser.ftl", "status": "modified", "additions": 9, "deletions": 0, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/519b6b4c77c396b6df4f4b9c20e008d4c31cbcf5/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "raw_url": "https://github.com/rust-lang/rust/raw/519b6b4c77c396b6df4f4b9c20e008d4c31cbcf5/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_error_messages%2Flocales%2Fen-US%2Fparser.ftl?ref=519b6b4c77c396b6df4f4b9c20e008d4c31cbcf5", "patch": "@@ -5,3 +5,12 @@ parser-struct-literal-body-without-path =\n parser-maybe-report-ambiguous-plus =\n     ambiguous `+` in a type\n     .suggestion = use parentheses to disambiguate\n+\n+parser-maybe-recover-from-bad-type-plus =\n+    expected a path on the left-hand side of `+`, not `{$ty}`\n+\n+parser-add-paren = try adding parentheses\n+\n+parser-forgot-paren = perhaps you forgot parentheses?\n+\n+parser-expect-path = expected a path"}, {"sha": "3b2ce0de50915a57e2765fda165677da8caf3709", "filename": "compiler/rustc_parse/src/parser/diagnostics.rs", "status": "modified", "additions": 46, "deletions": 24, "changes": 70, "blob_url": "https://github.com/rust-lang/rust/blob/519b6b4c77c396b6df4f4b9c20e008d4c31cbcf5/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/519b6b4c77c396b6df4f4b9c20e008d4c31cbcf5/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_parse%2Fsrc%2Fparser%2Fdiagnostics.rs?ref=519b6b4c77c396b6df4f4b9c20e008d4c31cbcf5", "patch": "@@ -21,7 +21,7 @@ use rustc_errors::{pluralize, struct_span_err, Diagnostic, EmissionGuarantee, Er\n use rustc_errors::{\n     Applicability, DiagnosticBuilder, DiagnosticMessage, Handler, MultiSpan, PResult,\n };\n-use rustc_macros::SessionDiagnostic;\n+use rustc_macros::{SessionDiagnostic, SessionSubdiagnostic};\n use rustc_span::source_map::Spanned;\n use rustc_span::symbol::{kw, Ident};\n use rustc_span::{Span, SpanSnippetError, DUMMY_SP};\n@@ -252,6 +252,40 @@ struct AmbiguousPlus {\n     pub span: Span,\n }\n \n+#[derive(SessionDiagnostic)]\n+#[error(code = \"E0178\", slug = \"parser-maybe-recover-from-bad-type-plus\")]\n+struct BadTypePlus<'a> {\n+    pub ty: String,\n+    #[primary_span]\n+    pub span: Span,\n+    #[subdiagnostic]\n+    pub sub: BadTypePlusSub<'a>,\n+}\n+\n+#[derive(SessionSubdiagnostic, Clone, Copy)]\n+pub enum BadTypePlusSub<'a> {\n+    #[suggestion(\n+        slug = \"parser-add-paren\",\n+        code = \"{sum_with_parens}\",\n+        applicability = \"machine-applicable\"\n+    )]\n+    AddParen {\n+        sum_with_parens: &'a str,\n+        #[primary_span]\n+        span: Span,\n+    },\n+    #[label(slug = \"parser-forgot-paren\")]\n+    ForgotParen {\n+        #[primary_span]\n+        span: Span,\n+    },\n+    #[label(slug = \"parser-expect-path\")]\n+    ExpectPath {\n+        #[primary_span]\n+        span: Span,\n+    },\n+}\n+\n // SnapshotParser is used to create a snapshot of the parser\n // without causing duplicate errors being emitted when the `Parser`\n // is dropped.\n@@ -1255,17 +1289,11 @@ impl<'a> Parser<'a> {\n         let bounds = self.parse_generic_bounds(None)?;\n         let sum_span = ty.span.to(self.prev_token.span);\n \n-        let mut err = struct_span_err!(\n-            self.sess.span_diagnostic,\n-            sum_span,\n-            E0178,\n-            \"expected a path on the left-hand side of `+`, not `{}`\",\n-            pprust::ty_to_string(ty)\n-        );\n+        let sum_with_parens: String;\n \n-        match ty.kind {\n+        let sub = match ty.kind {\n             TyKind::Rptr(ref lifetime, ref mut_ty) => {\n-                let sum_with_parens = pprust::to_string(|s| {\n+                sum_with_parens = pprust::to_string(|s| {\n                     s.s.word(\"&\");\n                     s.print_opt_lifetime(lifetime);\n                     s.print_mutability(mut_ty.mutbl, false);\n@@ -1274,21 +1302,15 @@ impl<'a> Parser<'a> {\n                     s.print_type_bounds(\" +\", &bounds);\n                     s.pclose()\n                 });\n-                err.span_suggestion(\n-                    sum_span,\n-                    \"try adding parentheses\",\n-                    sum_with_parens,\n-                    Applicability::MachineApplicable,\n-                );\n-            }\n-            TyKind::Ptr(..) | TyKind::BareFn(..) => {\n-                err.span_label(sum_span, \"perhaps you forgot parentheses?\");\n-            }\n-            _ => {\n-                err.span_label(sum_span, \"expected a path\");\n+\n+                BadTypePlusSub::AddParen { sum_with_parens: &sum_with_parens, span: sum_span }\n             }\n-        }\n-        err.emit();\n+            TyKind::Ptr(..) | TyKind::BareFn(..) => BadTypePlusSub::ForgotParen { span: sum_span },\n+            _ => BadTypePlusSub::ExpectPath { span: sum_span },\n+        };\n+\n+        self.sess.emit_err(BadTypePlus { ty: pprust::ty_to_string(ty), span: sum_span, sub });\n+\n         Ok(())\n     }\n "}]}