{"sha": "82c088137abe2ed834433634f0f7641a601a21fd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjgyYzA4ODEzN2FiZTJlZDgzNDQzMzYzNGYwZjc2NDFhNjAxYTIxZmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-21T13:02:34Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-11-21T13:02:34Z"}, "message": "Remove import_resolutions\n\nIt's cheaper to re-query this info anyway", "tree": {"sha": "29951d3075c0c2c76489c96351fc7a44d8d32724", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/29951d3075c0c2c76489c96351fc7a44d8d32724"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/82c088137abe2ed834433634f0f7641a601a21fd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/82c088137abe2ed834433634f0f7641a601a21fd", "html_url": "https://github.com/rust-lang/rust/commit/82c088137abe2ed834433634f0f7641a601a21fd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/82c088137abe2ed834433634f0f7641a601a21fd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "031bc868293539714157e3d93cc338b011f5661d", "url": "https://api.github.com/repos/rust-lang/rust/commits/031bc868293539714157e3d93cc338b011f5661d", "html_url": "https://github.com/rust-lang/rust/commit/031bc868293539714157e3d93cc338b011f5661d"}], "stats": {"total": 5, "additions": 0, "deletions": 5}, "files": [{"sha": "d69cc6e4d256ae2c060b352fbb92352f8b557912", "filename": "crates/ra_analysis/src/descriptors/module/nameres.rs", "status": "modified", "additions": 0, "deletions": 5, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/82c088137abe2ed834433634f0f7641a601a21fd/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs", "raw_url": "https://github.com/rust-lang/rust/raw/82c088137abe2ed834433634f0f7641a601a21fd/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_analysis%2Fsrc%2Fdescriptors%2Fmodule%2Fnameres.rs?ref=82c088137abe2ed834433634f0f7641a601a21fd", "patch": "@@ -32,7 +32,6 @@ pub(crate) struct ItemMap {\n #[derive(Debug, Default, PartialEq, Eq, Clone)]\n pub(crate) struct ModuleScope {\n     pub(crate) items: FxHashMap<SmolStr, Resolution>,\n-    pub(crate) import_resolutions: FxHashMap<LocalSyntaxPtr, DefId>,\n }\n \n /// A set of items and imports declared inside a module, without relation to\n@@ -382,10 +381,6 @@ where\n                 },\n             };\n \n-            self.update(module_id, |items| {\n-                items.import_resolutions.insert(*ptr, def_id);\n-            });\n-\n             if !is_last {\n                 curr = match self.db.id_maps().def_loc(def_id) {\n                     DefLoc::Module { id, .. } => id,"}]}