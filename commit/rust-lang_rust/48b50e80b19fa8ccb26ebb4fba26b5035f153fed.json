{"sha": "48b50e80b19fa8ccb26ebb4fba26b5035f153fed", "node_id": "MDY6Q29tbWl0NzI0NzEyOjQ4YjUwZTgwYjE5ZmE4Y2NiMjZlYmI0ZmJhMjZiNTAzNWYxNTNmZWQ=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-15T05:20:34Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2019-07-15T05:20:34Z"}, "message": "Auto merge of #3418 - phansch:add_travis_windows_build, r=me,flip1995\n\nFix Travis Windows build\n\nCloses #3306", "tree": {"sha": "ef3f435095816ac8bb149b3f9cb6ea18ead8afcb", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ef3f435095816ac8bb149b3f9cb6ea18ead8afcb"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/48b50e80b19fa8ccb26ebb4fba26b5035f153fed", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/48b50e80b19fa8ccb26ebb4fba26b5035f153fed", "html_url": "https://github.com/rust-lang/rust/commit/48b50e80b19fa8ccb26ebb4fba26b5035f153fed", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/48b50e80b19fa8ccb26ebb4fba26b5035f153fed/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "36fb64639401d815f005dba1d437dd1a31c3a5e8", "url": "https://api.github.com/repos/rust-lang/rust/commits/36fb64639401d815f005dba1d437dd1a31c3a5e8", "html_url": "https://github.com/rust-lang/rust/commit/36fb64639401d815f005dba1d437dd1a31c3a5e8"}, {"sha": "ce2a7b0160ea8220249d73a386edd0ca85015f66", "url": "https://api.github.com/repos/rust-lang/rust/commits/ce2a7b0160ea8220249d73a386edd0ca85015f66", "html_url": "https://github.com/rust-lang/rust/commit/ce2a7b0160ea8220249d73a386edd0ca85015f66"}], "stats": {"total": 52, "additions": 32, "deletions": 20}, "files": [{"sha": "3f7c856a7f762ebb158d06a14c34333b58ee709d", "filename": ".travis.yml", "status": "modified", "additions": 7, "deletions": 6, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/48b50e80b19fa8ccb26ebb4fba26b5035f153fed/.travis.yml", "raw_url": "https://github.com/rust-lang/rust/raw/48b50e80b19fa8ccb26ebb4fba26b5035f153fed/.travis.yml", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/.travis.yml?ref=48b50e80b19fa8ccb26ebb4fba26b5035f153fed", "patch": "@@ -45,7 +45,7 @@ matrix:\n     - os: linux\n       env: BASE_TESTS=true\n     - os: windows\n-      env: CARGO_INCREMENTAL=0 BASE_TESTS=true\n+      env: CARGO_INCREMENTAL=0 BASE_TESTS=true OS_WINDOWS=true\n \n     # Builds that are only executed when a PR is r+ed or a try build is started\n     # We don't want to run these always because they go towards\n@@ -81,9 +81,6 @@ matrix:\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n     - env: INTEGRATION=chronotope/chrono\n       if: repo =~ /^rust-lang\\/rust-clippy$/ AND branch IN (auto, try)\n-  allow_failures:\n-  - os: windows\n-    env: CARGO_INCREMENTAL=0 BASE_TESTS=true\n # prevent these jobs with default env vars\n   exclude:\n     - os: linux\n@@ -94,7 +91,11 @@ script:\n   - |\n       rm rust-toolchain\n       ./setup-toolchain.sh\n-      export LD_LIBRARY_PATH=$(rustc --print sysroot)/lib\n+      if [ \"$TRAVIS_OS_NAME\" == \"windows\" ]; then\n+        export PATH=$PATH:$(rustc --print sysroot)/bin\n+      else\n+        export LD_LIBRARY_PATH=$(rustc --print sysroot)/lib\n+      fi\n   - |\n     if [ -z ${INTEGRATION} ]; then\n       travis_wait 30 ./ci/base-tests.sh && sleep 5\n@@ -104,7 +105,7 @@ script:\n \n after_success: |\n   #!/bin/bash\n-  if [ $(uname) == Linux ]; then\n+  if [ \"$TRAVIS_OS_NAME\" == \"linux\" ]; then\n     set -ex\n     if [ -z ${INTEGRATION} ]; then\n       ./.github/deploy.sh"}, {"sha": "a53a0ea52be62274e346d4660ae1ab0bf930241a", "filename": "ci/base-tests.sh", "status": "modified", "additions": 9, "deletions": 6, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/48b50e80b19fa8ccb26ebb4fba26b5035f153fed/ci%2Fbase-tests.sh", "raw_url": "https://github.com/rust-lang/rust/raw/48b50e80b19fa8ccb26ebb4fba26b5035f153fed/ci%2Fbase-tests.sh", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/ci%2Fbase-tests.sh?ref=48b50e80b19fa8ccb26ebb4fba26b5035f153fed", "patch": "@@ -27,17 +27,20 @@ export CARGO_TARGET_DIR=`pwd`/target/\n \n # Check running clippy-driver without cargo\n (\n-  export LD_LIBRARY_PATH=$(rustc --print sysroot)/lib\n-\n   # Check sysroot handling\n   sysroot=$(./target/debug/clippy-driver --print sysroot)\n   test $sysroot = $(rustc --print sysroot)\n \n-  sysroot=$(./target/debug/clippy-driver --sysroot /tmp --print sysroot)\n-  test $sysroot = /tmp\n+  if [ -z $OS_WINDOWS ]; then\n+    desired_sysroot=/tmp\n+  else\n+    desired_sysroot=C:/tmp\n+  fi\n+  sysroot=$(./target/debug/clippy-driver --sysroot $desired_sysroot --print sysroot)\n+  test $sysroot = $desired_sysroot\n \n-  sysroot=$(SYSROOT=/tmp ./target/debug/clippy-driver --print sysroot)\n-  test $sysroot = /tmp\n+  sysroot=$(SYSROOT=$desired_sysroot ./target/debug/clippy-driver --print sysroot)\n+  test $sysroot = $desired_sysroot\n \n   # Make sure this isn't set - clippy-driver should cope without it\n   unset CARGO_MANIFEST_DIR"}, {"sha": "545c43f9a45fedfdf2a91d0850003adf51415a8c", "filename": "src/driver.rs", "status": "modified", "additions": 14, "deletions": 6, "changes": 20, "blob_url": "https://github.com/rust-lang/rust/blob/48b50e80b19fa8ccb26ebb4fba26b5035f153fed/src%2Fdriver.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b50e80b19fa8ccb26ebb4fba26b5035f153fed/src%2Fdriver.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fdriver.rs?ref=48b50e80b19fa8ccb26ebb4fba26b5035f153fed", "patch": "@@ -12,7 +12,7 @@ extern crate rustc_plugin;\n use rustc_interface::interface;\n use rustc_tools_util::*;\n \n-use std::path::Path;\n+use std::path::{Path, PathBuf};\n use std::process::{exit, Command};\n \n mod lintlist;\n@@ -270,12 +270,19 @@ pub fn main() {\n             let sys_root_arg = arg_value(&orig_args, \"--sysroot\", |_| true);\n             let have_sys_root_arg = sys_root_arg.is_some();\n             let sys_root = sys_root_arg\n-                .map(std::string::ToString::to_string)\n-                .or_else(|| std::env::var(\"SYSROOT\").ok())\n+                .map(PathBuf::from)\n+                .or_else(|| std::env::var(\"SYSROOT\").ok().map(PathBuf::from))\n                 .or_else(|| {\n                     let home = option_env!(\"RUSTUP_HOME\").or(option_env!(\"MULTIRUST_HOME\"));\n                     let toolchain = option_env!(\"RUSTUP_TOOLCHAIN\").or(option_env!(\"MULTIRUST_TOOLCHAIN\"));\n-                    home.and_then(|home| toolchain.map(|toolchain| format!(\"{}/toolchains/{}\", home, toolchain)))\n+                    home.and_then(|home| {\n+                        toolchain.map(|toolchain| {\n+                            let mut path = PathBuf::from(home);\n+                            path.push(\"toolchains\");\n+                            path.push(toolchain);\n+                            path\n+                        })\n+                    })\n                 })\n                 .or_else(|| {\n                     Command::new(\"rustc\")\n@@ -284,9 +291,10 @@ pub fn main() {\n                         .output()\n                         .ok()\n                         .and_then(|out| String::from_utf8(out.stdout).ok())\n-                        .map(|s| s.trim().to_owned())\n+                        .map(|s| PathBuf::from(s.trim()))\n                 })\n-                .or_else(|| option_env!(\"SYSROOT\").map(String::from))\n+                .or_else(|| option_env!(\"SYSROOT\").map(PathBuf::from))\n+                .map(|pb| pb.to_string_lossy().to_string())\n                 .expect(\"need to specify SYSROOT env var during clippy compilation, or use rustup or multirust\");\n \n             // Setting RUSTC_WRAPPER causes Cargo to pass 'rustc' as the first argument."}, {"sha": "1f03ba3950abefc54fa62778e7d01035eb8af222", "filename": "tests/dogfood.rs", "status": "modified", "additions": 2, "deletions": 2, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/48b50e80b19fa8ccb26ebb4fba26b5035f153fed/tests%2Fdogfood.rs", "raw_url": "https://github.com/rust-lang/rust/raw/48b50e80b19fa8ccb26ebb4fba26b5035f153fed/tests%2Fdogfood.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fdogfood.rs?ref=48b50e80b19fa8ccb26ebb4fba26b5035f153fed", "patch": "@@ -1,6 +1,6 @@\n #[test]\n fn dogfood() {\n-    if option_env!(\"RUSTC_TEST_SUITE\").is_some() {\n+    if option_env!(\"RUSTC_TEST_SUITE\").is_some() || cfg!(windows) {\n         return;\n     }\n     let root_dir = std::path::PathBuf::from(env!(\"CARGO_MANIFEST_DIR\"));\n@@ -30,7 +30,7 @@ fn dogfood() {\n \n #[test]\n fn dogfood_tests() {\n-    if option_env!(\"RUSTC_TEST_SUITE\").is_some() {\n+    if option_env!(\"RUSTC_TEST_SUITE\").is_some() || cfg!(windows) {\n         return;\n     }\n     let root_dir = std::path::PathBuf::from(env!(\"CARGO_MANIFEST_DIR\"));"}]}