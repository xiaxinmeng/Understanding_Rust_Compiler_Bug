{"sha": "eddb479ad36841a858f186af81d4ac360d2a2058", "node_id": "C_kwDOAAsO6NoAKGVkZGI0NzlhZDM2ODQxYTg1OGYxODZhZjgxZDRhYzM2MGQyYTIwNTg", "commit": {"author": {"name": "Sky", "email": "sky@h4x5.dev", "date": "2023-01-07T19:16:59Z"}, "committer": {"name": "Sky", "email": "sky@h4x5.dev", "date": "2023-01-07T19:28:44Z"}, "message": "Don't derive Debug for `OnceWith` & `RepeatWith`", "tree": {"sha": "672e98ff06d339488a35af53cb56f60bb39428f8", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/672e98ff06d339488a35af53cb56f60bb39428f8"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/eddb479ad36841a858f186af81d4ac360d2a2058", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\niQIzBAABCAAdFiEEfrZt3T03GT4XOeDwy2U31q15ZJwFAmO5x+0ACgkQy2U31q15\nZJwuYhAAgNDl7ER8TtarUpg5RWQEZGPZiJIGHQ2cWouT/HytMT+S9cIIqjlh+DT6\nAoPbDPtcWw7AvuPv7paq4wJtSRG8SFzqsMVdZVFKBqZ9rqH0dTHkmIlxCXaJ+iwp\nf2ZC1mXgz92P1+WL1owIXjuWPwagB4r4hEUo8j6UA302/o9ggeEeZLCiHhyot7Pv\nHZ6Ss14Bi9CYdVAvbxkun6HbucqfZiFAEYC5CRsb1xwj9BUHampxx/iZhydeWR2N\nrgZZQEjvbMGKN2bsDZNINH9G/J9v1PQydgjeIPQqb+Shx7KWbcF72GPhA0GZuHCJ\n3MxhCYpIwV7sthuTHb8H+xr5BkuXwnAQKeu0WHPyOlZuw9b6b74NWDXLguzUDS81\n9l5LHzy4hs9g+p0RTM2deK61A3k/K/g5zVYPKcKJn/DTF1kd3j53S20lcruvZ6Zs\nUbEKqrbwabACpkqifF6jd+w+qlizaLZbt8URfc9S6oHA3b2sd1xxm/kAoecmdTGm\njALK3P5UKtmZNQXi7Z6M2nVmgg+LcimcmenXznzJtodk0w/sXndviPULW6iL97dT\nqch3+FZG5mtJP3cBQPX9ydHvqB/1Yahjf/AKEbRpePH24/EVenlz3F9M+Zoo7v+n\nZREU5wLcMFFq7/5jVk/60QhYV/4g1KpTJpdLzBXSSP8FrERnaxo=\n=RHbP\n-----END PGP SIGNATURE-----", "payload": "tree 672e98ff06d339488a35af53cb56f60bb39428f8\nparent 65c53c3bb6190319e210c94164b05a17997073f2\nauthor Sky <sky@h4x5.dev> 1673119019 -0500\ncommitter Sky <sky@h4x5.dev> 1673119724 -0500\n\nDon't derive Debug for `OnceWith` & `RepeatWith`\n\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/eddb479ad36841a858f186af81d4ac360d2a2058", "html_url": "https://github.com/rust-lang/rust/commit/eddb479ad36841a858f186af81d4ac360d2a2058", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/eddb479ad36841a858f186af81d4ac360d2a2058/comments", "author": {"login": "H4x5", "id": 28873682, "node_id": "MDQ6VXNlcjI4ODczNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/28873682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/H4x5", "html_url": "https://github.com/H4x5", "followers_url": "https://api.github.com/users/H4x5/followers", "following_url": "https://api.github.com/users/H4x5/following{/other_user}", "gists_url": "https://api.github.com/users/H4x5/gists{/gist_id}", "starred_url": "https://api.github.com/users/H4x5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/H4x5/subscriptions", "organizations_url": "https://api.github.com/users/H4x5/orgs", "repos_url": "https://api.github.com/users/H4x5/repos", "events_url": "https://api.github.com/users/H4x5/events{/privacy}", "received_events_url": "https://api.github.com/users/H4x5/received_events", "type": "User", "site_admin": false}, "committer": {"login": "H4x5", "id": 28873682, "node_id": "MDQ6VXNlcjI4ODczNjgy", "avatar_url": "https://avatars.githubusercontent.com/u/28873682?v=4", "gravatar_id": "", "url": "https://api.github.com/users/H4x5", "html_url": "https://github.com/H4x5", "followers_url": "https://api.github.com/users/H4x5/followers", "following_url": "https://api.github.com/users/H4x5/following{/other_user}", "gists_url": "https://api.github.com/users/H4x5/gists{/gist_id}", "starred_url": "https://api.github.com/users/H4x5/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/H4x5/subscriptions", "organizations_url": "https://api.github.com/users/H4x5/orgs", "repos_url": "https://api.github.com/users/H4x5/repos", "events_url": "https://api.github.com/users/H4x5/events{/privacy}", "received_events_url": "https://api.github.com/users/H4x5/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "65c53c3bb6190319e210c94164b05a17997073f2", "url": "https://api.github.com/repos/rust-lang/rust/commits/65c53c3bb6190319e210c94164b05a17997073f2", "html_url": "https://github.com/rust-lang/rust/commit/65c53c3bb6190319e210c94164b05a17997073f2"}], "stats": {"total": 24, "additions": 22, "deletions": 2}, "files": [{"sha": "080ae27a30fcf976dd3e483e8fe6b14d8f3f65e4", "filename": "library/core/src/iter/sources/once_with.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/eddb479ad36841a858f186af81d4ac360d2a2058/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fonce_with.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eddb479ad36841a858f186af81d4ac360d2a2058/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fonce_with.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Fonce_with.rs?ref=eddb479ad36841a858f186af81d4ac360d2a2058", "patch": "@@ -1,3 +1,4 @@\n+use crate::fmt;\n use crate::iter::{FusedIterator, TrustedLen};\n \n /// Creates an iterator that lazily generates a value exactly once by invoking\n@@ -66,12 +67,23 @@ pub fn once_with<A, F: FnOnce() -> A>(gen: F) -> OnceWith<F> {\n ///\n /// This `struct` is created by the [`once_with()`] function.\n /// See its documentation for more.\n-#[derive(Clone, Debug)]\n+#[derive(Clone)]\n #[stable(feature = \"iter_once_with\", since = \"1.43.0\")]\n pub struct OnceWith<F> {\n     gen: Option<F>,\n }\n \n+#[stable(feature = \"iter_once_with_debug\", since = \"CURRENT_RUSTC_VERSION\")]\n+impl<F> fmt::Debug for OnceWith<F> {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        if self.gen.is_some() {\n+            f.write_str(\"OnceWith(Some(_))\")\n+        } else {\n+            f.write_str(\"OnceWith(None)\")\n+        }\n+    }\n+}\n+\n #[stable(feature = \"iter_once_with\", since = \"1.43.0\")]\n impl<A, F: FnOnce() -> A> Iterator for OnceWith<F> {\n     type Item = A;"}, {"sha": "20420a3ad8e02a83df814e758b5cc9e8481f83a2", "filename": "library/core/src/iter/sources/repeat_with.rs", "status": "modified", "additions": 9, "deletions": 1, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/eddb479ad36841a858f186af81d4ac360d2a2058/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat_with.rs", "raw_url": "https://github.com/rust-lang/rust/raw/eddb479ad36841a858f186af81d4ac360d2a2058/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat_with.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fiter%2Fsources%2Frepeat_with.rs?ref=eddb479ad36841a858f186af81d4ac360d2a2058", "patch": "@@ -1,3 +1,4 @@\n+use crate::fmt;\n use crate::iter::{FusedIterator, TrustedLen};\n use crate::ops::Try;\n \n@@ -71,12 +72,19 @@ pub fn repeat_with<A, F: FnMut() -> A>(repeater: F) -> RepeatWith<F> {\n ///\n /// This `struct` is created by the [`repeat_with()`] function.\n /// See its documentation for more.\n-#[derive(Copy, Clone, Debug)]\n+#[derive(Copy, Clone)]\n #[stable(feature = \"iterator_repeat_with\", since = \"1.28.0\")]\n pub struct RepeatWith<F> {\n     repeater: F,\n }\n \n+#[stable(feature = \"iterator_repeat_with_debug\", since = \"CURRENT_RUSTC_VERSION\")]\n+impl<F> fmt::Debug for RepeatWith<F> {\n+    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {\n+        f.debug_struct(\"RepeatWith\").finish_non_exhaustive()\n+    }\n+}\n+\n #[stable(feature = \"iterator_repeat_with\", since = \"1.28.0\")]\n impl<A, F: FnMut() -> A> Iterator for RepeatWith<F> {\n     type Item = A;"}]}