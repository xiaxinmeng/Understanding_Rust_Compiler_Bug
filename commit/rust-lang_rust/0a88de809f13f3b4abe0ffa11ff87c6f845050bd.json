{"sha": "0a88de809f13f3b4abe0ffa11ff87c6f845050bd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjBhODhkZTgwOWYxM2YzYjRhYmUwZmZhMTFmZjg3YzZmODQ1MDUwYmQ=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-03T09:44:51Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2020-06-03T10:04:27Z"}, "message": "Move project discovery", "tree": {"sha": "3f9eaaf517b4c11974b20b6eda2211f68af7e197", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/3f9eaaf517b4c11974b20b6eda2211f68af7e197"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0a88de809f13f3b4abe0ffa11ff87c6f845050bd", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0a88de809f13f3b4abe0ffa11ff87c6f845050bd", "html_url": "https://github.com/rust-lang/rust/commit/0a88de809f13f3b4abe0ffa11ff87c6f845050bd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0a88de809f13f3b4abe0ffa11ff87c6f845050bd/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "992e1256d05d1ec046e284e597b2932e50ccff49", "url": "https://api.github.com/repos/rust-lang/rust/commits/992e1256d05d1ec046e284e597b2932e50ccff49", "html_url": "https://github.com/rust-lang/rust/commit/992e1256d05d1ec046e284e597b2932e50ccff49"}], "stats": {"total": 24, "additions": 16, "deletions": 8}, "files": [{"sha": "d5f82f17a9b63a485560d99310d70253c6f791f8", "filename": "crates/ra_project_model/src/lib.rs", "status": "modified", "additions": 14, "deletions": 2, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/0a88de809f13f3b4abe0ffa11ff87c6f845050bd/crates%2Fra_project_model%2Fsrc%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a88de809f13f3b4abe0ffa11ff87c6f845050bd/crates%2Fra_project_model%2Fsrc%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fra_project_model%2Fsrc%2Flib.rs?ref=0a88de809f13f3b4abe0ffa11ff87c6f845050bd", "patch": "@@ -14,7 +14,7 @@ use std::{\n use anyhow::{bail, Context, Result};\n use ra_cfg::CfgOptions;\n use ra_db::{CrateGraph, CrateName, Edition, Env, ExternSource, ExternSourceId, FileId};\n-use rustc_hash::FxHashMap;\n+use rustc_hash::{FxHashMap, FxHashSet};\n use serde_json::from_reader;\n \n pub use crate::{\n@@ -57,7 +57,7 @@ impl PackageRoot {\n     }\n }\n \n-#[derive(Debug, Clone, PartialEq, Eq, Hash)]\n+#[derive(Debug, Clone, PartialEq, Eq, Hash, Ord, PartialOrd)]\n pub enum ProjectRoot {\n     ProjectJson(PathBuf),\n     CargoToml(PathBuf),\n@@ -128,6 +128,18 @@ impl ProjectRoot {\n                 .collect()\n         }\n     }\n+\n+    pub fn discover_all(paths: &[impl AsRef<Path>]) -> Vec<ProjectRoot> {\n+        let mut res = paths\n+            .iter()\n+            .filter_map(|it| ProjectRoot::discover(it.as_ref()).ok())\n+            .flatten()\n+            .collect::<FxHashSet<_>>()\n+            .into_iter()\n+            .collect::<Vec<_>>();\n+        res.sort();\n+        res\n+    }\n }\n \n impl ProjectWorkspace {"}, {"sha": "82348c6fc06853d3dfd2368253055ac4899f3b36", "filename": "crates/rust-analyzer/src/main_loop.rs", "status": "modified", "additions": 2, "deletions": 6, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/0a88de809f13f3b4abe0ffa11ff87c6f845050bd/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0a88de809f13f3b4abe0ffa11ff87c6f845050bd/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Frust-analyzer%2Fsrc%2Fmain_loop.rs?ref=0a88de809f13f3b4abe0ffa11ff87c6f845050bd", "patch": "@@ -28,7 +28,7 @@ use lsp_types::{\n use ra_flycheck::{CheckTask, Status};\n use ra_ide::{Canceled, FileId, LibraryData, LineIndex, SourceRootId};\n use ra_prof::profile;\n-use ra_project_model::{PackageRoot, ProjectWorkspace};\n+use ra_project_model::{PackageRoot, ProjectRoot, ProjectWorkspace};\n use ra_vfs::{VfsFile, VfsTask, Watch};\n use relative_path::RelativePathBuf;\n use rustc_hash::FxHashSet;\n@@ -96,11 +96,7 @@ pub fn main_loop(ws_roots: Vec<PathBuf>, config: Config, connection: Connection)\n     let mut global_state = {\n         let workspaces = {\n             // FIXME: support dynamic workspace loading.\n-            let project_roots: FxHashSet<_> = ws_roots\n-                .iter()\n-                .filter_map(|it| ra_project_model::ProjectRoot::discover(it).ok())\n-                .flatten()\n-                .collect();\n+            let project_roots = ProjectRoot::discover_all(&ws_roots);\n \n             if project_roots.is_empty() && config.notifications.cargo_toml_not_found {\n                 show_message("}]}