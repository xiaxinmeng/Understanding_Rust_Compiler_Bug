{"sha": "63ef53f21d326feb3b244772c452f5ac2632ef6c", "node_id": "MDY6Q29tbWl0NzI0NzEyOjYzZWY1M2YyMWQzMjZmZWIzYjI0NDc3MmM0NTJmNWFjMjYzMmVmNmM=", "commit": {"author": {"name": "est31", "email": "MTest31@outlook.com", "date": "2018-05-12T07:52:20Z"}, "committer": {"name": "est31", "email": "MTest31@outlook.com", "date": "2018-05-16T11:56:24Z"}, "message": "Add E0695 for unlabeled breaks", "tree": {"sha": "facbe840bf1e48f853cff3b03f3b3d90c8acd74a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/facbe840bf1e48f853cff3b03f3b3d90c8acd74a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/63ef53f21d326feb3b244772c452f5ac2632ef6c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/63ef53f21d326feb3b244772c452f5ac2632ef6c", "html_url": "https://github.com/rust-lang/rust/commit/63ef53f21d326feb3b244772c452f5ac2632ef6c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/63ef53f21d326feb3b244772c452f5ac2632ef6c/comments", "author": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "committer": {"login": "est31", "id": 8872119, "node_id": "MDQ6VXNlcjg4NzIxMTk=", "avatar_url": "https://avatars.githubusercontent.com/u/8872119?v=4", "gravatar_id": "", "url": "https://api.github.com/users/est31", "html_url": "https://github.com/est31", "followers_url": "https://api.github.com/users/est31/followers", "following_url": "https://api.github.com/users/est31/following{/other_user}", "gists_url": "https://api.github.com/users/est31/gists{/gist_id}", "starred_url": "https://api.github.com/users/est31/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/est31/subscriptions", "organizations_url": "https://api.github.com/users/est31/orgs", "repos_url": "https://api.github.com/users/est31/repos", "events_url": "https://api.github.com/users/est31/events{/privacy}", "received_events_url": "https://api.github.com/users/est31/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5665980ad8d2399895ae141985f6776ab45c9ee5", "url": "https://api.github.com/repos/rust-lang/rust/commits/5665980ad8d2399895ae141985f6776ab45c9ee5", "html_url": "https://github.com/rust-lang/rust/commit/5665980ad8d2399895ae141985f6776ab45c9ee5"}], "stats": {"total": 87, "additions": 87, "deletions": 0}, "files": [{"sha": "4434def85ba727614324af6bcce0f32af045b94a", "filename": "src/librustc_passes/diagnostics.rs", "status": "modified", "additions": 37, "deletions": 0, "changes": 37, "blob_url": "https://github.com/rust-lang/rust/blob/63ef53f21d326feb3b244772c452f5ac2632ef6c/src%2Flibrustc_passes%2Fdiagnostics.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63ef53f21d326feb3b244772c452f5ac2632ef6c/src%2Flibrustc_passes%2Fdiagnostics.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Fdiagnostics.rs?ref=63ef53f21d326feb3b244772c452f5ac2632ef6c", "patch": "@@ -259,6 +259,43 @@ let result = loop { // ok!\n     i += 1;\n };\n ```\n+\"##,\n+\n+E0695: r##\"\n+A `break` statement without a label appeared inside a labeled block.\n+\n+Example of erroneous code:\n+\n+```compile_fail,E0695\n+# #![feature(label_break_value)]\n+loop {\n+    'a: {\n+        break;\n+    }\n+}\n+```\n+\n+Make sure to always label the `break`:\n+\n+```\n+'l: loop {\n+    'a: {\n+        break 'l;\n+    }\n+}\n+```\n+\n+Or if you want to `break` the labeled block:\n+\n+```\n+# #![feature(label_break_value)]\n+loop {\n+    'a: {\n+        break 'a;\n+    }\n+    break;\n+}\n+```\n \"##\n }\n "}, {"sha": "2d240a7cf2fa8aad1bca8b4087d989d0426e32e9", "filename": "src/librustc_passes/loops.rs", "status": "modified", "additions": 8, "deletions": 0, "changes": 8, "blob_url": "https://github.com/rust-lang/rust/blob/63ef53f21d326feb3b244772c452f5ac2632ef6c/src%2Flibrustc_passes%2Floops.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63ef53f21d326feb3b244772c452f5ac2632ef6c/src%2Flibrustc_passes%2Floops.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_passes%2Floops.rs?ref=63ef53f21d326feb3b244772c452f5ac2632ef6c", "patch": "@@ -109,6 +109,14 @@ impl<'a, 'hir> Visitor<'hir> for CheckLoopVisitor<'a, 'hir> {\n                 }\n \n                 if self.cx == LabeledBlock {\n+                    if label.label.is_none() {\n+                        struct_span_err!(self.sess, e.span, E0695,\n+                                        \"unlabeled `break` inside of a labeled block\")\n+                            .span_label(e.span,\n+                                        \"`break` statements that would diverge to or through \\\n+                                        a labeled block need to bear a label\")\n+                            .emit();\n+                    }\n                     return;\n                 }\n "}, {"sha": "b88c23d246e3a6f078112149229f2ab2bafb2ea6", "filename": "src/test/ui/label_break_value_unlabeled_break.rs", "status": "added", "additions": 27, "deletions": 0, "changes": 27, "blob_url": "https://github.com/rust-lang/rust/blob/63ef53f21d326feb3b244772c452f5ac2632ef6c/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.rs", "raw_url": "https://github.com/rust-lang/rust/raw/63ef53f21d326feb3b244772c452f5ac2632ef6c/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.rs?ref=63ef53f21d326feb3b244772c452f5ac2632ef6c", "patch": "@@ -0,0 +1,27 @@\n+// Copyright 2018 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+// Simple unlabeled break should yield in an error\n+fn unlabeled_break_simple() {\n+    'b: {\n+        break; //~ ERROR unlabeled `break` inside of a labeled block\n+    }\n+}\n+\n+// Unlabeled break that would cross a labeled block should yield in an error\n+fn unlabeled_break_crossing() {\n+    loop {\n+        'b: {\n+            break; //~ ERROR unlabeled `break` inside of a labeled block\n+        }\n+    }\n+}\n+\n+pub fn main() {}"}, {"sha": "24b2f19075711d2adca15997965c66d1f9fd75f9", "filename": "src/test/ui/label_break_value_unlabeled_break.stderr", "status": "added", "additions": 15, "deletions": 0, "changes": 15, "blob_url": "https://github.com/rust-lang/rust/blob/63ef53f21d326feb3b244772c452f5ac2632ef6c/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/63ef53f21d326feb3b244772c452f5ac2632ef6c/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flabel_break_value_unlabeled_break.stderr?ref=63ef53f21d326feb3b244772c452f5ac2632ef6c", "patch": "@@ -0,0 +1,15 @@\n+error[E0695]: unlabeled `break` inside of a labeled block\n+  --> $DIR/label_break_value_unlabeled_break.rs:14:9\n+   |\n+LL |         break; //~ ERROR unlabeled `break` inside of a labeled block\n+   |         ^^^^^ `break` statements that would diverge to or through a labeled block need to bear a label\n+\n+error[E0695]: unlabeled `break` inside of a labeled block\n+  --> $DIR/label_break_value_unlabeled_break.rs:22:13\n+   |\n+LL |             break; //~ ERROR unlabeled `break` inside of a labeled block\n+   |             ^^^^^ `break` statements that would diverge to or through a labeled block need to bear a label\n+\n+error: aborting due to 2 previous errors\n+\n+For more information about this error, try `rustc --explain E0695`."}]}