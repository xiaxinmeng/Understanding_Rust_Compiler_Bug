{"sha": "8d7f7c2a9773484968dce12cd844f7eded25ed4a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjhkN2Y3YzJhOTc3MzQ4NDk2OGRjZTEyY2Q4NDRmN2VkZWQyNWVkNGE=", "commit": {"author": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-14T18:49:18Z"}, "committer": {"name": "Rafael \u00c1vila de Esp\u00edndola", "email": "respindola@mozilla.com", "date": "2011-06-14T18:49:18Z"}, "message": "Move a bit more to use the driver.", "tree": {"sha": "f5beacfd9f13a9b662149930fefdafff813fdd74", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/f5beacfd9f13a9b662149930fefdafff813fdd74"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/8d7f7c2a9773484968dce12cd844f7eded25ed4a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/8d7f7c2a9773484968dce12cd844f7eded25ed4a", "html_url": "https://github.com/rust-lang/rust/commit/8d7f7c2a9773484968dce12cd844f7eded25ed4a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/8d7f7c2a9773484968dce12cd844f7eded25ed4a/comments", "author": null, "committer": null, "parents": [{"sha": "9ae843ab1c77b9c5cca03b452d5926a0fccf3197", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ae843ab1c77b9c5cca03b452d5926a0fccf3197", "html_url": "https://github.com/rust-lang/rust/commit/9ae843ab1c77b9c5cca03b452d5926a0fccf3197"}], "stats": {"total": 39, "additions": 12, "deletions": 27}, "files": [{"sha": "70d3f26d30948758bcba57ba672dbf7a598937e5", "filename": "mk/stage3.mk", "status": "modified", "additions": 6, "deletions": 10, "changes": 16, "blob_url": "https://github.com/rust-lang/rust/blob/8d7f7c2a9773484968dce12cd844f7eded25ed4a/mk%2Fstage3.mk", "raw_url": "https://github.com/rust-lang/rust/raw/8d7f7c2a9773484968dce12cd844f7eded25ed4a/mk%2Fstage3.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Fstage3.mk?ref=8d7f7c2a9773484968dce12cd844f7eded25ed4a", "patch": "@@ -4,19 +4,19 @@ stage3/std.o: $(STDLIB_CRATE) $(STDLIB_INPUTS) \\\n \t@$(call E, compile: $@)\n \t$(STAGE2) -c --shared -o $@ $<\n \n-stage3/$(CFG_STDLIB): stage3/std.o stage3/glue.o\n+stage3/$(CFG_STDLIB): stage2/std.o stage2/glue.o\n \t@$(call E, link: $@)\n-\t$(Q)gcc $(CFG_GCCISH_CFLAGS) stage3/glue.o $(CFG_GCCISH_LINK_FLAGS) -o \\\n-        $@ $< -Lstage3 -Lrt -lrustrt\n+\t$(Q)gcc $(CFG_GCCISH_CFLAGS) stage2/glue.o $(CFG_GCCISH_LINK_FLAGS) -o \\\n+        $@ $< -Lstage2 -Lrt -lrustrt\n \n stage3/librustc.o: $(COMPILER_CRATE) $(COMPILER_INPUTS) $(SREQ2)\n \t@$(call E, compile: $@)\n \t$(STAGE2) -c --shared -o $@ $<\n \n-stage3/$(CFG_RUSTCLIB): stage3/librustc.o stage3/glue.o\n+stage3/$(CFG_RUSTCLIB): stage2/librustc.o stage2/glue.o\n \t@$(call E, link: $@)\n-\t$(Q)gcc $(CFG_GCCISH_CFLAGS) stage3/glue.o $(CFG_GCCISH_LINK_FLAGS) \\\n-\t-o $@ $< -Lstage3 -Lrustllvm -Lrt -lrustrt -lrustllvm -lstd\n+\t$(Q)gcc $(CFG_GCCISH_CFLAGS) stage2/glue.o $(CFG_GCCISH_LINK_FLAGS) \\\n+\t-o $@ $< -Lstage2 -Lrustllvm -Lrt -lrustrt -lrustllvm -lstd\n \n stage3/glue.o: stage2/rustc$(X) stage2/$(CFG_STDLIB) stage2/intrinsics.bc \\\n                rustllvm/$(CFG_RUSTLLVM) rt/$(CFG_RUNTIME)\n@@ -40,7 +40,3 @@ stage3/%.o: stage3/%.s\n stage3/%$(X): $(COMPILER_CRATE) $(COMPILER_INPUTS) $(SREQ2)\n \t@$(call E, compile_and_link: $@)\n \t$(STAGE2) -o $@ $<\n-\t@# dsymutil sometimes fails or prints a warning, but the\n-\t@# program still runs.  Since it simplifies debugging other\n-\t@# programs, I\\'ll live with the noise.\n-\t-$(Q)$(CFG_DSYMUTIL) $@"}, {"sha": "bdf175f2bdab99ae0c049f0057f73a3459c14a7a", "filename": "mk/tests.mk", "status": "modified", "additions": 6, "deletions": 17, "changes": 23, "blob_url": "https://github.com/rust-lang/rust/blob/8d7f7c2a9773484968dce12cd844f7eded25ed4a/mk%2Ftests.mk", "raw_url": "https://github.com/rust-lang/rust/raw/8d7f7c2a9773484968dce12cd844f7eded25ed4a/mk%2Ftests.mk", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/mk%2Ftests.mk?ref=8d7f7c2a9773484968dce12cd844f7eded25ed4a", "patch": "@@ -200,15 +200,13 @@ compile-check: tidy \\\n \t@# programs, I\\'ll live with the noise.\n \t-$(Q)$(CFG_DSYMUTIL) $@\n \n-%.stage2$(X): %.stage2.o $(SREQ2)\n-\t@$(call E, link [gcc]: $@)\n-\t$(Q)gcc $(CFG_GCCISH_CFLAGS) stage3/glue.o -o $@ $< \\\n-      -Lstage3 -Lrt rt/main.o -lrustrt -lstd -lm\n-\t@# dsymutil sometimes fails or prints a warning, but the\n-\t@# program still runs.  Since it simplifies debugging other\n-\t@# programs, I\\'ll live with the noise.\n-\t-$(Q)$(CFG_DSYMUTIL) $@\n+%.stage2$(X): %.rs $(SREQ2)\n+\t@$(call E, compile_and_link: $@)\n+\t$(STAGE2) -o $@ $<\n \n+%.stage2$(X): %.rc $(SREQ2)\n+\t@$(call E, compile_and_link: $@)\n+\t$(STAGE2) -o $@ $<\n \n %.stage0.o: %.rc $(SREQ0)\n \t@$(call E, compile [stage0]: $@)\n@@ -227,15 +225,6 @@ compile-check: tidy \\\n \t@$(call E, compile [stage1]: $@)\n \t$(STAGE1) -c -o $@ $<\n \n-\n-%.stage2.o: %.rc $(SREQ2)\n-\t@$(call E, compile [stage2]: $@)\n-\t$(STAGE2) -c -o $@ $<\n-\n-%.stage2.o: %.rs $(SREQ2)\n-\t@$(call E, compile [stage2]: $@)\n-\t$(STAGE2) -c -o $@ $<\n-\n # Cancel the implicit .out rule in GNU make.\n %.out: %\n "}]}