{"sha": "77f40223033bf0c744eb8b4edb07672c13a21557", "node_id": "MDY6Q29tbWl0NzI0NzEyOjc3ZjQwMjIzMDMzYmYwYzc0NGViOGI0ZWRiMDc2NzJjMTNhMjE1NTc=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-07-02T10:49:30Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-07-02T10:49:30Z"}, "message": "Revert \"Change error count messages\"\n\nThis reverts commit 5558c64f33446225739c1153b43d2e309bb4f50e.", "tree": {"sha": "c7d442ddf6db4111770a114c00c4b23ccdcee0d3", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c7d442ddf6db4111770a114c00c4b23ccdcee0d3"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/77f40223033bf0c744eb8b4edb07672c13a21557", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/77f40223033bf0c744eb8b4edb07672c13a21557", "html_url": "https://github.com/rust-lang/rust/commit/77f40223033bf0c744eb8b4edb07672c13a21557", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/77f40223033bf0c744eb8b4edb07672c13a21557/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "a5d34e1d035e5441fb5b3d56d5205d038538f053", "url": "https://api.github.com/repos/rust-lang/rust/commits/a5d34e1d035e5441fb5b3d56d5205d038538f053", "html_url": "https://github.com/rust-lang/rust/commit/a5d34e1d035e5441fb5b3d56d5205d038538f053"}], "stats": {"total": 500, "additions": 252, "deletions": 248}, "files": [{"sha": "061e21fadebd62ab8b0d189d9dbd03cd31bf417a", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -113,7 +113,8 @@ const BUG_REPORT_URL: &'static str = \"https://github.com/rust-lang/rust/blob/mas\n fn abort_msg(err_count: usize) -> String {\n     match err_count {\n         0 => \"aborting with no errors (maybe a bug?)\".to_owned(),\n-        _ => \"aborting due to previous error(s)\".to_owned(),\n+        1 => \"aborting due to previous error\".to_owned(),\n+        e => format!(\"aborting due to {} previous errors\", e),\n     }\n }\n "}, {"sha": "dd25f96941401f868d69e8502db9d9df14a34aa5", "filename": "src/librustc_errors/lib.rs", "status": "modified", "additions": 4, "deletions": 1, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Flibrustc_errors%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Flibrustc_errors%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_errors%2Flib.rs?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -506,7 +506,10 @@ impl Handler {\n \n                 return;\n             }\n-            _ => s = \"aborting due to previous error(s)\".to_string(),\n+            1 => s = \"aborting due to previous error\".to_string(),\n+            _ => {\n+                s = format!(\"aborting due to {} previous errors\", self.err_count.get());\n+            }\n         }\n \n         panic!(self.fatal(&s));"}, {"sha": "6083a82b1b6de29eb926114b8b6a37a58b31884c", "filename": "src/test/ui/borrowck/borrowck-in-static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-in-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-in-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Fborrowck-in-static.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0507]: cannot move out of captured outer variable in an `Fn` closure\n 15 |     Box::new(|| x) //~ ERROR cannot move out of captured outer variable\n    |                 ^ cannot move out of captured outer variable in an `Fn` closure\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "dbfcb2e0c2f95fbef0c71d52e7ed596c37c334eb", "filename": "src/test/ui/borrowck/unboxed-closures-move-upvar-from-non-once-ref-closure.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fborrowck%2Funboxed-closures-move-upvar-from-non-once-ref-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fborrowck%2Funboxed-closures-move-upvar-from-non-once-ref-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fborrowck%2Funboxed-closures-move-upvar-from-non-once-ref-closure.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0507]: cannot move out of captured outer variable in an `Fn` closure\n 21 |         y.into_iter();\n    |         ^ cannot move out of captured outer variable in an `Fn` closure\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "0aafe3f17b3d0f6310b30d10baedc9eb00d19cef", "filename": "src/test/ui/check_match/issue-35609.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcheck_match%2Fissue-35609.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcheck_match%2Fissue-35609.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcheck_match%2Fissue-35609.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -46,5 +46,5 @@ error[E0004]: non-exhaustive patterns: `Some(B)`, `Some(C)`, `Some(D)` and 2 mor\n 49 |     match Some(A) {\n    |           ^^^^^^^ patterns `Some(B)`, `Some(C)`, `Some(D)` and 2 more not covered\n \n-error: aborting due to previous error(s)\n+error: aborting due to 8 previous errors\n "}, {"sha": "c195940ade6fa931275e620ca43d705acba29257", "filename": "src/test/ui/closure_context/issue-42065.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fclosure_context%2Fissue-42065.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fclosure_context%2Fissue-42065.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fclosure_context%2Fissue-42065.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -12,5 +12,5 @@ note: closure cannot be invoked more than once because it moves the variable `di\n 16 |         for (key, value) in dict {\n    |                             ^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "87255dfe7747673b7be9b215df55da55c16fb64c", "filename": "src/test/ui/codemap_tests/bad-format-args.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fbad-format-args.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -22,5 +22,5 @@ error: expected token: `,`\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "7f1ab929c6fc2b32fcbd4e0a18cd4341d08da5e8", "filename": "src/test/ui/codemap_tests/coherence-overlapping-inherent-impl-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Fcoherence-overlapping-inherent-impl-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Fcoherence-overlapping-inherent-impl-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fcoherence-overlapping-inherent-impl-trait.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0592]: duplicate definitions with name `f`\n 15 | impl C { fn f() {} }\n    |          --------- other definition for `f`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "b33dee6b4a472ed04086888a61d93accf8f11e91", "filename": "src/test/ui/codemap_tests/empty_span.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Fempty_span.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Fempty_span.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fempty_span.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0321]: cross-crate traits with a default impl, like `std::marker::Send`,\n 17 |     unsafe impl Send for &'static Foo { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "914db98c7844648ddb36924874144a3d70263a61", "filename": "src/test/ui/codemap_tests/huge_multispan_highlight.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Fhuge_multispan_highlight.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Fhuge_multispan_highlight.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fhuge_multispan_highlight.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0596]: cannot borrow immutable local variable `x` as mutable\n 100 |     let y = &mut x;\n     |                  ^ cannot borrow mutably\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "4947cbedd200e45ec424e508881480505c313b57", "filename": "src/test/ui/codemap_tests/issue-11715.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-11715.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-11715.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-11715.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -8,5 +8,5 @@ error[E0499]: cannot borrow `x` as mutable more than once at a time\n 101 | }\n     | - first borrow ends here\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "7a1478104fdf1402367aa61eab645c9802c656de", "filename": "src/test/ui/codemap_tests/issue-28308.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fissue-28308.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0600]: cannot apply unary operator `!` to type `&'static str`\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "a73575a8d57f1ae65783eec6492c758db02c3c5c", "filename": "src/test/ui/codemap_tests/one_line.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Fone_line.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Fone_line.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Fone_line.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0499]: cannot borrow `v` as mutable more than once at a time\n    |     |      second mutable borrow occurs here\n    |     first mutable borrow occurs here\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "de8a24cf33f44c12f0e70d3dbf57e99101a67e09", "filename": "src/test/ui/codemap_tests/overlapping_inherent_impls.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_inherent_impls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_inherent_impls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_inherent_impls.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -25,5 +25,5 @@ error[E0592]: duplicate definitions with name `baz`\n 43 |     fn baz(&self) {}\n    |     ---------------- other definition for `baz`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "d32b18d670308c4379da0ed8060db3694a1f1bdd", "filename": "src/test/ui/codemap_tests/overlapping_spans.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_spans.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_spans.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Foverlapping_spans.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0509]: cannot move out of type `S`, which implements the `Drop` trait\n    |         |    hint: to prevent move, use `ref _s` or `ref mut _s`\n    |         cannot move out of here\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "657deca4e6d491afc2398aa5e4c4da6bda8df00a", "filename": "src/test/ui/codemap_tests/tab.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Ftab.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0425]: cannot find value `bar` in this scope\n 14 | \\tbar;\n    | \\t^^^ not found in this scope\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "0828fd28b5878642ec5c640d90fcb0aad1ed8ba3", "filename": "src/test/ui/codemap_tests/unicode.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcodemap_tests%2Funicode.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error: invalid ABI: expected one of [cdecl, stdcall, fastcall, vectorcall, thisc\n 11 | extern \"\u8def\u6feb\u72fc\u00e1\u0301\u0301\" fn foo() {}\n    |        ^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "5f9a82d972aceb660e2464fca070030c4f10f73c", "filename": "src/test/ui/coercion-missing-tail-expected-type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcoercion-missing-tail-expected-type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcoercion-missing-tail-expected-type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcoercion-missing-tail-expected-type.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -24,5 +24,5 @@ error[E0308]: mismatched types\n    = note: expected type `std::result::Result<u8, u64>`\n               found type `()`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "2a707c6eb8b103b428de32c4fb5f2c64f848b38a", "filename": "src/test/ui/compare-method/proj-outlives-region.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Fproj-outlives-region.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Fproj-outlives-region.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fproj-outlives-region.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -11,5 +11,5 @@ error[E0276]: impl has stricter requirements than trait\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "af974d501839b35cb76d8ac7c746c244e25d4b6a", "filename": "src/test/ui/compare-method/region-extra-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra-2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ error[E0276]: impl has stricter requirements than trait\n 22 | |     }\n    | |_____^ impl has extra requirement `'a: 'b`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "e657813221a1265e9854a8728e4055a91be39df2", "filename": "src/test/ui/compare-method/region-extra.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fregion-extra.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0276]: impl has stricter requirements than trait\n 22 |     fn foo() where 'a: 'b { }\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `'a: 'b`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "9e822bd8b0790097ff4832bd78edadf41677b8e9", "filename": "src/test/ui/compare-method/region-unrelated.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Fregion-unrelated.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Fregion-unrelated.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Fregion-unrelated.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -11,5 +11,5 @@ error[E0276]: impl has stricter requirements than trait\n    = warning: this was previously accepted by the compiler but is being phased out; it will become a hard error in a future release!\n    = note: for more information, see issue #37166 <https://github.com/rust-lang/rust/issues/37166>\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "4620248e2efeae50747b5af688ea1fabb96e008f", "filename": "src/test/ui/compare-method/reordered-type-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Freordered-type-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Freordered-type-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Freordered-type-param.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ error[E0053]: method `b` has an incompatible type for trait\n    = note: expected type `fn(&E, F) -> F`\n               found type `fn(&E, G) -> G`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "7112a00c7b7900fd7f305fbc1b79f71a044d21e4", "filename": "src/test/ui/compare-method/trait-bound-on-type-parameter.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Ftrait-bound-on-type-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Ftrait-bound-on-type-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Ftrait-bound-on-type-parameter.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0276]: impl has stricter requirements than trait\n 25 |     fn b<F: Sync, G>(&self, _x: F) -> F { panic!() } //~ ERROR E0276\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `F: std::marker::Sync`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "f221ebe3302c019dadf23280d4904b519a7955a6", "filename": "src/test/ui/compare-method/traits-misc-mismatch-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Ftraits-misc-mismatch-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Ftraits-misc-mismatch-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Ftraits-misc-mismatch-1.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -61,5 +61,5 @@ error[E0276]: impl has stricter requirements than trait\n 76 |     fn method<G: Getter<usize>>(&self) {}\n    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ impl has extra requirement `G: Getter<usize>`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 7 previous errors\n "}, {"sha": "622e144c53a040447103654b7fb552c79d68c5b0", "filename": "src/test/ui/compare-method/traits-misc-mismatch-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Ftraits-misc-mismatch-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcompare-method%2Ftraits-misc-mismatch-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcompare-method%2Ftraits-misc-mismatch-2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ error[E0276]: impl has stricter requirements than trait\n 26 | |     }\n    | |_____^ impl has extra requirement `U: Iterator<B>`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "84db85ac092dbfbf3d199d7d489ca97983da83db", "filename": "src/test/ui/cross-crate-macro-backtrace/main.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcross-crate-macro-backtrace%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fcross-crate-macro-backtrace%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fcross-crate-macro-backtrace%2Fmain.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error: invalid reference to argument `0` (no arguments given)\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "15e7131cfd3be41a75621b24e212971643909267", "filename": "src/test/ui/did_you_mean/E0178.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2FE0178.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -22,5 +22,5 @@ error[E0178]: expected a path on the left-hand side of `+`, not `fn() -> Foo`\n 17 |     z: fn() -> Foo + 'a,\n    |        ^^^^^^^^^^^^^^^^ perhaps you forgot parentheses?\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "9010de081da46b602e3db93efa77d54165c9f1c6", "filename": "src/test/ui/did_you_mean/issue-21659-show-relevant-trait-impls-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-1.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -8,5 +8,5 @@ error[E0277]: the trait bound `Bar: Foo<usize>` is not satisfied\n              <Bar as Foo<i32>>\n              <Bar as Foo<u8>>\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "e9591a64784d5ad6dff8f3a96648d5a7b16194ce", "filename": "src/test/ui/did_you_mean/issue-21659-show-relevant-trait-impls-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-21659-show-relevant-trait-impls-2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -11,5 +11,5 @@ error[E0277]: the trait bound `Bar: Foo<usize>` is not satisfied\n              <Bar as Foo<u8>>\n            and 2 others\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "c7d43a0fc0b6f1b794dc7a49d199dec7c6c4e8e2", "filename": "src/test/ui/did_you_mean/issue-31424.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-31424.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -15,5 +15,5 @@ error[E0596]: cannot borrow immutable argument `self` as mutable\n 23 |         (&mut self).bar();\n    |               ^^^^ cannot borrow mutably\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "63d59a59238b538dd5c4869dc8f4930d1652e16e", "filename": "src/test/ui/did_you_mean/issue-34126.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34126.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0596]: cannot borrow immutable argument `self` as mutable\n    |                       try removing `&mut` here\n    |                       cannot reborrow mutably\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "9eb88cdeddbe6d4a027cfa9fc1f4488a42fddcfc", "filename": "src/test/ui/did_you_mean/issue-34337.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-34337.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0596]: cannot borrow immutable local variable `key` as mutable\n    |              try removing `&mut` here\n    |              cannot reborrow mutably\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "1cd1fb76aa33050d14e11f130b6d4460981b1f44", "filename": "src/test/ui/did_you_mean/issue-35937.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35937.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35937.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-35937.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -22,5 +22,5 @@ error[E0594]: cannot assign to immutable field `s.x`\n 30 |     s.x += 1;\n    |     ^^^^^^^^ cannot mutably borrow immutable field\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "72fd09c0357198df46d352a05a4df52c0dc7af63", "filename": "src/test/ui/did_you_mean/issue-36798.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0609]: no field `baz` on type `Foo`\n 17 |     f.baz;\n    |       ^^^ did you mean `bar`?\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "82e3eab0836ce2750b6cdbc9a56484444b1f3706", "filename": "src/test/ui/did_you_mean/issue-36798_unknown_field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798_unknown_field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798_unknown_field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-36798_unknown_field.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0609]: no field `zz` on type `Foo`\n 17 |     f.zz;\n    |       ^^ unknown field\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "4348b6fca63b6878deba32ad226a48c910f17afd", "filename": "src/test/ui/did_you_mean/issue-37139.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-37139.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0596]: cannot borrow immutable local variable `x` as mutable\n    |                       try removing `&mut` here\n    |                       cannot reborrow mutably\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "325f55e686c622e12ec5772512392b0a1e70f460", "filename": "src/test/ui/did_you_mean/issue-38054-do-not-show-unresolved-names.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38054-do-not-show-unresolved-names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38054-do-not-show-unresolved-names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38054-do-not-show-unresolved-names.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ error[E0432]: unresolved import `Foo1`\n 13 | use Foo1;\n    |     ^^^^ no `Foo1` in the root\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "e9f2b1dad806d52429b48060b5a1136315856584", "filename": "src/test/ui/did_you_mean/issue-38147-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-1.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0389]: cannot borrow data mutably in a `&` reference\n 27 |         self.s.push('x');\n    |         ^^^^^^ assignment into an immutable reference\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "e81bc722fa0989d6c76e7914b28f31f17b54d476", "filename": "src/test/ui/did_you_mean/issue-38147-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0596]: cannot borrow immutable borrowed content `*self.s` as mutable\n 17 |         self.s.push('x');\n    |         ^^^^^^ cannot borrow as mutable\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "749795f4d8fbd60320583f4c88af28e496dc96ed", "filename": "src/test/ui/did_you_mean/issue-38147-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-3.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0596]: cannot borrow immutable borrowed content `*self.s` as mutable\n 17 |         self.s.push('x');\n    |         ^^^^^^ cannot borrow as mutable\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "9a8853f4fbbdb15dfe2bfa8330db4c5b4d4e8344", "filename": "src/test/ui/did_you_mean/issue-38147-4.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-4.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-4.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-38147-4.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0389]: cannot borrow data mutably in a `&` reference\n 16 |     f.s.push('x');\n    |     ^^^ assignment into an immutable reference\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "28aaab97bdad1c8712c0f397885ca59b40926c7a", "filename": "src/test/ui/did_you_mean/issue-39544.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39544.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39544.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39544.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -96,5 +96,5 @@ error[E0594]: cannot assign to immutable borrowed content `*x.0`\n 58 |     *x.0 = 1;\n    |     ^^^^^^^^ cannot borrow as mutable\n \n-error: aborting due to previous error(s)\n+error: aborting due to 12 previous errors\n "}, {"sha": "4ea4adfcfe0fc68260f9dc047f487db7cc6eea17", "filename": "src/test/ui/did_you_mean/issue-39802-show-5-trait-impls.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39802-show-5-trait-impls.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39802-show-5-trait-impls.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-39802-show-5-trait-impls.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -39,5 +39,5 @@ error[E0277]: the trait bound `bool: Foo<i32>` is not satisfied\n            and 2 others\n    = note: required by `Foo::bar`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "8e8773eba3e222feb5c31bbe4f2029a69ef5df5d", "filename": "src/test/ui/did_you_mean/issue-40006.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40006.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40006.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40006.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -64,5 +64,5 @@ error[E0038]: the trait `X` cannot be made into an object\n    |\n    = note: method `xxx` has no receiver\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "1a0c74dc01a09d4eb96735e0253f8215220ed082", "filename": "src/test/ui/did_you_mean/issue-40396.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40396.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40396.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40396.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -30,5 +30,5 @@ error: chained comparison operators require parentheses\n    |\n    = help: use `::<...>` instead of `<...>` if you meant to specify type arguments\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "7daab09c09e37737b790e644fa243dafbe5b4a11", "filename": "src/test/ui/did_you_mean/issue-40823.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40823.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40823.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-40823.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0596]: cannot borrow immutable borrowed content `*buf` as mutable\n 13 |     buf.iter_mut();\n    |     ^^^ cannot borrow as mutable\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "2abbbf65ba9b507254cef20ec002e58cf760aea5", "filename": "src/test/ui/did_you_mean/issue-41679.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Fissue-41679.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error: `~` can not be used as a unary operator\n    |\n    = help: use `!` instead of `~` if you meant to perform bitwise negation\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "d157c5de6c7f57f98fd213b5da51db9a6015e9be", "filename": "src/test/ui/did_you_mean/recursion_limit.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -17,5 +17,5 @@ error[E0275]: overflow evaluating the requirement `K: std::marker::Send`\n    = note: required because it appears within the type `A`\n    = note: required by `is_send`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "57b28d037362239f237591faf6eb9dd7d7aa6456", "filename": "src/test/ui/did_you_mean/recursion_limit_deref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Frecursion_limit_deref.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -19,5 +19,5 @@ error[E0308]: mismatched types\n    = note: expected type `&Bottom`\n               found type `&Top`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "c4858b63c2d930e4a3af534edf1961a4e17386f8", "filename": "src/test/ui/did_you_mean/trait-object-reference-without-parens-suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdid_you_mean%2Ftrait-object-reference-without-parens-suggestion.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -18,5 +18,5 @@ error[E0038]: the trait `std::marker::Copy` cannot be made into an object\n    |\n    = note: the trait cannot require that `Self : Sized`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "62ce3209c919d6271d615816541aa5631794432e", "filename": "src/test/ui/dropck/dropck-eyepatch-extern-crate.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-extern-crate.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-extern-crate.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-extern-crate.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -42,5 +42,5 @@ error[E0597]: `c` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "2c788e952edbfd455b29645f875bdded8cf4eedd", "filename": "src/test/ui/dropck/dropck-eyepatch-implies-unsafe-impl.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-implies-unsafe-impl.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-implies-unsafe-impl.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-implies-unsafe-impl.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -20,5 +20,5 @@ error[E0569]: requires an `unsafe impl` declaration due to `#[may_dangle]` attri\n 43 | | }\n    | |_^\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "d94808bbcb6d0eafd6c8f7c3916fd20246a93462", "filename": "src/test/ui/dropck/dropck-eyepatch-reorder.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-reorder.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-reorder.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch-reorder.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -42,5 +42,5 @@ error[E0597]: `c` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "811eee0e85f15cb56515fc02ddc6d337cb2a053b", "filename": "src/test/ui/dropck/dropck-eyepatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fdropck%2Fdropck-eyepatch.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -42,5 +42,5 @@ error[E0597]: `c` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "58b392f0b8d658fc1df9896a3568b05b9338bf23", "filename": "src/test/ui/fmt/format-string-error.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ffmt%2Fformat-string-error.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -16,5 +16,5 @@ error: invalid format string: unmatched `}` found\n    = note: if you intended to print `}`, you can escape it using `}}`\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "3fc08a0900fb9ed7b8213b4d1d78144d3c07cca4", "filename": "src/test/ui/impl-trait/equality.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fimpl-trait%2Fequality.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -51,5 +51,5 @@ error[E0308]: mismatched types\n    = note: expected type `impl Foo` (i32)\n               found type `impl Foo` (u32)\n \n-error: aborting due to previous error(s)\n+error: aborting due to 6 previous errors\n "}, {"sha": "3e9b21cdb740fc072a1779e128acb49be55d7df2", "filename": "src/test/ui/invalid-module-declaration/invalid-module-declaration.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Finvalid-module-declaration%2Finvalid-module-declaration.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ note: maybe move this module `$DIR/auxiliary/foo/bar.rs` to its own directory vi\n 11 | pub mod baz;\n    |         ^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "b51b683a1ac3a5de798a8e3feaea1d315159574d", "filename": "src/test/ui/issue-37311-type-length-limit/issue-37311.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fissue-37311-type-length-limit%2Fissue-37311.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fissue-37311-type-length-limit%2Fissue-37311.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-37311-type-length-limit%2Fissue-37311.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -8,5 +8,5 @@ error: reached the type-length limit while instantiating `<T as Foo><(&(&(&(&(&(\n    |\n    = note: consider adding a `#![type_length_limit=\"2097152\"]` attribute to your crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "de110ac12b70398a3fc7f8d6ca7f051f71ff73b1", "filename": "src/test/ui/issue-40402-ref-hints/issue-40402-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-1.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0507]: cannot move out of indexed content\n    |             help: consider using a reference instead `&f.v[0]`\n    |             cannot move out of indexed content\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "0060b683bba43637789a732186b8de60b21e75f5", "filename": "src/test/ui/issue-40402-ref-hints/issue-40402-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-40402-ref-hints%2Fissue-40402-2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0507]: cannot move out of indexed content\n    |          |  ...and here (use `ref b` or `ref mut b`)\n    |          hint: to prevent move, use `ref a` or `ref mut a`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "8a55c9989e18c1b9d9cb358e194ee4bda7085fe7", "filename": "src/test/ui/issue-41652/issue_41652.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fissue-41652%2Fissue_41652.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fissue-41652%2Fissue_41652.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fissue-41652%2Fissue_41652.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -13,5 +13,5 @@ note: candidate #1 is defined in the trait `issue_41652_b::Tr`\n    | |__________________________^\n    = help: to disambiguate the method call, write `issue_41652_b::Tr::f(3)` instead\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "5d1336c7c3a22deaf77bdbf80122f716059e98bb", "filename": "src/test/ui/lifetime-errors/ex1-return-one-existing-name-if-else.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1-return-one-existing-name-if-else.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0621]: explicit lifetime required in the type of `y`\n 12 |     if x > y { x } else { y }\n    |                           ^ lifetime `'a` required\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "fccc44caac81a5f7e25b11cdb0ca893266387bd7", "filename": "src/test/ui/lifetime-errors/ex1b-return-no-names-if-else.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetime-errors%2Fex1b-return-no-names-if-else.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetime-errors%2Fex1b-return-no-names-if-else.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex1b-return-no-names-if-else.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0106]: missing lifetime specifier\n    |\n    = help: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `x` or `y`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "e529d6ffe46b47ac79973b7089aa7f75e6fb373b", "filename": "src/test/ui/lifetime-errors/ex2a-push-one-existing-name.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2a-push-one-existing-name.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0621]: explicit lifetime required in the type of `y`\n 16 |     x.push(y);\n    |            ^ lifetime `'a` required\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "6764c58f4bb59aeb1b9b345eab5f840ba0032c48", "filename": "src/test/ui/lifetime-errors/ex2b-push-no-existing-names.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2b-push-no-existing-names.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -21,5 +21,5 @@ note: ...does not necessarily outlive the anonymous lifetime #2 defined on the f\n 17 | | }\n    | |_^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "7356fc11862f6e104d004cd642852161b18e5e1b", "filename": "src/test/ui/lifetime-errors/ex2c-push-inference-variable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2c-push-inference-variable.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -31,5 +31,5 @@ note: ...so that expression is assignable (expected Ref<'b, _>, found Ref<'_, _>\n 17 |     x.push(z);\n    |            ^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "38b0acf9339e0e89595a6c0ee889abca1f2c221e", "filename": "src/test/ui/lifetime-errors/ex2d-push-inference-variable-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2d-push-inference-variable-2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -33,5 +33,5 @@ note: ...so that expression is assignable (expected &mut std::vec::Vec<Ref<'_, i\n 16 |     let a: &mut Vec<Ref<i32>> = x;\n    |                                 ^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "035e516e8628e9b933157645e651ef281f272c01", "filename": "src/test/ui/lifetime-errors/ex2e-push-inference-variable-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetime-errors%2Fex2e-push-inference-variable-3.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -33,5 +33,5 @@ note: ...so that expression is assignable (expected &mut std::vec::Vec<Ref<'_, i\n 16 |     let a: &mut Vec<Ref<i32>> = x;\n    |                                 ^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "d1ba92465886e360d8f868e5a235a728d0e402c0", "filename": "src/test/ui/lifetimes/borrowck-let-suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetimes%2Fborrowck-let-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flifetimes%2Fborrowck-let-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flifetimes%2Fborrowck-let-suggestion.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ error[E0597]: borrowed value does not live long enough\n    |\n    = note: consider using a `let` binding to increase its lifetime\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "23fac66cc6c98f60ba85966bc8c10f565bd4ee3e", "filename": "src/test/ui/lint/command-line-lint-group-deny.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-deny.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-deny.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-deny.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error: variable `_InappropriateCamelCasing` should have a snake case name such a\n    |\n    = note: `-D non-snake-case` implied by `-D bad-style`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "0babd7f6fe47a06dbaccf37ad6790a8b15d2bb45", "filename": "src/test/ui/lint/command-line-lint-group-forbid.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-forbid.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-forbid.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Fcommand-line-lint-group-forbid.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error: variable `_InappropriateCamelCasing` should have a snake case name such a\n    |\n    = note: `-F non-snake-case` implied by `-F bad-style`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "862e94b873a0c1faeb3f4775a52d8675d884e631", "filename": "src/test/ui/lint/lint-group-style.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flint%2Flint-group-style.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Flint%2Flint-group-style.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Flint%2Flint-group-style.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -63,5 +63,5 @@ note: lint level defined here\n    |                 ^^^^^^^^^\n    = note: #[warn(non_camel_case_types)] implied by #[warn(bad_style)]\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "c154ea6f8c2d68e76a7ff04e24ad6b2a5b2b5017", "filename": "src/test/ui/loop-break-value-no-repeat.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Floop-break-value-no-repeat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Floop-break-value-no-repeat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Floop-break-value-no-repeat.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0571]: `break` with value from a `for` loop\n 22 |         break 22\n    |         ^^^^^^^^ can only break with a value inside `loop`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "bffb33f468fc886c7c10433111713bb242add472", "filename": "src/test/ui/macros/bad_hello.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmacros%2Fbad_hello.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmacros%2Fbad_hello.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fbad_hello.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error: expected a literal\n 12 |     println!(3 + 4);\n    |              ^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "0283052a89f53d19a128cd8cb4836f7dbae769c2", "filename": "src/test/ui/macros/format-foreign.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmacros%2Fformat-foreign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmacros%2Fformat-foreign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fformat-foreign.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -48,5 +48,5 @@ error: named argument never used\n    = help: `$NAME` should be written as `{NAME}`\n    = note: shell formatting not supported; see the documentation for `std::fmt`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "0f0d6d8ded313a2ede62e075ee903d28956ac397", "filename": "src/test/ui/macros/macro-backtrace-invalid-internals.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-invalid-internals.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-invalid-internals.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-invalid-internals.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -52,5 +52,5 @@ error[E0613]: attempted to access tuple index `0` on type `{integer}`, but the t\n 56 |     let _ = fake_anon_field_expr!();\n    |             ----------------------- in this macro invocation\n \n-error: aborting due to previous error(s)\n+error: aborting due to 6 previous errors\n "}, {"sha": "8b69d112d4d42b8390db27b5a03056557656aa02", "filename": "src/test/ui/macros/macro-backtrace-nested.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-nested.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-nested.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-nested.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -16,5 +16,5 @@ error[E0425]: cannot find value `fake` in this scope\n 28 |     call_nested_expr_sum!();\n    |     ------------------------ in this macro invocation\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "f21253bb67fb0c10e46458e63aa3997d639283cf", "filename": "src/test/ui/macros/macro-backtrace-println.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-println.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-println.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmacros%2Fmacro-backtrace-println.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error: invalid reference to argument `0` (no arguments given)\n 28 |     myprintln!(\"{}\");\n    |     ----------------- in this macro invocation\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "d9871b8970c5cf22b1cd32b70b5b34bbc8f4c32d", "filename": "src/test/ui/mismatched_types/E0053.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2FE0053.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2FE0053.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2FE0053.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -22,5 +22,5 @@ error[E0053]: method `bar` has an incompatible type for trait\n    = note: expected type `fn(&Bar)`\n               found type `fn(&mut Bar)`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "8a306ea41929a49ca4f9060b0b36954843818864", "filename": "src/test/ui/mismatched_types/E0281.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2FE0281.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2FE0281.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2FE0281.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -9,5 +9,5 @@ error[E0281]: type mismatch: `[closure@$DIR/E0281.rs:14:9: 14:24]` implements th\n    |\n    = note: required by `foo`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "45a42b1c271f8678920ca841580d814aa62f6498", "filename": "src/test/ui/mismatched_types/E0409.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2FE0409.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2FE0409.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2FE0409.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -15,5 +15,5 @@ error[E0308]: mismatched types\n    = note: expected type `&{integer}`\n               found type `{integer}`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "d40bc3b333903fee5625460068abfab81c3a5185", "filename": "src/test/ui/mismatched_types/abridged.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fabridged.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -52,5 +52,5 @@ error[E0308]: mismatched types\n    = note: expected type `X<X<_, std::string::String>, _>`\n               found type `X<X<_, {integer}>, _>`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 6 previous errors\n "}, {"sha": "bb90a19a3ba4d7f830e9e3405da2ecba0edea6f8", "filename": "src/test/ui/mismatched_types/binops.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fbinops.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fbinops.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fbinops.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -46,5 +46,5 @@ error[E0277]: the trait bound `{integer}: std::cmp::PartialEq<std::result::Resul\n    |\n    = help: the trait `std::cmp::PartialEq<std::result::Result<{integer}, _>>` is not implemented for `{integer}`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 7 previous errors\n "}, {"sha": "fb363c388b6e659fc2d04cfeb29b25254760d544", "filename": "src/test/ui/mismatched_types/cast-rfc0401.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fcast-rfc0401.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fcast-rfc0401.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fcast-rfc0401.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -246,5 +246,5 @@ help: did you mean `*s`?\n 81 |     vec![0.0].iter().map(|s| s as f32).collect::<Vec<f32>>();\n    |                              ^\n \n-error: aborting due to previous error(s)\n+error: aborting due to 34 previous errors\n "}, {"sha": "f2509040b006ce0a52b8564a130d10b2dffbe3c9", "filename": "src/test/ui/mismatched_types/closure-arg-count.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-arg-count.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -31,5 +31,5 @@ error[E0593]: closure takes 1 argument but 2 arguments are required\n    |               |\n    |               expected closure that takes 2 arguments\n \n-error: aborting due to previous error(s)\n+error: aborting due to 7 previous errors\n "}, {"sha": "5b3eb5931896aee60c50c0e36b8efa0c97379607", "filename": "src/test/ui/mismatched_types/closure-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fclosure-mismatch.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -20,5 +20,5 @@ error[E0281]: type mismatch: `[closure@$DIR/closure-mismatch.rs:18:9: 18:15]` im\n    = note: required because of the requirements on the impl of `Foo` for `[closure@$DIR/closure-mismatch.rs:18:9: 18:15]`\n    = note: required by `baz`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "f7b7635e41aecfec70ad91f99b95fac6a0d944f2", "filename": "src/test/ui/mismatched_types/const-fn-in-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fconst-fn-in-trait.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ error[E0379]: trait fns cannot be declared const\n 21 |     const fn f() -> u32 { 22 }\n    |     ^^^^^ trait fns cannot be const\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "120fb87cdc89820ea2264348dea853e069c8d105", "filename": "src/test/ui/mismatched_types/fn-variance-1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Ffn-variance-1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Ffn-variance-1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Ffn-variance-1.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -14,5 +14,5 @@ error[E0281]: type mismatch: `fn(&isize) {takes_imm}` implements the trait `for<\n    |\n    = note: required by `apply`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "2b4b8242af6fb7620bc961454e364f53de96a718", "filename": "src/test/ui/mismatched_types/issue-19109.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-19109.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-19109.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-19109.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -9,5 +9,5 @@ error[E0308]: mismatched types\n    = note: expected type `()`\n               found type `*mut Trait`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "fae831ffb868f63870802b19ff7ca2c05591d5e7", "filename": "src/test/ui/mismatched_types/issue-26480.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-26480.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-26480.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-26480.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -18,5 +18,5 @@ error[E0605]: non-primitive cast: `{integer}` as `()`\n    |\n    = note: an `as` expression can only be used to convert between primitive types. Consider using the `From` trait\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "46d690c5f037b97ee2235cc51364c663ae642b4a", "filename": "src/test/ui/mismatched_types/issue-35030.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-35030.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-35030.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-35030.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0308]: mismatched types\n    = note: expected type `bool` (type parameter)\n               found type `bool` (bool)\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "88309ab146fa5e390438defd251256a03f511a05", "filename": "src/test/ui/mismatched_types/issue-36053-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-36053-2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -17,5 +17,5 @@ error[E0281]: type mismatch: `[closure@$DIR/issue-36053-2.rs:17:39: 17:53]` impl\n    |                                requires `for<'r> std::ops::FnMut<(&'r &str,)>`\n    |                                expected &str, found str\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "9efee4cc5593cb2ed8c9056c6ff3b985be3d7298", "filename": "src/test/ui/mismatched_types/issue-38371.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-38371.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-38371.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fissue-38371.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -32,5 +32,5 @@ error[E0529]: expected an array or slice, found `u32`\n 34 | fn ugh(&[bar]: &u32) {\n    |         ^^^^^ pattern cannot match with input type `u32`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "c8941fbf950734c021621508ef1ef3129a95af14", "filename": "src/test/ui/mismatched_types/main.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fmain.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fmain.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fmain.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -9,5 +9,5 @@ error[E0308]: mismatched types\n    = note: expected type `u32`\n               found type `()`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "ab5b3e1791528adfafb92d7490d9ede384641372", "filename": "src/test/ui/mismatched_types/method-help-unsatisfied-bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fmethod-help-unsatisfied-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Fmethod-help-unsatisfied-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Fmethod-help-unsatisfied-bound.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0599]: no method named `unwrap` found for type `std::result::Result<(), F\n    = note: the method `unwrap` exists but the following trait bounds were not satisfied:\n            `Foo : std::fmt::Debug`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "cd05684f15d55d71c2157558b6380c8de90f615b", "filename": "src/test/ui/mismatched_types/overloaded-calls-bad.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Foverloaded-calls-bad.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -19,5 +19,5 @@ error[E0057]: this function takes 1 parameter but 2 parameters were supplied\n 45 |     let ans = s(\"burma\", \"shave\");\n    |                 ^^^^^^^^^^^^^^^^ expected 1 parameter\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "ccc9fb56772f5b4e1c6b67b5be3d7bf509caed8e", "filename": "src/test/ui/mismatched_types/trait-bounds-cant-coerce.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-bounds-cant-coerce.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-bounds-cant-coerce.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-bounds-cant-coerce.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0308]: mismatched types\n    = note: expected type `std::boxed::Box<Foo + std::marker::Send + 'static>`\n               found type `std::boxed::Box<Foo + 'static>`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "349432f64bbc20cf4af4839fe604639f2c6f7124", "filename": "src/test/ui/mismatched_types/trait-impl-fn-incompatibility.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Ftrait-impl-fn-incompatibility.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -22,5 +22,5 @@ error[E0053]: method `bar` has an incompatible type for trait\n    = note: expected type `fn(&mut Bar, &mut Bar)`\n               found type `fn(&mut Bar, &Bar)`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "4ba6dc7302316bae0e0676a68c6901fd3e04a68f", "filename": "src/test/ui/mismatched_types/unboxed-closures-vtable-mismatch.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmismatched_types%2Funboxed-closures-vtable-mismatch.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -12,5 +12,5 @@ error[E0281]: type mismatch: `[closure@$DIR/unboxed-closures-vtable-mismatch.rs:\n    |\n    = note: required by `call_it`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "fc90c8a2b20bebc39cc4029febe377213a1c61da", "filename": "src/test/ui/missing-items/issue-40221.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmissing-items%2Fissue-40221.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmissing-items%2Fissue-40221.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-items%2Fissue-40221.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0004]: non-exhaustive patterns: `C(QA)` not covered\n 21 |     match proto {\n    |           ^^^^^ pattern `C(QA)` not covered\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "b7ba5efacc4eabdc4c8eab780823d9070c4cff35", "filename": "src/test/ui/missing-items/m2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-items%2Fm2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -11,5 +11,5 @@ error[E0046]: not all trait items implemented, missing: `CONSTANT`, `Type`, `met\n    = note: `Type` from trait: `type Type;`\n    = note: `method` from trait: `fn(&Self, std::string::String) -> <Self as m1::X>::Type`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "a16ae5538bf92d2038afae65670a6d6d909c7b1a", "filename": "src/test/ui/missing-items/missing-type-parameter.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmissing-items%2Fmissing-type-parameter.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fmissing-items%2Fmissing-type-parameter.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fmissing-items%2Fmissing-type-parameter.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0282]: type annotations needed\n 14 |     foo();\n    |     ^^^ cannot infer type for `X`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "470e8331247851848b2cecf66b5c87c66d1fd863", "filename": "src/test/ui/pub/pub-restricted-error-fn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error-fn.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error: unmatched visibility `pub`\n 13 | pub(crate) () fn foo() {}\n    |          ^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "b8b4c80778d968d05f5296d9a8acb2459e8974dd", "filename": "src/test/ui/pub/pub-restricted-error.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-error.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error: expected identifier, found `(`\n 16 |     pub(crate) () foo: usize,\n    |                ^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "ebfccc4d720451f0e168d5c606792cdb64c68d45", "filename": "src/test/ui/pub/pub-restricted-non-path.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-non-path.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-non-path.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-restricted-non-path.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error: expected identifier, found `.`\n 13 | pub (.) fn afn() {}\n    |      ^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "ae283f1fb636a151fb913cc8134a623ffff96f9b", "filename": "src/test/ui/pub/pub-restricted.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fpub%2Fpub-restricted.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -48,5 +48,5 @@ error: visibilities can only be restricted to ancestor modules\n 33 |         pub (in x) non_parent_invalid: usize,\n    |                 ^\n \n-error: aborting due to previous error(s)\n+error: aborting due to 5 previous errors\n "}, {"sha": "1a2cc252051bfb9dffc07e18fdf0b86b2ff0ed71", "filename": "src/test/ui/reachable/expr_add.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_add.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_add.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_add.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ note: lint level defined here\n 13 | #![deny(unreachable_code)]\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "bf4e4dc4711cbcfbd6ef39069ae3536ac956a924", "filename": "src/test/ui/reachable/expr_again.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_again.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_again.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_again.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -11,5 +11,5 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "f8dbdb5f8bb66aa9c6097c5a6d18cb6944e80920", "filename": "src/test/ui/reachable/expr_array.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_array.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -16,5 +16,5 @@ error: unreachable expression\n 25 |     let x: [usize; 2] = [22, return];\n    |                         ^^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "807f6a1c1d5847eb383d2e1f6bcfcb24ee2f2ea2", "filename": "src/test/ui/reachable/expr_assign.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_assign.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_assign.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_assign.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -22,5 +22,5 @@ error: unreachable expression\n 36 |     *{return; &mut i} = 22;\n    |               ^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "542ce1c3fd9cb5b49e7f41743d623128be4505bc", "filename": "src/test/ui/reachable/expr_block.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_block.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_block.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_block.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -18,5 +18,5 @@ error: unreachable statement\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "78ba231cef9fcf2121f0173688ab3710823c13fa", "filename": "src/test/ui/reachable/expr_box.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_box.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_box.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_box.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ note: lint level defined here\n 13 | #![deny(unreachable_code)]\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "5526827f59fc9965853df9bc66eb3674e29572ea", "filename": "src/test/ui/reachable/expr_call.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_call.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_call.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_call.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -16,5 +16,5 @@ error: unreachable expression\n 28 |     bar(return);\n    |     ^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "a22300dcc1398f37c6c0dbee1b349266864a90a1", "filename": "src/test/ui/reachable/expr_cast.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_cast.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ note: lint level defined here\n 14 | #![deny(unreachable_code)]\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "2cf17474f6e9dd2ab1ddd152addf393ab004971a", "filename": "src/test/ui/reachable/expr_if.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_if.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_if.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_if.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -11,5 +11,5 @@ note: lint level defined here\n    |         ^^^^^^^^^^^^^^^^\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "6e98e754c54db30d1078dd882e45d004bfaeec0a", "filename": "src/test/ui/reachable/expr_loop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_loop.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -27,5 +27,5 @@ error: unreachable statement\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "f5857a5b345eccbb27c0ee1159574737e9897002", "filename": "src/test/ui/reachable/expr_match.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_match.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_match.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_match.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -26,5 +26,5 @@ error: unreachable statement\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "177d4352a376ddb175125c1425e7e57891a8d659", "filename": "src/test/ui/reachable/expr_method.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_method.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_method.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_method.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -16,5 +16,5 @@ error: unreachable expression\n 31 |     Foo.bar(return);\n    |     ^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "19afc5dd7b5ee192dc8307c046a6fabaa6d08100", "filename": "src/test/ui/reachable/expr_repeat.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_repeat.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_repeat.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_repeat.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ note: lint level defined here\n 14 | #![deny(unreachable_code)]\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "3eb70a4dd7c848ecc53b7b50d5ce47035c876da5", "filename": "src/test/ui/reachable/expr_return.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_return.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_return.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_return.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ note: lint level defined here\n 14 | #![deny(unreachable_code)]\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "4b7ac6604132c165b255200be13f61c49b0ae77f", "filename": "src/test/ui/reachable/expr_struct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_struct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_struct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_struct.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -28,5 +28,5 @@ error: unreachable expression\n 40 |     let x = Foo { a: 22, b: return };\n    |             ^^^^^^^^^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "63f477fd0c373a9a8b37111b1657380e410b8733", "filename": "src/test/ui/reachable/expr_tup.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_tup.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_tup.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_tup.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -16,5 +16,5 @@ error: unreachable expression\n 25 |     let x: (usize, usize) = (2, return);\n    |                             ^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "6ed79974ccb77c1aea43d4eddfbecc92102215fd", "filename": "src/test/ui/reachable/expr_type.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_type.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_type.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_type.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ note: lint level defined here\n 14 | #![deny(unreachable_code)]\n    |         ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "328b75fd236bcfcf73387b5b66dd447dd159b0df", "filename": "src/test/ui/reachable/expr_unary.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_unary.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_unary.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_unary.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0600]: cannot apply unary operator `!` to type `!`\n 18 |     let x: ! = ! { return; 22 };\n    |                ^^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "066cfc86c6462c534a35260d76975bd5c40b091a", "filename": "src/test/ui/reachable/expr_while.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_while.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Freachable%2Fexpr_while.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Freachable%2Fexpr_while.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -27,5 +27,5 @@ error: unreachable statement\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "0c7b44af949b6315588759e19418a5ea30064d01", "filename": "src/test/ui/regions-fn-subtyping-return-static.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fregions-fn-subtyping-return-static.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fregions-fn-subtyping-return-static.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fregions-fn-subtyping-return-static.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -9,5 +9,5 @@ error[E0308]: mismatched types\n    = note: lifetime parameter `'b` declared on fn `bar` appears only in the return type, but here is required to be higher-ranked, which means that `'b` must appear in both argument and return types\n    = note: this error is the result of a recent bug fix; for more information, see issue #33685 <https://github.com/rust-lang/rust/issues/33685>\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "17c5d5d15d40479415e0c5503c248ace94e25045", "filename": "src/test/ui/resolve/enums-are-namespaced-xc.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fenums-are-namespaced-xc.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -25,5 +25,5 @@ error[E0422]: cannot find struct, variant or union type `C` in module `namespace\n help: possible candidate is found in another module, you can import it into scope\n    | use namespaced_enums::Foo::C;\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "11268e593c4131bf40a958c5b60cc8b368aefea6", "filename": "src/test/ui/resolve/issue-14254.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-14254.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -144,5 +144,5 @@ error[E0425]: cannot find value `bah` in this scope\n \n error[E0601]: main function not found\n \n-error: aborting due to previous error(s)\n+error: aborting due to 25 previous errors\n "}, {"sha": "63d2ce109142c70116181304aad38511fcb51325", "filename": "src/test/ui/resolve/issue-16058.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-16058.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -9,5 +9,5 @@ help: possible better candidates are found in other modules, you can import them\n    | use std::io::Result;\n    | use std::thread::Result;\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "c0438abfe43b45cd5458eb302868063ff96c15df", "filename": "src/test/ui/resolve/issue-17518.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-17518.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0422]: cannot find struct, variant or union type `E` in this scope\n help: possible candidate is found in another module, you can import it into scope\n    | use SomeEnum::E;\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "edc7196d8464570222f235bd0a0b9b3e10947f20", "filename": "src/test/ui/resolve/issue-18252.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-18252.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-18252.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-18252.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0423]: expected function, found struct variant `Foo::Variant`\n 16 |     let f = Foo::Variant(42);\n    |             ^^^^^^^^^^^^ did you mean `Foo::Variant { /* fields */ }`?\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "7b14d49af51dd8c79cddd54c83372dd9b8929395", "filename": "src/test/ui/resolve/issue-19452.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-19452.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-19452.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-19452.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ error[E0423]: expected value, found struct variant `issue_19452_aux::Homura::Mad\n 22 |     let homura = issue_19452_aux::Homura::Madoka;\n    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ did you mean `issue_19452_aux::Homura::Madoka { /* fields */ }`?\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "fda87de9b9c500bb2f3d151ec33aa14cc7d9ca59", "filename": "src/test/ui/resolve/issue-23305.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-23305.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -11,5 +11,5 @@ note: the cycle begins when processing `<impl at $DIR/issue-23305.rs:15:1: 15:20\n    | ^^^^^^^^^^^^^^^^^^^\n    = note: ...which then again requires processing `<impl at $DIR/issue-23305.rs:15:1: 15:20>`, completing the cycle.\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "039887d8da65fe169b5695d5b880f6d1a47f2724", "filename": "src/test/ui/resolve/issue-2356.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-2356.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -106,5 +106,5 @@ error[E0424]: expected value, found module `self`\n 122 |     self += 1;\n     |     ^^^^ `self` value is only available in methods with `self` parameter\n \n-error: aborting due to previous error(s)\n+error: aborting due to 17 previous errors\n "}, {"sha": "111710d515a92f28c3e4a479913e9fac3bd76c6b", "filename": "src/test/ui/resolve/issue-24968.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-24968.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-24968.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-24968.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0411]: cannot find type `Self` in this scope\n 11 | fn foo(_: Self) {\n    |           ^^^^ `Self` is only available in traits and impls\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "5dbecc4f0c5fa1ca937092b80d39cbb57de8282c", "filename": "src/test/ui/resolve/issue-33876.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-33876.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-33876.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-33876.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0423]: expected value, found trait `Bar`\n 20 |     let any: &Any = &Bar; //~ ERROR expected value, found trait `Bar`\n    |                      ^^^ not a value\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "2ef8c830eb2fe5173c8f774a0a1053f75d74a33c", "filename": "src/test/ui/resolve/issue-3907-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-3907-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-3907-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-3907-2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0038]: the trait `issue_3907::Foo` cannot be made into an object\n    |\n    = note: method `bar` has no receiver\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "f6ee0b025bb2e9a78c688d761626b8e03a0b6490", "filename": "src/test/ui/resolve/issue-39226.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-39226.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0423]: expected value, found struct `Handle`\n    |                 did you mean `handle`?\n    |                 did you mean `Handle { /* fields */ }`?\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "791b20725f3bcbb5d11ac164da22aa02812e56bf", "filename": "src/test/ui/resolve/issue-5035-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-5035-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-5035-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-5035-2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0277]: the trait bound `I + 'static: std::marker::Sized` is not satisfied\n    = help: the trait `std::marker::Sized` is not implemented for `I + 'static`\n    = note: all local variables must have a statically known size\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "b50295752f2e0a1632558b7d6de3a25a17d4b57d", "filename": "src/test/ui/resolve/issue-6702.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-6702.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fissue-6702.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fissue-6702.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0423]: expected function, found struct `Monster`\n 17 |     let _m = Monster(); //~ ERROR expected function, found struct `Monster`\n    |              ^^^^^^^ did you mean `Monster { /* fields */ }`?\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "4dff2620319e4607dcee7cf5fe92c79bd922a8ab", "filename": "src/test/ui/resolve/levenshtein.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Flevenshtein.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -46,5 +46,5 @@ error[E0425]: cannot find value `second` in module `m`\n 32 |     let b: m::first = m::second; // Misspelled item in module.\n    |                          ^^^^^^ did you mean `Second`?\n \n-error: aborting due to previous error(s)\n+error: aborting due to 8 previous errors\n "}, {"sha": "18efb17dd4657fa851f202e5acbfb26b58476127", "filename": "src/test/ui/resolve/privacy-struct-ctor.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fprivacy-struct-ctor.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -65,5 +65,5 @@ error[E0603]: tuple struct `Z` is private\n 45 |     xcrate::m::n::Z; //~ ERROR tuple struct `Z` is private\n    |     ^^^^^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to 8 previous errors\n "}, {"sha": "7975c168de7d4d39075ed8e349aeeec795b8f249", "filename": "src/test/ui/resolve/resolve-assoc-suggestions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fresolve-assoc-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fresolve-assoc-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-assoc-suggestions.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -52,5 +52,5 @@ error[E0425]: cannot find value `method` in this scope\n 52 |         method;\n    |         ^^^^^^ did you mean `self.method(...)`?\n \n-error: aborting due to previous error(s)\n+error: aborting due to 9 previous errors\n "}, {"sha": "ffb3f8484306f72b66f857cc1a634233deb6c1c2", "filename": "src/test/ui/resolve/resolve-hint-macro.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-hint-macro.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0423]: expected function, found macro `assert`\n 12 |     assert(true);\n    |     ^^^^^^ did you mean `assert!(...)`?\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "e7df8140bc577bbb0d207cf85801c736c330d6a9", "filename": "src/test/ui/resolve/resolve-speculative-adjustment.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fresolve-speculative-adjustment.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fresolve-speculative-adjustment.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fresolve-speculative-adjustment.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -22,5 +22,5 @@ error[E0425]: cannot find function `method` in this scope\n 38 |         method();\n    |         ^^^^^^ did you mean `self.method(...)`?\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "d1794d19f6a53a1537ca133d328a3c1bb2c644e3", "filename": "src/test/ui/resolve/suggest-path-instead-of-mod-dot-item.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Fsuggest-path-instead-of-mod-dot-item.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -74,5 +74,5 @@ error[E0423]: expected function, found module `a::b`\n \n error[E0601]: main function not found\n \n-error: aborting due to previous error(s)\n+error: aborting due to 10 previous errors\n "}, {"sha": "feb12612e660419a04b8db46ad4da603f9ead61d", "filename": "src/test/ui/resolve/token-error-correct-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -16,5 +16,5 @@ error[E0425]: cannot find value `foo` in this scope\n 14 |     if foo {\n    |        ^^^ not found in this scope\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "4384822f404892dafce7228e6b7a334b9c2f955f", "filename": "src/test/ui/resolve/token-error-correct-3.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct-3.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -42,5 +42,5 @@ error[E0308]: mismatched types\n    = note: expected type `()`\n               found type `std::result::Result<bool, std::io::Error>`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "226fa6469bc740f9403c0f8aa75050a68693574e", "filename": "src/test/ui/resolve/token-error-correct.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftoken-error-correct.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -52,5 +52,5 @@ error[E0425]: cannot find function `bar` in this scope\n 14 |     foo(bar(;\n    |         ^^^ not found in this scope\n \n-error: aborting due to previous error(s)\n+error: aborting due to 7 previous errors\n "}, {"sha": "e2ef8f0e568fcf4f47ca1ed331d22eb9fa5b6dbe", "filename": "src/test/ui/resolve/tuple-struct-alias.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Ftuple-struct-alias.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -28,5 +28,5 @@ error[E0532]: expected tuple struct/variant, found type alias `A`\n    |         did you mean `S`?\n    |         did you mean `A { /* fields */ }`?\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "5fbaf66e014af073f45aef78a325c8347a7c1cef", "filename": "src/test/ui/resolve/unresolved_static_type_field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Funresolved_static_type_field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fresolve%2Funresolved_static_type_field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fresolve%2Funresolved_static_type_field.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0425]: cannot find value `cx` in this scope\n    |           did you mean `self.cx`?\n    |           `self` value is only available in methods with `self` parameter\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "729a515612463396cf588abc8c38f174ed0c092f", "filename": "src/test/ui/span/E0046.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0046.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0046.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0046.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0046]: not all trait items implemented, missing: `foo`\n 18 | impl Foo for Bar {}\n    | ^^^^^^^^^^^^^^^^^^^ missing `foo` in implementation\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "0d6b0a552e4de981733df0af246a7dc0848b50cf", "filename": "src/test/ui/span/E0057.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0057.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0057.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0057.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ error[E0057]: this function takes 1 parameter but 2 parameters were supplied\n 15 |     let c = f(2, 3); //~ ERROR E0057\n    |               ^^^^ expected 1 parameter\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "1f6dd6b1d165f52c9eb3f5e257ccce7dcafd4718", "filename": "src/test/ui/span/E0072.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0072.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0072.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0072.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -9,5 +9,5 @@ error[E0072]: recursive type `ListNode` has infinite size\n    |\n    = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `ListNode` representable\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "4fe6afaca8ec658a4eae9fdba79b35dc37cacb29", "filename": "src/test/ui/span/E0204.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0204.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0204.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0204.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -34,5 +34,5 @@ error[E0204]: the trait `Copy` may not be implemented for this type\n 31 |     Bar(&'a mut bool),\n    |         ------------- this field does not implement `Copy`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "afcc9a240eb4e6c266a4decb0e110c8e2b80ad99", "filename": "src/test/ui/span/E0493.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0493.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0493.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0493.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0493]: constants are not allowed to have destructors\n 27 | const F : Foo = Foo { a : 0 };\n    |                 ^^^^^^^^^^^^^ constants cannot have destructors\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "23070e1555b9b89f101cd7440fd30e9d06554978", "filename": "src/test/ui/span/E0535.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0535.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0535.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0535.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0535]: invalid argument\n 11 | #[inline(unknown)] //~ ERROR E0535\n    |          ^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "b2da0c6a296d8fc5119d4f68560f799f9947408d", "filename": "src/test/ui/span/E0536.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0536.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0536.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0536.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0536]: expected 1 cfg-pattern\n 11 | #[cfg(not())] //~ ERROR E0536\n    |       ^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "29873943f444d8e65a7fc59f27af530744919307", "filename": "src/test/ui/span/E0537.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0537.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2FE0537.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2FE0537.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0537]: invalid predicate `unknown`\n 11 | #[cfg(unknown())] //~ ERROR E0537\n    |       ^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "2d580e7c20eee53bc9726f8e25f0d2781a408cc8", "filename": "src/test/ui/span/borrowck-borrow-overloaded-auto-deref-mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-borrow-overloaded-auto-deref-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-borrow-overloaded-auto-deref-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-borrow-overloaded-auto-deref-mut.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -82,5 +82,5 @@ error[E0596]: cannot borrow immutable borrowed content `*x` as mutable\n 143 |     *x.y_mut() = 3; //~ ERROR cannot borrow\n     |      ^ cannot borrow as mutable\n \n-error: aborting due to previous error(s)\n+error: aborting due to 10 previous errors\n "}, {"sha": "3d380a9a2e88d4714bd6ae9987d51e9e32aa28bb", "filename": "src/test/ui/span/borrowck-borrow-overloaded-deref-mut.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-borrow-overloaded-deref-mut.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-borrow-overloaded-deref-mut.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-borrow-overloaded-deref-mut.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -30,5 +30,5 @@ error[E0596]: cannot borrow immutable borrowed content `*x` as mutable\n 63 |     **x = 3; //~ ERROR cannot borrow\n    |      ^^ cannot borrow as mutable\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "6e7d0c17f1dfe58233e41a52ff7f62aa8be36903", "filename": "src/test/ui/span/borrowck-call-is-borrow-issue-12224.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-is-borrow-issue-12224.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-is-borrow-issue-12224.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-is-borrow-issue-12224.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -47,5 +47,5 @@ error[E0507]: cannot move out of captured outer variable in an `FnMut` closure\n 72 |         foo(f);\n    |             ^ cannot move out of captured outer variable in an `FnMut` closure\n \n-error: aborting due to previous error(s)\n+error: aborting due to 5 previous errors\n "}, {"sha": "a57cc94b9ba742d99bd446dbbd91ccc83fc67b2d", "filename": "src/test/ui/span/borrowck-call-method-from-mut-aliasable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-method-from-mut-aliasable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-method-from-mut-aliasable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-call-method-from-mut-aliasable.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0596]: cannot borrow immutable borrowed content `*x` as mutable\n 27 |     x.h(); //~ ERROR cannot borrow\n    |     ^ cannot borrow as mutable\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "45712d1a710246469f8e8e9e2dbbd527c212ff49", "filename": "src/test/ui/span/borrowck-fn-in-const-b.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-fn-in-const-b.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-fn-in-const-b.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-fn-in-const-b.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0596]: cannot borrow immutable borrowed content `*x` as mutable\n 17 |         x.push(format!(\"this is broken\"));\n    |         ^ cannot borrow as mutable\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "6ed1b7c26225e31019507ab31ea74838b6b5d6f5", "filename": "src/test/ui/span/borrowck-let-suggestion-suffixes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-let-suggestion-suffixes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-let-suggestion-suffixes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-let-suggestion-suffixes.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -48,5 +48,5 @@ error[E0597]: borrowed value does not live long enough\n    |\n    = note: consider using a `let` binding to increase its lifetime\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "530993f399a99d76e174d4e3406d288b7a302859", "filename": "src/test/ui/span/borrowck-object-mutability.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-object-mutability.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-object-mutability.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-object-mutability.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -16,5 +16,5 @@ error[E0596]: cannot borrow immutable `Box` content `*x` as mutable\n 29 |     x.borrowed_mut(); //~ ERROR cannot borrow\n    |     ^ cannot borrow as mutable\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "ced1f762af4a40a7b9a0c4958465e4c7dbcdda07", "filename": "src/test/ui/span/borrowck-ref-into-rvalue.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fborrowck-ref-into-rvalue.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -12,5 +12,5 @@ error[E0597]: borrowed value does not live long enough\n    |\n    = note: consider using a `let` binding to increase its lifetime\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "b703632bf90c1c662ecd7891a4b6b14051494e98", "filename": "src/test/ui/span/coerce-suggestions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fcoerce-suggestions.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -58,5 +58,5 @@ error[E0308]: mismatched types\n    = help: try with `&mut format!(\"foo\")`\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to 6 previous errors\n "}, {"sha": "ee885454169cb1824ec83a5023b3850f52c80567", "filename": "src/test/ui/span/destructor-restrictions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fdestructor-restrictions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fdestructor-restrictions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdestructor-restrictions.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -8,5 +8,5 @@ error[E0597]: `*a` does not live long enough\n    |     |\n    |     `*a` dropped here while still borrowed\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "49115b244e6737662250eea54a2f4118811c25aa", "filename": "src/test/ui/span/dropck-object-cycle.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fdropck-object-cycle.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fdropck-object-cycle.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck-object-cycle.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -9,5 +9,5 @@ error[E0597]: `*m` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "4179ac1a94605ecb067775af2f562b4c009b430b", "filename": "src/test/ui/span/dropck_arr_cycle_checked.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_arr_cycle_checked.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -63,5 +63,5 @@ error[E0597]: `b2` does not live long enough\n     |\n     = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 6 previous errors\n "}, {"sha": "597d42aabd2d7000923ead130a0e2613a7d3ab9c", "filename": "src/test/ui/span/dropck_direct_cycle_with_drop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_direct_cycle_with_drop.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -19,5 +19,5 @@ error[E0597]: `d1` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "958f229f659ea03b0c261b687d27ab977199c4a0", "filename": "src/test/ui/span/dropck_misc_variants.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fdropck_misc_variants.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fdropck_misc_variants.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_misc_variants.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -19,5 +19,5 @@ error[E0597]: `v` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "d7d0fe5323ba2735218fcb9b7ba6366ffe433027", "filename": "src/test/ui/span/dropck_vec_cycle_checked.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fdropck_vec_cycle_checked.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -63,5 +63,5 @@ error[E0597]: `c2` does not live long enough\n     |\n     = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 6 previous errors\n "}, {"sha": "ae290b3b11aa79c5df19475fbd03aaab7ed839b1", "filename": "src/test/ui/span/impl-wrong-item-for-trait.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fimpl-wrong-item-for-trait.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -85,5 +85,5 @@ error[E0046]: not all trait items implemented, missing: `fmt`\n    |\n    = note: `fmt` from trait: `fn(&Self, &mut std::fmt::Formatter<'_>) -> std::result::Result<(), std::fmt::Error>`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 7 previous errors\n "}, {"sha": "6b2942bc7a8a78a1c1887f907d60d7639efe25c8", "filename": "src/test/ui/span/issue-11925.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-11925.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-11925.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-11925.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ error[E0597]: `x` does not live long enough\n 23 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "ce1c6e81b960fe148a067fe225d36c600afb112b", "filename": "src/test/ui/span/issue-15480.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-15480.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-15480.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-15480.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -11,5 +11,5 @@ error[E0597]: borrowed value does not live long enough\n    |\n    = note: consider using a `let` binding to increase its lifetime\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "02c033153725c14e7f698a02946971cc03ae334f", "filename": "src/test/ui/span/issue-23338-locals-die-before-temps-of-body.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-23338-locals-die-before-temps-of-body.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-23338-locals-die-before-temps-of-body.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-23338-locals-die-before-temps-of-body.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -18,5 +18,5 @@ error[E0597]: `y` does not live long enough\n    |     |\n    |     `y` dropped here while still borrowed\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "d9f4bacce35ae0650c9d88c39f58329dab187dcc", "filename": "src/test/ui/span/issue-23729.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-23729.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-23729.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-23729.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -12,5 +12,5 @@ error[E0046]: not all trait items implemented, missing: `Item`\n    |\n    = note: `Item` from trait: `type Item;`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "3127af157a62bbb8184673b6398e6f4993db4230", "filename": "src/test/ui/span/issue-23827.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-23827.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-23827.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-23827.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -12,5 +12,5 @@ error[E0046]: not all trait items implemented, missing: `Output`\n    |\n    = note: `Output` from trait: `type Output;`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "71ab82d98b809abee614d08c740e37a5266d8ee6", "filename": "src/test/ui/span/issue-24356.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-24356.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-24356.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-24356.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -11,5 +11,5 @@ error[E0046]: not all trait items implemented, missing: `Target`\n    |\n    = note: `Target` from trait: `type Target;`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "8332ba50a73dc3b72016dd8f54ab0c4b7df16c6d", "filename": "src/test/ui/span/issue-24690.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-24690.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -30,5 +30,5 @@ note: lint level defined here\n    |         ^^^^^^^^\n    = note: #[deny(unused_variables)] implied by #[deny(warnings)]\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "29587b7fbde9e6637ab42c0fec1c77b880be2b7f", "filename": "src/test/ui/span/issue-24805-dropck-child-has-items-via-parent.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-24805-dropck-child-has-items-via-parent.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-24805-dropck-child-has-items-via-parent.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-24805-dropck-child-has-items-via-parent.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -9,5 +9,5 @@ error[E0597]: `d1` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "c88d4a0202fba67f074cf37af4374ac661d05f19", "filename": "src/test/ui/span/issue-24805-dropck-trait-has-items.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-24805-dropck-trait-has-items.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-24805-dropck-trait-has-items.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-24805-dropck-trait-has-items.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -28,5 +28,5 @@ error[E0597]: `d1` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "7f80e6e115af4c3230b30245520c69b9fa89d83f", "filename": "src/test/ui/span/issue-24895-copy-clone-dropck.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-24895-copy-clone-dropck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-24895-copy-clone-dropck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-24895-copy-clone-dropck.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -8,5 +8,5 @@ error[E0597]: `d1` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "4f403b38f5a1f1bc737012c1f950770ac17854d4", "filename": "src/test/ui/span/issue-25199.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-25199.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-25199.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-25199.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -19,5 +19,5 @@ error[E0597]: `container` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "748fcae48fcba03958782e66398d5a18f37fd10b", "filename": "src/test/ui/span/issue-26656.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-26656.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-26656.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-26656.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -8,5 +8,5 @@ error[E0597]: `ticking` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "117b109780b152de90c24f45dd97f8697ea3d84b", "filename": "src/test/ui/span/issue-27522.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-27522.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-27522.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-27522.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0308]: mismatched method receiver\n    = note: expected type `&Self`\n               found type `&SomeType`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "f146028c2fcf190988f016ba0ac119688076e315", "filename": "src/test/ui/span/issue-29106.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-29106.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-29106.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-29106.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -18,5 +18,5 @@ error[E0597]: `x` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "abbac245f89f66b191709212f42738ac9d8e2244", "filename": "src/test/ui/span/issue-29595.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-29595.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-29595.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-29595.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0277]: the trait bound `u8: Tr` is not satisfied\n    |\n    = note: required by `Tr::C`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "2a874181c7ad9a03332c073bbde569fce15ebc76", "filename": "src/test/ui/span/issue-33884.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-33884.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-33884.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-33884.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -8,5 +8,5 @@ error[E0308]: mismatched types\n               found type `std::string::String`\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "98183e2f082e9f55b33da1dd5443306de6041d29", "filename": "src/test/ui/span/issue-34264.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-34264.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -45,5 +45,5 @@ error[E0061]: this function takes 2 parameters but 3 parameters were supplied\n 19 |     bar(1, 2, 3);\n    |         ^^^^^^^ expected 2 parameters\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "dc6190c2e76b0f28afee368623308f022d13cb96", "filename": "src/test/ui/span/issue-36530.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-36530.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -14,5 +14,5 @@ error: The attribute `foo` is currently unknown to the compiler and may have mea\n    |\n    = help: add #![feature(custom_attribute)] to the crate attributes to enable\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "803e476b74932789b96839b3f4305983807c133a", "filename": "src/test/ui/span/issue-36537.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-36537.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-36537.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-36537.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -8,5 +8,5 @@ error[E0597]: `a` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "7cf74eaab8db12c65c7ed2e1266edc152643919d", "filename": "src/test/ui/span/issue-37767.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-37767.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-37767.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-37767.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -55,5 +55,5 @@ note: candidate #2 is defined in the trait `F`\n    |     ^^^^^^^^^^^^^^^\n    = help: to disambiguate the method call, write `F::foo(a)` instead\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "cd3a41b037c7996e8fa529e8fc805b9bca3e4c61", "filename": "src/test/ui/span/issue-39018.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-39018.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -15,5 +15,5 @@ error[E0369]: binary operation `+` cannot be applied to type `World`\n    |\n    = note: an implementation of `std::ops::Add` might be missing for `World`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "97d802f8398311fa3930f046e903224063e1d87e", "filename": "src/test/ui/span/issue-39698.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-39698.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-39698.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-39698.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -38,5 +38,5 @@ error[E0408]: variable `c` is not bound in all patterns\n    |         |             pattern doesn't bind `c`\n    |         pattern doesn't bind `c`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "b689bef63f156a0f9a2b64af5b0684603d4fbfd1", "filename": "src/test/ui/span/issue-40157.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-40157.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-40157.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-40157.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ error[E0597]: `foo` does not live long enough\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "858c099d37434f2116eb2187d5bcfe94eb4df09a", "filename": "src/test/ui/span/issue-7575.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue-7575.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -63,5 +63,5 @@ note: candidate #1 is defined in the trait `ManyImplTrait`\n    = note: the following trait defines an item `is_str`, perhaps you need to implement it:\n            candidate #1: `ManyImplTrait`\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "6beb3109c75d486cf7648b038ddf5ac6b6eb4bb1", "filename": "src/test/ui/span/issue28498-reject-ex1.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-ex1.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-ex1.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-ex1.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -19,5 +19,5 @@ error[E0597]: `foo.data` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "358fa9b7c450d9609fd8d2ed4d6826fed05c9cb1", "filename": "src/test/ui/span/issue28498-reject-lifetime-param.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-lifetime-param.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-lifetime-param.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-lifetime-param.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -20,5 +20,5 @@ error[E0597]: `first_dropped` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "0aaf2b27f60a8d4e30b482479997a54ba957474d", "filename": "src/test/ui/span/issue28498-reject-passed-to-fn.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-passed-to-fn.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-passed-to-fn.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-passed-to-fn.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -20,5 +20,5 @@ error[E0597]: `first_dropped` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "27a4d2384ab79d672b7aa535824319f805cacad6", "filename": "src/test/ui/span/issue28498-reject-trait-bound.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-trait-bound.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-trait-bound.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fissue28498-reject-trait-bound.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -20,5 +20,5 @@ error[E0597]: `first_dropped` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "f4998e08907a387f55b897ab80f5cc47e203d540", "filename": "src/test/ui/span/lint-unused-unsafe.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Flint-unused-unsafe.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Flint-unused-unsafe.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Flint-unused-unsafe.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -106,5 +106,5 @@ note: because it's nested under this `unsafe` fn\n 44 | | }\n    | |_^\n \n-error: aborting due to previous error(s)\n+error: aborting due to 8 previous errors\n "}, {"sha": "91bdd8a8caddb9b8e554de3774d0cdd19ea1831b", "filename": "src/test/ui/span/loan-extend.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Floan-extend.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Floan-extend.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Floan-extend.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -9,5 +9,5 @@ error[E0597]: `short` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "2294e6476d61fe2dd6c157884821603176b21af3", "filename": "src/test/ui/span/move-closure.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fmove-closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fmove-closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmove-closure.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error[E0308]: mismatched types\n    = note: expected type `()`\n               found type `[closure@$DIR/move-closure.rs:15:17: 15:27]`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "a06cbd04deb4fb4a32bc030387426608e8a913fd", "filename": "src/test/ui/span/multiline-span-E0072.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-E0072.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-E0072.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-E0072.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -12,5 +12,5 @@ error[E0072]: recursive type `ListNode` has infinite size\n    |\n    = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `ListNode` representable\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "3915f1b655cf5bad8dd3d1ba544a6a5fbf39629d", "filename": "src/test/ui/span/multiline-span-simple.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-simple.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-simple.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmultiline-span-simple.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0277]: the trait bound `u32: std::ops::Add<()>` is not satisfied\n    |\n    = help: the trait `std::ops::Add<()>` is not implemented for `u32`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "f8584c6739078d624019f7ce3982296208371826", "filename": "src/test/ui/span/mut-arg-hint.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fmut-arg-hint.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fmut-arg-hint.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmut-arg-hint.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -22,5 +22,5 @@ error[E0596]: cannot borrow immutable borrowed content `*a` as mutable\n 25 |         a.push_str(\"foo\");\n    |         ^ cannot borrow as mutable\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "007a9fad83073ffe808f679460ec3b75d8e659d2", "filename": "src/test/ui/span/mut-ptr-cant-outlive-ref.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fmut-ptr-cant-outlive-ref.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fmut-ptr-cant-outlive-ref.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fmut-ptr-cant-outlive-ref.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -8,5 +8,5 @@ error[E0597]: `b` does not live long enough\n 20 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "c66361c8546b839046fb47b9fcf2556eeba2c395", "filename": "src/test/ui/span/pub-struct-field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fpub-struct-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fpub-struct-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fpub-struct-field.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -15,5 +15,5 @@ error[E0124]: field `bar` is already declared\n 17 |     pub(crate) bar: u8,\n    |     ^^^^^^^^^^^^^^^^^^ field already declared\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "285ab4aee4bc473853c03acae85bbb3073e3581a", "filename": "src/test/ui/span/range-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Frange-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Frange-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Frange-2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -20,5 +20,5 @@ error[E0597]: `b` does not live long enough\n 21 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "b4d0b5a6a25d03557028beec40e27409ccb2b19e", "filename": "src/test/ui/span/recursive-type-field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Frecursive-type-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Frecursive-type-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Frecursive-type-field.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -27,5 +27,5 @@ error[E0072]: recursive type `Bar` has infinite size\n    |\n    = help: insert indirection (e.g., a `Box`, `Rc`, or `&`) at some point to make `Bar` representable\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "29848412e4e7740bbcaac82448e6d4ef6a1c42dd", "filename": "src/test/ui/span/regionck-unboxed-closure-lifetimes.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fregionck-unboxed-closure-lifetimes.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fregionck-unboxed-closure-lifetimes.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregionck-unboxed-closure-lifetimes.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -9,5 +9,5 @@ error[E0597]: `c` does not live long enough\n 20 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "e671f1daf61da1163c9e393b1513345f7b5f1fd1", "filename": "src/test/ui/span/regions-close-over-borrowed-ref-in-obj.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-borrowed-ref-in-obj.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-borrowed-ref-in-obj.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-borrowed-ref-in-obj.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -9,5 +9,5 @@ error[E0597]: borrowed value does not live long enough\n 23 | }\n    | - temporary value needs to live until here\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "a89127b1436c57a187a96d69eb051a28ed2b0f6b", "filename": "src/test/ui/span/regions-close-over-type-parameter-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-type-parameter-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-type-parameter-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-close-over-type-parameter-2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -9,5 +9,5 @@ error[E0597]: `tmp0` does not live long enough\n    |     |\n    |     `tmp0` dropped here while still borrowed\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "cfdd1c8b1539d4205c2e77d11795aa53fc1767cd", "filename": "src/test/ui/span/regions-escape-loop-via-variable.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-variable.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -8,5 +8,5 @@ error[E0597]: `x` does not live long enough\n 23 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "b61df82e8a14f1db996497c321757825f3e2d140", "filename": "src/test/ui/span/regions-escape-loop-via-vec.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-escape-loop-via-vec.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -37,5 +37,5 @@ error[E0506]: cannot assign to `x` because it is borrowed\n 24 |         x += 1; //~ ERROR cannot assign\n    |         ^^^^^^ assignment to borrowed `x` occurs here\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "0960f5e1b25669621049f73a197e6da9cc243b03", "filename": "src/test/ui/span/regions-infer-borrow-scope-within-loop.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fregions-infer-borrow-scope-within-loop.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ error[E0597]: `*x` does not live long enough\n 30 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "02fc9820495a983d05d813e3d8b61dfc33fad926", "filename": "src/test/ui/span/send-is-not-static-ensures-scoping.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-ensures-scoping.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -24,5 +24,5 @@ error[E0597]: `y` does not live long enough\n 35 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "318dab599f5a3f910846d4a826954a7b73337197", "filename": "src/test/ui/span/send-is-not-static-std-sync-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync-2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -32,5 +32,5 @@ error[E0597]: `x` does not live long enough\n 44 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "988ff228105de907bf2c7c77d7489a500d7c94eb", "filename": "src/test/ui/span/send-is-not-static-std-sync.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsend-is-not-static-std-sync.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -52,5 +52,5 @@ error[E0505]: cannot move out of `y` because it is borrowed\n 49 |     drop(y); //~ ERROR cannot move out\n    |          ^ move out of `y` occurs here\n \n-error: aborting due to previous error(s)\n+error: aborting due to 6 previous errors\n "}, {"sha": "b60ccd0fbf348d6dd033d8467966637d66fa449a", "filename": "src/test/ui/span/slice-borrow.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fslice-borrow.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fslice-borrow.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fslice-borrow.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -9,5 +9,5 @@ error[E0597]: borrowed value does not live long enough\n 19 | }\n    | - temporary value needs to live until here\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "c2ab7542d8a98ed8d89e115e3bfde24f3bb5415c", "filename": "src/test/ui/span/suggestion-non-ascii.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fsuggestion-non-ascii.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0608]: cannot index into a value of type `({integer},)`\n 14 |     println!(\"\u2603{}\", tup[0]);\n    |                     ^^^^^^ help: to access tuple elements, use `tup.0`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "dc37acaf3f98eb3a5b320bebfb3c4d65bc40dc13", "filename": "src/test/ui/span/type-binding.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Ftype-binding.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Ftype-binding.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Ftype-binding.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0220]: associated type `Trget` not found for `std::ops::Deref`\n 16 | fn homura<T: Deref<Trget = i32>>(_: T) {}\n    |                    ^^^^^^^^^^^ associated type `Trget` not found\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "dca0a93f897baaa42de4d950161856983dd49876", "filename": "src/test/ui/span/typo-suggestion.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Ftypo-suggestion.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Ftypo-suggestion.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Ftypo-suggestion.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -10,5 +10,5 @@ error[E0425]: cannot find value `fob` in this scope\n 18 |     println!(\"Hello {}\", fob);\n    |                          ^^^ did you mean `foo`?\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "f7c94ed9f73d138438f064a6db1ffefbe38c327b", "filename": "src/test/ui/span/vec-must-not-hide-type-from-dropck.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fvec-must-not-hide-type-from-dropck.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -19,5 +19,5 @@ error[E0597]: `c1` does not live long enough\n     |\n     = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "282e5caf20787ce1bed47cf4425d813575425576", "filename": "src/test/ui/span/vec_refs_data_with_early_death.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fvec_refs_data_with_early_death.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fvec_refs_data_with_early_death.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fvec_refs_data_with_early_death.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -20,5 +20,5 @@ error[E0597]: `y` does not live long enough\n    |\n    = note: values in a scope are dropped in the opposite order they are created\n \n-error: aborting due to previous error(s)\n+error: aborting due to 2 previous errors\n "}, {"sha": "a37b5d17aac98f244dbea5484746a9ced3e4b3d6", "filename": "src/test/ui/span/wf-method-late-bound-regions.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fwf-method-late-bound-regions.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fspan%2Fwf-method-late-bound-regions.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fspan%2Fwf-method-late-bound-regions.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -9,5 +9,5 @@ error[E0597]: `pointer` does not live long enough\n 33 | }\n    | - borrowed value needs to live until here\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "f73dff4f73d0ee43ba06369bcfed4a5a6f3ca13a", "filename": "src/test/ui/static-lifetime.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fstatic-lifetime.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fstatic-lifetime.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fstatic-lifetime.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0477]: the type `std::borrow::Cow<'a, A>` does not fulfill the required l\n    |\n    = note: type must satisfy the static lifetime\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "0ca61127634bcaa8ebc4d40b07dee0a927feaa9d", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-18343.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-18343.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0599]: no method named `closure` found for type `Obj<[closure@$DIR/issue-\n    |\n    = help: use `(o.closure)(...)` if you meant to call the function stored in the `closure` field\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "c6f134f118db70ee1670e34e4b95fb9cd371bef2", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-2392.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-2392.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -86,5 +86,5 @@ error[E0599]: no method named `f3` found for type `FuncContainer` in the current\n     |\n     = help: use `((*self.container).f3)(...)` if you meant to call the function stored in the `f3` field\n \n-error: aborting due to previous error(s)\n+error: aborting due to 11 previous errors\n "}, {"sha": "a45e70d48c99e6200a9c323cecc39f1567759739", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-32128.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-32128.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0599]: no method named `example` found for type `Example` in the current\n    |\n    = help: use `(demo.example)(...)` if you meant to call the function stored in the `example` field\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "d41f7cbdf5658436b40fa134182fd01478826eba", "filename": "src/test/ui/suggestions/confuse-field-and-method/issue-33784.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fissue-33784.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -22,5 +22,5 @@ error[E0599]: no method named `c_fn_ptr` found for type `&D` in the current scop\n    |\n    = help: use `(s.c_fn_ptr)(...)` if you meant to call the function stored in the `c_fn_ptr` field\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "9451926626028a79543267139f04009158e9bcbb", "filename": "src/test/ui/suggestions/confuse-field-and-method/private-field.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fprivate-field.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fprivate-field.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fconfuse-field-and-method%2Fprivate-field.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0599]: no method named `dog_age` found for type `animal::Dog` in the curr\n 26 |     let dog_age = dog.dog_age();\n    |                       ^^^^^^^ private field, not a method\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "8a121b145366250abbcd1d39a05c42ca1d4e63d5", "filename": "src/test/ui/suggestions/tuple-float-index.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Ftuple-float-index.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -7,5 +7,5 @@ error: unexpected token: `1.1`\n    |     |           unexpected token\n    |     help: try parenthesizing the first index `((1, (2, 3)).1).1`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "4d60be15ecaf0aae9a8801d4a1655831da71eb7a", "filename": "src/test/ui/token/bounds-obj-parens.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftoken%2Fbounds-obj-parens.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftoken%2Fbounds-obj-parens.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fbounds-obj-parens.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error: expected one of `!` or `::`, found `<eof>`\n 15 | FAIL\n    | ^^^^ expected one of `!` or `::` here\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "48bbeac75d3d18dc0170d7393cf28d35025e3a31", "filename": "src/test/ui/token/issue-10636-2.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fissue-10636-2.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -24,5 +24,5 @@ error: expected expression, found `)`\n \n error[E0601]: main function not found\n \n-error: aborting due to previous error(s)\n+error: aborting due to 4 previous errors\n "}, {"sha": "50a38da9d8c18ecb4539611534e0f26d0c969c09", "filename": "src/test/ui/token/issue-41155.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fissue-41155.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -14,5 +14,5 @@ error[E0412]: cannot find type `S` in this scope\n \n error[E0601]: main function not found\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "f23d97586b843437002585034875cd2bca7dddd8", "filename": "src/test/ui/token/macro-incomplete-parse.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftoken%2Fmacro-incomplete-parse.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftoken%2Fmacro-incomplete-parse.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Fmacro-incomplete-parse.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -28,5 +28,5 @@ note: caused by the macro expansion here; the usage of `ignored_pat!` is likely\n 37 |         ignored_pat!() => (), //~ NOTE caused by the macro expansion here\n    |         ^^^^^^^^^^^^^^\n \n-error: aborting due to previous error(s)\n+error: aborting due to 3 previous errors\n "}, {"sha": "c765a434b8ac6e86ef1c6f5cffce28b847dea095", "filename": "src/test/ui/token/trailing-plus-in-bounds.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftoken%2Ftrailing-plus-in-bounds.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftoken%2Ftrailing-plus-in-bounds.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftoken%2Ftrailing-plus-in-bounds.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error: expected one of `!` or `::`, found `<eof>`\n 19 | FAIL\n    | ^^^^ expected one of `!` or `::` here\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "8c52bb5a1d3a51d9401efe7d30800c019f4b8323", "filename": "src/test/ui/type-check/cannot_infer_local_or_array.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_array.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_array.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_array.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -6,5 +6,5 @@ error[E0282]: type annotations needed\n    |         |\n    |         consider giving `x` a type\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "4788fad20889e4123904a479d13ed2ade197b7c7", "filename": "src/test/ui/type-check/cannot_infer_local_or_vec.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -8,5 +8,5 @@ error[E0282]: type annotations needed\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "ccffadebe9ee2c177ed408509ae3789ede07e7f9", "filename": "src/test/ui/type-check/cannot_infer_local_or_vec_in_tuples.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec_in_tuples.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec_in_tuples.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fcannot_infer_local_or_vec_in_tuples.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -8,5 +8,5 @@ error[E0282]: type annotations needed\n    |\n    = note: this error originates in a macro outside of the current crate\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "9568411885192a04f4002f0ca87a138159b22f1e", "filename": "src/test/ui/type-check/issue-22897.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftype-check%2Fissue-22897.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftype-check%2Fissue-22897.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fissue-22897.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0282]: type annotations needed\n 14 |     [];\n    |     ^^ cannot infer type for `[_; 0]`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "bb3a371b26e0ceefba9b25e1aff1edc1f6cc28af", "filename": "src/test/ui/type-check/issue-40294.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftype-check%2Fissue-40294.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftype-check%2Fissue-40294.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Fissue-40294.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -12,5 +12,5 @@ error[E0283]: type annotations required: cannot resolve `&'a T: Foo`\n    |\n    = note: required by `Foo`\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}, {"sha": "afbd15ca486bd1e66566ee1269341879986d5e45", "filename": "src/test/ui/type-check/unknown_type_for_closure.stderr", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftype-check%2Funknown_type_for_closure.stderr", "raw_url": "https://github.com/rust-lang/rust/raw/77f40223033bf0c744eb8b4edb07672c13a21557/src%2Ftest%2Fui%2Ftype-check%2Funknown_type_for_closure.stderr", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Ftype-check%2Funknown_type_for_closure.stderr?ref=77f40223033bf0c744eb8b4edb07672c13a21557", "patch": "@@ -4,5 +4,5 @@ error[E0282]: type annotations needed\n 12 |     let x = |_| {    };\n    |              ^ consider giving this closure parameter a type\n \n-error: aborting due to previous error(s)\n+error: aborting due to previous error\n "}]}