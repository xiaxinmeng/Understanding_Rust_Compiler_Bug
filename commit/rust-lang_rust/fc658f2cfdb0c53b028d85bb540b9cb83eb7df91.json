{"sha": "fc658f2cfdb0c53b028d85bb540b9cb83eb7df91", "node_id": "MDY6Q29tbWl0NzI0NzEyOmZjNjU4ZjJjZmRiMGM1M2IwMjhkODViYjU0MGI5Y2I4M2ViN2RmOTE=", "commit": {"author": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-11-22T19:10:55Z"}, "committer": {"name": "Eduard-Mihai Burtescu", "email": "edy.burt@gmail.com", "date": "2017-11-22T19:10:55Z"}, "message": "rustc: don't mark lifetimes as early-bound in the presence of impl Trait.", "tree": {"sha": "64429baf291c52071d56c0db7e7900452458e94c", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/64429baf291c52071d56c0db7e7900452458e94c"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/fc658f2cfdb0c53b028d85bb540b9cb83eb7df91", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/fc658f2cfdb0c53b028d85bb540b9cb83eb7df91", "html_url": "https://github.com/rust-lang/rust/commit/fc658f2cfdb0c53b028d85bb540b9cb83eb7df91", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/fc658f2cfdb0c53b028d85bb540b9cb83eb7df91/comments", "author": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "committer": {"login": "eddyb", "id": 77424, "node_id": "MDQ6VXNlcjc3NDI0", "avatar_url": "https://avatars.githubusercontent.com/u/77424?v=4", "gravatar_id": "", "url": "https://api.github.com/users/eddyb", "html_url": "https://github.com/eddyb", "followers_url": "https://api.github.com/users/eddyb/followers", "following_url": "https://api.github.com/users/eddyb/following{/other_user}", "gists_url": "https://api.github.com/users/eddyb/gists{/gist_id}", "starred_url": "https://api.github.com/users/eddyb/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/eddyb/subscriptions", "organizations_url": "https://api.github.com/users/eddyb/orgs", "repos_url": "https://api.github.com/users/eddyb/repos", "events_url": "https://api.github.com/users/eddyb/events{/privacy}", "received_events_url": "https://api.github.com/users/eddyb/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "45594d5dec4237f49e794a2a854a69f50b63d31e", "url": "https://api.github.com/repos/rust-lang/rust/commits/45594d5dec4237f49e794a2a854a69f50b63d31e", "html_url": "https://github.com/rust-lang/rust/commit/45594d5dec4237f49e794a2a854a69f50b63d31e"}], "stats": {"total": 13, "additions": 0, "deletions": 13}, "files": [{"sha": "fa6f3826ac509d522e2f65e4e5580d6897004fd8", "filename": "src/librustc/middle/resolve_lifetime.rs", "status": "modified", "additions": 0, "deletions": 13, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/fc658f2cfdb0c53b028d85bb540b9cb83eb7df91/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "raw_url": "https://github.com/rust-lang/rust/raw/fc658f2cfdb0c53b028d85bb540b9cb83eb7df91/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmiddle%2Fresolve_lifetime.rs?ref=fc658f2cfdb0c53b028d85bb540b9cb83eb7df91", "patch": "@@ -1675,7 +1675,6 @@ fn insert_late_bound_lifetimes(map: &mut NamedRegionMap,\n \n     let mut appears_in_output = AllCollector {\n         regions: FxHashSet(),\n-        impl_trait: false\n     };\n     intravisit::walk_fn_ret_ty(&mut appears_in_output, &decl.output);\n \n@@ -1688,7 +1687,6 @@ fn insert_late_bound_lifetimes(map: &mut NamedRegionMap,\n     // ignore binders here and scrape up all names we see.\n     let mut appears_in_where_clause = AllCollector {\n         regions: FxHashSet(),\n-        impl_trait: false\n     };\n     for ty_param in generics.ty_params.iter() {\n         walk_list!(&mut appears_in_where_clause,\n@@ -1729,9 +1727,6 @@ fn insert_late_bound_lifetimes(map: &mut NamedRegionMap,\n         // appears in the where clauses? early-bound.\n         if appears_in_where_clause.regions.contains(&name) { continue; }\n \n-        // any `impl Trait` in the return type? early-bound.\n-        if appears_in_output.impl_trait { continue; }\n-\n         // does not appear in the inputs, but appears in the return type? early-bound.\n         if !constrained_by_input.regions.contains(&name) &&\n             appears_in_output.regions.contains(&name) {\n@@ -1790,7 +1785,6 @@ fn insert_late_bound_lifetimes(map: &mut NamedRegionMap,\n \n     struct AllCollector {\n         regions: FxHashSet<hir::LifetimeName>,\n-        impl_trait: bool\n     }\n \n     impl<'v> Visitor<'v> for AllCollector {\n@@ -1801,12 +1795,5 @@ fn insert_late_bound_lifetimes(map: &mut NamedRegionMap,\n         fn visit_lifetime(&mut self, lifetime_ref: &'v hir::Lifetime) {\n             self.regions.insert(lifetime_ref.name);\n         }\n-\n-        fn visit_ty(&mut self, ty: &hir::Ty) {\n-            if let hir::TyImplTraitExistential(..) = ty.node {\n-                self.impl_trait = true;\n-            }\n-            intravisit::walk_ty(self, ty);\n-        }\n     }\n }"}]}