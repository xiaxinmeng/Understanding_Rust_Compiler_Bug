{"sha": "1cfed0d452d739b502c73904d61a1f4496b1acf5", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFjZmVkMGQ0NTJkNzM5YjUwMmM3MzkwNGQ2MWExZjQ0OTZiMWFjZjU=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-03T08:19:16Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2019-04-03T08:41:24Z"}, "message": "be more direct about borrow requirenments", "tree": {"sha": "1f39d07aaf419777b44a2df498396cf7d4845e3e", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1f39d07aaf419777b44a2df498396cf7d4845e3e"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1cfed0d452d739b502c73904d61a1f4496b1acf5", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1cfed0d452d739b502c73904d61a1f4496b1acf5", "html_url": "https://github.com/rust-lang/rust/commit/1cfed0d452d739b502c73904d61a1f4496b1acf5", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1cfed0d452d739b502c73904d61a1f4496b1acf5/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7641873f591dca86e2b31f60fc76b39553892631", "url": "https://api.github.com/repos/rust-lang/rust/commits/7641873f591dca86e2b31f60fc76b39553892631", "html_url": "https://github.com/rust-lang/rust/commit/7641873f591dca86e2b31f60fc76b39553892631"}], "stats": {"total": 14, "additions": 10, "deletions": 4}, "files": [{"sha": "4d58aaca941833ac047d7282c25261bfad9e329c", "filename": "src/libcore/borrow.rs", "status": "modified", "additions": 4, "deletions": 0, "changes": 4, "blob_url": "https://github.com/rust-lang/rust/blob/1cfed0d452d739b502c73904d61a1f4496b1acf5/src%2Flibcore%2Fborrow.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cfed0d452d739b502c73904d61a1f4496b1acf5/src%2Flibcore%2Fborrow.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fborrow.rs?ref=1cfed0d452d739b502c73904d61a1f4496b1acf5", "patch": "@@ -32,6 +32,10 @@\n /// on the identical behavior of these additional trait implementations.\n /// These traits will likely appear as additional trait bounds.\n ///\n+/// In particular `Eq`, `Ord` and `Hash` must be equivalent for\n+/// borrowed and owned values: `x.borrow() == y.borrow()` should give the\n+/// same result as `x == y`.\n+///\n /// If generic code merely needs to work for all types that can\n /// provide a reference to related type `T`, it is often better to use\n /// [`AsRef<T>`] as more types can safely implement it."}, {"sha": "7b9e19e36a293be5a2af5b1f996a94c275452610", "filename": "src/libcore/convert.rs", "status": "modified", "additions": 6, "deletions": 4, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1cfed0d452d739b502c73904d61a1f4496b1acf5/src%2Flibcore%2Fconvert.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1cfed0d452d739b502c73904d61a1f4496b1acf5/src%2Flibcore%2Fconvert.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fconvert.rs?ref=1cfed0d452d739b502c73904d61a1f4496b1acf5", "patch": "@@ -105,11 +105,13 @@ pub const fn identity<T>(x: T) -> T { x }\n /// `&T` or write a custom function.\n ///\n ///\n-/// `AsRef` is very similar to, but serves a slightly different purpose than [`Borrow`]:\n+/// `AsRef` has the same signature as [`Borrow`], but `Borrow` is different in few aspects:\n ///\n-/// - Use `AsRef` when the goal is to simply convert into a reference\n-/// - Use `Borrow` when the goal is related to writing code that is agnostic to\n-///   the type of borrow and whether it is a reference or value\n+/// - Unlike `AsRef`, `Borrow` has a blanket impl for any `T`, and can be used to accept either\n+///   a reference or a value.\n+/// - `Borrow` also requires that `Hash`, `Eq` and `Ord` for borrowed value are\n+///   equivalent to those of the owned value. For this reason, if you want to\n+///   borrow only a single field of a struct you can implement `AsRef`, but not `Borrow`.\n ///\n /// [`Borrow`]: ../../std/borrow/trait.Borrow.html\n ///"}]}