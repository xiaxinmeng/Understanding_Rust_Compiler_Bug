{"sha": "f6414b0187bfc6e5b563a17c85a9f790d6257551", "node_id": "MDY6Q29tbWl0NzI0NzEyOmY2NDE0YjAxODdiZmM2ZTViNTYzYTE3Yzg1YTlmNzkwZDYyNTc1NTE=", "commit": {"author": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-02-01T13:58:57Z"}, "committer": {"name": "S\u00e9bastien Marie", "email": "semarie@users.noreply.github.com", "date": "2015-02-01T14:34:59Z"}, "message": "openbsd: rebase to master\n\n- incoporate changes introduced by #21678", "tree": {"sha": "2a488c75cce82f522d3c8d4ca19f345b97306bff", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/2a488c75cce82f522d3c8d4ca19f345b97306bff"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/f6414b0187bfc6e5b563a17c85a9f790d6257551", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/f6414b0187bfc6e5b563a17c85a9f790d6257551", "html_url": "https://github.com/rust-lang/rust/commit/f6414b0187bfc6e5b563a17c85a9f790d6257551", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/f6414b0187bfc6e5b563a17c85a9f790d6257551/comments", "author": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "committer": {"login": "semarie", "id": 8948701, "node_id": "MDQ6VXNlcjg5NDg3MDE=", "avatar_url": "https://avatars.githubusercontent.com/u/8948701?v=4", "gravatar_id": "", "url": "https://api.github.com/users/semarie", "html_url": "https://github.com/semarie", "followers_url": "https://api.github.com/users/semarie/followers", "following_url": "https://api.github.com/users/semarie/following{/other_user}", "gists_url": "https://api.github.com/users/semarie/gists{/gist_id}", "starred_url": "https://api.github.com/users/semarie/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/semarie/subscriptions", "organizations_url": "https://api.github.com/users/semarie/orgs", "repos_url": "https://api.github.com/users/semarie/repos", "events_url": "https://api.github.com/users/semarie/events{/privacy}", "received_events_url": "https://api.github.com/users/semarie/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fdb5d77d0921f70d4c7b6b1ace15b5d481a6b732", "url": "https://api.github.com/repos/rust-lang/rust/commits/fdb5d77d0921f70d4c7b6b1ace15b5d481a6b732", "html_url": "https://github.com/rust-lang/rust/commit/fdb5d77d0921f70d4c7b6b1ace15b5d481a6b732"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "6f030ee91fe2d6db045ca5daec23dc3dc8240c8c", "filename": "src/libstd/sys/unix/thread.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/f6414b0187bfc6e5b563a17c85a9f790d6257551/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "raw_url": "https://github.com/rust-lang/rust/raw/f6414b0187bfc6e5b563a17c85a9f790d6257551/src%2Flibstd%2Fsys%2Funix%2Fthread.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibstd%2Fsys%2Funix%2Fthread.rs?ref=f6414b0187bfc6e5b563a17c85a9f790d6257551", "patch": "@@ -248,7 +248,9 @@ pub unsafe fn set_name(name: &str) {\n     }\n }\n \n-#[cfg(any(target_os = \"freebsd\", target_os = \"dragonfly\"))]\n+#[cfg(any(target_os = \"freebsd\",\n+          target_os = \"dragonfly\",\n+          target_os = \"openbsd\"))]\n pub unsafe fn set_name(name: &str) {\n     // pthread_set_name_np() since almost forever on all BSDs\n     let cname = CString::from_slice(name.as_bytes());\n@@ -314,7 +316,9 @@ extern {\n                                  stacksize: *mut libc::size_t) -> libc::c_int;\n }\n \n-#[cfg(any(target_os = \"freebsd\", target_os = \"dragonfly\"))]\n+#[cfg(any(target_os = \"freebsd\",\n+          target_os = \"dragonfly\",\n+          target_os = \"openbsd\"))]\n extern {\n     pub fn pthread_self() -> libc::pthread_t;\n     fn pthread_set_name_np(tid: libc::pthread_t, name: *const libc::c_char);\n@@ -330,7 +334,6 @@ extern {\n \n #[cfg(target_os = \"openbsd\")]\n extern {\n-        pub fn pthread_self() -> libc::pthread_t;\n         pub fn pthread_stackseg_np(thread: libc::pthread_t,\n                                    sinfo: *mut stack_t) -> libc::c_uint;\n         pub fn pthread_main_np() -> libc::c_uint;"}]}