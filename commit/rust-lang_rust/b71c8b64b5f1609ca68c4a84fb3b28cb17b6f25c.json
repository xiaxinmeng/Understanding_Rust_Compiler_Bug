{"sha": "b71c8b64b5f1609ca68c4a84fb3b28cb17b6f25c", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI3MWM4YjY0YjVmMTYwOWNhNjhjNGE4NGZiM2IyOGNiMTdiNmYyNWM=", "commit": {"author": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2020-08-27T14:01:52Z"}, "committer": {"name": "csmoe", "email": "csmoe@msn.com", "date": "2020-08-27T14:01:52Z"}, "message": "should not try to apply field accessing on enum", "tree": {"sha": "0f1216bed289d9c9dccb94dd7ae156a9c2c21ca4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/0f1216bed289d9c9dccb94dd7ae156a9c2c21ca4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b71c8b64b5f1609ca68c4a84fb3b28cb17b6f25c", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b71c8b64b5f1609ca68c4a84fb3b28cb17b6f25c", "html_url": "https://github.com/rust-lang/rust/commit/b71c8b64b5f1609ca68c4a84fb3b28cb17b6f25c", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b71c8b64b5f1609ca68c4a84fb3b28cb17b6f25c/comments", "author": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "committer": {"login": "csmoe", "id": 35686186, "node_id": "MDQ6VXNlcjM1Njg2MTg2", "avatar_url": "https://avatars.githubusercontent.com/u/35686186?v=4", "gravatar_id": "", "url": "https://api.github.com/users/csmoe", "html_url": "https://github.com/csmoe", "followers_url": "https://api.github.com/users/csmoe/followers", "following_url": "https://api.github.com/users/csmoe/following{/other_user}", "gists_url": "https://api.github.com/users/csmoe/gists{/gist_id}", "starred_url": "https://api.github.com/users/csmoe/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/csmoe/subscriptions", "organizations_url": "https://api.github.com/users/csmoe/orgs", "repos_url": "https://api.github.com/users/csmoe/repos", "events_url": "https://api.github.com/users/csmoe/events{/privacy}", "received_events_url": "https://api.github.com/users/csmoe/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "7cfcefd1fbbbfefbdc88feb7359e6364d7c0bf8a", "url": "https://api.github.com/repos/rust-lang/rust/commits/7cfcefd1fbbbfefbdc88feb7359e6364d7c0bf8a", "html_url": "https://github.com/rust-lang/rust/commit/7cfcefd1fbbbfefbdc88feb7359e6364d7c0bf8a"}], "stats": {"total": 18, "additions": 11, "deletions": 7}, "files": [{"sha": "582357273d6e375f0a3c759a88c73a4751c5565f", "filename": "src/librustc_typeck/check/expr.rs", "status": "modified", "additions": 11, "deletions": 7, "changes": 18, "blob_url": "https://github.com/rust-lang/rust/blob/b71c8b64b5f1609ca68c4a84fb3b28cb17b6f25c/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b71c8b64b5f1609ca68c4a84fb3b28cb17b6f25c/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_typeck%2Fcheck%2Fexpr.rs?ref=b71c8b64b5f1609ca68c4a84fb3b28cb17b6f25c", "patch": "@@ -1545,13 +1545,17 @@ impl<'a, 'tcx> FnCtxt<'a, 'tcx> {\n                 normalized_ty.kind,\n             );\n             if let ty::Adt(def, _) = normalized_ty.kind {\n-                if def.non_enum_variant().fields.iter().any(|field| field.ident == field_ident) {\n-                    err.span_suggestion_verbose(\n-                        base.span.shrink_to_hi(),\n-                        \"consider awaiting before field access\",\n-                        \".await\".to_string(),\n-                        Applicability::MaybeIncorrect,\n-                    );\n+                // no field access on enum type\n+                if !def.is_enum() {\n+                    if def.non_enum_variant().fields.iter().any(|field| field.ident == field_ident)\n+                    {\n+                        err.span_suggestion_verbose(\n+                            base.span.shrink_to_hi(),\n+                            \"consider awaiting before field access\",\n+                            \".await\".to_string(),\n+                            Applicability::MaybeIncorrect,\n+                        );\n+                    }\n                 }\n             }\n         }"}]}