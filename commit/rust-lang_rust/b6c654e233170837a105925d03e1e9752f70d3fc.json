{"sha": "b6c654e233170837a105925d03e1e9752f70d3fc", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI2YzY1NGUyMzMxNzA4MzdhMTA1OTI1ZDAzZTFlOTc1MmY3MGQzZmM=", "commit": {"author": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-28T16:42:55Z"}, "committer": {"name": "Aleksey Kladov", "email": "aleksey.kladov@gmail.com", "date": "2018-08-28T16:42:55Z"}, "message": "reread files from disk", "tree": {"sha": "ca7b213c8b92558fdb621e73a8425751aacbd049", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/ca7b213c8b92558fdb621e73a8425751aacbd049"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b6c654e233170837a105925d03e1e9752f70d3fc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b6c654e233170837a105925d03e1e9752f70d3fc", "html_url": "https://github.com/rust-lang/rust/commit/b6c654e233170837a105925d03e1e9752f70d3fc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b6c654e233170837a105925d03e1e9752f70d3fc/comments", "author": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "committer": {"login": "matklad", "id": 1711539, "node_id": "MDQ6VXNlcjE3MTE1Mzk=", "avatar_url": "https://avatars.githubusercontent.com/u/1711539?v=4", "gravatar_id": "", "url": "https://api.github.com/users/matklad", "html_url": "https://github.com/matklad", "followers_url": "https://api.github.com/users/matklad/followers", "following_url": "https://api.github.com/users/matklad/following{/other_user}", "gists_url": "https://api.github.com/users/matklad/gists{/gist_id}", "starred_url": "https://api.github.com/users/matklad/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/matklad/subscriptions", "organizations_url": "https://api.github.com/users/matklad/orgs", "repos_url": "https://api.github.com/users/matklad/repos", "events_url": "https://api.github.com/users/matklad/events{/privacy}", "received_events_url": "https://api.github.com/users/matklad/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "dea6ed73fac6f3f4daf38b1cb6df4c8fb68872b7", "url": "https://api.github.com/repos/rust-lang/rust/commits/dea6ed73fac6f3f4daf38b1cb6df4c8fb68872b7", "html_url": "https://github.com/rust-lang/rust/commit/dea6ed73fac6f3f4daf38b1cb6df4c8fb68872b7"}], "stats": {"total": 7, "additions": 5, "deletions": 2}, "files": [{"sha": "1982e727f6af3310a4bec08cb41179a6d05bda9f", "filename": "crates/server/src/server_world.rs", "status": "modified", "additions": 5, "deletions": 2, "changes": 7, "blob_url": "https://github.com/rust-lang/rust/blob/b6c654e233170837a105925d03e1e9752f70d3fc/crates%2Fserver%2Fsrc%2Fserver_world.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b6c654e233170837a105925d03e1e9752f70d3fc/crates%2Fserver%2Fsrc%2Fserver_world.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/crates%2Fserver%2Fsrc%2Fserver_world.rs?ref=b6c654e233170837a105925d03e1e9752f70d3fc", "patch": "@@ -1,4 +1,5 @@\n use std::{\n+    fs,\n     path::{PathBuf, Path},\n     collections::HashMap,\n };\n@@ -78,10 +79,12 @@ impl ServerWorldState {\n         let file_id = self.path_map.get_id(path).ok_or_else(|| {\n             format_err!(\"change to unknown file: {}\", path.display())\n         })?;\n-        let text = match self.mem_map.remove(&file_id) {\n-            Some(text) => text,\n+        match self.mem_map.remove(&file_id) {\n+            Some(_) => (),\n             None => bail!(\"unmatched close notification\"),\n         };\n+        // Do this via file watcher ideally.\n+        let text = fs::read_to_string(path).ok();\n         self.analysis.change_file(file_id, text);\n         Ok(())\n     }"}]}