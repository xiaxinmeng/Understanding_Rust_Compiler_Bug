{"sha": "b93753ee219729a8a762b85fd34c8b8d9f3be6d0", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI5Mzc1M2VlMjE5NzI5YThhNzYyYjg1ZmQzNGM4YjhkOWYzYmU2ZDA=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2021-05-17T16:51:59Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2021-05-17T16:51:59Z"}, "message": "Rollup merge of #85087 - hyd-dev:lots-of-abis, r=RalfJung\n\n`eval_fn_call`: check the ABI of `body.source`\n\nAnd stop checking `instance_ty.fn_sig(*self.tcx).abi()`, if the function is not an intrinsic.\nAddresses https://github.com/rust-lang/miri/pull/1776#discussion_r615381169.\nNo idea how to test this without Miri...", "tree": {"sha": "bf476baa613bde695319e6486542efe4478197b5", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/bf476baa613bde695319e6486542efe4478197b5"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b93753ee219729a8a762b85fd34c8b8d9f3be6d0", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJgop8xCRBK7hj4Ov3rIwAAxqQIAJLWGDAgIacl2gpboEd5E8Sq\nwtwwf3Lekgpbi9g/R/BqLyVrAMW5iGbeomqtwQmchqclf2/qXXkb9y65VoSmaa5/\nBjKviA/67zDWrakdOXCKP9BlQf6L1bKOpq1nuebZdhKK1rUJRdu0nI6VSgSyIUzW\nAAr3o3bQvbqYjrhgqkdrXoTKDJBKMmOJ5jGk7oke5W09jAr3rwejfIXViYSICU9I\nyOclAgM08IG/eoYXBhgjZ0eQc9OidxWdq+rMwcLAF7Y0nBUZJ8wUr6cRRjTiuMR0\nNdJN0FbxGnuRgWQpggysVUJhL9IlE8xZImHU+ow5mCC4qanNFGcJpq2HpXoRFKc=\n=5ysW\n-----END PGP SIGNATURE-----\n", "payload": "tree bf476baa613bde695319e6486542efe4478197b5\nparent 9964284fed181676300aad693449f5b751e35ff2\nparent 97bc0eefe7566955eedff5fb587807224b2387c3\nauthor Ralf Jung <post@ralfj.de> 1621270319 +0200\ncommitter GitHub <noreply@github.com> 1621270319 +0200\n\nRollup merge of #85087 - hyd-dev:lots-of-abis, r=RalfJung\n\n`eval_fn_call`: check the ABI of `body.source`\n\nAnd stop checking `instance_ty.fn_sig(*self.tcx).abi()`, if the function is not an intrinsic.\nAddresses https://github.com/rust-lang/miri/pull/1776#discussion_r615381169.\nNo idea how to test this without Miri...\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b93753ee219729a8a762b85fd34c8b8d9f3be6d0", "html_url": "https://github.com/rust-lang/rust/commit/b93753ee219729a8a762b85fd34c8b8d9f3be6d0", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b93753ee219729a8a762b85fd34c8b8d9f3be6d0/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "9964284fed181676300aad693449f5b751e35ff2", "url": "https://api.github.com/repos/rust-lang/rust/commits/9964284fed181676300aad693449f5b751e35ff2", "html_url": "https://github.com/rust-lang/rust/commit/9964284fed181676300aad693449f5b751e35ff2"}, {"sha": "97bc0eefe7566955eedff5fb587807224b2387c3", "url": "https://api.github.com/repos/rust-lang/rust/commits/97bc0eefe7566955eedff5fb587807224b2387c3", "html_url": "https://github.com/rust-lang/rust/commit/97bc0eefe7566955eedff5fb587807224b2387c3"}], "stats": {"total": 29, "additions": 18, "deletions": 11}, "files": [{"sha": "a7fcb41f74a991b1ac08f984039dd3b936e2f560", "filename": "compiler/rustc_mir/src/interpret/terminator.rs", "status": "modified", "additions": 18, "deletions": 11, "changes": 29, "blob_url": "https://github.com/rust-lang/rust/blob/b93753ee219729a8a762b85fd34c8b8d9f3be6d0/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fterminator.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b93753ee219729a8a762b85fd34c8b8d9f3be6d0/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fterminator.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_mir%2Fsrc%2Finterpret%2Fterminator.rs?ref=b93753ee219729a8a762b85fd34c8b8d9f3be6d0", "patch": "@@ -3,7 +3,10 @@ use std::convert::TryFrom;\n \n use rustc_middle::ty::layout::TyAndLayout;\n use rustc_middle::ty::Instance;\n-use rustc_middle::{mir, ty};\n+use rustc_middle::{\n+    mir,\n+    ty::{self, Ty},\n+};\n use rustc_target::abi::{self, LayoutOf as _};\n use rustc_target::spec::abi::Abi;\n \n@@ -228,15 +231,12 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n         };\n \n         // ABI check\n-        {\n-            let callee_abi = {\n-                let instance_ty = instance.ty(*self.tcx, self.param_env);\n-                match instance_ty.kind() {\n-                    ty::FnDef(..) => instance_ty.fn_sig(*self.tcx).abi(),\n-                    ty::Closure(..) => Abi::RustCall,\n-                    ty::Generator(..) => Abi::Rust,\n-                    _ => span_bug!(self.cur_span(), \"unexpected callee ty: {:?}\", instance_ty),\n-                }\n+        let check_abi = |this: &Self, instance_ty: Ty<'tcx>| -> InterpResult<'tcx> {\n+            let callee_abi = match instance_ty.kind() {\n+                ty::FnDef(..) => instance_ty.fn_sig(*this.tcx).abi(),\n+                ty::Closure(..) => Abi::RustCall,\n+                ty::Generator(..) => Abi::Rust,\n+                _ => span_bug!(this.cur_span(), \"unexpected callee ty: {:?}\", instance_ty),\n             };\n             let normalize_abi = |abi| match abi {\n                 Abi::Rust | Abi::RustCall | Abi::RustIntrinsic | Abi::PlatformIntrinsic =>\n@@ -253,10 +253,12 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                     caller_abi.name()\n                 )\n             }\n-        }\n+            Ok(())\n+        };\n \n         match instance.def {\n             ty::InstanceDef::Intrinsic(..) => {\n+                check_abi(self, instance.ty(*self.tcx, self.param_env))?;\n                 assert!(caller_abi == Abi::RustIntrinsic || caller_abi == Abi::PlatformIntrinsic);\n                 M::call_intrinsic(self, instance, args, ret, unwind)\n             }\n@@ -274,6 +276,11 @@ impl<'mir, 'tcx: 'mir, M: Machine<'mir, 'tcx>> InterpCx<'mir, 'tcx, M> {\n                         None => return Ok(()),\n                     };\n \n+                // Check against the ABI of the MIR body we are calling (not the ABI of `instance`;\n+                // these can differ when `find_mir_or_eval_fn` does something clever like resolve\n+                // exported symbol names).\n+                check_abi(self, self.tcx.type_of(body.source.def_id()))?;\n+\n                 self.push_stack_frame(\n                     instance,\n                     body,"}]}