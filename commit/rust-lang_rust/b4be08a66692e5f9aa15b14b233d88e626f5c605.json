{"sha": "b4be08a66692e5f9aa15b14b233d88e626f5c605", "node_id": "MDY6Q29tbWl0NzI0NzEyOmI0YmUwOGE2NjY5MmU1ZjlhYTE1YjE0YjIzM2Q4OGU2MjZmNWM2MDU=", "commit": {"author": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-06-30T13:35:39Z"}, "committer": {"name": "Ralf Jung", "email": "post@ralfj.de", "date": "2019-07-04T08:38:54Z"}, "message": "fix for tidy", "tree": {"sha": "c123d376117523e1cd74933643e31200c66d9264", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c123d376117523e1cd74933643e31200c66d9264"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/b4be08a66692e5f9aa15b14b233d88e626f5c605", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/b4be08a66692e5f9aa15b14b233d88e626f5c605", "html_url": "https://github.com/rust-lang/rust/commit/b4be08a66692e5f9aa15b14b233d88e626f5c605", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/b4be08a66692e5f9aa15b14b233d88e626f5c605/comments", "author": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "committer": {"login": "RalfJung", "id": 330628, "node_id": "MDQ6VXNlcjMzMDYyOA==", "avatar_url": "https://avatars.githubusercontent.com/u/330628?v=4", "gravatar_id": "", "url": "https://api.github.com/users/RalfJung", "html_url": "https://github.com/RalfJung", "followers_url": "https://api.github.com/users/RalfJung/followers", "following_url": "https://api.github.com/users/RalfJung/following{/other_user}", "gists_url": "https://api.github.com/users/RalfJung/gists{/gist_id}", "starred_url": "https://api.github.com/users/RalfJung/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/RalfJung/subscriptions", "organizations_url": "https://api.github.com/users/RalfJung/orgs", "repos_url": "https://api.github.com/users/RalfJung/repos", "events_url": "https://api.github.com/users/RalfJung/events{/privacy}", "received_events_url": "https://api.github.com/users/RalfJung/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "486720f0800fd53cb0466f20bbba840798fe5da3", "url": "https://api.github.com/repos/rust-lang/rust/commits/486720f0800fd53cb0466f20bbba840798fe5da3", "html_url": "https://github.com/rust-lang/rust/commit/486720f0800fd53cb0466f20bbba840798fe5da3"}], "stats": {"total": 2, "additions": 1, "deletions": 1}, "files": [{"sha": "0bd732eb31d6d907543046fc55a86398cc4d1092", "filename": "src/librustc_mir/interpret/memory.rs", "status": "modified", "additions": 1, "deletions": 1, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/b4be08a66692e5f9aa15b14b233d88e626f5c605/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "raw_url": "https://github.com/rust-lang/rust/raw/b4be08a66692e5f9aa15b14b233d88e626f5c605/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Finterpret%2Fmemory.rs?ref=b4be08a66692e5f9aa15b14b233d88e626f5c605", "patch": "@@ -154,7 +154,7 @@ impl<'mir, 'tcx, M: Machine<'mir, 'tcx>> Memory<'mir, 'tcx, M> {\n         let id = match fn_val {\n             FnVal::Instance(instance) => self.tcx.alloc_map.lock().create_fn_alloc(instance),\n             FnVal::Other(extra) => {\n-                // TODO: Should we have a cache here?\n+                // FIXME(RalfJung): Should we have a cache here?\n                 let id = self.tcx.alloc_map.lock().reserve();\n                 let old = self.extra_fn_ptr_map.insert(id, extra);\n                 assert!(old.is_none());"}]}