{"sha": "1a3bc79c686e246cb5088ed16bdc648d1564ffb2", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFhM2JjNzljNjg2ZTI0NmNiNTA4OGVkMTZiZGM2NDhkMTU2NGZmYjI=", "commit": {"author": {"name": "Kevin Stenerson", "email": "kstenerson@developers.wyyerd.com", "date": "2018-11-06T05:48:49Z"}, "committer": {"name": "Kevin Stenerson", "email": "kstenerson@developers.wyyerd.com", "date": "2018-11-16T21:57:43Z"}, "message": "Preserve possibly one whitespace for brace macros", "tree": {"sha": "1b7b33a6bcb8c3e669e2814d7129655f766f3356", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b7b33a6bcb8c3e669e2814d7129655f766f3356"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1a3bc79c686e246cb5088ed16bdc648d1564ffb2", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1a3bc79c686e246cb5088ed16bdc648d1564ffb2", "html_url": "https://github.com/rust-lang/rust/commit/1a3bc79c686e246cb5088ed16bdc648d1564ffb2", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1a3bc79c686e246cb5088ed16bdc648d1564ffb2/comments", "author": {"login": "kestred", "id": 2653498, "node_id": "MDQ6VXNlcjI2NTM0OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2653498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kestred", "html_url": "https://github.com/kestred", "followers_url": "https://api.github.com/users/kestred/followers", "following_url": "https://api.github.com/users/kestred/following{/other_user}", "gists_url": "https://api.github.com/users/kestred/gists{/gist_id}", "starred_url": "https://api.github.com/users/kestred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kestred/subscriptions", "organizations_url": "https://api.github.com/users/kestred/orgs", "repos_url": "https://api.github.com/users/kestred/repos", "events_url": "https://api.github.com/users/kestred/events{/privacy}", "received_events_url": "https://api.github.com/users/kestred/received_events", "type": "User", "site_admin": false}, "committer": {"login": "kestred", "id": 2653498, "node_id": "MDQ6VXNlcjI2NTM0OTg=", "avatar_url": "https://avatars.githubusercontent.com/u/2653498?v=4", "gravatar_id": "", "url": "https://api.github.com/users/kestred", "html_url": "https://github.com/kestred", "followers_url": "https://api.github.com/users/kestred/followers", "following_url": "https://api.github.com/users/kestred/following{/other_user}", "gists_url": "https://api.github.com/users/kestred/gists{/gist_id}", "starred_url": "https://api.github.com/users/kestred/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/kestred/subscriptions", "organizations_url": "https://api.github.com/users/kestred/orgs", "repos_url": "https://api.github.com/users/kestred/repos", "events_url": "https://api.github.com/users/kestred/events{/privacy}", "received_events_url": "https://api.github.com/users/kestred/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "fa9fd5cd2ed079ec76c6e27fb4190d57677e1456", "url": "https://api.github.com/repos/rust-lang/rust/commits/fa9fd5cd2ed079ec76c6e27fb4190d57677e1456", "html_url": "https://github.com/rust-lang/rust/commit/fa9fd5cd2ed079ec76c6e27fb4190d57677e1456"}], "stats": {"total": 20, "additions": 19, "deletions": 1}, "files": [{"sha": "ca0de8fbb237ef7abe0014492a4d15d84ea2eb81", "filename": "src/macros.rs", "status": "modified", "additions": 13, "deletions": 1, "changes": 14, "blob_url": "https://github.com/rust-lang/rust/blob/1a3bc79c686e246cb5088ed16bdc648d1564ffb2/src%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a3bc79c686e246cb5088ed16bdc648d1564ffb2/src%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fmacros.rs?ref=1a3bc79c686e246cb5088ed16bdc648d1564ffb2", "patch": "@@ -256,7 +256,19 @@ pub fn rewrite_macro_inner(\n             }\n             DelimToken::Paren => Some(format!(\"{}()\", macro_name)),\n             DelimToken::Bracket => Some(format!(\"{}[]\", macro_name)),\n-            DelimToken::Brace => Some(format!(\"{}{{}}\", macro_name)),\n+            DelimToken::Brace => {\n+                // Preserve at most one space before the braces.\n+                let char_after_bang = context\n+                    .snippet(mac.span)\n+                    .split('!')\n+                    .nth(1)\n+                    .and_then(|x| x.chars().next());\n+                if let Some(' ') = char_after_bang {\n+                    Some(format!(\"{} {{}}\", macro_name))\n+                } else {\n+                    Some(format!(\"{}{{}}\", macro_name))\n+                }\n+            }\n             _ => unreachable!(),\n         };\n     }"}, {"sha": "383fc723b5b66d92fc1c9209c2b84b1870805afd", "filename": "tests/source/macros.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1a3bc79c686e246cb5088ed16bdc648d1564ffb2/tests%2Fsource%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a3bc79c686e246cb5088ed16bdc648d1564ffb2/tests%2Fsource%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Fsource%2Fmacros.rs?ref=1a3bc79c686e246cb5088ed16bdc648d1564ffb2", "patch": "@@ -106,6 +106,9 @@ fn main() {\n \n impl X {\n     empty_invoc!{}\n+\n+    // Don't format empty either!\n+    empty_invoc! {}\n }\n \n fn issue_1279() {"}, {"sha": "70ed0b042fe16c4325b772927d6f18ec779097cf", "filename": "tests/target/macros.rs", "status": "modified", "additions": 3, "deletions": 0, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/1a3bc79c686e246cb5088ed16bdc648d1564ffb2/tests%2Ftarget%2Fmacros.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1a3bc79c686e246cb5088ed16bdc648d1564ffb2/tests%2Ftarget%2Fmacros.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/tests%2Ftarget%2Fmacros.rs?ref=1a3bc79c686e246cb5088ed16bdc648d1564ffb2", "patch": "@@ -132,6 +132,9 @@ fn main() {\n \n impl X {\n     empty_invoc!{}\n+\n+    // Don't format empty either!\n+    empty_invoc! {}\n }\n \n fn issue_1279() {"}]}