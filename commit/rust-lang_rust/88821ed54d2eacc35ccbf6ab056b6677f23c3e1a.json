{"sha": "88821ed54d2eacc35ccbf6ab056b6677f23c3e1a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjg4ODIxZWQ1NGQyZWFjYzM1Y2NiZjZhYjA1NmI2Njc3ZjIzYzNlMWE=", "commit": {"author": {"name": "David Haig", "email": "david@ninjasource.com", "date": "2019-11-25T15:27:42Z"}, "committer": {"name": "David Haig", "email": "david@ninjasource.com", "date": "2019-11-28T07:43:53Z"}, "message": "Fixed merge issue", "tree": {"sha": "c70da7b575f832d31b648c537d9a3f4410e34663", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c70da7b575f832d31b648c537d9a3f4410e34663"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/88821ed54d2eacc35ccbf6ab056b6677f23c3e1a", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/88821ed54d2eacc35ccbf6ab056b6677f23c3e1a", "html_url": "https://github.com/rust-lang/rust/commit/88821ed54d2eacc35ccbf6ab056b6677f23c3e1a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/88821ed54d2eacc35ccbf6ab056b6677f23c3e1a/comments", "author": null, "committer": null, "parents": [{"sha": "fb0972dadf7b0c83519c88d5b5353d502feeef12", "url": "https://api.github.com/repos/rust-lang/rust/commits/fb0972dadf7b0c83519c88d5b5353d502feeef12", "html_url": "https://github.com/rust-lang/rust/commit/fb0972dadf7b0c83519c88d5b5353d502feeef12"}], "stats": {"total": 10, "additions": 10, "deletions": 0}, "files": [{"sha": "67dc1da8a40e47e4b6d69ea2f5a4bbc75d77395b", "filename": "src/librustc/mir/mod.rs", "status": "modified", "additions": 10, "deletions": 0, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/88821ed54d2eacc35ccbf6ab056b6677f23c3e1a/src%2Flibrustc%2Fmir%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/88821ed54d2eacc35ccbf6ab056b6677f23c3e1a/src%2Flibrustc%2Fmir%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc%2Fmir%2Fmod.rs?ref=88821ed54d2eacc35ccbf6ab056b6677f23c3e1a", "patch": "@@ -3048,6 +3048,16 @@ impl<'tcx> TypeFoldable<'tcx> for Terminator<'tcx> {\n     }\n }\n \n+impl<'tcx> TypeFoldable<'tcx> for GeneratorKind {\n+    fn super_fold_with<F: TypeFolder<'tcx>>(&self, _: &mut F) -> Self {\n+        *self\n+    }\n+\n+    fn super_visit_with<V: TypeVisitor<'tcx>>(&self, _: &mut V) -> bool {\n+        false\n+    }\n+}\n+\n impl<'tcx> TypeFoldable<'tcx> for Place<'tcx> {\n     fn super_fold_with<F: TypeFolder<'tcx>>(&self, folder: &mut F) -> Self {\n         Place {"}]}