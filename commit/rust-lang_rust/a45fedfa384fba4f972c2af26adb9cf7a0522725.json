{"sha": "a45fedfa384fba4f972c2af26adb9cf7a0522725", "node_id": "MDY6Q29tbWl0NzI0NzEyOmE0NWZlZGZhMzg0ZmJhNGY5NzJjMmFmMjZhZGI5Y2Y3YTA1MjI3MjU=", "commit": {"author": {"name": "Jason Orendorff", "email": "jason.orendorff@gmail.com", "date": "2017-04-03T20:27:42Z"}, "committer": {"name": "Jason Orendorff", "email": "jason.orendorff@gmail.com", "date": "2017-04-04T18:40:56Z"}, "message": "simplify implementation of [T]::splitn and friends #41020", "tree": {"sha": "25ee636fca88a7eb92ef1a8b9b6ab7db7ab181d4", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/25ee636fca88a7eb92ef1a8b9b6ab7db7ab181d4"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/a45fedfa384fba4f972c2af26adb9cf7a0522725", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/a45fedfa384fba4f972c2af26adb9cf7a0522725", "html_url": "https://github.com/rust-lang/rust/commit/a45fedfa384fba4f972c2af26adb9cf7a0522725", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/a45fedfa384fba4f972c2af26adb9cf7a0522725/comments", "author": {"login": "jorendorff", "id": 283361, "node_id": "MDQ6VXNlcjI4MzM2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/283361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorendorff", "html_url": "https://github.com/jorendorff", "followers_url": "https://api.github.com/users/jorendorff/followers", "following_url": "https://api.github.com/users/jorendorff/following{/other_user}", "gists_url": "https://api.github.com/users/jorendorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorendorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorendorff/subscriptions", "organizations_url": "https://api.github.com/users/jorendorff/orgs", "repos_url": "https://api.github.com/users/jorendorff/repos", "events_url": "https://api.github.com/users/jorendorff/events{/privacy}", "received_events_url": "https://api.github.com/users/jorendorff/received_events", "type": "User", "site_admin": true}, "committer": {"login": "jorendorff", "id": 283361, "node_id": "MDQ6VXNlcjI4MzM2MQ==", "avatar_url": "https://avatars.githubusercontent.com/u/283361?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jorendorff", "html_url": "https://github.com/jorendorff", "followers_url": "https://api.github.com/users/jorendorff/followers", "following_url": "https://api.github.com/users/jorendorff/following{/other_user}", "gists_url": "https://api.github.com/users/jorendorff/gists{/gist_id}", "starred_url": "https://api.github.com/users/jorendorff/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jorendorff/subscriptions", "organizations_url": "https://api.github.com/users/jorendorff/orgs", "repos_url": "https://api.github.com/users/jorendorff/repos", "events_url": "https://api.github.com/users/jorendorff/events{/privacy}", "received_events_url": "https://api.github.com/users/jorendorff/received_events", "type": "User", "site_admin": true}, "parents": [{"sha": "2e3f0d845113995c26a9d59dd69146975a692516", "url": "https://api.github.com/repos/rust-lang/rust/commits/2e3f0d845113995c26a9d59dd69146975a692516", "html_url": "https://github.com/rust-lang/rust/commit/2e3f0d845113995c26a9d59dd69146975a692516"}], "stats": {"total": 26, "additions": 9, "deletions": 17}, "files": [{"sha": "6e3f11ec7fbaec1bb5ab96bee7649d54d4283882", "filename": "src/libcore/slice/mod.rs", "status": "modified", "additions": 9, "deletions": 17, "changes": 26, "blob_url": "https://github.com/rust-lang/rust/blob/a45fedfa384fba4f972c2af26adb9cf7a0522725/src%2Flibcore%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/a45fedfa384fba4f972c2af26adb9cf7a0522725/src%2Flibcore%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fslice%2Fmod.rs?ref=a45fedfa384fba4f972c2af26adb9cf7a0522725", "patch": "@@ -315,8 +315,7 @@ impl<T> SliceExt for [T] {\n         SplitN {\n             inner: GenericSplitN {\n                 iter: self.split(pred),\n-                count: n,\n-                invert: false\n+                count: n\n             }\n         }\n     }\n@@ -327,9 +326,8 @@ impl<T> SliceExt for [T] {\n     {\n         RSplitN {\n             inner: GenericSplitN {\n-                iter: self.split(pred),\n-                count: n,\n-                invert: true\n+                iter: self.rsplit(pred),\n+                count: n\n             }\n         }\n     }\n@@ -504,8 +502,7 @@ impl<T> SliceExt for [T] {\n         SplitNMut {\n             inner: GenericSplitN {\n                 iter: self.split_mut(pred),\n-                count: n,\n-                invert: false\n+                count: n\n             }\n         }\n     }\n@@ -516,9 +513,8 @@ impl<T> SliceExt for [T] {\n     {\n         RSplitNMut {\n             inner: GenericSplitN {\n-                iter: self.split_mut(pred),\n-                count: n,\n-                invert: true\n+                iter: self.rsplit_mut(pred),\n+                count: n\n             }\n         }\n     }\n@@ -1881,7 +1877,6 @@ impl<'a, T, P> FusedIterator for RSplitMut<'a, T, P> where P: FnMut(&T) -> bool\n struct GenericSplitN<I> {\n     iter: I,\n     count: usize,\n-    invert: bool\n }\n \n impl<T, I: SplitIter<Item=T>> Iterator for GenericSplitN<I> {\n@@ -1892,10 +1887,7 @@ impl<T, I: SplitIter<Item=T>> Iterator for GenericSplitN<I> {\n         match self.count {\n             0 => None,\n             1 => { self.count -= 1; self.iter.finish() }\n-            _ => {\n-                self.count -= 1;\n-                if self.invert {self.iter.next_back()} else {self.iter.next()}\n-            }\n+            _ => { self.count -= 1; self.iter.next() }\n         }\n     }\n \n@@ -1937,7 +1929,7 @@ impl<'a, T: 'a + fmt::Debug, P> fmt::Debug for SplitN<'a, T, P> where P: FnMut(&\n /// [slices]: ../../std/primitive.slice.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct RSplitN<'a, T: 'a, P> where P: FnMut(&T) -> bool {\n-    inner: GenericSplitN<Split<'a, T, P>>\n+    inner: GenericSplitN<RSplit<'a, T, P>>\n }\n \n #[stable(feature = \"core_impl_debug\", since = \"1.9.0\")]\n@@ -1980,7 +1972,7 @@ impl<'a, T: 'a + fmt::Debug, P> fmt::Debug for SplitNMut<'a, T, P> where P: FnMu\n /// [slices]: ../../std/primitive.slice.html\n #[stable(feature = \"rust1\", since = \"1.0.0\")]\n pub struct RSplitNMut<'a, T: 'a, P> where P: FnMut(&T) -> bool {\n-    inner: GenericSplitN<SplitMut<'a, T, P>>\n+    inner: GenericSplitN<RSplitMut<'a, T, P>>\n }\n \n #[stable(feature = \"core_impl_debug\", since = \"1.9.0\")]"}]}