{"sha": "9c04454e7bb4aeb6592bc0164fce182d0a83e754", "node_id": "MDY6Q29tbWl0NzI0NzEyOjljMDQ0NTRlN2JiNGFlYjY1OTJiYzAxNjRmY2UxODJkMGE4M2U3NTQ=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-28T00:33:22Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2012-08-28T00:33:22Z"}, "message": "libcore: Implement equality for pointers", "tree": {"sha": "120d5390467edef0a7f26c0938c27532f0ffb798", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/120d5390467edef0a7f26c0938c27532f0ffb798"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/9c04454e7bb4aeb6592bc0164fce182d0a83e754", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/9c04454e7bb4aeb6592bc0164fce182d0a83e754", "html_url": "https://github.com/rust-lang/rust/commit/9c04454e7bb4aeb6592bc0164fce182d0a83e754", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/9c04454e7bb4aeb6592bc0164fce182d0a83e754/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5792244d03149fafdf65fc1bbc05b24323fbfa1a", "url": "https://api.github.com/repos/rust-lang/rust/commits/5792244d03149fafdf65fc1bbc05b24323fbfa1a", "html_url": "https://github.com/rust-lang/rust/commit/5792244d03149fafdf65fc1bbc05b24323fbfa1a"}], "stats": {"total": 6, "additions": 6, "deletions": 0}, "files": [{"sha": "0a2ffd1d90456c743c5a4e6efca406437b7ed801", "filename": "src/libcore/ptr.rs", "status": "modified", "additions": 6, "deletions": 0, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/9c04454e7bb4aeb6592bc0164fce182d0a83e754/src%2Flibcore%2Fptr.rs", "raw_url": "https://github.com/rust-lang/rust/raw/9c04454e7bb4aeb6592bc0164fce182d0a83e754/src%2Flibcore%2Fptr.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fptr.rs?ref=9c04454e7bb4aeb6592bc0164fce182d0a83e754", "patch": "@@ -18,6 +18,7 @@ export buf_len;\n export position;\n export Ptr;\n \n+import cmp::Eq;\n import libc::{c_void, size_t};\n \n #[nolink]\n@@ -170,6 +171,11 @@ impl<T> *T: Ptr {\n     pure fn is_not_null() -> bool { is_not_null(self) }\n }\n \n+// Equality for pointers\n+impl<T: Eq> *T : Eq {\n+    pure fn eq(&&other: *T) -> bool { self == other }\n+}\n+\n #[test]\n fn test() {\n     unsafe {"}]}