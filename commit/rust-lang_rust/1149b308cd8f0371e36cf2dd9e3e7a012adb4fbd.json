{"sha": "1149b308cd8f0371e36cf2dd9e3e7a012adb4fbd", "node_id": "MDY6Q29tbWl0NzI0NzEyOjExNDliMzA4Y2Q4ZjAzNzFlMzZjZjJkZDllM2U3YTAxMmFkYjRmYmQ=", "commit": {"author": {"name": "Jonas Schievink", "email": "jonasschievink@gmail.com", "date": "2020-09-25T17:42:39Z"}, "committer": {"name": "GitHub", "email": "noreply@github.com", "date": "2020-09-25T17:42:39Z"}, "message": "Rollup merge of #77097 - fusion-engineering-forks:slice-ptr-range-const-fn, r=oli-obk\n\nMake [].as_[mut_]ptr_range() (unstably) const.\n\nGated behind `const_ptr_offset`, as suggested by https://github.com/rust-lang/rust/issues/65807#issuecomment-697229404\n\nThis also marks `[].as_mut_ptr()` as const, because it's used by `as_mut_ptr_range`. I gated it behind the same feature, because I figured it's not worth adding a separate tracking issue for const `as_mut_ptr`.", "tree": {"sha": "a513b11ecd4942979c8c7e2efb17ed5a8fbaeffe", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/a513b11ecd4942979c8c7e2efb17ed5a8fbaeffe"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1149b308cd8f0371e36cf2dd9e3e7a012adb4fbd", "comment_count": 0, "verification": {"verified": true, "reason": "valid", "signature": "-----BEGIN PGP SIGNATURE-----\n\nwsBcBAABCAAQBQJfbiwPCRBK7hj4Ov3rIwAAdHIIAC3X5AzttnJvUyJmLTy3VihQ\nebcjBd+Q+a9gc1fTi0g1fMRswDNWuURtebAH+whjdwbjvrFdYOzMXQGBxJDc4b6H\naMuG3TLizMehzOuUSNYJMxVWlQiwJlDmfUrNFfxI9cuoWNnDJgzqJTAm5QMEeWXC\n58/AfBxxK4pVrKlrZQlk7yQs1BSPcccTuxSHEs5FJ9xR/Yp8/f5vgxTLD5FGZqEo\n0fTeRVhTjfHJqgQO1NfZB1hsuHwpLHsq+dBQapbgAPMUhdKdXvTHSIFCPoB2hr1F\neEP7uCylVZKvM7V87P9kwkM3+Unwm0109IKX8F2jmpaGluvLVGxda9gaMJNuvoo=\n=bRKY\n-----END PGP SIGNATURE-----\n", "payload": "tree a513b11ecd4942979c8c7e2efb17ed5a8fbaeffe\nparent b49990cede53f27b05f6c7c3a3d4091f972d2d4a\nparent 631c6883502144fdb8ac754c9ef1f74111fd3222\nauthor Jonas Schievink <jonasschievink@gmail.com> 1601055759 +0200\ncommitter GitHub <noreply@github.com> 1601055759 +0200\n\nRollup merge of #77097 - fusion-engineering-forks:slice-ptr-range-const-fn, r=oli-obk\n\nMake [].as_[mut_]ptr_range() (unstably) const.\n\nGated behind `const_ptr_offset`, as suggested by https://github.com/rust-lang/rust/issues/65807#issuecomment-697229404\n\nThis also marks `[].as_mut_ptr()` as const, because it's used by `as_mut_ptr_range`. I gated it behind the same feature, because I figured it's not worth adding a separate tracking issue for const `as_mut_ptr`.\n"}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1149b308cd8f0371e36cf2dd9e3e7a012adb4fbd", "html_url": "https://github.com/rust-lang/rust/commit/1149b308cd8f0371e36cf2dd9e3e7a012adb4fbd", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1149b308cd8f0371e36cf2dd9e3e7a012adb4fbd/comments", "author": {"login": "jonas-schievink", "id": 1786438, "node_id": "MDQ6VXNlcjE3ODY0Mzg=", "avatar_url": "https://avatars.githubusercontent.com/u/1786438?v=4", "gravatar_id": "", "url": "https://api.github.com/users/jonas-schievink", "html_url": "https://github.com/jonas-schievink", "followers_url": "https://api.github.com/users/jonas-schievink/followers", "following_url": "https://api.github.com/users/jonas-schievink/following{/other_user}", "gists_url": "https://api.github.com/users/jonas-schievink/gists{/gist_id}", "starred_url": "https://api.github.com/users/jonas-schievink/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/jonas-schievink/subscriptions", "organizations_url": "https://api.github.com/users/jonas-schievink/orgs", "repos_url": "https://api.github.com/users/jonas-schievink/repos", "events_url": "https://api.github.com/users/jonas-schievink/events{/privacy}", "received_events_url": "https://api.github.com/users/jonas-schievink/received_events", "type": "User", "site_admin": false}, "committer": {"login": "web-flow", "id": 19864447, "node_id": "MDQ6VXNlcjE5ODY0NDQ3", "avatar_url": "https://avatars.githubusercontent.com/u/19864447?v=4", "gravatar_id": "", "url": "https://api.github.com/users/web-flow", "html_url": "https://github.com/web-flow", "followers_url": "https://api.github.com/users/web-flow/followers", "following_url": "https://api.github.com/users/web-flow/following{/other_user}", "gists_url": "https://api.github.com/users/web-flow/gists{/gist_id}", "starred_url": "https://api.github.com/users/web-flow/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/web-flow/subscriptions", "organizations_url": "https://api.github.com/users/web-flow/orgs", "repos_url": "https://api.github.com/users/web-flow/repos", "events_url": "https://api.github.com/users/web-flow/events{/privacy}", "received_events_url": "https://api.github.com/users/web-flow/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "b49990cede53f27b05f6c7c3a3d4091f972d2d4a", "url": "https://api.github.com/repos/rust-lang/rust/commits/b49990cede53f27b05f6c7c3a3d4091f972d2d4a", "html_url": "https://github.com/rust-lang/rust/commit/b49990cede53f27b05f6c7c3a3d4091f972d2d4a"}, {"sha": "631c6883502144fdb8ac754c9ef1f74111fd3222", "url": "https://api.github.com/repos/rust-lang/rust/commits/631c6883502144fdb8ac754c9ef1f74111fd3222", "html_url": "https://github.com/rust-lang/rust/commit/631c6883502144fdb8ac754c9ef1f74111fd3222"}], "stats": {"total": 9, "additions": 6, "deletions": 3}, "files": [{"sha": "12dcd6c6ba8d04087838c8f3205c71ae5c71c76e", "filename": "library/core/src/slice/mod.rs", "status": "modified", "additions": 6, "deletions": 3, "changes": 9, "blob_url": "https://github.com/rust-lang/rust/blob/1149b308cd8f0371e36cf2dd9e3e7a012adb4fbd/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1149b308cd8f0371e36cf2dd9e3e7a012adb4fbd/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/library%2Fcore%2Fsrc%2Fslice%2Fmod.rs?ref=1149b308cd8f0371e36cf2dd9e3e7a012adb4fbd", "patch": "@@ -433,8 +433,9 @@ impl<T> [T] {\n     /// assert_eq!(x, &[3, 4, 6]);\n     /// ```\n     #[stable(feature = \"rust1\", since = \"1.0.0\")]\n+    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n     #[inline]\n-    pub fn as_mut_ptr(&mut self) -> *mut T {\n+    pub const fn as_mut_ptr(&mut self) -> *mut T {\n         self as *mut [T] as *mut T\n     }\n \n@@ -469,8 +470,9 @@ impl<T> [T] {\n     ///\n     /// [`as_ptr`]: #method.as_ptr\n     #[unstable(feature = \"slice_ptr_range\", issue = \"65807\")]\n+    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n     #[inline]\n-    pub fn as_ptr_range(&self) -> Range<*const T> {\n+    pub const fn as_ptr_range(&self) -> Range<*const T> {\n         let start = self.as_ptr();\n         // SAFETY: The `add` here is safe, because:\n         //\n@@ -510,8 +512,9 @@ impl<T> [T] {\n     ///\n     /// [`as_mut_ptr`]: #method.as_mut_ptr\n     #[unstable(feature = \"slice_ptr_range\", issue = \"65807\")]\n+    #[rustc_const_unstable(feature = \"const_ptr_offset\", issue = \"71499\")]\n     #[inline]\n-    pub fn as_mut_ptr_range(&mut self) -> Range<*mut T> {\n+    pub const fn as_mut_ptr_range(&mut self) -> Range<*mut T> {\n         let start = self.as_mut_ptr();\n         // SAFETY: See as_ptr_range() above for why `add` here is safe.\n         let end = unsafe { start.add(self.len()) };"}]}