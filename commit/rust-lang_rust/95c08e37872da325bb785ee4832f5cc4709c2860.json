{"sha": "95c08e37872da325bb785ee4832f5cc4709c2860", "node_id": "MDY6Q29tbWl0NzI0NzEyOjk1YzA4ZTM3ODcyZGEzMjViYjc4NWVlNDgzMmY1Y2M0NzA5YzI4NjA=", "commit": {"author": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-07-02T16:11:24Z"}, "committer": {"name": "Bj\u00f6rn Steinbrink", "email": "bsteinbr@gmail.com", "date": "2015-07-02T16:34:54Z"}, "message": "Skip the pointless tupling/untupling of argument types in trans_closure\n\nThe tupling only happens for actual closures, same for the untupling.\nThe only code that actually sees the tupled types is some debugging\noutput for which it is actually rather confusing to have the types\ntupled, because neither the function signature in Rust nor the\nfunction signature for LLVM has them tupled.", "tree": {"sha": "8e55c39c462b6b71ae49e96d174093217130b8ec", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/8e55c39c462b6b71ae49e96d174093217130b8ec"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/95c08e37872da325bb785ee4832f5cc4709c2860", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/95c08e37872da325bb785ee4832f5cc4709c2860", "html_url": "https://github.com/rust-lang/rust/commit/95c08e37872da325bb785ee4832f5cc4709c2860", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/95c08e37872da325bb785ee4832f5cc4709c2860/comments", "author": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "committer": {"login": "dotdash", "id": 230962, "node_id": "MDQ6VXNlcjIzMDk2Mg==", "avatar_url": "https://avatars.githubusercontent.com/u/230962?v=4", "gravatar_id": "", "url": "https://api.github.com/users/dotdash", "html_url": "https://github.com/dotdash", "followers_url": "https://api.github.com/users/dotdash/followers", "following_url": "https://api.github.com/users/dotdash/following{/other_user}", "gists_url": "https://api.github.com/users/dotdash/gists{/gist_id}", "starred_url": "https://api.github.com/users/dotdash/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/dotdash/subscriptions", "organizations_url": "https://api.github.com/users/dotdash/orgs", "repos_url": "https://api.github.com/users/dotdash/repos", "events_url": "https://api.github.com/users/dotdash/events{/privacy}", "received_events_url": "https://api.github.com/users/dotdash/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "99ca63fbd88a34ce8e2b93215d9155f551a8aaad", "url": "https://api.github.com/repos/rust-lang/rust/commits/99ca63fbd88a34ce8e2b93215d9155f551a8aaad", "html_url": "https://github.com/rust-lang/rust/commit/99ca63fbd88a34ce8e2b93215d9155f551a8aaad"}], "stats": {"total": 13, "additions": 1, "deletions": 12}, "files": [{"sha": "37302ceb61393dd8e43b57a58a2cf0e3a6e935fe", "filename": "src/librustc_trans/trans/base.rs", "status": "modified", "additions": 1, "deletions": 12, "changes": 13, "blob_url": "https://github.com/rust-lang/rust/blob/95c08e37872da325bb785ee4832f5cc4709c2860/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "raw_url": "https://github.com/rust-lang/rust/raw/95c08e37872da325bb785ee4832f5cc4709c2860/src%2Flibrustc_trans%2Ftrans%2Fbase.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_trans%2Ftrans%2Fbase.rs?ref=95c08e37872da325bb785ee4832f5cc4709c2860", "patch": "@@ -1578,16 +1578,6 @@ pub fn trans_closure<'a, 'b, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n         decl.inputs.iter()\n                    .map(|arg| node_id_type(bcx, arg.id))\n                    .collect::<Vec<_>>();\n-    let monomorphized_arg_types = match closure_env {\n-        closure::ClosureEnv::NotClosure => {\n-            monomorphized_arg_types\n-        }\n-\n-        // Tuple up closure argument types for the \"rust-call\" ABI.\n-        closure::ClosureEnv::Closure(_) => {\n-            vec![ccx.tcx().mk_tup(monomorphized_arg_types)]\n-        }\n-    };\n     for monomorphized_arg_type in &monomorphized_arg_types {\n         debug!(\"trans_closure: monomorphized_arg_type: {:?}\",\n                monomorphized_arg_type);\n@@ -1600,8 +1590,7 @@ pub fn trans_closure<'a, 'b, 'tcx>(ccx: &CrateContext<'a, 'tcx>,\n             create_datums_for_fn_args_under_call_abi(bcx, arg_scope, &monomorphized_arg_types[..])\n         }\n         _ => {\n-            let arg_tys = untuple_arguments_if_necessary(ccx, &monomorphized_arg_types, abi);\n-            create_datums_for_fn_args(bcx, &arg_tys)\n+            create_datums_for_fn_args(bcx, &monomorphized_arg_types)\n         }\n     };\n "}]}