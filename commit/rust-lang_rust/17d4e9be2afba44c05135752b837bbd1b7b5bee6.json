{"sha": "17d4e9be2afba44c05135752b837bbd1b7b5bee6", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE3ZDRlOWJlMmFmYmE0NGMwNTEzNTc1MmI4MzdiYmQxYjdiNWJlZTY=", "commit": {"author": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-12-24T11:37:39Z"}, "committer": {"name": "Ariel Ben-Yehuda", "email": "ariel.byd@gmail.com", "date": "2017-12-24T12:56:52Z"}, "message": "Make killing of out-of-scope borrows a pre-statement effect\n\nFixes #46875.\nFixes #46917.\nFixes #46935.", "tree": {"sha": "976316e9e61a8a7fdf5aef6050239141cad8052a", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/976316e9e61a8a7fdf5aef6050239141cad8052a"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/17d4e9be2afba44c05135752b837bbd1b7b5bee6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/17d4e9be2afba44c05135752b837bbd1b7b5bee6", "html_url": "https://github.com/rust-lang/rust/commit/17d4e9be2afba44c05135752b837bbd1b7b5bee6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/17d4e9be2afba44c05135752b837bbd1b7b5bee6/comments", "author": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "committer": {"login": "arielb1", "id": 1830974, "node_id": "MDQ6VXNlcjE4MzA5NzQ=", "avatar_url": "https://avatars.githubusercontent.com/u/1830974?v=4", "gravatar_id": "", "url": "https://api.github.com/users/arielb1", "html_url": "https://github.com/arielb1", "followers_url": "https://api.github.com/users/arielb1/followers", "following_url": "https://api.github.com/users/arielb1/following{/other_user}", "gists_url": "https://api.github.com/users/arielb1/gists{/gist_id}", "starred_url": "https://api.github.com/users/arielb1/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/arielb1/subscriptions", "organizations_url": "https://api.github.com/users/arielb1/orgs", "repos_url": "https://api.github.com/users/arielb1/repos", "events_url": "https://api.github.com/users/arielb1/events{/privacy}", "received_events_url": "https://api.github.com/users/arielb1/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "063b998950f9fcf77630fa820b24375d45426469", "url": "https://api.github.com/repos/rust-lang/rust/commits/063b998950f9fcf77630fa820b24375d45426469", "html_url": "https://github.com/rust-lang/rust/commit/063b998950f9fcf77630fa820b24375d45426469"}], "stats": {"total": 64, "additions": 62, "deletions": 2}, "files": [{"sha": "61d6c14d6273054830834b743a444f9770d0f075", "filename": "src/librustc_mir/borrow_check/flows.rs", "status": "modified", "additions": 2, "deletions": 1, "changes": 3, "blob_url": "https://github.com/rust-lang/rust/blob/17d4e9be2afba44c05135752b837bbd1b7b5bee6/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17d4e9be2afba44c05135752b837bbd1b7b5bee6/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fflows.rs?ref=17d4e9be2afba44c05135752b837bbd1b7b5bee6", "patch": "@@ -88,7 +88,8 @@ impl<'b, 'gcx, 'tcx> fmt::Display for Flows<'b, 'gcx, 'tcx> {\n             };\n             saw_one = true;\n             let borrow_data = &self.borrows.operator().borrows()[borrow.borrow_index()];\n-            s.push_str(&format!(\"{}\", borrow_data));\n+            s.push_str(&format!(\"{}{}\", borrow_data,\n+                                if borrow.is_activation() { \"@active\" } else { \"\" }));\n         });\n         s.push_str(\"] \");\n "}, {"sha": "2fe9bf064e3c47974dc0cd7f482cdd9c1e2f47f7", "filename": "src/librustc_mir/borrow_check/mod.rs", "status": "modified", "additions": 2, "deletions": 0, "changes": 2, "blob_url": "https://github.com/rust-lang/rust/blob/17d4e9be2afba44c05135752b837bbd1b7b5bee6/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17d4e9be2afba44c05135752b837bbd1b7b5bee6/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fborrow_check%2Fmod.rs?ref=17d4e9be2afba44c05135752b837bbd1b7b5bee6", "patch": "@@ -2011,6 +2011,8 @@ impl<'cx, 'gcx, 'tcx> MirBorrowckCtxt<'cx, 'gcx, 'tcx> {\n             let borrowed = &data[i.borrow_index()];\n \n             if self.places_conflict(&borrowed.borrowed_place, place, access) {\n+                debug!(\"each_borrow_involving_path: {:?} @ {:?} vs. {:?}/{:?}\",\n+                       i, borrowed, place, access);\n                 let ctrl = op(self, i, borrowed);\n                 if ctrl == Control::Break {\n                     return;"}, {"sha": "44d4fdf250f1a5964d410339ffd256efbcfb786f", "filename": "src/librustc_mir/dataflow/impls/borrows.rs", "status": "modified", "additions": 28, "deletions": 0, "changes": 28, "blob_url": "https://github.com/rust-lang/rust/blob/17d4e9be2afba44c05135752b837bbd1b7b5bee6/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17d4e9be2afba44c05135752b837bbd1b7b5bee6/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_mir%2Fdataflow%2Fimpls%2Fborrows.rs?ref=17d4e9be2afba44c05135752b837bbd1b7b5bee6", "patch": "@@ -635,13 +635,27 @@ impl<'a, 'gcx, 'tcx> BitDenotation for Reservations<'a, 'gcx, 'tcx> {\n         // `_sets`.\n     }\n \n+    fn before_statement_effect(&self,\n+                               sets: &mut BlockSets<ReserveOrActivateIndex>,\n+                               location: Location) {\n+        debug!(\"Reservations::before_statement_effect sets: {:?} location: {:?}\", sets, location);\n+        self.0.kill_loans_out_of_scope_at_location(sets, location, false);\n+    }\n+\n     fn statement_effect(&self,\n                         sets: &mut BlockSets<ReserveOrActivateIndex>,\n                         location: Location) {\n         debug!(\"Reservations::statement_effect sets: {:?} location: {:?}\", sets, location);\n         self.0.statement_effect_on_borrows(sets, location, false);\n     }\n \n+    fn before_terminator_effect(&self,\n+                                sets: &mut BlockSets<ReserveOrActivateIndex>,\n+                                location: Location) {\n+        debug!(\"Reservations::before_terminator_effect sets: {:?} location: {:?}\", sets, location);\n+        self.0.kill_loans_out_of_scope_at_location(sets, location, false);\n+    }\n+\n     fn terminator_effect(&self,\n                          sets: &mut BlockSets<ReserveOrActivateIndex>,\n                          location: Location) {\n@@ -682,13 +696,27 @@ impl<'a, 'gcx, 'tcx> BitDenotation for ActiveBorrows<'a, 'gcx, 'tcx> {\n         // `_sets`.\n     }\n \n+    fn before_statement_effect(&self,\n+                               sets: &mut BlockSets<ReserveOrActivateIndex>,\n+                               location: Location) {\n+        debug!(\"ActiveBorrows::before_statement_effect sets: {:?} location: {:?}\", sets, location);\n+        self.0.kill_loans_out_of_scope_at_location(sets, location, true);\n+    }\n+\n     fn statement_effect(&self,\n                         sets: &mut BlockSets<ReserveOrActivateIndex>,\n                         location: Location) {\n         debug!(\"ActiveBorrows::statement_effect sets: {:?} location: {:?}\", sets, location);\n         self.0.statement_effect_on_borrows(sets, location, true);\n     }\n \n+    fn before_terminator_effect(&self,\n+                                sets: &mut BlockSets<ReserveOrActivateIndex>,\n+                                location: Location) {\n+        debug!(\"ActiveBorrows::before_terminator_effect sets: {:?} location: {:?}\", sets, location);\n+        self.0.kill_loans_out_of_scope_at_location(sets, location, true);\n+    }\n+\n     fn terminator_effect(&self,\n                          sets: &mut BlockSets<ReserveOrActivateIndex>,\n                          location: Location) {"}, {"sha": "a9797e4d215a5da45a7df48e9fb6d341c49cf34d", "filename": "src/test/compile-fail/borrowck/two-phase-activation-sharing-interference.rs", "status": "modified", "additions": 0, "deletions": 1, "changes": 1, "blob_url": "https://github.com/rust-lang/rust/blob/17d4e9be2afba44c05135752b837bbd1b7b5bee6/src%2Ftest%2Fcompile-fail%2Fborrowck%2Ftwo-phase-activation-sharing-interference.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17d4e9be2afba44c05135752b837bbd1b7b5bee6/src%2Ftest%2Fcompile-fail%2Fborrowck%2Ftwo-phase-activation-sharing-interference.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fcompile-fail%2Fborrowck%2Ftwo-phase-activation-sharing-interference.rs?ref=17d4e9be2afba44c05135752b837bbd1b7b5bee6", "patch": "@@ -56,7 +56,6 @@ fn should_also_eventually_be_ok_with_nll() {\n     let _z = &x;\n     *y += 1;\n     //[lxl]~^  ERROR cannot borrow `x` as mutable because it is also borrowed as immutable\n-    //[nll]~^^ ERROR cannot borrow `x` as mutable because it is also borrowed as immutable\n }\n \n fn main() { }"}, {"sha": "47d69fe8e976c60acdd8356acbd9f95010e81eb2", "filename": "src/test/ui/nll/borrow-use-issue-46875.rs", "status": "added", "additions": 30, "deletions": 0, "changes": 30, "blob_url": "https://github.com/rust-lang/rust/blob/17d4e9be2afba44c05135752b837bbd1b7b5bee6/src%2Ftest%2Fui%2Fnll%2Fborrow-use-issue-46875.rs", "raw_url": "https://github.com/rust-lang/rust/raw/17d4e9be2afba44c05135752b837bbd1b7b5bee6/src%2Ftest%2Fui%2Fnll%2Fborrow-use-issue-46875.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fnll%2Fborrow-use-issue-46875.rs?ref=17d4e9be2afba44c05135752b837bbd1b7b5bee6", "patch": "@@ -0,0 +1,30 @@\n+// Copyright 2017 The Rust Project Developers. See the COPYRIGHT\n+// file at the top-level directory of this distribution and at\n+// http://rust-lang.org/COPYRIGHT.\n+//\n+// Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or\n+// http://www.apache.org/licenses/LICENSE-2.0> or the MIT license\n+// <LICENSE-MIT or http://opensource.org/licenses/MIT>, at your\n+// option. This file may not be copied, modified, or distributed\n+// except according to those terms.\n+\n+#![feature(nll)]\n+\n+// run-pass\n+\n+fn vec() {\n+    let mut _x = vec!['c'];\n+    let _y = &_x;\n+    _x = Vec::new();\n+}\n+\n+fn int() {\n+    let mut _x = 5;\n+    let _y = &_x;\n+    _x = 7;\n+}\n+\n+fn main() {\n+    vec();\n+    int();\n+}"}]}