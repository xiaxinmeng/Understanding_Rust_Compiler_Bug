{"sha": "1eeedbd00865fbc8c2650b8e2feba0b6e7f290dc", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZWVkYmQwMDg2NWZiYzhjMjY1MGI4ZTJmZWJhMGI2ZTdmMjkwZGM=", "commit": {"author": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-01T01:45:24Z"}, "committer": {"name": "Patrick Walton", "email": "pcwalton@mimiga.net", "date": "2011-04-01T01:45:24Z"}, "message": "rustc: Make tag_ty_params() and substitute_ty_params() take def ids instead of ty_params, and to check in external crates", "tree": {"sha": "e48d4bf8258c1c27d406031157529013aad37f18", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/e48d4bf8258c1c27d406031157529013aad37f18"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1eeedbd00865fbc8c2650b8e2feba0b6e7f290dc", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1eeedbd00865fbc8c2650b8e2feba0b6e7f290dc", "html_url": "https://github.com/rust-lang/rust/commit/1eeedbd00865fbc8c2650b8e2feba0b6e7f290dc", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1eeedbd00865fbc8c2650b8e2feba0b6e7f290dc/comments", "author": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "committer": {"login": "pcwalton", "id": 157897, "node_id": "MDQ6VXNlcjE1Nzg5Nw==", "avatar_url": "https://avatars.githubusercontent.com/u/157897?v=4", "gravatar_id": "", "url": "https://api.github.com/users/pcwalton", "html_url": "https://github.com/pcwalton", "followers_url": "https://api.github.com/users/pcwalton/followers", "following_url": "https://api.github.com/users/pcwalton/following{/other_user}", "gists_url": "https://api.github.com/users/pcwalton/gists{/gist_id}", "starred_url": "https://api.github.com/users/pcwalton/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/pcwalton/subscriptions", "organizations_url": "https://api.github.com/users/pcwalton/orgs", "repos_url": "https://api.github.com/users/pcwalton/repos", "events_url": "https://api.github.com/users/pcwalton/events{/privacy}", "received_events_url": "https://api.github.com/users/pcwalton/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "bdea34387945aee7d18981a8c59f5b04beb560fc", "url": "https://api.github.com/repos/rust-lang/rust/commits/bdea34387945aee7d18981a8c59f5b04beb560fc", "html_url": "https://github.com/rust-lang/rust/commit/bdea34387945aee7d18981a8c59f5b04beb560fc"}], "stats": {"total": 16, "additions": 6, "deletions": 10}, "files": [{"sha": "3c0df9bdf17c1a43c221332c5db1f016a47d5808", "filename": "src/comp/middle/trans.rs", "status": "modified", "additions": 3, "deletions": 7, "changes": 10, "blob_url": "https://github.com/rust-lang/rust/blob/1eeedbd00865fbc8c2650b8e2feba0b6e7f290dc/src%2Fcomp%2Fmiddle%2Ftrans.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eeedbd00865fbc8c2650b8e2feba0b6e7f290dc/src%2Fcomp%2Fmiddle%2Ftrans.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Ftrans.rs?ref=1eeedbd00865fbc8c2650b8e2feba0b6e7f290dc", "patch": "@@ -1103,7 +1103,7 @@ fn static_size_of_tag(@crate_ctxt cx, @ty.t t) -> uint {\n     }\n \n     // Pull the type parameters out of the corresponding tag item.\n-    let vec[ast.ty_param] ty_params = tag_ty_params(cx, tid);\n+    let vec[ast.def_id] ty_params = tag_ty_params(cx, tid);\n \n     // Compute max(variant sizes).\n     auto max_size = 0u;\n@@ -1905,12 +1905,8 @@ fn variant_types(@crate_ctxt cx, &ast.variant v) -> vec[@ty.t] {\n }\n \n // Returns the type parameters of a tag.\n-fn tag_ty_params(@crate_ctxt cx, ast.def_id id) -> vec[ast.ty_param] {\n-    check (cx.items.contains_key(id));\n-    alt (cx.items.get(id).node) {\n-        case (ast.item_tag(_, _, ?tps, _)) { ret tps; }\n-    }\n-    fail;   // not reached\n+fn tag_ty_params(@crate_ctxt cx, ast.def_id id) -> vec[ast.def_id] {\n+    ret ty.lookup_generic_item_type(cx.sess, cx.type_cache, id)._0;\n }\n \n // Returns the variants in a tag."}, {"sha": "00d4b0b3d4f7c9a4db8556ed6cc2cc91dc679d69", "filename": "src/comp/middle/ty.rs", "status": "modified", "additions": 3, "deletions": 3, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/1eeedbd00865fbc8c2650b8e2feba0b6e7f290dc/src%2Fcomp%2Fmiddle%2Fty.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1eeedbd00865fbc8c2650b8e2feba0b6e7f290dc/src%2Fcomp%2Fmiddle%2Fty.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Fcomp%2Fmiddle%2Fty.rs?ref=1eeedbd00865fbc8c2650b8e2feba0b6e7f290dc", "patch": "@@ -1664,15 +1664,15 @@ fn replace_type_params(@t typ, hashmap[ast.def_id,@t] param_map) -> @t {\n // Substitutes the type parameters specified by @ty_params with the\n // corresponding types in @bound in the given type. The two vectors must have\n // the same length.\n-fn substitute_ty_params(vec[ast.ty_param] ty_params, vec[@t] bound, @t ty)\n+fn substitute_ty_params(vec[ast.def_id] ty_params, vec[@t] bound, @t ty)\n         -> @t {\n-    auto ty_param_len = _vec.len[ast.ty_param](ty_params);\n+    auto ty_param_len = _vec.len[ast.def_id](ty_params);\n     check (ty_param_len == _vec.len[@t](bound));\n \n     auto bindings = common.new_def_hash[@t]();\n     auto i = 0u;\n     while (i < ty_param_len) {\n-        bindings.insert(ty_params.(i).id, bound.(i));\n+        bindings.insert(ty_params.(i), bound.(i));\n         i += 1u;\n     }\n "}]}