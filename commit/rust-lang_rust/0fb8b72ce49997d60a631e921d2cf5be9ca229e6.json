{"sha": "0fb8b72ce49997d60a631e921d2cf5be9ca229e6", "node_id": "C_kwDOAAsO6NoAKDBmYjhiNzJjZTQ5OTk3ZDYwYTYzMWU5MjFkMmNmNWJlOWNhMjI5ZTY", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-06T18:15:56Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2023-01-06T18:15:56Z"}, "message": "Auto merge of #106501 - cjgillot:resolved-elided-apit, r=compiler-errors\n\nCorrect detection of elided lifetimes in impl-trait.\n\nFixes https://github.com/rust-lang/rust/issues/106338\n\nr? `@compiler-errors`\ncc `@pnkfelix`", "tree": {"sha": "c56824419fa9e82b7a13f357dfd58ce7765248ba", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/c56824419fa9e82b7a13f357dfd58ce7765248ba"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/0fb8b72ce49997d60a631e921d2cf5be9ca229e6", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/0fb8b72ce49997d60a631e921d2cf5be9ca229e6", "html_url": "https://github.com/rust-lang/rust/commit/0fb8b72ce49997d60a631e921d2cf5be9ca229e6", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/0fb8b72ce49997d60a631e921d2cf5be9ca229e6/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "afe8c4537c9009a251a31e8f022b7795fc305d4f", "url": "https://api.github.com/repos/rust-lang/rust/commits/afe8c4537c9009a251a31e8f022b7795fc305d4f", "html_url": "https://github.com/rust-lang/rust/commit/afe8c4537c9009a251a31e8f022b7795fc305d4f"}, {"sha": "de1859fc324a323dfd0033d666c64f82ff2f130f", "url": "https://api.github.com/repos/rust-lang/rust/commits/de1859fc324a323dfd0033d666c64f82ff2f130f", "html_url": "https://github.com/rust-lang/rust/commit/de1859fc324a323dfd0033d666c64f82ff2f130f"}], "stats": {"total": 11, "additions": 9, "deletions": 2}, "files": [{"sha": "35f10dc873745f59d4355f1ebe675890f468f0b7", "filename": "compiler/rustc_hir_analysis/src/collect/lifetimes.rs", "status": "modified", "additions": 4, "deletions": 2, "changes": 6, "blob_url": "https://github.com/rust-lang/rust/blob/0fb8b72ce49997d60a631e921d2cf5be9ca229e6/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Flifetimes.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fb8b72ce49997d60a631e921d2cf5be9ca229e6/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Flifetimes.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/compiler%2Frustc_hir_analysis%2Fsrc%2Fcollect%2Flifetimes.rs?ref=0fb8b72ce49997d60a631e921d2cf5be9ca229e6", "patch": "@@ -1195,8 +1195,10 @@ impl<'a, 'tcx> LifetimeContext<'a, 'tcx> {\n                     // Fresh lifetimes in APIT used to be allowed in async fns and forbidden in\n                     // regular fns.\n                     if let Some(hir::PredicateOrigin::ImplTrait) = where_bound_origin\n-                        && let hir::LifetimeName::Param(_) = lifetime_ref.res\n-                        && lifetime_ref.is_anonymous()\n+                        && let hir::LifetimeName::Param(param_id) = lifetime_ref.res\n+                        && let Some(generics) = self.tcx.hir().get_generics(self.tcx.local_parent(param_id))\n+                        && let Some(param) = generics.params.iter().find(|p| p.def_id == param_id)\n+                        && param.is_elided_lifetime()\n                         && let hir::IsAsync::NotAsync = self.tcx.asyncness(lifetime_ref.hir_id.owner.def_id)\n                         && !self.tcx.features().anonymous_lifetime_in_impl_trait\n                     {"}, {"sha": "a1a51c4814e8fc980918e2c5735859d52f39d0a8", "filename": "src/test/ui/suggestions/impl-trait-missing-lifetime-gated.rs", "status": "modified", "additions": 5, "deletions": 0, "changes": 5, "blob_url": "https://github.com/rust-lang/rust/blob/0fb8b72ce49997d60a631e921d2cf5be9ca229e6/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-missing-lifetime-gated.rs", "raw_url": "https://github.com/rust-lang/rust/raw/0fb8b72ce49997d60a631e921d2cf5be9ca229e6/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-missing-lifetime-gated.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Ftest%2Fui%2Fsuggestions%2Fimpl-trait-missing-lifetime-gated.rs?ref=0fb8b72ce49997d60a631e921d2cf5be9ca229e6", "patch": "@@ -60,4 +60,9 @@ mod in_path {\n     //~| ERROR missing lifetime specifier\n }\n \n+// This must not err, as the `&` actually resolves to `'a`.\n+fn resolved_anonymous<'a, T>(f: impl Fn(&'a str) -> &T) {\n+    f(\"f\")\n+}\n+\n fn main() {}"}]}