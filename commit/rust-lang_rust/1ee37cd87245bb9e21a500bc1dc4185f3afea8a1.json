{"sha": "1ee37cd87245bb9e21a500bc1dc4185f3afea8a1", "node_id": "MDY6Q29tbWl0NzI0NzEyOjFlZTM3Y2Q4NzI0NWJiOWUyMWE1MDBiYzFkYzQxODVmM2FmZWE4YTE=", "commit": {"author": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-09T23:25:34Z"}, "committer": {"name": "Mark Rousskov", "email": "mark.simulacrum@gmail.com", "date": "2019-08-09T23:25:34Z"}, "message": "Cleanup historical stability comments\n\nThese weren't removed by ccbcc720a679ae76155a8 most likely by accident,\nlet's clean them up now.", "tree": {"sha": "1b6c160688f4feaabe6652759ed73a8c26b9e1af", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/1b6c160688f4feaabe6652759ed73a8c26b9e1af"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/1ee37cd87245bb9e21a500bc1dc4185f3afea8a1", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/1ee37cd87245bb9e21a500bc1dc4185f3afea8a1", "html_url": "https://github.com/rust-lang/rust/commit/1ee37cd87245bb9e21a500bc1dc4185f3afea8a1", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/1ee37cd87245bb9e21a500bc1dc4185f3afea8a1/comments", "author": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "committer": {"login": "Mark-Simulacrum", "id": 5047365, "node_id": "MDQ6VXNlcjUwNDczNjU=", "avatar_url": "https://avatars.githubusercontent.com/u/5047365?v=4", "gravatar_id": "", "url": "https://api.github.com/users/Mark-Simulacrum", "html_url": "https://github.com/Mark-Simulacrum", "followers_url": "https://api.github.com/users/Mark-Simulacrum/followers", "following_url": "https://api.github.com/users/Mark-Simulacrum/following{/other_user}", "gists_url": "https://api.github.com/users/Mark-Simulacrum/gists{/gist_id}", "starred_url": "https://api.github.com/users/Mark-Simulacrum/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/Mark-Simulacrum/subscriptions", "organizations_url": "https://api.github.com/users/Mark-Simulacrum/orgs", "repos_url": "https://api.github.com/users/Mark-Simulacrum/repos", "events_url": "https://api.github.com/users/Mark-Simulacrum/events{/privacy}", "received_events_url": "https://api.github.com/users/Mark-Simulacrum/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "534b42394d743511db1335d5ed08d507ab7c6e73", "url": "https://api.github.com/repos/rust-lang/rust/commits/534b42394d743511db1335d5ed08d507ab7c6e73", "html_url": "https://github.com/rust-lang/rust/commit/534b42394d743511db1335d5ed08d507ab7c6e73"}], "stats": {"total": 21, "additions": 6, "deletions": 15}, "files": [{"sha": "e9d85a53d1e42d03230d6d7e3675cee78771fa34", "filename": "src/librustc_driver/lib.rs", "status": "modified", "additions": 6, "deletions": 15, "changes": 21, "blob_url": "https://github.com/rust-lang/rust/blob/1ee37cd87245bb9e21a500bc1dc4185f3afea8a1/src%2Flibrustc_driver%2Flib.rs", "raw_url": "https://github.com/rust-lang/rust/raw/1ee37cd87245bb9e21a500bc1dc4185f3afea8a1/src%2Flibrustc_driver%2Flib.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibrustc_driver%2Flib.rs?ref=1ee37cd87245bb9e21a500bc1dc4185f3afea8a1", "patch": "@@ -957,14 +957,11 @@ fn print_flag_list<T>(cmdline_opt: &str,\n /// otherwise returns `None`.\n ///\n /// The compiler's handling of options is a little complicated as it ties into\n-/// our stability story, and it's even *more* complicated by historical\n-/// accidents. The current intention of each compiler option is to have one of\n-/// three modes:\n+/// our stability story. The current intention of each compiler option is to\n+/// have one of two modes:\n ///\n /// 1. An option is stable and can be used everywhere.\n-/// 2. An option is unstable, but was historically allowed on the stable\n-///    channel.\n-/// 3. An option is unstable, and can only be used on nightly.\n+/// 2. An option is unstable, and can only be used on nightly.\n ///\n /// Like unstable library and language features, however, unstable options have\n /// always required a form of \"opt in\" to indicate that you're using them. This\n@@ -1007,19 +1004,13 @@ pub fn handle_options(args: &[String]) -> Option<getopts::Matches> {\n     //   this option that was passed.\n     // * If we're a nightly compiler, then unstable options are now unlocked, so\n     //   we're good to go.\n-    // * Otherwise, if we're a truly unstable option then we generate an error\n+    // * Otherwise, if we're an unstable option then we generate an error\n     //   (unstable option being used on stable)\n-    // * If we're a historically stable-but-should-be-unstable option then we\n-    //   emit a warning that we're going to turn this into an error soon.\n     nightly_options::check_nightly_options(&matches, &config::rustc_optgroups());\n \n     if matches.opt_present(\"h\") || matches.opt_present(\"help\") {\n-        // Only show unstable options in --help if we *really* accept unstable\n-        // options, which catches the case where we got `-Z unstable-options` on\n-        // the stable channel of Rust which was accidentally allowed\n-        // historically.\n-        usage(matches.opt_present(\"verbose\"),\n-              nightly_options::is_unstable_enabled(&matches));\n+        // Only show unstable options in --help if we accept unstable options.\n+        usage(matches.opt_present(\"verbose\"), nightly_options::is_unstable_enabled(&matches));\n         return None;\n     }\n "}]}