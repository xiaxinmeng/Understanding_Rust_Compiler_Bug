{"sha": "5c56887903bec6e1a638f8bdcfe2f22ec0fd000a", "node_id": "MDY6Q29tbWl0NzI0NzEyOjVjNTY4ODc5MDNiZWM2ZTFhNjM4ZjhiZGNmZTJmMjJlYzBmZDAwMGE=", "commit": {"author": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-10T23:33:31Z"}, "committer": {"name": "bors", "email": "bors@rust-lang.org", "date": "2015-09-10T23:33:31Z"}, "message": "Auto merge of #28331 - semarie:openbsd-configure-egcc, r=alexcrichton\n\nunder OpenBSD, it could be have present multiples versions of gcc compiler:\r\n  - gcc-4.2 (with patchs) : c/c++ compiler present in `/usr/bin`. It is unusable to build recent LLVM (so rustc too).\r\n  - gcc/g++ -4.9 : c/c++ compiler, installed as third-party with \"ports\" mechanism. The compiler is installed in `/usr/local` as `egcc` (and `eg++`).\r\n\r\nthis PR adds probing for `egcc` for `CFG_GCC`, if the first probed `gcc` is too old. It will set `CC` and `CXX` too, in order to pass the variables to LLVM configure if builded.\r\n\r\nplease note this PR is a first step in order to build rustc under OpenBSD with unpatched tree.\r\n\r\nr? @alexcrichton\r\n\r\ncc @brson @dhuseby", "tree": {"sha": "01c5d81080be2537eb4f880c4a38e76ed65b7925", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/01c5d81080be2537eb4f880c4a38e76ed65b7925"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/5c56887903bec6e1a638f8bdcfe2f22ec0fd000a", "comment_count": 1, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/5c56887903bec6e1a638f8bdcfe2f22ec0fd000a", "html_url": "https://github.com/rust-lang/rust/commit/5c56887903bec6e1a638f8bdcfe2f22ec0fd000a", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/5c56887903bec6e1a638f8bdcfe2f22ec0fd000a/comments", "author": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "committer": {"login": "bors", "id": 3372342, "node_id": "MDQ6VXNlcjMzNzIzNDI=", "avatar_url": "https://avatars.githubusercontent.com/u/3372342?v=4", "gravatar_id": "", "url": "https://api.github.com/users/bors", "html_url": "https://github.com/bors", "followers_url": "https://api.github.com/users/bors/followers", "following_url": "https://api.github.com/users/bors/following{/other_user}", "gists_url": "https://api.github.com/users/bors/gists{/gist_id}", "starred_url": "https://api.github.com/users/bors/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/bors/subscriptions", "organizations_url": "https://api.github.com/users/bors/orgs", "repos_url": "https://api.github.com/users/bors/repos", "events_url": "https://api.github.com/users/bors/events{/privacy}", "received_events_url": "https://api.github.com/users/bors/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "5ff55943a38f2b581bd4ae5d521f57defd1a8b29", "url": "https://api.github.com/repos/rust-lang/rust/commits/5ff55943a38f2b581bd4ae5d521f57defd1a8b29", "html_url": "https://github.com/rust-lang/rust/commit/5ff55943a38f2b581bd4ae5d521f57defd1a8b29"}, {"sha": "9ac36f46650d0f4d92b5111688d2fb84a50d591f", "url": "https://api.github.com/repos/rust-lang/rust/commits/9ac36f46650d0f4d92b5111688d2fb84a50d591f", "html_url": "https://github.com/rust-lang/rust/commit/9ac36f46650d0f4d92b5111688d2fb84a50d591f"}], "stats": {"total": 22, "additions": 22, "deletions": 0}, "files": [{"sha": "3cc40cf11260654325e44d6883cc1997031d7808", "filename": "configure", "status": "modified", "additions": 22, "deletions": 0, "changes": 22, "blob_url": "https://github.com/rust-lang/rust/blob/5c56887903bec6e1a638f8bdcfe2f22ec0fd000a/configure", "raw_url": "https://github.com/rust-lang/rust/raw/5c56887903bec6e1a638f8bdcfe2f22ec0fd000a/configure", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/configure?ref=5c56887903bec6e1a638f8bdcfe2f22ec0fd000a", "patch": "@@ -885,6 +885,28 @@ then\n     CFG_DISABLE_JEMALLOC=1\n fi\n \n+# default gcc version under OpenBSD maybe too old, try using egcc, which is a\n+# gcc version from ports\n+if [ $CFG_OSTYPE = unknown-openbsd ]\n+then\n+    if [ $(\"$CFG_GCC\" --version 2>&1 | grep -c ' 4\\.[0-6]') -ne 0 ]; then\n+        step_msg \"older GCC found, try with egcc instead\"\n+\n+        # probe again but using egcc\n+        probe CFG_GCC egcc\n+\n+        # and use egcc/eg++ for CC/CXX too if it was found\n+        # (but user setting has priority)\n+        if [ -n \"$CFG_GCC\" ]; then\n+            CC=\"${CC:-egcc}\"\n+            CXX=\"${CXX:-eg++}\"\n+        fi\n+    fi\n+\n+    step_msg \"on OpenBSD, disabling jemalloc\"\n+    CFG_DISABLE_JEMALLOC=1\n+fi\n+\n # OS X 10.9, gcc is actually clang. This can cause some confusion in the build\n # system, so if we find that gcc is clang, we should just use clang directly.\n if [ $CFG_OSTYPE = apple-darwin -a -z \"$CFG_ENABLE_CLANG\" ]"}]}