{"sha": "167b510b7c59ad4d87993059401b94a5e1d1f8ff", "node_id": "MDY6Q29tbWl0NzI0NzEyOjE2N2I1MTBiN2M1OWFkNGQ4Nzk5MzA1OTQwMWI5NGE1ZTFkMWY4ZmY=", "commit": {"author": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-01-18T16:46:53Z"}, "committer": {"name": "Andrea Canciani", "email": "ranma42@gmail.com", "date": "2016-04-20T08:33:27Z"}, "message": "Implement `last` for `EscapeUnicode`\n\nPart of #24214.", "tree": {"sha": "979cc6fdb8384ddbf2b49aed34301f0b7b0905da", "url": "https://api.github.com/repos/rust-lang/rust/git/trees/979cc6fdb8384ddbf2b49aed34301f0b7b0905da"}, "url": "https://api.github.com/repos/rust-lang/rust/git/commits/167b510b7c59ad4d87993059401b94a5e1d1f8ff", "comment_count": 0, "verification": {"verified": false, "reason": "unsigned", "signature": null, "payload": null}}, "url": "https://api.github.com/repos/rust-lang/rust/commits/167b510b7c59ad4d87993059401b94a5e1d1f8ff", "html_url": "https://github.com/rust-lang/rust/commit/167b510b7c59ad4d87993059401b94a5e1d1f8ff", "comments_url": "https://api.github.com/repos/rust-lang/rust/commits/167b510b7c59ad4d87993059401b94a5e1d1f8ff/comments", "author": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "committer": {"login": "ranma42", "id": 1506030, "node_id": "MDQ6VXNlcjE1MDYwMzA=", "avatar_url": "https://avatars.githubusercontent.com/u/1506030?v=4", "gravatar_id": "", "url": "https://api.github.com/users/ranma42", "html_url": "https://github.com/ranma42", "followers_url": "https://api.github.com/users/ranma42/followers", "following_url": "https://api.github.com/users/ranma42/following{/other_user}", "gists_url": "https://api.github.com/users/ranma42/gists{/gist_id}", "starred_url": "https://api.github.com/users/ranma42/starred{/owner}{/repo}", "subscriptions_url": "https://api.github.com/users/ranma42/subscriptions", "organizations_url": "https://api.github.com/users/ranma42/orgs", "repos_url": "https://api.github.com/users/ranma42/repos", "events_url": "https://api.github.com/users/ranma42/events{/privacy}", "received_events_url": "https://api.github.com/users/ranma42/received_events", "type": "User", "site_admin": false}, "parents": [{"sha": "3dd88f60de01774b9f9e29c0289a874a5dcaa1ce", "url": "https://api.github.com/repos/rust-lang/rust/commits/3dd88f60de01774b9f9e29c0289a874a5dcaa1ce", "html_url": "https://github.com/rust-lang/rust/commit/3dd88f60de01774b9f9e29c0289a874a5dcaa1ce"}], "stats": {"total": 12, "additions": 12, "deletions": 0}, "files": [{"sha": "65b9a27bb68e2a47da6b7b375a125221d9de1f5a", "filename": "src/libcore/char.rs", "status": "modified", "additions": 12, "deletions": 0, "changes": 12, "blob_url": "https://github.com/rust-lang/rust/blob/167b510b7c59ad4d87993059401b94a5e1d1f8ff/src%2Flibcore%2Fchar.rs", "raw_url": "https://github.com/rust-lang/rust/raw/167b510b7c59ad4d87993059401b94a5e1d1f8ff/src%2Flibcore%2Fchar.rs", "contents_url": "https://api.github.com/repos/rust-lang/rust/contents/src%2Flibcore%2Fchar.rs?ref=167b510b7c59ad4d87993059401b94a5e1d1f8ff", "patch": "@@ -471,6 +471,18 @@ impl Iterator for EscapeUnicode {\n         let n = n + self.hex_digit_idx;\n         (n, Some(n))\n     }\n+\n+    fn last(self) -> Option<char> {\n+        match self.state {\n+            EscapeUnicodeState::Done => None,\n+\n+            EscapeUnicodeState::RightBrace |\n+            EscapeUnicodeState::Value |\n+            EscapeUnicodeState::LeftBrace |\n+            EscapeUnicodeState::Type |\n+            EscapeUnicodeState::Backslash => Some('}'),\n+        }\n+    }\n }\n \n /// An iterator that yields the literal escape code of a `char`."}]}